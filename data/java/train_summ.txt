<BEG> return the first value of this queue <SEG> null if empty <END>
<BEG> return the maximum capacity of this queue <END>
<BEG> removes the first element of this queue if any return the value of the first element of the queue <SEG> null if empty <END>
<BEG> removes the first element of this queue if any return the ` node ` of the first element of the queue <SEG> null if empty <END>
<BEG> query the queue tail for the next element without dequeuing it <END>
<BEG> add an element to the head of the queue <END>
<BEG> add an element to the head of the queue <SEG> provide the queue node to be use <END>
<BEG> query the queue whether it be empty right now <END>
<BEG> this method return an upper bound on the queue size at the time it start execute <END>
<BEG> pull one item from the queue ’ s tail if there be one <END>
<BEG> pull one item from the queue <SEG> return it within a queue node <END>
<BEG> notifies about failed bind operation param oldvalue the already bound value param failedvalue the value attempt to be bind param uniquebind flag indicating bindunique method call <END>
<BEG> notifies about failed binderror operation param oldvalue the already bound value param failederror the error attempt to be bind <END>
<BEG> notifies all listener about failed bind operation param oldvalue the already bound value param failedvalue the value attempt to be bind param uniquebind flag indicating bindunique method call <END>
<BEG> notifies all listener about failed binderror operation param oldvalue the already bound value param failederror the error attempt to be bind <END>
<BEG> detects <SEG> whether the channel at the give index be guard or not <END>
<BEG> causes the current thread to wait until the latch have count down to zero <SEG> unless the thread be { linkplain thread # interrupt interrupt } <END>
<BEG> causes the current thread to wait until the latch have count down to zero <SEG> unless the thread be { linkplain thread # interrupt interrupt } <SEG> or the specify waiting time elapses <END>
<BEG> returns the number of element select use bound or filter restriction <END>
<BEG> returns true if there be no element <END>
<BEG> returns a comparator for comparable object <END>
<BEG> returns a reducer return the maximum of two comparable element <SEG> treat null a less than any non-null element <END>
<BEG> returns a comparator that cast it argument a comparable on each comparison <SEG> throw classcastexception on failure <END>
<BEG> returns a reducer return maximum of two value <SEG> or { code null } if both argument be null <SEG> and that cast it argument a comparable on each comparison <SEG> throw classcastexception on failure <END>
<BEG> returns a comparator for double rely on natural ordering <END>
<BEG> a reducer return the minimum of two long element <SEG> use natural comparator <END>
<BEG> returns a predicate evaluate to true if it argument be non-null <END>
<BEG> returns a predicate evaluate to true if it argument be an instance of see { link class # isinstance } the give type class <END>
<BEG> returns a predicate evaluate to true if it argument be assignable from see { link class # isassignablefrom } the give type class <END>
<BEG> returns a generator produce uniform random value between zero and one <SEG> with the same property a { link java util random # nextdouble } <END>
<BEG> returns a generator produce uniform random value between zero and the give bound <SEG> with the same property a { link java util random # nextdouble } <END>
<BEG> returns a generator produce uniform random value between the give least value inclusive and bound exclusive <END>
<BEG> returns a generator produce uniform random value with the same property a { link java util random # nextint int } <END>
<BEG> returns a predicate evaluate to true if the first argument { code equal } the second <END>
<BEG> returns a predicate evaluate to true if the first argument { code ! equal } the second <END>
<BEG> returns a new map use integer key and value <END>
<BEG> returns the segment for traverse table for key with give hash <END>
<BEG> returns the segment for possibly insert into the table associate with give hash <SEG> construct it if necessary <END>
<BEG> returns node for key <SEG> or null if none <END>
<BEG> returns { code true } if this map contain a key equivalent to the give key with respect to this map 's key equivalence <END>
<BEG> returns the value associate with a key equivalent to the give key with respect to this map 's key equivalence <SEG> or { code null } if no such mapping exists <END>
<BEG> shared implementation for put <SEG> putifabsent <END>
<BEG> maps the specify key to the specify value in this map <END>
<BEG>  return the previous value associate with the specify key <SEG> or { code null } if there be no mapping for the key throw nullpointerexception if the specify key or value be null <END>
<BEG> copies all of the mapping from the specify map to this one <END>
<BEG>  throw nullpointerexception if any of the argument be null <END>
<BEG>  throw nullpointerexception if the specify key be null <END>
<BEG> returns { code true } if this map contain no key-value mapping <END>
<BEG> returns { code true } if this map map one or more key to a value equivalent to the give value with respect to this map 's value equivalence <END>
<BEG> removes all of the mapping from this map <END>
<BEG> if the specify key be not already associate with a value <SEG> compute it value use the give mappingfunction <SEG> and if non-null <SEG> enter it into the map <END>
<BEG> updates the mapping for the give key with the result of the give remappingfunction <END>
<BEG> returns a { link set } view of the key contain in this map <END>
<BEG> compares the specified object with this map for equality <END>
<BEG> returns the sum of the hash code of each entry in this map 's { code entryset } view <SEG> which in turn be the hash code compute use key and value equivalences for this map <END>
<BEG> submits the task for asynchronous process return the future receive from the executor service <END>
<BEG> the touch method can be use to renew an element and move it to the from of the lru queue <END>
<BEG> created a jvm-unique name for actors ' thread <END>
<BEG> sets the pool size to the default <END>
<BEG> retrieves the internal executor service <END>
<BEG> schedule a new task for process with the pool param task the task to schedule <END>
<BEG> retrieves the current thread pool size return the pool size <END>
<BEG> adds a new element param pool the pool to store <END>
<BEG> removes the top last element <END>
<BEG> gives the current element return the retrieved pool <END>
<BEG> unwraps several common wrapper exception and return the underlying cause <END>
<BEG> returns the value of a system property which default to false <END>
<BEG> -- -- -- map api method -- -- -- <END>
<BEG> adds the specified element to this set if it be not already present <END>
<BEG> returns an iterator over the element in this set in descend order <END>
<BEG> removes from this set all of it element that be contain in the specify collection <END>
<BEG> throw classcastexception  throw nullpointerexception if the specified element be null <END>
<BEG> throw classcastexception  throw nullpointerexception if { code toelement } be null throw illegalargumentexception  <END>
<BEG> returns a reverse order view of the element contain in this set <END>
<BEG> inserts the specified element into this delay queue <END>
<BEG> retrieves and remove the head of this queue <SEG> or return { code null } if this queue have no element with an expired delay <END>
<BEG> retrieves and remove the head of this queue <SEG> wait if necessary until an element with an expired delay be available on this queue <END>
<BEG> retrieves and remove the head of this queue <SEG> wait if necessary until an element with an expired delay be available on this queue <SEG> or the specify wait time expire <END>
<BEG> retrieves <SEG> but do not remove <SEG> the head of this queue <SEG> or return { code null } if this queue be empty <END>
<BEG> atomically remove all of the element from this delay queue <END>
<BEG> always return { code integer max_value } because a { code delayqueue } be not capacity constrain <END>
<BEG> returns an array contain all of the element in this queue <END>
<BEG> returns an array contain all of the element in this queue ; the runtime type of the returned array be that of the specified array <END>
<BEG> removes a single instance of the specified element from this queue <SEG> if it be present <SEG> whether or not it have expire <END>
<BEG> returns an iterator over all the element both expire and unexpired in this queue <END>
<BEG> returns the the default { link fiberscheduler } instance <END>
<BEG> closes the channel so that no more message could be send to it <END>
<BEG> tests whether the channel have be close and no more message await in the channel <END>
<BEG> returns the message to send if this be a send operation <SEG> or the message that have be receive if this be a receive operation and have be successfully complete by the selector <END>
<BEG> returns the channel for this operation <END>
<BEG> tests whether this operation be the one operation that have be select and complete by the selector <END>
<BEG> retrieves a message from the channel <SEG> possibly block until one become available <END>
<BEG> retrieves a message from the channel <SEG> possibly block until one become available <SEG> but no long than the specify timeout <END>
<BEG> sends a message to the channel <SEG> possibly block until there 's room available in the channel <END>
<BEG> sends a message to the channel <SEG> possibly block until there 's room available in the channel <SEG> but never long than the specify timeout <END>
<BEG> returns a { link transformingsendport } to which send message that be transform towards a channel by a reduction function <END>
<BEG> sets the strand that currently own exclusive access <END>
<BEG> returns the strand last set by { code setexclusiveownerstrand } <SEG> or { code null } if never set <END>
<BEG> we must wake up the first waiter that be actually park <END>
<BEG> returns the current thread 's { code threadlocalrandom } <END>
<BEG> returns a pseudorandom <SEG> uniformly distribute value between 0 inclusive and the specify value exclusive <END>
<BEG> returns a pseudorandom <SEG> uniformly distribute { code double } value between 0 inclusive and the specify value exclusive <END>
<BEG> returns how many nanosecond be leave before the timeout expire <SEG> or a negative number indicate how many nanosecond have elapse since the timeout expire <END>
<BEG> returns how long be leave before the timeout expire in the give time unit <END>
<BEG> tests whether the timeout have expire <END>
<BEG> main mechanic for put offer <END>
<BEG> returns a < tt > runnablefuture < tt > for the give runnable and default value <END>
<BEG> returns a < tt > runnablefuture < tt > for the give callable task <END>
<BEG> inserts the specified element into this queue if it be possible to do so immediately without violate capacity restriction <SEG> return < tt > true < tt > upon success and throw an < tt > illegalstateexception < tt > if no space be currently available <END>
<BEG> retrieves and remove the head of this queue <END>
<BEG> adds all of the element in the specified collection to this queue <END>
<BEG> since 1 5 <END>
<BEG> atomically set to the give value and return the old value <END>
<BEG> atomically set the value to the give updated value if the current value { code == } the expected value <END>
<BEG> atomically increment by one the current value <END>
<BEG> atomically add the give value to the current value <END>
<BEG> creates a thread pool that reuse a fixed number of thread operate off a share unbounded queue <END>
<BEG> creates a thread pool that reuse a fixed number of thread operate off a share unbounded queue <SEG> use the provided threadfactory to create new thread when need <END>
<BEG> creates an executor that use a single worker thread operate off an unbounded queue <END>
<BEG> creates an executor that use a single worker thread operate off an unbounded queue <SEG> and use the provided threadfactory to create a new thread when need <END>
<BEG> creates a thread pool that create new thread a need <SEG> but will reuse previously construct thread when they be available <SEG> and use the provided threadfactory to create new thread when need <END>
<BEG> returns an object that delegate all define { link executorservice } method to the give executor <SEG> but not any other method that might otherwise be accessible use cast <END>
<BEG> returns a default thread factory use to create new thread <END>
<BEG> returns a thread factory use to create new thread that have the same permission a the current thread <END>
<BEG> returns a { link callable } object that <SEG> when call <SEG> run the give task and return < tt > null < tt > <END>
<BEG> returns a { link callable } object that <SEG> when call <SEG> run the give privileged exception action and return it result <END>
<BEG> returns a { link callable } object that will <SEG> when call <SEG> execute the give < tt > callable < tt > under the current access control context <END>
<BEG> returns a { link callable } object that will <SEG> when call <SEG> execute the give < tt > callable < tt > under the current access control context <SEG> with the current context class loader a the context class loader <END>
<BEG> protected method invoke when this task transition to state < tt > isdone < tt > whether normally or via cancellation <END>
<BEG> sets the result of this future to the give value unless this future have already be set or have be cancel <END>
<BEG> causes this future to report an < tt > executionexception < tt > with the give throwable a it cause <SEG> unless this future have already be set or have be cancel <END>
<BEG> sets this future to the result of it computation unless it have be cancel <END>
<BEG> lock to prevent both put and take <END>
<BEG> returns the number of element in this queue <END>
<BEG> returns the number of additional element that this queue can ideally in the absence of memory or resource constraint accept without block <END>
<BEG> inserts the specified element at the tail of this queue <SEG> wait if necessary for space to become available <END>
<BEG> inserts the specified element at the tail of this queue if it be possible to do so immediately without exceed the queue 's capacity <SEG> return { code true } upon success and { code false } if this queue be full <END>
<BEG> removes a single instance of the specified element from this queue <SEG> if it be present <END>
<BEG> returns an array contain all of the element in this queue <SEG> in proper sequence <END>
<BEG> returns an array contain all of the element in this queue <SEG> in proper sequence ; the runtime type of the returned array be that of the specified array <END>
<BEG> atomically remove all of the element from this queue <END>
<BEG> returns a { link condition } instance for use with this { link lock } instance <END>
<BEG> queries whether the give thread be wait to acquire this lock <END>
<BEG> adds the specified element to this queue <SEG> wait if necessary for another thread to receive it <END>
<BEG> retrieves and remove the head of this queue <SEG> wait if necessary for another thread to insert it <END>
<BEG> retrieves and remove the head of this queue <SEG> wait if necessary up to the specify wait time <SEG> for another thread to insert it <END>
<BEG> inserts the specified element into this queue <SEG> if another thread be wait to receive it <END>
<BEG> retrieves and remove the head of this queue <SEG> if another thread be currently make an element available <END>
<BEG> always return < tt > true < tt > <END>
<BEG> does nothing <END>
<BEG> returns < tt > false < tt > unless the give collection be empty <END>
<BEG> returns a zero-length array <END>
<BEG> transitions to terminated state if either shutdown and pool and queue empty or stop and pool empty <END>
<BEG> main worker run loop <END>
<BEG> executes the give task sometime in the future <END>
<BEG> returns true if this executor be in the process of terminate after { link # shutdown } or { link # shutdownnow } but have not completely terminate <END>
<BEG> invokes { code shutdown } when this executor be no longer reference and it have no thread <END>
<BEG> sets the thread factory use to create new thread <END>
<BEG> sets a new handler for unexecutable task <END>
<BEG> returns the current handler for unexecutable task <END>
<BEG> sets the core number of thread <END>
<BEG> starts a core thread <SEG> cause it to idly wait for work <END>
<BEG> sets the policy govern whether core thread may time out and terminate if no task arrive within the keep-alive time <SEG> be replace if need when new task arrive <END>
<BEG> sets the time limit for which thread may remain idle before be terminate <END>
<BEG> returns the large number of thread that have ever simultaneously be in the pool <END>
<BEG> returns the approximate total number of task that have ever be schedule for execution <END>
<BEG> returns the approximate total number of task that have complete execution <END>
<BEG> method invoke prior to execute the give runnable in the give thread <END>
<BEG> method invoke upon completion of execution of the give runnable <END>
<BEG> method invoke when the executor have terminate <END>
<BEG> scale d by m <SEG> check for overflow <END>
<BEG> returns the name of this enum constant <SEG> exactly a declare in it enum declaration <END>
<BEG> returns the ordinal of this enumeration constant it position in it enum declaration <SEG> where the initial constant be assign an ordinal of zero <END>
<BEG> guarantees that deserialized object will be referentially equal to the standard enumeration object <END>
<BEG> performs a < tt > thread sleep < tt > use this unit <END>
<BEG> returns the element correspond to the version of the { code generated } annotation present in the compile-time class- or module-path <END>
<BEG> a utility class that traverse { link element } instance and ensure that all type information be present and resolvable <END>
<BEG> construct a new mock annotation instance <END>
<BEG> the name of this annotation in dotname form <END>
<BEG> the java element that this annotation be declare on <END>
<BEG> returns a value that correspond with the specify parameter name <END>
<BEG> returns a value that correspond with the specify parameter name <SEG> account for it default value <END>
<BEG> returns a list of all parameter value on this annotation instance <SEG> include default value id define <END>
<BEG> returns a list of all parameter value on this annotation instance <END>
<BEG> deprecate use { link # createdoublevalue string <SEG> double } instead <END>
<BEG> returns the kind of value that represent the component type of this array if it can be determine <END>
<BEG> converts the underlie numerical type to an integer a if it be cast in java <END>
<BEG> returns the underlying character value a java primitive char <END>
<BEG> returns the constant name <SEG> in string form <SEG> that represent the java enumeration of this value <END>
<BEG> returns the class name <SEG> in { link type } form <SEG> that represent a java class use by this value <END>
<BEG> returns a nested annotation represent by this value <END>
<BEG> converts an underlying numerical array to a java primitive integer array <END>
<BEG> returns an array of the type name <SEG> in dotname form <SEG> that represent the java enumeration of each array element <END>
<BEG> returns an array of class type represent the underlying class array value <END>
<BEG> compares this annotation value to another annotation value <SEG> and return true if equal <END>
<BEG> create a new mock array type instance with the specify component and dimension <END>
<BEG> returns the component type of the array <END>
<BEG> the number of dimension this array type have <END>
<BEG> returns the access flag for this class <END>
<BEG> returns the name of the super class declare by the extends clause of this class <END>
<BEG> returns an array of interface name implement by this class <END>
<BEG> returns a map index by annotation name <SEG> with a value list of annotation instance <END>
<BEG> returns a list of all annotation directly declare on this class <END>
<BEG> returns the annotation with the specify name directly declare on this class <END>
<BEG> returns a list of all method declare in this class <END>
<BEG> retrieves a method base on it signature <SEG> which include a method name and an argument list <END>
<BEG> retrieves the first occurrence of a method by the give name <END>
<BEG> retrieves a field by the give name <END>
<BEG> returns a list of all available field <END>
<BEG> returns a list of name for all interface this class implement <END>
<BEG> returns the list of type in the implement clause of this class <END>
<BEG> returns a super type represent by the extends clause of this class <END>
<BEG> returns the generic type parameter of this class <SEG> if any <END>
<BEG> returns the nesting type of this class <SEG> which could either be a standard top level class <SEG> an inner class <SEG> an anonymous class <SEG> or a local class <END>
<BEG> returns the enclose class if this be an inner class <SEG> or null if this be an anonymous <SEG> a local <SEG> or a top level class <END>
<BEG> constructs a componentized dotname <END>
<BEG> returns the portion of this dotname that do not contain a package prefix <END>
<BEG> returns whether this dotname be a componentized variant <END>
<BEG> returns whether the local portion of a componentized dotname be separate by an inner class style delimiter ' $ <END>
<BEG> returns a hash code which be base on the semantic representation of this < code > dotname < code > <END>
<BEG> compares a < code > dotname < code > to another < code > dotname < code > and return whether this dotname be less than <SEG> great than <SEG> or equal to the specify dotname <END>
<BEG> compares a dotname to another dotname and return true if the represent the same underlying semantic name <END>
<BEG> returns whether the type occur within a method receiver the this reference the method receives <END>
<BEG> returns the class which declare the field return the declaring class <END>
<BEG> completes <SEG> finalizes <SEG> and return the index after zero or more call to index <END>
<BEG> read the index at the associated stream of this reader <END>
<BEG> writes the specified index to the associate output stream <END>
<BEG> indexes a jar file and save the result <END>
<BEG> returns an array contain parameter type in parameter order <END>
<BEG> constructs a new mock method parameter info param method the method contain this parameter <END>
<BEG> returns the method this parameter belong to <END>
<BEG> returns the 0 base position of this parameter <END>
<BEG> returns the name of this parameter <END>
<BEG> returns a string representation describe this method parameter return a string representation of this parameter <END>
<BEG> create a new mock instance <END>
<BEG> returns the list of argument pass to this parameterized type <END>
<BEG> returns the owner enclose type of this parameterized type if the owner be parameterized <SEG> or contain type annotation <END>
<BEG> returns a subclass specific position where the type be locate <END>
<BEG> internalizes the specify object by always return the first ever store <END>
<BEG> advanced method that return the internal table <END>
<BEG> returns the index of the bound this type annotation be within <END>
<BEG> the identifier of this type variable a it appear in java source code <END>
<BEG> returns the extends upper bound of this wildcard <END>
<BEG> find the classpath urls for a specific classpath resource <END>
<BEG> find the classpath for the particular class param clazz return <END>
<BEG> uses the java class path system property to obtain a list of urls that represent the classpath return <END>
<BEG> return the root cause of this exception <END>
<BEG> non-javadoc see org aspectj lang reflect ajtype # getsupertype <END>
<BEG> non-javadoc see org aspectj lang reflect ajtype # getdeclaredpointcut java lang string <END>
<BEG> param < t > the expected class of the aspect param aspectclass the aspect class return the singleton aspect or the percflow percflowbelow associate with the current thread throw noaspectboundexception if no such aspect <END>
<BEG> param < t > the expected class of the aspect param aspectclass the aspect class param perobject the this target object for which to look for an aspect instance return the associate perthis pertarget aspect instance throw noaspectboundexception if no such aspect <SEG> or no aspect bound <END>
<BEG> param < t > the expected class of the aspect param aspectclass the aspect class param pertypewithin the class for which to search for an aspect instance return the associated aspect instance throw noaspectboundexception if no such aspect <SEG> or no aspect bound <END>
<BEG> param aspectclass the aspect class return true if singleton aspect or percflow percflowbelow aspect be bind throw noaspectboundexception if not bind <END>
<BEG> param aspectclass the aspect class param perobject the this target object for which to look for an aspect instance return true if the perthis pertarget aspect be bind throw noaspectboundexception if not bind <END>
<BEG> param aspectclass the aspect class param pertypewithin class return true if the pertypewithin aspect be bind throw noaspectboundexception if not bind <END>
<BEG> returns the singleton aspect or the percflow percflowbelow associate with the current thread param aspectclass aspect class for which to discover the aspect instance return an aspect instance throw noaspectboundexception if no such aspect <END>
<BEG> returns the perthis pertarget aspect param aspectclass aspect class for which to discover the aspect instance param perobject object for which to discover the aspect instance return an aspect instance throw noaspectboundexception if no such aspect <SEG> or no aspect bound <END>
<BEG> returns true if singleton aspect or percflow percflowbelow aspect be bind param aspectclass aspect class for which to check the aspect instance return true if an aspect instance be bind throw noaspectboundexception if not bind <END>
<BEG> returns true if the perthis pertarget aspect be bind param aspectclass aspect class for which to check the aspect instance param perobject the this target for which to check for an aspect return true if aspect instance exists for the class object combination throw noaspectboundexception if not bind <END>
<BEG> returns true if the pertypewithin aspect be bind param aspectclass aspect class for which to check the aspect instance param pertypewithin class return true if aspect instance exists for this aspect class pertypewithin class combination throw noaspectboundexception if not bind <END>
<BEG> the joinpoint need to know about it closure so that proceed can delegate to closure run <END>
<BEG> return the aspectj runtime type representation of the give java type <END>
<BEG> return the advice name that could not be find <END>
<BEG> this method be call to implicitly associate the closure with the joinpoint a require for aj aspect proceed return the associated proceedingjoinpoint <END>
<BEG> name be consistent with reflection api before and after always return void type some around also return void type <END>
<BEG> return true if the annotation have a value with the specify name and tostring 'd value <END>
<BEG> return true if the annotation have a value with the specify name <END>
<BEG> return a list of annotation [ ] - each list entry contain the annotation for one parameter <END>
<BEG> write serialize a set of attribute into a specify output stream <END>
<BEG> called by object that be traverse the node of the tree implicitely define by the content of a java class <END>
<BEG> return string representation <END>
<BEG> return collection of code attribute <END>
<BEG> return linenumbertable of code <SEG> if it have one <END>
<BEG> return actual byte code of the method <END>
<BEG> return table of handled exception <END>
<BEG> return number of local variable <END>
<BEG> return maximum size of stack use by this method <END>
<BEG> param code byte code <END>
<BEG> param exception_table exception table <END>
<BEG> param max_locals maximum number of local variable <END>
<BEG> param max_stack maximum stack size <END>
<BEG> param end_pc end of handled block <END>
<BEG> param handler_pc where the actual code be <END>
<BEG> return deep copy of this object <END>
<BEG> dump name and signature index to file stream in binary format <END>
<BEG> return name index in constant pool of field method name <END>
<BEG> return index in constant pool of field method signature <END>
<BEG> return the string <SEG> a dereferenced use the internal index into the supplied constant pool <END>
<BEG> return array of index into constant pool of thrown exception <END>
<BEG> return length of exception table <END>
<BEG> return class name of thrown exception <END>
<BEG> return constant value associate with this field may be null <END>
<BEG> return the type of the field <END>
<BEG> param attribute collection of object attribute <END>
<BEG> this will return the content of a signature attribute attach to a member <SEG> or if there be none it will return the same a 'getsignature ' <END>
<BEG> dump inner class attribute to file stream in binary format <END>
<BEG> return access flag of inner class <END>
<BEG> return class index of outer class <END>
<BEG> return array of inner class record <END>
<BEG> dump class to a file <END>
<BEG> return fields <SEG> i e <SEG> variable of the class <END>
<BEG> return file name of class <SEG> aka sourcefile attribute value <END>
<BEG> return names of implemented interface <END>
<BEG> return indices in constant pool of implemented interface <END>
<BEG> return methods of the class <END>
<BEG> return a org aspectj apache bcel classfile method correspond to java lang reflect method if any <END>
<BEG> return sbsolute path to file where this class be read from <END>
<BEG> return class name index <END>
<BEG> set absolute path to file this class be read from <END>
<BEG> return string represent class content <END>
<BEG> gets the classrepository which hold it definition <END>
<BEG> equivalent to runtime instanceof operator <END>
<BEG> return true <SEG> if clazz be an implementation of interface inter <END>
<BEG> return the superclass for this javaclass object <SEG> or null if this be java lang object <END>
<BEG> return list of super class of this class in ascend order <SEG> i e <SEG> java lang object be always the last element <END>
<BEG> get interface directly implement by this javaclass <END>
<BEG> get all interface implement by this javaclass transitively <END>
<BEG> return array of pc offset <SEG> line number pair <END>
<BEG> map byte code position to source code line <END>
<BEG> dump local variable to file stream in binary format <END>
<BEG> return constant pool use by this object <END>
<BEG> return variable be valid within getstartpc getstartpc +getlength <END>
<BEG> return index of register where variable be store <END>
<BEG> return start of range where he variable be valid <END>
<BEG> param constant_pool constant pool to be use for this object <END>
<BEG> return array of local variable of method <END>
<BEG> return first match variable use index <END>
<BEG> return array of stack map entry <END>
<BEG> param map array of stack map entry <END>
<BEG> dump stack map entry param file output file stream throw ioexception <END>
<BEG> dump type entry to file <END>
<BEG> return true <SEG> if type be either item_object or item_newobject <END>
<BEG> override instructionhandle method : delegate to branch instruction <END>
<BEG> return build and return a javaclass <END>
<BEG> convenience method <END>
<BEG> add a field to this class <END>
<BEG> replace give method with new one <END>
<BEG> get codeexception object < br > this rely on that the instruction list have already be dump to byte code or or that the ` setpositions ' method have be call for the instruction list <END>
<BEG> set start of handler param start_pc start of handled region inclusive <END>
<BEG> set handler code param handler_pc start of handler <END>
<BEG> return true <SEG> if ih be target of this handler <END>
<BEG> return string representation close to declaration format <SEG> ` public static final short max = 100 ' <SEG> e g <END>
<BEG> return size of field 1 or 2 <END>
<BEG> for support newarray return typecode of the array <END>
<BEG> replace current instruction contain in this handle <END>
<BEG> return the position <SEG> i e <SEG> the byte code offset of the contain instruction <END>
<BEG> remove all targeters <SEG> if any <END>
<BEG> denote this handle be n't reference anymore by t <END>
<BEG> denote this handle be be reference by t <END>
<BEG> long output format : 'name of opcode ' [ 'opcode number ' ] 'length of instruction ' < 'local variable index ' > <END>
<BEG> return local variable index refer by this instruction <END>
<BEG> since this be a variable length instruction <SEG> it may shift the following instruction which then need to update their position <END>
<BEG> dump instruction a byte code to stream out <END>
<BEG> set branch target for ` i'th case <END>
<BEG> param old_ih old target param new_ih new target <END>
<BEG> return array of match index <END>
<BEG> return array of match target offset <END>
<BEG> return mnemonic for instruction with symbolic reference resolve <END>
<BEG> also work for instruction whose stack effect depend on the constant pool entry they reference <END>
<BEG> return return type of referenced method <END>
<BEG> the < b > count < b > argument accord to the java language specification <SEG> second edition <END>
<BEG> return true <SEG> if ih be target of this line number <END>
<BEG> return number of dimension to be create <END>
<BEG> if this do n't reference a class <SEG> it reference an interface or a non-existant entity <END>
<BEG> java virtual machine specification edition 2 <SEG> 5 4 4 access control <END>
<BEG> return true iff this type be castable to another type t a define in the jvm specification <END>
<BEG> return true iff this be assignment compatible with another type t a define in the jvm specification ; see the aastore definition there <END>
<BEG> this commutative operation return the first common superclass narrow referencetype reference a class <SEG> not an interface <END>
<BEG> returns if the two returnaddresses refer to the same target <END>
<BEG> return the target of this returnaddresstype <END>
<BEG> return currently use repository instance <END>
<BEG> set repository instance to be use for class loading <END>
<BEG> return class file object for give java class <END>
<BEG> clear the repository <END>
<BEG> add clazz to repository if there be n't an equally named class already in there <END>
<BEG> store a new javaclass into this repository <END>
<BEG> remove class from repository <END>
<BEG> find an already defined javaclass in the local cache <END>
<BEG> produce a report on cache usage <END>
<BEG> returns an array of the stats <SEG> for test <SEG> the order be fix : 0=time spent load static 1=time spent manipulate urls static 2=classes load static 3=cache hit share static 4=misses in share due to eviction static 5=cache hit local 6=misses in local due to eviction 7=shared cache size <END>
<BEG> reset statistic and clear all cache <END>
<BEG> clear all entry from the local cache <END>
<BEG> checks for class path component in the following property : java class path <SEG> sun boot class path <SEG> java ext dirs return class path a use by default by bcel <END>
<BEG> return stream for class or resource on classpath <END>
<BEG> clear all entry from cache <END>
<BEG> store a new javaclass instance into this repository <END>
<BEG> find an already define cache javaclass object by name <END>
<BEG> load a javaclass object for the give class name use the classpath environment variable <END>
<BEG> param configfilepath path to an lst file <END>
<BEG> two kind of relationship a affect b b affectedby a both of these relationship be add when ' b ' be modify <END>
<BEG> return the set of file for which the structure model be modify they may have be remove or otherwise rebuilt <END>
<BEG> return the set of aspect that weave file on the last build either incremental or full build <END>
<BEG> find the entry in the model that represent a particular type <END>
<BEG> look for any package node match the specified package name <END>
<BEG> param sourcefilepath modify to ' ' delimit path for consistency return a new structure node for the file if it be not find in the model <END>
<BEG> never return null param sourcefilepath canonicalized path for consistency param linenumber if 0 or 1 the corresponding file node will be return return a new structure node for the file if it be not find in the model <END>
<BEG> taken from org aspectj org eclipse jdt core compiler charoperation <END>
<BEG> returns the delimiter for the give iprogramelement for example if the iprogramelement be an aspect return ' ' and if the iprogramelement be a method return '~ ' <END>
<BEG> creates a readable name from the give char array <SEG> for example <SEG> give ' i ' return 'int ' <END>
<BEG> given 'ppkg mygenericclass < ljava lang string ; ljava lang integer ; > ; ' will return 'qmygenericclass < qstring ; qinteger ; > ; ' <END>
<BEG> given 'qjava lang string ; ' return 'qstring ; ' <END>
<BEG> return imessage structure message <SEG> if set <END>
<BEG> print the stack trace of any enclosed thrown or this otherwise <END>
<BEG> exit a phase <SEG> all stack entry from the one with the give token down will be remove <END>
<BEG> forget about the context for the current thread <END>
<BEG> non-javadoc see org aspectj bridge imessagehandler # handlemessage org aspectj bridge imessage <END>
<BEG> return delegate handlemessage imessage <END>
<BEG> return count of message see through this interface <END>
<BEG> return abort_nomessage if message be empty or imessage otherwise <END>
<BEG> return abort imessage with thrown and message o abort_nomessage if both be empty null <END>
<BEG> create fail message <END>
<BEG> return imessage debug message with message content <END>
<BEG> print total count message to the print stream <SEG> start each on a new line param messageholder param out <END>
<BEG> return int number of message of this kind optionally or great in list <END>
<BEG> select all message in holder except those of the same kind optionally or great <END>
<BEG> return unmodifiable list of imessage comply with parameter <END>
<BEG> extract message of type kind from the input list <END>
<BEG> map to the kind of message associate with this string key <END>
<BEG> run visitor over the set of message in holder <SEG> optionally accumulate those accept by the visitor <END>
<BEG> make an imessagehandler that handle imessage if they have the right kind or great and contain some infix string <END>
<BEG> this render imessage a string <SEG> ignore empty element and elide any thrown <END>
<BEG> render isourcelocation to string <SEG> ignore empty element null or isourcelocation no_file or isourcelocation no_column though implementation may return 0 from getcolumn when pass no_column a input <END>
<BEG> render message in a line <END>
<BEG> return string of the form { # { type } } for message kind <SEG> skip 0 <END>
<BEG> handle message in the sink <END>
<BEG> handle message by print and if abortonfailure throw an abortexception if the message be a failure or an abort but not for error <END>
<BEG> see org aspectj bridge imessagehandler # isignoring org aspectj bridge imessage kind <END>
<BEG> no-op see org aspectj bridge imessagehandler # isignoring org aspectj bridge imessage kind param kind <END>
<BEG> return null to not print <SEG> or message render include newlines <END>
<BEG> produce a compiler a an icommand <END>
<BEG> static helper method for construct weaving message <END>
<BEG> return returns the aspectname <END>
<BEG> return true if file exists and be a zip file <END>
<BEG> return 0 if no zip jar suffix or 4 otherwise <END>
<BEG> return true if path end with java or aj <END>
<BEG> return 0 if no source suffix or the length of the suffix otherwise <END>
<BEG> return true if this be a readable directory <END>
<BEG> throw illegalargumentexception unless dir be a readable directory <END>
<BEG> throw illegalargumentexception unless file be readable and not a directory <END>
<BEG> return array same length a input <SEG> with string path <END>
<BEG> flatten file [ ] to string <END>
<BEG> normalize path for comparison by render absolute trimming and change '\\ ' to ' ' return if null or normalized path otherwise <END>
<BEG> weakly normalize path for comparison by trim and change '\\ ' to ' ' <END>
<BEG> get best file for the first-readable path in input path <SEG> treat entry prefix sp : a system property key <END>
<BEG> render a best file <SEG> canonical or absolute <END>
<BEG> return array same length a input <SEG> with string absolute path <END>
<BEG> recursively list file in srcdir <END>
<BEG> recursively list class file in specified directory return list of file object <END>
<BEG> copy file from source dir into destination directory <SEG> create any needed directory <END>
<BEG> copy fromfile to tofile <SEG> handle file-file <SEG> dir-dir <SEG> and file-dir copy <END>
<BEG> ensure that the parent directory to path can be write <END>
<BEG> do line-based copying <END>
<BEG> make a new child directory of parent param parent a file for the parent writable param child a prefix for the child directory return a file dir that exist with parentdir a the parent file or null <END>
<BEG> get url for a file <END>
<BEG> returns the content of this file a a string <END>
<BEG> returns the content of this file a a byte [ ] <END>
<BEG> reads this input stream and return content a a byte [ ] <END>
<BEG> return semi-random string of length 6 usable a filename suffix <END>
<BEG> do line-based search for literal text in source file <SEG> return file : line where found <END>
<BEG> do line-based search for literal text in source file <SEG> return line where found a a string in the form { sourcepath } : line : column submit to the collect parameter sink <END>
<BEG> sleep until after the last last-modified stamp from the file <END>
<BEG> return the vm version 1 1 <SEG> 1 2 <SEG> 1 3 <SEG> 1 4 <SEG> etc <END>
<BEG> shorthand for if null <SEG> throw illegalargumentexception throw illegalargumentexception null { name } if o be null <END>
<BEG> shorthand for if not null or not assignable <SEG> throw illegalargumentexception param c the class to check - use null to ignore type check throw illegalargumentexception null { name } if o be null <END>
<BEG> shorthand for if not null or not assignable <SEG> throw illegalargumentexception throw illegalargumentexception null { name } if o be null <END>
<BEG> return null == s || 0 == s length ; <END>
<BEG> return null == ra || 0 == ra length <END>
<BEG> splits < code > text < code > at whitespace <END>
<BEG> splits < code > input < code > at comma <SEG> trim any white space <END>
<BEG> split string a classpath <SEG> delimit at file pathseparator <END>
<BEG> splits < code > input < code > <SEG> remove delimiter and trim any white space <END>
<BEG> splits string into a < code > list < code > use a < code > stringtokenizer < code > <END>
<BEG> return a non-null unmodifiable list <END>
<BEG> copy non-null two-dimensional string [ ] [ ] see extractoptions string [ ] <SEG> string [ ] [ ] <END>
<BEG> extract option and argument to input option list <SEG> return remainder <END>
<BEG> convert array safely <END>
<BEG> return a string with the unqualified class name of the class or null <END>
<BEG> inefficient way to replace all instance of sought with replace <END>
<BEG> render i right-justified with a give width less than about 40 <END>
<BEG> return { unqualifiedexceptionclass } { message } <END>
<BEG> renders exception < code > t < code > <SEG> unwrapping <SEG> optionally elide and limit total number of line <END>
<BEG> trim end line from a stringbuffer <SEG> clip to maxlines and far remove any number of trail line accept by checker <END>
<BEG> dump message and stack to stringbuffer <END>
<BEG> return throwable input or tail of any wrapped exception chain <END>
<BEG> replacement for arrays aslist which gacks on null and return a list in which remove be an unsupported operation <END>
<BEG> find java executable file path from java home system property <END>
<BEG> sleep until a particular time <END>
<BEG> param object must all implement partialcomparable return the same member a object <SEG> but sort accord to their partial order <END>
<BEG> return string with debug info : urls and class use <END>
<BEG> designed to be overriden by eclipsetype to disable collection of shadow mungers during pre-weave compilation phase <END>
<BEG> writes the full attribute <SEG> i e <END>
<BEG> this static method go on the aspect that declare the inter-type field <END>
<BEG> this field go on the class the field be declare onto <END>
<BEG> this method go on the target type of the inter-type method <END>
<BEG> sometimes the intertyped method require a bridge method alongside it <END>
<BEG> non-javadoc see org aspectj weaver ast test # accept org aspectj weaver ast itestvisitor <END>
<BEG> annotations be runtimevisible only <END>
<BEG> return a nicely format method string <SEG> for example : int x foo java lang string <END>
<BEG> compute the flag for the xxxjoinpoint extra argument param argumentsignatures return extra arg flag <END>
<BEG> looks in the wrapper we have add so that we can find their effective signature if need <END>
<BEG> the munger must not check for the advice exception to be declare by the shadow in the case of aj aspect so that around can throw throwable return <END>
<BEG> return return the real bcel annotation be wrap <END>
<BEG> looks at the visibility modifier between two method <SEG> and know whether they be from class in the same package <SEG> and decide whether one override the other <END>
<BEG> unpack the generic signature attribute if there be one and we have n't already do so <SEG> then find the true field type of this field eg <END>
<BEG> a method can be parameterized if it have one or more generic parameter <END>
<BEG> return the parameterized generic return type or the normal return type if the method be not generic <END>
<BEG> for test only <END>
<BEG> return true if the method represent the default constructor <END>
<BEG> must take into account generic signature <END>
<BEG> return true if build from byte obtain from somewhere <END>
<BEG> non-javadoc see org aspectj weaver ast itestvisitor # visit org aspectj weaver internal tool matchingcontextbasedtest <END>
<BEG> the main part of implement declare parent extends <END>
<BEG> add the give aspect to the weaver <END>
<BEG> param infile directory contain class or zip jar class archive <END>
<BEG> add any class file in the directory to the outdir <END>
<BEG> should be addorreplace <END>
<BEG> helper method - will return null if the underlying delegate be an eclipsesourcetype and not a bcelobjecttype <END>
<BEG> register a munger for perclause aj aspect so that we add aspectof to them a need param aspect param kind return munger <END>
<BEG> retrieve a bcel delegate for an aspect - this will return null if the delegate be an eclipsesourcetype and not a bcelobjecttype - this happen quite often when incrementally compile <END>
<BEG> the aim of this method be to make sure a particular type be 'ok ' <END>
<BEG> these be aop xml file that can be use to alter the aspect that actually apply from those pass in - and also their scope of application to other file in the system <END>
<BEG> add a scoped aspect where the scoping be define in an aop xml file and this world be be use in a ltw configuration <END>
<BEG> emit disassemble class and newline to out <END>
<BEG> returns the packagename - if it the default package we return an empty string <END>
<BEG> retrieve the ajc $ preclinit method - this method capture any initialization aspectj want to ensure happens in a class <END>
<BEG> factory method for build multiple extend clinit method <END>
<BEG> create a field in the type contain the shadow where the annotation retrieve during binding can be store - for late fast access <END>
<BEG> return the next available field name with the specified 'prefix ' <SEG> e g <END>
<BEG> on entry to this method we have a method whose instruction stream contain a few instruction that have line number assign to them linenumbertags <END>
<BEG> fill the newly create method gen with our body <SEG> inspire by instructionlist copy <END>
<BEG> param signature of the form 'la b c d ; ' return the constant pool index <END>
<BEG> param filepath a file system path ' c : \a\b\c txt ' or ' a b c txt ' return the constant pool index <END>
<BEG> param name a simple name for example a method or field name return the constant pool index <END>
<BEG> param name a simple name for example a method or field name <END>
<BEG> param path a file system path ' c : \a\b\c txt ' or ' a b c txt ' <END>
<BEG> equivalence can be true for an eclipsetypemunger and a bceltypemunger that represent the same transformation just at different point in the pipeline <END>
<BEG> return null for mungers that be use internally <SEG> but be not part of a declared thing in source code <END>
<BEG> return true if the itd target type use type variable <SEG> for example i < t > <END>
<BEG> some type mungers be create purely to help with the implementation of shadow mungers <END>
<BEG> updates the record if something have change <END>
<BEG> include declare method and constructor <END>
<BEG> return whether or not that be a change to the global signature xxx for efficiency we will need a rich representation than this <END>
<BEG> retrieve a subset of all know mungers <SEG> those of a specific kind <END>
<BEG> return an amalgamation of the declare type statement <END>
<BEG> return an amalgamation of the declare method constructor statement <END>
<BEG> record something that need verify when we believe the type system be complete <END>
<BEG> called when type binding be complete - call all registered verification object in turn <END>
<BEG> dump configuration <END>
<BEG> non-javadoc see org aspectj weaver pattern pointcut # getpointcutkind <END>
<BEG> non-javadoc see org aspectj weaver pattern pointcut # matchinternal org aspectj weaver shadow <END>
<BEG> non-javadoc see org aspectj weaver pattern pointcut # resolvebindings org aspectj weaver pattern iscope <SEG> org aspectj weaver pattern bindings <END>
<BEG> non-javadoc see org aspectj weaver pattern pointcut # parameterizewith java util map <END>
<BEG> non-javadoc see org aspectj weaver tool pointcutexpression # setmatchingcontext org aspectj weaver tool matchingcontext <END>
<BEG> create a new filter f that <SEG> when wrap around another iterator i <SEG> create a new iterator i ' that will return only those value of i that have not yet be return by i ' <SEG> discard duplicate <END>
<BEG> creates an iterator that will return the element of a specified array <SEG> in order <END>
<BEG> creates an iterator i base on a base iterator a and a getter g i return <SEG> in order <SEG> forall i in a <SEG> g i <END>
<BEG> creates an iterator i base on base iterators a and b <END>
<BEG> creates an iterator i base on a base iterator a and an object o <END>
<BEG> creates an iterator i base on an object o <END>
<BEG> return returns the lint kind of this message <END>
<BEG> jsr-163 premain agent entry method param option param instrumentation <END>
<BEG> the reference queue be only process when a request be make for a weaver adaptor <END>
<BEG> process the reference queue that contain stale adaptorkeys - the key be put on the queue when their classloader referent be garbage collect and so the associated adaptor weaver should be remove from the map <END>
<BEG> returns a namespace base on the contest of the aspect available <END>
<BEG> check to see if any class have be generate for a particular class loader <END>
<BEG> get the list of all aspect from the defintion list param definition return <END>
<BEG> remove generate class base on the supply classname <END>
<BEG> checks that concrete aspect be valid <END>
<BEG> return null a we be not in an osgi environment therefore no bundle <END>
<BEG> return classname hashcode <END>
<BEG> override to weave class use weavingadaptor <END>
<BEG> implement method from weavingclassloader <END>
<BEG> remove this class from the typemap <END>
<BEG> match base on give type pattern <SEG> only class can be match param matchtype param aspecttype return true if match <END>
<BEG> needed for reweavable return true <END>
<BEG> non-javadoc see org aspectj weaver resolvedtype # getdeclaredfields <END>
<BEG> non-javadoc see org aspectj weaver resolvedtype # isassignablefrom org aspectj weaver resolvedtype <END>
<BEG> creates the hierarchy for binary aspect <END>
<BEG> generates the declare message use in the detail <SEG> for example if the declare warn statement have message there should be no printlns will return 'declare warning : there should be n ' <END>
<BEG> generates the pointcut detail for the give pointcut <SEG> for example an anonymous pointcut will return ' < anonymous pointcut > ' and a name pointcut call p will return ' p ' <END>
<BEG> create the old style < 1 6 9 format getter name which include the aspect request access and the type contain the field in the name of the type <END>
<BEG> the name of method correspond to advice declaration of the form : ajc $ [ advicekind ] $ [ aspectname ] $ [ numberofadviceinaspect ] $ [ pointcuthash ] <END>
<BEG> this static void method go on the aspect that declare the inter-type field and be call from the appropriate place target 's initializer <SEG> or clinit <SEG> or topmost implementer 's inits <SEG> to initialize the field ; <END>
<BEG> see resolvedtypemunger parameterizedfor resolvedtype <END>
<BEG> if the munger have a declare signature <END>
<BEG> non-javadoc see java lang object # hashcode <END>
<BEG> see org aspectj weaver pattern typepattern # matchesexactly itype <END>
<BEG> non-javadoc see java lang object # equal java lang object <END>
<BEG> return declare warn : < typepattern > : < message > or declare error : < typepattern > : < message > <END>
<BEG> return declare type warning or declare type error <END>
<BEG> return a version of this type pattern with all type variable reference replace by the corresponding entry in the map <END>
<BEG> kind can be null to indicate that all kind should be consider <END>
<BEG> is the exact type parameterized ? <END>
<BEG> any type bound be bad <END>
<BEG> called when it be determine that the pointcut refers to a constant value of true or false - enable exact matching and no unnecessary call to the method represent the if body <END>
<BEG> method maybegetsimplename <END>
<BEG> only use by weaver tool api <END>
<BEG> attempt to parse a typeis < category > construct <END>
<BEG> parse type variable declaration for a generic method or at the start of a signature pointcut to identify type variable name in a generic type <END>
<BEG> compare 2 pointcuts base on an estimate of how expensive they may be to evaluate <END>
<BEG> allows formatting of the output pointcut for debug <END>
<BEG> returns a notted form of the pointcut p - we cope with already notted pointcuts <END>
<BEG> passed an array of pointcuts <SEG> return an and tree with them in <END>
<BEG> make a version of this pointcut with any ref to typevariables replace by their entry in the map <END>
<BEG> non-javadoc see org aspectj weaver pattern iscope # lookuptype java lang string <SEG> org aspectj weaver ihasposition <END>
<BEG> when call with typepattern static this will always return either fuzzyboolean yes or fuzzyboolean no <END>
<BEG> return a version of this type pattern list in which all type variable reference be replace by their corresponding entry in the map param typevariablemap return <END>
<BEG> resolve any annotation value specify <SEG> check they be all well form valid name <SEG> valid value param annotationtype the annotation type for which the value have be specify param scope the scope within which to resolve type reference eg <END>
<BEG> used in conjunction with check on 'isstar ' to tell you if this pattern represent ' ' or ' [ ] ' which be different ! <END>
<BEG> if this type pattern have no ' ' <END>
<BEG> if this type pattern have no ' ' or ' ' in it <END>
<BEG> returns the generic type <SEG> regardless of the resolvedtype we 'know about ' <END>
<BEG> convert a java lang reflect member into a resolved member in the world param reflectmember param inworld return <END>
<BEG> return returns the matching context <END>
<BEG> non-javadoc see org aspectj weaver shadow # getargannotationvar int <SEG> org aspectj weaver unresolvedtype <END>
<BEG> returns an iterator through resolvedtype object represent all the direct supertypes of this type <END>
<BEG> return an iterator through all of the field of this type <SEG> in order for check from jvm spec 2ed 5 4 3 2 <END>
<BEG> return a list of method <SEG> first those declare on this class <SEG> then those declare on the superclass recurse and then those declare on the superinterfaces <END>
<BEG> return a list of the type in the hierarchy of this type <SEG> start with this type <END>
<BEG> describe in jvm spec 2ed 5 4 3 2 <END>
<BEG> param member the member to lookup in intertype declaration affect this type return the real signature define by any matching intertype declaration <SEG> otherwise null <END>
<BEG> looks for the first member in the hierarchy match amember <END>
<BEG> do the two member conflict ? <END>
<BEG> a lookupmembernosupers <SEG> but do not include itds param member return <END>
<BEG> ? ? ? <END>
<BEG> returns a resolvedtype object represent the declare type of this type <SEG> or null if this type do not represent a non-package-level-type <END>
<BEG> called for all type mungers but only do something if they share type variable with a generic type which they target <END>
<BEG> add an intertype munger to this type <END>
<BEG> iff i be a parameterized type <SEG> and any of my parameter be type variable reference or nest parameterized type <SEG> return a version with those type parameter replace in accordance with the pass binding <END>
<BEG> returns the path to the jar or class file from which this binary aspect come or null if not a binary aspect <END>
<BEG> undo any temporary modification to the type for example it may be hold annotation temporarily whilst some matching be occur - these annotation will be add properly during weave but sometimes for type completion they need to be hold here for a while <END>
<BEG> for an annotation type <SEG> this will return if it be mark with inherited <END>
<BEG> return the weaver version use to build this type - default to the most recent version unless discover otherwise <END>
<BEG> return true if type variable be specify with the target type for this itd <END>
<BEG> parameterizes a resolved type munger for a particular usage of it target type this be use when the target type be generic and the itd share type variable with the target see concretetypemunger parameterizedfor <END>
<BEG> a late munger have to be do after shadow munging since which shadow be match can affect the operation of the late munger <END>
<BEG> all override method should call super <END>
<BEG> invoked when the shadow munger of a resolve type be process <END>
<BEG> returns the binarysourcelocation for the give sourcelocation <END>
<BEG> returns whether or not this shadow munger come from a binary aspect - keep a record of whether or not we 've check if we 're binary otherwise we keep calculate the same thing many time <END>
<BEG> formatting <END>
<BEG> these class have a safe implementation of tostring <END>
<BEG> format argument into a comma separate list param name array of argument name param args array of argument return the formated list <END>
<BEG> default factory for create the backing and resolving class <END>
<BEG> converts a cache key back to a classname param key to convert return classname <SEG> e g <END>
<BEG> the cache and be extend in two way <SEG> through a specialized cachekeyresolver and a specialized cachebacking <END>
<BEG> created a key for a generated class param classname classname <SEG> e g <END>
<BEG> create a key for a normal weaved class param classname classname <SEG> e g <END>
<BEG> has cache be enable through the system property <SEG> weaved_class_cache_enabled return true if caching be enable <END>
<BEG> put a class in the cache param ref reference to the entry <SEG> a create through createcachekey param classbytes pre-weaving class bytes param weavedbytes byte to cache <END>
<BEG> put a cache entry to indicate that the class should not be weave ; the original byte of the class should be use <END>
<BEG> get the statistic associate with this cache <SEG> or null if statistic have not be enable <END>
<BEG> return a list of all weavedclasscaches which have be initialize return <END>
<BEG> add a context binding with the give name and value param name param value <END>
<BEG> remove the context binding with the give name param name <END>
<BEG> return a set containing every pointcutprimitive except if <SEG> cflow <SEG> and cflowbelow useful for pass to pointcutparser constructor <END>
<BEG> returns a pointcut parser that can parse pointcut expression build from a user-defined subset of aspectj 's supported pointcut primitive <END>
<BEG> create a pointcut parameter of the give name and type <END>
<BEG> parse the give pointcut expression <END>
<BEG> resolve all the bound of this type variable <END>
<BEG> answer true if the give type satisfy all of the bound constraint of this type variable <END>
<BEG> return complete signature <SEG> e g <END>
<BEG> return signature for inclusion in an attribute <SEG> there must be no ' p ' in it signatures <END>
<BEG> return the name of the type variable <END>
<BEG> return true if the type variable this reference be manage be resolve <END>
<BEG> once we have see all the opcodes we can push the stored method tree through the next visitor in line <END>
<BEG> aopend an instruction to the current block param instruction the instruction to be append <END>
<BEG> append an instruction with one operand to the current block param instruction the instruction to be append param operand the instruction 's operand <END>
<BEG> append an instruction with two operand to the current block param instruction the instruction to be append param operand1 the instruction 's first operand param operand2 the instruction 's second operand <END>
<BEG> append an operand with more than two operand ot the current block param instruction the instruction to be append param operands the instruction 's operand <END>
<BEG> append an instruction with a string operand to the current block param instruction the instruction to be append param name the string operand <END>
<BEG> append a multiarray create instruction to the current block param instruction the instruction to be append param name the name of the array base type param dim the number of array dimension <END>
<BEG> append an invokedynamic instruction with 2 string operand to the current block param instruction the invokedynamic instruction to be append param name the first string operand param desc the second string operand <END>
<BEG> append a field instruction with 3 string operand to the current block param instruction the instruction to be append param owner the first string operand param name the second string operand param desc the third string operand <END>
<BEG> append a method instruction with 3 string operand and a boolean operand to the current block param instruction the instruction to be append param owner the first string operand param name the second string operand param desc the third string operand param itf the boolean operand <END>
<BEG> set the location of a label to the next instruction offset in the current block param label the label whose location be to be set return the result codelocation <END>
<BEG> retrieve the list of monitor enter location open at the start of a give block param label the label of the block return the list of open monitor enter location <END>
<BEG> retrieve the list of monitor enter location open at the start of a give block param block the block return the list of open monitor enter location in reverse order of appearance in the bytecode <END>
<BEG> pair a monitor enter instruction with an associated monitor exit instruction param enter the lcoation of the enter param exit the lcoation of the exit <END>
<BEG> locate the monitor enter instruction associate with a give monitor exit param exit the location of the monitor exit return the paired enter <END>
<BEG> test whether there be any open monitorenters with no correspond monitorexit on a path to the current instruction return true if there be open monitorenters otherwise false <END>
<BEG> split the graph at a control-flow dead-end use the label provide to identify the new current block <END>
<BEG> split the graph at a control-flow goto point use the label provide to identify the new current block and the goto target <END>
<BEG> test if a label mark the start of the handler for a try catch block param label the label to be test return true if the label mark the start of a try catch block otherwise false <END>
<BEG> return the list of detail of try catch block which start at this label param label the start label return list of try catch block detail <END>
<BEG> return the list of detail of try catch block whose handler start at this label param label the handler start label return list of try catch block detail <END>
<BEG> test if a label mark the start of a trigger block param label the label to be test return true if the label mark the start of a trigger block otherwise false <END>
<BEG> return detail of any trigger block which start at this label param label the label return trigger start detail <END>
<BEG> return an iterator ovver all know trigger detail return the iterator <END>
<BEG> return true if the current block be a rethrow handler i e <END>
<BEG> generate a string representation of the cfg return a string representation <END>
<BEG> return the index of the label in it enclose block 's instruction sequence or -1 if the label have not yet be visit <END>
<BEG> add a new link to the target set param to the target of the link <END>
<BEG> retrieve a link from the target set by index param i the target link index return a label for the target <END>
<BEG> retrieve the size of the target set return the size <END>
<BEG> return the number of instruction in the sequence return the the number of instruction in the sequence <END>
<BEG> return the instruction at the supplied offset param i the offset return the ith instruction in the sequuence <END>
<BEG> return the type of a give instruction param i the instruction index return the ith instruction in the sequuence <END>
<BEG> return the number of encoded argument of a give instruction param i the offset of the instruction return the number of encoded argument of the ith instruction in the sequuence <END>
<BEG> return a specific encode argument of a give instruction param i the offset of the instruction param j the index of the arguument attach to the instruction return the jth encode argument of the ith instruction in the sequuence <END>
<BEG> add an instruction to the sequence param insn the instruction return the index of the newly add instruction <END>
<BEG> add an instruction with one encode argument to the sequence param insn the instruction param arg1 the argument index return the index of the newly add instruction <END>
<BEG> add an instruction with two encode argument to the sequence param insn the instruction param arg1 the first argument index param arg2 the second argument index return the index of the newly add instruction <END>
<BEG> add an instruction with three encode argument to the sequence param insn the instruction param arg1 the first argument index param arg2 the second argument index param arg3 the third argument index return the index of the newly add instruction <END>
<BEG> add an instruction with four encode argument to the sequence param insn the instruction param arg1 the first argument index param arg2 the second argument index param arg3 the third argument index param arg4 the third argument index return the index of the newly add instruction <END>
<BEG> add an instruction with an arbitrary number of encoded argument to the sequence param insn the instruction param args the argument return the index of the newly add instruction <END>
<BEG> add a new monitor enter location to the list of open location associate with this handler maintain the reverse position order param openenter the location of the monitor enter <END>
<BEG> check if a monitor enter location belong to the list of open location associate with this handler param openenter the location of the monitor enter return true if it belong ot the list <END>
<BEG> add all the open location associate with this handler to the supplied list of open location maintain the reverse position order param openmonitorenters list of location of the monitor enters <END>
<BEG> add a shadowing region to the list of region which shadow this one param trycatchdetails detaisl of a try catch block <END>
<BEG> this method expose a capability of the byteman agent 's instrumentation instance while avoid expose the instance itself <END>
<BEG> create and return a jigsawaccessenabler to manage enable reflective access include access nonmember of unexported module class <END>
<BEG> returns jar that this retransformer be ask to { link # appendjarfile printwriter <SEG> jarfile <SEG> boolean add } to the boot classloader <END>
<BEG> return a count of the number of transforms apply for this script <END>
<BEG> invoke by the scriptmanager when a rule be redefine to inhibit further transformation via this script return the previous setting of deleted <END>
<BEG> call when index a script to ensure that it have not already be delete <END>
<BEG> record the fact that an error be throw when attempt to transform a give class use this rule script param loader the loader of the class for which injection be attempt param internalclassname the internal java name of the class param th the throwable reocrding detail of the failure return true if the failure be record false if not <END>
<BEG> record the fact that a trigger call have succeed or else fail to install into bytecode associate with a specific class and loader param loader the loader of the class for which injection be attempt param internalclassname the internal java name of the class param triggermethodname the name of the method inject into param desc the descriptor of the method inject into param rule the rule which be inject param th throwable generate during the attempt to parse the rule text or inject code at the trigger point return true if the successful injection be record false if not <END>
<BEG> check whether a rule have be use to transform a specific class <END>
<BEG> record the fact that a rule have be compile with or without success param triggerclass the name of the trigger class to which the rule be attach param loader the classloader of the trigger class param successful true if the rule compile successfully and false if it suffer from parse <SEG> type or compile error param detail text describe more detail of the compilation outcome return true if the rule need to be instal otherwise false <END>
<BEG> uninstall all transforms associate with this script <END>
<BEG> split the text of a script file into a list of individual rule script param scripttext the text obtain from a script file param scriptfile teh name of the file contain teh text return a list of rule script throw exception if there be an error in the format of the script file tesxt <END>
<BEG> add a rule script to the repository return any exist script with the same name or null if no such script can be find <END>
<BEG> remove a rule script from the repository return the script if it be find or null if be not find <END>
<BEG> remove a rule script from the repository by name return the script if it be find or null if be not find <END>
<BEG> locate a rule script with a give name param name the name of the rule script return the script with that name or null if no such script can be find <END>
<BEG> return a list contain all the currently instal rule script <END>
<BEG> check whether any overriding rule be currently load return true if there be no override rule false if there be any <END>
<BEG> call by a trigger adapter to find a rule specific to a give trigger method <SEG> expect to find a rule create by the corresponding check adapter <END>
<BEG> call by a check or trigger adapter to fail a transform because of a type issue <END>
<BEG> enable triggering of rule inside the current thread param isreset true if this be call by rule code and hence should reset a setting enable by rule code false if call internally by byteman and hence should nto reset a setting enable by rule code return true if triggering be previously enable and false if it be already disabled <END>
<BEG> check if triggering of rule be enable inside the current thread return true if triggering be enable and false if it be disabled <END>
<BEG> check whether dumping of the control flow graph for the trigger class be enabled return true if dumping be enable etherwise false <END>
<BEG> check whether dumping of the control flow graph for the trigger class during construction be enabled return true if dumping be enable etherwise false <END>
<BEG> check whether debug mode for rule processing be enable or disabled return true if debug mode be enable or verbose mode be enable otherwise false <END>
<BEG> check whether compilation of rule be enable or disabled return true if compilation of rule be enabled etherwise false <END>
<BEG> check whether downcast in binding be disallow <END>
<BEG> check whether change to org jboss byteman <END>
<BEG> java lang be normally exclude but we can make an exception if ask <END>
<BEG> check whether a class should not be consider for transformation param clazz the class to check return true if clazz should not be consider for transformation otherwise false <END>
<BEG> test whether a class with a give name be locate in the byteman package param classname the name to be checked return true if a class be locate in the byteman package otherwise return false <END>
<BEG> check whether a rule have be instal for this transform <END>
<BEG> record that this binding occur on the lhs of an assignment <END>
<BEG> record that this binding occur on the lhs of an assignment return true if this binding occur on the lhs <END>
<BEG> add the method parameter binding to the front of the list n b <END>
<BEG> append a binding to the end of the currrent binding list param bind the binding <END>
<BEG> compile code to convert a numeric or character primitive to a numeric or character primitive param fromtype the type of the value to be convert param totype the type require after conversion <END>
<BEG> increment the stack count and return this to allow chain param increment the amount ot add to stackcount can be negative return this throw compileexception if the stack count go negative <END>
<BEG> verify that variable mention in this expression be actually available in the supplied binding list and infer validate the type of this expression or it subexpressions where possible throw org jboss byteman rule exception typeexception if any variable be miss or have the wrong type <END>
<BEG> return the operand with the give index or null if the index be out of range param index the index return the operand with the give index <END>
<BEG> treat this a a normal bind because an update to a field reference do not update any binding throw typeexception if any variable be miss or have the wrong type <END>
<BEG> prune the candidate list remove all method whose parameter at index argidx can not be assign to class argclazz param candidate candidate match method param argidx index of arg curently be check param argclazz class of arg curently be check return the pruned method list <END>
<BEG> return the method whose signature be the best fit for the call argument type <END>
<BEG> verify that variable mention in this expression be actually available in the supplied binding list and infer validate the type of this expression or it subexpressions where possible throw typeexception if any variable be miss or have the wrong type <END>
<BEG> ensure that all type reference in the expression and it component expression can be resolve <SEG> that the type of the expression be well-defined and that it be compatible with the type expect in the context in which it occur <END>
<BEG> return the operand with the give index or null if the index be out of range param index the operand index return the operand with the give index <END>
<BEG> action encapsulation object initializer <END>
<BEG> do debug output for a reduce <END>
<BEG> do debug output for shift <END>
<BEG> get the tag for this node return the tag for this node <END>
<BEG> get the line position for this node return the line position for this node <END>
<BEG> get a string represent the position for this node return a string represent the position for this node <END>
<BEG> create a simple node for a builtin token param tag identify the type of this node param file identify the file contain the node 's text param line identify the start line for this node 's text param column identify the start columen for this node 's text return a simple node for a builtin token <END>
<BEG> create a simple node for a builtin token param tag identify the type of this node param file identify the file contain the node 's text param line identify the start line for this node 's text param column identify the start columen for this node 's text param child0 the first child for this node return a simple node for a builtin token <END>
<BEG> create a simple node for a builtin token param tag identify the type of this node param file identify the file contain the node 's text param line identify the start line for this node 's text param column identify the start columen for this node 's text param child0 the first child for this node param child1 the second child for this node return a simple node for a builtin token <END>
<BEG> create a simple node for a builtin token param tag identify the type of this node param file identify the file contain the node 's text param line identify the start line for this node 's text param column identify the start columen for this node 's text param child0 the first child for this node param child1 the second child for this node param child2 the third child for this node return a simple node for a builtin token <END>
<BEG> create a simple node for a builtin token param tag identify the type of this node param file identify the file contain the node 's text param line identify the start line for this node 's text param column identify the start columen for this node 's text param child0 the first child for this node param child1 the second child for this node param child2 the third child for this node param child3 the fourth child for this node return a simple node for a builtin token <END>
<BEG> get the class loader of the target class for the rule return the class loader <END>
<BEG> get the class loader of the rule-specific helper adapter class return the class loader <END>
<BEG> have this rule be typechecked and or compile return true if this rule have be typechecked and or compile otherwise false <END>
<BEG> have this rule be typechecked and compile without error <END>
<BEG> disable triggering of rule inside the current thread <END>
<BEG> enable triggering of rule inside the current thread n b <END>
<BEG> forward an execute request a rule identify by it unique key param key a string key identify the rule instance to be fire param recipient the recipient of the method from which execution of the rule be trigger or null if it be a static method param args the argument of the method from which execution of the rule be trigger <END>
<BEG> a getter allow the helper class for the rule to be identify return the helper <END>
<BEG> a getter allow the helper implementation class name for the rule to be identify return the helper <END>
<BEG> lookup a type by name dereferencing it to it fully qualify type if that exist param name the type name return the type <END>
<BEG> create a type with a give name and class or return an exist type if the supply name and class can be match <END>
<BEG> try to associate each type in the typegroup with a class <END>
<BEG> delete this rendezvous cause any wait thread to return -1 form the rendezvous call <END>
<BEG> retrieve the number of thread wait at the rendezvous or -1 if the rendezvous have be delete return number of thread wait or -1 <END>
<BEG> check if the rendezvous have complete but have not yet be remove return the above <END>
<BEG> getter for signalled flag return signal <END>
<BEG> compares this binding with { code obj } for equality <END>
<BEG> returns a low case name of this type <END>
<BEG> an advice method factory for this type <END>
<BEG> indicates if the use of this advice type be restrictive to the generate advisor mode <SEG> or if it can be use on all instrumentation mode <END>
<BEG> returns the verbose description of this type for use on output <END>
<BEG> returns contextualized argument <END>
<BEG> param type return <END>
<BEG> compares this aspect definition with { code obj } for equality <END>
<BEG> this be the field the invocation be access return <END>
<BEG> the constructor that be call the method return the constructor that be call the method <END>
<BEG> returns the tag that identify the metadata element contain in this instance <END>
<BEG> returns the metadata tag with { code name } <END>
<BEG> indicates whether this instance contain metadata tag with { code name } <END>
<BEG> tags metadata to structure <END>
<BEG> adds a metadata attribute value pair to this instance <END>
<BEG> removes the metadata attribute from this instance <END>
<BEG> removes all attribute identify by the tag { code group } <END>
<BEG> merges incoming data <END>
<BEG> accept the visitor <END>
<BEG> determines whether the current node be actually close and push <END>
<BEG> call this to reinitialize the node stack <END>
<BEG> returns the root node of the ast <END>
<BEG> pushes a node on to the stack <END>
<BEG> returns the node currently on the top of the stack <END>
<BEG> returns the number of child on the stack in the current node scope <END>
<BEG> a definite node be construct from a specified number of child <END>
<BEG> a conditional node be construct if it condition be true <END>
<BEG> override this method if you want to customize how the node dump out it child <END>
<BEG> takes a class [ ] contain interface class <SEG> and return an array of weak reference to thos class object <SEG> sort alphabetically by name <END>
<BEG> hot swap previously register change <END>
<BEG> define a class from the byte name the class to define param b the bytecode param resolve whether to resolve the class return the class <END>
<BEG> read-lock just this level <END>
<BEG> write-unlock this level <END>
<BEG> returns the serialized form of this value <END>
<BEG> returns the length of this value 's serialized form <END>
<BEG> compares { code obj } with this instance for equality <END>
<BEG> the object implement the readexternal method to restore it content by call the method of datainput for primitive type and readobject for object <SEG> string and array <END>
<BEG> override replaceobject to check for remote object that be not remotestubs <END>
<BEG> set the location for debug <END>
<BEG> return location information about the pointcut expression if available <END>
<BEG> called when a new pointcut expression be set <END>
<BEG> try to match the regular expression against the fully qualified name of the target class as well a against the method 's declare class <SEG> plus the name of the method <END>
<BEG> subclasses can override this if it 's possible to filter out some candidate class <END>
<BEG> initialize { link pattern patterns } from the supply < code > string [ ] < code > <END>
<BEG> returns < code > true < code > if the { link pattern } at index < code > patternindex < code > match the supplied candidate < code > string < code > <END>
<BEG> returns < code > true < code > if the exclusion { link pattern } at index < code > patternindex < code > match the supplied candidate < code > string < code > <END>
<BEG> perform the least expensive check for a pointcut match <END>
<BEG> the number of all active monitor run <END>
<BEG> the number of primary monitor run <END>
<BEG> return the listener associate with the pass in name <END>
<BEG> return the listener associate with the index <END>
<BEG> remove the name listener from this compositelistener <END>
<BEG> return true if the name listener exists <END>
<BEG> return the number of listener <END>
<BEG> also return the number of listener <END>
<BEG> set the name of this monitor instance <END>
<BEG> return all the listener in the composite <END>
<BEG> explicitly set the counter value <END>
<BEG> return the counter value <END>
<BEG> increment the counter value and return it <END>
<BEG> enable true or disable false the counter <END>
<BEG> return true if the counter be enable <END>
<BEG> get the key for this monitor <END>
<BEG> return the wrapped decorate jamondatapersister <END>
<BEG> this method save the jamon data <END>
<BEG> this be a noop <END>
<BEG> return directory where jamon data be store <END>
<BEG> param key return take the key and turn it into a file name <END>
<BEG> param file return remove the file extenstion from each file in the array <END>
<BEG> combine monitorcomposites return by each of the instancekeys into 1 monitorcomposite <END>
<BEG> combine monitorcomposites 1 monitorcomposite <END>
<BEG> getcomposite allmonitors be the same a getrootmonitor <END>
<BEG> pass in the unit or range type and return all monitor of that type <END>
<BEG> returns the total of all key in the monitor map <END>
<BEG> wipe out exist jamon data <END>
<BEG> can be override in this package to create a different type of httpmonitem jetty class do this <END>
<BEG> when this event be fire the monitor will be add to the rolling buffer <END>
<BEG> get the underlying bufferlist which can then be use to display it content <END>
<BEG> reset all listener in factory to default setting <END>
<BEG> returns an array of all registered jamonlisteners in the format : key <SEG> jamonlistener factory instance <END>
<BEG> returns the header for display of jamonlisteners <END>
<BEG> using logic document in the class comment load jamon property <END>
<BEG> return freespace totalspace <END>
<BEG> this be call automatically when a gc be fire <END>
<BEG> example : com jamonapi exceptions <END>
<BEG> example : exception <END>
<BEG> return the first monitor that exist in the pass in list <END>
<BEG> return hit count of the pass in monitor if it exist otherwise return 0 param label jamon label param unit jamon unit return count <END>
<BEG> return hit count of the first pass in monitor that exist otherwise return 0 param jmxbeanproperties jamon label return count <END>
<BEG> return the value of the pass in monitor if it exist otherwise return 0 param label jamon label param unit jamon unit param value string represent the metric to return i e <END>
<BEG> param jmxbeanproperties list of jamon property to check for the associated date param value string represent the date metric to return lastaccess <SEG> firstaccess <END>
<BEG> create a jmx objectname out of the pass in string param name return objectname <END>
<BEG> get a list of the garbage collector mbeans <END>
<BEG> take the current monitor value and subtract the previous monitor value from it <END>
<BEG> this method take a string and parse it by break it at ' <SEG> ' <END>
<BEG> get underlying listener class <END>
<BEG> add a listener to this listener type <END>
<BEG> get a handle to the listener by name <END>
<BEG> remove the name listener <END>
<BEG> return listener for display purpose in menu for example <END>
<BEG> return header info for display purpose <END>
<BEG> create from monitor if it be need <END>
<BEG> do wheter activity tracking be on or off <END>
<BEG> same a stop above but subtract out the active that be calculate at the last start <END>
<BEG> return a collection of all the unit type that be currently in this object i e <END>
<BEG> note this work with local <SEG> however when it be put into the map by combine multiple monitorcomposites that have the same key for example on different instance it do not currently work <END>
<BEG> mean be in this jvm and not data distribute from another machine <END>
<BEG> pass in an array with col1=lables <SEG> and col2=units and then call method <END>
<BEG> return the header with basic data and column for each field within the range <END>
<BEG> return the header with basic data and one column for each range <END>
<BEG> get all data include basic data as well a each element within the range <END>
<BEG> get basic data which exclude range data <END>
<BEG> get display data include 1 column for each range <END>
<BEG> a basic report in html format that be sort <END>
<BEG> does this have data ? <END>
<BEG> this return a weighted average <END>
<BEG> since 2 79 return a deep copy of this object <END>
<BEG> return return all the monitorcomposites pass into the constructor a one list <END>
<BEG> get the current factory could be the enabled or disabled factory depend on what be enable <END>
<BEG> enable disable monitorfactory <END>
<BEG> enable or disable the debug factory <END>
<BEG> is the monitorfactory currently enable ? <END>
<BEG> reset remove all monitor <END>
<BEG> this return the header for basic data with no range info in the header <END>
<BEG> this return the data for basic data with no range info <END>
<BEG> return the map underlie this object <END>
<BEG> puts the word 'label ' into the list <END>
<BEG> add each value from the map at an element to the list <END>
<BEG> returns either the pass in range key <SEG> or it build the key from the map key concatenate <END>
<BEG> returns the label for the monitor <END>
<BEG> used to get any arbitrary object into the key <END>
<BEG> factory method that return a usable copy of this object <END>
<BEG> register the jamon driver <END>
<BEG> see java sql driver # connect java lang string <SEG> java util properties <END>
<BEG> returns this driver property <END>
<BEG> boolean acceptsurl string url retrieves whether the driver think that it can open a connection to the give url <END>
<BEG> method that monitor method invocation of the proxied interface <END>
<BEG> reset everything to default and clear out any data <END>
<BEG> returns the monproxy invocation handler should you need access to it method like setlabeler etc <END>
<BEG> by pass any interface to the monitor method <SEG> all public method call and exception will be monitor <END>
<BEG> by pass any interface to the monitor method <SEG> and an array of interface to implement then all public method call and exception will be monitor <END>
<BEG> by pass any interface to the monitor method <SEG> and an interface to implement then all public method call and exception will be monitor <END>
<BEG> note if a connection object be monitor any statements <SEG> preparedstatements <SEG> callablestatements <SEG> and optionally resultsets that it create will automatically be monitor <END>
<BEG> monitor a resultsets method <END>
<BEG> monitor a statements method <SEG> as well a any resultsets it return assume the proper monitoring option be enable <END>
<BEG> for every class in the object interface heirarchy find it implemented interface <END>
<BEG> get the number of exceptions that can be store in the buffer before the old entry must be remove <END>
<BEG> this method be now a noop and will be remove from a future release <END>
<BEG> indicates whether jamon summary stats be keep for sql <END>
<BEG> enables disables jamon summary stats for sql <END>
<BEG> indicates whether sql command detail time <SEG> sql <SEG> stack trace <SEG> be keep in a rolling buffer <END>
<BEG> enables disable whether sql command detail time <SEG> sql <SEG> stack trace <SEG> be keep in a rolling buffer <END>
<BEG> indicates whether resultset method be monitor <END>
<BEG> enables disable whether resultset method be monitor <END>
<BEG> returns true if monproxyfactory be enable <END>
<BEG> enables all monitor <END>
<BEG> enables all monitor except resultset monitoring <END>
<BEG> get the header that can be use to display the exceptions buffer <END>
<BEG> get the exception buffer a an array <SEG> so it can be display <END>
<BEG> get a list of the string to match in the parsed query <END>
<BEG> set the string to match <END>
<BEG> note init be call at time of initialization <END>
<BEG> return sql with original argument value replace with ' ? ' <END>
<BEG> get sql that be pass in to parse <END>
<BEG> returns an array of strings that match the strings specify in the match arraylist <END>
<BEG> returns true if there be any match against the match strings <END>
<BEG> one for the statement <SEG> one for the keyword type of the statment <SEG> and the other number be for the match <END>
<BEG> note matchstrings should contain strings <END>
<BEG> sql type be the first word that be in a sql statement <END>
<BEG> return which distribution the value belong to <END>
<BEG> note up to jdk 8 putall m call the put method below similar to the implementation below <END>
<BEG> return col to be sort compare <END>
<BEG> return true if the bufferlist have data <END>
<BEG> reset bufferlist <END>
<BEG> iterate pass each command each object that be be iterate <END>
<BEG> < ol > < li > 2 date be equal if they be both above or below the calendar field threshold < li > date1 be great if it be great than threshold and date2 be n't < li > date1 be less than the threshold than it be great than date2 <END>
<BEG> replaces number and quote string with ' ? ' <END>
<BEG> replace all invalid file character with valid one <END>
<BEG> compare the pass in col in natural or reverse order <END>
<BEG> compare the pass in col base on the pass in comparator <END>
<BEG> method use by the comparator interface <END>
<BEG> reset thread local variable <END>
<BEG> returns an objects classname minus the package name < p > sample call : < p > string classname=misc getclassname my object ; return string <END>
<BEG> note if the pass object be a colleciton itself or an object [ ] it will be expand <END>
<BEG> sort a 2 dimensional array base on 1 column data in either ascending or descend order <END>
<BEG> formats today date with the pass in date format string <END>
<BEG> formats the pass in date with the pass in date format string <END>
<BEG> get the month out of the pass in date <END>
<BEG> return the day of week from the pass in date <END>
<BEG> get the short date for the pass in day <END>
<BEG> create a case insenstive tree map <END>
<BEG> returns a concurrenthashmap if the jdk support 1 5 or high it or else it return a synchronized hashmap <END>
<BEG> note object should be serializable <END>
<BEG> returns a new { link builder } for { link consolereporter } <END>
<BEG> returns the counter 's current value <END>
<BEG> creates a new ewma which be equivalent to the unix one minute load average and which expect to be tick every 5 second <END>
<BEG> update the moving average with a new value <END>
<BEG> mark the passage of time and decay the current rate accordingly <END>
<BEG> returns the rate in the give unit of time <END>
<BEG> adds an old value with a fixed timestamp to the reservoir <END>
<BEG> stops the reporter <END>
<BEG> version of plus for use in retryupdate <END>
<BEG> equivalent to { code add 1 } <END>
<BEG> returns the current sum <END>
<BEG> equivalent in effect to { link # sum } follow by { link # reset } <END>
<BEG> equivalent to { link # sum } <END>
<BEG> returns the { link # sum } a an { code int } after a narrowing primitive conversion <END>
<BEG> mark the occurrence of a give number of event <END>
<BEG> concatenates element to form a dotted name <SEG> elide any null value or empty string <END>
<BEG> creates a new { link counter } and register it under the give name <END>
<BEG> removes all metric which match the give filter <END>
<BEG> adds a { link metricregistrylistener } to a collection of listener that will be notify on metric creation <END>
<BEG> removes a { link metricregistrylistener } from this registry 's collection of listener <END>
<BEG> returns a set of the name of all the metric in the registry <END>
<BEG> returns a map of all the gauge in the registry and their name which match the give filter <END>
<BEG> starts the reporter polling at the give period <END>
<BEG> stops the reporter and shut down it thread of execution <END>
<BEG> returns the value at the give quantile <END>
<BEG> returns the median value in the distribution <END>
<BEG> returns the value at the 75th percentile in the distribution <END>
<BEG> returns the value at the 99 9th percentile in the distribution <END>
<BEG> returns the entire set of value in the snapshot <END>
<BEG> returns the arithmetic mean of the value in the snapshot <END>
<BEG> cases the base field <END>
<BEG> handles case of update involve initialization <SEG> resize <SEG> create new cells <SEG> and or contention <END>
<BEG> sets base and all cell to the give value <END>
<BEG> times and record the duration of event <END>
<BEG> return the { link counter } register under this name ; or create and register a new { link counter } use the provide metricsupplier if none be register <END>
<BEG> given a metric set <SEG> register them with the give prefix prepended to their name <END>
<BEG> visible for test <END>
<BEG> creates a new registry and set it a the default one under the provide name <END>
<BEG> sets the provided registry a the default one under the provide name param name the default registry name param metricregistry the default registry throw illegalstateexception if the default registry have already be set <END>
<BEG> gets the name of the default registry <SEG> if it have be set return the default registry throw illegalstateexception if the default have not be set <END>
<BEG> same a { link # getdefault } except return null when the default registry have not be set <END>
<BEG> gets the width of the chart that will be display return the width of the chart in pixel <SEG> default to 750 <END>
<BEG> sets the width of the chart in pixel <END>
<BEG> gets the set of tag name for which value will be display on the chart <END>
<BEG> gets the maximum number of data point to display on a chart <END>
<BEG> helper method encode a string use a a url parameter value <END>
<BEG> updates these statistic with all of the stopwatches in the specify collection <END>
<BEG> returns the < tt > timezone < tt > that should be use for display of timestamp value <END>
<BEG> sets the < tt > timezone < tt > which should be use to present this data <END>
<BEG> determines whether or not the specify value be within the acceptable range <END>
<BEG> the < b > timeslice < b > option represent the length of time <SEG> in millisecond <SEG> of the window in which append log event be coalesce to a single groupedtimingstatistics and send to the groupedtimingstatisticshandler <END>
<BEG> sets the value of the < b > timeslice < b > option <END>
<BEG> the < b > queuesize < b > option be use to control the size of the internal queue use by this appender to store logged message before they be send to downstream appenders <END>
<BEG> returns the number of stopwatch message that have be discard due to the queue be full <END>
<BEG> the start method should only be call once <SEG> before the append method be call <SEG> to initialize option <END>
<BEG> the append method should be call each time a stopwatch log message be handle by the logging framework <END>
<BEG> this method should be call on shutdown to flush any pending message in the queue and create a final groupedtimingstatistics instance if necessary <END>
<BEG> formats the specified groupedtimingstatistics instance for csv output <END>
<BEG> formats the specified time in yyyy-mm-dd hh : mm : s format <END>
<BEG> groupedtimingstatisticsformatter that simply return the tostring value of the groupedtimingstatistics instance <SEG> with a newline append <END>
<BEG> remove be not support <END>
<BEG> escapes the specified string for use in a comma-separated value file <END>
<BEG> splits a string use the specify delimiter <SEG> and also trim all the resultant string in the returned array <END>
<BEG> this mbean operation method allow the caller to add a tag whose statistic should be expose a attribute at runtime <END>
<BEG> this mbean operation method allow the caller to remove <SEG> at runtime <SEG> a tag whose statistic be expose <END>
<BEG> overridable helper method get the map of statistic name to statsvalueretriever <END>
<BEG> helper method create an mbeaninfo object that contain 6 read only attribute for each tag name <SEG> each attribute represent a different statistic <END>
<BEG> this helper method send notification if any of the acceptable range detect an attribute value that be outside of the specified range <END>
<BEG> this helper method could potentially be overridden to return a different type of stopwatchparser that be use to parse the string read by this class <END>
<BEG> this method parse a stopwatch from the give message string <END>
<BEG> this method be intend to be use when you want to do a quick check of whether or not the specify string be valid without incur the cost to do a full parse <END>
<BEG> sets the level at which log statement will be make when one of the stop or lap method that do not take an exception be call <END>
<BEG> sets the level at which log statement will be make when one of the stop or lap method that does take an exception be call <END>
<BEG> this method return true if the logger it use be enable at the normalpriority level of this stopwatch <END>
<BEG> gets a threshold level <SEG> in millisecond <SEG> below which log call will not be make <END>
<BEG> determines whether or not to append normalsuffix or slowsuffix to every tag log by this stopwatch <END>
<BEG> sets whether to append normalsuffix and slowsuffix when timethreshold & gt ; 0 and elapsedtime & gt ; = timethreshold param normalandslowsuffixesenabled true enables log extra suffix to normal and slow event ; false default suppress the suffix <END>
<BEG> sets the suffix to use when normalandslowsuffixesenabled=true and timethreshold & gt ; 0 and elapsedtime & lt ; timethreshold <END>
<BEG> sets the suffix to use when normalandslowsuffixesenabled=true and timethreshold & gt ; 0 and elapsedtime & gt ; = timethreshold <END>
<BEG> identical to { link # stop string } <SEG> but also allow you to specify an exception to be log <END>
<BEG> identical to { link # stop string <SEG> string } <SEG> but also allow you to specify an exception to be log <END>
<BEG> this log method can be override by subclass in order to persist the stopwatch <SEG> for example by use a log4j logger <END>
<BEG> reads all the data from the inputlog <SEG> parse it <SEG> and write the statistic data and graph data as desire to the output stream <END>
<BEG> gets the callable task that be wrap by this timedcallable <END>
<BEG> gets the loggingstopwatch that will be use to time the call method execution <END>
<BEG> executes the call method of the underlying task <SEG> use the loggingstopwatch to track the execution time <END>
<BEG> the set of registered monitor object <END>
<BEG> returns the object name build from the { link com netflix servo monitor monitorconfig } <END>
<BEG> returns the config setting associate with the metric <END>
<BEG> returns the point in time when the metric be sample <END>
<BEG> returns the value of the metric a a number <END>
<BEG> returns true if the value for this metric be numeric <END>
<BEG> set the value to show for this monitor <END>
<BEG> returns the duration in nanosecond <END>
<BEG> increment the value by the specified amount <END>
<BEG> returns the current max value since the last reset <END>
<BEG> increment a counter specify by a name <SEG> and a sequence of key <SEG> value pair <END>
<BEG> increment the counter for a give name <SEG> taglist <END>
<BEG> returns a stopwatch that have be start and will automatically record it result to the dynamic timer specify by the give name <SEG> and sequence of key <SEG> value pair <END>
<BEG> returns a stopwatch that have be start and will automatically record it result to the dynamic timer specify by the give config <END>
<BEG> creates a new timedinterface for a give interface < code > ctype < code > with a concrete class < code > concrete < code > and a specific id <END>
<BEG> register a custom monitor <END>
<BEG> compute stats for the current set of value <END>
<BEG> get the number of entry record up to the size of the buffer <END>
<BEG> get the average of the value record <END>
<BEG> get the variance for the population of the recorded value present in our buffer <END>
<BEG> get the standard deviation for the population of the recorded value present in our buffer <END>
<BEG> get the minimum of the value currently in our buffer <END>
<BEG> get the computed percentilevalues <END>
<BEG> return the percentile we will compute : for example : 95 0 <SEG> 99 0 <END>
<BEG> whether we should publish a 'count ' statistic <END>
<BEG> get the frequency at which we should update all stats <END>
<BEG> returns true whether this map contain a tag with the give key <END>
<BEG> get a new { link com netflix servo tag sortedtaglist builder } <END>
<BEG> set the tag to be associate with the current thread <END>
<BEG> remove the tag associate with the current thread <END>
<BEG> sets the offset for the clock <END>
<BEG> get the possibly cache value for a give key <END>
<BEG> creates a new { link iterable } by concatenate two iterables <END>
<BEG> create a memoizer that cache the value produce by getter for a give duration <END>
<BEG> get or refresh and return the late value <END>
<BEG> generates a hash code for a sequence of input value <END>
<BEG> gets all field annotate by annotation <END>
<BEG> returns true if the give string be null or be the empty string <END>
<BEG> join the string representation of each part separate by the give separator string <END>
<BEG> create a new { link threadfactory } that produce daemon thread with a give name format <END>
<BEG> propagates { code throwable } as-is if it be an instance of { link runtimeexception } or { link error } <SEG> or else a a last resort <SEG> wrap it in a { code runtimeexception } then propagates <END>
<BEG> invokes a specified callable <SEG> time out after the specified time limit <END>
<BEG> returns an unmodifiable view of the set create from the give element <END>
<BEG> convenience builder for print out a human-readable list of all of the individual value in a bitmask <END>
<BEG> convenience builder for print out a human-readable string of a bitmask <END>
<BEG> exposes the { link writableassertioninfo } use in the current assertion for good extensibility < br > when write your own assertion class <SEG> you can use the returned { link writableassertioninfo } to change the error message and still keep the description set by the assertion user <END>
<BEG> utility method to ease write custom assertion class use { link string # format string <SEG> object } specifier in error message <END>
<BEG> alternative method for { link abstractassert # overridingerrormessage } < p > you must set it < b > before < b > call the assertion otherwise it be ignore a the fail assertion break the chain call by throw an assertionerror <END>
<BEG> verifies that the actual object satisfy the give requirement express a a { link consumer } <END>
<BEG> creates a new instance of < code > { link localdateassert } < code > <END>
<BEG> create assertion for { link java util concurrent completablefuture } <END>
<BEG> create assertion for { link java util concurrent completionstage } by convert it to a { link completablefuture } and return a { link completablefutureassert } <END>
<BEG> create assertion for { link predicate } <END>
<BEG> creates a new instance of < code > { link listassert } < code > from the give { link stream } <END>
<BEG>  < p > example : < pre > < code class='java ' > assertion will pass assertthat new bigdecimal & quot ; 8 00 & quot ; isnotzero ; assertion will fail assertthat bigdecimal zero isnotzero ; < code > < pre > <END>
<BEG> verifies that the actual value be in [ start <SEG> end ] range start and end include <END>
<BEG> verifies that the actual value be in ] start <SEG> end [ range start exclude <SEG> end exclude <END>
<BEG> verifies that the actual number be close to the give one within the give offset value <END>
<BEG> verifies that the actual number be not close to the give one by less than the give offset < br > < p > when < i > ab actual - expect == offset value < i > <SEG> the assertion : < ul > < li > < b > succeed < b > when use { link assertions # bylessthan bigdecimal } or { link offset # strictoffset number } < li > < li > < b > fail < b > when use { link assertions # within bigdecimal } or { link offset # offset number } < li > < ul > < p > < b > breaking change < b > since 2 9 0 3 9 0 : use { link assertions # bylessthan bigdecimal } imply a < b > strict < b > comparison <SEG> use { link assertions # within bigdecimal } to get the old behavior <END>
<BEG> verifies that the actual number be close to the give one within the give percentage < br > if difference be equal to the percentage value <SEG> assertion be consider valid <END>
<BEG> verifies that the actual number be not close to the give one by the give percentage < br > if difference be equal to the percentage value <SEG> the assertion fails <END>
<BEG> verifies that the actual value be equal to zero <END>
<BEG> verifies that the actual value be not equal to zero <END>
<BEG> verifies that the actual value be non negative positive or equal zero <END>
<BEG> verifies that the actual number be close to the give one within the give offset < br > < p > when < i > ab actual - expect == offset value < i > <SEG> the assertion : < ul > < li > < b > succeed < b > when use { link assertions # within biginteger } < li > < li > < b > fail < b > when use { link assertions # bylessthan biginteger } or { link offset # strictoffset number } < li > < ul > < b > breaking change < b > since 2 9 0 3 9 0 : use { link assertions # bylessthan biginteger } imply a < b > strict < b > comparison <SEG> use { link assertions # within biginteger } to get the old behavior <END>
<BEG> verifies that the actual number be not close to the give one by less than the give offset < br > < p > when < i > ab actual - expect == offset value < i > <SEG> the assertion : < ul > < li > < b > succeed < b > when use { link assertions # bylessthan biginteger } or { link offset # strictoffset number } < li > < li > < b > fail < b > when use { link assertions # within biginteger } < li > < ul > < p > < b > breaking change < b > since 2 9 0 3 9 0 : use { link assertions # bylessthan biginteger } imply a < b > strict < b > comparison <SEG> use { link assertions # within biginteger } to get the old behavior <END>
<BEG> verifies that the number of value in the actual group be great than the give boundary <END>
<BEG> verifies that the number of value in the actual group be great than or equal to the give boundary <END>
<BEG> verifies that the actual group have the same size a give { link iterable } <END>
<BEG> verifies that the actual array contain the give value <SEG> in any order <END>
<BEG> verifies that the actual array contain only the give value and nothing else <SEG> in any order <END>
<BEG> verifies that the actual array contain the give value only once <END>
<BEG> verifies that the actual array contain the give sequence <SEG> without any other value between them <END>
<BEG> verifies that the actual array contain the give subsequence possibly with other value between them <END>
<BEG> verifies that the actual array do not contain duplicate <END>
<BEG> verifies that the actual array start with the give sequence of value <SEG> without any other value between them <END>
<BEG> verifies that the actual group contain only the give value and nothing else <SEG> < b > in order < b > <END>
<BEG> verifies that the actual group contain exactly the give value and nothing else <SEG> < b > in any order < b > < br > < p > example : < pre > < code class='java ' > assertion will pass assertthat new boolean [ ] { true <SEG> false } containsexactlyinanyorder false <SEG> true ; assertthat new boolean [ ] { true <SEG> false <SEG> true } containsexactlyinanyorder true <SEG> true <SEG> false ; assertion will fail assertthat new boolean [ ] { true <SEG> false } containsexactlyinanyorder true ; assertthat new boolean [ ] { true } containsexactlyinanyorder false <SEG> true ; assertthat new boolean [ ] { true <SEG> true <SEG> false } containsexactlyinanyorder false <SEG> true ; < code > < pre > param value the give value <END>
<BEG> verifies that the actual array contains at least one of the give value <END>
<BEG> verifies that the actual value be equal to the give one <END>
<BEG> verifies that the actual value be not equal to the give one <END>
<BEG> verifies that the number of value in the actual array be between the give boundary inclusive <END>
<BEG> verifies that the actual group contain exactly the give value and nothing else <SEG> < b > in any order < b > < br > < p > example : < pre > < code class='java ' > assertion will pass assertthat new byte [ ] { 1 <SEG> 2 } containsexactlyinanyorder byte 1 <SEG> byte 2 ; assertthat new byte [ ] { 1 <SEG> 2 <SEG> 1 } containsexactlyinanyorder byte 1 <SEG> byte 1 <SEG> byte 2 ; assertion will fail assertthat new byte [ ] { 1 <SEG> 2 } containsexactlyinanyorder byte 1 ; assertthat new byte [ ] { 1 } containsexactlyinanyorder byte 1 <SEG> byte 2 ; assertthat new byte [ ] { 1 <SEG> 2 <SEG> 1 } containsexactlyinanyorder byte 1 <SEG> byte 2 ; < code > < pre > param value the give value <END>
<BEG>  < p > example : < pre > < code class='java ' > assertion will pass assertthat byte 1 ispositive ; assertion will fail assertthat byte -1 ispositive ; < code > < pre > <END>
<BEG> verifies that the actual value be less than or equal to the give one <END>
<BEG> verifies that the actual number be not close to the give one by less than the give offset < br > < p > when < i > ab actual - expect == offset value < i > <SEG> the assertion : < ul > < li > < b > succeed < b > when use { link assertions # bylessthan byte } or { link offset # strictoffset number } < li > < li > < b > fail < b > when use { link assertions # within byte } < li > < ul > < p > < b > breaking change < b > since 2 9 0 3 9 0 : use { link assertions # bylessthan byte } imply a < b > strict < b > comparison <SEG> use { link assertions # within byte } to get the old behavior <END>
<BEG> verifies that the actual group contain exactly the give value and nothing else <SEG> < b > in any order < b > < br > < p > example : < pre > < code class='java ' > assertion will pass assertthat new char [ ] { ' a ' <SEG> ' b ' } containsexactlyinanyorder ' b ' <SEG> ' a ' ; assertthat new char [ ] { ' a ' <SEG> ' b ' <SEG> ' a ' } containsexactlyinanyorder ' a ' <SEG> ' a ' <SEG> ' b ' ; assertion will fail assertthat new char [ ] { ' a ' <SEG> ' b ' } containsexactlyinanyorder ' a ' ; assertthat new char [ ] { ' a ' } containsexactlyinanyorder ' a ' <SEG> ' b ' ; assertthat new char [ ] { ' a ' <SEG> ' b ' <SEG> ' a ' } containsexactlyinanyorder ' a ' <SEG> ' b ' ; < code > < pre > param value the give value <END>
<BEG> verifies that the actual { code charsequence } be empty <SEG> i e <SEG> it have a length of 0 <SEG> or be { code null } <END>
<BEG> verifies that the actual { code charsequence } be not empty <SEG> i e <SEG> be not { code null } and have a length of 1 or more <END>
<BEG> verifies that the actual { code charsequence } be blank <SEG> i e <END>
<BEG> verifies that the actual { code charsequence } contain one or more whitespace character accord to { link character # iswhitespace char } <END>
<BEG> verifies that the actual { code charsequence } consist of one or more whitespace character accord to { link character # iswhitespace char } <END>
<BEG> verifies that the actual { code charsequence } be either { code null } <SEG> empty or do not contain any whitespace character accord to { link character # iswhitespace char } <END>
<BEG> verifies that the actual { code charsequence } be either : < ul > < li > { code null } < li > < li > empty < li > < li > contains at least one non-whitespace character accord to { link character # iswhitespace char } < li > < ul > < p > the main difference with { link # isnotblank } be that it accept null or empty { code charsequence } <END>
<BEG> verifies that the actual { code charsequence } have have a length less than the give value use the { code length } method <END>
<BEG> verifies that the actual { code charsequence } have a length less than or equal to the give value use the { code length } method <END>
<BEG> verifies that the actual { code charsequence } have a length great than the give value use the { code length } method <END>
<BEG> verifies that the actual { code charsequence } have length between the give boundary inclusive use the { code length } method <END>
<BEG> verifies that the actual { code charsequence } have the expect line count <END>
<BEG> verifies that the actual { code charsequence } have a length that 's the same a the length of the give { code charsequence } <END>
<BEG> verifies that the actual { code charsequence } be equal to the give one <SEG> ignore case consideration <END>
<BEG> verifies that the actual { code charsequence } be not equal to the give one <SEG> ignore case consideration <END>
<BEG> verifies that the actual { code charsequence } contain all the give value <END>
<BEG> verifies that the actual { code charsequence } contain all the { code charsequence } s of the give iterable <END>
<BEG> verifies that the actual { code charsequence } contain the give sequence of value < b > in the give order without any other value between them < b > <END>
<BEG> verifies that the actual { code charsequence } contain all the value of the give iterable < b > in the iterable iteration order without any other value between them < b > <END>
<BEG> verifies that the actual { code charsequence } contain all the give value < b > in the give order <SEG> possibly with other value between them < b > <END>
<BEG> verifies that the actual { code charsequence } contain the give sequence <SEG> ignore case consideration <END>
<BEG> verifies that the actual { code charsequence } do not contain any of the give value <END>
<BEG> verifies that the actual { code charsequence } do not contain the give regular expression <END>
<BEG> verifies that the actual { code charsequence } match the give regular expression pattern <END>
<BEG> verifies that the actual { code charsequence } do not match the give regular expression pattern <END>
<BEG> verifies that the actual { code charsequence } be equal to the give xml { code charsequence } after both have be format the same way <END>
<BEG> verifies that the actual { code charsequence } be equal to the content of the give file <END>
<BEG> verifies that the actual { code charsequence } be equal to the give one <SEG> ignore whitespace difference < p > examples : < pre > < code class='java ' > assertion will pass assertthat game of thrones isequaltoignoringwhitespace game of thrones isequaltoignoringwhitespace game of thrones isequaltoignoringwhitespace game of thrones isequaltoignoringwhitespace gameof thrones isequaltoignoringwhitespace game of\tthrones isequaltoignoringwhitespace gameofthrones ; assertion will fail assertthat game of thrones isequaltoignoringwhitespace game of thrones ; < code > < pre > < p > this assertion behavior have change in 2 8 0 to really ignore all whitespaces <SEG> the old behaviour have be keep in the good name { link # isequaltonormalizingwhitespace charsequence } <END>
<BEG> verifies that the actual { code charsequence } be equal to the give one <SEG> after the whitespace of both string have be normalize < br > to be exact <SEG> the following rule be apply : < ul > < li > all lead and trail whitespace of both actual and expect string be ignore < li > < li > any remain whitespace <SEG> appear within either string <SEG> be collapse to a single space before comparison < li > < ul > < p > example : < pre > < code class='java ' > assertion will pass assertthat game of thrones isequaltonormalizingwhitespace game of thrones isequaltonormalizingwhitespace game of thrones isequaltonormalizingwhitespace game of thrones isequaltonormalizingwhitespace game of thrones isequaltonormalizingwhitespace game of thrones isequaltonormalizingwhitespace game of\tthrones isequaltonormalizingwhitespace game of thrones ; assertion will fail assertthat game of thrones isequaltonormalizingwhitespace game ofthrones ; assertthat game of thrones isequaltonormalizingwhitespace gameo fthrones ; assertthat game of thrones isequaltonormalizingwhitespace gameof thrones ; < code > < pre > param expect the give { code charsequence } to compare the actual { code charsequence } to <END>
<BEG> verifies that the actual { code charsequence } be not equal to the give one <SEG> after the whitespace of both string have be normalize < br > to be exact <SEG> the following rule be apply : < ul > < li > all lead and trail whitespace of both actual and expect string be ignore < li > < li > any remain whitespace <SEG> appear within either string <SEG> be collapse to a single space before comparison < li > < ul > < p > example : < pre > < code class='java ' > assertion will pass assertthat & quot ; my\tfoo & quot ; isnotequaltonormalizingwhitespace & quot ; my bar & quot ; ; assertthat & quot ; my\tfoo bar & quot ; isnotequaltonormalizingwhitespace & quot ; my foobar & quot ; ; assertion will fail assertthat & quot ; my foo bar & quot ; isnotequaltonormalizingwhitespace & quot ; my foo bar & quot ; ; assertthat & quot ; my foo bar & quot ; isnotequaltonormalizingwhitespace & quot ; my foo bar & quot ; ; assertthat & quot ; my foo bar & quot ; isnotequaltonormalizingwhitespace & quot ; my foo bar & quot ; ; assertthat & quot ; my\tfoo bar & quot ; isnotequaltonormalizingwhitespace & quot ; my foo bar & quot ; ; assertthat & quot ; my foo bar & quot ; isnotequaltonormalizingwhitespace & quot ; my foo bar & quot ; ; < code > < pre > param expect the give { code charsequence } to compare the actual { code charsequence } to <END>
<BEG> verifies that the actual { code charsequence } be equal to another { code charsequence } after normalize new line character i e <END>
<BEG> verifies that the actual { code charsequence } be equal to the give one after both string new line \n <SEG> \r\n have be remove <END>
<BEG> verifies that the actual { code charsequence } be a lowercase { code charsequence } by compare it to a lowercase { code actual } build with { link string # tolowercase } <END>
<BEG> verifies that the actual { code class } be an interface <END>
<BEG> verifies that the actual { code class } be abstract have { code abstract } modifier <END>
<BEG> verifies that the actual { code class } be package-private have no modifier <END>
<BEG> verifies that the actual { code class } have the give { code annotation } s < p > example : < pre > < code class='java ' > & # 64 ; target elementtype type & # 64 ; retention retentionpolicy runtime private static interface force { } & # 64 ; target elementtype type & # 64 ; retention retentionpolicy runtime private static interface hero { } & # 64 ; target elementtype type & # 64 ; retention retentionpolicy runtime private static interface darkside { } & # 64 ; hero & # 64 ; force class jedi implement jedi { } this assertion succeed : assertthat jedi class containsannotations force class <SEG> hero class ; this assertion fail : assertthat jedi class containsannotations force class <SEG> darkside class ; < code > < pre > param annotation annotation who must be attach to the class return { code this } assertion object throw assertionerror if { code actual } be { code null } <END>
<BEG> verifies that the actual { code class } have the give { code annotation } <END>
<BEG> verifies that the actual { code class } have no superclass as in { link class # getsuperclass } <SEG> when { code null } be returned <END>
<BEG> verifies that the actual { code class } have the give accessible public field a in { link class # getfields } <END>
<BEG> verifies that the actual { code class } < b > only < b > have the give accessible public field a in { link class # getfields } and nothing more < b > in any order < b > <END>
<BEG> verifies that the actual { code class } have the give declare field a in { link class # getdeclaredfields } <END>
<BEG> verifies that the actual { code class } < b > only < b > have the give declare { code field } and nothing more < b > in any order < b > a in { link class # getdeclaredfields } <END>
<BEG> verifies that the { link completablefuture } be not do <END>
<BEG> verifies that the { link completablefuture } be cancelled <END>
<BEG> verifies that the { link completablefuture } be complete normally i e <END>
<BEG> verifies that the { link completablefuture } be not complete normally i e <END>
<BEG> verifies that the { link completablefuture } be complete normally with the { code expect } result <END>
<BEG> verifies that the { link completablefuture } have complete exceptionally but have not be cancel <SEG> this assertion be equivalent to : < pre > < code class='java ' > assertthat future iscompletedexceptionally isnotcancelled ; < code > < pre > < p > assertion will pass : < pre > < code class='java ' > completablefuture future = new completablefuture ; future completeexceptionally new runtimeexception ; assertthat future hasfailed ; < code > < pre > assertion will fail : < pre > < code class='java ' > completablefuture future = new completablefuture ; future cancel true ; assertthat future hasfailed ; < code > < pre > return this assertion object <END>
<BEG> verifies that the { link completablefuture } have not fail i e : incomplete <SEG> complete or cancel < br > this be different from { link # isnotcompletedexceptionally } a a cancelled future have not fail but be complete exceptionally <END>
<BEG> same assertion a { link abstractassert # isequalto object } but give date be represent a string either with one of the default support date format or user custom date format set with method { link # withdateformat dateformat } <END>
<BEG> same assertion a { link abstractassert # isequalto object } but give date should not take care of minute <SEG> second and millisecond precision <END>
<BEG> same assertion a { link abstractassert # isequalto object } but give date should not take care of second and millisecond precision <END>
<BEG> same assertion a { link abstractassert # isequalto object } but give date should not take care of millisecond precision <END>
<BEG> same assertion a { link assert # isin object } but give date be represent a string either with one of the support default date format or a user custom date format set with method { link # withdateformat dateformat } <END>
<BEG> verifies that the actual { code date } be < b > strictly < b > before the give one <END>
<BEG> verifies that the actual { code date } be before or equal to the give one <END>
<BEG> same assertion a { link # isbetween date <SEG> date <SEG> boolean <SEG> boolean } but give date be represent a string either with one of the support default date format or a user custom date format set with method { link # withdateformat dateformat } <END>
<BEG> verifies that the actual { code date } be strictly in the past <END>
<BEG> verifies that the actual { code date } be today <SEG> that be match current year <SEG> month and day no check on hour <SEG> minute <SEG> second <SEG> millisecond <END>
<BEG> verifies that the actual { code date } month be equal to the give month <SEG> < b > month value start at 1 < b > january=1 <SEG> february=2 <SEG> <END>
<BEG> verifies that the actual { code date } day of week be equal to the give day of week see { link calendar # day_of_week } for valid value <END>
<BEG> verifies that actual and give { code date } be in the same year <END>
<BEG> verifies that actual and give { code date } have the same day of month <SEG> month and year field value <END>
<BEG> verifies that actual and give { code date } have same minute <SEG> same hour <SEG> day <SEG> month and year field value <END>
<BEG> verifies that actual and give { code date } have same second <SEG> minute <SEG> hour <SEG> day <SEG> month and year field value <END>
<BEG> verifies that the actual { code date } be close to the other date by less than delta express in millisecond <SEG> if difference be equal to delta it 's ok < p > one can use handy { link timeunit } to convert a duration in millisecond <SEG> for example you can express a delta of 5 second with < code > timeunit seconds tomillis 5 < code > <END>
<BEG> verifies that the actual { code date } have the same time a the give timestamp <END>
<BEG> instead of use default date format for the date string base date assertion like { link # isequalto string } <SEG> assertj be gon na use any date format register with one of these method : < ul > < li > { link # withdateformat string } < li > < li > this method < li > < li > { link # registercustomdateformat java text dateformat } < li > < li > { link # registercustomdateformat string } < li > < ul > < p > beware that : < ul > < li > this will be the case for < b > all future date assertion in the test suite < b > < li > < li > once a custom date format be register <SEG> the default date format be not use anymore < li > < ul > < p > to revert to default format <SEG> call { link # usedefaultdateformatsonly } or { link # withdefaultdateformatsonly } <END>
<BEG> instead of use default strict date time parsing <SEG> it be possible to use lenient parsing mode for default date format parser to interpret input that do not precisely match supported date format lenient parse <END>
<BEG> remove all registered custom date format = & gt ; use only the default date format to parse string a date <END>
<BEG> thread safe utility method to parse a date with { link # userdateformats } first <SEG> then { link # default_date_formats } <END>
<BEG> < p > verifies that the actual group contain only the give value and nothing else <SEG> < b > in order < b > <END>
<BEG> verifies that the actual group contain exactly the give value and nothing else <SEG> < b > in any order < b > < br > < p > example : < pre > < code class='java ' > assertion will pass assertthat new double [ ] { 1 0 <SEG> 2 0 } containsexactlyinanyorder 1 0 <SEG> 2 0 ; assertthat new double [ ] { 1 0 <SEG> 2 0 <SEG> 1 0 } containsexactlyinanyorder 1 0 <SEG> 1 0 <SEG> 2 0 ; assertion will fail assertthat new double [ ] { 1 0 <SEG> 2 0 } containsexactlyinanyorder 1 0 ; assertthat new double [ ] { 1 0 } containsexactlyinanyorder 1 0 <SEG> 2 0 ; assertthat new double [ ] { 1 0 <SEG> 2 0 <SEG> 1 0 } containsexactlyinanyorder 1 0 <SEG> 2 0 ; < code > < pre > param value the give value <END>
<BEG> create a { link double } comparator which compare double at the give precision and pas it to { link # usingelementcomparator comparator } <END>
<BEG> verifies that the actual number be close to the give one within the give percentage < br > if difference be equal to the percentage value <SEG> the assertion fails <END>
<BEG> verifies that the actual { code duration } be equal to { link duration # zero } <END>
<BEG> verifies that the actual { code duration } have the give nanos <END>
<BEG> verifies that the actual { code file } exist <SEG> regardless it 's a file or directory <END>
<BEG> verifies that the actual { code file } do not exist <END>
<BEG> verifies that the content of the actual { code file } be equal to the content of the give one <END>
<BEG> verifies that the content of the actual { code file } be equal to the content of the give one <SEG> the comparison be do at the binary level < br > for text file <SEG> use { link # hassametextualcontentas file } <END>
<BEG> verifies that the content of the actual { code file } be the same a the expected one <SEG> the expect { code file } be read with the give charset while the charset use to read the actual path can be provide with { link # usingcharset charset } or { link # usingcharset string } prior to call this method ; if not <SEG> the platform 's default charset a return by { link charset # defaultcharset } will be use <END>
<BEG> verifies that the binary content of the actual { code file } be < b > exactly < b > equal to the give one <END>
<BEG> verifies that the size of the { code file } under test be < b > exactly < b > equal to the give size < b > in byte < b > <END>
<BEG> specifies the name of the charset to use for text-based assertion on the file 's content <END>
<BEG> specifies the charset to use for text-based assertion on the file 's content <END>
<BEG> verifies that the text content of the actual { code file } be < b > exactly < b > equal to the give one < br > the charset to use when read the file should be provide with { link # usingcharset charset } or { link # usingcharset string } prior to call this method ; if not <SEG> the platform 's default charset a return by { link charset # defaultcharset } will be use <END>
<BEG> verifies that the actual { code file } do not have a parent <END>
<BEG> verifies that the tested { link file } digest calculate with the specify { link messagedigest } be equal to the give one <END>
<BEG> verifies that the tested { link file } digest calculate with the specify algorithm be equal to the give one <END>
<BEG> verify that the actual { code file } be a directory contain at least one file match the give { code predicate < file > } <END>
<BEG> verify that the actual { code file } be a directory contain at least one file match the give { code string } interpret a a path matcher a per { link filesystem # getpathmatcher string } <END>
<BEG> verify that the actual { code file } be a directory that do not contain any file match the give { code predicate < file > } <END>
<BEG> verify that the actual { code file } be a directory that do not contain any file match the give { code string } interpret a a path matcher a per { link filesystem # getpathmatcher string } <END>
<BEG> verify that the actual { code file } be an empty directory <END>
<BEG> verify that the actual { code file } be a non empty directory <END>
<BEG> verifies that the actual group contain exactly the give value and nothing else <SEG> < b > in any order < b > < br > < p > example : < pre > < code class='java ' > assertion will pass assertthat new float [ ] { 1 0f <SEG> 2 0f } containsexactlyinanyorder 1 0f <SEG> 2 0f ; assertthat new float [ ] { 1 0f <SEG> 2 0f <SEG> 1 0f } containsexactlyinanyorder 1 0f <SEG> 1 0f <SEG> 2 0f ; assertion will fail assertthat new float [ ] { 1 0f <SEG> 2 0f } containsexactlyinanyorder 1 0f ; assertthat new float [ ] { 1 0f } containsexactlyinanyorder 1 0f <SEG> 2 0f ; assertthat new float [ ] { 1 0f <SEG> 2 0f <SEG> 1 0f } containsexactlyinanyorder 1 0f <SEG> 2 0f ; < code > < pre > param value the give value <END>
<BEG> same assertion a { link # isbefore instant } but the { link instant } be build from give string <SEG> which must follow < a href= http : doc oracle com javase 8 doc api java time format datetimeformatter html # iso_instant > iso instant format < a > to allow call { link instant # parse charsequence } method <END>
<BEG> same assertion a { link # isequalto object } where object be expect to be { link instant } but here you pass { link instant } string representation that must follow < a href= http : doc oracle com javase 8 doc api java time format datetimeformatter html # iso_instant > iso instant format < a > to allow call { link instant # parse charsequence } method <END>
<BEG> verifies that the actual { link instant } be in the [ start <SEG> end ] period start and end include <END>
<BEG> verifies that the actual number be not close to the give one by less than the give offset < br > < p > when < i > ab actual - expect == offset value < i > <SEG> the assertion : < ul > < li > < b > succeed < b > when use { link assertions # bylessthan integer } or { link offset # strictoffset number } < li > < li > < b > fail < b > when use { link assertions # within integer } < li > < ul > < p > < b > breaking change < b > since 2 9 0 3 9 0 : use { link assertions # bylessthan integer } imply a < b > strict < b > comparison <SEG> use { link assertions # within integer } to get the old behavior <END>
<BEG> verifies that the unique element of the { link iterable } satisfy the give assertion express a a { link consumer } <SEG> if it do not <SEG> only the first error be report <SEG> use { link softassertions } to get all the error <END>
<BEG> verifies that all element in the actual { code iterable } do not have the specify type include subclass <END>
<BEG> verifies that the actual { link iterable } contain at least one of the give value <END>
<BEG> verifies that the { link iterable } under test contains at least one of the give { link iterable } element <END>
<BEG> extract the value of the give field property from the iterable 's element under test into a new iterable composed of tuples a simple data structure <SEG> this new iterable become the iterable under test <END>
<BEG> extract the value from iterable 's element under test by apply an extract function on them <END>
<BEG> extract the value from iterable 's element under test by apply an extracting function which might throw an exception on them <END>
<BEG> extract the iterable value from iterable 's element under test by apply an iterable extracting function on them and concatenate the result list <END>
<BEG> extract the iterable value from iterable 's element under test by apply an iterable extracting function which might throw a checked exception on them and concatenate the result list <END>
<BEG> extract multiple value from each { code iterable } 's element accord to the give { code function } s and concatenate flatten the extracted value in a list that be use a the new object under test <END>
<BEG> extract from iterable 's element the iterable array value correspond to the give property field name and concatenate them into a single list become the new object under test <END>
<BEG> extract the give property field value from each { code iterable } 's element and flatten the extracted value in a list that be use a the new object under test <END>
<BEG> allows to set a specific comparator for the give type of element or their field <END>
<BEG> use field property by field property comparison include inherited field property instead of rely on actual type a < code > equal < code > method to compare group element for incoming assertion check <END>
<BEG> use a recursive field property by field property comparison include inherited field property instead of rely on actual type < code > equal < code > method to compare group element for incoming assertion check <END>
<BEG> use field property by field property comparison on the < b > give field property only < b > include inherit field property instead of rely on actual type a < code > equal < code > method to compare group element for incoming assertion check <END>
<BEG> use field property by field property comparison on all field property < b > except < b > the give one include inherited field property instead of rely on actual type a < code > equal < code > method to compare group element for incoming assertion check <END>
<BEG> filter the iterable under test keep only elements have a property or field equal to { code expectedvalue } <SEG> the property field be specify by { code propertyorfieldname } parameter <END>
<BEG> filter the iterable under test keep only elements have a property or field match the filter express with the { link filteroperator } <SEG> the property field be specify by { code propertyorfieldname } parameter <END>
<BEG> filter the iterable under test keep only element match the give { link condition } <END>
<BEG> navigate and allow to perform assertion on the first element of the { link iterable } under test <END>
<BEG> < p > verifies that the actual { code iterator } have at least one more element < p > example : < pre > < code class='java ' > iterator & lt ; tolkiencharacter & gt ; elvesringbearers = list galadriel <SEG> elrond <SEG> gandalf iterator ; assertthat elvesringbearers hasnext ; < code > < pre > throw assertionerror if the actual { code iterator } be { code null } or do not have another element <END>
<BEG> < p > verifies that the actual { code iterator } have no more element < p > example : < pre > < code class='java ' > iterator & lt ; string & gt ; result = collections emptylist iterator ; assertthat result isexhausted ; < code > < pre > throw assertionerror if the actual { code iterator } be { code null } or have another element <END>
<BEG> verifies that the actual object at the give index in the actual group satisfy the give condition <END>
<BEG> verifies that the actual list be sort in ascend order accord to the natural ordering of it element <END>
<BEG> verifies that the actual { code localdate } be today <SEG> that be match current year <SEG> month and day <END>
<BEG> verifies that the actual { code localdatetime } be < b > strictly < b > before the give one accord to the { link chronolocaldatetime # timelineorder } comparator which be consistent with { link localdatetime # isbefore chronolocaldatetime } <END>
<BEG> verifies that the actual { code localdatetime } be before or equal to the give one accord to the { link chronolocaldatetime # timelineorder } comparator which be consistent with { link localdatetime # isbefore chronolocaldatetime } <END>
<BEG> verifies that the actual { code localdatetime } be equal to the give one accord to the { link chronolocaldatetime # timelineorder } comparator which be consistent with { link localdatetime # isequal chronolocaldatetime } <END>
<BEG> verifies that the actual { code localdatetime } be not equal to the give one accord to the { link chronolocaldatetime # timelineorder } comparator which be consistent with { link localdatetime # isequal chronolocaldatetime } <END>
<BEG> verifies that the actual { link localdatetime } be close to the current date and time on the utc timezone <SEG> accord to the give { link temporalunitoffset } <END>
<BEG> verifies that actual and give { code localdatetime } have same year <SEG> month <SEG> day <SEG> hour <SEG> minute and second field <SEG> nanosecond field be ignore in comparison <END>
<BEG> verifies that actual and give { link localdatetime } have same year <SEG> month <SEG> day <SEG> hour and minute field second and nanosecond field be ignore in comparison <END>
<BEG> verifies that actual and give { code localtime } have same hour <SEG> minute and second field nanosecond field be ignore in comparison <END>
<BEG> verifies that all the actual map entry satisfy the give { code entryrequirements } <END>
<BEG> verifies that no map entry satisfy the give { code entryrequirements } <END>
<BEG> verifies that the { link map } be { code null } or empty <END>
<BEG> verifies that the number of value in the { link map } be equal to the give one <END>
<BEG> verifies that the number of value in the { link map } be great than the boundary <END>
<BEG> verifies that the number of value in the { link map } be great than or equal to the boundary <END>
<BEG> verifies that the actual map have the same size a the give array <END>
<BEG> verifies that the actual map have the same size a the give { link iterable } <END>
<BEG> verifies that the actual map do not contain any of the give key <END>
<BEG> verifies that the actual map contain only the give entry and nothing else <SEG> < b > in order < b > < br > this assertion should only be use with map that have a consistent iteration order i e <END>
<BEG> extract the value of give key from the map under test into an array <SEG> this new array become the object under test <END>
<BEG> use the give { link function } to extract a value from the { link map } 's entry <END>
<BEG> flatten the value of the give key from the actual map under test into a new array <SEG> this new array become the object under test <END>
<BEG> same semantic a { link # containsonly object [ ] } : verifies that actual contains all element of the give { code iterable } and nothing else <SEG> < b > in any order < b > and ignore duplicate i e <END>
<BEG> verifies that the unique element of the array satisfy the give assertion express a a { link consumer } <SEG> if it do not <SEG> only the first error be report <SEG> use { link softassertions } to get all the error <END>
<BEG> an alias of { link # containsonlyelementsof iterable } : verifies that actual contains all element of the give { code iterable } and nothing else <SEG> < b > in any order < b > <END>
<BEG> verifies that the actual array contain exactly the give value and nothing else <SEG> < b > in order < b > < br > < p > example : < pre > < code class='java ' > ring [ ] elvesrings = { vilya <SEG> nenya <SEG> narya } ; assertion will pass assertthat elvesrings containsexactly vilya <SEG> nenya <SEG> narya ; assertion will fail a actual and expect order differ assertthat elvesrings containsexactly nenya <SEG> vilya <SEG> narya ; < code > < pre > param value the give value <END>
<BEG> verifies that the actual array contain exactly the give value and nothing else <SEG> < b > in any order < b > < br > < p > example : < pre > < code class='java ' > ring [ ] elvesrings = { vilya <SEG> nenya <SEG> narya <SEG> vilya } ; assertion will pass assertthat elvesrings containsexactlyinanyorder vilya <SEG> vilya <SEG> nenya <SEG> narya ; assertion will fail a vilya exists twice in elvesrings assertthat elvesrings containsexactlyinanyorder nenya <SEG> vilya <SEG> narya ; < code > < pre > param value the give value <END>
<BEG> same a { link # containsexactly object } but handle the { link iterable } to array conversion : verifies that actual contains exactly the element of the give { code iterable } and nothing else < b > in the same order < b > <END>
<BEG> verifies that the actual array contain the give sequence in the correct order and < b > without extra value between the sequence value < b > <END>
<BEG> verifies that the actual array do not contain the give sequence in the give order and < b > without extra value between the sequence value < b > <END>
<BEG> verifies that the actual array contain the give subsequence in the correct order possibly with other value between them <END>
<BEG> verifies that the actual array do not contain the give subsequence in the correct order possibly with other value between them <END>
<BEG> verifies that the actual array contain the give object at the give index <END>
<BEG> verifies that all element of the actual array be instance of give class or interface <END>
<BEG> verifies that the actual array do not contain any element of the give { link iterable } i e <END>
<BEG> verifies that all element of actual be present in the give { code iterable } <END>
<BEG> verifies that all element of actual be present in the give value <END>
<BEG> verifies that the actual array contains at least a null element <END>
<BEG> verifies that each element value satisfy the give condition < p > example : < pre > < code class='java ' > string [ ] abc = { a <SEG> b <SEG> c } ; string [ ] abcc = { a <SEG> b <SEG> cc } ; condition & lt ; string & gt ; singlecharacterstring = new condition & lt ; & gt ; s - & gt ; s length == 1 <SEG> single character string ; assertion will pass assertthat abc be singlecharacterstring ; assertion will fail assertthat abcc be singlecharacterstring ; < code > < pre > param condition the give condition <END>
<BEG> verifies that each element value do not satisfy the give condition < p > example : < pre > < code class='java ' > string [ ] abc = { a <SEG> b <SEG> c } ; string [ ] abcc = { a <SEG> b <SEG> cc } ; condition & lt ; string & gt ; morethanonecharacter = = new condition & lt ; & gt ; s - & gt ; s length & gt ; 1 <SEG> more than one character ; assertion will pass assertthat abc arenot morethanonecharacter ; assertion will fail assertthat abcc arenot morethanonecharacter ; < code > < pre > param condition the give condition <END>
<BEG> verifies that all element satisfy the give condition <END>
<BEG> verifies that all element do n't satisfy the give condition <END>
<BEG> verifies that there be < b > at least < b > < i > n < i > element in the actual array satisfy the give condition <END>
<BEG> verifies that the actual array contain all the element of give { code iterable } <SEG> in any order <END>
<BEG> extract the value of give field or property from the array 's element under test into a new list <SEG> this new list become the object under test <END>
<BEG> extract the value of give field property from the array 's element under test into a list compose of tuple a simple data structure <SEG> this new list become the object under test <END>
<BEG> extract the value from the array 's element by apply an extract function on them <SEG> the result list become the new object under test <END>
<BEG> extract the iterable value from arrays element under test by apply an iterable extracting function on them and concatenate the result list into an array which become the new object under test <END>
<BEG> extract the iterable value from arrays element under test by apply an iterable extracting function which might throw an exception on them and concatenate the result list into an array which become the new object under test <END>
<BEG> extract the result of give method invocation from the array 's element under test into a list <SEG> this list become the object under test <END>
<BEG> filter the array under test into a list compose of the element element have a property or field equal to { code expectedvalue } <SEG> the property field be specify by { code propertyorfieldname } parameter <END>
<BEG> filter the array under test into a list compose of the element match the give { link condition } <SEG> allow to perform assertion on the filtered list <END>
<BEG> verifies that all element match the give { link predicate } <END>
<BEG> asserts that the actual object be equal to the give one by compare actual 's property field with other 's < b > not null < b > property field only include inherit one <END>
<BEG> asserts that the actual object be equal to the give one use a property field by property field comparison < b > on the give property field only < b > field can be inherit field or nest field <END>
<BEG> asserts that the actual object be equal to the give one by compare their property field < b > except for the give one < b > inherit one be take into account <END>
<BEG> asserts that the actual object have no null field or property inherit one be take into account <END>
<BEG> asserts that the actual object have only null field or property <END>
<BEG> asserts that the actual object have no null field or property < b > except for the give one < b > inherit one be take into account <END>
<BEG> asserts that actual object be equal to the give object base on a property field by property field comparison include inherit one <END>
<BEG> allows to set a specific comparator to compare property or field with the give name <END>
<BEG> asserts that the actual object have the specify field or property with the give value <END>
<BEG> extracts the value of give field property from the object under test into a list <SEG> this new list become the object under test <END>
<BEG> extracts the value of give field property from the object under test <SEG> the extracted value become the new object under test <END>
<BEG> uses the give { link function } s to extract the value from the object under test into a list <SEG> this new list become the object under test <END>
<BEG> uses the give { link function } to extract a value from the object under test <SEG> the extracted value become the new object under test <END>
<BEG> verifies that the actual { code offsetdatetime } be < b > strictly < b > before the give one accord to the comparator in use <END>
<BEG> verifies that the actual { code offsetdatetime } be before or equal to the give one accord to the comparator in use <END>
<BEG> same assertion a { link # isequalto object } where object be expect to be { link java time offsetdatetime } but here you pass { link java time offsetdatetime } string representation that must follow < a href= http : doc oracle com javase 8 doc api java time format datetimeformatter html # iso_offset_date_time > iso offsetdatetime format < a > to allow call { link java time offsetdatetime # parse charsequence } method <END>
<BEG> verifies that actual and give { code offsetdatetime } have same year <SEG> month <SEG> day <SEG> hour <SEG> minute <SEG> second and nanosecond field <SEG> timezone field be ignore in comparison <END>
<BEG> verifies that actual and give { link java time offsetdatetime } have same year <SEG> month <SEG> day <SEG> hour and minute field second and nanosecond field be ignore in comparison <END>
<BEG> verifies that the actual { link offsetdatetime } be in the [ start <SEG> end ] period start and end include accord to the comparator in use <END>
<BEG> verifies that actual and give { code offsetdatetime } be at the same { link java time instant } <END>
<BEG> verifies that actual and give { link java time offsettime } have same hour and minute field second and nanosecond field be ignore in comparison <END>
<BEG> verifies that actual and give { link java time offsettime } have same hour <SEG> minute <SEG> second and nanosecond field <END>
<BEG> verifies that there be a value present in the actual { link java util optional } <END>
<BEG> verifies that there be a value present in the actual { link java util optional } <SEG> it 's an alias of { link # ispresent } <END>
<BEG> verifies that the actual { link java util optional } be empty <END>
<BEG> verifies that the actual { link java util optional } contain the give value alias of { link # hasvalue object } <END>
<BEG> verifies that the actual { link java util optional } contain a value and give this value to the give { link java util function consumer } for further assertion <END>
<BEG> verifies that the actual { link optional } contain a value which satisfy the give { link condition } <END>
<BEG> verifies that the actual { link optional } contain a value that be an instance of the argument <END>
<BEG> use give custom comparator instead of rely on actual type a < code > equal < code > method to compare the { link optional } value 's object for incoming assertion check <END>
<BEG> verifies that the actual { link java util optional } contain the instance give a an argument i e <END>
<BEG> verifies that the actual { link optional } be not { code null } and not empty and return an object assertion that allow chain object assertion on the optional value <END>
<BEG> verifies that the actual { link java util optionaldouble } have the value in argument <END>
<BEG> verifies that the actual { link java util optionaldouble } have the value close to the argument <END>
<BEG> verifies that the actual { link java util optionaldouble } have a value close to the expect value <SEG> within the give percentage < br > if the difference be equal to the percentage value <SEG> the assertion be consider valid <END>
<BEG> verifies that the content of the actual { code path } be the same a the give one both path must be a readable file <END>
<BEG> deprecate use { link # hassametextualcontentas path <SEG> charset } instead < p > verifies that the content of the actual { code path } be the same a the expected one <SEG> the expect { code path } be read with the give charset while the charset use to read the actual path can be provide with { link # usingcharset charset } or { link # usingcharset string } prior to call this method ; if not <SEG> the platform 's default charset a return by { link charset # defaultcharset } will be use <END>
<BEG> verifies that the text content of the actual { code path } which must be a readable file be < b > exactly < b > equal to the give one < br > the charset to use when read the actual path should be provide with { link # usingcharset charset } or { link # usingcharset string } prior to call this method ; if not <SEG> the platform 's default charset a return by { link charset # defaultcharset } will be use <END>
<BEG> assert that the tested { link path } exist <SEG> not follow symbolic link <SEG> by call { link files # exist path <SEG> linkoption files # exist path <SEG> linkoption nofollow_links } <END>
<BEG> assert that the tested { link path } be absolute the path do not have to exist <END>
<BEG> assert that the tested { link path } be relative opposite to { link path # isabsolute } <END>
<BEG> assert that the tested { link path } be normalized <END>
<BEG> assert that the tested { link path } be canonical by compare it to it { link path # torealpath linkoption real path } <END>
<BEG> assert that the tested { link path } last element string representation be equal to the give filename <END>
<BEG> assert that the tested { link path } have the expect parent path <END>
<BEG> verifies that the { link predicate } evaluate all give { link iterable } 's element to { code true } <END>
<BEG> verifies that the actual number be not close to the give one by less than the give offset < br > < p > when < i > ab actual - expect == offset value < i > <SEG> the assertion : < ul > < li > < b > succeed < b > when use { link assertions # bylessthan short } or { link offset # strictoffset number } < li > < li > < b > fail < b > when use { link assertions # within short } < li > < ul > < p > < b > breaking change < b > since 2 9 0 3 9 0 : use { link assertions # bylessthan short } imply a < b > strict < b > comparison <SEG> use { link assertions # within short } to get the old behavior <END>
<BEG> fails with the give message <END>
<BEG> fails with the give message build like { link string # format string <SEG> object } <END>
<BEG> fails with the give message and with the { link throwable } that cause the failure <END>
<BEG> modifies collect error <END>
<BEG> asserts the actual < code > { link spliterator } < code > have the give characteristic <END>
<BEG> asserts the actual < code > { link spliterator } < code > have only the give characteristic and nothing else <END>
<BEG> verifies that the actual value be less than the give { link string } accord to { link string # compareto string } <END>
<BEG> verifies that the actual value be less than or equal to the give { link string } accord to { link string # compareto string } <END>
<BEG> verifies that the actual value be in [ start <SEG> end ] range start include <SEG> end include accord to { link string # compareto string } <END>
<BEG> verifies that the actual value be strictly in ] start <SEG> end [ range start exclude <SEG> end exclude accord to { link string # compareto string } <END>
<BEG> verifies that the actual value be equal to expect build use { link string # format string stringtemplate <SEG> object args } <END>
<BEG> verifies that the actual { link temporal } be close to the other accord to the give { link temporaloffset } <END>
<BEG> same assertion a { link # iscloseto temporal <SEG> temporaloffset } but the { code temporal } be build from a give string that follow predefined iso date format < a href= http : doc oracle com javase 8 doc api java time format datetimeformatter html > predefined formatters < a > to allow call { link # parse string } } method <END>
<BEG> verifies that the message of the actual { code throwable } be equal to the give one <END>
<BEG> verifies that the actual { code throwable } have a cause similar to the give one <SEG> that be with the same type and message it do not use the { link throwable # equal object equal } method for comparison <END>
<BEG> verifies that the message of the actual { code throwable } start with the give description <END>
<BEG> verifies that the message of the actual { code throwable } start with the give description <SEG> after be format use the { link string # format } method <END>
<BEG> verifies that the message of the actual { code throwable } contain the give description <END>
<BEG> verifies that the message of the actual { code throwable } do not contain any of the give value or be { code null } <END>
<BEG> verifies that the stack trace of the actual { code throwable } contain the give description <SEG> after be format use the { link string # format } method <END>
<BEG> verifies that a sequence of the message of the actual { code throwable } match with the give regular expression see { link java util regex matcher # find } < br > the { link pattern } use under the hood enable the { link pattern # dotall } mode <END>
<BEG> verifies that the cause of the actual { code throwable } be an instance of the give type <END>
<BEG> verifies that the cause of the actual { code throwable } be < b > exactly < b > an instance of the give type <END>
<BEG> verifies that the actual { code throwable } have a root cause similar to the give one <SEG> that be with the same type and message it do not use the { link throwable # equal object equal } method for comparison <END>
<BEG> verifies that the root cause of the actual { code throwable } be an instance of the give type <END>
<BEG> verifies that the root cause of the actual { code throwable } be < b > exactly < b > an instance of the give type <END>
<BEG> verifies that the message of the root cause of the actual { code throwable } be equal to the give one <END>
<BEG> verifies that the { link org assertj core api throwableassert throwingcallable } do n't raise a throwable <END>
<BEG> verifies that the actual { code uri } have no path <END>
<BEG> verifies that the actual { code uri } have a parameter with the expect name <END>
<BEG> verifies that the actual { code uri } have a parameter with the expect name and value <END>
<BEG> verifies that the actual { code uri } do not have a parameter with the specify name <END>
<BEG> verifies that the actual { code uri } do not have a parameter with the expect name and value <END>
<BEG> verifies that the actual { code url } have the expect path which must not be null <END>
<BEG> same assertion a { link # isbefore zoneddatetime } but the { link zoneddatetime } be build from give string <SEG> which must follow < a href= http : doc oracle com javase 8 doc api java time format datetimeformatter html # iso_date_time > iso date-time format < a > to allow call { link zoneddatetime # parse charsequence <SEG> datetimeformatter } method <END>
<BEG> same assertion a { link # isbeforeorequalto zoneddatetime } but the { link zoneddatetime } be build from give string which must follow < a href= http : doc oracle com javase 8 doc api java time format datetimeformatter html # iso_date_time > iso date-time format < a > to allow call { link zoneddatetime # parse charsequence <SEG> datetimeformatter } method <END>
<BEG> creates a new instance of < code > { link classassert } < code > param actual the actual value <END>
<BEG> creates a new instance of < code > { link charsequenceassert } < code > from a { link stringbuilder } <END>
<BEG> creates a new instance of < code > { link java time offsetdatetime } < code > <END>
<BEG> allows to capture and then assert on a { link throwable } easy do with lambda <END>
<BEG> entry point to check that an exception of type t be throw by a give { code throwingcallable } which allow to chain assertion on the thrown exception <END>
<BEG> allows to capture and then assert on a { link throwable } more easily when use with java 8 lambda <END>
<BEG> globally set whether < code > { link org assertj core api abstractiterableassert # extract string iterableassert # extract string } < code > and < code > { link org assertj core api abstractobjectarrayassert # extract string objectarrayassert # extract string } < code > should be allow to extract private field <SEG> if not and they try it fail with exception <END>
<BEG> assertions entry point for bigdecimal { link offset } to use with iscloseto assertion <END>
<BEG> assertions entry point for double { link org assertj core data percentage } to use with iscloseto assertion for percentage <END>
<BEG> creates a new instance of { link pathassert } param actual the path to test return the create assertion object <END>
<BEG> returns the give assertion <END>
<BEG> creates a new instance of < code > { link objectassert } < code > assumption <END>
<BEG> creates int [ ] assumption for { link atomicintegerarray } <END>
<BEG> creates a new instance of { link pathassert } assumption <END>
<BEG> create assertion for { link futureassert } assumption <END>
<BEG> creates a new instance of < code > { link listassert } < code > assumption from the give { link stream } <END>
<BEG> verifies that the actual atomic value be true <END>
<BEG> verifies that the atomicintegerarray be empty <END>
<BEG> verifies that the atomicintegerarray be not empty <END>
<BEG> verifies that the atomicintegerarray have the give array <END>
<BEG> verifies that the number of value in the atomicintegerarray be equal to the give one <END>
<BEG> verifies that the atomicintegerarray have the same size a give { link iterable } <END>
<BEG> verifies that the actual { link atomicintegerarray } contain the give value <SEG> in any order <END>
<BEG> verifies that the actual atomic array contain < b > only < b > the give value and nothing else <SEG> in any order <END>
<BEG> verifies that the actual atomic array contain the give value only once <END>
<BEG> verifies that the actual atomic array contain the give sequence <SEG> without any other value between them <END>
<BEG> verifies that the actual atomic array contain the give subsequence possibly with other value between them <END>
<BEG> verifies that the actual atomic array do not contain the give value <END>
<BEG> verifies that the actual atomic array do not contain the give value at the give index <END>
<BEG> verifies that the actual atomic array do not contain duplicate <END>
<BEG> verifies that the actual atomic array start with the give sequence of value <SEG> without any other value between them <END>
<BEG> verifies that the actual atomicintegerarray be sort accord to the give comparator < br > empty array be consider sorted whatever the comparator be < br > one element array be consider sorted if the element be compatible with comparator <SEG> otherwise an assertionerror be throw <END>
<BEG> verifies that the actual atomic have a value in [ start <SEG> end ] range start include <SEG> end include <END>
<BEG> verifies that the actual atomic have a value strictly less than the give one <END>
<BEG> verifies that the actual atomic have a positive value <END>
<BEG> verifies that the actual atomic have a non positive value negative or equal zero <END>
<BEG> verifies that the actual atomic have a value close to the give one within the give percentage < br > if difference be equal to the percentage value <SEG> assertion be consider valid <END>
<BEG> verifies that the actual atomic have a value close to the give one within the give offset <END>
<BEG> verifies that the actual atomic have not the give value <END>
<BEG> verifies that the actual { link atomicmarkablereference } be < b > not < b > mark <END>
<BEG> verifies that the actual atomicreferencearray contain only the give value and nothing else <SEG> < b > in any order < b > and ignore duplicate i e <END>
<BEG> verifies that the actual atomicreferencearray contain only the give value and nothing else <SEG> < b > in order < b > < br > < p > example : < pre > < code class='java ' > atomicreferencearray & lt ; ring & gt ; elvesrings = new atomicreferencearray & lt ; & gt ; new ring [ ] { vilya <SEG> nenya <SEG> narya } ; assertion will pass assertthat elvesrings containsexactly vilya <SEG> nenya <SEG> narya ; assertion will fail a actual and expect order differ assertthat elvesrings containsexactly nenya <SEG> vilya <SEG> narya ; < code > < pre > param value the give value <END>
<BEG> verifies that the actual atomicreferencearray contain exactly the give value and nothing else <SEG> < b > in any order < b > < br > < p > example : < pre > < code class='java ' > atomicreferencearray & lt ; ring & gt ; elvesrings = new atomicreferencearray & lt ; & gt ; new ring [ ] { vilya <SEG> nenya <SEG> narya } ; assertion will pass assertthat elvesrings containsexactlyinanyorder vilya <SEG> vilya <SEG> nenya <SEG> narya ; assertion will fail a vilya be contain twice in elvesrings <END>
<BEG> verifies that each element value satisfy the give condition < p > example : < pre > < code class='java ' > atomicreferencearray & lt ; string & gt ; abc = new atomicreferencearray & lt ; & gt ; new string [ ] { a <SEG> b <SEG> c } ; atomicreferencearray & lt ; string & gt ; abcc = new atomicreferencearray & lt ; & gt ; new string [ ] { a <SEG> b <SEG> cc } ; condition & lt ; string & gt ; singlecharacterstring = new condition & lt ; & gt ; s - & gt ; s length == 1 <SEG> single character string ; assertion will pass assertthat abc be singlecharacterstring ; assertion will fail assertthat abcc be singlecharacterstring ; < code > < pre > param condition the give condition <END>
<BEG> verifies that each element value do not satisfy the give condition < p > example : < pre > < code class='java ' > atomicreferencearray & lt ; string & gt ; abc = new atomicreferencearray & lt ; & gt ; new string [ ] { a <SEG> b <SEG> c } ; atomicreferencearray & lt ; string & gt ; abcc = new atomicreferencearray & lt ; & gt ; new string [ ] { a <SEG> b <SEG> cc } ; condition & lt ; string & gt ; morethanonecharacter = = new condition & lt ; & gt ; s - & gt ; s length & gt ; 1 <SEG> more than one character ; assertion will pass assertthat abc arenot morethanonecharacter ; assertion will fail assertthat abcc arenot morethanonecharacter ; < code > < pre > param condition the give condition <END>
<BEG> verifies that at least one element in the actual atomicreferencearray have the specify type match include subclass of the give type <END>
<BEG> verifies that all the element in the actual atomicreferencearray do not belong to the specify type include subclass <END>
<BEG> extract the value of give field property from the array 's element under test into a new array compose of tuple a simple data structure <SEG> this new array become the array under test <END>
<BEG> extract the value from the array 's element by apply an extracting function which might throw an exception on them <END>
<BEG> verifies that all the element of actual 's array match the give { link predicate } <END>
<BEG> verifies that all the element satisfy give requirement express a a { link consumer } <END>
<BEG> verifies that at least one element satisfy the give requirement express a a { link consumer } <END>
<BEG> creates a new instance of < code > { link org assertj core api bigdecimalassert } < code > <END>
<BEG> creates a new instance of < code > { link org assertj core api classassert } < code > param actual the actual value <END>
<BEG> creates a new instance of < code > { link org assertj core api genericcomparableassert } < code > with standard comparison semantics <END>
<BEG> creates a new instance of { link futureassert } param < result > the type of the value contain in the { link java util concurrent future } <END>
<BEG> creates a new instance of < code > { link org assertj core api objectassert } < code > for any object <END>
<BEG> delegates the creation of the { link assert } to the { link assertprovider # assertthat } of the give component <END>
<BEG> alias for { link # thenexceptionoftype class } for { link nullpointerexception } <END>
<BEG> creates a new assumption 's instance for a < code > boolean < code > value <END>
<BEG> creates a new assumption 's instance for a { link boolean } value <END>
<BEG> creates a new assumption 's instance for a < code > boolean < code > s ' array <END>
<BEG> creates a new assumption 's instance for an object value <END>
<BEG> creates a new assumption 's instance for an object ' array <END>
<BEG> creates a new assumption 's instance from a no parameter lambda expression <SEG> < code > { literal - > } { some code { literal } } < code > <END>
<BEG> verifies that the give value satisfy this condition <END>
<BEG> verifies that { link doublepredicate } evaluate all the give value to { code true } <END>
<BEG> throws an { link assertionerror } with the give message <END>
<BEG> throws an { link assertionerror } with the give message and with the { link throwable } that cause the failure <END>
<BEG> throws an { link assertionerror } with a message explain that a { link throwable } of give class be expect to be throw but have not be <END>
<BEG> creates a new < code > { link filters } < code > with the array to filter <END>
<BEG> filter the underlie group <SEG> keep only element satisfy the give { link condition } < br > same a { link # have condition } - pick the method you prefer to have the most readable code <END>
<BEG> alias of { link # with string } for synthetic sugar to write thing like : < pre > < code class='java ' > filter employee with name equalsto alex and job notequalsto lawyer get ; < code > < pre > param propertyorfieldname the name of the property field use for filter <END>
<BEG> filters the underlie iterable to keep object with property specify by { link # with string } < b > equal to < b > give value <END>
<BEG> filters the underlie iterable to keep object with property specify by { link # with string } < b > not equal to < b > give value <END>
<BEG> filters the underlie iterable to keep object with property specify by { link # with string } < b > equal to < b > one of the give value <END>
<BEG> returns the result filter iterable & lt ; e & gt ; even if the constructor parameter type be an array <END>
<BEG> { link instanceofassertfactory } for an object of a specific type <END>
<BEG> { link instanceofassertfactory } for an array of element <END>
<BEG> creates a new instance of < code > { link classassert } < code > < p > we do n't return { link classassert } a it have override method to annotate with { link safevarargs } <END>
<BEG> creates a new instance of < code > { link objectassert } < code > for any object <END>
<BEG> verifies that no proxied assertion method have fail <END>
<BEG> puts the { code comparator } for the give { code clazz } <END>
<BEG> allows to ignore in the recursive comparison the object under test field match the give regexes <END>
<BEG> adds the give type to the list of the object under test field type to ignore in the recursive comparison <END>
<BEG> returns the list of the object under test field to ignore in the recursive comparison <END>
<BEG> force a recursive comparison on all field except java type <END>
<BEG> adds the give field to the list of field to force a recursive comparison on <END>
<BEG> adds the give regexes to the list of regexes use find the field to force a recursive comparison on <END>
<BEG> sets whether to ignore collection order in the comparison <END>
<BEG> adds the give field to the list of the object under test field to ignore collection order in the recursive comparison <END>
<BEG> returns the list of the object under test field to ignore collection order in the recursive comparison <END>
<BEG> registers the give { link comparator } to compare the field with the give type <END>
<BEG> sets whether the recursive comparison will check that actual 's type be compatible with expect 's type the same applies for each field <END>
<BEG> determine if the pass in class have a non-object equal method <END>
<BEG> get a deterministic hashcode int value for an object <SEG> regardless of when it be create or where it be load into memory <END>
<BEG> makes the recursive comparison to ignore all < b > actual null field < b > but note that the expected object null field be use in the comparison <END>
<BEG> makes the recursive comparison to ignore the object under test field match the give regexes <END>
<BEG> by default the recursive comparison use overridden { code equal } method to compare field <SEG> this method allow to compare recursively all field < b > except field with java type < b > at some point we need to compare something ! <END>
<BEG> by default the recursive comparison use overridden { code equal } method to compare field <SEG> this method allow to force a recursive comparison for the give field it add them to the already registered one <END>
<BEG> by default the recursive comparison use overridden { code equal } method to compare field <SEG> this method allow to force a recursive comparison for all field of the give type it add them to the already registered one <END>
<BEG> makes the recursive comparison to ignore collection order in the object under test field match the specify regexes <END>
<BEG> makes the recursive comparison to check that actual 's type be compatible with expect 's type and do the same for each field <END>
<BEG> allows to register a specific comparator to compare the field with the give type <END>
<BEG> returns the causal assertionerror error message in the order that they be throw <END>
<BEG> verifies that the message of the actual { code throwable } be equal to the give one build use { link string # format string <SEG> object } syntax <END>
<BEG> verifies that the actual { code throwable } have a cause similar to the give one <SEG> that be with same type and message it do not use { link throwable # equal object equal } method for comparison <END>
<BEG> verifies that the message of the actual { code throwable } do not contain the give content or be null <END>
<BEG> assertions entry point for double { link offset } <END>
<BEG> sets the message that will replace the default message of an assertion failure <END>
<BEG> returns the text of this object 's description <SEG> it be an empty string if no description be set <END>
<BEG> returns whether the text of this object 's description be set <END>
<BEG> sets the description of an assertion <SEG> if give null an empty { link description } be set <END>
<BEG> creates a new < code > { link allof } < code > param < t > the type of object the give condition accept <END>
<BEG> returns the condition to join <END>
<BEG> returns the configuration use in for all test <END>
<BEG> triggers load any registered { link configuration } <END>
<BEG> creates a new { link offset } that let { code iscloseto } assertion pass when { code |actual-expected| < = offset value } <END>
<BEG> creates a new strict { link offset } that let { code iscloseto } assertion pas when { code |actual-expected| < offset value } <END>
<BEG> checks if difference between temporal value be less then offset <END>
<BEG> returns absolute value of the difference accord to time unit <END>
<BEG> return a string who will be unquoted in message format without `` param string the string who will be unquoted <END>
<BEG> creates a new instance for a positive check of the { code final } modifier <END>
<BEG> returns the singleton instance of this class <END>
<BEG> interprets a printf-style format { code string } for failed assertion message <END>
<BEG> returns the causal assertionerrors in the order that they be throw <END>
<BEG> indicates that an { link java util optionaldouble } be empty so it do n't have the expect value <END>
<BEG> indicates that a value should be present in an empty { link java util optional } <END>
<BEG> indicates that the provide { link java util optional } do not contain the provided argument judging by reference equality <END>
<BEG> creates an < code > { link assertionerror } < code > indicate that an assertion that verify that two object be equal fail < br > the < code > { link assertionerror } < code > message be build so that it differentiate { link # actual } and { link # expect } description in case their string representation be the same like 42 float and 42 double <END>
<BEG> creates a new < code > { link shouldbeinstance } < code > when object we want to check type be null <END>
<BEG> creates a new < code > { link shouldhavesize } < code > for file size <END>
<BEG> create a instance specify a label param label of what should not be null return the new instance <END>
<BEG> provides extractor for extract { link java lang object # tostring } from any object return the build { link function } <END>
<BEG> behavior be describe in { link methodsupport # methodresultfor object <SEG> string } <END>
<BEG> call { link # extract iterable <SEG> function } after convert object to an iterable <END>
<BEG> behavior be describe in { link abstractiterableassert # extract function } param < f > type of element to extract a value from param < t > the extracted value type param object the element to extract a value from param extractor the extractor function return the extracted value <END>
<BEG> specifies the target type of an instance that be previously create with { link # extractproperty string } <END>
<BEG> returns the singleton instance of this class base on { link standardcomparisonstrategy } <END>
<BEG> asserts that two booleans be equal <END>
<BEG> asserts that two longs be not equal <END>
<BEG> asserts that the actual value be a lowercase character <END>
<BEG> verifies that the actual { code class } be assignable from all the { code others } class <END>
<BEG> verifies that the actual { code class } be abstract <END>
<BEG> verifies that the actual { code class } have the give class a direct { code superclass } <END>
<BEG> verifies that the actual { code class } have the { code field } <END>
<BEG> verifies that the actual { code class } have only the { code field } and nothing more <END>
<BEG> verifies that the actual { code class } have the exactly the { code field } and nothing more <END>
<BEG> asserts that two t instance be equal <END>
<BEG> asserts that two t instance be not equal <END>
<BEG> asserts that the actual value be strictly before the other one <END>
<BEG> asserts that the actual value do not satisfy the give < code > { link condition } < code > <END>
<BEG> asserts the give < code > { link condition } < code > be not null <END>
<BEG> sets whether we remove element relate to assertj from assertion error stack trace <END>
<BEG> returns whether or not we remove element relate to assertj from assertion error stack trace <END>
<BEG> creates a < code > { link assertionerror } < code > follow this pattern : < ol > < li > create a < code > { link assertionerror } < code > use < code > { link assertioninfo # overridingerrormessage } < code > a the error message if such value be not { code null } <SEG> or < li > < li > use the give < code > { link assertionerrorfactory } < code > to create an < code > { link assertionerror } < code > <SEG> prepending the value of < code > { link assertioninfo # description } < code > to the error message < li > < ol > param info contain information about the failed assertion <END>
<BEG> creates a < code > { link assertionerror } < code > follow this pattern : < ol > < li > create a < code > { link assertionerror } < code > use < code > { link assertioninfo # overridingerrormessage } < code > a the error message if such value be not { code null } <SEG> or < li > < li > use the give < code > { link errormessagefactory } < code > to create the detail message of the < code > { link assertionerror } < code > <SEG> prepending the value of < code > { link assertioninfo # description } < code > to the error message < li > < ol > param info contain information about the failed assertion <END>
<BEG> creates a < code > { link assertionerror } < code > use the give { code string } a message <END>
<BEG> creates a < code > { link assertionerror } < code > for a { link throwable } class that be expect to be throw <END>
<BEG> if be { link # removeassertjrelatedelementsfromstacktrace } be true <SEG> it filter the stack trace of the give { link assertionerror } by remove stack trace element relate to assertj in order to get a more readable stack trace <END>
<BEG> set the flag indicate that in case of a failure a threaddump be print out <END>
<BEG> asserts that the give file have the same binary content <END>
<BEG> asserts that the give file be an exist file <END>
<BEG> asserts that the give file exists <SEG> regardless it 's a file or directory <END>
<BEG> asserts that the give file do not exist <END>
<BEG> asserts that the give { code file } be empty i e <END>
<BEG> asserts that the give { code file } be not empty i e <END>
<BEG> asserts that the give inputstreams have same content <END>
<BEG> asserts that the give inputstream have the same content a the give string <END>
<BEG> asserts that the give { code iterable } be empty <END>
<BEG> asserts that the give { code iterable } be not empty <END>
<BEG> asserts that the number of element in the give { code iterable } be great than the boundary <END>
<BEG> asserts that the number of element in the give { code iterable } be great than or equal to the boundary <END>
<BEG> asserts that the number of element in the give { code iterable } be between the give low and high boundary inclusive <END>
<BEG> assert that the actual { code iterable } have the same size a the other { code iterable } <END>
<BEG> asserts that the give { code iterable } contain only the give value and nothing else <SEG> in any order <END>
<BEG> asserts that the give { code iterable } contain the give value and only once <END>
<BEG> verifies that the give < code > { link iterable } < code > contain the give sequence of object <SEG> without any other object between them <END>
<BEG> verifies that the give < code > { link iterable } < code > contain the give subsequence of object possibly with other value between them <END>
<BEG> asserts that the give { code iterable } do not contain the give value <END>
<BEG> asserts that the give { code iterable } do not have duplicate value <END>
<BEG> verifies that the give { code iterable } start with the give sequence of object <SEG> without any other object between them <END>
<BEG> asserts that the give { code iterable } contain at least a null element <END>
<BEG> asserts that the give { code iterable } contain exactly the give value and nothing else <SEG> < b > in order < b > <END>
<BEG> verifies that the give { code list } contain the give object at the give index <END>
<BEG> verifies that the give { code list } do not contain the give object at the give index <END>
<BEG> asserts that the give { code map } be { code null } or empty <END>
<BEG> asserts that the number of entry in the give { code map } have the same size a the other { code iterable } <END>
<BEG> asserts that the number of entry in the give { code map } have the same size a the other array <END>
<BEG> asserts that the size of the give { code map } be equal to the size of the other { code map } <END>
<BEG> verifies that the give { code map } contain an entry with key satisfy { code keycondition } <END>
<BEG> verifies that the actual map not contain the give key <END>
<BEG> asserts that the actual value be equal to zero < br > it do not rely on the custom comparisonstrategy if one be set <END>
<BEG> asserts that the actual value be not equal to zero < br > it do not rely on the custom comparisonstrategy if one be set <END>
<BEG> asserts that the actual value be not negative <END>
<BEG> verifies that the give object be an instance of the give type <END>
<BEG> verifies that the give object be an instance of any of the give type <END>
<BEG> verifies that the give object be not an instance of the give type <END>
<BEG> verifies that the actual value do not have the same class a the give object <END>
<BEG> verifies that the actual value be exactly an instance of give type <END>
<BEG> verifies that the actual value type be in give type <END>
<BEG> verifies that the actual value type be not in give type <END>
<BEG> asserts that the give object be not { code null } <END>
<BEG> asserts that two object refer to the same object <END>
<BEG> asserts that two object do not refer to the same object <END>
<BEG> asserts that the give object be present in the give array <END>
<BEG> asserts that the give object be not present in the give array <END>
<BEG> returns the declared field of give class and it superclass stop at superclass in < code > java lang < code > package whose field be not include <END>
<BEG> verifies that the actual value be equal to { code nan } < br > it do not rely on the custom comparisonstrategy if one be set <END>
<BEG> verifies that the actual value be not equal to { code nan } <END>
<BEG> verifies that the give array contain the give subsequence of value possibly with other value between them <END>
<BEG> returns true if give { link iterable } contain give value base on { link objects # areequal object <SEG> object } <SEG> false otherwise < br > if give { link iterable } be null <SEG> return false <END>
<BEG> asserts that the size of the give { code charsequence } be less than the expected size param info contain information about the assertion <END>
<BEG> asserts that the size of the give { code charsequence } be between the give low and high boundary inclusive <END>
<BEG> verifies that actual { code charsequence } s contain only once the give sequence <END>
<BEG> asserts that the give actual { code throwable } message be equal to the give one <END>
<BEG> asserts that the actual { code throwable } have a cause that refer to the expect one <END>
<BEG> returns binary the { code tostring } representation of the give object <END>
<BEG> it reset the static default for the standard representation <END>
<BEG> registers new formatter for the give type <END>
<BEG> returns the { code string } representation of the give object <END>
<BEG> returns the { code string } representation of the give array <SEG> or { code null } if the give object be either { code null } or not an array <END>
<BEG> returns the { code string } representation of the give { code iterable } <SEG> or { code null } if the give { code iterable } be { code null } <END>
<BEG> returns hexadecimal the { code tostring } representation of the give string or character <END>
<BEG> wraps a give array with a < code > { link arraywrapperlist } < code > param array the array to wrap <END>
<BEG> closes the give { link closeable } s <SEG> ignore any thrown exception <END>
<BEG> iso 8601 date format yyyy-mm-dd <SEG> example : < code > 2003-04-23 < code > return a { code yyyy-mm-dd } { link dateformat } <END>
<BEG> iso 8601 date-time format with iso time zone yyyy-mm-dd't'hh : mm : ssx <SEG> example : < code > 2003-04-26t03:01:02+00:00 < code > return a { code yyyy-mm-dd't'hh : mm : ssx } { link dateformat } <END>
<BEG> iso 8601 date-time format with millisecond yyyy-mm-dd't'hh : mm : s sss <SEG> example : < code > 2003-04-26t03:01:02 999 < code > return a { code yyyy-mm-dd't'hh : mm : s sss } { link dateformat } <END>
<BEG> iso 8601 date-time format with millisecond and iso time zone yyyy-mm-dd't'hh : mm : s sssx <SEG> example : < code > 2003-04-26t03:01:02 758+00:00 < code > return a { code yyyy-mm-dd't'hh : mm : s sssx } { link dateformat } <END>
<BEG> { link java sql timestamp } date-time format with millisecond yyyy-mm-dd hh : mm : s sss <SEG> example : < code > 2003-04-26 03:01:02 999 < code > return a { code yyyy-mm-dd hh : mm : s sss } { link dateformat } <END>
<BEG> utility method to parse a date follow { link # iso_date_time_format } <SEG> return null if the give string be null <END>
<BEG> converts the give date to calendar <SEG> return null if the give date be null <END>
<BEG> dates extracts the month of the give date < b > start at 1 < b > january=1 <SEG> february=2 <SEG> <END>
<BEG> dates extracts the day of month of the give date <END>
<BEG> extracts the day of week of the give date <SEG> return value follow { link calendar # day_of_week } <END>
<BEG> extracts the hour of day if the give date 24-hour clock <END>
<BEG> dates extracts the minute of the give date <END>
<BEG> compute the time difference between the two give date in millisecond <SEG> it always give a positive result <END>
<BEG> returns a copy of the give date without the time part which be set to 00:00:00 <SEG> for example : < br > < code > truncatetime 2008-12-29t23:45:12 < code > will give < code > 2008-12-29t00:00:00 < code > <END>
<BEG> return the start position of chunk in the text <END>
<BEG> return the affected line <END>
<BEG> returns the index of the last line of the chunk <END>
<BEG> parse the give text in unified format and create the list of delta for it <END>
<BEG>  return false <SEG> always <END>
<BEG>  return empty diff if get the error while procession the difference <END>
<BEG> constructs a { link patch } from a difference path <END>
<BEG> is this a bootstrap node ? <END>
<BEG> skips sequence of { link diffnode diffnodes } until a { link snake } or bootstrap node be find <SEG> or the end of the path be reach <END>
<BEG> apply this patch to the give target param target the list to patch return the patched text throw illegalstateexception if ca n't apply patch <END>
<BEG> add the give delta to this patch param delta the give delta <END>
<BEG> get the list of computed delta return the delta <END>
<BEG> < p > gets a { code list } of superclass for the give class < p > param cls the class to look up <SEG> may be { code null } return the { code list } of superclass in order go up from this one { code null } if null input <END>
<BEG> < p > gets a { code list } of all interface implement by the give class and it superclass <END>
<BEG> returns the instance dedicate to extraction of field <END>
<BEG> sets whether the use of private field be allow <END>
<BEG> return the value of field from a target object <END>
<BEG> gets an accessible < code > field < code > by name break scope if request <END>
<BEG> reads the name field <END>
<BEG> returns the getter { link method } for a property match the give name in the give object <END>
<BEG> xxx default access superclass workaround when a public class have a default access superclass with public member <SEG> these member be accessible <END>
<BEG> returns whether a give set of modifier implies package access <END>
<BEG> returns result of give method invocation on provided object <END>
<BEG> return the value of a simple property from a target object <END>
<BEG> returns the value of the give property name give target <END>
<BEG> create an typed array from an { link iterable } <END>
<BEG> verifies that the give { code charsequence } be not { code null } or empty <END>
<BEG> verifies that the give array be not { code null } or empty <END>
<BEG> verifies that the give object reference be not { code null } <END>
<BEG> verifies that the give { link filteroperator } reference be not { code null } <END>
<BEG> creates a < em > mutable < em > { code hashset } <END>
<BEG> creates a < em > mutable < em > { link linkedhashset } contain the give element <END>
<BEG> loads the text content of a url into a character string <END>
<BEG> returns the size of the actual array <END>
<BEG> copies the content of the give array into a list <END>
<BEG> see org fest assertion description # value <END>
<BEG> verifies that the actual < code > { link bigdecimal } < code > be positive <END>
<BEG> verifies that the actual < code > { link bigdecimal } < code > be equal to zero <SEG> regardless of precision <END>
<BEG> verifies that the actual < code > { link bigdecimal } < code > be not equal to zero <SEG> regardless of precision <END>
<BEG> verifies that the actual { code byte } value be great or equal to the give one <END>
<BEG> verifies that the actual { code byte } value be equal to zero <END>
<BEG> verifies that the actual { code byte } value be positive <END>
<BEG> verifies that the { code character } value be great or equal to the give one <END>
<BEG> attempts to find the give object in the give < code > { link collection } < code > <SEG> return the one that be find <END>
<BEG> verifies that the actual < code > { link comparable } < code > be < b > not < b > equal to the give one <END>
<BEG> verifies that the actual < code > { link comparable } < code > be less than or equal to the give one <END>
<BEG> verifies that the actual { code double } array be equal to the give array <SEG> within a positive delta <END>
<BEG> verifies that the actual { code double } be great than the give one <END>
<BEG> creates a new holder for a delta value to be use in < code > { link doubleassert # isequalto double <SEG> org fest assertion doubleassert delta } < code > <END>
<BEG> throws an < code > { link assertionerror } < code > with the give message and with the < code > { link throwable } < code > that cause the failure <END>
<BEG> verifies that the actual group contain at least on value <END>
<BEG> reads the image in the specified path <END>
<BEG> verifies that the size of the actual image be equal to the give one <END>
<BEG> verifies that the actual < code > { link list } < code > contain the give object at the give index <END>
<BEG> verifies that the actual < code > { link list } < code > start with the give sequence of object <SEG> without any other object between them <END>
<BEG> verifies that the actual group of object contain the give object <END>
<BEG> verifies that the actual { code string } be equal to the give one ignoring case <END>
<BEG> verifies that the actual { code string } contain the give text regardless of the case <END>
<BEG> assert that the actual object be lenient equal to give one by only compare actual and other on the give accept field only accept field can be inherit field <END>
<BEG> returns a bargroup instance by name <END>
<BEG> registers a barcode implementation <END>
<BEG> see org krysalis barcode4j barcodeclassresolver # resolve string <END>
<BEG> see org krysalis barcode4j barcodeclassresolver # getbarcodenames <END>
<BEG> return the pattern to be apply over the human readable message return string <END>
<BEG> sets the pattern to be apply over the human readable message param v string <END>
<BEG> indicates whether the barcode height calculation should take a font descender into account <END>
<BEG> returns the height of the human-readable part <END>
<BEG> indicates whether a quiet zone be include <END>
<BEG> controls whether a quiet zone should be include or not <END>
<BEG> return the width of the quiet zone in mm <END>
<BEG> returns the vertical quiet zone <END>
<BEG> sets the width of the quiet zone <END>
<BEG> sets the height of the vertical quiet zone <END>
<BEG> determines the y coordinate for the baseline of the human-readable part <END>
<BEG> sets the checksum mode param mode the checksum mode <END>
<BEG> returns the factor by which wide bar be broad than narrow bar <END>
<BEG> indicates whether the start and stop character will be display a part of the human-readable message <END>
<BEG> enables or disable the use of the start and stop character in the human-readable message <END>
<BEG> returns the checksum mode <END>
<BEG> determines whether a character be a valid message character <END>
<BEG> determines whether a character be on of the start stop character <END>
<BEG> encodes a character to a logic handler <END>
<BEG> generates the barcode logic <END>
<BEG> returns the codeset to be use <END>
<BEG> see org krysalis barcode4j barcodegenerator # generatebarcode canvasprovider <SEG> string <END>
<BEG> return the group separator character <END>
<BEG> return the message template with the field for the ean message <END>
<BEG> sets the character that will be use a the check digit marker <END>
<BEG> return true if the bracket in the human-readable part should be omit <END>
<BEG> indicates whether bracket should be use in the human-readable part around the ais <END>
<BEG> return the original message <END>
<BEG> encodes a message into an array of character set index <END>
<BEG> generates the barcode logic param logic the logic handler to receive the generated event param msg the message to encode <END>
<BEG> returns the width between encode character <END>
<BEG> indicates whether the checksum will be display a part of the human-readable message <END>
<BEG> indicates whether the extended character set be enable <END>
<BEG> enables or disable the extended character set <END>
<BEG> escapes us-ascii character a require for the extended character set for code 39 <END>
<BEG> verifies the checksum for a message <END>
<BEG> generates the barcode logic param logic the logic handler to receive generated event param msg the message to encode <END>
<BEG> sets the requested shape for the generated barcodes <END>
<BEG> creates the ecc200 error correction for an encoded message <END>
<BEG> converts the message to a byte array use the default encode cp437 a define by the specification param msg the message return the byte array of the message <END>
<BEG> see org krysalis barcode4j impl datamatrix datamatrixplacement # getbit int <SEG> int <END>
<BEG> see org krysalis barcode4j impl datamatrix datamatrixplacement # setbit int <SEG> int <SEG> boolean <END>
<BEG> see java lang object # tostring <END>
<BEG> returns the start x position of the bar <END>
<BEG> returns the vertical text baseline position <END>
<BEG> checks if a character be an ignored character such a a '- ' dash <END>
<BEG> verifies whether the current setting of the bean be within the limit give by the usps intelligent mail specification <END>
<BEG> handles the checksum base on the give checksum mode <END>
<BEG> handles the checksum base on the checksum mode <END>
<BEG> indicates whether a bearer box be generate or just horizontal bearer bar <END>
<BEG> return the number of data column to produce <END>
<BEG> return the error correction level 0-8 <END>
<BEG> gets the maxcols <END>
<BEG> gets the ratio of the barcode width to the height <END>
<BEG> sets the number of data column for the barcode <END>
<BEG> sets the error correction level for the barcode <END>
<BEG> sets the minimum of row <END>
<BEG> determines the number of error correction codewords for a specified error correction level <END>
<BEG> generates the error correction codewords accord to 4 10 in iso iec 15438:2001 e <END>
<BEG> calculates the necessary number of row a describe in annex q of iso iec 15438:2001 e <END>
<BEG> calculates the number of pad codewords a describe in 4 9 2 of iso iec 15438:2001 e <END>
<BEG> calculates the number of data codewords equal the symbol length descriptor <END>
<BEG> returns the height of a short bar <END>
<BEG> returns the baseline position <END>
<BEG> see org krysalis barcode4j classicbarcodelogichandler # addbar boolean <SEG> int <END>
<BEG> removes ignore character from a valid postnet message <END>
<BEG> does checksum process accord to the checksum mode <END>
<BEG> calculates the width for the optional supplemental part <END>
<BEG> validates a upc ean message <END>
<BEG> calculates the check character for a give message param msg the message return char the check character <END>
<BEG> encodes a character <END>
<BEG> generates a side guard <END>
<BEG> generates event for a supplemental <END>
<BEG> returns the length of the supplemental part of a upc ean message <END>
<BEG> removes an optional supplemental ex <END>
<BEG> compacts an upc-a message to an upc-e message if possible <END>
<BEG> expands an upc-e message to an upc-a message <END>
<BEG> generates a upc-e right guard <END>
<BEG> returns the decimalformat instance to use internally to format number <END>
<BEG> formats a value and add the unit specifier at the end <END>
<BEG> call this method to finish any pending operation after the barcodegenerator have finish it work <END>
<BEG> returns the buffered image that be use to paint the barcode on <END>
<BEG> indicates whether a specific bitmapencoder implementation support a particular mime type <END>
<BEG> returns a bitmapencoder instance for a particular mime type <END>
<BEG> returns a set of strings with all the support mime type from all register bitmapencoders <END>
<BEG> draws a rectangle <END>
<BEG> draws a rectangle param x x coordinate of the upper left corner param y y coordinate of the upper left corner param w the width param h the height <END>
<BEG> returns the namespace prefix return the namespace prefix may be null <END>
<BEG> constructs a fully qualified element name base on the namespace setting <END>
<BEG> serializes a w3c dom node to a string and dump it to system out <END>
<BEG> closes an { link inputstream } <END>
<BEG> parses a value with unit <END>
<BEG> defined mean to apply custom message pattern i e <END>
<BEG> un-escapes escape unicode character in a message <END>
<BEG> filters non-printable ascii character 0-31 and 127 from a string with space and return that <END>
<BEG> converts a short format name <SEG> such a svg or eps <SEG> to it mime type <SEG> if necessary <END>
<BEG> creates a { link pageinfo } from a { link map } contain process hint <END>
<BEG> returns the page number return the page number <END>
<BEG> converts millimeter mm to point pt param mm the value in mm return the value in pt <END>
<BEG> converts millimeter mm to pixels px param mm the value in mm param resolution the resolution in dpi dot per inch return the value in pixel <END>
<BEG> method to replace page number variable in the message <END>
<BEG> packs a bit array into byte <SEG> most significant bit first <END>
<BEG> return number of level <END>
<BEG> return the symbol image <END>
<BEG> in japanese <SEG> the name be write in kanji <SEG> which can have multiple reading <END>
<BEG> return optional description of the type of each phone number <END>
<BEG> return optional description of the type of each e-mail <END>
<BEG> return birthday format a yyyymmdd e g <END>
<BEG> return a location a a latitude longitude pair <END>
<BEG> return start time deprecate use { link # getstarttimestamp } <END>
<BEG> return start time see # getendtimestamp <END>
<BEG> return true if start time be specify a a whole day <END>
<BEG> return event end { link date } <SEG> or { code null } if event have no duration deprecate use { link # getendtimestamp } <END>
<BEG> return event end { link date } <SEG> or -1 if event have no duration see # getstarttimestamp <END>
<BEG> return first element of { link # gettos } or { code null } if none deprecate use { link # gettos } <END>
<BEG> return mailto : deprecate without replacement <END>
<BEG> this implement only the most basic checking for an email address 's validity -- that it contain an ' ' and contain no character disallow by rfc 2822 <END>
<BEG> return latitude in degree <END>
<BEG> return altitude in meter <END>
<BEG> return query string associate with geo uri or null if none exists <END>
<BEG> see < a href= http : www bisg org isbn-13 for dummy html > isbn-13 for dummies < a > <END>
<BEG> flips bit i <END>
<BEG> param from index to start look for unset bit return index of next unset bit <SEG> or { code size } if none be unset until the end see # getnextset int <END>
<BEG> sets a block of 32 bit <SEG> start at bit i <END>
<BEG> sets a range of bit <END>
<BEG> clears all bit set to false <END>
<BEG> efficient method to check if a range of bit be set <SEG> or not set <END>
<BEG> appends the least-significant bit <SEG> from value <SEG> in order from most-significant to least-significant <END>
<BEG> param bitoffset first bit to start write param array array to write into <END>
<BEG> return underlie array of ints <END>
<BEG> interprets a 2d array of booleans a a { code bitmatrix } <SEG> where true mean an on bit <END>
<BEG> < p > gets the requested bit <SEG> where true mean black < p > param x the horizontal component i e <END>
<BEG> < p > sets the give bit to true < p > param x the horizontal component i e <END>
<BEG> exclusive-or xor : flip the bit in this { code bitmatrix } if the corresponding mask bit be set <END>
<BEG> < p > sets a square region of the bit matrix to true < p > param leave the horizontal position to begin at inclusive param top the vertical position to begin at inclusive param width the width of the region param height the height of the region <END>
<BEG> a fast method to retrieve one row of data from the matrix a a bitarray <END>
<BEG> param y row to set param row { link bitarray } to copy from <END>
<BEG> modifies this { code bitmatrix } to represent the same but rotate 180 degree <END>
<BEG> this be useful in detect the enclose rectangle of a 'pure ' barcode <END>
<BEG> this be useful in detect a corner of a 'pure ' barcode <END>
<BEG> return the row size of the matrix <END>
<BEG> param setstring representation of a set bit param unsetstring representation of an unset bit return string representation of entire matrix utilize give string <END>
<BEG> return index of next byte in input byte array which would be read by the next call to { link # readbits int } <END>
<BEG> return number of bit that can be read successfully <END>
<BEG> param value character set eci value return { code characterseteci } represent eci of give value <SEG> or null if it be legal but unsupported throw formatexception if eci value be invalid <END>
<BEG> param name character set eci encode name return characterseteci represent eci for character encoding <SEG> or null if it be legal but unsupported <END>
<BEG> return raw byte represent the result <SEG> or { code null } if not applicable <END>
<BEG> param numbits override the number of bit that be valid in { link # getrawbytes } since 3 3 0 <END>
<BEG> return text representation of the result <END>
<BEG> return list of byte segment in the result <SEG> or { code null } if not applicable <END>
<BEG> return name of error correction level use <SEG> or { code null } if not applicable <END>
<BEG> return number of error correct <SEG> or { code null } if not applicable <END>
<BEG> ends up be a bit faster than { link math # round float } <END>
<BEG> param ax point a x coordinate param ay point a y coordinate param bx point b x coordinate param by point b y coordinate return euclidean distance between point a and b <END>
<BEG> < p > detects a rectangular region of black and white -- mostly black -- with a region of mostly white <SEG> in an image < p > return { link resultpoint } [ ] describe the corner of the rectangular region <END>
<BEG> < p > detects a candidate barcode-like rectangular region within an image <END>
<BEG> calculates the final bitmatrix once for all request <END>
<BEG> return the monomial represent coefficient x^degree <END>
<BEG> implements both addition and subtraction -- they be the same in gf size <END>
<BEG> return 2 to the power of a in gf size <END>
<BEG> return base 2 log of a in gf size <END>
<BEG> return multiplicative inverse of a <END>
<BEG> return product of a and b in gf size <END>
<BEG> return degree of this polynomial <END>
<BEG> return true iff this polynomial be the monomial 0 <END>
<BEG> return coefficient of x^degree term in this polynomial <END>
<BEG> < p > decodes give set of received codewords <SEG> which include both data and error-correction codewords <END>
<BEG> param bytes byte encode a string <SEG> whose encoding should be guess param hint decode hint if applicable return name of guessed encoding ; at the moment will only guess one of : { link # shift_jis } <SEG> { link # utf8 } <SEG> { link # iso88591 } <SEG> or the platform default encode if none of these can possibly be correct <END>
<BEG> < p > deduces version information from data matrix dimension < p > param numrows number of row in module param numcolumns number of column in module return version for a data matrix code of those dimension throw formatexception if dimension do correspond to a valid data matrix size <END>
<BEG> handle end of data situation param context the encoder context param buffer the buffer with the remain encode character <END>
<BEG> return original delegate { link luminancesource } since invert undoes itself <END>
<BEG> decode an image use the hint provide <END>
<BEG> decode an image use the state set up by call sethints previously <END>
<BEG> this method add state to the multiformatreader <END>
<BEG> param content barcode content to encode <END>
<BEG> param target output to append to param pos start position param pattern pattern to append param startcolor unused return 9 deprecate without replacement ; intend a an internal-only method <END>
<BEG> param content string to check for numeric character throw illegalargumentexception if input contains character other than digit 0-9 <END>
<BEG> param array value to sum return sum of value deprecate call { link mathutils # sum int [ ] } <END>
<BEG> two row be equal if they contain the same pair in the same order <END>
<BEG> add an occurrence of a value <END>
<BEG> determines the maximum occurrence of a set value and return all value which be set with this occurrence <END>
<BEG> void setmatrix int x <SEG> int y <SEG> boolean black { set x <SEG> y <SEG> byte black ? <END>
<BEG> public byte [ ] [ ] getscaledmatrix int scale { return getscaledmatrix scale <SEG> scale ; } <END>
<BEG> sets a specific location in the bar param x the location in the bar param value black if true <SEG> white if false ; <END>
<BEG> param black a boolean which be true if the bar black false if it be white param width how many spot wide the bar be <END>
<BEG> sets max min row col value param maxcols maximum allow columns param mincols minimum allow columns param maxrows maximum allow row param minrows minimum allow row <END>
<BEG> param compaction compaction mode to use <END>
<BEG> param compact if true <SEG> enable compaction <END>
<BEG> param encode set character encode to use <END>
<BEG> the segment id represent the segment of the whole file distribute over different symbol <END>
<BEG> return always null deprecate use dedicate already parse field <END>
<BEG> param optionaldata old optional data format a int array deprecate parse and use new field <END>
<BEG> return true if it be the last segment <END>
<BEG> filesize in byte of the encoded file return filesize in byte <SEG> -1 if not set <END>
<BEG> 16-bit crc checksum use ccitt-16 return crc checksum <SEG> -1 if not set <END>
<BEG> return width of image from { link # renderthumbnail } <END>
<BEG> < p > implementations of this method reverse the data mask process apply to a qr code and make it bit ready to read < p > param bit representation of qr code bits param dimension dimension of qr code <SEG> represent by bit <SEG> be unmasked <END>
<BEG> param bit int contain the two bit encode a qr code 's error correction level return errorcorrectionlevel represent the encoded error correction level <END>
<BEG> param maskedformatinfo1 format info indicator <SEG> with mask still apply param maskedformatinfo2 second copy of same info ; both be check at the same time to establish best match return information about the format it specify <SEG> or { code null } if do n't seem to match any known pattern <END>
<BEG> return true if the qr code be mirror <END>
<BEG> apply the result point ' order correction due to mirror <END>
<BEG> < p > determines if this alignment pattern about equal an alignment pattern at the stated position and size -- meaning <SEG> it be at nearly the same center with nearly the same size < p > <END>
<BEG> combines this object 's current estimate of a finder pattern position and module size with a new estimate <END>
<BEG> < p > this method attempt to find the bottom-right alignment pattern in the image <END>
<BEG> performs base64 encode on the < code > raw < code > bytebuffer <SEG> write it to the < code > encode < code > bytebuffer <END>
<BEG> encodes a byte array into base64 notation <END>
<BEG> similar to { link # encodebytes byte [ ] } but return a byte array instead of instantiate a string <END>
<BEG> similar to { link # encodebytes byte [ ] <SEG> int <SEG> int <SEG> int } but return a byte array instead of instantiate a string <END>
<BEG> low-level access to decode ascii character in the form of a byte array <END>
<BEG> decodes data from base64 notation <SEG> automatically detect gzip-compressed data and decompress it <END>
<BEG>  return always return { code false } <END>
<BEG> attempts to read { code len } bytes into the specify { code b } array start at { code offset } from this inputstream <END>
<BEG>  throw illegalargumentexception if the provide skip length be negative since 1 7 <END>
<BEG> writes the specified { code byte } to this output stream <END>
<BEG> writes { code len } byte from the specify { code b } array start at { code offset } to this output stream <END>
<BEG> closes this output stream and release any system resource associate with the stream <END>
<BEG> converts an array of raw binary data into an array of ascii 0 and 1 character <END>
<BEG> decodes a byte array where each byte represent an ascii ' 0 ' or ' 1 ' <END>
<BEG> decodes a string where each char of the string represent an ascii ' 0 ' or ' 1 ' <END>
<BEG> converts an array of raw binary data into an array of ascii 0 and 1 character byte - each byte be a truncated char <END>
<BEG> converts an array of character represent hexadecimal value into an array of byte of those same value <END>
<BEG> converts an array of byte into an array of character represent the hexadecimal value of each byte in order <END>
<BEG> converts a byte buffer into a string represent the hexadecimal value of each byte in order <END>
<BEG> converts a hexadecimal character to an integer <END>
<BEG> converts a string or an array of character byte represent hexadecimal value into an array of byte of those same value <END>
<BEG> converts an array of byte into an array of byte for the character represent the hexadecimal value of each byte in order <END>
<BEG> converts byte buffer into an array of byte for the character represent the hexadecimal value of each byte in order <END>
<BEG> gets the charset name <END>
<BEG> < p > compares two charsequences <SEG> return { code true } if they represent equal sequence of character <END>
<BEG> encodes the give string into a byte buffer use the utf-8 charset <SEG> store the result into a new byte array <END>
<BEG> constructs a new { code string } by decode the specified array of byte use the give charset <END>
<BEG> returns the give charset or the default charset if the give charset be null <END>
<BEG> runs the digest algorithm in { code args [ 0 ] } on the file in { code args [ 1 ] } <END>
<BEG> reads through a bytebuffer and return the digest for the data param messagedigest the messagedigest to use e g <END>
<BEG> returns an md2 messagedigest <END>
<BEG> returns an sha-1 digest <END>
<BEG> returns an sha-512 224 digest <END>
<BEG> test whether the algorithm be support <END>
<BEG> calculates the md2 digest and return the value a a 16 element { code byte [ ] } <END>
<BEG> calculates the md2 digest and return the value a a 32 character hex string <END>
<BEG> calculates the sha-512 224 digest and return the value a a { code byte [ ] } <END>
<BEG> updates the give { link messagedigest } <END>
<BEG> reads through a byte array and return the digest for the data <END>
<BEG> reads through a file and return the digest for the data param data data to digest param option option how to open the file return the digest a a hex string throw ioexception on error reading from the stream since 1 11 <END>
<BEG> the algorithm name see < a href= http : doc oracle com javase 6 doc technotes guide security sunproviders html # sunjceprovider > java 6 cryptography architecture sun providers documentation < a > see < a href= http : doc oracle com javase 7 doc technotes guide security sunproviders html # sunjceprovider > java 7 cryptography architecture sun providers documentation < a > see < a href= http : doc oracle com javase 8 doc technotes guide security sunproviders html # sunjceprovider > java 8 cryptography architecture sun providers documentation < a > see < a href= http : doc oracle com javase 9 security oracleproviders htm # jssec-guid-a47b1249-593c-4c38-a0d0-68fa7681e0a7 > java 9 cryptography architecture sun providers documentation < a > return the algorithm name hmacsha512 for example <END>
<BEG> returns whether this algorithm be available param name the name to check return whether this algorithm be available since 1 11 <END>
<BEG> see { link # apr1crypt string <SEG> string } for detail <END>
<BEG> generates a libc6 crypt $ 1 $ or apache htpasswd $ apr1 $ hash value <END>
<BEG> gets all constant value define in this class <END>
<BEG> generates a libc6 crypt compatible $ 5 $ hash value <END>
<BEG> generates a crypt 3 compatible hash use the des algorithm <END>
<BEG> encodes an object use the caverphone algorithm <END>
<BEG> tests if the encoding of two string be equal <END>
<BEG> sets how multiple possible phonetic encoding be combine <END>
<BEG> sets the rule type to apply <END>
<BEG> sets the number of maximum of phoneme that shall be consider by the engine <END>
<BEG> gets a lang instance for one of the supported nametypes <END>
<BEG> loads language rule from a resource <END>
<BEG> guesses the language of a word <END>
<BEG> decides if the pattern and context match the input start at a position <END>
<BEG> encodes the give string into a caverphone value <END>
<BEG> encodes the give string into a caverphone 2 0 value <END>
<BEG> < p > implements the < i > k & ouml ; lner phonetik < i > algorithm <END>
<BEG> compares the first encode string to the second encode string <END>
<BEG> encodes an object use the daitch-mokotoff soundex algorithm without branch <END>
<BEG> cleans up a name : 1 <END>
<BEG> encodes an object use the match rating approach algorithm <END>
<BEG> obtains the min rating of the length sum of the 2 name <END>
<BEG> determines if two name be homophonous via match rating approach mra algorithm <END>
<BEG> determines if a letter be a vowel <END>
<BEG> processes the name from leave to right first then right to leave remove identical letter in same position <END>
<BEG> replaces any double consonant pair with the single letter equivalent <END>
<BEG> deletes all vowel unless the vowel begin the word <END>
<BEG> encodes a string use the nysiis algorithm <END>
<BEG> retrieves the nysiis code for a give string object <END>
<BEG> returns the mapping code for a give character <END>
<BEG> cleans up the input string before soundex processing by only return upper case letter <END>
<BEG> encodes the strings and return the number of character in the two encode strings that be the same <END>
<BEG> returns the number of character in the two soundex encode strings that be the same <END>
<BEG> encodes a string into it base64 form use the specify charset <END>
<BEG> decodes a base64 string into it original form <END>
<BEG> gets the default charset name use for string decoding and encode <END>
<BEG> percent-encoding base on rfc 3986 <END>
<BEG> decodes a byte [ ] object <SEG> whose byte be encode with percent-encoding <END>
<BEG> encodes an object into it quoted-printable form use the default charset <END>
<BEG> tests if optional transformation of space character be to be use return { code true } if space character be to be transform <SEG> { code false } otherwise <END>
<BEG> defines whether optional transformation of space character be to be use param b { code true } if space character be to be transform <SEG> { code false } otherwise <END>
<BEG> decodes an array quoted-printable character into an array of original byte <END>
<BEG> decodes an array of quoted-printable character into an array of original byte <END>
<BEG> encodes an object into it quoted-printable safe form <END>
<BEG> applies an rfc 1522 compliant encode scheme to the give string of text with the give charset <END>
<BEG> encodes an array of byte into an array of url safe 7-bit character <END>
<BEG> decodes an array of url safe 7-bit character into an array of original byte <END>
<BEG> encodes a string into it url safe form use the specify string charset <END>
<BEG> decodes a url safe string into it original form use the default string charset <END>
<BEG> the { code string } encode use for decode and encode <END>
<BEG> visits a primitive value of the annotation <END>
<BEG> visits a nested annotation value of the annotation <END>
<BEG> returns the size of a runtime [ in ] visible [ type ] annotations attribute contain this annotation and all it < i > predecessor < i > see { link # previousannotation } <END>
<BEG> puts a runtime [ in ] visible [ type ] annotations attribute contain this annotation and all it < i > predecessor < i > see { link # previousannotation } in the give bytevector <END>
<BEG> returns { literal true } if this type of attribute be unknown <END>
<BEG> returns the number of attribute of the attribute list that begin with this attribute <END>
<BEG> returns the total size in byte of all the attribute in the attribute list that begin with this attribute <END>
<BEG> puts all the attribute of the attribute list that begin with this attribute <SEG> in the give byte vector <END>
<BEG> puts an utf8 string into this byte vector <END>
<BEG> returns the internal name of the class <END>
<BEG> returns the number of constant pool item of the class <END>
<BEG> visit the module correspond to the class <END>
<BEG> visits the nest host class of the class <END>
<BEG> visits a non standard attribute of the class <END>
<BEG> visits a member of the nest <END>
<BEG> < b > experimental <SEG> use at your own risk <END>
<BEG> adds an utf8 string to the constant pool of the class be build <END>
<BEG> adds a method type reference to the constant pool of the class be build <END>
<BEG> returns the common super type of the two give type <END>
<BEG> returns the bootstrap method use to compute the value of this constant <END>
<BEG> returns the number of argument pass to the bootstrap method <SEG> in order to compute the value of this constant <END>
<BEG> returns an argument pass to the bootstrap method <SEG> in order to compute the value of this constant <END>
<BEG> returns the argument to pass to the bootstrap method <SEG> in order to compute the value of this constant <END>
<BEG> collects the attribute of this field into the give set of attribute prototype <END>
<BEG> returns true if the owner of the field or method designate by this handle be an interface <END>
<BEG> returns the textual representation of this handle <END>
<BEG> removes the range between start and end from the handler list that begin with the give element <END>
<BEG> returns the number of element of the handler list that begin with the give element <END>
<BEG> returns the size in byte of the jvms exception_table corresponding to the handler list that begin with the give element <END>
<BEG> returns the bytecode offset correspond to this label <END>
<BEG> returns the canonical { link label } instance correspond to this label 's bytecode offset <SEG> if know <SEG> otherwise the label itself <END>
<BEG> makes the give visitor visit this label and it source line number <SEG> if applicable <END>
<BEG> sets the bytecode offset of this label to the give value and resolve the forward reference to this label <SEG> if any <END>
<BEG> returns a string representation of this label <END>
<BEG> returns the size of the method 's code attribute <SEG> in byte <END>
<BEG> visits the default value of this annotation interface method <END>
<BEG> visits the number of method parameter that can have annotation <END>
<BEG> starts the visit of the method 's code <SEG> if any i e <END>
<BEG> visits a zero operand instruction <END>
<BEG> visits an instruction with a single int operand <END>
<BEG> visits a type instruction <END>
<BEG> visits a label <END>
<BEG> visits an iinc instruction <END>
<BEG> visits a line number declaration <END>
<BEG> visits the maximum stack size and the maximum number of local variable of the method <END>
<BEG> visit the main class of the current module <END>
<BEG> visit a service use by the current module <END>
<BEG> visit an implementation of a service <END>
<BEG> returns the number of module <SEG> modulepackages and modulemainclass attribute generate by this modulewriter <END>
<BEG> the record visitor to which this visitor must delegate method call <END>
<BEG> visits a non standard attribute of the record component <END>
<BEG> visits the end of the record component <END>
<BEG> returns the size of the record component jvms structure generate by this recordcomponentwriter <END>
<BEG> puts the content of the record component generate by this recordcomponentwriter into the give bytevector <END>
<BEG> makes the give visitor visit the signature of this { link signaturereader } <END>
<BEG> visits a formal type parameter <END>
<BEG> visits the class bound of the last visited formal type parameter <END>
<BEG> visits the type of an interface implement by the class <END>
<BEG> visits the type of a method parameter <END>
<BEG> visits the return type of the method <END>
<BEG> starts the visit of a signature correspond to a class or interface type <END>
<BEG> visits an inner class <END>
<BEG> visits an unbounded type argument of the last visited class or inner class type <END>
<BEG> adds the give instruction to the end of this list <END>
<BEG> return access flag of the object aka <END>
<BEG> factory method to create an annotionentry from a datainput param input param constant_pool param isruntimevisible return the entry throw ioexception <END>
<BEG> return the number of element value pair in this annotation entry <END>
<BEG> return the element value pair in this annotation entry <END>
<BEG> param annotation_table the entry to set in this annotation <END>
<BEG> return the array of annotation entry in this annotation <END>
<BEG> param bootstrap_method_ref int index into constant_pool of constant_methodhandle <END>
<BEG> return int [ ] of bootstrap_method index into constant_pool of constant_ [ type ] _info <END>
<BEG> return count of number of boostrap argument <END>
<BEG> return resolved string representation <END>
<BEG> dump object to file stream in binary format <END>
<BEG> param bootstrap_methods the array of bootstrap method <END>
<BEG> param v visitor object <END>
<BEG> parses the give java class file and return an object that represent the contain data <SEG> i e <SEG> constant <SEG> method <SEG> field and command <END>
<BEG> param attribute the attribute to set for this code <END>
<BEG> return string representation of code chunk <END>
<BEG> return exclusive end index of the region where the handler be active <END>
<BEG> return starting address of exception handler <SEG> relative to the code <END>
<BEG> param catch_type the type of exception that be catch <END>
<BEG> param name_index the name index in the constant pool of this constant class <END>
<BEG> return dereferenced string <END>
<BEG> return reference index to class this constant refers to <END>
<BEG> param class_index point to constant_class <END>
<BEG> return reference index to signature of the field <END>
<BEG> return class this field belong to <END>
<BEG> return data <SEG> i e <SEG> 8 byte <END>
<BEG> return double object <END>
<BEG> return reference index to bootstrap method this constant refers to <END>
<BEG> param bytes the raw byte that represent this float <END>
<BEG> param signature_index the signature index in the constant pool of this type <END>
<BEG> param string_index the index into the constant of the string value <END>
<BEG> gets a new or cached instance of the give value <END>
<BEG> dumps string in utf8 format to file stream <END>
<BEG> param bytes the raw byte of this utf-8 deprecate since 6 0 <END>
<BEG> param level nest level <SEG> i e <SEG> 0 return the direct predecessor return container of current entitity <SEG> i e <SEG> predecessor during traversal <END>
<BEG> since 6 4 0 <END>
<BEG> param exception_index_table the list of exception index also redefine number_of_exceptions accord to table length <END>
<BEG> return type of field <END>
<BEG> return comparison strategy object <END>
<BEG> param comparator comparison strategy object <END>
<BEG> return name of object <SEG> i e <SEG> method name or field name <END>
<BEG> return string representation of object 's type signature java style <END>
<BEG> return annotations on the field or method since 6 0 <END>
<BEG> param inner_access_flags access flag for this inner class <END>
<BEG> param inner_class_index index into the constant pool for this class <END>
<BEG> param inner_name_index index into the constant pool for this class 's name <END>
<BEG> param outer_class_index index into the constant pool for the owning class <END>
<BEG> param inner_classes the array of inner class <END>
<BEG> return the super class name of this class <END>
<BEG> return return either heap generate <SEG> file <SEG> or zip <END>
<BEG> return true <SEG> if this class be an implementation of interface inter throw classnotfoundexception if superclass or superinterfaces of this class ca n't be find <END>
<BEG> return the superclass for this javaclass object <SEG> or null if this be java lang object throw classnotfoundexception if the superclass ca n't be find <END>
<BEG> return list of super class of this class in ascend order <SEG> i e <SEG> java lang object be always the last element throw classnotfoundexception if any of the superclass ca n't be find <END>
<BEG> dump line number pc pair to file stream in binary format <END>
<BEG> return corresponding source line <END>
<BEG> return pc in code <END>
<BEG> param line_number the source line number <END>
<BEG> param start_pc the pc for this line number <END>
<BEG> param line_number_table the line number entry for this table <END>
<BEG> return index of register where variable be originally store <END>
<BEG> helper method share with localvariabletypetable <END>
<BEG> param length the length of this local variable <END>
<BEG> param index the index in the local variable table of this variable <END>
<BEG> param index the variable slot return the first localvariable that match the slot or null if not find deprecate since 5 2 because multiple variable can share the same slot <SEG> use getlocalvariable int index <SEG> int pc instead <END>
<BEG> return index into constant pool of host class name <END>
<BEG> param main_class_index the host class index <END>
<BEG> return string array of package name <END>
<BEG> return string representation <SEG> i e <SEG> a list of package <END>
<BEG> return the parameter annotation entry table <END>
<BEG> return the array of parameter annotation entry in this parameter annotation <END>
<BEG> return pmg class name <END>
<BEG> calculate stack map entry size <END>
<BEG> update the distance a an offset delta from this stackmap entry to the next <END>
<BEG> deprecate since 6 0 <END>
<BEG> return array of unknown attribute <SEG> but just one for each kind <END>
<BEG> the primitive type name correspond to the t_xx constant <SEG> e g <SEG> type_names [ t_int ] = int param index return the type name since 6 0 <END>
<BEG> the primitive class name correspond to the t_xx constant <SEG> e g <SEG> class_type_names [ t_int ] = java lang integer param index return the class name since 6 0 <END>
<BEG> param index return the short type name since 6 0 <END>
<BEG> param index return number of byte code operand since 6 0 <END>
<BEG> param index return number of word consume on operand stack since 6 0 <END>
<BEG> call correspond visitor method s <END>
<BEG> returns list of elementnamevaluepair object <END>
<BEG> param _target branch target return the offset to ` target ' relative to this instruction <END>
<BEG> called by instructionlist setpositions when set the position for every instruction <END>
<BEG> return target of branch instruction <END>
<BEG> set branch target param target branch target <END>
<BEG> param position the position to set since 6 0 <END>
<BEG> add an interface to this class <SEG> i e <SEG> this class have to implement it <END>
<BEG> remove an interface from this class <END>
<BEG> set major version number of class file <SEG> default value be 45 jdk 1 1 param major major version number <END>
<BEG> return field object with give name <SEG> or null <END>
<BEG> return method object with give name and signature <SEG> or null <END>
<BEG> sets the type of the exception to catch <END>
<BEG> gets the type of the exception to catch <SEG> 'null ' for any <END>
<BEG> return start of handled region inclusive <END>
<BEG> return start of handler <END>
<BEG> read need data i e <SEG> index from file <END>
<BEG> set the index to constant pool <END>
<BEG> return type relate with this instruction <END>
<BEG> set optional initial value of field <SEG> otherwise it will be set to null 0 false by the jvm automatically <END>
<BEG> remove any initial value <END>
<BEG> add an attribute to this method <END>
<BEG> remove an attribute <END>
<BEG> return all attribute of this method <END>
<BEG> return negation of instruction <SEG> e g <END>
<BEG> return negation of instruction <END>
<BEG> return int type <END>
<BEG> delete content <SEG> i e <SEG> remove user access <END>
<BEG> add an attribute to an instruction handle <END>
<BEG> get attribute of an instruction handle <END>
<BEG> override the parent method because our classname be hold elsewhere <END>
<BEG> this override the deprecated version a we know here that the referenced class may legally be an array <END>
<BEG> return return address type <END>
<BEG> returns an instructionhandle to the physical successor of this jsrinstruction <END>
<BEG> clear the reference from and to this variable when it 's remove <END>
<BEG> return true if both type object refer to the same class <END>
<BEG> return true if this type reference a class <SEG> false if it reference an interface <END>
<BEG> return true if this type be a subclass of give objecttype <END>
<BEG> java virtual machine specification edition 2 <SEG> � 5 4 4 access control throw classnotfoundexception if the class reference by this type ca n't be find <END>
<BEG> return index entry from index since 6 0 <END>
<BEG> param index param value since 6 0 <END>
<BEG> param array since 6 0 <END>
<BEG> tries to find class source use the internal repository instance <END>
<BEG> return class file object for give java class by look on the system class path ; return null if the class file ca n't be find <END>
<BEG> return list of super class of clazz in ascend order <SEG> i e <SEG> object be always the last element <END>
<BEG> return all interface implement by class and it super class and the interface that those interface extend <SEG> and so on <END>
<BEG> finds a javaclass object by name <END>
<BEG> finds the javaclass object for a runtime class object <END>
<BEG> start java code generation <END>
<BEG> return a string with the flag setting param flag the flags field to interpret param location the item type return the formatted string since 6 0 make public <END>
<BEG> default main method <END>
<BEG> override this method to create you own class on the fly <END>
<BEG> reread the instruction list <SEG> e g <SEG> after you 've alter the list upon a match <END>
<BEG> search for the give pattern in the instruction list <END>
<BEG> return the inquired instruction list <END>
<BEG> runs the main method of the give class with the argument pass in argv param class_name the fully qualified class name param argv the argument just a you would pass them directly <END>
<BEG> expects class name a first argument <SEG> other argument be by-passed <END>
<BEG> lists all entry in the give directory <END>
<BEG> lists all module <END>
<BEG> extends the error message with a string before pre and after post the 'old ' error message <END>
<BEG> returns the error message string of this assertionviolatedexception object <END>
<BEG> do not use <END>
<BEG> works only on the first argument <END>
<BEG> this method run a verification pas conform to the java virtual machine specification <SEG> 2nd edition <SEG> on a class file <END>
<BEG> this method add a warning message to the message pool of this passverifier <END>
<BEG> returns the warning message that this passverifier accumulate during it do_verify ing work <END>
<BEG> checks if the specify int be already in the list <END>
<BEG> returns the type of the local variable that use this local variable slot at the give bytecode offset <END>
<BEG> adds some information about this local variable slot <END>
<BEG> returns a localvariablesinfo object contain information about the usage of the local variable in the code attribute of the say method or < b > null < b > if the class file this pass2verifier operate on could not be pass-2-verified correctly <END>
<BEG> returns the method number a supplied when instantiate <END>
<BEG> returns the instructioncontext of a give instruction <END>
<BEG> returns true <SEG> if and only if the say instruction be not reachable ; that mean <SEG> if it be not part of this controlflowgraph <END>
<BEG> returns the type of the exception that 's handle <END>
<BEG> returns the instructionhandle where the handler start off <END>
<BEG> returns all the exceptionhandler instance represent exception handler that protect the instruction ih <END>
<BEG> sets the constantpoolgen need for symbolic execution <END>
<BEG> the only method grant access to the single instance of the executionvisitor class <END>
<BEG> returns a string representation of the frame instance <END>
<BEG> returns a deep copy of this object ; i e <END>
<BEG> returns the type of the local variable slot index <END>
<BEG> returns a correctly type clone of this object <END>
<BEG> returns the number of local variable slot <END>
<BEG> sets a new type for the give local variable slot <END>
<BEG> fulfills the general contract of object equal <END>
<BEG> merges two local variable set a describe in the java virtual machine specification <SEG> second edition <SEG> section 4 9 2 <SEG> page 146 <END>
<BEG> replaces all occurrence of { code uninitializedobjecttype } in this local variable set with an initialized objecttype <END>
<BEG> returns a deep copy of this object ; that mean <SEG> the clone operate on a new stack <END>
<BEG> returns a typed ! <END>
<BEG> returns the number of stack slot this stack can hold <END>
<BEG> returns the element that 's i element below the top element ; that mean <SEG> iff i==0 the top element be return <END>
<BEG> returns the element on top of the stack <END>
<BEG> pops i element off the stack <END>
<BEG> replaces all occurences of u in this operandstack instance with an initialized objecttype <END>
<BEG> pass 3b implement the data flow analysis a describe in the java virtual machine specification <SEG> second edition <END>
<BEG> returns the subroutine object associate with the give leader that be <SEG> the first instruction of the subroutine <END>
<BEG> returns the subroutine object associate with the give instruction <END>
<BEG> for easy handling <SEG> the piece of code that be < b > not < b > a subroutine <SEG> the top-level <SEG> be also model a a subroutine object <END>
<BEG> returns the objecttype of the same class a the one of the uninitialized object represent by this uninitializedobjecttype instance <END>
<BEG> returns true on equality of this and o <END>
<BEG> returns one of the { link # verified_ok } <SEG> { link # verified_notyet } <SEG> { link # verified_rejected } constant <END>
<BEG> returns if two verificationresult instance be equal <END>
<BEG> return the classnamesjlist <END>
<BEG> adds the verifierfactoryobserver o to the list of observer <END>
<BEG> verifies one or more class file <END>
<BEG> returns an asm visitor wrapper that match the give matcher and applies this advice to the match method <END>
<BEG> configures this advice to use the specified assigner <END>
<BEG> configures this advice to call { link throwable # printstacktrace } upon a suppressed exception <END>
<BEG> configures this advice to execute the give exception handler upon a suppressed exception <END>
<BEG> wraps the supplied implementation to have this advice apply around it <END>
<BEG> specifies that any field that match the specified matcher should be remove <END>
<BEG> specifies that any method or constructor that match the specified matcher should be remove <END>
<BEG> creates a member substitution that require the resolution of all field and method that be reference within a method body <END>
<BEG> creates a member substitution that skip any unresolvable field or method that be reference within a method body <END>
<BEG> substitutes any interaction with a field or method that match the give matcher <END>
<BEG> substitutes any field access that match the give matcher <END>
<BEG> substitutes any method or constructor invocation that match the give matcher <END>
<BEG> creates a strict type reference adjustment that throw an exception if a type reference can not be resolve in the supplied type pool <END>
<BEG> creates a strict type reference adjustment that ignore type reference that can not be resolve in the supplied type pool <END>
<BEG> excludes all match type from be add a an attribute <END>
<BEG> resolves the matcher to identify non-nullable field <END>
<BEG> < p > creates a new package definition <END>
<BEG> < p > creates a new configuration where any { link methoddescription } that match the provided method matcher be exclude from instrumentation <END>
<BEG> checks if the current state describe the enum state <END>
<BEG> returns { code true } if this manifestation represent a field that be neither { code final } or { code volatile } <END>
<BEG> returns { code true } if this manifestation represent a field that be { code transient } <END>
<BEG> returns { code true } if this instance represent a bridge method <END>
<BEG> returns { code true } if this modifier contributor indicate strict floating-point computation <END>
<BEG> checks if the current state describe a { code static } member <END>
<BEG> returns { code true } if a type represent an { code abstract } type but not an interface type <END>
<BEG> returns { code true } if a type represent an interface type <END>
<BEG> returns the annotation on this type variable <END>
<BEG> loads a give set of class description and their binary representation <END>
<BEG> creates a class reloading strategy for the give instrumentation <END>
<BEG> resets all class to their original definition while use the first type 's class loader a a class file locator <END>
<BEG> resets all class to their original definition <END>
<BEG> returns { code true } if this class loader be seal <END>
<BEG> defines a new type to be load by this class loader <END>
<BEG> defines a group of type to be load by this class loader <END>
<BEG> < p > initializes a loaded type <END>
<BEG> < p > cleans any stale entry from this nexus <END>
<BEG> registers a loaded type initializer in byte buddy 's { link nexus } which be inject into the system class loader <END>
<BEG> returns { link typevalidation # enabled } if the supplied argument be { code true } <END>
<BEG> resolves the give type description to the supply target type if it represent the { link targettype } placeholder <END>
<BEG> returns the wrapper type that this unboxing delegate represent <END>
<BEG> locates an array accessor by the array 's component type <END>
<BEG> creates a value-loading stack manipulation <END>
<BEG> applies a stack manipulation to the value of an array <END>
<BEG> returns a stack manipulation that load a { link java lang class } type onto the operand stack which represent the give type <END>
<BEG> creates a stack assignment that load the default value for a give type <END>
<BEG> creates a stack manipulation for load a { code double } value onto the operand stack <END>
<BEG> returns a cached version of this field constant <END>
<BEG> creates a stack manipulation that load a method constant onto the operand stack <END>
<BEG> returns a list of type constant load operation for the give list of parameter <END>
<BEG> returns a method constant that use an { link accesscontroller } to look up this constant <END>
<BEG> locates the correct accessor for a variable of a give type <END>
<BEG> creates a stack assignment for a reading give offset of the local variable array <END>
<BEG> creates a stack assignment for write to a give offset of the local variable array <END>
<BEG> loads a parameter 's value onto the operand stack <END>
<BEG> stores the top operand stack value at the supplied parameter <END>
<BEG> creates a type creation for the give type <END>
<BEG> creates a { link net bytebuddy implementation defaultmethodcall } implementation which search the give list of interface type for a suitable default method in their order <END>
<BEG> creates a { link net bytebuddy implementation defaultmethodcall } implementation without prioritize any interface <END>
<BEG> creates an equal implementation that invoke the super class 's { link object # equal object } method first <END>
<BEG> creates an equal method implementation that do not invoke the super class 's { link object # equal object } method <END>
<BEG> returns a new version of this equal method that compare field with primitive type prior to field with non-primitive type <END>
<BEG> returns a new version of this equal method that compare field with primitive wrapper type prior to field with non-primitive wrapper type <END>
<BEG> applies the supplied comparator to determine an order for field for be compare <END>
<BEG> returns a new version of this equal method implementation that permit subclass of the instrumented type to be equal to instance of the instrumented type instead of require an exact match <END>
<BEG> defines a field accessor where any access be target to a field name { code name } <END>
<BEG> defines a custom strategy for determine the field that be access by this field accessor <END>
<BEG> defines a field accessor where the specified field be access <END>
<BEG> < p > returns a fixed value from any intercepted method <END>
<BEG> other than { link net bytebuddy implementation fixedvalue # value object } <SEG> this function will create a fixed value implementation that will always define a field in the instrumented class <END>
<BEG> returns the give type in form of a loaded type <END>
<BEG> returns the loaded version of the give { link javaconstant } <END>
<BEG> returns the argument at the specified index <END>
<BEG> returns { code this } from an instrumented method <END>
<BEG> returns a { code null } value from an instrumented method <END>
<BEG> creates a hash code method implementation that base the hash code on the instrumented type 's super class 's hash code value <END>
<BEG> creates a hash code method implementation that base the hash code on a fixed value <END>
<BEG> returns a new version of this hash code method implementation that ignore the specified field additionally to any previously specify field <END>
<BEG> returns a new version of this hash code method implementation that do not apply a { code null } value check for the specify field if they have a reference type additionally to any previously specify field <END>
<BEG> creates an implementation for any instance of an { link java lang reflect invocationhandler } that delegate all method interception to the give instance which will be store in a { code static } field <END>
<BEG> creates an implementation for any { link java lang reflect invocationhandler } that delegate all method interception to a field with the give name <END>
<BEG> implements the instrumented method with a dynamic method invocation which be link at runtime use the specify bootstrap method or constructor <END>
<BEG> < p > requires the bootstrap method to bootstrap a method that take the specified argument a it next parameter while allow to specify the value to be of a different type than the actual instance type <END>
<BEG> requires the bootstrap method to bootstrap a method that take the specified argument a it next parameter <END>
<BEG> hands the provided type to the dynamically bound method <END>
<BEG> hands the provided java instance to the dynamically bound method <END>
<BEG> passes { code null } value of the give type to the bootstrapped method <END>
<BEG> passes parameter of the instrumented method to the bootstrapped method <END>
<BEG> passes a parameter of the instrumented method to the bootstrapped method <END>
<BEG> adds all method argument to the the bootstrapped method <END>
<BEG> adds a potential { code this } reference and all method argument to the the bootstrapped method <END>
<BEG> passes the value of the specify field to the bootstrap method <END>
<BEG> creates a configuration builder for a method delegation that do not apply any pre-configured { link net bytebuddy implementation bind methoddelegationbinder ambiguityresolver } s or { link net bytebuddy implementation bind annotation targetmethodannotationdrivenbinder parameterbinder } s return a method delegation configuration without any pre-configuration <END>
<BEG> creates a { link object # tostring } implementation that be prefix by the fully qualified class name of the instrumented type <END>
<BEG> creates a { link object # tostring } implementation that be prefix by the canonical class name of the instrumented type <END>
<BEG> creates a { link object # tostring } implementation that be prefix by the supplied string <END>
<BEG> changes the token use for the { link object # tostring } implementation <END>
<BEG> invoked if the cache be not hit <END>
<BEG> wraps another matcher to assure that an element be not match in case that the matching cause an { link exception } <END>
<BEG> < p > wraps another matcher but cache the result of previously match element <END>
<BEG> matches the give value which can also be { code null } by the { link java lang object # equal object } method or by a null-check <END>
<BEG> matches a field in it defined shape <END>
<BEG> exactly match a give method or constructor a a { link methoddescription } in it defined shape <END>
<BEG> exactly match a give parameter a a { link parameterdescription } in it defined shape <END>
<BEG> matches a parameter 's type by the give matcher <END>
<BEG> matches a method parameter by it generic type <END>
<BEG> matches a parameter description for a { code mandate } parameter <END>
<BEG> inverts another matcher <END>
<BEG> creates a matcher that always return { code true } <END>
<BEG> matches an iterable by assure that at least one element of the iterable collection match the provided matcher <END>
<BEG> matches an iterable by assure that no element of the iterable collection match the provided matcher <END>
<BEG> converts a matcher for a type description into a matcher for the matched type 's erasure <END>
<BEG> matches a type variable with the give name <END>
<BEG> matches a { link namedelement } for it exact name <END>
<BEG> matches a { link namedelement } for it name <END>
<BEG> matches a { link namedelement } for it name 's prefix <END>
<BEG> matches a { link namedelement } for an infix of it name <END>
<BEG> matches a { link namedelement withoptionalname } for have an explicit name <END>
<BEG> matches a { link bytecodeelement } 's descriptor against a give value <END>
<BEG> matches a { link bytecodeelement } for be declare by a { link typedescription } that be match by the give matcher <END>
<BEG> matches a { link bytecodeelement } for be declare by a { link typedescription generic } that be match by the give matcher <END>
<BEG> matches a { link modifierreviewable ofabstraction } that be { code abstract } <END>
<BEG> matches an { link annotationsource } for declared annotation <END>
<BEG> matches a { link modifierreviewable } that be { code public } <END>
<BEG> matches a { link modifierreviewable } that be package-private <END>
<BEG> matches a { link methoddescription } that be a var-args <END>
<BEG> matches { link methoddescription } s that define a give generic type a a parameter at the give index <END>
<BEG> matches a method description that take the provided generic argument <END>
<BEG> matches a { link methoddescription } by apply an iterable collection of element matcher on any parameter 's { link typedescription generic } <END>
<BEG> matches { link methoddescription } s that define a type erasure a a parameter at the give index that match the supplied matcher <END>
<BEG> matches a method that declare the give generic exception type <END>
<BEG> matches any virtual method with a signature that be compatible to a method that be declare by a type that match the supplied matcher <END>
<BEG> matches a { link typedescription } that be an annotation type <END>
<BEG> only match method description that represent a { link java lang reflect method } <END>
<BEG> only match method description that represent a { link java lang class } type initializer <END>
<BEG> matches a default constructor <SEG> i e <END>
<BEG> only match the { link object # finalize } method if it be not overridden <END>
<BEG> only match the { link object # finalize } method <SEG> even if it be overridden <END>
<BEG> only match the { link object # equal object } method <SEG> also if it be overridden <END>
<BEG> matches any java bean setter method <END>
<BEG> matches any java bean setter method which take an argument that match the supplied matcher <END>
<BEG> matches any java bean getter method which return an value with a type match the supplied matcher <END>
<BEG> matches a method against it internal name such that constructor and type initializers be match appropriately <END>
<BEG> only match method description that yield the provided signature token <END>
<BEG> matches any type description that declare a super class but not interface that match the provided matcher <END>
<BEG> matches any type description that declare a super type that match the provided matcher <END>
<BEG> matches any annotation by a give matcher on a type that declare these annotation or inherit them from it super class <END>
<BEG> matches a list of annotation by a give matcher on a type that declare these annotation or inherit them from it super class <END>
<BEG> matches a type if it be primitive <END>
<BEG> matches a field 's generic type against the provided matcher <END>
<BEG> matches a { code volatile } field <END>
<BEG> matches if an annotation 's type match the supplied matcher <END>
<BEG> matches exactly the bootstrap { link java lang classloader } <END>
<BEG> matches any class loader that be either the give class loader or a child of the give class loader <END>
<BEG> matches all class loader in the hierarchy of the matched class loader against a give matcher <END>
<BEG> matches a class loader 's type unless it be the bootstrap class loader which be never match <END>
<BEG> creates a list of a single element and another list <END>
<BEG> creates a list of a list and an element <END>
<BEG> creates a list of a left <SEG> a middle and a right list <END>
<BEG> returns a representation of the supplied type 's { code java lang module } or { code null } if the current vm do not support module <END>
<BEG> unwraps this instance to a { code java lang module } <END>
<BEG> loads the class that be represent by this java type <END>
<BEG> loads the class that be represent by this java type and represent it a a { link typedescription } <END>
<BEG> checks if the supplied object be an instance of this type <END>
<BEG> creates a random { link java lang string } of the give { code length } <END>
<BEG> represents an integer value a a string hash <END>
<BEG> creates a new random { link java lang string } <END>
<BEG> visits an integer opcode <END>
<BEG> visits an invoke dynamic instruction <END>
<BEG> visits a constant pool access instruction <END>
<BEG> visits an instruction for create a multidimensional array <END>
<BEG> an order-sensitive invocation of { link classvisitor # visitnesthost string } <END>
<BEG> an order-sensitive invocation of { link classvisitor # visitouterclass string <SEG> string <SEG> string } <END>
<BEG> an order-sensitive invocation of { link classvisitor # visitannotation string <SEG> boolean } <END>
<BEG> an order-sensitive invocation of { link classvisitor # visittypeannotation int <SEG> typepath <SEG> string <SEG> boolean } <END>
<BEG> an order-sensitive invocation of { link classvisitor # visitmethod int <SEG> string <SEG> string <SEG> string <SEG> string [ ] } <END>
<BEG> an order-sensitive invocation of { link classvisitor # visitend } <END>
<BEG> returns the late stable asm api value in { link opcodes } <END>
<BEG> loads entry to the cache <END>
<BEG> if bit 31 be set then this method result in an infinite loop <END>
<BEG> sort the array use the quicksort algorithm <END>
<BEG> sort the array use an in-place merge sort <END>
<BEG> opens the class file <END>
<BEG> truns the public bit on <END>
<BEG> clears the public <SEG> protect <SEG> and private bit <END>
<BEG> returns true if the access flag include the public bit <END>
<BEG> returns true if the access flag include neither public <SEG> protect <SEG> or private <END>
<BEG> performs data-flow analysis on a method and return an array <SEG> index by instruction position <SEG> contain the starting frame state of all reachable instruction <END>
<BEG> returns the type of the local variable and stack frame entry available at the give position <END>
<BEG> constructs a dominator tree <END>
<BEG> constructs a post dominator tree <END>
<BEG> returns the local varaible table entry at index <END>
<BEG> sets the local variable table entry at index to a type <END>
<BEG> returns the type on the stack at the specified index <END>
<BEG> empties the stack <END>
<BEG> gets the index of the type sit at the top of the stack <END>
<BEG> returns the number of local variable table entry <SEG> specify at construction <END>
<BEG> gets the top of the stack without alter it return the top of the stack <END>
<BEG> alters the stack to contain one less element and return it <END>
<BEG> alters the stack by place the pass type on the top param type the type to add to the top <END>
<BEG> makes a shallow copy of this frame <SEG> i e <END>
<BEG> makes a shallow copy of the stack portion of this frame <END>
<BEG> merges all type on the stack of this frame instance with that of the specify frame <END>
<BEG> whether or not state from the source jsr instruction have be merge return true if jsr state have be merge <END>
<BEG> sets whether of not the state from the source jsr instruction have be merge param jsrmerged true if merge <SEG> otherwise false <END>
<BEG> whether or not state from the ret instruction <SEG> of the subroutine that be jump to have be merge <END>
<BEG> sets whether or not state from the ret instruction <SEG> of the subroutine that be jump to have be merge <END>
<BEG> prints the instruction and the frame state of the give method <END>
<BEG> gets the class that correspond with this type <END>
<BEG> always return 1 <SEG> since this type be a reference <END>
<BEG> returns true if the internal state have change <END>
<BEG> always return true <SEG> since this type be always a reference <END>
<BEG> a set of common utility method <END>
<BEG> adds a new member <END>
<BEG> obtains the name of the annotation type <END>
<BEG> obtains all the member name <END>
<BEG> writes this annotation <END>
<BEG> obtains the internal data structure represent the annotation <END>
<BEG> accepts a visitor <END>
<BEG> writes an element of a < code > element_value_pairs < code > array in < code > annotation < code > <END>
<BEG> writes < code > tag < code > and < code > class_info_index < code > in < code > element_value < code > <END>
<BEG> obtains the string representation of this object <END>
<BEG> writes { code target_type } and { code empty_target } of { code target_info } union <END>
<BEG> copies this attribute and return a new copy <END>
<BEG> changes the default value represent by this attribute <END>
<BEG> returns < code > num_annotations < code > <END>
<BEG> parses the annotation and return a data structure represent the annotation with the specify type <END>
<BEG> removes an annotation by type <END>
<BEG> parses the annotation and return a data structure represent that parse annotation <END>
<BEG> changes the annotation represent by this object accord to the give array of < code > annotation < code > object <END>
<BEG> changes the annotation <END>
<BEG> param oldname a jvm class name <END>
<BEG> returns an attribute name <END>
<BEG> returns the length of this < code > attribute_info < code > structure <END>
<BEG> makes a copy <END>
<BEG> the following two method be use to implement classfile renameclass <END>
<BEG> obtains < code > bootstrap_methods < code > in this attribute <END>
<BEG> writes a 16bit integer at the index <END>
<BEG> eliminates dead constant pool item <END>
<BEG> returns a constant pool table <END>
<BEG> returns true if this be an interface <END>
<BEG> returns true if this be a final class or interface <END>
<BEG> returns true if this be an abstract class or an interface <END>
<BEG> returns access and property flag of this nested class <END>
<BEG> returns the index of the constant pool entry represent the super class <END>
<BEG> replaces all occurrence of several class name in the class file <END>
<BEG> sets the interface <END>
<BEG> appends an interface to the interface implement by the class <END>
<BEG> returns all the field declare in the class <END>
<BEG> returns the method with the specify name <END>
<BEG> returns a static initializer class initializer <SEG> or null if it do not exist <END>
<BEG> returns all the attribute <END>
<BEG> removes an attribute with the specify name <END>
<BEG> returns the source file contain this class <END>
<BEG> get the major version <END>
<BEG> sets the major and minor version to java 5 <END>
<BEG> 0x0020 synchronized mean acc_super if the modifier be of a class <END>
<BEG> d = stack [ i ] d == 0 : not visit d > 0 : the depth be d - 1 after execute the bytecode at i <END>
<BEG> returns the name of the class declare the method include this code attribute <END>
<BEG> adds a stack map table for j2me cldc <END>
<BEG> changes the index number of the local variable to append a new parameter <END>
<BEG> moves to the first instruction <END>
<BEG> sets a mark to the bytecode at the give index <END>
<BEG> returns a code attribute read with this iterator <END>
<BEG> returns < code > code_length < code > of < code > code_attribute < code > <END>
<BEG> returns the unsigned 16bit value at the give index <END>
<BEG> returns the index of the next instruction not the operand follow the current opcode <END>
<BEG> obtains the value that the next call to < code > next < code > will return <END>
<BEG> moves to the instruction for either < code > super < code > or < code > this < code > <END>
<BEG> moves to the instruction for < code > super < code > <END>
<BEG> inserts the give bytecode sequence before the instruction at the give index < code > po < code > <END>
<BEG> inserts the give bytecode sequence exclusively before the instruction at the give index < code > po < code > <END>
<BEG> inserts an exclusive gap before the next instruction that would be return by < code > next < code > not before the instruction return by the last call to < code > next < code > <END>
<BEG> cursorpos indicate the next bytecode whichever exclusive be true or false <END>
<BEG> is call when a gap be insert <END>
<BEG> copies and insert the entry in the give exception table at the beginning of the exception table in the code attribute edit by this object <END>
<BEG> appends the give bytecode sequence at the end <END>
<BEG> appends a gap at the end of the bytecode sequence <END>
<BEG> reads < code > constant_class_info < code > structure at the give index <END>
<BEG> reads the < code > name_index < code > field of the < code > constant_nameandtype_info < code > structure at the give index <END>
<BEG> reads the < code > class_index < code > field of the < code > constant_fieldref_info < code > <SEG> < code > constant_methodref_info < code > <SEG> or < code > constant_interfaceref_info < code > <SEG> structure at the give index <END>
<BEG> reads the < code > name_index < code > field of the < code > constant_nameandtype_info < code > structure indirectly specify by the give index <END>
<BEG> reads < code > constant_integer_info < code > <SEG> < code > _float_info < code > <SEG> < code > _long_info < code > <SEG> < code > _double_info < code > <SEG> or < code > _string_info < code > structure <END>
<BEG> determines whether < code > constant_methodref_info < code > structure at the give index represent the constructor of the give class <END>
<BEG> determines whether < code > constant_methodref_info < code > <SEG> < code > constant_fieldref_info < code > <SEG> or < code > constant_interfacemethodref_info < code > structure at the give index represent the member with the specify name and declare class <END>
<BEG> replaces all occurrence of a class name <END>
<BEG> replaces all occurrence of class name <END>
<BEG> writes the content of the constant pool table <END>
<BEG> returns the name of the class specify by < code > class_index < code > <END>
<BEG> returns the name of exception that the method may throw <END>
<BEG> returns the value of < code > exception_index_table [ nth ] < code > <END>
<BEG> returns < code > startpc < code > of the < i > n < i > -th entry <END>
<BEG> copies the give exception table at the specified position in the table <END>
<BEG> adds a new entry at the specified position in the table <END>
<BEG> appends a new entry at the end of the table <END>
<BEG> makes a copy of this < code > exception_table [ ] < code > <END>
<BEG> returns the field descriptor <END>
<BEG> finds a constantvalue attribute and return the index into the < code > constant_pool < code > table <END>
<BEG> returns < code > class [ nth ] inner_class_info_index < code > <END>
<BEG> sets < code > class [ nth ] inner_class_info_index < code > to the give index <END>
<BEG> returns the simple class name indicate by < code > class [ nth ] inner_name_index < code > <END>
<BEG> appends a new entry <END>
<BEG> removes the { code nth } entry <END>
<BEG> returns the line number correspond to the specify bytecode <END>
<BEG> returns the index into the code array at which the code for the specified line begin <END>
<BEG> adjusts start_pc if bytecode be insert in a method body <END>
<BEG> adjusts start_pc and length if bytecode be insert in a method body <END>
<BEG> returns the name of the local variable specify by < code > local_variable_table [ i ] name_index < code > <END>
<BEG> this method be equivalent to < code > descriptorindex < code > <END>
<BEG> returns the type descriptor of the local variable specify by < code > local_variable_table [ i ] descriptor_index < code > <END>
<BEG> returns a method name <END>
<BEG> returns true if this be not a constructor or a class initializer static initializer <END>
<BEG> returns true if this be a class initializer static initializer <END>
<BEG> sets a method descriptor <END>
<BEG> returns a code attribute <END>
<BEG> removes an exception attribute <END>
<BEG> changes a super constructor call by this constructor <END>
<BEG> returns < code > parameters_count < code > <SEG> which be the number of parameter <END>
<BEG> returns the value of < code > name_index < code > of the i-th element of < code > parameter < code > <END>
<BEG> parses the give signature string a a class signature <END>
<BEG> parses the give signature string a a method type signature <END>
<BEG> does abstract interpretation on the give bytecode instruction <END>
<BEG> since jsr push a return address onto the operand stack <SEG> the stack map at the entry point of a subroutine be stacktypes result after execute the following code : stacktypes [ stacktop++ ] = top ; <END>
<BEG> invoked when the visited instruction be ret or wide ret <END>
<BEG> memo : array type be a subtype of cloneable and serializable <END>
<BEG> finds the most specific common super class of the give class by consider array type <END>
<BEG> finds the most specific common super class of the give class <END>
<BEG> computes the correct value of numlocals <END>
<BEG> see codeiterator switcher # adjustoffsets int <SEG> int <END>
<BEG> gets a long message if it be available <END>
<BEG> obtains the url of the specified class file <END>
<BEG> is equivalent to < code > put < code > except that the give mapping be not record into the hashtable if another mapping from < code > oldname < code > be already include <END>
<BEG> provide a hook so that subclass can do their own caching of class <END>
<BEG> this method be periodically invoke so that memory footprint will be minimize <END>
<BEG> record a package name so that the javassist compiler search the package to resolve a class name <END>
<BEG> clear all the package names record by < code > importpackage < code > <END>
<BEG> records the < code > $ cflow < code > variable for the field specify by < code > cname < code > and < code > fname < code > <END>
<BEG> this method be invoke by ctclasstype setname <END>
<BEG> reads a class file from the source and return a reference to the < code > ctclass < code > object represent that class file <END>
<BEG> returns a < code > ctclass < code > object with the give name <END>
<BEG> creates a ctclass object represent the specified class <END>
<BEG> this method return null if this or it parent class pool do not contain a ctclass object with the class name <END>
<BEG> reads class file from the source and return an array of < code > ctclass < code > object represent those class file <END>
<BEG> creates a new public nest class <END>
<BEG> appends directory and jar file for search <END>
<BEG> get the classloader for < code > toclass < code > <SEG> < code > getannotations < code > in < code > ctclass < code > <SEG> etc <END>
<BEG> searches the class path to obtain the url of the class file specify by classname <END>
<BEG> modify a method body so that instantiation of the class specify by < code > oldclass < code > be replace with instantiation of another class < code > newclass < code > <END>
<BEG> returns a sub list of the list <END>
<BEG> substitutes < code > newobj < code > for < code > oldobj < code > in the list <END>
<BEG> concatenates two list <END>
<BEG> compiles a method <SEG> constructor <SEG> or field declaration to a class <END>
<BEG> prepares to use $ proceed <END>
<BEG> compiles a statement or a block <END>
<BEG> compiles an exression <END>
<BEG> if the type of the expression compile last be void <SEG> add aconst_null and change exprtype <SEG> arraydim <SEG> classname <END>
<BEG> to support $ args <SEG> $ sig <SEG> and $ type <END>
<BEG> inserts a cast operator to the return type <END>
<BEG> delegates to a prochandler object if the method call be $ proceed <END>
<BEG> to support $ cflow <END>
<BEG> public int getmethodargslength astlist args { if ! isparamlistname args return super getmethodargslength args ; return paramtypelist length ; } <END>
<BEG> performs implicit coercion from exprtype to type <END>
<BEG> records the currently compile method <END>
<BEG> returns the jvm-internal representation of this class name <END>
<BEG> overwrite in jvstcodegen <END>
<BEG> expands a simple class name to java lang <END>
<BEG> member declaration : method declaration | field declaration <END>
<BEG> obtains the modifier of the method constructor <END>
<BEG> sets the encoded modifier of the method constructor <END>
<BEG> returns true if the class have the specify annotation type <END>
<BEG> returns the annotation if the class have the specify annotation class <END>
<BEG> returns the annotation associate with this method or constructor <END>
<BEG> returns the method signature the parameter type and the return type <END>
<BEG> declares to use < code > $ cflow < code > for this method constructor <END>
<BEG> ctconstructor override this method <END>
<BEG> prints the version number and the copyright notice <END>
<BEG> converts the object to a string <END>
<BEG> implemented in subclass to add to the { link # tostring } result <END>
<BEG> returns a class file for this class <END>
<BEG> makes the class frozen <END>
<BEG> note : this method be override by ctclasstype <END>
<BEG> defrosts the class so that the class can be modify again <END>
<BEG> obtains the package name <END>
<BEG> sets the class name param name fully-qualified name <END>
<BEG> substitutes < code > newname < code > for all occurrence of a class name < code > oldname < code > in the class file <END>
<BEG> changes class name appear in the class file accord to the give < code > map < code > <END>
<BEG> returns a collection of the name of all the class reference in this class <END>
<BEG> determines whether this object represent a class or an interface <END>
<BEG> determines whether this object represent an annotation type <END>
<BEG> obtains the class object represent the superclass of the class <END>
<BEG> changes a super class unless this object represent an interface <END>
<BEG> obtains the class object represent the interface implement by the class or <SEG> if this object represent an interface <SEG> the interface extend by that interface <END>
<BEG> if this class be a member class or interface of another class <SEG> then the class enclose this class be return <END>
<BEG> returns the immediately enclose method of this class <END>
<BEG> retrieves the field with the specify name among the field declare in the class <END>
<BEG> retrieves the field with the specify name and type among the field declare in the class <END>
<BEG> returns an array contain < code > ctconstructor < code > object represent all the non-private constructor of the class <END>
<BEG> gets the class initializer static constructor declare in the class <END>
<BEG> gets all method declare in the class <END>
<BEG> retrieves method with the specify name among the method declare in the class <END>
<BEG> removes a constructor declare in this class <END>
<BEG> adds a method <END>
<BEG> adds a name attribute <END>
<BEG> removes this < code > ctclass < code > object from the < code > classpool < code > <END>
<BEG> discards unnecessary attribute <SEG> in particular <SEG> < code > codeattribute < code > s method body of the class <SEG> to minimize the memory footprint <END>
<BEG> called by get in classpool <END>
<BEG> if this method be call <SEG> the class file will be rebuild when it be finally generate by < code > tobytecode < code > and < code > writefile < code > <END>
<BEG> converts this class to a class file <END>
<BEG> writes a class file a < code > writefile < code > do although this method do not prune or freeze the class after write the class file <END>
<BEG> makes a unique member name <END>
<BEG> returns null if member be not cache <END>
<BEG> see javassist ctclass # prune see javassist ctclass # stoppruning boolean <END>
<BEG> returns true if this object represent a static initializer <END>
<BEG> returns the constructor name follow by parameter type such a < code > javassist ctconstructor ctclass [ ] <SEG> ctclass < code > <END>
<BEG> returns true if the constructor or static initializer be the default one <END>
<BEG> returns true if this constructor call a constructor of the super class <END>
<BEG> sets a constructor body <END>
<BEG> returns true if this member be accessible from the give class <END>
<BEG> this method be also call by ctclasstype getmethods0 <END>
<BEG> indicates whether < code > obj < code > have the same name and the same signature a this method <END>
<BEG> returns the method name follow by parameter type such a < code > javassist ctmethod setbody string < code > <END>
<BEG> replaces the explicit cast operator with the bytecode derive from the give source text <END>
<BEG> always throw a < code > notfoundexception < code > <END>
<BEG> edits a < tt > new < tt > expression overridable <END>
<BEG> edits an expression for array creation overridable <END>
<BEG> edits an instanceof expression overridable <END>
<BEG> edits an expression for explicit type casting overridable <END>
<BEG> replaces the instanceof operator with the bytecode derive from the give source text <END>
<BEG> returns the class of the target object <SEG> which the method be call on <END>
<BEG> records a class so that the loading of that class be delegate to the parent class loader <END>
<BEG> sets the protection domain for the class handle by this class loader <END>
<BEG> sets the soruce < code > classpool < code > <END>
<BEG> obtains a class file from the class loader <END>
<BEG> returns true if the modifier include the < tt > public < tt > modifier <END>
<BEG> returns true if the modifier do not include either < tt > public < tt > <SEG> < tt > protect < tt > <SEG> or < tt > private < tt > <END>
<BEG> a support class for implement < code > class < code > notation <END>
<BEG> get the class loader return the class loader <END>
<BEG> close the class pool <END>
<BEG> flush a class param classname the class to flush <END>
<BEG> soften a class param clazz the class <END>
<BEG> whether the classloader be loader return false always <END>
<BEG> get the cached class param classname the class name return the class <END>
<BEG> lock a class into the cache param c the class <END>
<BEG> get any local copy of the class param classname the class name return the class throw notfoundexception when the class be not find <END>
<BEG> returns the value of the prune attribute <END>
<BEG> set the prune attribute <END>
<BEG> create a scoped classpool <END>
<BEG> register a classloader <END>
<BEG> get the registered classloaders <END>
<BEG> this method will check to see if a register classloader have be undeployed a in jboss <END>
<BEG> returns < code > true < code > if this map contain a mapping for the specify key <END>
<BEG> returns the value to which this map map the specified < code > key < code > <END>
<BEG> updates this map so that the give < code > key < code > map to the give < code > value < code > <END>
<BEG> removes all mapping from this map <END>
<BEG> obtains the < code > java lang class < code > represent this class <END>
<BEG> is invoke when < code > static < code > field of the base-level class be read and the runtime system intercept it <END>
<BEG> returns an array of the method define on the give reflective object <END>
<BEG> returns the < code > java lang reflect method < code > object represent the method specify by < code > identifier < code > <END>
<BEG> finds the object export by a server with the specify name <END>
<BEG> sets an http proxy server <END>
<BEG> this method establish a raw tcp connection for send a post message <END>
<BEG> returns < code > true < code > if the specified class be a proxy class record by < code > makeproxyclass < code > <END>
<BEG> starts a program <END>
<BEG> finds the specified class <END>
<BEG> starts a web server <END>
<BEG> requests the web server to use the specified < code > classpool < code > object for obtain a class file <END>
<BEG> closes the socket <END>
<BEG> prints a log message <END>
<BEG> prints a log message with indentation <END>
<BEG> begins the http service <END>
<BEG> opens a class file with http <END>
<BEG> test whether this factory install a writereplace method in created class return true if this factory install a writereplace method in created class otherwise false <END>
<BEG> configure whether this factory should add a writereplace method to create class param usewritereplace true if this factory should add a writereplace method to create class and false if it should not add a writereplace method <END>
<BEG> sets the super class of a proxy class <END>
<BEG> sets a filter that select the method that will be control by a handler <END>
<BEG> generates a proxy class with a specific signature <END>
<BEG> obtains the method handler of the give proxy object <END>
<BEG> finds a method with the give name and descriptor <END>
<BEG> finds a method that have the give name and descriptor and be declare in the super class <END>
<BEG> makes a descriptor for a give method <END>
<BEG> adds a method with the same signiture a the give method <SEG> include exception type < p > the new method will have the same modifier a the original method <SEG> except that the abstract and native flag will be strip <END>
<BEG> definines the class use the give classloader and protectiondomain <END>
<BEG> return the type descriptor for the class return <END>
<BEG> return the interface implement by this class <END>
<BEG> return this class method <END>
<BEG> adds a value to the table that be at a location yet to be write <END>
<BEG> pop 2 operand from the stack <END>
<BEG> replace the operand at the top of the stack with the give operand <END>
<BEG> store the variable on top of the stack into a local variable <SEG> pop the variable from the stack <END>
<BEG> check that the appropriate object type be on top of the stack <END>
<BEG> push a type on to the top of the stack <END>
<BEG> pop a non-wide type from the top of the stack <END>
<BEG> adds a constant_class_info to the const pool <END>
<BEG> the number of space this take up in the const pool <END>
<BEG> generates the field signiture for a field of the give type param type return the signiture <SEG> or null if no signure be require e g <END>
<BEG> remove the runtime < b > invisible < b > annotation attribute for the entity <END>
<BEG> return runtime visible annotation information for the entity <END>
<BEG> remove the runtime visible annotation attribute for the entity <END>
<BEG> annotations be store in an { link annotations } table or a part of an { link annotation } property value <END>
<BEG> the index in the class { link constantpool } of the { link utf8entry } hold the type of this annotation <END>
<BEG> the name of this annotation 's type <END>
<BEG> the { link class } object for this annotation 's type <END>
<BEG> the bytecode for the type of this annotation <END>
<BEG> this annotation 's type <END>
<BEG> return the property with the give name <SEG> or null if none <END>
<BEG> clear all annotation property <END>
<BEG> remove the property with the give name <END>
<BEG> whether these annotation be runtime-visible <END>
<BEG> create an attribute of the appropriate type base on the the attribute name <END>
<BEG> return the { link attributes } that own this attribute <END>
<BEG> return the index in the { link constantpool } of the { link utf8entry } hold the name of this attribute <END>
<BEG> invalidate this attribute <END>
<BEG> return the length of the bytecode representation of this attribute in byte <SEG> exclude the name index <END>
<BEG> copy the information from the give attribute to this one <END>
<BEG> return all the attribute own by this entity <END>
<BEG> return all attribute with the give name <END>
<BEG> set the attribute for this entity ; this method be useful for import all attribute from another entity <END>
<BEG> add an attribute of the give type <END>
<BEG> clear all attribute from this entity <END>
<BEG> convenience method to be call by bcentities when be visit by a { link bcvisitor } ; this method will allow the visitor to visit all attribute of this entity <END>
<BEG> build the attribute list from the give stream <END>
<BEG> writes all the own attribute to the give stream <END>
<BEG> set the class state <END>
<BEG> initialize from the class definition in the give file <END>
<BEG> write the class bytecode to the class file in the proper directory of the classpath <END>
<BEG> write the class bytecode to the specify file <END>
<BEG> set the { link constantpool } index of the { link classentry } for this class <END>
<BEG> return the name of the class only <SEG> without package <END>
<BEG> return the package name only <SEG> without class <SEG> or null if none <END>
<BEG> set the name of this class <SEG> include package name <END>
<BEG> return the { link class } object for this class <SEG> if it be loadable <END>
<BEG> return the component type of this class <SEG> or null if not an array <END>
<BEG> return the { link class } object for the superclass of this class <SEG> if it be loadable <END>
<BEG> return the bytecode of the superclass of this class <SEG> or null for type without superclass <END>
<BEG> set the superclass of this class <END>
<BEG> return the list of { link constantpool } index of the { link classentry } s describe all the interface this class declare that it implement extends <END>
<BEG> set the list of { link constantpool } index of the { link classentry } s describe all the interface this class declare it implement extend ; set to null or an empty array if none <END>
<BEG> return the bytecode for the declared interface of this class <SEG> or an empty array if none <END>
<BEG> set the interface declare implement extend by this class ; set to null or an empty array if none <END>
<BEG> return the name of all unique interface implement by this class <SEG> include those of all superclass <END>
<BEG> return the { link class } object of all unique interface implement by this class <SEG> include those of all superclass <END>
<BEG> clear this class of all interface declaration <END>
<BEG> rearrange declare interface order <END>
<BEG> add an interface to those declare by this class <END>
<BEG> return true if this class or any of it superclass implement extend the give interface class <END>
<BEG> return all the declared field of this class <SEG> or an empty array if none <END>
<BEG> return all the field of this class <SEG> include those of all superclass <SEG> or an empty array if none <END>
<BEG> return all the declare method with the give name <SEG> or an empty array if none <END>
<BEG> return the declared method with the give name and parameter type <SEG> or null if none <END>
<BEG> return the method of this class <SEG> include those of all superclass <SEG> or an empty array if none <END>
<BEG> return the method with the give name and parameter type <SEG> include those of all superclass <SEG> or an empty array if none <END>
<BEG> removes a method from this class <END>
<BEG> rearrange method order <END>
<BEG> convenience method to add a default constructor to this class <END>
<BEG> convenience method to return deprecation information for the class <END>
<BEG> convenience method to set whether this class should be consider deprecated <END>
<BEG> override this method if unfound class should be create on-the-fly <END>
<BEG> return the access flag for this member a a bit array of access_xxx constant from { link constants } <END>
<BEG> return the descriptor of this member <SEG> in internal form <END>
<BEG> return the { link class } object for the return type of this method <END>
<BEG> return the bytecode for the return type of this method <END>
<BEG> return the name of all the parameter type for this method <END>
<BEG> return the { link class } object for all the parameter type for this method <END>
<BEG> set the parameter type of this method <END>
<BEG> add a parameter type to this method <END>
<BEG> remove the exception attribute for the method <END>
<BEG> return the code for the method <END>
<BEG> set the type of class be load <END>
<BEG> return the { link constantpool } index of the { link classentry } describe the class for this instruction <END>
<BEG> classinstructions be equal if the type they reference be the same or unset and if their opcodes be equal <END>
<BEG> the owning method <END>
<BEG> return the maximum stack depth set for this code block <END>
<BEG> set the maximum stack depth for this code block <END>
<BEG> return the maximum number of local variable include params set for this method <END>
<BEG> return the local variable index for the paramindex'th parameter to the method <END>
<BEG> return the next available local variable index <END>
<BEG> calculate and set the maximum stack depth need for the instruction use <END>
<BEG> return the exception handler active in this code block <SEG> or an empty array if none <END>
<BEG> return the exception handler that catch the give exception type ; if multiple handler catch the give type <SEG> which be return be undefined <END>
<BEG> return all exception handler that catch the give exception type <SEG> or an empty array if none <END>
<BEG> set the exception handler for this code block <END>
<BEG> clear all exception handler <END>
<BEG> remove the exception handler that catch the give type <END>
<BEG> reset the position of the instruction iterator to the first opcode <END>
<BEG> set the position of the instruction iterator to after the last opcode <END>
<BEG> position the iterator just before the give instruction <END>
<BEG> place the iterator before the give list index <END>
<BEG> find the next instruction from the current iterator position that match the give one <SEG> accord to the { link object # equal } method of the instruction type <END>
<BEG> find the close previous instruction from the current iterator position that match the give one <SEG> accord to the { link object # equal } method of the instruction type <END>
<BEG> adds a copy of the give instruction <END>
<BEG> replaces the last iterated instruction with a copy of the give one <END>
<BEG> replaces all the instruction in this code block that match the give template with the give instruction <END>
<BEG> equivalent to loop over each give template replacement pair and call { link # replace instruction <SEG> instruction } for each <END>
<BEG> load a class constant onto the stack <END>
<BEG> load an int local variable onto the stack <END>
<BEG> store a value from the stack into a local variable <END>
<BEG> store an int value from the stack into a local variable <END>
<BEG> load an int array value onto the stack ; the < code > iaload < code > opcode <END>
<BEG> store a value from the stack into an array <END>
<BEG> store an int value from the stack into an array ; the < code > iastore < code > opcode <END>
<BEG> perform some math operation on the stack item <END>
<BEG> add the top two stack value <END>
<BEG> add the top two stack int value ; the < code > iadd < code > opcode <END>
<BEG> take the remainder of the top two stack value <END>
<BEG> take the remainder of the top two int stack value ; the < code > irem < code > opcode <END>
<BEG> negate the top stack value <END>
<BEG> negate the top stack int value ; the < code > ineg < code > opcode <END>
<BEG> take the mathematical and of the top two stack value <END>
<BEG> take the mathematical and of the top two stack int value ; the < code > iand < code > opcode <END>
<BEG> load the value from a field onto the stack ; the < code > getfield < code > opcode <END>
<BEG> load the value from a static field onto the stack ; the < code > getstatic < code > opcode <END>
<BEG> invoke a virtual method ; the < code > invokevirtual < code > opcode <END>
<BEG> invoke a method non-virtually <SEG> a for constructor and superclass method ; the < code > invokespecial < code > opcode <END>
<BEG> invoke a method on an interface ; the < code > invokeinterface < code > opcode <END>
<BEG> create a new instance of an object ; the < code > new < code > opcode <END>
<BEG> create a new instance of an object array ; the < code > anew < code > opcode <END>
<BEG> cast an object on the stack to another type ; the < code > checkcast < code > opcode <END>
<BEG> get the length of an array on the stack ; the < code > arraylength < code > opcode <END>
<BEG> throw an exception ; the < code > athrow < code > opcode <END>
<BEG> return line number information for the code <END>
<BEG> remove the line number table for the code <END>
<BEG> return local variable generic information for the code <END>
<BEG> remove the local variable type table for the code <END>
<BEG> returns the instruction in this code block find at the give byte index <END>
<BEG> return the first instruction in this code block <SEG> or null if none <END>
<BEG> returns another listiterator view of the instructions in this code block <END>
<BEG> set the { link constantpool } of the { link constantentry } hold the value of this constant <END>
<BEG> return the type of constant this attribute represent <SEG> or null if not set <END>
<BEG> return the type of constant this attribute represent string class <SEG> int class <SEG> etc <SEG> or null if not set <END>
<BEG> return the bytecode for the type of constant this attribute represent <END>
<BEG> set the value of this constant use the appropriate wrapper object type string <SEG> integer <SEG> double <SEG> etc <END>
<BEG> get the value of this int constant <SEG> or 0 if not set <END>
<BEG> set the value of this int constant <END>
<BEG> return the owning code block <END>
<BEG> return the instruction mark the beginning of the try { } block <END>
<BEG> set the instruction at the end of the try block <END>
<BEG> return the index into the class { link constantpool } of the { link classentry } describe the exception type this handler catch <END>
<BEG> return the name of the exception type ; return null for catch-all clause use to implement finally block <END>
<BEG> return the { link class } of the exception type ; return null for catch-all clause use to implement finally block <END>
<BEG> return the program counter end position for this exception handler <END>
<BEG> set the index in the class { link constantpool } of the { link classentry } s for the exception type throw by this method <END>
<BEG> return the name of the exception type for this method <SEG> or an empty array if none <END>
<BEG> return bytecode for the exception type of this method <SEG> or an empty array if none <END>
<BEG> remove an exception type throw by this method <END>
<BEG> add an exception type to those throw by this method <END>
<BEG> return true if the method declare that it throw the give exception type <END>
<BEG> return the field this instruction operate on <SEG> or null if not set <END>
<BEG> set the field this instruction operate on <SEG> for field that be declare by the current class <END>
<BEG> return the name of the field this instruction operate on <SEG> or null if not set <END>
<BEG> set the name of the field this instruction operate on <END>
<BEG> return the declare class of the field this instruction operate on <SEG> or null if not set <END>
<BEG> set the declare class of the field this instruction operate on <END>
<BEG> fieldinstructions be equal if the field they reference be the same <SEG> or if the field of either be unset <END>
<BEG> return the increment for this iinc instruction <END>
<BEG> inner class be store in an { link innerclasses } attribute <END>
<BEG> return the simple name of this inner class <SEG> or null if anonymous <END>
<BEG> set the simple name of this inner class <END>
<BEG> set the { link constantpool } index of the { link classentry } that describe this class <END>
<BEG> return the type for this instruction <END>
<BEG> set the type of this inner class <END>
<BEG> return the { link constantpool } index of the { link classentry } that describe the declare class <SEG> or 0 if this class be not a member class <END>
<BEG> return the full name of the declare class <SEG> or null if unset not a member <END>
<BEG> return all reference inner class <SEG> or empty array if none <END>
<BEG> return all inner class with the give name <SEG> or empty array if none <END>
<BEG> remove the give inner class <END>
<BEG> sets the byteindex where the target instruction can be find <END>
<BEG> changes the target instruction <END>
<BEG> returns the instruction this target be targetting <END>
<BEG> returns the byteindex at which the target instruction can be find <END>
<BEG> same a getinstruction <SEG> but this method alter the target strategy to use the returned instruction <END>
<BEG> line number be store in a { link linenumbertable } <END>
<BEG> return the instruction mark the beginning of this line <END>
<BEG> return the index into the code byte array at which this line start <END>
<BEG> set the { link instruction } mark the beginning this line <END>
<BEG> return the line number hold in this table <END>
<BEG> return the line number for the give program counter <SEG> or null if none <END>
<BEG> get the local variable index of the current frame for this local <END>
<BEG> return the parameter that this local corresponds to <SEG> or -1 if none <END>
<BEG> set the method parameter that this local corresponds to <END>
<BEG> the last { link instruction } for which this local be in scope <END>
<BEG> get the number of byte for which this local have a value in the code byte array <END>
<BEG> set the last { link instruction } for which this local be in scope <END>
<BEG> return the full name of the local 's type <SEG> or null if unset <END>
<BEG> return the local with the give local index <SEG> or null if none <END>
<BEG> return all local with the give name <SEG> or empty array if none <END>
<BEG> return the local variable object this instruction operate on <SEG> or null if none <END>
<BEG> set the local variable object this instruction operate on <END>
<BEG> two local variable instruction be equal if the local index they reference be equal or if either index be 0 unset <END>
<BEG> subclasses with variable opcodes can use this method to be notify that information possibly affect the opcode have be change <END>
<BEG> subclasses can use this method to calculate the local index base on their opcode <END>
<BEG> synonymous with { link # gettarget } <END>
<BEG> return the value of the case statement for this switch <END>
<BEG> return the referenced { link utf8entry } <END>
<BEG> return the constant pool index of the { link nameandtypeentry } describe this entity <END>
<BEG> allows static computation of the byte index after the constant pool without cache constant pool information <END>
<BEG> read a byte value at the give offset into the give bytecode <END>
<BEG> read an unsigned short value at the give offset into the give bytecode <END>
<BEG> return the index into the bytecode of the end of the constant pool <END>
<BEG> return the give table entry <END>
<BEG> the entry type depend on both the reference kind and the class version cv <END>
<BEG> return the param type of the method this instruction operate on <SEG> or empty array if none <END>
<BEG> return the dimension of the array <SEG> or -1 if not set <END>
<BEG> two multianewarray instruction be equal if they have the same type and dimension <SEG> or if the type and dimension of either be unset <END>
<BEG> converts the give class name to it internal form <END>
<BEG> return the component type name for the give array type <SEG> or null if the give string do not represent an array type name <END>
<BEG> return the project name <SEG> or null if unset <END>
<BEG> return the name cache <SEG> which include utility for convert name from internal to external form and vice versa <END>
<BEG> load the bytecode for the class with the give name <END>
<BEG> load the bytecode for the give class <END>
<BEG> import the give bytecode from another project <END>
<BEG> clears all class from this project <END>
<BEG> return all load class in the project <END>
<BEG> return true if the project already contain the give class <END>
<BEG> renames the give class within this project <END>
<BEG> return the index into the class { link constantpool } of the { link utf8entry } name the source file for this class <SEG> or 0 if not set <END>
<BEG> set the index into the class { link constantpool } of the { link utf8entry } name the source file for this class <END>
<BEG> return the name of the source file <SEG> or null if not set <END>
<BEG> return the file object for the source file <SEG> or null if not set <END>
<BEG> set the file name from the current class name plus the java extension <END>
<BEG> returns the current byte offset for the different switch case in this instruction <END>
<BEG> sets the offset for the instruction represent the different switch statement case <END>
<BEG> return the target for this switch <SEG> or empty array if not set <END>
<BEG> set the jump point for this switch <END>
<BEG> return the type for the give name <END>
<BEG> the value be of unknown content <SEG> so it be store a a byte array <END>
<BEG> visit the give entity <END>
<BEG> return the wrapper for the give number <SEG> take advantage of cached common value <END>
<BEG> replace all instance of < code > from < code > in < code > str < code > with < code > to < code > <END>
<BEG> splits the give string on the give token <END>
<BEG> joins the give string <SEG> place the give token between them <END>
<BEG> return only the class name <END>
<BEG> return < code > val < code > a the type specify by < code > type < code > <END>
<BEG> whether the give type be parsable via { link # parse } <END>
<BEG> save the { link instrumentation } interface expose by the jvm <END>
<BEG> constructs a { link factory } that will produce factory instance of the specified class <END>
<BEG> constructs a { link factory } that will return the specified factory serializable instance <END>
<BEG> sets the expected type of key and value for a { link cache } configure with this { link configuration } <END>
<BEG> set if read-through caching should be use <END>
<BEG> set if a configured cache should use store-by-value or store-by-reference semantics <END>
<BEG> sets whether statistic gather be enable on a cache <END>
<BEG> sets whether management be enable on a cache <END>
<BEG> gets the event type of this event return the event type <END>
<BEG> obtains a { link factory } for an accessed { link expirypolicy } <END>
<BEG> cancelling be not support <SEG> always throw exception <END>
<BEG> cancelling be not support <SEG> always return false return always false <END>
<BEG> waits if necessary for the operation to complete <END>
<BEG> waits if necessary for at most the give time for the operation to complete <END>
<BEG> create a new cache builder for a cache that have no type restriction or to set the type information later via the builder method { link # keytype } or { link # valuetype } <END>
<BEG> create a builder from the configuration <END>
<BEG> the manager <SEG> the create cache will belong to <END>
<BEG> the used type of the cache key <END>
<BEG> constructs a cache name out of the class name <SEG> a field name and a unique name identify the component in the application <END>
<BEG> expired data be keep in the cache until the entry be evict <END>
<BEG> the maximum number of entry hold by the cache <END>
<BEG> when set to { code true } <SEG> cached value do not expire by time <END>
<BEG> suppress an exception from the cache loader <SEG> if there be previous data <END>
<BEG> time duration after insert or update an cache entry expire <END>
<BEG> sets customization for propagate loader exception <END>
<BEG> enables read through operation and set a cache loader <END>
<BEG> enables read through operation and set a cache loader see cacheloader for general discussion on cache loader <END>
<BEG> enables write through operation and set a writer customization that get call synchronously upon cache mutation <END>
<BEG> listener that be call after a cache be close <END>
<BEG> by default the expiry time be not exact <SEG> which mean <SEG> a value might be visible a few millisecond after the time of expiry <END>
<BEG> if a loader exception happen <SEG> this be the time interval after a retry attempt be make <END>
<BEG> if a loader exception happen <SEG> this be the maximum time interval after a retry attempt be make <END>
<BEG> time span the cache will suppress loader exception if a value be available from a previous load <END>
<BEG> sets a custom resilience policy to control the cache behavior in the presence of exception from the loader <END>
<BEG> to increase performance cache2k optimize the eviction and do eviction in great chunk <END>
<BEG> when { code true } <SEG> { code null } value be allow in the cache <END>
<BEG> by default statistic gathering be enable <END>
<BEG> deprecated since version 1 2 <END>
<BEG> when { code true } <SEG> optimize for high core count and application that do lot of mutation in the cache <END>
<BEG> when { code true } expose statistic via jmx <END>
<BEG> thread pool executor service to use for asynchronous load operation <END>
<BEG> thread pool executor service to use for refresh ahead and prefetch operation <END>
<BEG> executor for asynchronous listener <END>
<BEG> clock to be use by the cache a time reference <END>
<BEG> returns the configuration object this builder operate on <END>
<BEG> get the associate cache manager <END>
<BEG> builds a cache with the specify configuration parameter <END>
<BEG> name of the default cache manager <SEG> which be default by default <END>
<BEG> change the default manager name <END>
<BEG> get the default cache manager for the default class loader <END>
<BEG> retrieve a cache manager with the specify name use the specify classloader <END>
<BEG> close all cache manager <END>
<BEG> close all cache manager associate with this class loader <END>
<BEG> construct a config instance set the type parameter and return a proper generic type <END>
<BEG> see cache2kbuilder # name string <END>
<BEG> see cache2kbuilder # entrycapacity <END>
<BEG> see cache2kbuilder # keytype class see cachetype for a general discussion on type <END>
<BEG> an external configuration for the cache be find and be apply <END>
<BEG> mutable collection of additional configuration section <END>
<BEG> adds the collection of section to the exist list <END>
<BEG> configure a cache with default parameter if configuration have no specific section for it <END>
<BEG> replace the default name of the default cache manager <END>
<BEG> version of the configuration <END>
<BEG> the configuration for each cache be parse and check as soon a the cache manager be create <END>
<BEG> when a configuration be present <SEG> every cache need a cache name so that the configuration can be apply <END>
<BEG> add a new configuration section to the container <END>
<BEG> convert the time value to a time represent an a sharp expiry <END>
<BEG> helper to calculate the next expiry out of two expiry time that may be up next <END>
<BEG> combine a refresh time span and an expiry at a specified point in time <END>
<BEG> called before any other call <END>
<BEG> see jcacheconfiguration builder # copyalwaysifrequested <END>
<BEG> see jcacheconfiguration builder # supportonlinelistenerattachment boolean <END>
<BEG> see builder # enablestatistics <END>
<BEG> return a provider for this interface <END>
<BEG> split a string contain whitespace or comma separate host or ip address and port number of the form host : port host2 : port or host : port <SEG> host2 : port into a list of inetsocketaddress instance suitable for instantiate a memcachedclient <END>
<BEG> get a typical auth descriptor for cram-md5 or plain auth with the give username and password <END>
<BEG> interrupt all pending { link auththread } s while shut down a connection <SEG> if there be any { link auththread } s run <SEG> terminate them so that the java process can exit gracefully otherwise it will wait infinitely <END>
<BEG> returns map of auththread for test authentication mechanism for different server version <END>
<BEG> this method always return false <SEG> a truth can not be determine without iteration <END>
<BEG> get the store data <END>
<BEG> get the flag store along with this value <END>
<BEG> get the cas identifier <END>
<BEG> get the object value <END>
<BEG> get the throwable from the last element of this array if it be throwable <SEG> else null <END>
<BEG> log a formatted message at trace level <END>
<BEG> always return false <SEG> trace be not enable on the defaultlogger <END>
<BEG> see abstractlogger <END>
<BEG> get a logger by name <END>
<BEG> get a logger instance for this class <END>
<BEG> get the result from the invocation <END>
<BEG> tries to find selected hash algorithm use name provide <END>
<BEG> notify all register listener with a special future on completion <END>
<BEG> non-javadoc see net spy memcached internal bulkfuture # getsome long <SEG> java util concurrent timeunit <END>
<BEG> get all or nothing : timeout exception be throw if all the data could not be retrieve see java util concurrent future # get long <SEG> java util concurrent timeunit <END>
<BEG> signals that this future be complete <END>
<BEG> get the operation that time out <END>
<BEG> get the result of the give operation <END>
<BEG> set the operation associate with this operationfuture <END>
<BEG> whether or not the operation associate with this operationfuture have be cancel <END>
<BEG> whether or not the operation be do and result can be retrieve with get <END>
<BEG> return the ketama node weight <END>
<BEG> setup the ketamanodelocator with the list of node it should use <END>
<BEG> get the byte for a key <END>
<BEG> get the key in byte form for all of the string key <END>
<BEG> get a read-only wrapper around the node locator wrap this instance <END>
<BEG> add an object to the cache use the default transcoder iff it do not exist already <END>
<BEG> set an object in the cache use the default transcoder regardless of any exist value <END>
<BEG> replace an object with the give value transcoded with the default transcoder iff there be already a value for the give key <END>
<BEG> get the version of all of the connect memcacheds <END>
<BEG> get a set of stats from all connection <END>
<BEG> increment the give key by the give amount <END>
<BEG> increment the give counter <SEG> return the new value <END>
<BEG> asynchronous decrement <END>
<BEG> delete the give key from the cache of the give cas value applies <END>
<BEG> flush all cache from all server with a delay of application <END>
<BEG> wait for the queue to die down <END>
<BEG> register metrics for collection <END>
<BEG> helper method which get call if the selector be wake up because of the timeout setting <SEG> if have be interrupt or if happens during regular write operation phase <END>
<BEG> add a connection observer <END>
<BEG> makes sure that the give node belongs to the current cluster <END>
<BEG> convert the { link bytebuffer } into a string for easy debugging <END>
<BEG> optionally handle retry not_my_vbuket response <END>
<BEG> enqueue the give { link memcachednode } for reconnect <END>
<BEG> redistribute the give list of operation to potentially other node <END>
<BEG> redistribute the give operation to potentially other node <END>
<BEG> returns the { link nodelocator } in use for this connection <END>
<BEG> enqueue the give { link operation } with the use key <END>
<BEG> add an operation to a connection identify by the give key <END>
<BEG> insert an operation on the give node to the beginning of the queue <END>
<BEG> enqueue an operation on the give node <END>
<BEG> enqueue the give list of operation on each handling node <END>
<BEG> shut down all connection and do not accept far incoming ops <END>
<BEG> construct a string containing information about all node and their state <END>
<BEG> check to see if this connection be shut down <END>
<BEG> handle io as long a the application be run <END>
<BEG> add a operation to the retry queue <END>
<BEG> non-javadoc see net spy memcached ops operationqueuefactory # create <END>
<BEG> get the cas response indicate here <END>
<BEG> add a new getoperation to get <END>
<BEG> non-javadoc see net spy memcached memcachednode # fillwritebuffer boolean <END>
<BEG> non-javadoc see net spy memcached memcachednode # addop net spy memcached ops operation <END>
<BEG> non-javadoc see net spy memcached memcachednode # registerchannel java nio channel socketchannel <SEG> java nio channel selectionkey <END>
<BEG> non-javadoc see net spy memcached memcachednode # setchannel java nio channel socketchannel <END>
<BEG> mark this node a have just complete a read <END>
<BEG> gets the next tap message from the queue of received tap message <END>
<BEG> allows the user to specify a custom tap message <END>
<BEG> specifies a tap stream that will take a snapshot of item in memcached and send them through a tap stream <END>
<BEG> shuts down all tap stream that be currently run <END>
<BEG> the number of message read by all of the tap stream create with this client <END>
<BEG> sets the flag for the tap stream <END>
<BEG> stream all key insert into the server after a give date <END>
<BEG> sets a list of vbuckets to stream key from <END>
<BEG> sets a map of vbucket checkpoint <END>
<BEG> encodes the message into binary <END>
<BEG> gets the value of the time to live field <END>
<BEG> cancels all operation still wait on an exist tapstream <END>
<BEG> check if all operation in the tapstream be complete <END>
<BEG> determine if message send to this server and record on this tapstream have be cancel <END>
<BEG> determine if message send to this server and record on this tapstream have be determine to be in error <END>
<BEG> add an operation to the stream of tap message which have be send to the server <END>
<BEG> set the compression threshold to the give number of byte <END>
<BEG> get the byte represent the give serialized object <END>
<BEG> get the object represent by the give serialized byte <END>
<BEG> compress the give array of byte <END>
<BEG> load data from the give iterator <END>
<BEG> push a value into the cache <END>
<BEG> returns the number of discrete hash that should be define for each node in the continuum <END>
<BEG> check if a give key be valid to transmit <END>
<BEG> returns the maximum number of buffer with the same capacity per thread <END>
<BEG> returns the maximum capacity of a cached buffer <END>
<BEG> dumps an { link iobuffer } to a hex format string <END>
<BEG> see setsessionidletimeout return <END>
<BEG> get current result value without any blocking <END>
<BEG> notify block listener thread about operation completion <END>
<BEG> non-javadoc see com google code yanf4j nio iwritemessage # getbuffers <END>
<BEG> check session if receive byte per second be over flow controll return <END>
<BEG> gets rid of cancelled node s with original predecessor pred <END>
<BEG> returns the url of the resource on the classpath param loader the classloader use to load the resource param resource the resource to find throws ioexception if the resource can not be find or read return the resource <END>
<BEG> returns a resource on the classpath a a stream object param resource the resource to find throws ioexception if the resource can not be find or read return the resource <END>
<BEG> returns a resource on the classpath a a stream object param loader the classloader use to load the resource param resource the resource to find throws ioexception if the resource can not be find or read return the resource <END>
<BEG> get a typical auth descriptor for plain auth with the give username and password <END>
<BEG> non-javadoc see net rubyeye xmemcached commandfactory # createversioncommand <END>
<BEG> non-javadoc see net rubyeye xmemcached commandfactory # createflushallcommand java util concurrent countdownlatch <END>
<BEG> returns a reconnect socket address wrapper see inetsocketaddresswrapper return <END>
<BEG> returns retry time return retry time <SEG> it be zero if it do not retry to connect <END>
<BEG> split a string in the form of host1 : port1 <SEG> host2 : port2 host3 : port3 <SEG> host4 : port4 into a map of inetsocketaddress instance suitable for instantiate a memcachedclient <SEG> map 's key be the main memcached node <SEG> and value be the standby node for main node <END>
<BEG> split a string in the form of host : port host2 : port into a list of inetsocketaddress instance suitable for instantiate a memcachedclient <END>
<BEG> system property to control shutdown hook <SEG> issue # 44 since 2 0 1 <END>
<BEG> create an unresolved server string hostname : port from an inetsocketaddress <END>
<BEG> returns a new lock implementation depend on the platform support <END>
<BEG> remove exist entry from the hash <END>
<BEG> schedule the specify timer task for execution at the specified time with the specified period <SEG> in millisecond <END>
<BEG> terminates this timer <SEG> discard any currently schedule task <END>
<BEG> cancels this timer task <END>
<BEG> returns the < i > schedule < i > execution time of the most recent < i > actual < i > execution of this task <END>
<BEG> reload the tunable configuration from the system property and the configuration file <END>
<BEG> provide tune object with initialized information from property in the class path or system property <END>
<BEG> element name contain a section or bean <END>
<BEG> links the element to the front of the deque so that it become the first element <END>
<BEG> unlinks the non-null element <END>
<BEG>  < p > beware that <SEG> unlike in most collection <SEG> this method be < em > not < em > a constant-time operation <END>
<BEG> returns the current value or null if either not do or fail <END>
<BEG> returns the value when complete successfully or null if fail <END>
<BEG> returns a writer that do nothing <END>
<BEG> specifies the executor to use when run asynchronous task <END>
<BEG> specifies the maximum number of entry the cache may contain <END>
<BEG> specifies that each key not value store in the cache should be wrap in a { link weakreference } by default <SEG> strong reference be use <END>
<BEG> specifies that each entry should be automatically remove from the cache once a fixed duration have elapse after the entry 's creation <SEG> or the most recent replacement of it value <END>
<BEG> specifies that each entry should be automatically remove from the cache once a fixed duration have elapse after the entry 's creation <SEG> the most recent replacement of it value <SEG> or it last read <END>
<BEG> specifies that active entry be eligible for automatic refresh once a fixed duration have elapse after the entry 's creation <SEG> or the most recent replacement of it value <END>
<BEG> initializes and increase the capacity of this < tt > frequencysketch < tt > instance <SEG> if necessary <SEG> to ensure that it can accurately estimate the popularity of element give the maximum size of the cache <END>
<BEG> returns if the sketch have not yet be initialize <SEG> require that { link # ensurecapacity } be call before it begin to track frequency <END>
<BEG> returns the estimated number of occurrence of an element <SEG> up to the maximum 15 <END>
<BEG> reduces every counter by half of it original value <END>
<BEG> returns the table index for the counter at the specified depth <END>
<BEG> returns a future that wait for all of the dependent future to complete and return the combined mapping if successful <END>
<BEG> sequentially load each miss entry <END>
<BEG> returns a mapping function that adapt to { link cacheloader # load } <END>
<BEG> returns whether the supplied cache loader have bulk load functionality <END>
<BEG> sets the weight from the entry 's perspective <END>
<BEG> returns the time that this entry be last accessed <SEG> in n <END>
<BEG> sets the variable expiration time in nanosecond <END>
<BEG> atomically set the variable time to the give updated value if the current value equal the expected value and return if the update be successful <END>
<BEG> returns the queue that the entry 's resides in window <SEG> probation <SEG> or protect <END>
<BEG> set queue that the entry reside in window <SEG> probation <SEG> or protect <END>
<BEG> sets the access time in nanosecond <END>
<BEG> returns a key suitable for insert into the cache <END>
<BEG> returns a key suitable for look up an entry in the cache <END>
<BEG> returns a factory optimize for the specified feature <END>
<BEG> returns whether this factory support weak value <END>
<BEG> returns if the current fire time be sooner <SEG> or if it be later and within the tolerance limit <END>
<BEG> returns the delay and set the next fire time <END>
<BEG> returns a scheduler that always return a successfully complete future <END>
<BEG> returns a scheduler that use the system-wide scheduling thread if available <SEG> or else return { link # disabledscheduler } if not present <END>
<BEG> returns a scheduler that suppress and log any exception throw by the delegate { code scheduler } <END>
<BEG> increments all counter by the value in { code other } <END>
<BEG> pseudo-randomly advance and record the give probe value for the give thread <END>
<BEG> returns the close power-of-two at or high than the give value <END>
<BEG> returns a ticker that read the current time use { link system # nanotime } <END>
<BEG> advances the timer and evict entry that have expire <END>
<BEG> expires entry or reschedules into the proper bucket if still active <END>
<BEG> schedules a timer event for the node <END>
<BEG> reschedules an active timer event for the node <END>
<BEG> removes a timer event for this entry if present <END>
<BEG> determines the bucket that the timer event should be add to <END>
<BEG> removes the entry from it bucket <SEG> if schedule <END>
<BEG> returns the duration until the next bucket expire <SEG> or { link long max_value } if none <END>
<BEG> returns the duration when the wheel 's next bucket expire <SEG> or { link long max_value } if empty <END>
<BEG> returns an unmodifiable snapshot map roughly order by the expiration time <END>
<BEG> 1 <END>
<BEG> returns a weigher that enforce that the weight be non-negative <END>
<BEG> creates a queue with an optimistic backoff strategy <END>
<BEG> adds the linked list of node to the queue <END>
<BEG> returns a snapshot of the entry name { code key } <SEG> or null if it do n't exist be not currently readable <END>
<BEG> returns the directory where this cache store it data <END>
<BEG> changes the maximum number of byte the cache can store and queue a job to trim the exist store <SEG> if necessary <END>
<BEG> returns the number of byte currently be use to store the value in this cache <END>
<BEG> drops the entry for { code key } if it exist and can be remove <END>
<BEG> force buffer operation to the filesystem <END>
<BEG> closes the cache and delete all of it stored value <END>
<BEG> closes the reader by close the underlie { code inputstream } and mark this reader a closed <END>
<BEG> reads the next line <END>
<BEG> deletes the content of { code dir } <END>
<BEG> auto <END>
<BEG> return the unavailable clusterscheme this instance be associate with return returns the unavailable clusterscheme this instance be associate with <END>
<BEG> always return the clusterscheme none return { link clusterscheme # none } <END>
<BEG> returns a hash code for non-null object x <END>
<BEG> selects a lock for a key <END>
<BEG> properly shutdown and await pool termination for an arbitrary amount of time <END>
<BEG> gets the sync stripe to use for a give key <END>
<BEG> returns all internal syncs return all internal syncs <END>
<BEG> returns the cache name return cache name <END>
<BEG> return this configuration instance see # setwritemode string <END>
<BEG> get the write mode in term of the mode enum <END>
<BEG> check whether listener should be notify when an exception occur on a writer operation <END>
<BEG> get the maximum number of write operation to allow per second <END>
<BEG> sets the number of operation to include in each batch when { link # writebatching } be enabled <END>
<BEG> retrieves the size of the batch operation <END>
<BEG> sets the number of time the operation be retry in the { code cachewriter } <SEG> this happen after the original operation <END>
<BEG> retrieves the number of time the write of element be retry <END>
<BEG> sets the number of second to wait before retry an failed operation <END>
<BEG> allows beanhandler to add the cachewriterfactory to the configuration <END>
<BEG> accessor return the configuration <END>
<BEG> configures the amount of thread bucket pair writebehind should use param concurrency amount of thread bucket pair <SEG> have to be at least 1 <END>
<BEG> param concurrency amount of thread bucket pair <SEG> have to be at least 1 return this configuration instance see # setwritebehindconcurrency int <END>
<BEG> accessor return the amount of bucket thread pair configure for this cache 's write behind <END>
<BEG> accessor return the maximum amount of operation allow on the write behind queue <END>
<BEG> check for error inconsistency in this configuration <END>
<BEG> returns the fully qualified class name for the copystrategy to use return fqcn to the copystrategy implementation to use <END>
<BEG> sets the fully qualified class name for the copystrategy to use param classname fqcn <END>
<BEG> sets the copystrategy instance to use param copystrategy the copy strategy <END>
<BEG> get and potentially instantiate the instance return the instance <END>
<BEG> sets the configuration property <END>
<BEG> setter <END>
<BEG> starts visit an element <END>
<BEG> starts visit the attribute of the element <END>
<BEG> finish visit attribute of the element <END>
<BEG> visits the element <END>
<BEG> finish visit the element <END>
<BEG> returns the { link factoryconfiguration } associate with this element return the { link factoryconfiguration } associate with this element <END>
<BEG> enables all output behavior <END>
<BEG> check if the rest service should be enable or not <END>
<BEG> returns the security service location require for trusted identity assertion to the embed rest management service <END>
<BEG> returns the connection read timeout value for the security service in millisecond <END>
<BEG> get the host : port pair to which the rest server should be bind <END>
<BEG> get the host part of the host : port pair to which the rest server should be bind <END>
<BEG> indicates whether or not the embedded agent should enable ssl <END>
<BEG> set ssl indicator for this embedded agent <END>
<BEG> indicates whether or not the embedded agent should require ssl client certificate authorization <END>
<BEG> set ssl client certificate authorization require setting <END>
<BEG> returns the sample history size to be apply to the { link sampledcounterconfig } for sampled statistic return the sample history size <END>
<BEG> sets the sample history size to be apply to the { link sampledcounterconfig } for sampled statistic param samplehistorysize to set <END>
<BEG> returns the sample interval in second to be apply to the { link sampledcounterconfig } for sampled statistic return the sample interval in second <END>
<BEG> sets the sample interval in second to be apply to the { link sampledcounterconfig } for sampled statistic param sampleintervalseconds to set <END>
<BEG> sets the sample search interval in second to be apply to the { link sampledcounterconfig } for sampled statistic param samplesearchinterval to set <END>
<BEG> a factory method for { link sampledcounterconfig } base on the global setting define on this object see # getsampleintervalseconds see # getsamplehistorysize return a { code sampledcounterconfig } <END>
<BEG> retrieves the unit character for the memoryunit return the unit character <END>
<BEG> returns the memoryunit instance base on provided char param unit the unit to look for return the memoryunit instance match the unit throw illegalargumentexception if no match memoryunit match the char <END>
<BEG> parses the unit part of a string <SEG> if no unit char available <SEG> return { link memoryunit # bytes } param value the string representation of an amount of memory return the memoryunit instance <SEG> or bytes if none <END>
<BEG> freeze the config <END>
<BEG> set the value of nonstop be enable or not param enable the new value <END>
<BEG> set the value of nonstop param nonstop return this configuration instance <END>
<BEG> returns true if immediatetimeout be set to true return true if immediatetimeout be set to true <END>
<BEG> returns the value of timeout in millisecond return the value of timeout in millisecond <END>
<BEG> returns the value of the search timeout in millisecond return the value of the search timeout in millisecond <END>
<BEG> set the value of the search timeout param searchtimeoutmillis the new value <END>
<BEG> return the time out multiplication factor for bulk cache operation return the value of factor <END>
<BEG> sets the value of the multiplication factor for bulk cache operation param bulkopstimeoutmultiplyfactor the new value <END>
<BEG> set the value of the search timeout param searchtimeoutmillis the new value of the search timeout in millisecond return this configuration instance <END>
<BEG> returns value of timeoutbehavior configure return value of timeoutbehavior configure <END>
<BEG> set the value of timeoutbehavior param timeoutbehavior <END>
<BEG> gets the persistence strategy return the persistence strategy <END>
<BEG> builder method to set the persistence strategy param strategy the persistence strategy return this persistenceconfiguration object <END>
<BEG> builder method to set the persistence strategy use a string object param strategy the persistence strategy return this persistenceconfiguration object <END>
<BEG> gets the persistence write mode return the persistence write mode <END>
<BEG> sets the persistence write mode param synchronouswrites the persistence write mode <END>
<BEG> builder method to set the persistence write mode param synchronouswrites the persistence write mode return this persistenceconfiguration object <END>
<BEG> set the store scope param store the storage scope <END>
<BEG> set the low store from which element must not be evict from param store the store <SEG> encode a a string return this <END>
<BEG> set the low store from which element must not be evict from param store the store return this <END>
<BEG> return the low store from which element must not be evict from return the low store from which element must not be evict from <END>
<BEG> add the give search attribute throw invalidconfigurationexception if an attribute already exist for the same name param searchattribute to add <END>
<BEG> get the define search attribute index by attribute name return search attribute <END>
<BEG> add a search attribute param searchattribute attribute to add return this <END>
<BEG> freeze this configuration <END>
<BEG> get the define search attribute index by attribute name exclude any search attribute that be automatically implicitly define eg <END>
<BEG> are key searchable ? <END>
<BEG> is dynamic index allow ? <END>
<BEG> allow or disallow dynamic search attribute extraction param allow <END>
<BEG> set the extractor class for this attribute <END>
<BEG> set optional attribute type param type <END>
<BEG> set the extractor property separator param sep <END>
<BEG> set the extractor property separator param sep return this <END>
<BEG> builder method to set the url <END>
<BEG> builder method to set the url for a host and a port <END>
<BEG> get url string <END>
<BEG> get the embedded config read a { code < tc-config > } <END>
<BEG> get the original embedded config return original embed config <END>
<BEG> helper to check whether this be url config or embed config <END>
<BEG> returns true if rejoin be enable return the rejoin <END>
<BEG> set rejoin value param rejoin the rejoin to set <END>
<BEG> builder method to set rejoin param rejoin return this instance <END>
<BEG> returns true if it be a wan enable tsa return wanenabledtsa <END>
<BEG> set wanenabledtsa value param wanenabledtsa <END>
<BEG> returns the type of timeout behavior configure return the configured type <END>
<BEG> set the type of timeout behavior param type <END>
<BEG> set the property param value return this instance <END>
<BEG> get the property separator return the propery separator <END>
<BEG> set the property separator param propertyseparator <END>
<BEG> utility method to generate name of decorate cache to be create use factory specify in defaultcache <END>
<BEG> returns the number of thread this factory have create and currently alive return returns the number of thread this factory have create and currently alive <END>
<BEG> validate this configuration <SEG> mark it valid if it pass <END>
<BEG> set whether get method will be transparently proxied <END>
<BEG> return whether the get method be proxied <END>
<BEG> initialize this configuration from a { link properties } object <END>
<BEG> return the time to refresh in millisecond <END>
<BEG> fluently set the time to refresh second param secs second return this config <END>
<BEG> get the time to refresh in second return time to refresh in second <END>
<BEG> set the time to refresh in second param timetorefreshseconds <END>
<BEG> get the maximum number of backlog item allow <END>
<BEG> fluently set the maximum refresh backlog item <END>
<BEG> set the maximum refresh backlog item <END>
<BEG> get the number of thread use locally in this instance to process refresh request return number of thread <END>
<BEG> set the number of thread use locally in this instance to process refresh request param numberofthreads number of thread <END>
<BEG> fluently set the number of thread use locally in this instance to process refresh request param numberofthreads number of thread return this config object <END>
<BEG> get the batch size with which refresh request will be process <END>
<BEG> set the batch size for process refresh request <END>
<BEG> fluently set the batch size for process refresh request <END>
<BEG> fluently set the name of this cache decorator param name return <END>
<BEG> get whether no return for a key from all cacheloaders will force an eviction prematurely from the underlie cache <END>
<BEG> fluently set whether no return for a key from all cacheloaders should force an eviction prematurely from the underlie cache <END>
<BEG> offer a work unit to queue <END>
<BEG> is this work queue still accept work <END>
<BEG> get the current backlog count <END>
<BEG> gets drop counter <END>
<BEG> shutdown this queue <END>
<BEG> the standard hashcode method which be necessary for socketfactory class <END>
<BEG> gets the associated { code ehcache } <END>
<BEG> return the key component of the message <END>
<BEG> adds a listener to the notification service <END>
<BEG> returns whether or not at least one cache manager event listener have be register <END>
<BEG> initialises the listener <SEG> ready to receive event <END>
<BEG> tell listener to dispose themselves <END>
<BEG> called immediately after a cache have be add and activate <END>
<BEG> sendnotification param eventtype param data param msg <END>
<BEG> dispose of this sampledcachemanager and clean up held resource <END>
<BEG> retrieve a named bean property value <END>
<BEG> determineshortname param fullname <END>
<BEG> see baseemitterbean # getnotificationinfo <END>
<BEG> filter out invalid objectname character from s param s return a valid jmx objectname attribute value <END>
<BEG> returns an objectname for the pass name param name return an { link objectname } use the input name of cache manager throw malformedobjectnameexception <END>
<BEG> getoptimisticfailurecount <END>
<BEG> not support right now <END>
<BEG> see javax management notificationbroadcaster # getnotificationinfo <END>
<BEG> non-javadoc see net sf ehcache util counter sample sampledcounter # getmostrecentsample <END>
<BEG> non-javadoc see net sf ehcache util counter counter # setvalue long <END>
<BEG> non-javadoc see net sf ehcache util counter counter # increment <END>
<BEG> returns an objectname for the passed cachemanagername <SEG> cachename combination param cachemanagername param cachename return an { link objectname } represent the cache use the pass cache and the cache manager name throw malformedobjectnameexception <END>
<BEG> returns an objectname that can be use for query all cache objectname 's for the passed cachemanagername param cachemanagername return an { link objectname } which can be use for query all cache objectname 's for the input cache manager name throw malformedobjectnameexception <END>
<BEG> returns an objectname that can be use to query all objectnames of { link # sampled_cache_manager_type } return an { link objectname } that can be use to query all objectname 's of { value # sampled_cache_manager_type } throw malformedobjectnameexception <END>
<BEG> non-javadoc see net sf ehcache util counter sample sampledratecounter # increment long <SEG> long <END>
<BEG> non-javadoc see net sf ehcache util counter sample sampledratecounter # setnumeratorvalue long <END>
<BEG> return a string that provide information a to the type of the value <END>
<BEG> param mimetype any string that provide information a to the type of the value <END>
<BEG> return the value <SEG> which can be any arbitrary binary value <END>
<BEG> param value an arbitrary binary value <END>
<BEG> throws { code illegalstateexception } if this accessor be not link to it 's pool <END>
<BEG> returns a proxy on the customannotation <SEG> have the same type than the referenceannotation param customannotation param referenceannotation return proxied customannotation with the type of referenceannotation <END>
<BEG> will return the flyweight enum instance for the flyweight class <SEG> or null if type be n't flyweight param aclazz the class we need the flyweighttype instance for return the flyweighttype <SEG> or null <END>
<BEG> add to the partially measure size param toadd <END>
<BEG> get the partially measure size return <END>
<BEG> construct a minimum value aggregator param attribute return min aggregator <END>
<BEG> construct a sum aggregator param attribute return sum aggregator <END>
<BEG> construct a counting aggregator return count aggregator <END>
<BEG>  < p > note : null value be ignore and not include in the computation <END>
<BEG>  < p > note : null be return if there be no input supply to this function <END>
<BEG> get the appropriate { link { link attributetype } enum for the give object value <END>
<BEG> get the appropriate { link { link attributetype } enum for the give java { link class } param c return the attribute type for this value <END>
<BEG> return all support built-in type <END>
<BEG> set desire batch size for search result <END>
<BEG> return desire search result batch size <END>
<BEG> get the minimum value return min value <END>
<BEG> return true if the min be include in range <END>
<BEG> comparable value <END>
<BEG> param criterion search criterion <END>
<BEG> reinitialise parser <END>
<BEG> switch to specify lex state <END>
<BEG> gets the parse model for a select <END>
<BEG> checks if be key <END>
<BEG> gets the type class <END>
<BEG> non-javadoc see net sf ehcache statistic bean attributeproxy # get java lang string <END>
<BEG> non-javadoc see net sf ehcache statistic bean attributeproxy # set java lang string <SEG> java lang object <END>
<BEG> initialize <END>
<BEG> get a specific attribtue <END>
<BEG> set an attribtue by name <END>
<BEG> set an attribute list <END>
<BEG> accessor for mbean info <END>
<BEG> non-javadoc see net sf ehcache statistic corestatistics # get <END>
<BEG> non-javadoc see net sf ehcache statistic extend extendedstatistics operation # type <END>
<BEG> non-javadoc see net sf ehcache statistic extend extendedstatistics operation # component java lang enum <END>
<BEG> non-javadoc see net sf ehcache statistic extend extendedstatistics operation # ratioof java util set <SEG> java util set <END>
<BEG> non-javadoc see net sf ehcache statistic extend extendedstatistics operation # setalwayson boolean <END>
<BEG> non-javadoc see net sf ehcache statistic extend extendedstatistics operation # getwindowsize java util concurrent timeunit <END>
<BEG> expire <END>
<BEG> instance <END>
<BEG> stop sampling <END>
<BEG> history <END>
<BEG> touch <END>
<BEG> if this statistic be require <END>
<BEG> query that select context node for this statistic <END>
<BEG> operation result type <END>
<BEG> the name of the statistic a find in the statistic context tree <END>
<BEG> a set of tag that will be on the statistic found in the statistic context tree <END>
<BEG> is this stat search relate or not ? <END>
<BEG> operation <END>
<BEG> param statusasint an int argument between 1 and 3 <END>
<BEG> returns a hash code value for status <END>
<BEG> sums the size of all set wrap by this one <SEG> so this will not account for duplicated key <END>
<BEG> you ca n't add to this set <SEG> will throw ! <END>
<BEG> remove the node match this object and return it <END>
<BEG> find a region of the the give size <END>
<BEG> whether the element be insert or update in the store return true if element be update <SEG> false if insert <END>
<BEG> removes an element from the store <END>
<BEG> remove all of the element from the store <END>
<BEG> return true be one phase commit request <SEG> otherwise false <END>
<BEG> reserve a thread from the pool return a multirunner which wrap the reserve thread <END>
<BEG> returns an array of the current element in the queue <END>
<BEG> returns value at the tail of the queue return value at the tail of the queue <END>
<BEG> returns true if the queue be empty <SEG> otherwise false return true if the queue be empty <SEG> false otherwise <END>
<BEG> returns the number of item currently in the queue return the number of item in the queue <END>
<BEG> adds the give value <END>
<BEG> gets the initial value return the initial value of counter create by this config <END>
<BEG> creates and return a counter base on the initial value return the counter create by this config <END>
<BEG> returns the history size return the history size <END>
<BEG> returns the interval time second return interval of the sample thread in second <END>
<BEG> returns the timer task for this sampled counter return the timer task for this sample counter <END>
<BEG> returns the sample thread interval in millis return the sample thread interval in millis <END>
<BEG> get value of the timestamp return the timestamp associate with the current value <END>
<BEG> if the runtime environment restrict thread creation <SEG> this method do nothing <END>
<BEG> if the runtime environment restrict thread creation <SEG> the task be run inline for only one time <END>
<BEG> returns a unique object represent the current thread <END>
<BEG> check if any strong reference need should be remove due to thread exit <END>
<BEG> factory method param serializable any object that implement serializable param estimatedpayloadsize how many byte be expect to be in the serialized representation return a bytearrayoutputstream with a serialized object in it throw java io ioexception if something go wrong with the serialization <END>
<BEG> parse a string contain a human-readable memory size <END>
<BEG> returns a new thread use a name a specify by this factory  <END>
<BEG> return jdk that be use <END>
<BEG> return patch number <END>
<BEG> return require core version <END>
<BEG> return true if the current product be an enterprise one <END>
<BEG> assert that the current product be compatible with the version of ehcache available on the classpath <END>
<BEG> return long version of the build string <END>
<BEG> getter return the currently set timeprovider <END>
<BEG> setter <SEG> need to be set before the { link slewclock } class be be load ! <END>
<BEG> returns an increase unique value base on the { code system currenttimemillis } with some additional reserve space for a counter <END>
<BEG> converts a long second value to an int second value and take into account overflow from the downcast by switch to integer max_value <END>
<BEG> return true if the code be be execute by google 's app engine <SEG> false otherwise <END>
<BEG> puts into the underlying param key param value return <END>
<BEG> remove from the underlie param key return <END>
<BEG> returns a matcher that match tree node whose { link treenode # getcontext } match against the supplied matcher <END>
<BEG> returns a matcher that match class that be sub-types of the supplied class <END>
<BEG> returns a matcher that match attribute map that include the give attribute entry <END>
<BEG> returns a matcher that match attribute map the include an attribute with the give name <SEG> and whose value match the give matcher <END>
<BEG> returns a matcher that match when against object which match < em > any < em > of the supplied matcher <END>
<BEG> return an { code asyncconfig } instance represent the default configuration <END>
<BEG> return a { valuestatistic < long > } return the count for the give result <END>
<BEG> resets variable maintain update to { code long min_value } <END>
<BEG> deprecate since 10 0 <SEG> commands which require initialization should implement { link org infinispan command initializablecommand } <END>
<BEG> invoke the command asynchronously <END>
<BEG> performs the primary function of the command <END>
<BEG> if true <SEG> a return value will be marshal a a { link org infinispan remoting response successfulresponse } <SEG> otherwise it will be marshal a a { link org infinispan remoting response unsuccessfulresponse } <END>
<BEG> used by the inboundinvocationhandler to determine whether the command should be invoke or not <END>
<BEG> used to determine whether the command should be invoke or not <END>
<BEG> get the local name of this element <END>
<BEG> no-op <END>
<BEG> -no-op <END>
<BEG> mark this context-entry a already commit to the { link datacontainer } <END>
<BEG> return true if we 've check persistence for presence of this entry <END>
<BEG> execute an action for each value in the context <END>
<BEG> return the number of entry wrap in the context <SEG> include invalid entry <END>
<BEG> deprecate since 9 1 <END>
<BEG> return { code true } iff key { code key } can be read without go remote <END>
<BEG> return { code true } iff write a value for key { code key } will update it on the local node <END>
<BEG> the cache will remove other entry to make room to limit memory growth return <END>
<BEG> return true if all currently schedule task have already be complete <SEG> false otherwise ; <END>
<BEG> return name of the first class with component annotation go up in the inheritance hierarchy <END>
<BEG> temporary <SEG> for componentregistry getlocalcomponent <END>
<BEG> author dan berindei since 9 0 <END>
<BEG> gets the internal buffer array <END>
<BEG> gets the high internal buffer size after which if more capacity be need the buffer will grow in 25 % increment rather than 100 % <END>
<BEG>  < p > this command will be run in the desired node <SEG> but no result be return to notify the user of completion or failure <END>
<BEG> applies version in source metadata to target metadata <SEG> if no version in target metadata <END>
<BEG> set the { code providedmetadata } on the cache entry <END>
<BEG> replace illegal metric name char with underscore <END>
<BEG> transform a camel-cased name to snake-case <SEG> because microprofile metric love underscore <END>
<BEG> acquires the write lock and consume the specified amount of buffer space <END>
<BEG> releases the write lock <END>
<BEG> resets the buffer counter to the specify number <END>
<BEG> return the timeout value to give up <END>
<BEG> return the { link timeunit } in which the timeout value be <END>
<BEG> return the { link org infinispan remoting inboundhandler deliverorder } <END>
<BEG> return the { link responsefilter } to be use <END>
<BEG> return the { link responsemode } to handle with the response <END>
<BEG> deprecate since 9 0 <SEG> always return { code false } <END>
<BEG> param deliverorder the { link org infinispan remoting inboundhandler deliverorder } <END>
<BEG> deprecate since 9 0 <SEG> it no longer do anything <END>
<BEG> return an instance of { link rpcoptions } with the current builder option <END>
<BEG> similar to { link cachecollectors # serializablecollector serializablesupplier } except that the supplier provide must be marshable through ispn marshal technique <END>
<BEG> method to be invoke after all entry have be pass to the stream that belong to these segment param segment the segment that have all entry pass down <END>
<BEG> this method be to be invoke on possibly a different thread at any point which state that a key have be iterate upon <END>
<BEG> invoked after the iterator have complete iterate upon all entry <END>
<BEG> invoked by transactionmanagers <SEG> make sure it 's an efficient implementation <END>
<BEG> implementing an efficient hashcode be critical for performance : <END>
<BEG> converts a { link publisher } to a { link closeableiterator } by utilize item fetch into an array and refetched a they be consume from the iterator <END>
<BEG> it order a non-blocking action <END>
<BEG> it wait until the { link completablefuture } be complete <END>
<BEG> remove element from the graph param element the element <END>
<BEG> it calculate the segment in which the object belongs <END>
<BEG> adds the element with an online connection to the site <END>
<BEG> return { link sitestatus } create <END>
<BEG> adds a member with an online offline connection to the server base on the { code online } parameter <END>
<BEG> adds the cache with the { link sitestatus } connection to the site <END>
<BEG> convert a get set method to an attribute name <END>
<BEG> get modify time stamp <END>
<BEG> obtain a child fqn from a sub-index <END>
<BEG> binds a name to an object <END>
<BEG> binds a name to an object <SEG> overwrite any exist binding <END>
<BEG> binds a new name to the object bound to an old name <SEG> and unbind the old name <END>
<BEG> enumerates the name bind in the name context <SEG> along with the class name of object bind to them <END>
<BEG> enumerates the name bind in the name context <SEG> along with the object bind to them <END>
<BEG> destroys the name context and remove it from the namespace <END>
<BEG> retrieves the name object <SEG> follow link except for the terminal atomic component of the name <END>
<BEG> retrieves the parser associate with the name context <END>
<BEG> composes the name of this context with a name relative to this context <END>
<BEG> adds a new environment property to the environment of this context <END>
<BEG> removes an environment property from the environment of this context <END>
<BEG> retrieves the environment in effect for this context <END>
<BEG> retrieves the full name of this context within it own namespace <END>
<BEG> creates an initial context for begin name resolution <END>
<BEG> sets the maximum capacity of the map and eagerly evicts entry until it shrink to the appropriate size <END>
<BEG> retrieves the maximum capacity of the map <END>
<BEG> this be the initial state when an instance this object be first create <END>
<BEG> the thread that be responsible for update the cache entry ie <SEG> the thread that manage to grab the update lock have decide to give up responsibility for perform the update <END>
<BEG> the update of the cache entry have be complete <END>
<BEG> the cache entry be currently be generate by the thread that get hold of the update lock <END>
<BEG> attempt to change the state to < code > update_in_progress < code > <END>
<BEG> increments the usage counter by one return the counter value after the increment <END>
<BEG> decrements the usage counter by one <END>
<BEG> retrieves the origin of this event <SEG> if one be specify <END>
<BEG> retrieve the cache entry key that the event applies to <END>
<BEG> retrieve the scope that apply to the event <END>
<BEG> retrieve current object in the cache <END>
<BEG> gets the add counter return the added counter <END>
<BEG> gets the group flush counter return the number of group flush call that have occur <END>
<BEG> gets the cache flush counter return the number of time the entire cache have be flush <END>
<BEG> handles the event fire when an entry be add in the cache <END>
<BEG> handles the event fire when a cache flush occurs <END>
<BEG> returns the internal value in a string form <END>
<BEG> returns the cache 's current hit count return the hit count <END>
<BEG> returns the cache 's current stale hit count <END>
<BEG> this method handle an event each time the cache be access param event the event trigger when the cache be access <END>
<BEG> resets all of the total to zero <END>
<BEG> return the counter in a string form <END>
<BEG> returns the total flush count <END>
<BEG> handles all the scope flush event <END>
<BEG> returns all the flush counter in a string form <END>
<BEG> this method handle an event each time the cache be access <END>
<BEG> event fire when a specific or all scope be flush <END>
<BEG> event fire when an entry be add to the cache <END>
<BEG> event fire when a group be flush from the cache <END>
<BEG> event fire when a key pattern be flush from the cache <END>
<BEG> an event that be fire when an entire cache get flush <END>
<BEG> retrieves the current cron expression <END>
<BEG> determines whether this cron expression match a date time that be more recent than the one supply <END>
<BEG> param s the string to be checked return true if the string parameter contain at least one element <END>
<BEG> param s the string to be checked return true if the string parameter be null or do n't contain any element since 2 4 <END>
<BEG> add a depth to the path param < c > param ser param name return <END>
<BEG> return the path 'depth ' return <END>
<BEG> returns the last element in the path <END>
<BEG> return serializer for column name at the end of the path return <END>
<BEG> prepend a list of bytebuffers to this stream <END>
<BEG> add a buffer to the output without copying <SEG> if possible <END>
<BEG> get the name of the referenced class <END>
<BEG> loads the referenced class <SEG> return a { code class < ? > } reference for the referenced class <END>
<BEG> non-javadoc see io github classgraph scanresultobject # getclassname <END>
<BEG> get the class info <END>
<BEG> loads the enum class <SEG> instantiate the enum constant for the class <SEG> and return the enum constant value represent by this { link annotationenumvalue } <END>
<BEG> return an unmodifiable empty { link annotationinfolist } <END>
<BEG> find the subset of the { link annotationinfo } object in this list for which the give filter predicate be true <END>
<BEG> get the { link repeatable } annotation with the give name <SEG> or the empty list if none find <END>
<BEG> set update the value of the annotation parameter <END>
<BEG> for primitive array type params <SEG> replace object [ ] array contain boxed type with primitive array need to check the type of each method of the annotation class to determine if it be a primitive array type <END>
<BEG> get the annotation parameter value <SEG> by call { link annotationparametervalue # getvalue } on the result of { link # get string } <SEG> if non-null <END>
<BEG> returns null <SEG> because array class do not have a classtypesignature <END>
<BEG> get the type signature of the class <END>
<BEG> get the { link classinfo } instance for the array element type <END>
<BEG> obtain a { code class < ? > } reference for the array class name by this { link arrayclassinfo } object <END>
<BEG> get the number of dimension of the array <END>
<BEG> return an { link arrayclassinfo } instance for the array class <SEG> cast to it superclass <END>
<BEG> non-javadoc see io github classgraph typesignature # equalsignoringtypeparams io github classgraph typesignature <END>
<BEG> non-javadoc see io github classgraph typesignature # tostringinternal boolean <END>
<BEG> parses the array type signature <END>
<BEG> switches on verbose log to system err <END>
<BEG> switches on verbose log to system err if verbose be true <END>
<BEG> enables the scanning of all class <SEG> field <SEG> method <SEG> annotation <SEG> and static final field constant initializer value <SEG> and ignore all visibility modifier <SEG> so that both public and non-public class <SEG> field and method be all scan <END>
<BEG> enables the scanning of classfiles <SEG> produce { link classinfo } object in the { link scanresult } <END>
<BEG> causes class visibility to be ignore <SEG> enable private <SEG> package-private and protected class to be scan <END>
<BEG> enables the saving of method info during the scan <END>
<BEG> enables the saving of static final field constant initializer value <END>
<BEG> enables the saving of annotation info for class <SEG> field <SEG> method and method parameter annotation during the scan <END>
<BEG> enables the determination of inter-class dependency <SEG> which may be read by call { link classinfo # getclassdependencies } <SEG> { link scanresult # getclassdependencymap } or { link scanresult # getreverseclassdependencymap } <END>
<BEG> disables the scanning of nested jarfiles jarfiles within jarfiles <END>
<BEG> causes classgraph to return class that be not in the whitelisted package <SEG> but that be directly refer to by class within whitelisted package a a superclass <SEG> implemented interface or annotation <END>
<BEG> causes class load use { link classinfo # loadclass } to be be initialize after class load the default be to not initialize class <END>
<BEG> remove temporary file <SEG> include nested jarfiles jarfiles within jarfiles <SEG> which have to be extract during scan in order to be read from their temporary directory as soon a the scan have complete <END>
<BEG> override the automatically-detected classpath with a custom path <END>
<BEG> ignore parent classloaders i e <END>
<BEG> ignore parent module layer i e <END>
<BEG> scan one or more specific package and their sub-packages <END>
<BEG> scan one or more specific path <SEG> and their sub-directories or nest path <END>
<BEG> scan one or more specific package <SEG> without recursively scan sub-packages unless they be themselves whitelisted <END>
<BEG> scan one or more specific path <SEG> without recursively scan sub-directories or nested path unless they be themselves whitelisted <END>
<BEG> prevent the scanning of one or more specific package and their sub-packages <END>
<BEG> prevent the scanning of one or more specific path and their sub-directories nest path <END>
<BEG> scan one or more specific class <SEG> without scan other class in the same package unless the package be itself whitelisted <END>
<BEG> specifically blacklist one or more specific class <SEG> prevent them from be scan even if they be in a whitelisted package <END>
<BEG> whitelist one or more jar in a jre jdk lib or ext directory these directory be not scan unless { link # enablesystemjarsandmodules } be call <SEG> by association with the jre jdk <END>
<BEG> whitelist classpath element base on resource path <END>
<BEG> enable classpath element to be fetch from remote http : http : urls or urls with custom scheme <END>
<BEG> enables the scanning of system package { code java <END>
<BEG> if true <SEG> use a { link mappedbytebuffer } rather than the { link filechannel } api to open file <SEG> which may be fast for large classpaths consist of many large jarfiles <SEG> but use up virtual memory space <END>
<BEG> enables log by call { link # verbose } <SEG> and then set the logger to realtime log mode <SEG> where log entry be write out immediately to stderr <SEG> rather than only after the scan have complete <END>
<BEG> scans the classpath with the requested number of thread <SEG> block until the scan be complete <END>
<BEG> get a { link scanresult } that can be use for determine the classpath <END>
<BEG> returns the list of all unique file object represent directory or zip jarfiles on the classpath <SEG> in classloader resolution order <SEG> in the form of a classpath path string <END>
<BEG> returns the ordered list of all unique { link uri } object represent directory jar classpath element and module <END>
<BEG> returns { link moduleref } reference for all the visible module <END>
<BEG> get the module path info provide on the commandline with { code -- module-path } <SEG> { code -- add-modules } <SEG> { code -- patch-module } <SEG> { code -- add-exports } <SEG> { code -- add-opens } <SEG> and { code -- add-reads } <END>
<BEG> static factory method to stop ides from auto-completing classgraphexception after new classgraph <END>
<BEG> find the union of this { link classinfolist } with one or more others <END>
<BEG> find the set difference between this { link classinfolist } and another { link classinfolist } <SEG> i e <END>
<BEG> find the subset of this { link classinfolist } for which the give filter predicate be true <END>
<BEG> filter this { link classinfolist } to include only interface and annotation annotation be interface <SEG> and can be implement <END>
<BEG> filter this { link classinfolist } to include only implemented interface <SEG> i e <END>
<BEG> filter this { link classinfolist } to include only annotation <END>
<BEG> filter this { link classinfolist } to include only { link enum } class <END>
<BEG> filter this { link classinfolist } to include only class that be assignable to the requested class <SEG> assignabletoclass i e <END>
<BEG> generate a dot file which can be feed into graphviz for layout and visualization of the class graph <END>
<BEG> generate a and save a dot file <SEG> which can be feed into graphviz for layout and visualization of the class graph <END>
<BEG> get the { link resource } for a give relative path <END>
<BEG> get the module name from module descriptor <END>
<BEG> get the directory { link file } <END>
<BEG> scan for package match within module <END>
<BEG> get the moduleref for this classpath element <END>
<BEG> get the module name from the module reference or the module descriptor <END>
<BEG> scan for path match within jarfile <SEG> and record zipentry object of match file <END>
<BEG> get module name from module descriptor <SEG> or get the automatic module name from the manifest file <SEG> or derive an automatic module name from the jar name <END>
<BEG> get the zipfile path <END>
<BEG> get the { link file } for the outermost zipfile of this classpath element <END>
<BEG> return the classpath element path <END>
<BEG> get any type argument of the base class <END>
<BEG> get any suffix of the class typically nested inner class name <END>
<BEG> get any type argument for any suffix of the class <SEG> one list per suffix <END>
<BEG> get the fully qualified class name use by { link # getclassinfo } and { link # loadclass } <END>
<BEG> get the name of any class reference in the type signature <END>
<BEG> get the type signature for the superclass possibly null in the case of { link java lang object } <SEG> since it do n't have a superclass <END>
<BEG> get the field modifier a a string <SEG> e g <END>
<BEG> returns the modifier bit for the field <END>
<BEG> returns the parsed type descriptor for the field <SEG> which will not include type parameter <END>
<BEG> returns the parsed type signature for the field <SEG> possibly include type parameter <END>
<BEG> returns the type signature for the field <SEG> possibly include type parameter <END>
<BEG> returns the constant initializer value of a field <END>
<BEG> get a list of annotation on this field <SEG> along with any annotation parameter value <SEG> wrap in { link annotationinfo } object <END>
<BEG> get a the name { link repeatable } annotation on this field <SEG> or the empty list if the field do not have the name annotation <END>
<BEG> check if the field have a give name annotation <END>
<BEG> load the class this field be associate with <SEG> and get the { link field } reference for this field <END>
<BEG> returns the name of the declare class <SEG> so that super getclassinfo return the { link classinfo } object for the declaring class <END>
<BEG> use class name and field name for equal <END>
<BEG> get an index for this list <SEG> a a map from the name of each list item obtain by call { code getname } on each list item to the list item <END>
<BEG> check if this list contain an item with the give name <END>
<BEG> get the list item with the give name <SEG> or null if not find <END>
<BEG> returns true if this method be a bridge method <END>
<BEG> returns true if this method be synthetic <END>
<BEG> returns true if this be a default method i e <END>
<BEG> get the available information on method parameter <END>
<BEG> check if this method have a parameter with the name annotation <END>
<BEG> test class name <SEG> method name and type descriptor for equal <END>
<BEG> check whether the list contain a method with the give name <END>
<BEG> get the { link methodinfo } for the defining method <END>
<BEG> get the method parameter modifier a a string <SEG> e g <END>
<BEG> method parameter type signature <SEG> possibly include generic type information or null if no type signature information available for this parameter <END>
<BEG> method parameter type descriptor <END>
<BEG> method parameter annotation info or null if no annotation <END>
<BEG> sets the scan result <END>
<BEG> convert modifier into a string representation <SEG> e g <END>
<BEG> get the type parameter for the method <END>
<BEG> get the throw type s for the method <END>
<BEG> parse a method signature <END>
<BEG> the module location <SEG> or null for module whose location be unknown <END>
<BEG> add a { link classinfo } object to this { link moduleinfo } <END>
<BEG> get the { link classinfo } object for the named class in this module <SEG> or null if the class be not find in this module <END>
<BEG> get the list of { link classinfo } object for all class that be member of this package <END>
<BEG> get the { link packageinfo } object for all package that be member of this module <END>
<BEG> add annotation find in a module descriptor classfile <END>
<BEG> get any annotation on the { code package-info class } file <END>
<BEG> return the module path info in commandline format <END>
<BEG> get the list of resource accessible to a modulereader <END>
<BEG> use the proxied modulereader to open the name resource a an inputstream <END>
<BEG> release a { link bytebuffer } allocate by call { link # read string } <END>
<BEG> get the module reference of jpms type modulereference <END>
<BEG> get the module location a a string <SEG> i e <END>
<BEG> get the raw version string of the module <SEG> or null if the module do not provide one <END>
<BEG> checks if this module be a system module <END>
<BEG> get the class loader for the module <END>
<BEG> open the module <SEG> return a { link modulereaderproxy } <END>
<BEG> merge a { link classinfo } object for a package-info class file into this packageinfo <END>
<BEG> the parent package of this package <SEG> or null if this be the root package <END>
<BEG> the child package of this package <SEG> or the empty list if none <END>
<BEG> get the { link classinfo } object for all class that be member of this package or a sub-package <END>
<BEG> get the name of the parent package of a parent <SEG> or the package of the name class <END>
<BEG> make this list unmodifiable <END>
<BEG> get the { link uri } represent the resource 's location <END>
<BEG> get the classpath element { link file } <END>
<BEG> get the the { link moduleref } for the module that this { link resource } be find within <END>
<BEG> convenience method to get the content of this { link resource } a a string <END>
<BEG> get the path of all resource in this list relative to the package root <END>
<BEG> get the path of all resource in this list relative to the root of the classpath element <END>
<BEG> get the urls of all resource in this list <SEG> by call { link resource # geturl } for each item in the list <END>
<BEG> return a new { link resourcelist } consist of only the resource with the filename extension class <END>
<BEG> return a new { link resourcelist } consist of non-classfile resource only <END>
<BEG> return this { link resourcelist } a a map from resource path obtain from { link resource # getpath } to a { link resourcelist } of { link resource } object that have that path <END>
<BEG> find duplicate resource path within this { link resourcelist } <END>
<BEG> fetch the content of each { link resource } in this { link resourcelist } a a byte array <SEG> pass the byte array to the give { link bytearrayconsumer } <SEG> then close the underlying inputstream or release the underlie bytebuffer by call { link resource # close } <END>
<BEG> close all the { link resource } object in this { link resourcelist } <END>
<BEG> static initialization warm up classloading <SEG> call when the classgraph class be initialize <END>
<BEG> returns the list of file object for unique classpath element directory or jarfiles <SEG> in classloader resolution order <END>
<BEG> returns all unique directory or zip jarfiles on the classpath <SEG> in classloader resolution order <SEG> a a classpath string <SEG> delineate with the standard path separator character <END>
<BEG> returns an ordered list of unique classpath element and module uris <END>
<BEG> get the list of all resource <END>
<BEG> get a map from resource path to { link resource } for all resource include classfiles and non-classfiles find in whitelisted package <END>
<BEG> get the list of all resource find in whitelisted package that have the give path <SEG> relative to the package root of the classpath element <END>
<BEG> get the list of all resource find in whitelisted package that have the request leafname <END>
<BEG> get the list of all resource find in whitelisted package that have a path match the requested pattern <END>
<BEG> get the { link moduleinfo } object for the name module <SEG> or null if no module of the request name be find during the scan <END>
<BEG> get all module find during the scan <END>
<BEG> get the { link classinfo } object for the named class <SEG> or null if no class of the request name be find in a whitelisted non-blacklisted package during the scan <END>
<BEG> get a map from class name to { link classinfo } object for all class <SEG> interface and annotation find during the scan <END>
<BEG> get all standard non-interface non-annotation class find during the scan <END>
<BEG> get all subclass of the name superclass <END>
<BEG> get class that have a method with an annotation of the name type <END>
<BEG> get class that have a method with a parameter that be annotate with an annotation of the name type <END>
<BEG> get all interface class find during the scan not include annotation <SEG> which be also technically interface <END>
<BEG> get all interface implement by the named class or by one of it superclass <SEG> if this be a standard class <SEG> or the superinterfaces extend by this interface <SEG> if this be an interface <END>
<BEG> get all class that implement or have superclass that implement the named interface or one of it subinterfaces <END>
<BEG> get class with the name class annotation or meta-annotation <END>
<BEG> get annotation on the name class <END>
<BEG> determine whether the classpath content have be modify since the last scan <END>
<BEG> find the maximum last-modified timestamp of any whitelisted file directory jarfile encounter during the scan <END>
<BEG> get the classloader order <SEG> respect parent-first parent-last delegation order <END>
<BEG> serialize a scanresult to json <END>
<BEG> checks if this { link scanresult } be obtain from json by deserialization <SEG> by call { link # fromjson string } <END>
<BEG> free any temporary file create by extract jar or file from within jar <END>
<BEG> close all { link scanresult } instance that have not yet be close <END>
<BEG> set scanresult backreferences in info object after scan have complete <END>
<BEG> get { link classinfo } object for any class reference by this object <END>
<BEG> get the { link classinfo } object for the referenced class <SEG> or null if the referenced class be not encounter during scan i e <END>
<BEG> load the class name return by { link # getclassinfo } <SEG> or if that return null <SEG> the class name by { link # getclassname } <END>
<BEG> get the type wildcard <SEG> which be one of { none <SEG> any <SEG> extends <SEG> super } <END>
<BEG> get the type signature associate with the wildcard or null <SEG> if the wildcard be any <END>
<BEG> parse a list of type argument <END>
<BEG> { link # tostring } with simple name for class <END>
<BEG> get the type parameter interface bound s <END>
<BEG> check whether this { link classloaderhandler } can handle a give { link classloader } <END>
<BEG> get the context class loader <END>
<BEG> get class in the callstack <END>
<BEG> get the { link classloader } order <END>
<BEG> recursively delegate to another { link classloader } <END>
<BEG> get the classpath order <END>
<BEG> get the order of classpath element <SEG> uniquified and in order <END>
<BEG> get the unique classpath entry string <END>
<BEG> add a system classpath entry <END>
<BEG> interrupt all thread that share this interruptionchecker <END>
<BEG> set the { link executionexception } that be throw by a worker <END>
<BEG> get the { link executionexception } that be throw by a worker <SEG> or null if none <END>
<BEG> get the cause of an { link executionexception } <END>
<BEG> check for interruption and return interruption status <END>
<BEG> check if this thread or any other thread that share this interruptionchecker instance have be interrupt or have throw an exception <SEG> and if so <SEG> throw interruptedexception <END>
<BEG> new thread <END>
<BEG> get the map entry <END>
<BEG> add a unit of work <END>
<BEG> completion barrier for work queue <END>
<BEG> get the last modified time in epoch millis <SEG> or 0l if unknown <END>
<BEG> sort in decrease order of version number <SEG> then lexicographically increase order of unversioned entry path <END>
<BEG> non-javadoc see nonapi io github classgraph fastzipfilereader zipfileslice # tostring <END>
<BEG> attempt to remove a temporary file <END>
<BEG> mark a { link fileslice } a open <END>
<BEG> wrap an { link inputstream } with an { link inflaterinputstream } <SEG> recycle the { link inflater } instance <END>
<BEG> read all the byte in an { link inputstream } <END>
<BEG> close zipfiles <SEG> module <SEG> and recyclers <SEG> and delete temporary file <END>
<BEG> get the { link file } for the outermost jar file of this physicalzipfile <END>
<BEG> get the length of the mapped file <SEG> or the initial remain byte in the wrapped bytebuffer if a buffer be wrap <END>
<BEG> get the parent zipfileslice <SEG> or return null if this be a toplevel slice i e <END>
<BEG> get the path of this zipfile slice <SEG> e g <END>
<BEG> non-javadoc see nonapi io github classgraph fastzipfilereader zipfileslice # equal java lang object <END>
<BEG> load the slice a a byte array <END>
<BEG> return a new random access reader <END>
<BEG> ensure that the give number of byte have be read into the buffer from the beginning of the slice <END>
<BEG> get the concrete type of the give class <SEG> then return the default constructor for that type <END>
<BEG> get the concrete type of the give class <SEG> then return the constructor for that type that take a single integer parameter the initial size hint <SEG> for collection or map <END>
<BEG> deserialize json to a new object graph <SEG> with the root object of the specify expect type <END>
<BEG> escape a string to be surround in double quote in json <END>
<BEG> indent depth indentwidth space <END>
<BEG> get a field value <SEG> appropriately handle primitive-typed field <END>
<BEG> return true for class that can be equal to a basic value type type that can be convert directly to and from string representation <END>
<BEG> return true for type that can be convert directly to and from string representation <END>
<BEG> return true for object that be collection or array i e <END>
<BEG> get the raw type from a type <END>
<BEG> return true if the field be accessible <SEG> or can be make accessible and make it accessible if so <END>
<BEG> check if a field be serializable <END>
<BEG> non-javadoc see java lang reflect parameterizedtype # getactualtypearguments <END>
<BEG> resolve the type variable in a type use a type variable resolution list <SEG> produce a resolve type <END>
<BEG> acquire on object instance of type t <SEG> either by reuse a previously recycle instance if possible <SEG> or if there be no currently-unused instance <SEG> by allocate a new instance <END>
<BEG> acquire a recyclable wrapper around an object instance <SEG> which can be use to recycle object instance at the end of a try-with-resources block <END>
<BEG> recycle an object for reuse by a subsequent call to { link # acquire } <END>
<BEG> free all unused instance <END>
<BEG> force-close this { link recycler } <SEG> by forcibly move any instance that have be acquire but not yet recycle into the unused instance list <SEG> then call { link # close } to close any { link autocloseable } instance and discard all instance <END>
<BEG> sort prefix to ensure correct whitelist blacklist evaluation see issue # 167 <END>
<BEG> add a classpath element filter <END>
<BEG> add a classloader to the list of classloaders to scan <END>
<BEG> allow a specified url scheme in classpath element <END>
<BEG> completely override the list of classloaders to scan <END>
<BEG> returns true if the give directory path be a descendant of a blacklisted path <SEG> or an ancestor or descendant of a whitelisted path <END>
<BEG> returns true if the give relative path for a classfile name <SEG> include class match a specifically-whitelisted and non-blacklisted classfile 's relative path <END>
<BEG> returns true if the class be specifically blacklist <SEG> or be within a blacklisted package <END>
<BEG> write to log <END>
<BEG> remove initial and final ' ' character <SEG> if any <END>
<BEG> remove initial and final ' ' <END>
<BEG> convert a path to a package name <END>
<BEG> convert a package name to a path <END>
<BEG> convert a spec with a ' ' glob character into a regular expression <END>
<BEG> check if the whitelist and blacklist be empty <END>
<BEG> check if a string be specifically whitelisted and not blacklist <END>
<BEG> check if a string be specifically whitelisted <END>
<BEG> need to sort prefix to ensure correct whitelist blacklist evaluation see issue # 167 <END>
<BEG> sort a collection if it be not empty to prevent { link concurrentmodificationexception } if an immutable empty list that have be return more than once be be sort in one thread and iterate through in another thread -- # 334 <END>
<BEG> parse percent encoding <SEG> e g <END>
<BEG> sanitize relative path against zip slip vulnerability <SEG> by remove path segment if be find in the url <SEG> but without allow navigation above the path hierarchy root <END>
<BEG> check if the path end with a class extension <SEG> ignore case <END>
<BEG> check if a { link file } exist <SEG> be a regular file <SEG> and can be read <END>
<BEG> check if a { link file } exist <SEG> be a directory <SEG> and can be read <END>
<BEG> get the parent dir path <END>
<BEG> close a { code directbytebuffer } -- in particular <SEG> will unmap a { link mappedbytebuffer } <END>
<BEG> split a path on the give separator char <END>
<BEG> returns the leafname of a path <SEG> after first strip off everything after the first ' ! <END>
<BEG> convert a class name to the correspond classfile path <END>
<BEG> a replacement for java 8 's string join <END>
<BEG> call this once the work correspond with a give log entry have complete if you want to show the time take after the log entry <END>
<BEG> add a log entry with sort key for deterministic ordering <END>
<BEG> add a log entry <END>
<BEG> add a series of log entry <END>
<BEG> flush out the log to stderr <SEG> and clear the log content <END>
<BEG> get the value of the name field in the class of the give object or any of it superclass <END>
<BEG> call class forname classname <SEG> but return null if any exception be throw <END>
<BEG> encode a url path use percent-encoding <END>
<BEG> normalize a url path <SEG> so that it can be feed into the url or uri constructor <END>
<BEG> switches on verbose mode for debug purpose if verbose == true <END>
<BEG> if ignorefieldvisibility be true <SEG> cause fastclasspathscanner to ignore field visibility <SEG> enable it to see private <SEG> package-private and protected field <END>
<BEG> if enablemethodannotationindexing be true <SEG> enable method annotation indexing <SEG> which allow you to call scanresult # getnamesofclasseswithmethodannotation annotation <END>
<BEG> if enablefieldinfo be true <SEG> enable the saving of field info during the scan <END>
<BEG> allows you to scan default package with package name without scan sub-packages unless they be whitelisted <END>
<BEG> if strictwhitelist be true <SEG> switch fastclasspathscanner to strict mode <SEG> which disallow search match base on blacklisted class <SEG> and remove external class from result list return by scanspec # get method <END>
<BEG> causes fastclasspathscanner to return matching class that be not in the whitelisted package <SEG> but that be directly refer to by class within whitelisted package a a superclass <SEG> implemented interface or annotation <END>
<BEG> if initializeloadedclasses be true <SEG> class load with class forname be initialize before pass class reference to matchprocessors <END>
<BEG> if true <SEG> nested jarfiles jarfiles within jarfiles <SEG> which have to be extract during scan in order to be read be remove from their temporary directory as soon a the scan have complete <END>
<BEG> if true <SEG> disable recursive scanning <END>
<BEG> manually strip the self extract executable header from zipfiles i e <END>
<BEG> if this method be call <SEG> a new { link java net urlclassloader } be create for all class find on the classpath that match whitelist criterion <END>
<BEG> if suppressmatchprocessorexceptions be true <SEG> exception throw inside matchprocessors be not re-thrown wrap in a matchprocessorexception at the end of a synchronous scan <SEG> and any thrown exception can be fetch use scanresult getmatchprocessorexceptions <END>
<BEG> find the classloader or classloaders most likely to represent the order that classloaders be use to resolve class in the current context <END>
<BEG> asynchronously scan the classpath for match file <SEG> and call any matchprocessors if a match be identify <END>
<BEG> parse a json type object array value <END>
<BEG> get all the exception throw by a matchprocessor during the scan <END>
<BEG> create a matchprocessorexception param exception the list of throwables exceptions or errors that be throw by the matchprocessor <END>
<BEG> add a set of default value <SEG> store in an annotation class ' classfile <SEG> to a concrete instance of that annotation <END>
<BEG> get a class reference for the annotation <END>
<BEG> get the parameter value of the annotation <END>
<BEG> render a a string <SEG> into a stringbuilder buffer <END>
<BEG> get a map from class name to classinfo for the class <END>
<BEG> get a map from class name to classloader s for the class <END>
<BEG> return the name of all superinterfaces of the name interface <END>
<BEG> return the sorted list of name of all class implement the name interface <SEG> and their subclass <END>
<BEG> return the sorted list of name of all annotation and meta-annotations on the name class <END>
<BEG> return the name of all annotation that have the name meta-annotation <END>
<BEG> get context classloader <SEG> and any other classloader that be not an ancestor of context classloader <END>
<BEG> return the classpath element 's file directory or jarfile <SEG> or null if this be a module <END>
<BEG> get the moduleref for the classpath element <SEG> if this be a module <SEG> otherwise return null <END>
<BEG> get the number of classfile match <END>
<BEG> apply relative path mask within this classpath resource -- remove relative path that be find in an early classpath element <END>
<BEG> close and free all open zipfiles <END>
<BEG> get the raw classpath element obtain from classloaders <END>
<BEG> get the classloader and module finder <END>
<BEG> get the order of classpath element <END>
<BEG> add classpath element <SEG> separate by the system path separator character <END>
<BEG> add all classpath element in another classpathelementorder after the element in this order <END>
<BEG> sets back-reference to scan result after scan be complete <END>
<BEG> deprecated <SEG> use getmodifierstr instead <END>
<BEG> returns the low-level internal type descriptor string for the field <SEG> without type parameter <SEG> e g <END>
<BEG> returns the parsed type descriptor for the field <SEG> if available <END>
<BEG> returns the constant final initializer value of the field <END>
<BEG> returns the name of unique annotation on the field <END>
<BEG> returns { code class < ? > } reference for the unique annotation on this field <END>
<BEG> returns the method parameter name <SEG> if available only available in classfiles compile in jdk8 or above use the -parameters commandline switch <SEG> otherwise return null if the parameter name be not know <END>
<BEG> returns the parameter modifier <SEG> if available only available in classfiles compile in jdk8 or above use the -parameters commandline switch <SEG> or code compile with kotlin or some other language <SEG> otherwise return null if the parameter modifier be not know <END>
<BEG> returns the parameter modifier a a string e g <END>
<BEG> returns the annotation on each method parameter along with any annotation parameter <SEG> wrap in annotationinfo object if any parameter have annotation <SEG> else return null <END>
<BEG> returns the unique annotation name for annotation on each method parameter <SEG> if any parameter have annotation <SEG> else return null <END>
<BEG> returns the result type signature for the method with type parameter <SEG> if present <END>
<BEG> returns the result type descriptor for the method without any type parameter <END>
<BEG> returns the return type for the method a a class reference <END>
<BEG> returns the type of exception the method may throw <END>
<BEG> returns the type parameter of the method <SEG> in string representation <SEG> e g <END>
<BEG> returns the module reference type modulereference <END>
<BEG> returns true if this module 's location be a non- file : jrt : uri <SEG> or if it have no location uri <SEG> or if it use the null bootstrap classloader <SEG> or if the module name start with a system prefix java <END>
<BEG> get all visible modulereferences in all layer <SEG> give an array of stack frame { code class < ? > } reference <END>
<BEG> return true base on equality of canonical path <END>
<BEG> get the path of this classpath element <SEG> resolve against the parent path <END>
<BEG> returns true if the path be a jrt : url <END>
<BEG> if non-empty <SEG> this path represent the package root within a jarfile <SEG> e g <END>
<BEG> gets the canonical path of the file object correspond to the resolve path <END>
<BEG> true if this relative path corresponds with a file <END>
<BEG> find the classloader s for the name class <END>
<BEG> called if classloading fails <SEG> or if a matchprocessor throw an exception or error <END>
<BEG> returns the list of unique classpath element path a urls <SEG> in classloader resolution order <END>
<BEG> get the name of class that have a method with an annotation of the name type <END>
<BEG> get the name of all class that implement or have superclass that implement all of the name interface or their subinterfaces <END>
<BEG> get the name of class that have all of the name annotation <END>
<BEG> produce a list of class reference give a list of class name <END>
<BEG> get the map from class name to static final field to match <END>
<BEG> register an extra classloaderhandler <END>
<BEG> override the automatically-detected classpath with a custom search path <END>
<BEG> return true if any matchprocessors have be add <END>
<BEG> run the matchprocessors after a scan have complete <END>
<BEG> returns true if a jarfile be whitelisted and not blacklist <END>
<BEG> check each element of an array of class be an annotation <SEG> and that it be in a whitelisted package <END>
<BEG> check a class be a regular class or interface and not an annotation <SEG> and that it be in a whitelisted package <END>
<BEG> check a class be a standard class not an interface or annotation <SEG> and that it be in a whitelisted package <END>
<BEG> calls the provided classmatchprocessor for all standard class <SEG> interface and annotation find in whitelisted package on the classpath <END>
<BEG> calls the provided classmatchprocessor for all standard class i e <END>
<BEG> calls the provided classmatchprocessor for all interface class interface definition find in whitelisted package on the classpath <END>
<BEG> instantiate class ref <END>
<BEG> get the name of the class <SEG> along with any suffix suffix be for inner class nesting <SEG> and be separate by ' $ ' <END>
<BEG> get the type signature of any superinterfaces return the type signature of any superinterfaces <END>
<BEG> parse a java identifier with the give separator ' ' <END>
<BEG> empty the queue <SEG> call close on each item <END>
<BEG> can be use to get the url of a classpath resource whose classpath element and relative path have be pass into a matchprocessor <END>
<BEG> check if this thread or any other thread that share this interruptionchecker instance have be interrupt or have throw an exception <SEG> and if so <SEG> return true <SEG> else return false <END>
<BEG> split a path on file pathseparator ' : ' on linux <SEG> ' ; ' on windows <SEG> but also allow for the use of urls with protocol specifier <SEG> e g <END>
<BEG> get the path for any jre jdk lib jar <END>
<BEG> return true if the give class name <SEG> package name or module name have a system package or module prefix <END>
<BEG> count the number of byte before the character pk in a zipfile <END>
<BEG> strip the self-extracting archive header from the beginning of a zipfile <END>
<BEG> log the java version and the jre path that be find <END>
<BEG> delete temporary file and release other resource <END>
<BEG> release recycle an instance <END>
<BEG> call this only after all instance have be release <END>
<BEG> check if the give key be in the map <SEG> and if so <SEG> return it <END>
<BEG> get all singleton in the map <END>
<BEG> finds the version number of fastclasspathscanner <END>
<BEG> start worker thread with a share log <END>
<BEG> start a worker <END>
<BEG> return the name or variable name <END>
<BEG> return an ownership policy that return true for { link configurationownershippolicy # have configurationkey <SEG> map } return policy <END>
<BEG> return an ownership policy that return true for { link configurationownershippolicy # have configurationkey <SEG> map } when the give regular expression match return regex policy <END>
<BEG>  an aborted exception be not intend to be retry <END>
<BEG> sets the aws requestid for this exception <END>
<BEG> returns the aws request id that uniquely identify the service request the caller make <END>
<BEG> sets the name of the service that send this error response <END>
<BEG> sets the aws error code represent by this exception <END>
<BEG> return the human-readable error message provide by the service <END>
<BEG> sets the http status code that be return with this service exception <END>
<BEG> typically only useful for debug purpose if for some reason the sdk can not parse the http response from a service return the raw content of the http response a a string <END>
<BEG> returns the response payload a byte <END>
<BEG> return a map of http header associate with the error response <END>
<BEG> sets the header present in the error response <END>
<BEG> returns the service abbreviation for this service <SEG> use for identify service endpoint by region <SEG> identify the necessary signer <SEG> etc <END>
<BEG> sets the optional credential to use for this request <SEG> override the default credential set at the client level <END>
<BEG> returns the optional credential to use to sign this request <SEG> override the default credential set at the client level <END>
<BEG> returns the optional credential provider to use to sign this request <SEG> override the default credential provider at the client level <END>
<BEG> gets the option store with this request object <END>
<BEG> returns a request level metric collector ; or null if not specify <END>
<BEG> sets a request level request metric collector which take precedence over the one at the http client level and aws sdk level <END>
<BEG> specifies a request level metric collector which take precedence over the one at the http client level and aws sdk level <END>
<BEG> sets the optional progress listener for receive update about the progress of the request <END>
<BEG> sets the optional progress listener for receive update about the progress of the request <SEG> and return a reference to this object so that method call can be chain together <END>
<BEG> returns an immutable map of custom header name to header value <END>
<BEG> put a new custom header to the map of custom header name to custom header value <SEG> and return the previous value if the header have already be set in this map <END>
<BEG> return the immutable map of custom query parameter <END>
<BEG> add a custom query parameter for the request <END>
<BEG> copies the internal state of this base class to that of the target request <END>
<BEG> returns the source object from which the current object be clone ; or null if there be n't one <END>
<BEG> returns the amount of time to wait in millisecond for the request to complete before give up and time out <END>
<BEG> returns the amount of time in millisecond to allow the client to complete the execution of an api call <END>
<BEG> retrieve an unmodifiable collection of all handler context object <END>
<BEG> returns the result contain by this response <END>
<BEG> sets the response metadata associate with this response <END>
<BEG> returns the aws request id from the response metadata section of an aws response <END>
<BEG> parses a give string into an { link arn } <END>
<BEG> parses a string contain either a resource <SEG> resource type and resource or resource type <SEG> resource and qualifier into an { link arnresource } <END>
<BEG> non-javadoc see com amazonaws auth awscredentials # getawsaccesskeyid <END>
<BEG> returns the region name that be use when calculate the signature <END>
<BEG> returns a singleton { link instanceprofilecredentialsprovider } that do not refresh credential asynchronously <END>
<BEG>  throw amazonclientexception if { link sdkglobalconfiguration # isec2metadatadisabled } be true <END>
<BEG> returns the number of day since epoch for the date use for generate signing key <END>
<BEG> returns the name of the condition key involve in this condition <END>
<BEG> returns the value specify for this access control policy condition <END>
<BEG> fluent version of { link condition # settype string } return this <END>
<BEG> constructs a new access policy condition that compare the amazon resource name arn of the source of an aws resource that be modify another aws resource with the specified pattern <END>
<BEG> constructs a new access control policy condition that test if the incoming request be send over a secure transport https <END>
<BEG> whether aws account ids should have hyphen remove in their name <END>
<BEG> configure whether hyphen should be strip from the aws principal ids that be read from the json-formatted policy document <END>
<BEG> fluent-style setter for { link # setstripawsprincipalidhyphensenabled boolean } that return this for chain <END>
<BEG> returns the provider for this principal <SEG> which indicate in what group of user this principal resides <END>
<BEG> returns the unique id for this principal <END>
<BEG> sets the id for this statement <END>
<BEG> sets the id for this statement and return the updated statement so multiple call can be chain together <END>
<BEG> sets the list of action to which this policy statement applies and return this updated statement object so that additional method call can be chain together <END>
<BEG> returns the resource associate with this policy statement <END>
<BEG> sets the resource associate with this policy statement and return this updated statement object so that additional method call can be chain together <END>
<BEG> returns the principal associate with this policy statement <SEG> indicate which aws account be affect by this policy statement <END>
<BEG> sets the principal associate with this policy statement <SEG> and return this updated statement object <END>
<BEG> return clock provide the current time in millisecond <END>
<BEG> retrieve a new builder that can be use to create and configure a { link processcredentialsprovider } <END>
<BEG> hook to allow subclass to determine which property be support and which be n't <END>
<BEG> scan through the give input <SEG> and perform the defined action <END>
<BEG> todo the order would make more sense a system property <SEG> environment variable <SEG> default profile name but we have to keep the current order for backwards compatiblity <END>
<BEG> returns a map of profile property include in this profile instance <END>
<BEG> return a { link basicprofile } if available <SEG> otherwise null <END>
<BEG> < p > an identifier for the assumed role session <END>
<BEG> < p > a unique identifier that be use by third party when assume role in their customer ' account <END>
<BEG> set the absolute path to the jwt file that contain a web identity token <END>
<BEG> similar to { link # setwebidentitytokenfilepath string } but return this for method chaining <END>
<BEG> < p > provides the credential that be use to assume the role <END>
<BEG> returns a string representation of this object ; useful for test and debug <END>
<BEG> returns the aws credential for the specify profile <END>
<BEG> reread data from disk <END>
<BEG> return the { link executorfactory } currently configure by the client <END>
<BEG> return an instance of awsasyncclientparams that have all params to be use in the async client constructor <END>
<BEG> param be the request content input stream param progresslistener optional progress listener return if the progress listener be non null return a new input stream decorate with progress reporting functionality <END>
<BEG> returns an input stream for response progress tracking purpose <END>
<BEG> the read method be call for the very first time <END>
<BEG> an end-of-file event be to be notify <END>
<BEG> defaults to behave the same a { link # oneof } <END>
<BEG> upon notification of the number of byte transfer since last notification <END>
<BEG> param byte can be negative if it be a reset event <END>
<BEG> returns the number of byte to be expect in the request <SEG> or -1 if the number be unknown e g <END>
<BEG> adds the number of byte to be expect in the request <END>
<BEG> returns the number of byte that have be transfer in the request <END>
<BEG> return the response to the request or null if the attempt fail <END>
<BEG> return the exception that be generate while process the request <SEG> or null if the attempt succeed <END>
<BEG> return a new builder for a handlerafterattemptcontext instance <END>
<BEG> for backward compatibility <SEG> construct a new request handler chain adapt to { link requesthandler2 } by analyze the specify classpath resource <END>
<BEG> param sslex sslexception thrown during connect return true be the ssl session cache should be clear <SEG> false otherwise <END>
<BEG> param value raw string represent value of enum return httpmethodname enum or null if value be not present <END>
<BEG>  returns true if the size of this map exceed the maximum <END>
<BEG> returns the maximum size of this map beyond which the eldest entry will get remove <END>
<BEG> return all the host-name-regex to region-name mapping <END>
<BEG> return the custom user agent template <SEG> if configure <END>
<BEG> allows the extend class to provide a custom retry policy <END>
<BEG> returns the value of the give key ; or null of no such entry exists <END>
<BEG> returns the current size of the cache <END>
<BEG> return true if the list be auto construct by java sdk <END>
<BEG> if { link # closedisabled } be false <SEG> close this input stream and release any system resource associate with the stream <END>
<BEG> closes the underlying stream file and release any system resource associate <END>
<BEG> marks the current position in this input stream <END>
<BEG> aborts with subclass specific abortion logic execute if need <END>
<BEG> can be use to provide abortion logic prior to throw the abortedexception <END>
<BEG> skips over and discard < code > n < code > byte of data from this input stream <SEG> while take the skipped byte into account for digest calculation <END>
<BEG> return the wrapped stream <END>
<BEG> closes the give closeable quietly <END>
<BEG> { link awsrequestmetrics } be set per request <END>
<BEG> registers { link threadlocal } object in use by the aws sdk so that their value can be remove via the { link # remove } method <END>
<BEG> returns an sdk logger that log use the currently configure default log factory <SEG> give the class <END>
<BEG> returns the current default log factory <END>
<BEG>  < p > this be when the request attempt be pass to the http client <END>
<BEG> sets the fqdn param fqdn the new fqdn value <END>
<BEG> return contains the aws_access_key value that be use to sign the http request <END>
<BEG> return contains the session token pass in the x-amz-security-token header <END>
<BEG> sets the value of x-amzn-requestid in response header param xamznrequestid the new value <END>
<BEG> return contains the full text for any attempt-level failure that be due to something other than an aws exception <END>
<BEG> return the elapsed time <SEG> in millisecond <SEG> between the construction of the http request and the point in time where the http response have be parse or the attempt have definitively fail <END>
<BEG> return the time interval in millisecond between when the request begin transmission to the service and when the response have be parse <SEG> exclude stream payload <END>
<BEG> return the total number of attempt that be make by the service client to fulfill this request before succeed or fail <END>
<BEG> return the elapsed time <SEG> in millisecond <SEG> between when the api call be begin and when a final response or error be manifest to the caller <END>
<BEG> return a boolean 0 1 value that be 0 unless the api call fail due to hit an api call time limit <END>
<BEG> sets the api call timeout param apicalltimeout the new apicalltimeout value <END>
<BEG> the last status code return by the service <END>
<BEG> return the operation name for the api call be make <END>
<BEG> return the service against which the call be be make <END>
<BEG> return the clientid configuration value a obtain from an application configuration provider chain <END>
<BEG> return contains the elapsed time <SEG> in millisecond <SEG> since january 1st <SEG> 1970 <SEG> for the time point at which the event occur <END>
<BEG> return the signing region use by the service client to perform the request 's attempt s <END>
<BEG> the host to send monitor event to <END>
<BEG> the port on the specify host to send monitor event to <END>
<BEG> returns the dns suffix of the partition <END>
<BEG> returns the default endpoint configuration of the partition <END>
<BEG> returns the set of region associate with the partition <END>
<BEG> return the list of all partition load from the partition metadata document <END>
<BEG> returns true if the service be explicitly enable for a region or a service be partition wide enable <END>
<BEG> returns true if the service be explicitly enable for http in this region or a service be partition wide enable <END>
<BEG> return file of ~ aws directory <END>
<BEG> return structuredjsongenerator use to produce the json document for a request <END>
<BEG> return implementation of { link protocolmarshaller } that can be use to call back out to marshall structured data i e <END>
<BEG> return mutable { link request } object that can be use to add header <SEG> query params <SEG> modify request uri <SEG> etc <END>
<BEG> if there be not an explicit payload member then we need to start the implicit json request object <END>
<BEG> param sendexplicitnullforpayload true if an explicit json null should be send a the body when the payload member be null <END>
<BEG> return marshallingtype for this member <END>
<BEG> return marshall location name <END>
<BEG> return where the data should be marshal to <END>
<BEG> return true if the member be explicitly bind to the payload <END>
<BEG> return true if the payload member be binary data i e <END>
<BEG> return optional supplier of default value if the value to marshall be null <END>
<BEG> return request uri for operation may contain placeholder for member bind to the uri <END>
<BEG> return display name for the service <END>
<BEG> return true if the operation have a member that 's explicitly mark a the payload <END>
<BEG> attempt to convert the provided hostname and service hint into a region name <SEG> return null if the conversion fails <END>
<BEG> attempt to convert the provided hostname and service hint into a region <SEG> return null if the conversion fails <END>
<BEG> returns the region with the give regionname and proper partition if find in region metadata <END>
<BEG> appends a user agent to the user_agent client marker <END>
<BEG> returns the mark-and-reset read limit ; default to { value # default_stream_buffer_size } <END>
<BEG> gets the boolean value to skip the appenduri call in { link apachehttprequestfactory # create request <SEG> httpclientsettings } method <END>
<BEG> copy the internal state of this < code > requestclientoptions < code > to the target < code > requestclientoptions < code > <END>
<BEG> returns the sdk default retry policy <END>
<BEG> returns the default retry policy for dynamodb client <END>
<BEG> returns the sdk default retry policy with the specify max retry count <END>
<BEG> returns a retry mode enum correspond to the give retrymode name <END>
<BEG> return true if all condition be true <SEG> false otherwise <END>
<BEG> param context context about the state of the last request and information about the number of request make <END>
<BEG> return the marshalled request <END>
<BEG> return the previous exception may be a client or a service exception <END>
<BEG> return number of retries attempt thus far <END>
<BEG> return the total number of request make thus far <END>
<BEG> sets the global time difference in second between the run jvm and aws <END>
<BEG> returns the servicename config for the specified service client <SEG> or null if no explicit config be find <END>
<BEG> constructs a new exception object of the type specify in this class 's constructor and set the specify error message <END>
<BEG> returns the value of the header with the specify name from the response <SEG> or null if not present <END>
<BEG> returns the element depth of the parser 's current position in the json document be parse <END>
<BEG> returns the text of the current token <SEG> or throw an exception if the current token do not contain text ex : ' { ' <SEG> ' } ' <SEG> etc <END>
<BEG> returns true if parsing of the json document be yet to start <END>
<BEG> tests the specified expression a json field name against the current position in the json document be parse <END>
<BEG> tests the specified expression a json field name against the current position in the json document be parse <SEG> and restrict the expression to match at the specified stack depth <END>
<BEG> returns any metadata collect through metadata expression while this context be read the json event from the json document <END>
<BEG> sets the name of the response header that be to be read next <END>
<BEG> returns true if the < code > jsonunmarshallercontext < code > be involve in parse response header <END>
<BEG> unmarshalls the response header or the json doc in the payload to the list <END>
<BEG> non-javadoc see java util map entry # getkey <END>
<BEG> non-javadoc see java util map entry # setvalue java lang object <END>
<BEG> tests the specified expression against the current position in the xml document be parse <END>
<BEG> tests the specified expression against the current position in the xml document be parse <SEG> and restrict the expression to match at the specified stack depth <END>
<BEG> returns true if this unmarshaller context be at the very beginning of a source document i e <END>
<BEG> registers an expression <SEG> which if match <SEG> will cause the data for the matching element to be store in the metadata map under the specify key <END>
<BEG> simple unmarshaller that iterate through the json event but always return null <END>
<BEG> simple stax unmarshaller that iterate through the xml event but always return null <END>
<BEG> fluent api of { link # incrementcounter string } <END>
<BEG> fluent api of { link # setcounter string <SEG> long } <END>
<BEG> end an event which be previously start <END>
<BEG> returns a base 16 encode string in upper case of the give byte <END>
<BEG> decodes the give base 16 encode string <SEG> skip carriage return <SEG> line feed and space a need <END>
<BEG> converts byte data to a hex-encoded string in low case <END>
<BEG> converts a hex-encoded data string to the original byte data <END>
<BEG> converts a base64-encoded string to the original byte data <END>
<BEG> wraps a bytebuffer in an inputstream <END>
<BEG> returns a copy of all the byte from the give < code > bytebuffer < code > <SEG> from the beginning to the buffer 's limit ; or null if the input be null <END>
<BEG> returns a copy of the byte from the give < code > bytebuffer < code > <SEG> range from the the buffer 's current position to the buffer 's limit ; or null if the input be null <END>
<BEG> attempts to acquire a give amount of capacity <END>
<BEG> releases a give amount of capacity back to the pool <SEG> make it available to consumer <END>
<BEG> returns the jar file from which the give class be load ; or null if no such jar file can be locate <END>
<BEG> returns a byte array represent the give string <SEG> truncate each character into a byte directly <END>
<BEG> sanity check the last decoded position be a possible value <END>
<BEG> returns a new list contain the second list append to the first list <END>
<BEG> joins a collection of string with the give separator into a single string <END>
<BEG> returns the number of byte read from this stream so far <END>
<BEG> resets the wrapped input stream and the crc32 computation <END>
<BEG> see java io inputstream # read <END>
<BEG> returns an immutablemapparameter instance contain a single entry <END>
<BEG> returns an immutablemapparameter instance contain two entry <END>
<BEG> return the { link javaversion } of this jvm <END>
<BEG> non-javadoc see java io filterinputstream # read <END>
<BEG> non-javadoc see java io filterinputstream # read byte [ ] <SEG> int <SEG> int <END>
<BEG> determine whether the current operation system seem to be windows <END>
<BEG> determines if a list of resource object be valid <SEG> contain either all notresource element or all resource element param resourcelist the list of resource object throw illegalargumentexception if the resource list be invalid <END>
<BEG> attempt to invoke the method this proxy target for on the give object with the give argument <END>
<BEG> initializes the method invoker by find and cache the target method from the target class that will be use for subsequent invoke operation <END>
<BEG> gets the initialization state of the invoker <END>
<BEG> encode a string for use in the path of a url ; use urlencoder encode <SEG> which encode a string for use in the query portion of a url <SEG> then apply some postfilters to fix thing up per the rfc <END>
<BEG> decode a string for use in the path of a url ; use urldecoder decode <SEG> which decode a string for use in the query portion of a url <END>
<BEG> returns true if the specify uri be use a non-standard port i e <END>
<BEG> creates an encoded query string from all the parameter in the specified request <END>
<BEG> append the give path to the give baseuri <END>
<BEG> returns true if the current operation should abort ; false otherwise <END>
<BEG> returns the original string specify when this input stream be construct <END>
<BEG> joins the string in part with joiner between each string param joiner the string to insert between the string in part param part the part to join <END>
<BEG> captures the current wall clock time since epoch in millisecond and the current time in nanosecond use for time measurement <END>
<BEG> captures the give start time in nanosecond <SEG> ignore the wall clock time <END>
<BEG> captures the give wall clock time and start time in nanosecond param starttimemillis start time since epoch in millisecond param starttimenano start time in nanosecond <END>
<BEG> returns an instance of { link timinginfo } that be not modifiable <SEG> give the start and end nano time <END>
<BEG> returns the duration in millisecond a double <SEG> preserve the decimal precision a necessary <SEG> for the give start and end time in nanosecond <END>
<BEG> always throw { link unsupportedoperationexception } <END>
<BEG> creates a new { link uri } from the give uri by replace the host value <END>
<BEG> asserts that the give object be non-null and return it <END>
<BEG> asserts that all of the object be null <END>
<BEG> asserts that the give number be positive non-negative and non-zero <END>
<BEG> return a { link threadlocal } copy of { link xmlinputfactory } <END>
<BEG> adds the specified value a text to the current position of the in progress xml document <END>
<BEG> adds the specified value a base64 encode text to the current position of the in progress xml document <END>
<BEG> returns true if the specified node be null or have no child <END>
<BEG> return list of acceptor define for each waiter <END>
<BEG> compares the exception throw against each exception acceptor and return the state of the acceptor it match on <END>
<BEG> defines a default way of delay the polling bound by the default delay associate with the corresponding waiter definition param pollingstrategycontext provides the poll context require to define custom delay throw interruptedexception <END>
<BEG> default way of check if polling should be retry or fast failed param pollingstrategycontext provides the poll context require to make the retry decision return false if the number of re <END>
<BEG> returns the retry condition include in this polling strategy <END>
<BEG> default method definition that match the exception with the expected state define by the acceptor <END>
<BEG> construct a new { link executorservice } to be use by a specific client waiter class <END>
<BEG> constructs a new waiterparameters with the give polling strategy param pollingstrategy custom polling strategy return waiterparameters object <END>
<BEG> return custom polling strategy <END>
<BEG> < p > the id of the transit gateway attachment <END>
<BEG> < p > the health status of the instance <END>
<BEG> < p > the id of the instance that the address be associate with if any <END>
<BEG> < p > the elastic ip address <END>
<BEG> < p > the id represent the allocation of the address for use with ec2-vpc <END>
<BEG> < p > the id represent the association of the address with an instance in a vpc <END>
<BEG> < p > the private ip address associate with the elastic ip address <END>
<BEG> < p > the name of the location from which the ip address be advertised <END>
<BEG> < p > the address range <SEG> in cidr notation <END>
<BEG> < p > specifies the instance type to be support by the dedicated hosts <END>
<BEG> < p > the type of principal <END>
<BEG> < p > the amazon resource name arn of the principal <END>
<BEG> < p > the id of the vpc in which the associate target network be locate <END>
<BEG> < p > [ ec2-vpc ] the id of the network interface <END>
<BEG> < p > the id of the subnet to associate with the client vpn endpoint <END>
<BEG> < p > the iam instance profile <END>
<BEG> < p > the id of the internet gateway or virtual private gateway <END>
<BEG> < p > the id of an ipv6 address pool from which to allocate the ipv6 cidr block <END>
<BEG> < p > an ipv6 cidr block from the ipv6 address pool <END>
<BEG> < p > the state of the target network association <END>
<BEG> < p > a message about the status of the target network association <SEG> if applicable <END>
<BEG> < p > the index of the device for the network interface attachment <END>
<BEG> < p > the device name for example <SEG> < code > dev sdh < code > or < code > xvdh < code > <END>
<BEG> < p > the id of the client vpn endpoint with which the authorization rule be associate <END>
<BEG> < p > a brief description of the authorization rule <END>
<BEG> < p > the id of the active directory group to which the authorization rule grant access <END>
<BEG> < p > indicates whether the authorization rule grant access to all client <END>
<BEG> < p > the ipv4 address range <SEG> in cidr notation <SEG> of the network to which the authorization rule applies <END>
<BEG> < p > not support <END>
<BEG> < p > the start of port range for the tcp and udp protocol <SEG> or an icmp type number <END>
<BEG> < p > [ ec2-classic <SEG> default vpc ] the name of the security group <END>
<BEG> < p > the state of the availability zone or local zone <END>
<BEG> < p > for availability zones <SEG> this parameter always have the value of < code > opt-in-not-required < code > <END>
<BEG> < p > the virtual device name < code > ephemeral < code > n <END>
<BEG> < p > parameters use to automatically set up ebs volume when the instance be launch <END>
<BEG> < p > the bucket in which to store the ami <END>
<BEG> < p > if the task fail <SEG> a description of the error <END>
<BEG> < p > the level of task completion <SEG> a a percent for example <SEG> 20 % <END>
<BEG> < p > the time of the most recent update for the task <END>
<BEG> < p > upon success <SEG> contain the id of the address pool <END>
<BEG> < p > the current state of the task be cancel <END>
<BEG> < p > the previous state of the spot fleet request <END>
<BEG> < p > indicates the tenancy of the capacity reservation <END>
<BEG> < p > indicates whether to use unused capacity reservations for fulfil on-demand capacity <END>
<BEG> < p > indicates whether classiclink dns support be enable for the vpc <END>
<BEG> < p > the size of the uploaded disk image <SEG> in gib <END>
<BEG> < p > the authentication type use <END>
<BEG> < p > information about the active directory <SEG> if applicable <END>
<BEG> < p > information about the active directory to be use <SEG> if applicable <END>
<BEG> < p > the current date and time <END>
<BEG> < p > the username of the client who establish the client connection <END>
<BEG> < p > the date and time the client connection be establish <END>
<BEG> < p > the number of byte send by the client <END>
<BEG> < p > the common name associate with the client <END>
<BEG> < p > the current state of the client connection <END>
<BEG> < p > indicates how the route be associate with the client vpn endpoint <END>
<BEG> < p > the aws account id of the instance owner <END>
<BEG> < p > indicates whether connection logging be enable <END>
<BEG> < p > the name of the cloudwatch logs log group <END>
<BEG> < p > specifies whether the destination snapshot of the copied image should be encrypt <END>
<BEG> < p > an identifier for the symmetric aws key management service aws kms customer master key cmk to use when create the encrypted volume <END>
<BEG> < p > the number of cpu core for the instance <END>
<BEG> < p > the number of thread per cpu core <END>
<BEG> < p > a name for the customer gateway device <END>
<BEG> < p > the launch template and override that be use for launch the instance <END>
<BEG> < p > indicates if the instance that could not be launch be a spot instance or on-demand instance <END>
<BEG> < p > the value be < code > windows < code > for windows instance <END>
<BEG> < p > the type of resource for which to create the flow log <END>
<BEG> < p > a unique name for the key pair <END>
<BEG> < p > the cidr range use for destination match <END>
<BEG> < p > indicates whether this be an egress rule rule be apply to traffic leave the subnet <END>
<BEG> < p > icmp protocol : the icmp or icmpv6 type and code <END>
<BEG> < p > indicates whether to allow or deny the traffic that match the rule <END>
<BEG> < p > the rule number for the entry for example <SEG> 100 <END>
<BEG> < p > the id of the active standard reserved instance <END>
<BEG> < p > the ipv6 cidr block use for the destination match <END>
<BEG> < p > [ ipv6 traffic only ] the id of an egress-only internet gateway <END>
<BEG> < p > [ ipv4 traffic only ] the id of a nat gateway <END>
<BEG> < p > the amazon s3 bucket in which to store the spot instance data feed <END>
<BEG> < p > a prefix for the data feed file name <END>
<BEG> < p > the id of the filter that this rule be associate with <END>
<BEG> < p > the type of traffic < code > ingres < code > | < code > egress < code > <END>
<BEG> < p > the protocol <SEG> for example udp <SEG> to assign to the traffic mirror rule <END>
<BEG> < p > enable or disable dns support <END>
<BEG> < p > the group to be add or remove <END>
<BEG> < p > the aws account id to be add or remove <END>
<BEG> < p > the size of the volume <SEG> in gibs <END>
<BEG> < p > the snapshot from which to create the volume <END>
<BEG> < p > the private dns name to assign to the vpc endpoint service <END>
<BEG> < p > a private autonomous system number asn for the amazon side of a bgp session <END>
<BEG> < p > the credit option for cpu usage of a t2 or t3 instance <END>
<BEG> < p > the version number of the launch template <END>
<BEG> < p > the id of the deleted traffic mirror rule <END>
<BEG> < p > the ip address assign to the transit gateway multicast group <END>
<BEG> < p > the time at which fast snapshot restores enter the < code > enable < code > state <END>
<BEG> < p > the type of resource : < code > bundle < code > | < code > conversion-task < code > | < code > customer-gateway < code > | < code > dhcp-options < code > | < code > elastic-ip-allocation < code > | < code > elastic-ip-association < code > | < code > export-task < code > | < code > flow-log < code > | < code > image < code > | < code > import-task < code > | < code > instance < code > | < code > internet-gateway < code > | < code > network-acl < code > | < code > network-acl-association < code > | < code > network-interface < code > | < code > network-interface-attachment < code > | < code > prefix-list < code > | < code > reservation < code > | < code > route-table < code > | < code > route-table-association < code > | < code > security-group < code > | < code > snapshot < code > | < code > subnet < code > | < code > subnet-cidr-block-association < code > | < code > volume < code > | < code > vpc < code > | < code > vpc-cidr-block-association < code > | < code > vpc-endpoint < code > | < code > vpc-peering-connection < code > | < code > vpn-connection < code > | < code > vpn-gateway < code > < p > param resource the type of resource : < code > bundle < code > | < code > conversion-task < code > | < code > customer-gateway < code > | < code > dhcp-options < code > | < code > elastic-ip-allocation < code > | < code > elastic-ip-association < code > | < code > export-task < code > | < code > flow-log < code > | < code > image < code > | < code > import-task < code > | < code > instance < code > | < code > internet-gateway < code > | < code > network-acl < code > | < code > network-acl-association < code > | < code > network-interface < code > | < code > network-interface-attachment < code > | < code > prefix-list < code > | < code > reservation < code > | < code > route-table < code > | < code > route-table-association < code > | < code > security-group < code > | < code > snapshot < code > | < code > subnet < code > | < code > subnet-cidr-block-association < code > | < code > volume < code > | < code > vpc < code > | < code > vpc-cidr-block-association < code > | < code > vpc-endpoint < code > | < code > vpc-peering-connection < code > | < code > vpn-connection < code > | < code > vpn-gateway < code > return returns a reference to this object so that method call can be chain together <END>
<BEG> < p > the reserved instance product platform description <END>
<BEG> < p > the date and time <SEG> up to the current date <SEG> from which to stop retrieve the price history data <SEG> in utc format for example <SEG> < i > yyyy < i > - < i > mm < i > - < i > dd < i > t < i > hh < i > : < i > mm < i > : < i > ss < i > z <END>
<BEG> < p > the checksum compute for the disk image <END>
<BEG> < p > the disk image format <END>
<BEG> < p > a presigned url for the import manifest store in amazon s3 <END>
<BEG> < p > the size of the disk in gb <END>
<BEG> < p > the number of disk with this configuration <END>
<BEG> < p > indicates whether the ebs volume be delete on instance termination <END>
<BEG> < p > indicates that the instance type be amazon ebs-optimized <END>
<BEG> < p > indicates whether amazon ebs encryption be support <END>
<BEG> < p > the time stamp when the attachment initiate <END>
<BEG> < p > the time the elastic graphics accelerator be associate with the instance <END>
<BEG> < p > the current state of the client certificate revocation list <END>
<BEG> < p > the disk image format for the exported image <END>
<BEG> < p > the prefix logical hierarchy in the bucket <END>
<BEG> < p > the container format use to combine disk image with metadata such a ovf <END>
<BEG> < p > the encryption key for your s3 bucket <END>
<BEG> < p > the configuration of spot instances in an ec2 fleet <END>
<BEG> < p > any parameter that you specify override the same parameter in the launch template <END>
<BEG> < p > the maximum price per unit hour that you be willing to pay for a spot instance <END>
<BEG> < p > the priority for the launch template override <END>
<BEG> < p > the location where the instance launch <SEG> if applicable <END>
<BEG> < p > describes the memory for the fpga accelerator for the instance type <END>
<BEG> < p > the size in mib for the memory available to the fpga accelerator <END>
<BEG> < p > the currency in which the < code > totalupfrontprice < code > and < code > totalhourlyprice < code > amount be specify <END>
<BEG> < p > if this parameter be set to < code > true < code > <SEG> your instance be enable for hibernation ; otherwise <SEG> it be not enable for hibernation <END>
<BEG> < p > information about the instance run on the dedicated host <END>
<BEG> < p > the number of core on the dedicated host <END>
<BEG> < p > the total number of vcpus on the dedicated host <END>
<BEG> < p > the instance family of the dedicated host reservation <END>
<BEG> < p > the payment option select for this reservation <END>
<BEG> < p > indicates whether long ids 17-character ids be enable for the resource <END>
<BEG> < p > the url to the amazon s3-based disk image be import <END>
<BEG> < p > the arn of a license configuration <END>
<BEG> < p > the id of the amazon machine image ami create by the import task <END>
<BEG> < p > the number of byte convert so far <END>
<BEG> < p > the status of the import of this particular disk image <END>
<BEG> < p > the md5 public key fingerprint a specify in section 4 of rfc 4716 <END>
<BEG> < p > the option for spot instances <END>
<BEG> < p > the state of token usage for your instance metadata request <END>
<BEG> < p > this parameter enable or disable the http metadata endpoint on your instance <END>
<BEG> < p > the association information for an elastic ipv4 associate with the network interface <END>
<BEG> < p > the id of the owner of the elastic ip address <END>
<BEG> < p > indicates whether this ipv4 address be the primary private ip address of the network interface <END>
<BEG> < p > excludes the root volume from be snapshotted <END>
<BEG> < p > the state of the instance a a 16-bit unsigned integer <END>
<BEG> < p > the time when a status check fail <END>
<BEG> < p > the late scheduled end time for the event <END>
<BEG> < p > the id of the aws account that be make use of the capacity reservation <END>
<BEG> < p > the number of instance the aws account currently have in the capacity reservation <END>
<BEG> < p > the resource that 's associate with the ipv6 cidr block <END>
<BEG> < p > information about the block device for an ebs volume <END>
<BEG> < p > the arn of the host resource group in which to launch the instance <END>
<BEG> < p > the required duration for the spot instances also know a spot block <SEG> in minute <END>
<BEG> < p > the behavior when a spot instance be interrupt <END>
<BEG> < p > indicates whether the resource should use long ids 17-character ids < p > return indicates whether the resource should use long ids 17-character ids <END>
<BEG> < p > indicates whether the resource should use long ids 17-character ids < p > param uselongids indicates whether the resource should use long ids 17-character ids return returns a reference to this object so that method call can be chain together <END>
<BEG> < p > the id of the event whose date and time you be modify <END>
<BEG> < p > the new date and time when the event will take place <END>
<BEG> < p > the destination port that be associate with the traffic mirror rule <END>
<BEG> < p > the port range to assign to the traffic mirror rule <END>
<BEG> < p > the target ebs volume type of the volume <END>
<BEG> < p > the status of the elastic ip address that 's be move to the ec2-vpc platform <SEG> or restore to the ec2-classic platform <END>
<BEG> < p > the id of the association between a network acl and a subnet <END>
<BEG> < p > the maximum number of network interface for the instance type <END>
<BEG> < p > the maximum number of ipv4 address per network interface <END>
<BEG> < p > indicates whether elastic network adapter ena be support <END>
<BEG> < p > the association information for an elastic ip address ipv4 associate with the network interface <END>
<BEG> < p > the order of the launch template override to use in fulfil on-demand capacity <END>
<BEG> < p > indicates that the fleet use a single instance type to launch all on-demand instances in the fleet <END>
<BEG> < p > indicates that the fleet launch all on-demand instances into a single availability zone <END>
<BEG> < p > the id of the vendor for the subsystem <END>
<BEG> < p > if true <SEG> the public dns hostnames of instance in the specified vpc resolve to private ip address when query from instance in the peer vpc <END>
<BEG> < p > if true <SEG> enable outbound communication from an ec2-classic instance that 's link to a local vpc use classiclink to instance in a peer vpc <END>
<BEG> < p > if true <SEG> enable outbound communication from instance in a local vpc to an ec2-classic instance that 's link to a peer vpc use classiclink <END>
<BEG> < p > the price per instance <END>
<BEG> < p > principalidformatarn description < p > return principalidformatarn description <END>
<BEG> < p > the value the service provider add to the private dns name domain record before verification <END>
<BEG> < p > the name of the record subdomain the service provider need to create <END>
<BEG> < p > the hourly price of the reservation per hour <END>
<BEG> < p > the region service endpoint <END>
<BEG> < p > the balance of the total value the sum of remainingupfrontvalue + hourlyprice number of hour remain <END>
<BEG> < p > the remain upfront cost of the reservation <END>
<BEG> < p > used for reserved instance marketplace offering <END>
<BEG> < p > the id of the convertible reserved instance that you be exchange <END>
<BEG> < p > whether the reserved instance be apply to instance in a region or instance in a specific availability zone <END>
<BEG> < p > the target reserved instances configuration supply a part of the modification request <END>
<BEG> < p > indicates whether this be the main route table <END>
<BEG> < p > an amazon s3 upload policy that give amazon ec2 permission to upload item into amazon s3 on your behalf <END>
<BEG> < p > the frequency < code > daily < code > <SEG> < code > weekly < code > <SEG> or < code > monthly < code > <END>
<BEG> < p > enable or disable monitoring for the instance <END>
<BEG> < p > the id of the vpc with the reference security group <END>
<BEG> < p > the id of the volume that be use to create the snapshot <END>
<BEG> < p > value from an amazon-maintained list < code > amazon < code > | < code > self < code > | < code > all < code > | < code > aws-marketplace < code > | < code > microsoft < code > of snapshot owner <END>
<BEG> < p > the size of the disk in the snapshot <SEG> in gib <END>
<BEG> < p > size of the volume from which this snapshot be create <END>
<BEG> < p > the fault code for the spot instance request <SEG> if any <END>
<BEG> < p > the number of spot pool across which to allocate your target spot capacity <END>
<BEG> < p > the number of unit to request <SEG> fill use < code > defaulttargetcapacitytype < code > <END>
<BEG> < p > the default < code > totaltargetcapacity < code > <SEG> which be either < code > spot < code > or < code > on-demand < code > <END>
<BEG> < p > the id of the convertible reserved instance offering <END>
<BEG> < p > the id of the route table for the transit gateway <END>
<BEG> < p > the subnet associate with the transit gateway multicast domain <END>
<BEG> < p > indicates that the resource be a transit gateway multicast group member <END>
<BEG> < p > the member type for example <SEG> < code > static < code > <END>
<BEG> < p > indicates whether attachment request be automatically accept <END>
<BEG> < p > indicates whether equal cost multipath protocol support be enable <END>
<BEG> < p > indicates whether multicast be enable on the transit gateway < p > param multicastsupport indicates whether multicast be enable on the transit gateway see multicastsupportvalue <END>
<BEG> < p > indicates whether multicast be enable on the transit gateway < p > return indicates whether multicast be enable on the transit gateway see multicastsupportvalue <END>
<BEG> < p > enable or disable automatic propagation of route to the default propagation route table <END>
<BEG> < p > the applicable error for the burstable performance instance whose credit option for cpu usage be not modify <END>
<BEG> < p > the name of the s3 bucket where the disk image be locate <END>
<BEG> < p > the status of a vpc peering connection <SEG> if applicable <END>
<BEG> < p > the internet-routable ip address of the virtual private gateway 's outside interface <END>
<BEG> < p > the amazon resource name arn of the vpn tunnel endpoint certificate <END>
<BEG> < p > the current modification state <END>
<BEG> < p > the modification progress <SEG> from 0 to 100 percent complete <END>
<BEG> < p > the id of the event associate with this operation <END>
<BEG> < p > the event type associate with this operation <END>
<BEG> < p > the maximum iops support by the attached instance <END>
<BEG> the caption property be a short textual description one- line string of the object <END>
<BEG> the description property provide a textual description of the object <END>
<BEG> the capacity of a virtual disk shall be specify by the { code capacity } attribute with an x : long integer value <END>
<BEG> ovf allow a disk image to be represent a a set of modified block in comparison to a parent image <END>
<BEG> the ovf : fileref attribute denote the virtual disk content by identify an exist file element in the references element <SEG> the file element be identify by match it { code id } attribute value with the { code fileref } attribute value <END>
<BEG> the format uri of a non-empty virtual disk shall be specify by the { code format } attribute <END>
<BEG> for non-empty disk <SEG> the actual used size of the disk may optionally be specify use the { code populatedsize } attribute <END>
<BEG> the optional string attribute { code ovf : capacityallocationunits } may be use to specify a particular unit of allocation <END>
<BEG> return ovf id see ostype # getcode <END>
<BEG> returns the severity level of the message generate by this module <END>
<BEG> returns name of file be audit <END>
<BEG> return the line number on the source file where the event occur <END>
<BEG> gets the column associate with the message <END>
<BEG> gets the audit event severity level <END>
<BEG> returns the filters of the filter set <END>
<BEG> get the line from text of the file <END>
<BEG> gets the topmost leftmost detailast for this fullident <END>
<BEG> gets the column number <END>
<BEG> gets the column char index <END>
<BEG> gets the token type <END>
<BEG> returns id of module <END>
<BEG> returns the message key to locate the translation <SEG> can also be use in ide plugins to map audit event message to corrective action <END>
<BEG> gets the name of the source for this localizedmessage <END>
<BEG> returns name of severity level <END>
<BEG> checks if this scope be a subscope of another scope <END>
<BEG> returns the number of counted event since audit start <END>
<BEG> adds an { link abstractimportrule } to the node <END>
<BEG> return true if the guard be to only be apply locally or false <END>
<BEG> return true if the name be to be interpret a a regular expression or false <END>
<BEG> returns the appropriate { link accessresult } base on whether there be a match and if the rule be to allow access <END>
<BEG> loads the import control file from a file <END>
<BEG> adds new child import control <END>
<BEG> checks whether we have more than one level <END>
<BEG> checks if give indentation be acceptable <END>
<BEG> returns true if indent less than minimal of acceptable indentation level <SEG> false otherwise <END>
<BEG> returns first indentation level <END>
<BEG> get the starting column for a give line number <END>
<BEG> get the starting column for the first line <END>
<BEG> get the line number of the last line <END>
<BEG> add a line to this set of line <END>
<BEG> indicates if this tag be incomplete have no close & gt ; <END>
<BEG> returns the source line number where this tag be find <END>
<BEG> returns the position with in the comment line where this tag be find <END>
<BEG> sets node 's text content <END>
<BEG> sets line number <END>
<BEG> sets array of child node <END>
<BEG> sets parent node <END>
<BEG> sets node 's index among parent 's child <END>
<BEG> gets the tag text <END>
<BEG> gets the tag type define by { link type type } <END>
<BEG> returns a javadoctag from the tag text <END>
<BEG> returns whether the provide name be for a valid tag <END>
<BEG> returns the next available htmltag <END>
<BEG> indicates if there be any more htmltag to retrieve <END>
<BEG> extract the block tag from a javadoc comment <END>
<BEG> checks that bytes be equal to the byte representation of this line separator <END>
<BEG> factory method which return an accessmodifier instance that correspond to the give access modifier name represent a a { link string } <END>
<BEG> adds a context entry <END>
<BEG> determines whether an integer match a csv integer value <END>
<BEG> notifies all listener that have register interest for 'editing stop ' event <END>
<BEG> returns selection start position <END>
<BEG> find start and end selection position from ast line and column <END>
<BEG> returns the list selection model <END>
<BEG> this be overridden to set { code updatinglistselectionmodel } and message super <END>
<BEG> workaround for basictableui anomaly <END>
<BEG> sets text area editor <END>
<BEG> sets line position map <END>
<BEG> sets the row height of the tree <SEG> and forward the row height to the table <END>
<BEG> subclassed to translate the graphic such that the last visible row will be draw at 0<SEG>0 <END>
<BEG> retrieves the hash of a specific file <END>
<BEG> gets the number of thread for the checker module <END>
<BEG> resolves the module name accord to the thread setting <END>
<BEG> gets the root element of the ast tree <END>
<BEG> node be on type member declaration <END>
<BEG> node be on constructor <END>
<BEG> checks that commentcontent start with ' ' javadoc comment identifier <END>
<BEG> checks block comment content start with ' ' javadoc comment identifier <END>
<BEG> returns the first child token that have a specify type <END>
<BEG> gets first child node of specified node <END>
<BEG> checks whether node contain any node of specified type among child on any deep level <END>
<BEG> gets next sibling of specified node <END>
<BEG> returns the name of a token for a give id <END>
<BEG> gets tag name from javadoctagsection <END>
<BEG> replace all control char with escaped symbol <END>
<BEG> checks javadoc comment it 's in right place <END>
<BEG> returns the scope specify by the modifier set <END>
<BEG> returns the scope of the surrounding block <END>
<BEG> returns whether a node be directly contain within a class block <END>
<BEG> returns whether the scope of a node be restrict to a code block <END>
<BEG> determines whether a node be a local variable definition <END>
<BEG> checks whether ast node be in a specific scope <END>
<BEG> add message to the dom4j tree <END>
<BEG> set the stack trace element <END>
<BEG> return original exception object <SEG> or null if no exception be throw <END>
<BEG> non-javadoc see java lang comparable # compareto t <END>
<BEG> return false if it have class retention or if the retention be unknown <END>
<BEG> look for a binding for give variable <END>
<BEG> return whether or not this be a static field <END>
<BEG> look up a variable definition in give bindingset <END>
<BEG> return whether or not this value be valid <SEG> mean it contain a valid representation of the nesting of catch and finally block <END>
<BEG> return whether or not this value represent normal control-flow <END>
<BEG> make this value represent normal control flow <END>
<BEG> return whether or not this be the special top dataflow value <END>
<BEG> make this object an exact duplicate of give object <END>
<BEG> return whether or not this object be identical to the one give <END>
<BEG> merge other dataflow value into this value <END>
<BEG> non-javadoc see edu umd c findbugs graph abstractgraph # allocateedge edu umd c findbugs graph abstractvertex <SEG> edu umd c findbugs graph abstractvertex <END>
<BEG> return whether or not this value be a constant string <END>
<BEG> get the constant string value of this value <END>
<BEG> return whether or not this value be a constant int integer <END>
<BEG> merge two constants <END>
<BEG> get the non-null param bitset <END>
<BEG> set the non-null param set from give bitset <END>
<BEG> set whether or not a parameter might be non-null <END>
<BEG> given a bitset of null argument pass to the method represent by this property <SEG> return a bitset indicating which null argument correspond to an non-null param <END>
<BEG> return whether or not the set of non-null parameter be empty <END>
<BEG> make this object the same a the give one <END>
<BEG> return whether or not give fact be the special top value <END>
<BEG> return whether or not this lockset be the same a the one give <END>
<BEG> param isnullvalue param unconditionaldereflocationset <END>
<BEG> make this path identical to the give one <END>
<BEG> get an inputstream on data <END>
<BEG> get the byte offset in the data for a source line <END>
<BEG> get the valuenumber of the object reference <END>
<BEG> get the field for which a load be available <END>
<BEG> map an input valuenumber to an output valuenumber <END>
<BEG> get the set of input valuenumbers which directly contribute to the give output valuenumber <END>
<BEG> get the transitive set of input valuenumbers which contribute directly or indirectly to the give output valuenumber <END>
<BEG> get the abbreviation usually a single capital letter <END>
<BEG> get the detail text describe the category <END>
<BEG> suitable for debug <END>
<BEG> get value of property a boolean <END>
<BEG> get value of property a an integer <END>
<BEG> set next property in list <END>
<BEG> non-javadoc see edu umd c findbugs ba bytecodescanner callback # handleinstruction int <SEG> int <END>
<BEG> non-javadoc see edu umd c findbugs classfile icodebaseentry # overrideresourcename java lang string <END>
<BEG> non-javadoc see edu umd c findbugs classfile iclasspath # mapresourcenametocodebaseentry java lang string <SEG> edu umd c findbugs classfile icodebaseentry <END>
<BEG> get the full path of give resource <END>
<BEG> get the resource name of the single file <END>
<BEG> add the name of a class to be match by the screener <END>
<BEG> to be compatible with version control system <SEG> we need to sort property before store them to disk <END>
<BEG> set visibility of the factory to gui dialog to configure detector <END>
<BEG> returns true if the give string be contain in the value set <END>
<BEG> show the overall findbugs command synopsis <END>
<BEG> format the message use the give array of bugannotations a argument to bind to the placeholder in the pattern string <END>
<BEG> choose the next search tree root <END>
<BEG> specify a vertexchooser object to be use to select which vertex be visit by the search <END>
<BEG> get the type of edge in the depth first search <END>
<BEG> return the timestamp indicate when the give vertex be discover <END>
<BEG> return the timestamp indicate when the give vertex be finish meaning that all of it descendent be visit recursively <END>
<BEG> get array of finish time <SEG> index by vertex label <END>
<BEG> get the vertex contain in this node <END>
<BEG> add a child search tree <END>
<BEG> return collection of child of this search tree <END>
<BEG> add all vertex contain in this search tree to the give set <END>
<BEG> returns an iterator over the search tree contain the vertex of each strongly connect component <END>
<BEG> returns an iterator over the set of vertex of each strongly connect component <END>
<BEG> get the vertex in the transposed graph which correspond to the give vertex in the original graph <END>
<BEG> return the string minus any annotation <END>
<BEG> return the appropriate mnemonic character for this string <END>
<BEG> return the index in the plain string at which the mnemonic should be display <SEG> or -1 if no mnemonic should be set <END>
<BEG> this be how the number after the branch contain the number of bug in them <SEG> even if they be n't the final branch param count <END>
<BEG> sets size of font param size <END>
<BEG> this should be the method use to add a file for the recent menu <END>
<BEG> return returns the maximum number of previous comment store <END>
<BEG> sets the maximum number of previous comment store <END>
<BEG> adds a file to the list of recent file use <END>
<BEG> param args the command line argument <END>
<BEG> a debug utility that print to stdout the component 's minimum <SEG> prefer <SEG> and maximum size <END>
<BEG> close give inputstream <SEG> ignore any resulting exception <END>
<BEG> provide a skip fully method <END>
<BEG> get the major version number <END>
<BEG> return whether the java version represent by this object be at least as recent a the one give <END>
<BEG> get the single instance <END>
<BEG> make give detectorfactory a member of this pas <END>
<BEG> get set of pas member which have n't be assign a position in the pas <END>
<BEG> set whether or not this order constraint result from an order constraint have a single detector a it source ealier detector <END>
<BEG> non-javadoc see edu umd c findbugs plan detectorfactoryselector # selectfactory edu umd c findbugs detectorfactory <END>
<BEG> convert to a string in a nice displayable format <END>
<BEG> make the give list of pathnames absolute relative to the absolute path of the project file <END>
<BEG> set the timestamp for this analysis run <END>
<BEG> perform the search <END>
<BEG> get an iterator over the file find by the search <END>
<BEG> get list of all directory scan <END>
<BEG> write this bugcollection to a file a xml <END>
<BEG> write the bugcollection to give output stream a xml <END>
<BEG> write the bugcollection to an xmloutput object <END>
<BEG> increments the iterator 's index by one and return the character at the new index <END>
<BEG> scroll the specified line into view <SEG> with a margin of 'margin ' pixel above and below <END>
<BEG> scroll the specified line into the middle third of the view <END>
<BEG> get the next token in the stream <END>
<BEG> param args throw ioexception <END>
<BEG> extra stuff that can be print in the & lt ; head & gt ; element <END>
<BEG> extra stuff print at the beginning of the & lt ; body & gt ; element <END>
<BEG> determine whether or not the give filename appear to identify a zip jar archive <END>
<BEG> attempt to show the give url <END>
<BEG> split the identifier into word <END>
<BEG> list the analysis error in a bug collection author bill pugh <END>
<BEG> print the appversion information from a bugcollection <END>
<BEG> add a list of strings to document a element with give tag name to the tree <END>
<BEG> add a metacharacter and it replacement <END>
<BEG> return whether or not give character be a metacharacter <END>
<BEG> quote metacharacters in the text <END>
<BEG> add a single attribute name and value <END>
<BEG> return the attribute list a a string which can be directly output a part of an xml tag <END>
<BEG> write a list of strings to document a element with give tag name <END>
<BEG> write a collection of xmlwriteable object <END>
<BEG> get a message string <END>
<BEG> close give autocloseable instance <SEG> ignore any resulting exception <END>
<BEG> optimize a collection of test class <END>
<BEG> < p > optimizes a collection of unknown object <END>
<BEG> this be require because we implement comparable <END>
<BEG> param linenumber the source code line number <END>
<BEG> return the line coverage rate for particular method <END>
<BEG> return the method name and descriptor of each method find in the class represent by this instrumentation <END>
<BEG> see net sourceforge cobertura coveragedata coveragedata # getnumberofcoveredbranches <END>
<BEG> return true if the line contain at least one condition jump branch <END>
<BEG> determine if a give line number be a valid line of code <END>
<BEG> merge some exist instrumentation with this instrumentation <END>
<BEG> increment the number of hit for a particular line of code <END>
<BEG> determine if this coveragedatacontainer be equal to another one <END>
<BEG> return the average branch coverage rate for all child in this container <END>
<BEG> get a child from this container with the specify key <END>
<BEG> merge two < code > coveragedatacontainer < code > s <END>
<BEG> to prevent deadlock <SEG> we need to get both lock or none at all <END>
<BEG> return the name of this source file without the file extension in the format net sourceforge cobertura coveragedata sourcefiledata <END>
<BEG> return an input stream for the content of this archive the child <END>
<BEG> set this archive 's byte after they have be modify via instrumentation <END>
<BEG> return true if this archive have be modify instrumented <END>
<BEG> returns the parent archive that contain this archive <END>
<BEG> return true if file have an extension that match one of the standard java archive <SEG> false otherwise <END>
<BEG> return true if file have class a it extension <SEG> false otherwise <END>
<BEG> reads a file and return the content in a string <END>
<BEG> return info about package statement <END>
<BEG> the same a getfunctionmetrics ? ! <END>
<BEG> jdcl stand for javadoc comment line while jvdc stand for number of javadoc comment <END>
<BEG> returns list of package in the form packagemetric object <END>
<BEG> create a new instance of { link javancss } <END>
<BEG> an optional attribute value of the token <END>
<BEG> add html colorization to a block of java code <END>
<BEG> reset the state of this java parser <END>
<BEG> return true if the give name end with jar <SEG> zip <SEG> war <SEG> ear <SEG> or sar case insensitive <END>
<BEG> check to see if the give file name be a signature file meta-inf rsa or meta-inf sf <END>
<BEG> obtains a lock on the file <END>
<BEG> returns an array that contain value read from the give input stream <END>
<BEG> moves a file from one location to other <END>
<BEG> < p > replaces all instance of replace with with from the original string <END>
<BEG> this synchronized getter be use by the run processor to get a handle to the same application property a be use by the runtime <END>
<BEG> extract the jacoco agent jar and put it into a temporary location <END>
<BEG> creates a new comparator for { link icoveragenode } counter of the give entity base on this counter sort criterion <END>
<BEG> returns all class node currently contain in this builder <END>
<BEG> creates a bundle from all node currently contain in this bundle <END>
<BEG> returns all class for which execution data do not match <END>
<BEG> creates a new composite comparator with a second search criterion <END>
<BEG> return the unique identifier for this class <END>
<BEG> returns the execution data probe <END>
<BEG> sets all probe to < code > false < code > <END>
<BEG> adds the give { link executiondata } object into the store <END>
<BEG> resets all execution data probe <SEG> i e <END>
<BEG> returns a collection that represent current content of the store <END>
<BEG> writes the content of the store to the give visitor interface <END>
<BEG> returns the first byte of a file that represent a valid execution data file <END>
<BEG> return the epoc base time stamp when execution data recording have be start <END>
<BEG> return the epoc base time stamp when execution data be collect <END>
<BEG> returns all { link sessioninfo } object currently contain in the store <END>
<BEG> writes all contain { link sessioninfo } object into the give visitor <END>
<BEG> sets the vm name of the superclass <END>
<BEG> sets the vm name of implement extended interface <END>
<BEG> adds a branch to this instruction which execution status be indirectly derive from the execution status of the target instruction <END>
<BEG> adds a branch to this instruction which execution status be directly derive from a probe <END>
<BEG> merges information about covered branch of this instruction with another instruction <END>
<BEG> returns the instruction coverage counter of this instruction <END>
<BEG> this method must be call exactly once after all instruction and branch have be incremented for this method coverage node <END>
<BEG> make sure that the internal buffer can keep line from first to last <END>
<BEG> returns a normalized instance that be equal to the give { link string } <END>
<BEG> returns a modified version of the array with all string slot normalize <END>
<BEG> returns an input stream instance to read the complete content include the header of the underlying stream <END>
<BEG> reads a variable length representation of an integer value <END>
<BEG> reads a boolean array <END>
<BEG> writes a variable length representation of an integer value that reduce the number of write byte for small positive value <END>
<BEG> calculates class identifier for the give class byte <END>
<BEG> defines whether this remover should be active <END>
<BEG> checks whether a entry with the provide name should be ignore at all <END>
<BEG> unpack a stream in pack200 format into a stream in jar zip format <END>
<BEG> sets the output file location <END>
<BEG> sets the wildcard expression for excluded class loader <END>
<BEG> returns whether class from the bootstrap classloader should be instrument <END>
<BEG> returns whether class without source location should be instrument <END>
<BEG> returns the session identifier <END>
<BEG> returns whether coverage data should be dump on exit <END>
<BEG> returns the port on which to listen to when the output be < code > tcpserver < code > or the port to connect to when output be < code > tcpclient < code > <END>
<BEG> sets the port on which to listen to when output be < code > tcpserver < code > or the port to connect to when output be < code > tcpclient < code > param port port to listen on or connect to <END>
<BEG> sets the hostname or ip address to listen to when output be < code > tcpserver < code > or connect to when output be < code > tcpclient < code > param address hostname or ip address <END>
<BEG> returns the output mode return current output mode <END>
<BEG> returns the location of the directory where class file should be dump to <END>
<BEG> sets the directory where class file should be dump to <END>
<BEG> sets whether the agent should expose functionality via jmx <END>
<BEG> generate require quote jvm argument base on current configuration and supply agent jar location <END>
<BEG> creates a string representation that can be pass to the agent via the command line <END>
<BEG> sends a confirmation that a command have be successfully execute and the response be complete <END>
<BEG> sets a session identifier for this runtime <END>
<BEG> get the current a session identifier for this runtime <END>
<BEG> specifies whether a dump should be request param dump < code > true < code > if a dump should be request <END>
<BEG> specifies whether execution data should be reset <END>
<BEG> sets the delay time before between connection attempt <END>
<BEG> requests a dump from the give end-point <END>
<BEG> reads all data from give input stream <END>
<BEG> saves the current content into the give output stream <END>
<BEG> saves the current content into the give file <END>
<BEG> returns the session info store with all loaded session <END>
<BEG> returns the execution data store with data for all loaded class <END>
<BEG> < p > if true <SEG> { code -h -- help } be available <END>
<BEG> < p > the set of character that prefix name argument <END>
<BEG> < p > the set of character that prefix file path from which additional argument should be read <END>
<BEG> < p > the locale to use for message <END>
<BEG> < p > set { code true } to enable cjk width hack <END>
<BEG> < p > set the default format width <END>
<BEG> < p > if singlemetavar be { code true } <SEG> a metavar string in help message be only show after the last flag instead of each flag <END>
<BEG> < p > creates { link argumentparserbuilder } with give program name <END>
<BEG> returns true iff cjk width hack be enable <END>
<BEG> returns the width of formatted text <END>
<BEG> returns true iff a metavar be show only after the last flag <END>
<BEG> returns { code true } if flag string { code str } match prefixchars <END>
<BEG> returns { code true } if flag string { code str } match prefixchars and it be long flag <END>
<BEG> < p > convert { code src } to object of type { code targettype } recursively < p > < p > convert { code src } to object of type { code targettype } recursively <SEG> but it only convert { link list } to array <END>
<BEG> returns store action <END>
<BEG> < p > returns storetrue action <END>
<BEG> < p > returns { link enumargumenttype } with give enum { code type } <END>
<BEG> < p > returns new { link fileargumenttype } object <END>
<BEG> < p > returns { link booleanargumenttype } with true a true value <SEG> and false a false value <END>
<BEG> < p > infers metavar base on give string <END>
<BEG> < p > convert the give enum value to it string representation <END>
<BEG> < p > get the object to be use to generate the string representation of all enum constant <END>
<BEG> < p > creates a { code caseinsensitiveenumnameargumenttype } for the give enum type <END>
<BEG> verifies that the specified path exists <END>
<BEG> verifies that the specified path be a regular file <END>
<BEG> verifies that the specified path be a directory <END>
<BEG> verifies that the specified path be readable <END>
<BEG> verifies that the parent directory of the specified path be writable <END>
<BEG> returns attribute a { link string } with give attribute name { code dest } <END>
<BEG> < p > returns { link map } object hold attribute value <END>
<BEG> returns true if the help message for this group should be in separate group <END>
<BEG> short syntax be use in usage message <SEG> e g <END>
<BEG> set text to display before the argument help <END>
<BEG> returns default value set by { link argumentimpl # setdefault object } or { link argumentparserimpl # setdefault string <SEG> object } <END>
<BEG> returns main parent parser <END>
<BEG> return true if subparserimpl have at least one sub-command whose help output be not suppress <END>
<BEG> adds subparser alias name for give subparser <END>
<BEG> obtains the { link cmdlineparser } that trigger an exception <END>
<BEG> programmatically define an argument instead of read it from annotation a normal <END>
<BEG> lists up all the define option <END>
<BEG> creates an { link optionhandler } that handle the give { link option } annotation and the { link setter } instance <END>
<BEG> formats a command line example into a string <END>
<BEG> prints the list of all the non-hidden option and their usage to the screen <END>
<BEG> parses the command line argument and set them to the option bean give in the constructor <END>
<BEG> returns { code true } if the give token be an option a oppose to an argument <END>
<BEG> signals the parser that parse the option have finish <END>
<BEG> parses a xml file and return a config object hold the information <END>
<BEG> gets the option handler registry singleton instance <END>
<BEG> returns an instance of the default parser property <END>
<BEG> toggles the parsing of -prefixes in value <END>
<BEG> toggles the showing of default value in the command line help <END>
<BEG> gets whether show default be enable <END>
<BEG> controls how option be sort in the usage screen <END>
<BEG> return { code null } if option be leave unsorted and should be list by their discovery order <END>
<BEG> sets the string use to separate option name and it value such a -- foo=bar v -- foo bar default to whitespace <END>
<BEG> ensures that only a field xor a method be set <END>
<BEG> returns all value of an enum type split by pipe <END>
<BEG> encapsulates how a single string argument get convert into key and value <END>
<BEG> this be the opportunity to convert value to some typed object <END>
<BEG> returns { code string [ ] } <END>
<BEG> tries to parse { code string [ ] } argument from { link parameters } <END>
<BEG> returns the option group where another option have be select <END>
<BEG> returns the option that be add to the group and trigger the exception <END>
<BEG> query to see if an option have be set <END>
<BEG> return a version of this < code > option < code > convert to a particular type <END>
<BEG> retrieve the first argument <SEG> if any <SEG> of this option <END>
<BEG> retrieves the array of value <SEG> if any <SEG> of an option <END>
<BEG> retrieve the map of value associate to the option <END>
<BEG> retrieve any left-over non-recognized option and argument return remain item pass in but not parse a an array <END>
<BEG> retrieve any left-over non-recognized option and argument return remain item pass in but not parse a a < code > list < code > <END>
<BEG> add left-over unrecognized option argument <END>
<BEG> add an option to the command line <END>
<BEG> returns an array of the process { link option } s return an array of the process { link option } s <END>
<BEG> breaks < code > token < code > into it constituent part use the following algorithm <END>
<BEG> returns the 'leftpadding ' <END>
<BEG> set the separator display between a long option and it value <END>
<BEG> comparator use to sort the option when they output in help text <END>
<BEG> print the cmdlinesyntax to the specify writer <SEG> use the specify width <END>
<BEG> print the specified text to the specify printwriter <END>
<BEG> render the specify options and return the rendered options in a stringbuffer <END>
<BEG> return a string of padding of length < code > len < code > <END>
<BEG> remove the trail whitespace from the specify string <END>
<BEG> returns the list of option or option group miss in the command line parse <END>
<BEG> retrieve the type of this option <END>
<BEG> retrieve the long name of this option <END>
<BEG> sets whether this option can have an optional argument <END>
<BEG> query to see if this option have a long name return boolean flag indicate existence of a long name <END>
<BEG> query to see if this option require an argument return boolean flag indicate if an argument be require <END>
<BEG> query to see if this option be mandatory return boolean flag indicate whether this option be mandatory <END>
<BEG> sets the display name for the argument value <END>
<BEG> returns whether the display name for the argument value have be set <END>
<BEG> query to see if this option can take many value <END>
<BEG> sets the number of argument value this option can take <END>
<BEG> return whether this option have specify a value separator <END>
<BEG> adds the specified value to this option <END>
<BEG> returns the specified value of this option or < code > null < code > if there be no value <END>
<BEG> return the value of this option a a string array or null if there be no value return the value of this option a a string array or null if there be no value <END>
<BEG> return the value of this option a a list or null if there be no value <END>
<BEG> clear the option value <END>
<BEG> tells if the option can accept more argument <END>
<BEG> returns a { link builder } to create an { link option } use descriptive method <END>
<BEG> the next option create will have the following long option value <END>
<BEG> the next option create will require an argument value <END>
<BEG> the next option create will require an argument value if < code > hasarg < code > be true <END>
<BEG> the next option create will have the specify argument value name <END>
<BEG> the next option create will be require <END>
<BEG> the next option create us < code > sep < code > a a mean to separate argument value <END>
<BEG> the next option create us ' < code > = < code > ' a a mean to separate argument value <END>
<BEG> the next option can have an optional argument <END>
<BEG> the next option can have an unlimited number of optional argument <END>
<BEG> the next option create will have the specify description param newdescription a description of the option 's purpose return the optionbuilder instance <END>
<BEG> create an option use the current setting and with the specify option < code > char < code > <END>
<BEG> set the selected option of this group to < code > name < code > <END>
<BEG> param require specifies if this group be require <END>
<BEG> add the specified option group <END>
<BEG> lists the optiongroups that be member of this options instance <END>
<BEG> add an option that contain a short-name and a long-name <END>
<BEG> adds an option instance param opt the option that be to be add return the result options instance <END>
<BEG> returns the options for use by the helpformatter <END>
<BEG> returns the required option <END>
<BEG> retrieve the { link option } match the long or short name specify <END>
<BEG> returns the option with a long name start with the name specify <END>
<BEG> returns whether the name { link option } be a member of this { link options } <END>
<BEG> returns the optiongroup the < code > opt < code > belongs to <END>
<BEG> remove the lead and trail quote from < code > str < code > <END>
<BEG> prints the usage to { link jcommander # getconsole } on the underlying commander instance <END>
<BEG> store the usage for the command in the argument string builder <SEG> indent every line with the value of indent <END>
<BEG> stores the usage in the argument string builder <SEG> with the argument indentation <END>
<BEG> appends the detail of all command to the argument string builder <SEG> indent every line with indentcount-many indent <END>
<BEG> wrap a potentially long line to the value obtain by call { link jcommander # getcolumnsize } on the underlying commander instance <END>
<BEG> returns the internationalized version of the string if available <SEG> otherwise it return def <END>
<BEG> returns count-many space <END>
<BEG> disables expand { code file } <END>
<BEG> return a wrapper for a { link java io printstream } <SEG> typically { link system # out } <END>
<BEG> adds the provided arg object to the set of object that this commander will parse argument into <END>
<BEG> sets the { link resourcebundle } to use for look up description <END>
<BEG> parse the command line parameter without validate them <END>
<BEG> create the parameterdescriptions for all the \ parameter find <END>
<BEG> get the program name use only in the usage <END>
<BEG> get the program display name use only in the usage <END>
<BEG> set the program name param name program name param aliases aliases to the program name <END>
<BEG> prints the usage on { link # getconsole } use the underlie { link # usageformatter } <END>
<BEG> sets the usage formatter <END>
<BEG> return a collection of all the \ parameter annotation find on the target class <END>
<BEG> return the main parameter description or null if none be define <END>
<BEG> define the default provider for this instance <END>
<BEG> adds a factory to lookup string converter <END>
<BEG> param type the type of the actual parameter param optionname param value the value to convert <END>
<BEG> return the object that jcommander will fill with the result of parse the command line <END>
<BEG> reverse lookup jcommand object by command 's name or it alias <END>
<BEG> sets the charset use to expand { code file } <END>
<BEG> return the generic type of the collection for this field <SEG> or null if not applicable <END>
<BEG> construct a cli from an annotated interface definition param < o > the type of the interface that will be use to present the argument param klass the annotated interface definition return a cli configure to create instance of klass throw argumentvalidationexception the argument do not meet the cli specification throw invalidoptionspecificationexception the cli specification be not valid <END>
<BEG> construct a cli from an annotated class param < o > the type of the class use to present the argument param option the annotated class return a cli configure to configure the option throw argumentvalidationexception the argument do not meet the cli specification throw invalidoptionspecificationexception the cli specification be not valid <END>
<BEG> < p > specifies a type to which argument of this spec 's option be to be convert < p > < p > jopt simple accept type that have either : < p > < ol > < li > a public static method call { code valueof } which accept a single argument of type { link string } and whose return type be the same a the class on which the method be declare <END>
<BEG> < p > specifies a description for the argument of the option that this spec represent <END>
<BEG> < p > specifies a value separator for the argument of the option that this spec represent <END>
<BEG> specifies a set of default value for the argument of the option that this spec represent <END>
<BEG> marks this option a require <END>
<BEG>  < p > this implementation : < p > < ul > < li > sorts the give descriptor by their first element of { link optiondescriptor # option } < li > < li > passes the result sorted set to { link # addrows java util collection } < li > < li > returns the result of { link # formattedhelpoutput } < li > < ul > <END>
<BEG> adds a row of option help output in the left and right column <END>
<BEG> adds a single row of non-option argument help <END>
<BEG> resizes the column of all the row to be no wide than the wide element in that column <END>
<BEG> produces non-option argument help <END>
<BEG> < p > produces help output for an entire set of option and non-option argument < p > < p > this implementation concatenate : < p > < ul > < li > the result of { link # nonoptionoutput } < li > < li > if there be non-option output <SEG> a line separator < li > < li > the result of { link # optionoutput } < li > < ul > return help output for entire set of option and non-option argument <END>
<BEG> < p > adds row of help output for the give option < p > < p > this implementation : < p > < ul > < li > calls { link # addnonoptionsdescription java util collection } with the option a the argument < li > < li > if there be no option <SEG> call { link # addoptionrow string } with an argument that indicate that no option be specify < li > < li > otherwise <SEG> call { link # addheaders java util collection } with the option a the argument <SEG> follow by { link # addoptions java util collection } with the option a the argument < li > < li > calls { link # fitrowstowidth } < li > < ul > param option descriptor for the configured option of a parser <END>
<BEG> < p > adds non-option argument description to the help output < p > < p > this implementation : < p > < ul > < li > { linkplain # findandremovenonoptionsspec java util collection finds and remove the non-option argument descriptor } < li > < li > { linkplain # shouldshownonoptionargumentdisplay optiondescriptor decides whether there be anything to show for non-option argument } < li > < li > if there be <SEG> { linkplain # addnonoptionrow string add a header row } and { linkplain # addnonoptionrow string add a } { linkplain # createnonoptionargumentsdisplay optiondescriptor non-option argument description } < li > < ul > param option descriptor for the configured option of a parser <END>
<BEG> < p > creates a non-options argument help string < p > < p > this implementation create an empty string buffer and call { link # maybeappendoptioninfo stringbuilder <SEG> optiondescriptor } and { link # maybeappendnonoptionsdescription stringbuilder <SEG> optiondescriptor } <SEG> pass them the buffer and the non-option argument descriptor < p > param nonoptiondescriptor non-option argument descriptor return help string for non-options <END>
<BEG> < p > appends help for the give non-option argument descriptor to the give buffer < p > < p > this implementation append { code -- } if the buffer have text in it and the non-option argument descriptor have a { link optiondescriptor # description } ; follow by the { link optiondescriptor # description } < p > param buffer string buffer param nonoptions non-option argument descriptor <END>
<BEG> finds the non-option argument descriptor in the give collection <SEG> remove it <SEG> and return it <END>
<BEG> < p > adds help row header for option help columns < p > < p > this implementation use the header { code option } and { code description } <END>
<BEG> tells whether the give option descriptor contain a required option <END>
<BEG> < p > adds help row for the give option < p > < p > this implementation loop over the give option <SEG> and for each <SEG> call { link # addoptionrow string <SEG> string } use the result of { link # createoptiondisplay optiondescriptor } and { link # createdescriptiondisplay optiondescriptor } <SEG> respectively <SEG> a argument < p > param option descriptor for the configured option of a parser <END>
<BEG> < p > creates a string for how the give option descriptor be to be represent in help < p > < p > this implementation give a string consisting of the concatenation of : < p > < ul > < li > { code } for required option <SEG> otherwise { code } < li > < li > for each of the { link optiondescriptor # option } of the descriptor <SEG> separate by { code <SEG> } : < ul > < li > { link # optionleader string } of the option < li > < li > the option < li > < ul > < li > < li > the result of { link # maybeappendoptioninfo stringbuilder <SEG> optiondescriptor } < li > < ul > param descriptor a descriptor for a configured option of a parser return help string <END>
<BEG> < p > gives a string that represent the give option 's option leader in help < p > < p > this implementation answer with { code -- } for option of length great than one ; otherwise answer with { code - } < p > param option a string option return an option leader string <END>
<BEG> < p > appends additional info about the give option to the give buffer < p > < p > this implementation : < p > < ul > < li > call { link # extracttypeindicator optiondescriptor } for the descriptor < li > < li > call { link joptsimple optiondescriptor # argumentdescription } for the descriptor < li > < li > if either of the above be present <SEG> call { link # appendoptionhelp stringbuilder <SEG> string <SEG> string <SEG> boolean } < li > < ul > param buffer string buffer param descriptor a descriptor for a configured option of a parser <END>
<BEG> < p > gives an indicator of the type of argument of the option describe by the give descriptor <SEG> for use in help < p > < p > this implementation ask for the { link optiondescriptor # argumenttypeindicator } of the give descriptor <SEG> and if it be present and not { code java lang string } <SEG> parse it a a fully qualified class name and return the base name of that class ; otherwise return { code string } < p > param descriptor a descriptor for a configured option of a parser return type indicator text <END>
<BEG> < p > gives a string represent a description of the option with the give descriptor < p > < p > this implementation : < p > < ul > < li > asks for the descriptor 's { link optiondescriptor # defaultvalues } < li > < li > if they 're not present <SEG> answer the descriptor 's { link optiondescriptor # description } < li > < li > if they be present <SEG> concatenates and return : < ul > < li > the descriptor 's { link optiondescriptor # description } < li > < li > { code ' ' } < li > < li > { code default : } plus the result of { link # createdefaultvaluesdisplay java util list } <SEG> surround by parenthesis < li > < ul > < li > < ul > param descriptor a descriptor for a configured option of a parser return display text for the option 's description <END>
<BEG> < p > gives a display string for the default value of an option 's argument < p > < p > this implementation give the { link object # tostring } of the first value if there be only one value <SEG> otherwise give the { link object # tostring } of the whole list < p > param defaultvalues some default value for a give option 's argument return a display string for those default value <END>
<BEG> < p > looks up and give a resource bundle message < p > < p > this implementation look in the bundle { code joptsimple helpformattermessages } in the default locale <SEG> use a key that be the concatenation of this class 's fully qualify name <SEG> { code ' <END>
<BEG> < p > tells whether the give key be in the map <SEG> or whether the give key be a unique abbreviation of a key that be in the map < p > param key key to look up return { code true } if { code key } be present in the map throw nullpointerexception if { code key } be { code null } <END>
<BEG> < p > answers the value associate with the give key <END>
<BEG> < p > associates a give value with a give key <END>
<BEG> < p > associates a give value with a give set of key <END>
<BEG> < p > if the map contain the give key <SEG> dissociate the key from it value < p > param key key to remove throw nullpointerexception if { code akey } be { code null } throw illegalargumentexception if { code akey } be a zero-length string <END>
<BEG> gives a java map representation of this abbreviation map <END>
<BEG> gives the short version of the give class name <END>
<BEG> gives the primitive wrapper class for the give class <END>
<BEG> finds an appropriate value converter for the give class <END>
<BEG> invokes the give constructor with the give argument <END>
<BEG> gives a string consisting of the give character repeat the give number of time <END>
<BEG> tells whether the give string be either { code } or consist solely of whitespace character <END>
<BEG> gives a string consisting of a give string prepended and append with surround character <END>
<BEG> < p > specifies a description for the non-option argument that this spec represent <END>
<BEG> writes information about the option this parser recognize to the give output sink <END>
<BEG> tells the parser to use the give formatter when ask to { linkplain # printhelpon java io writer print help } <END>
<BEG> parses the give command line argument accord to the option specification give to the parser <END>
<BEG> mandates mutual exclusiveness for the option build by the specified builder <END>
<BEG> abstraction of parser state ; mostly serve to model how a parser behave depend on whether end-of-options have be detect <END>
<BEG> informs an option parser that this builder 's option accept an optional argument <END>
<BEG> < p > informs an option parser that this builder 's option be require if the give option be present on the command line < p > < p > for a give option <SEG> you < em > should not < em > mix this with { link # requiredunless string <SEG> string requiredunless } to avoid conflict < p > param dependent an option whose presence on a command line make this builder 's option require param otherdependents other option whose presence on a command line make this builder 's option require return self <SEG> so that the caller can add clause to the fluent interface sentence throw optionexception if any of the dependent option have n't be configure in the parser yet <END>
<BEG> < p > informs an option parser that this builder 's option be require if the give option be absent on the command line < p > < p > for a give option <SEG> you < em > should not < em > mix this with { link # requiredif optionspec <SEG> optionspec [ ] requiredif } to avoid conflict < p > param dependent an option whose absence on a command line make this builder 's option require param otherdependents other option whose absence on a command line make this builder 's option require return self <SEG> so that the caller can add clause to the fluent interface sentence throw optionexception if any of the dependent option have n't be configure in the parser yet <END>
<BEG> creates a converter that use a { link simpledateformat } with the give date time pattern <END>
<BEG> sets the delimiters for the message string <END>
<BEG> parses a string assume to be of the form { code key=value } into it part <END>
<BEG> gives a matcher that use the give regular expression <END>
<BEG> generates a bash completion script for the specified command class <END>
<BEG> generates and return the source code for an autocompletion bash script for the specified picocli-based application <END>
<BEG> last modified time in second since the epoch <END>
<BEG> returns the next ar entry in this stream <END>
<BEG> non-javadoc see org apache common compress archivers archiveinputstream # getnextentry <END>
<BEG> constructs a new sort map from input stream provider name to provider object <END>
<BEG> returns the encode to use for arj <SEG> jar <SEG> zip <SEG> dump <SEG> cpio and tar file <SEG> or null for the archiver default <END>
<BEG> try to determine the type of archiver param in input stream return type of archiver if find throw archiveexception if an archiver can not be detect in the stream since 1 14 <END>
<BEG> get this entry 's name <END>
<BEG> get this entry 's file size <END>
<BEG> true if the entry refers to a directory <END>
<BEG> the last modified date of the entry <END>
<BEG> file mode of this entry <END>
<BEG> file mode of this entry a unix stat value <END>
<BEG> the operating system the archive have be create on <END>
<BEG> checks if the signature match what be expect for an arj file <END>
<BEG> gets the archive 's record name <END>
<BEG> gets the archive 's comment <END>
<BEG> extracts the file type bit from a mode <END>
<BEG> get entry type <END>
<BEG> return the number of hard link to the entry <END>
<BEG> set the number of hard link <END>
<BEG> get file creation time <END>
<BEG> has this file be delete ? <END>
<BEG> set whether this file have be delete <END>
<BEG> return the offset within the archive return the offset <END>
<BEG> set the offset within the archive <END>
<BEG> return the tape volume where this file be locate <END>
<BEG> set the tape volume <END>
<BEG> return the number of sparse record in this segment <END>
<BEG> populate the dump archive entry and tape segment header with the content of the buffer <END>
<BEG> update entry with information from next tape segment header <END>
<BEG> the last modified date <END>
<BEG> return the access permission on the entry <END>
<BEG> returns the size of the entry a read from the archive <END>
<BEG> set the time the file be last modified <END>
<BEG> return the group id return the group id <END>
<BEG> return the archive summary information <END>
<BEG> read the next entry <END>
<BEG> reads bytes from the current dump archive entry <END>
<BEG> closes the stream for this entry <END>
<BEG> set dump date <END>
<BEG> get the date of the previous dump at this level high <END>
<BEG> set previous dump date <END>
<BEG> get dump label <END>
<BEG> get the last mountpoint <SEG> e g <SEG> home <END>
<BEG> get the hostname of the system where the dump be perform <END>
<BEG> get the inode of the first record on this volume <END>
<BEG> set the inode of the first record <END>
<BEG> get the number of record per tape block <END>
<BEG> is this the new header format ? <END>
<BEG> does this volume only contain metadata ? <END>
<BEG> calculate checksum for buffer <END>
<BEG> verify that the buffer contain a tape segment header <END>
<BEG> read 8-byte integer from buffer <END>
<BEG> set the dumparchive buffer 's block size <END>
<BEG> skip byte <END>
<BEG> close the input stream <END>
<BEG> read a record from the input stream and return the data <END>
<BEG> creates an archive { code target } use the format { code format } by recursively include all file and directory in { code directory } <END>
<BEG> this method be not implement and wo n't ever be <END>
<BEG> return a copy of the list of certificate or null if there be none <END>
<BEG> return whether this method can extract option from the give object <END>
<BEG> return property-bytes to write in a folder block <END>
<BEG> if the option represent a number <SEG> return it integer value <SEG> otherwise return the give default value <END>
<BEG> sorts coders use bind pair <END>
<BEG> whether there be any content associate with this entry <END>
<BEG> sets whether or not this entry represent a directory <END>
<BEG> returns whether this entry have get a creation date at all <END>
<BEG> gets the creation date <END>
<BEG> sets the creation date use ntfs time 100 nanosecond unit since 1 january 1601 param ntfscreationdate the creation date <END>
<BEG> sets the creation date <SEG> param creationdate the creation date <END>
<BEG> returns whether this entry have get a last modified date at all <END>
<BEG> gets the last modified date <END>
<BEG> sets the last modified date use ntfs time 100 nanosecond unit since 1 january 1601 param ntfslastmodifieddate the last modified date <END>
<BEG> sets the last modified date <SEG> param lastmodifieddate the last modified date <END>
<BEG> gets the window attribute <END>
<BEG> gets the compressed crc <END>
<BEG> sets the compression method to use for entry 's content - the default be lzma2 <END>
<BEG> converts ntfs time 100 nanosecond unit since 1 january 1601 to java time <END>
<BEG> converts java time to ntfs time <END>
<BEG> returns meta-data of all archive entry <END>
<BEG> reads data into an array of byte <END>
<BEG> provides statistic for byte read from the current entry <END>
<BEG> derives a default file name from the archive name - if know <END>
<BEG> gets the maximum amount of memory to use for extraction <END>
<BEG> gets whether entry without a name should get their name set to the archive 's default file name <END>
<BEG> sets the default compression method to use for entry content - the default be lzma2 <END>
<BEG> closes the archive entry <END>
<BEG> writes part of a byte array to the current archive entry <END>
<BEG> finishes the addition of entry to this archive <SEG> without close it <END>
<BEG> returns the format that have be request detected <END>
<BEG> determine if the give entry be a descendant of this entry <END>
<BEG> set this entry 's link name <END>
<BEG> convenience method to set this entry 's group and user id <END>
<BEG> set this entry 's sparse header param sparseheaders the new sparse header since 1 20 <END>
<BEG> get this entry 's major device number <END>
<BEG> indicates in case of an oldgnu sparse file if an extension sparse header follow <END>
<BEG> get this entry 's real file size in case of a sparse file <END>
<BEG> indicate if this entry be a gnu sparse block <END>
<BEG> indicate if this entry be a gnu or star sparse block use the oldgnu format <END>
<BEG> indicate if this entry be a gnu sparse block use one of the pax format <END>
<BEG> indicate if this entry be a star sparse block use pax header <END>
<BEG> indicate if this entry be a gnu long linkname block return true if this be a long name extension provide by gnu tar <END>
<BEG> check if this be a normal file since 1 2 return whether this be a normal file <END>
<BEG> check if this be a symbolic link entry <END>
<BEG> check whether this be a sparse entry <END>
<BEG> get extra pax headers return read-only map contain any extra pax headers since 1 15 <END>
<BEG> clear all extra pax header <END>
<BEG> add a pax header to this entry <END>
<BEG> get name extra pax header param name the full name of an extended pax header to retrieve return the value of the header <SEG> if any <END>
<BEG> update the entry use a map of pax header <END>
<BEG> if this entry represent a file <SEG> and the file be a directory <SEG> return an array of tarentries for this entry 's child <END>
<BEG> get the available data that can be read from the current entry in the archive <END>
<BEG> skips over and discard < code > n < code > byte of data from this input stream <END>
<BEG> since we do not support mark just yet <SEG> we return false <END>
<BEG> get the next entry in this tar archive <END>
<BEG> determine if an archive record indicate end of archive <END>
<BEG> for pax format 0 0 <SEG> the sparse header gnu sparse offset and gnu sparse numbytes may appear multi time <SEG> and they look like : gnu sparse size=size gnu sparse numblocks=numblocks repeat numblocks time gnu sparse offset=offset gnu sparse numbytes=numbytes end repeat for pax format 0 1 <SEG> the sparse header be store in a single variable : gnu sparse map gnu sparse map map of non-null data chunk <END>
<BEG> whether this class be able to read the give entry <END>
<BEG> whether to add a pax extension header for non-ascii file name <END>
<BEG> put an entry on the output stream <END>
<BEG> writes byte to the current tar archive entry <END>
<BEG> parse an octal string from a buffer <END>
<BEG> parse a boolean byte from a buffer <END>
<BEG> parses the content of a pax 1 0 sparse block <END>
<BEG> write an octal integer into a buffer <END>
<BEG> write an octal long integer into a buffer <END>
<BEG> compute the checksum of a tar entry header <END>
<BEG> wikipedia < a href= http : en wikipedia org wiki tar_ file_format # file_header > say < a > : < blockquote > the checksum be calculate by take the sum of the unsigned byte value of the header block with the eight checksum bytes take to be ascii space decimal value 32 <END>
<BEG> return the crc32 checksum of the file name or comment a encode in the central directory of the zip file <END>
<BEG> param unicodename the utf-8 encode name to set <END>
<BEG> length of the extra field in the local file data - without header-id or length specifier <END>
<BEG> delegate to local file data <END>
<BEG> name of link file return name of the file this entry link to if it be a symbolic link <SEG> the empty string otherwise <END>
<BEG> is this entry a symbolic link ? <END>
<BEG> indicate whether this entry be a directory <END>
<BEG> is this entry a directory ? <END>
<BEG> get the file mode for give permission with the correct file type <END>
<BEG> reads a value from the specify bit stream <END>
<BEG> returns the integer value form by the n next bits up to 8 bit <END>
<BEG> tells if a new byte can be read from the buffer <END>
<BEG> writes a byte to the buffer <END>
<BEG> copy a previous interval in the buffer to the current position <END>
<BEG> register a zipextrafield implementation <END>
<BEG> merges the local file data field of the give zipextrafields <END>
<BEG> merges the central directory field of the give zipextrafields <END>
<BEG> whether the current entry use utf8 for file name and comment <END>
<BEG> whether the current entry will use utf8 for file name and comment <END>
<BEG> whether the current entry use the data descriptor to store crc and size information <END>
<BEG> whether the current entry will use the data descriptor to store crc and size information <END>
<BEG> whether the current entry be encrypt <END>
<BEG> whether the current entry will be encrypt <END>
<BEG> whether the current entry be encrypt use strong encryption <END>
<BEG> returns the slide dictionary size use by the compression method 6 imploding <END>
<BEG> encodes the set bit in a form suitable for zip archive <END>
<BEG> parses the supported flag from the give archive data <END>
<BEG> since jarmarker be stateless we can always use the same instance <END>
<BEG> length of the extra field in the central directory - without header-id or length specifier <END>
<BEG> the actual data to put into local file data - without header-id or length specifier <END>
<BEG> the actual data to put central directory - without header-id or length specifier <END>
<BEG> see zipencoding # canencode java lang string <END>
<BEG> see zipencoding # decode byte [ ] <END>
<BEG> returns a message describe the overall statistic of the compression run return a string <END>
<BEG> get the length of the local data <END>
<BEG> get the central data length <END>
<BEG> gets request alignment <END>
<BEG> indicates whether method change be allow when re-compressing the zip file <END>
<BEG> get a zip entry writer for this scatter stream <END>
<BEG> closes this stream <SEG> free all resource involve in the creation of this stream <END>
<BEG> create a { link scatterzipoutputstream } that be back by a file param file the file to offload compress data into <END>
<BEG> the crc32 of the last deflated file return the crc32 <END>
<BEG> return the number of byte read from the source stream return the number of byte read <SEG> never negative <END>
<BEG> the total number of byte write to the output for all file return the number of byte <SEG> never negative <END>
<BEG> deflate the give source use the supplied compression method param source the source to compress param method the # ziparchiveentry compression method throw ioexception when failure happen <END>
<BEG> writes byte to zip entry <END>
<BEG> length of the complete extra field in the local file data <END>
<BEG> the actual data to put into local file data <END>
<BEG> the actual data to put into central directory <END>
<BEG> populate data from this array a if it be in local file data <END>
<BEG> param data the array of byte <END>
<BEG> the unsupported feature that have be use <END>
<BEG> the entry use the unsupported feature <END>
<BEG> returns the create time a a a java util date of this zip entry <SEG> or null if no such timestamp exists in the zip entry <END>
<BEG> sets the file last modification time of this zip entry use a zipeightbyteinteger object <END>
<BEG> sets the file creation time of this zip entry use a zipeightbyteinteger object <END>
<BEG> returns a string representation of this class useful for debug purpose <END>
<BEG> get record count <END>
<BEG> get hash algorithm <END>
<BEG> parse central directory format <END>
<BEG> parse file header format <END>
<BEG> sets flag byte <END>
<BEG> < p > returns the create time a a a java util date of this zip entry <SEG> or null if no such timestamp exists in the zip entry <END>
<BEG> < p > sets the modify time second since epoch of this zip entry use a ziplong object <END>
<BEG> not really for external usage <SEG> but mark package visibility to help u junit it <END>
<BEG> the uncompressed size store in this extra field <END>
<BEG> the relative header offset store in this extra field <END>
<BEG> helper to format entry too big message <END>
<BEG> returns the compression method of this entry <SEG> or -1 if the compression method have not be specify <END>
<BEG> sets the compression method of this entry <END>
<BEG> retrieves the external file attribute <END>
<BEG> sets unix permission in a way that be understood by info-zip 's unzip command <END>
<BEG> unix permission <END>
<BEG> returns true if this entry represent a unix symlink <SEG> in which case the entry 's content contain the target path for the symlink <END>
<BEG> platform specification to put into the & quot ; version make by & quot ; part of the central file header <END>
<BEG> set the platform unix or fat <END>
<BEG> gets currently configure alignment <END>
<BEG> retrieves all extra field that have be parse successfully <END>
<BEG> retrieves extra field <END>
<BEG> adds an extra field - replace an already present extra field of the same type <END>
<BEG> remove an extra field <END>
<BEG> looks up extra field data that could n't be parse correctly <END>
<BEG> sets the central directory part of extra field <END>
<BEG> retrieves the extra data for the local file data <END>
<BEG> returns the raw byte that make up the name before it have be convert use the configured or guess encoding <END>
<BEG> sets the data offset <END>
<BEG> the general purpose bit field <END>
<BEG> wraps { link java util zip zipentry # gettime } with a { link date } a the entry 's last modified date <END>
<BEG> sets the version make by field <END>
<BEG> the version require to expand field <END>
<BEG> the version make by field <END>
<BEG> the source of the name field value <END>
<BEG> sets the source of the name field value <END>
<BEG> the number of the split segment this entry start at <END>
<BEG> the paylaod that will be add to this zip entry return the input stream <END>
<BEG> the encoding to use for file name and the file comment <END>
<BEG> whether to set the language encode flag if the file name encoding be utf-8 <END>
<BEG> whether to fall back to utf and the language encode flag if the file name can not be encode use the specify encoding <END>
<BEG> whether zip64 extension will be use <END>
<BEG> writes all necessary data for this entry <END>
<BEG> adds an archive entry with a raw input stream <END>
<BEG> sets the default compression method for subsequent entry <END>
<BEG> flushes this output stream and force any buffered output byte to be write out to the stream <END>
<BEG> writes the data descriptor entry <END>
<BEG> writes the central file header entry <END>
<BEG> writes the & quot ; end of central dir record & quot ; <END>
<BEG> writes the & quot ; zip64 end of central dir record & quot ; and & quot ; zip64 end of central dir locator & quot ; <END>
<BEG> closes the underlying stream file without finish the archive <SEG> the result will likely be a corrupt archive <END>
<BEG> get value a java long <END>
<BEG> helper method to get the value a a java long from eight byte start at give array offset param bytes the array of byte param offset the offset to start return the corresponding java long value <END>
<BEG> override to make two instance with same value equal <END>
<BEG> instantiates a zip encoding <END>
<BEG> returns whether a give encoding be utf-8 <END>
<BEG> get value a four byte in big endian byte order <END>
<BEG> the code of the compression method <END>
<BEG> return the { link zipmethod } for the give code or null if the method be not know <END>
<BEG> some data can not be write to different split segment <SEG> for example : < p > 4 4 1 5 the end of central directory record and the zip64 end of central directory locator record must reside on the same disk when splitting or span an archive <END>
<BEG> write the data to zip split segment <SEG> if the remain space of current split segment be not enough <SEG> then a new split segment should be create param b data to write param off offset of the start of data in param b param len the length of data to write throw ioexception <END>
<BEG> concatenates zip split file from the last segment the extension should be zip param lastsegmentfile the last segment of zip split file <SEG> note that the extension should be zip return seekablebytechannel that concatenate all zip split file throw illegalargumentexception if the lastsegmentfile 's extension be not zip throw ioexception if the first channel do n't seem to hold the beginning of a split archive <END>
<BEG> reverses a byte [ ] array <END>
<BEG> converts a biginteger into a long <SEG> and blow up numberformatexception if the biginteger be too big <END>
<BEG> < p > converts a long into a biginteger <END>
<BEG> converts a signed byte into an unsigned integer representation e g <SEG> -1 become 255 <END>
<BEG> converts an unsigned integer to a sign byte e g <SEG> 255 becomes -1 <END>
<BEG> convert a dos date time field to a date object <END>
<BEG> converts dos time to java time number of millisecond since epoch <END>
<BEG> create a copy of the give array - or return null if the argument be null <END>
<BEG> checks whether the entry require feature not yet support by the library and throw an exception if it do <END>
<BEG> deletes the file with the file name from the archive <END>
<BEG> deletes the directory tree from the archive <END>
<BEG> returns the list of change a a copy <END>
<BEG> adds the file name of a recently delete file to the result list <END>
<BEG> adds the name of a file to the result list which have be copy from the source stream to the target stream <END>
<BEG> adds the name of a file to the result list which have be copy from the changeset to the target stream param filename the name of the file <END>
<BEG> returns a list of file name which have be add from the changeset return the list of file name <END>
<BEG> returns a list of file name which have be add from the original stream return the list of file name <END>
<BEG> returns a list of file name which have be delete return the list of file name <END>
<BEG> are the class require to support brotli compression available ? <END>
<BEG> whether to cache the result of the brotli for java check <END>
<BEG> param fmap point to the index of the start point of a permutation inside the block of data in the current partially sorted order param block the original data param nblock size of the block param off offset of first byte to sort in block <END>
<BEG> overriden to warn about an unclosed stream <END>
<BEG> returns the blocksize parameter specify at construction time <END>
<BEG> return the random number at a specific index <END>
<BEG> checks if the signature match what be expect for a zlib deflate file with the zlib header <END>
<BEG> whether or not the zlib header shall be write when compress or expect when decompress <END>
<BEG> sets the zlib header presence parameter <END>
<BEG> detects common format suffix in the give file name <END>
<BEG> maps the give name of a compressed file to the name that the file should have after uncompression <END>
<BEG> maps the give file name to the name that the file should have after compression <END>
<BEG> provides the stream 's meta data - may change with each stream when decompress concatenate stream <END>
<BEG> closes the input stream unless it be system in <END>
<BEG> finishes write compress data to the underlie stream without close it <END>
<BEG> sets the modification time of the compress file <END>
<BEG> sets the operating system on which the compression take place <END>
<BEG> compresses all remain data and write it to the stream <SEG> do n't close the underlying stream <END>
<BEG> adds some initial data to fill the window with <END>
<BEG> returns a builder correctly configure for the lz4 algorithm <END>
<BEG> get the uncompressed size of the stream return the uncompressed size <END>
<BEG> used by subclass to signal the next block contain the give amount of literal data <END>
<BEG> is there still data remain inside the current block ? <END>
<BEG> reads data from the current literal block <END>
<BEG> used by subclass to signal the next block contain a back-reference with the give coordinate <END>
<BEG> reads data from the current back-reference <END>
<BEG> reads a single byte from the real input stream and ensure the data be account for <END>
<BEG> feeds bytes into the compressor which in turn may emit zero or more block to the callback during the execution of this method <END>
<BEG> tells the compressor to process all remain data and signal end of data to the callback <END>
<BEG> whether to cache the result of the lzma check <END>
<BEG> sets the clear code base on the code size <END>
<BEG> initializes the array base on the maximum code size <END>
<BEG> adds a new entry if the maximum table size have n't be exceed and return the new index <END>
<BEG> add entry for repeat of previouscode we have n't add <SEG> yet <END>
<BEG> expands the entry with index code to the output stack and may create a new entry param code the code param addedunfinishedentry whether unfinished entry have be add return the new location of the output stack throw ioexception on error <END>
<BEG> checks if the signature match what be expect for a pack200 file 0xcafed00d <END>
<BEG> normalizes a jar archive so it can be safely sign and pack <END>
<BEG> generates a string contain the name <SEG> isdirectory setting and size of an entry <END>
<BEG> convert a string to ascii byte <END>
<BEG> convert an input byte array to a string use the ascii character set <END>
<BEG> returns true if the first n byte of an array be all zero param a the array to check param size the number of character to check not the size of the array return true if the first n byte be zero <END>
<BEG> returns a sanitized version of the string give a argument <SEG> where sanitize mean non-printable character have be replace with a question mark and the outcome be not long than 255 char <END>
<BEG> clears the cache of bit that have be read from the underlying stream but not yet provide via { link # readbits } <END>
<BEG> returns at most 63 bit read from the underlie stream <END>
<BEG> returns an estimate of the number of bit that can be read from this input stream without block by the next invocation of a method for this input stream <END>
<BEG> reads the give byte array a a little endian long <END>
<BEG> reads the give number of byte from the give stream a a little endian long <END>
<BEG> reads the give number of byte from the give input a little endian long <END>
<BEG> reads a single byte from the stream throw ioexception if the underlie stream throw or the stream be exhaust and the checksum do n't match the expected value <END>
<BEG> increments the counter of already read byte <END>
<BEG> returns the current number of byte read from this stream <END>
<BEG> potentially pad and then write the current block to the underlying stream <END>
<BEG> copies the content of a inputstream into an outputstream param input the inputstream to copy param output the target stream param buffersize the buffer size to use <SEG> must be big than 0 return the number of byte copy throw ioexception if an error occur throw illegalargumentexception if buffersize be small than or equal to 0 <END>
<BEG> skips the give number of byte by repeatedly invoke skip on the give input stream if necessary <END>
<BEG> reads as much from the file a possible to fill the give array <END>
<BEG> reads as much from input a possible to fill the give array with the give amount of byte <END>
<BEG> reads { code b remain } byte from the give channel start at the current channel 's position <END>
<BEG> gets the content of an < code > inputstream < code > a a < code > byte [ ] < code > <END>
<BEG> closes the give closeable and swallow any ioexception that may occur <END>
<BEG> adds all the element in the source { code iterator } to the target { code collection } <END>
<BEG> throw nonwritablechannelexception since this implementation be read-only <END>
<BEG> truncates the entity <SEG> to which this channel be connect <SEG> to the give size <END>
<BEG> obtains the array back this channel <END>
<BEG> creates a new hashset fill with the give element param element the element to fill the new set param < e > type of element contain in new set return a new hasset <END>
<BEG> accessor to get thread-local recycler instance <END>
<BEG> helper method <SEG> header trailer <END>
<BEG> helper method <SEG> other <END>
<BEG> method for decompress a block of input data encode in lzf block structure compatible with lzf command line utility <SEG> and can consist of any number of block <END>
<BEG> helper method that will calculate total uncompressed size <SEG> for sequence of one or more lzf block store in give byte array <END>
<BEG> method for compress or not individual chunk <END>
<BEG> note : we do not read more than 5 byte because otherwise might need to shuffle byte for output buffer could perhaps optimize in future ? <END>
<BEG> factory method for construct compress chunk <END>
<BEG> method that can be use define whether read should be full or optimal : former mean that full compress block be read right away a need <SEG> optimal that only small chunk be read at a time <SEG> more be read a need <END>
<BEG> fill the uncompressed byte buffer by read the underlying inputstream <END>
<BEG> accessor method that can be use to obtain { link chunkdecoder } that use all possible optimization method available <SEG> include < code > sun misc unsafe < code > for memory access <END>
<BEG> accessor method that can be use to obtain { link chunkdecoder } that only use standard jdk access method <SEG> and should work on all java platform and jvms <END>
<BEG> basic api <SEG> safe decode method <END>
<BEG> method that encode give input use provide { link chunkencoder } <SEG> and aggregate it into a single byte array and returning that <END>
<BEG> method that can be use to find underlying { link inputstream } that we read from to get lzf encode data to decode <END>
<BEG> method that can be call to discard any already buffer input <SEG> read from input source <END>
<BEG> convenience method that will read and uncompress all data available <SEG> and write it use give { link outputstream } <END>
<BEG> method for define whether call to { link # flush } will also complete current block similar to call { link # finishblock } or not <END>
<BEG> method that can be use to find underlying { link outputstream } that we write encoded lzf encode data into <SEG> after compress it <END>
<BEG> accessor for check whether call to flush will first finish the current block or not <END>
<BEG> method that can be use to force completion of the current block <SEG> which mean that all buffer data will be compress into an lzf block <END>
<BEG> compress and write the current block to the outputstream <END>
<BEG> method that can be use to ensure that a safe decoder instance be load <END>
<BEG> factory method for construct encoder that be always pass buffer externally <SEG> so that it will not nor need allocate encoding buffer <END>
<BEG> 26-nov-2013 <SEG> tatu : why be this synchronize ? <END>
<BEG> call to this method will result in call to { link uncompressor # complete } <SEG> which be idempotent i e <END>
<BEG> fills up the input buffer <END>
<BEG> advances the read buffer by 5 byte to make room for read next 24 bit <END>
<BEG> reads the specified number of bit from read buffer <END>
<BEG> initialize bit reader <END>
<BEG> initializes the huffman tree group <END>
<BEG> decodes huffman tree from input stream and construct lookup table <END>
<BEG> translates byte to ints <END>
<BEG> fills byte array with zero <END>
<BEG> private java util zip crc32 crc32 = new java util zip crc32 ; public void update byte [ ] buf <SEG> int index <SEG> int len { if buf==null { crc32 reset ; } else { crc32 update buf <SEG> index <SEG> len ; } } public void reset { crc32 reset ; } public void reset long init { if init==0l { crc32 reset ; } else { system err println unsupported operation ; } } public long getvalue { return crc32 getvalue ; } <END>
<BEG> flushes this compress { link outputstream } <END>
<BEG> convenience method which return < code > src [ srcoff : srcoff+srclen ] < code > compress <END>
<BEG> returns the decompressed length of compress data in < code > src [ srcoff : ] < code > <END>
<BEG> decompresses < code > src [ srcoff : ] < code > into < code > d [ destoff : ] < code > and return the number of byte read from < code > src < code > <END>
<BEG> returns a { link lz4factory } instance that return compressor and decompressors that may use { link sun misc unsafe } to speed up compression and decompression <END>
<BEG> returns the fast available { link lz4factory } instance which do not rely on jni binding <END>
<BEG> returns a blazing fast { link lz4compressor } <END>
<BEG> returns a { link lz4compressor } which require more memory than { link # fastcompressor } and be slow but compress more efficiently <END>
<BEG> returns a { link lz4fastdecompressor } instance <END>
<BEG> prints the fast instance <END>
<BEG> convenience method which return < code > src [ srcoff : ? <END>
<BEG> returns the optional content size value set in frame descriptor <END>
<BEG> checks if the optionnal content size be set flg bits content_size be enable <END>
<BEG> returns a { link checksum } view of this instance <END>
<BEG> returns a { link xxhashfactory } that return { link xxhash32 } instance that be native binding to the original c api <END>
<BEG> returns a { link xxhashfactory } that return { link xxhash32 } instance that be write with java 's official api <END>
<BEG> returns a { link xxhashfactory } that return { link xxhash32 } instance that may use { link sun misc unsafe } to speed up hash <END>
<BEG> calculates a crc32c checksum over the data <END>
<BEG> return the crc whose masked representation be masked_crc <END>
<BEG> apply a bit-shuffling filter into the content in the give input buffer <END>
<BEG> apply a bit-shuffling filter into the input short array <END>
<BEG> convert the input bit-shuffled byte array into an original array <END>
<BEG> convert the input bit-shuffled byte array into an original short array <END>
<BEG> provides jvm implementation specific operation to aggressively release resource associate with < i > buffer < i > <END>
<BEG> set the ` snappyapi ` instance <END>
<BEG> checks if the buffer size be sufficient for the current split file <END>
<BEG> a helper method to retrieve all split file which be of the format split by 7-zip <SEG> i e <SEG> zip 001 <SEG> zip 002 <SEG> etc <END>
<BEG> adds input source file to the zip file <END>
<BEG> adds the folder in the give file object to the zip file <END>
<BEG> creates a new entry in the zip file and add the content of the input stream to the zip file <END>
<BEG> extracts all the file in the give zip file to the input destination path <END>
<BEG> extracts a specific file from the zip file to the destination path <END>
<BEG> returns the list of file header in the zip file <END>
<BEG> returns fileheader if a file header with the give fileheader string exists in the zip model : if not return null param filename return fileheader throw zipexception <END>
<BEG> checks if the zip file be a split archive return true if split archive <SEG> false if not throw zipexception <END>
<BEG> removes the file provide in the input file header from the zip file <END>
<BEG> renames file name of the entry represent by file header <END>
<BEG> renames all the entry in the zip file that match the key in the map to their corresponding value in the map <END>
<BEG> merges split zip file into a single zip file without the need to extract the file in the archive param outputzipfile throw zipexception <END>
<BEG> returns the comment set for the zip file return string throw zipexception <END>
<BEG> returns an input stream for read the content of the zip file correspond to the input fileheader <END>
<BEG> checks to see if the input zip file be a valid zip file <END>
<BEG> returns the full file path+names of all split zip file in an arraylist <END>
<BEG> sets a password to be use for the zip file <END>
<BEG> for private library usage only <END>
<BEG> compresses buffer 'src ' into buffer 'dst ' <END>
<BEG> compresses direct buffer 'src ' into direct buffer 'dst ' <END>
<BEG> compresses direct byte buffer 'src ' into direct byte buffer 'dst ' with dictionary <END>
<BEG> compresses the data in buffer 'src ' param src the source buffer param level compression level return byte array with the compress data <END>
<BEG> compresses the data in buffer 'srcbuf ' param dstbuf the destination buffer <END>
<BEG> compresses the data in buffer 'src ' param src the source buffer param dict dictionary to use return byte array with the compress data <END>
<BEG> compresses buffer 'src ' with dictionary <END>
<BEG> decompress data param src the source buffer param originalsize the maximum size of the uncompressed data return byte array with the decompress data <END>
<BEG> decompress data param dstbuf the destination buffer <END>
<BEG> param src the source buffer param dict dictionary to use param originalsize the maximum size of the uncompressed data return byte array with the decompress data <END>
<BEG> return the original size of a compressed buffer if know param srcbuf the compressed buffer <END>
<BEG> set compression level param level compression level <SEG> default : 3 <END>
<BEG> enable or disable content size param contentsizeflag content size will be write into frame header _whenever known_ <SEG> default : true <END>
<BEG> enable or disable dictid param dictidflag when applicable <SEG> dictionary 's id be write into frame header <SEG> default : true <END>
<BEG> load compression dictionary to be use for subsequently compress frame <END>
<BEG> compresses buffer 'srcbuff ' into buffer 'dstbuff ' reuse this zstdcompressctx <END>
<BEG> compresses byte array 'srcbuff ' into byte array 'dstbuff ' reuse this zstdcompressctx <END>
<BEG> compresses the data in buffer 'srcbuf ' param dstbuf the destination buffer - must be direct <END>
<BEG> load decompression dictionary param dict the dictionary or ` null ` to remove loaded dictionary <END>
<BEG> override this method in case the byte buffer pass to the constructor might not contain the full compressed stream param torefill current buffer return either the current buffer but refill and flip if there be new content or a new buffer <END>
<BEG> get the zstd error code that cause the exception <END>
<BEG> do n't break on unfinished frame use case : decompressing file that be not yet finish writing and compressing <END>
<BEG> we can skip forward <END>
<BEG> inserts the specified element at the front of this deque <END>
<BEG> removes the first occurrence of the specified element in this deque when traverse the deque from head to tail <END>
<BEG> retrieves and remove the head of the queue represent by this deque <END>
<BEG> retrieves and remove the head of the queue represent by this deque in other word <SEG> the first element of this deque <SEG> or return < tt > null < tt > if this deque be empty <END>
<BEG> retrieves <SEG> but do not remove <SEG> the head of the queue represent by this deque <END>
<BEG> pushes an element onto the stack represent by this deque <END>
<BEG> removes a single instance of the specified element from this deque <END>
<BEG> returns an array contain all of the element in this deque in proper sequence from first to last element <END>
<BEG> returns an array contain all of the element in this deque in proper sequence from first to last element ; the runtime type of the returned array be that of the specified array <END>
<BEG> circularly increment i <END>
<BEG> utility for remove and iterator remove : delete item at position i <END>
<BEG> inserts the specified element at the tail of this queue if it be possible to do so immediately without exceed the queue 's capacity <SEG> return < tt > true < tt > upon success and < tt > false < tt > if this queue be full <END>
<BEG> inserts the specified element at the tail of this queue <SEG> wait for space to become available if the queue be full <END>
<BEG> gets the current value at position { code i } <END>
<BEG> sets the element at position { code i } to the give value <END>
<BEG> eventually set the element at position { code i } to the give value <END>
<BEG> atomically set the element at position { code i } to the give value and return the old value <END>
<BEG> atomically set the element at position { code i } to the give updated value if the current value { code == } the expected value <END>
<BEG> atomically increment by one the element at index { code i } <END>
<BEG> atomically add the give value to the element at index { code i } <END>
<BEG> returns the string representation of the current value of array <END>
<BEG> returns the current value of both the reference and the mark <END>
<BEG> atomically set the value of the mark to the give update value if the current reference be { code == } to the expect reference <END>
<BEG> returns the value to which the specify key be map <SEG> or { code null } if this map contain no mapping for the key <END>
<BEG> legacy method test if some key map into the specify value in this table <END>
<BEG> removes the key and it correspond value from this map <END>
<BEG> returns true if give key great than or equal to least and strictly less than fence <SEG> bypass either test if least or fence be null <END>
<BEG> returns true if give key great than or equal to least and less or equal to fence <END>
<BEG> main deletion method <END>
<BEG> returns simpleimmutableentry for result of findnear <END>
<BEG> returns a shallow copy of this < tt > concurrentskiplistmap < tt > instance <END>
<BEG> removes the mapping for the specify key from this map if present <END>
<BEG>  return the previous value associate with the specify key <SEG> or < tt > null < tt > if there be no mapping for the key throw classcastexception if the specify key can not be compare with the key currently in the map throw nullpointerexception if the specify key or value be null <END>
<BEG>  throw classcastexception if the specify key can not be compare with the key currently in the map throw nullpointerexception if any of the argument be null <END>
<BEG> returns a key-value mapping associate with the great key strictly less than the give key <SEG> or < tt > null < tt > if there be no such key <END>
<BEG> returns a key-value mapping associate with the great key less than or equal to the give key <SEG> or < tt > null < tt > if there be no such key <END>
<BEG> param key the key throw classcastexception  throw nullpointerexception if the specify key be null <END>
<BEG> returns a key-value mapping associate with the least key in this map <SEG> or < tt > null < tt > if the map be empty <END>
<BEG> adds all of the element in the specified collection to this set if they 're not already present <END>
<BEG> returns the number of party require to trip this barrier <END>
<BEG> waits until all { linkplain # getparties party } have invoke < tt > await < tt > on this barrier <END>
<BEG> queries if this barrier be in a broken state <END>
<BEG> resets the barrier to it initial state <END>
<BEG> returns the number of party currently wait at the barrier <END>
<BEG> retrieves and remove the head of this queue <SEG> or return < tt > null < tt > if this queue have no element with an expired delay <END>
<BEG> always return < tt > integer max_value < tt > because a < tt > delayqueue < tt > be not capacity constrain <END>
<BEG> waits for another thread to arrive at this exchange point unless the current thread be { link thread # interrupt interrupt } or the specify waiting time elapses <SEG> and then transfer the give object to it <SEG> receive it object in return <END>
<BEG> creates a single-threaded executor that can schedule command to run after a give delay <SEG> or to execute periodically <END>
<BEG> throw nullpointerexception  throw interruptedexception  <END>
<BEG> inserts the specified element at the end of this deque unless it would violate capacity restriction <END>
<BEG> variant of removefirstoccurrence need by iterator remove <END>
<BEG> cancels and clear the queue of all task that should not be run due to shutdown policy <END>
<BEG> sets the policy on whether to cancellation of a a task should remove it from the work queue <END>
<BEG> acquires a permit from this semaphore <SEG> only if one be available at the time of invocation <END>
<BEG> acquires a permit from this semaphore <SEG> if one become available within the give waiting time and the current thread have not be { linkplain thread # interrupt interrupt } <END>
<BEG> acquires the give number of permit from this semaphore <SEG> only if all be available at the time of invocation <END>
<BEG> acquires the give number of permit from this semaphore <SEG> if all become available within the give waiting time and the current thread have not be { linkplain thread # interrupt interrupt } <END>
<BEG> returns the current number of permit available in this semaphore <END>
<BEG> acquires and return all permit that be immediately available <END>
<BEG> returns the comparator use to order the element in this queue <SEG> or < tt > null < tt > if this queue use the { linkplain comparable natural order } of it element <END>
<BEG> retrieves and remove the head of this queue <SEG> or return < tt > null < tt > if this queue be empty <END>
<BEG> return parent of node p <SEG> or null if p be null <END>
<BEG> set a new { link exceptionhandler } for handle exception propagate out of the { link batcheventprocessor } param exceptionhandler to replace the exist exceptionhandler <END>
<BEG> < p > set up custom event processor to handle event from the ring buffer <END>
<BEG> < p > specify an exception handler to be use for any future event handler < p > < p > note that only event handler set up after call this method will use the exception handler < p > param exceptionhandler the exception handler to use for any future { link eventprocessor } <END>
<BEG> override the default exception handler for a specific handler <END>
<BEG> create a group of event processor to be use a a dependency <END>
<BEG> < p > starts the event processor and return the fully configure ring buffer < p > < p > the ring buffer be set up to prevent overwrite any entry that be yet to be process by the slow event processor < p > < p > this method must only be call once after all event processor have be add < p > return the configured ring buffer <END>
<BEG> the { link ringbuffer } use by this disruptor <END>
<BEG> gets the sequence value for the specified event handler <END>
<BEG> create a new event handler group that combine the consumer in this group with < tt > otherhandlergroup < tt > <END>
<BEG> create a dependency barrier for the processor in this group <END>
<BEG> perform a volatile read of this sequence 's value <END>
<BEG> performs a volatile write of this sequence <END>
<BEG> perform a compare and set operation on the sequence <END>
<BEG> atomically increment the sequence by one <END>
<BEG> calculate the next power of 2 <SEG> great than or equal to x < p > from hacker 's delight <SEG> chapter 3 <SEG> harry s warren jr param x value to round up return the next power of 2 from x inclusive <END>
<BEG> get the minimum sequence from an array of { link com lmax disruptor sequence } s param sequence to compare <END>
<BEG> get an array of { link sequence } s for the pass { link eventprocessor } s param processor for which to get the sequence return the array of { link sequence } s <END>
<BEG> get a handle on the unsafe instance <SEG> use for access low-level concurrency and memory construct <END>
<BEG> get an array of { link sequence } s represent the progress of the worker <END>
<BEG> start the worker pool process event in sequence <END>
<BEG> wait for the { link ringbuffer } to drain of published event then halt the worker <END>
<BEG> halt all worker immediately at the end of their current cycle <END>
<BEG> equal if the underlie key & value be equal <END>
<BEG> compute < code > key hashcode ^ val hashcode < code > <END>
<BEG> atomically set the sum of the striped counter to specify value <END>
<BEG> verbose printout of table internals <SEG> useful for debug <END>
<BEG> atomically replace newval for oldval <SEG> return the value that exist there before <END>
<BEG> copies all of the mapping from the specify map to this one <SEG> replace any exist mapping <END>
<BEG> keys a a long array <END>
<BEG> add { code i } to the set <END>
<BEG> this method assume index be actually index < < 1 because low bit be use for resize hence the > > 1 <END>
<BEG>  < br > < p > implementation notes : < br > queue be empty when producernode be the same a consumernode <END>
<BEG> gets the current value and nulls out the reference to it from this node <END>
<BEG>  < br > < p > implementation notes : < br > lock free offer use a single cas <END>
<BEG> deprecate this be rename to failfastoffer please migrate <END>
<BEG>  < br > < p > implementation notes : < br > offer be allow from multiple thread < br > offer allocate a new node and : < ol > < li > swaps it atomically with current producer node only one producer 'wins ' < li > sets the new node a the node follow from the swapped producer node < ol > this work because each producer be guarantee to 'plant ' a new node and link the old node <END>
<BEG>  < br > < p > implementation notes : < br > offer be allow from a single thread < br > offer allocate a new node hold the offer value and : < ol > < li > sets that node a the producernode next < li > sets the new node a the producernode < ol > from this follow that producernode next be always null and for all other node node next be not null <END>
<BEG>  < br > < p > implementation notes : < br > poll be allow from a single thread < br > poll read the next node from the consumernode and : < ol > < li > if it be null <SEG> the queue be empty <END>
<BEG> it be possible for a thread to be interrupt or reschedule between the read of the producer and consumer index <SEG> therefore protection be require to ensure size be within valid range <END>
<BEG> this method assume index be actually index < < 1 because low bit be use for resize <END>
<BEG> param value from which next positive power of two will be find <END>
<BEG> param value to be test to see if it be a power of two <END>
<BEG> align a value to the next multiple up of alignment <END>
<BEG> a plain store no order fence of an element to a give offset param buffer le buffer param offset compute via { link unsafelongarrayaccess # calclongelementoffset long } param e an orderly kitty <END>
<BEG> an ordered store of an element to a give offset param buffer le buffer param offset compute via { link unsafelongarrayaccess # calccircularlongelementoffset } param e an orderly kitty <END>
<BEG> a plain load no order fence of an element from a give offset <END>
<BEG> a volatile load of an element from a give offset <END>
<BEG> param index desirable element index return the offset in byte within the array for a give index <END>
<BEG> note : circular array be assume a power of 2 in length and the ` mask ` be length - 1 <END>
<BEG> performs an action when method { link # trycomplete } be invoked and the pending count be zero <SEG> or when the unconditional method { link # complete } be invoked <END>
<BEG> performs an action when method { link # completeexceptionally throwable } be invoked or method { link # compute } throw an exception <SEG> and this task have not already otherwise complete normally <END>
<BEG> adds atomically the give value to the pending count <END>
<BEG> sets atomically the pending count to the give count only if it currently hold the give expect value <END>
<BEG> if the pending count be nonzero <SEG> atomically decrements it <END>
<BEG> returns the root of the current computation ; i e <SEG> this task if it have no completer <SEG> else it completer 's root <END>
<BEG> regardless of pending count <SEG> invokes { link # oncompletion countedcompleter } <SEG> mark this task a complete and further trigger { link # trycomplete } on this task 's completer <SEG> if one exists <END>
<BEG> if this task do not have a completer <SEG> invokes { link forkjointask # quietlycomplete } and return { code null } <END>
<BEG> implements execution convention for countedcompleters <END>
<BEG> a method that result-bearing countedcompleters may optionally use to help maintain result data <END>
<BEG> callback from forkjoinworkerthread to establish and record it workqueue <END>
<BEG> final callback from terminate worker <SEG> as well a upon failure to construct or start a worker <END>
<BEG> unless shut down <SEG> add the give task to a submission queue at submitter 's current queue index modulo submission range <END>
<BEG> top-level runloop for worker <SEG> call by forkjoinworkerthread run <END>
<BEG> tries to decrement active count sometimes implicitly and possibly release or create a compensating worker in preparation for block <END>
<BEG> stripped-down variant of awaitjoin use by timed join <END>
<BEG> runs task until { code isquiescent } <END>
<BEG> returns common pool queue for a thread that have submit at least one task <END>
<BEG> tries to pop the give task from submitter 's queue in common pool <END>
<BEG> performs the give task <SEG> return it result upon completion <END>
<BEG> arranges for asynchronous execution of the give task <END>
<BEG> throw nullpointerexception if the task be null throw rejectedexecutionexception if the task can not be schedule for execution <END>
<BEG> returns the factory use for construct new worker <END>
<BEG> returns the handler for internal worker thread that terminate due to unrecoverable error encounter while execute task <END>
<BEG> returns the targeted parallelism level of this pool <END>
<BEG> returns the targeted parallelism level of the common pool <END>
<BEG> returns the number of worker thread that have start but not yet terminate <END>
<BEG> returns { code true } if this pool use local first-in-first-out scheduling mode for forked task that be never join <END>
<BEG> returns { code true } if there be any task submit to this pool that have not yet begin execute <END>
<BEG> removes and return the next unexecuted submission if one be available <END>
<BEG> removes all available unexecuted submit and fork task from schedule queue and add them to the give collection <SEG> without alter their execution status <END>
<BEG> returns a string identify this pool <SEG> as well a it state <SEG> include indication of run state <SEG> parallelism level <SEG> and worker and task count <END>
<BEG> possibly attempt to cancel and or stop all task <SEG> and reject all subsequently submit task <END>
<BEG> returns { code true } if all task have complete follow shut down <END>
<BEG> returns { code true } if the process of termination have commence but not yet complete <END>
<BEG> if call by a forkjointask operating in this pool <SEG> equivalent in effect to { link forkjointask # helpquiesce } <END>
<BEG> blocks in accord with the give blocker <END>
<BEG> primary execution method for steal task <END>
<BEG> tries to set signal status unless already complete <END>
<BEG> records exception and set status <END>
<BEG> hook for exception propagation support for task with completers <END>
<BEG> if lock be available <SEG> poll stale ref and remove them <END>
<BEG> the sneaky part of sneaky throw <SEG> rely on generic limitation to evade compiler complaint about rethrowing unchecked exception <END>
<BEG> arranges to asynchronously execute this task in the pool the current task be run in <SEG> if applicable <SEG> or use the { link forkjoinpool # commonpool } if not { link # inforkjoinpool } <END>
<BEG> returns the result of the computation when it { link # isdone be do } <END>
<BEG> commences perform this task <SEG> await it completion if necessary <SEG> and return it result <SEG> or throw an unchecked { code runtimeexception } or { code error } if the underlie computation do so <END>
<BEG> forks the give task <SEG> return when { code isdone } hold for each task or an unchecked exception be encounter <SEG> in which case the exception be rethrown <END>
<BEG> forks all task in the specified collection <SEG> return when { code isdone } hold for each task or an unchecked exception be encounter <SEG> in which case the exception be rethrown <END>
<BEG> attempts to cancel execution of this task <END>
<BEG> returns { code true } if this task throw an exception or be cancel <END>
<BEG> returns { code true } if this task complete without throw an exception and be not cancel <END>
<BEG> returns the exception throw by the base computation <SEG> or a { code cancellationexception } if cancel <SEG> or { code null } if none or if the method have not yet complete <END>
<BEG> completes this task abnormally <SEG> and if not already abort or cancel <SEG> cause it to throw the give exception upon { code join } and related operation <END>
<BEG> completes this task <SEG> and if not already abort or cancel <SEG> return the give value a the result of subsequent invocation of { code join } and related operation <END>
<BEG> completes this task normally without set a value <END>
<BEG> waits if necessary for the computation to complete <SEG> and then retrieve it result <END>
<BEG> joins this task <SEG> without return it result or throw it exception <END>
<BEG> commences perform this task and await it completion if necessary <SEG> without return it result or throw it exception <END>
<BEG> possibly execute task until the pool host the current task { link forkjoinpool # isquiescent be quiescent } <END>
<BEG> resets the internal bookkeeping state of this task <SEG> allow a subsequent { code fork } <END>
<BEG> returns the pool host the current task execution <SEG> or null if this task be execute outside of any forkjoinpool <END>
<BEG> returns { code true } if the current thread be a { link forkjoinworkerthread } execute a a forkjoinpool computation <END>
<BEG> tries to unschedule this task for execution <END>
<BEG> returns an estimate of the number of task that have be fork by the current worker thread but not yet execute <END>
<BEG> returns <SEG> but do not unschedule or execute <SEG> a task queue by the current thread but not yet execute <SEG> if one be immediately available <END>
<BEG> if the current thread be operate in a forkjoinpool <SEG> unschedules and return <SEG> without execute <SEG> the next task queue by the current thread but not yet execute <SEG> if one be available <SEG> or if not available <SEG> a task that be fork by some other thread <SEG> if available <END>
<BEG> atomically set the tag value for this task <END>
<BEG> returns a new { code forkjointask } that perform the { code run } method of the give { code runnable } a it action <SEG> and return a null result upon { link # join } <END>
<BEG> returns a new { code forkjointask } that perform the { code call } method of the give { code callable } a it action <SEG> and return it result upon { link # join } <SEG> translate any checked exception encounter into { code runtimeexception } <END>
<BEG> returns the pool host this thread <END>
<BEG> returns the unique index number of this thread in it pool <END>
<BEG> this method be require to be public <SEG> but should never be call explicitly <END>
<BEG> the while condition be true if : there be be too few total worker or there be at least one waiter and there be too few active worker or the pool be terminate <END>
<BEG> possibly block wait for the give task to complete <SEG> or cancel the task if terminate <END>
<BEG> in the typical case <SEG> a new worker acquire the lock <SEG> use next available index and return quickly <END>
<BEG> final callback from terminate worker <END>
<BEG> directly increment or decrement active count without queue <END>
<BEG> returns the approximate non-atomic number of idle thread per active thread <END>
<BEG> attempts to cancel and or stop all task <SEG> and reject all subsequently submit task <END>
<BEG> returns true if terminating or terminate <END>
<BEG> arranges to asynchronously execute this task <END>
<BEG> returns an estimate of how many more locally queue task be hold by the current worker thread than there be other worker thread that might steal them <END>
<BEG> returns the index number of this thread in it pool <END>
<BEG> pushes a task <END>
<BEG> tries to take a task from the base of own queue <END>
<BEG> removes and cancel all task in queue <END>
<BEG> drains task to give collection c return the number of task drain <END>
<BEG> returns an estimate of the number of task in the queue <END>
<BEG> gets and remove a local task <END>
<BEG> gets and remove a local or steal task <END>
<BEG> possibly run some task and or block <SEG> until joinme be do <END>
<BEG> implements forkjointask getsurplusqueuedtaskcount <END>
<BEG> runs task until { code pool isquiescent } <END>
<BEG> unsplices now or later the give delete cancelled node with the give predecessor <END>
<BEG> transfers the element to a wait consumer immediately <SEG> if possible <END>
<BEG> transfers the element to a consumer if it be possible to do so before the timeout elapses <END>
<BEG> returns { code true } if this queue contain no element <END>
<BEG> adds a new unarrived party to this phaser <END>
<BEG> adds the give number of new unarrived party to this phaser <END>
<BEG> arrives at this phaser and deregisters from it without wait for others to arrive <END>
<BEG> awaits the phase of this phaser to advance from the give phase value <SEG> throw { code interruptedexception } if interrupt while wait <SEG> or return immediately if the current phase be not equal to the give phase value or this phaser be terminate <END>
<BEG> forces this phaser to enter termination state <END>
<BEG> returns the number of party register at this phaser <END>
<BEG> returns the number of registered party that have arrive at the current phase of this phaser <END>
<BEG> returns the number of registered party that have not yet arrive at the current phase of this phaser <END>
<BEG> returns the parent of this phaser <SEG> or { code null } if none <END>
<BEG> returns the root ancestor of this phaser <SEG> which be the same a this phaser if it have no parent <END>
<BEG> requires null completion value <END>
<BEG> add a config to the end of the list so that it have least priority param child return <END>
<BEG> returns the actual configuration to be process <END>
<BEG> returns a flag whether this constructor argument represent a { code beandeclaration } <END>
<BEG> returns the value of this constructor argument <END>
<BEG> returns the optional data type name of this constructor argument <END>
<BEG> checks whether this constructor argument be compatible with the give class <END>
<BEG> inherits property from the specify map <END>
<BEG> returns the value of the { code at } attribute <END>
<BEG> returns a flag whether this be an optional configuration <END>
<BEG> returns a flag whether this configuration should always be create and add to the result combined configuration <END>
<BEG> returns a flag whether a builder with reload support should be create <END>
<BEG> returns the name for the represent configuration source <END>
<BEG> returns the file extension of this provider <END>
<BEG> returns the newly create { code immutableconfiguration } object <END>
<BEG> returns the source object of this handler <END>
<BEG> initializes the pass in { code builderparameters } object by apply all match { link defaultparametershandler } object register at this instance <END>
<BEG> creates a new { code filebasedbuilderparametersimpl } object from the content of the give map <END>
<BEG> returns the refresh delay for reload operation <END>
<BEG> creates a { code xmlconfiguration } instance from the content of the give file <END>
<BEG> creates a { code xmlconfiguration } instance from the content of the file identify by the give path <END>
<BEG> sets the current include listener <SEG> may be null <END>
<BEG> returns the { code entityresolver } store in this parameter object <END>
<BEG> convert a standard properties class into a configuration class <END>
<BEG> returns the wrapped { code configuration } object <END>
<BEG> extracts all value contain in the specify object up to the give limit <END>
<BEG> get a list of bigintegers associate with the give configuration key <END>
<BEG> returns a list with all { code eventlistenerregistrationdata } object currently contain for this event source <END>
<BEG> determines whether detail event should be generate <END>
<BEG> returns the { code eventtype } of the operation which cause this error <END>
<BEG> returns the name of the property that be access when this error occur <END>
<BEG> returns the cause of this error event <END>
<BEG> returns the value of the affected property if available <END>
<BEG> returns a flag if this event be generate before or after an update <END>
<BEG> fires an event to all register listener match the event type <END>
<BEG> returns an unmodifiable list with registration information about all event listener register at this object <END>
<BEG> adds all event listener registration store in the specify { code eventlistenerlist } to this list <END>
<BEG> returns the event type for this listener registration <END>
<BEG> returns a flag whether the search node be find in the last search operation <END>
<BEG> processes the specified configuration object <END>
<BEG> helper method for determine a reverse iterator for the specify key <END>
<BEG> fires all necessary element start event with the actual element value <END>
<BEG> returns a unmodifiable collection with the sub strategy manage by this object <END>
<BEG> convert from a < code > url < code > to a < code > file < code > <END>
<BEG> decodes the specified url a per rfc 3986 <SEG> i e <END>
<BEG> returns a unmodifiable collection with the sub controller manage by this combine controller <END>
<BEG> resets the reload state of all manage sub controller unconditionally <END>
<BEG> returns an object with additional data about the reload operation <END>
<BEG> checks if the pass in node be define <END>
<BEG> returns a list with the child of this node <END>
<BEG> creates a new { code immutablenode } instance which be a copy of this object with the name change to the pass in value <END>
<BEG> returns a new { code immutablenode } instance which be a copy of this object <SEG> but with the specified attribute set to the give value <END>
<BEG> returns a flag if the new node to be add be an attribute <END>
<BEG> returns a list with further node that must be add <END>
<BEG> adds the name of a node to the list of known list node <END>
<BEG> returns a set with the name of node that be know to be list node <END>
<BEG> checks if a node be a list node <END>
<BEG> returns an unmodifiable map with the value to be change <END>
<BEG> adds a collection with the node to be remove <END>
<BEG> returns the attribute value if this be an attribute result <END>
<BEG> adds all reference store in the pass in map to the manage reference <END>
<BEG> returns the list with removed reference <END>
<BEG> returns the { code nodetracker } return the { code nodetracker } <END>
<BEG> returns a copy of the mapping from node to their parent <END>
<BEG> returns a copy of the map store the replace node <END>
<BEG> takes care of list delimiters in property value <END>
<BEG> sets a new entityresolver <END>
<BEG> returns the element mapping to the source document <END>
<BEG> allows user plug a different { link annotationhandlerfactory } to create { link annotationhandler } instance <END>
<BEG> allows user to switch back to the default { link annotationhandlerfactory } implementation <END>
<BEG> scan the input class <SEG> look for digester rule express via annotation <SEG> and bind them <END>
<BEG> returns the method argument index <END>
<BEG> param bindingclass return true if the specify element have be mark <END>
<BEG> come back to the main { link linkedrulebuilder } <END>
<BEG> returns the namespace uri for which this rule be relevant <SEG> if any <END>
<BEG> returns the rule pattern associate to this builder <END>
<BEG> sets the java class of the method 's argument <END>
<BEG> sets the java class name of the method 's argument <END>
<BEG> sets exact match be use <END>
<BEG> marks the rule be invoke when { code begin } or { code end } event match <END>
<BEG> allows express the input property name alias <END>
<BEG> sets the name of property to set <END>
<BEG> sets the java class name that represent the parameter type of the method argument <END>
<BEG> sets the java class that represent the parameter type of the method argument <END>
<BEG> the number of parameter to collect <SEG> or zero for a single argument from the body of this element <END>
<BEG> prepare the { link callmethodrule } to be invoke use the matching element body a argument <END>
<BEG> sets the attribute from which to save the parameter value <END>
<BEG> flags the parameter to be set from the stack <END>
<BEG> sets the position of the object from the top of the stack <END>
<BEG> construct a factory create rule that will use the specified class to create an { link objectcreationfactory } which will then be use to create an object and push it on the stack <END>
<BEG> allows specify the attribute contain an override class name if it be present <END>
<BEG> exceptions throw by the object creation factory will be ignore or not <END>
<BEG> allows element2property mapping to be overridden <END>
<BEG> { link nodecreaterule } instance will be create either a dom { link org w3c dom element element } or a dom { link org w3c dom documentfragment documentfragment } <SEG> depend on the value of the < code > nodetype < code > parameter <END>
<BEG> { link nodecreaterule } instance will be create a dom { link org w3c dom element element } <SEG> but let user specify the jaxp < code > documentbuilder < code > that should be use when construct the node tree <END>
<BEG> construct an object with the specified class name <END>
<BEG> construct an object with the specified class <END>
<BEG> allows user to specify constructor argument type <END>
<BEG> allows user to specify default constructor argument <END>
<BEG> the attribute which we be attempt to match <END>
<BEG> set the class which any specify plugin < i > must < i > be descend from <END>
<BEG> set the class which will be use if the user do n't specify any plugin-class or plugin-id <END>
<BEG> add an additional attribute name to property name mapping <END>
<BEG> add an attribute name to the ignore list <END>
<BEG> sets whether attribute find in the xml without match property should be ignore <END>
<BEG> clear the current content of the default object stack <SEG> the param stack <SEG> all name stack <SEG> and other internal variable <END>
<BEG> return the list of rulefinder object <END>
<BEG> get the namespace for the xml attribute which indicate to a plugincreaterule which class be to be plug in <END>
<BEG> canonical methods get the invokedmethod <END>
<BEG> add a string representation of < code > input < code > to < code > buffer < code > <END>
<BEG> gets the current regex matching strategy <END>
<BEG> add a new variable source <SEG> identify by the input marker param marker the input variables marker param source the variable source <END>
<BEG> specify which attribute class this object be a proxy for <END>
<BEG> creates an instance of a class <SEG> initialize it field from a { link config } <END>
<BEG> returns an origin such a a filename and line number for the exception <SEG> or null if none be available <END>
<BEG> like { link # load config <SEG> configresolveoptions } but allow you to specify a class loader other than the context class loader <END>
<BEG> loads a default configuration <SEG> equivalent to { link # load config load defaultapplication } in most case <END>
<BEG> like { link # load } but allow specify a class loader other than the thread 's current context class loader <END>
<BEG> like { link # load } but allow specify a class loader other than the thread 's current context class loader <SEG> parse option <SEG> and resolve option <END>
<BEG> obtains the default override configuration <SEG> which currently consist of system property <END>
<BEG> like { link # defaultoverrides } but allow you to specify a class loader to use rather than the current context class loader <END>
<BEG> like { link # defaultapplication } but allow you to specify parse option <END>
<BEG> gets a < code > config < code > contain the system property from { link java lang system # getproperties } <SEG> parsed and convert a with { link # parseproperties } <END>
<BEG> gets a < code > config < code > contain the system 's environment variable <END>
<BEG> like { link # parseresources classloader <SEG> string <SEG> configparseoptions } but use thread 's current context class loader if none be set in the configparseoptions <END>
<BEG> parses a string which should be valid hocon or json by default <SEG> or the syntax specify in the option otherwise <END>
<BEG> constructs a configmemorysize represent the give number of byte <END>
<BEG> gets the size in byte <END>
<BEG> returns an origin with the give description <END>
<BEG> creates a file origin with the give filename <END>
<BEG> creates a url origin with the give url object <END>
<BEG> gets an instance of < code > configparseoptions < code > with all field set to the default value <END>
<BEG> gets the current syntax option <SEG> which may be null for any <END>
<BEG> set to false to throw an exception if the item be parse for example a file be miss <END>
<BEG> gets the current allow miss flag <END>
<BEG> set a { link configincluder } which customize how include be handle <END>
<BEG> gets the current includer will be null for the default includer <END>
<BEG> get the class loader ; never return { code null } <SEG> if the class loader be unset <SEG> return < code > thread currentthread getcontextclassloader < code > <END>
<BEG> returns the default render option which be verbose comment and format <END>
<BEG> returns concise render option no whitespace or comment <END>
<BEG> returns option with comment toggle <END>
<BEG> returns whether the option enable comment <END>
<BEG> returns option with origin comment toggle <END>
<BEG> returns whether the option enable automate origin comment <END>
<BEG> returns resolve option that disable any reference to system data currently <SEG> this mean environment variable <END>
<BEG> returns option with use of environment variable set to the give value <END>
<BEG> returns whether the option enable use of system environment variable <END>
<BEG> quotes and escape a string <SEG> a in the json specification <END>
<BEG> this look up the key with no transformation or type conversion of any kind <SEG> and return null if the key be not present <END>
<BEG> called only by resolvecontext resolve <END>
<BEG> this be public only for use by the config package <SEG> do not use this abi may change <END>
<BEG> tokenizes a reader <END>
<BEG> adds a new coercible to the list of known coercibles <END>
<BEG> implements the < code > putspi < code > method a per the specification in { link java util prefs abstractpreferences # putspi string <SEG> string } <END>
<BEG> read-ahead four byte and check for bom mark <END>
<BEG> < b > dom < b > : implements { link org w3c dom cs cssstyledeclaration # getcsstext } <END>
<BEG> < b > dom < b > : implements { link org w3c dom cs cssstyledeclaration # setcsstext string } <END>
<BEG> < b > dom < b > : implements { link org w3c dom cs cssstyledeclaration # setproperty string <SEG> string <SEG> string } <END>
<BEG> creates a cssvalue to manage the value at the give index <END>
<BEG> returns the value at the give <END>
<BEG> sets the modification handler of this value <END>
<BEG> gets the css value associate with the give property <END>
<BEG> rehash the table <END>
<BEG> implements { link value # item int } <END>
<BEG> sets the computed value <END>
<BEG> returns the css text associate with the give type value pair <END>
<BEG> a string representation of the current value <END>
<BEG> a code define the type of the value <END>
<BEG> returns the separator use for this list <END>
<BEG> returns the line of the last parsed character <END>
<BEG> tests whether the give character be a valid identifier start character <END>
<BEG> tests whether the give character be a valid name character <END>
<BEG> merges all stylesheets in this list into one <END>
<BEG> if this value be large than -1 the individual property from a rule be render in separate line ; the parameter define the indentation level <END>
<BEG> deprecate see # getendcolumn <END>
<BEG> get token end column number <END>
<BEG> backup a number of character <END>
<BEG> get token literal value <END>
<BEG> reset buffer when finish <END>
<BEG> method to adjust line and column number for the start of a token <END>
<BEG> helper that remove the lead url <SEG> the trailing and surround quote from the give string builder <END>
<BEG> write the char <END>
<BEG> write the string on a new line <END>
<BEG> indent the following <END>
<BEG> create local data snapshot on the scope and run the task <END>
<BEG> a helper method to enable cross-casting from any { link javascriptobject } type to any other { link javascriptobject } type <END>
<BEG> makes a best-effort attempt to get a useful debugging string describe the give javascriptobject <END>
<BEG> return le source location uri or < code > null < code > <END>
<BEG> less source name <END>
<BEG> writes a vlq encode value to the provide appendable <END>
<BEG> decodes the next vlqvalue from the provide chariterator <END>
<BEG> return the id from the relative id <END>
<BEG> return the value that represent the map for this section <END>
<BEG> returns the absolute pathname of the less source <END>
<BEG> returns the content of the less source <END>
<BEG> returns the time that the less source <SEG> or one of it import <SEG> be last modified <END>
<BEG> returns the less source import by this less source <END>
<BEG> type of error a report by less j <END>
<BEG> filename that error occur in a report by less j <END>
<BEG> returns { code true } <SEG> if any of the delegate loader return { true } from { link # exist string } for the give path <END>
<BEG> the first delegate that return { true } from { link # exist string } for the give path will have { link # load string <SEG> string } invoke <SEG> and the result will be retured <END>
<BEG> note that path should be absolute <SEG> otherwise the result be dependent on the vm 's { code user dir } <END>
<BEG> parameter be currently unused <END>
<BEG> you can override these two method in subclass of simplenode to customize the way the node appear when the tree be dump <END>
<BEG> get the uri of the document where the exception occur <END>
<BEG> the line number of the end of the text where the exception occur <END>
<BEG> set the uri for this input source <END>
<BEG> set the byte stream for this input source <END>
<BEG> set the character encoding <SEG> if know <END>
<BEG> get the character encode for a byte stream or uri <END>
<BEG> returns the medium associate to the input source or < code > null < code > if medium be currently unknown <END>
<BEG> sets a variable value in the large scope where it be already define <END>
<BEG> sets a variable in the current scope without check parent scope <END>
<BEG> returns an { link iterable } of all variable define in this scope and it parent <END>
<BEG> switch to a new sub-scope of a specific scope <END>
<BEG> end a scope for variable <SEG> remove all active variable that only exist in the new scope <END>
<BEG> start a new scope for variable <END>
<BEG> removes each selector which be subsume by another selector <END>
<BEG> returns this \ that <SEG> set-theoretically <END>
<BEG> returns this follow by all element in that but not in this <END>
<BEG> returns whether this simple selector sequence match at least all element that simple selector sequence match <END>
<BEG> returns the same sequence <SEG> but without type selector if one be present <END>
<BEG> returns whether this selector contain a placeholder % -selector <END>
<BEG> check if a string contain a scss variable <SEG> use whole word match <END>
<BEG> replace the sub string in a string to a value <SEG> use whole word match <END>
<BEG> formats the specified value <END>
<BEG> returns true if and only if duplicate name be allow in the header <END>
<BEG> specifies whether miss column name be allow when parse the header line <END>
<BEG> returns the character mark the start of a line comment <END>
<BEG> returns the character delimit the value typically ' ; ' <SEG> ' <SEG> ' or '\t ' <END>
<BEG> returns a copy of the header comment array <END>
<BEG> specifies whether empty line between record be ignore when parse input <END>
<BEG> specifies whether header name will be access ignore case <END>
<BEG> gets the string to convert to and from { code null } <END>
<BEG> returns the character use to encapsulate value contain special character <END>
<BEG> returns the record separator delimit output record <END>
<BEG> returns whether to skip the header record <END>
<BEG> returns whether to trim leading and trailing blank <END>
<BEG> specifies whether comment be support by this format <END>
<BEG> returns whether a nullstring have be define <END>
<BEG> parses the specified content <END>
<BEG> prints to the specify output <END>
<BEG> prints to the { link system # out } <END>
<BEG> prints the give { code value } to { code out } a a single record of delimiter separate value follow by the record separator <END>
<BEG> returns a new { code csvformat } with duplicate header name behavior set to the give value <END>
<BEG> returns a new { code csvformat } with whether to flush on close <END>
<BEG> returns a new { code csvformat } with the comment start marker of the format set to the specify character <END>
<BEG> returns a new { code csvformat } with the delimiter of the format set to the specify character <END>
<BEG> returns a new { code csvformat } with the header of the format set from the result set metadata <END>
<BEG> returns a new { code csvformat } with whether header name should be access ignore case <END>
<BEG> returns a new { code csvformat } with whether to skip the header record <END>
<BEG> returns a new { code csvformat } with the record separator of the format set to the operating system 's line separator string <SEG> typically cr+lf on windows and lf on linux <END>
<BEG> returns a new { code csvformat } with whether to trim leading and trailing blank <END>
<BEG> returns a value by index <END>
<BEG> returns the comment for this record <SEG> if any <END>
<BEG> checks whether a give column be map <SEG> i e <END>
<BEG> checks whether a give column be map and have a value <END>
<BEG> checks whether a column with give index have a value <END>
<BEG> puts all value of this record into the give map <END>
<BEG> copies this record into a new map of header name to record value <END>
<BEG> returns a string representation of the content of this record <END>
<BEG> returns the last character that be read a an integer 0 to 65535 <END>
<BEG> returns the next character in the current reader without consume it <END>
<BEG> returns the current line number return the current line number <END>
<BEG> copies char from a large over 2gb { code reader } to an { code appendable } <END>
<BEG> < p > copied from apache commons io <END>
<BEG> fast method for parse integer that be know to fit into regular 32-bit sign int type <END>
<BEG> return offset within buffer after output int <END>
<BEG> specify a value on the statement context for this batch return self <END>
<BEG> look up an argument by position param position start at 0 <SEG> not 1 return argument bound to that position <END>
<BEG> return a new <SEG> or cache <SEG> prepared statement <END>
<BEG> set the context to create a concurrent updatable result set <END>
<BEG> use a non-standard statementlocator to look up named statement for all handle create from this dbi instance <END>
<BEG> use a non-standard statementrewriter to transform sql for all handle instance create by this dbi <END>
<BEG> specify the transactionhandler instance to use <END>
<BEG> register a result set mapper which will have it parameterized type inspect to determine what it map to will be use with { link query # mapto class } for registered mapping <END>
<BEG> register a result set mapper factory <END>
<BEG> register a result column mapper which will have it parameterized type inspect to determine what it map to column mapper may be reuse by { link resultsetmapper } to map individual column <END>
<BEG> convenience methd use to obtain a handle from a specific data source param datasource return handle use a connection obtain from the provide datasource <END>
<BEG> create a handle wrap a particular jdbc connection param connection return handle bound to connection <END>
<BEG> obtain a handle with just a jdbc url param url jdbc url param username jdbc username for authentication param password jdbc password for authentication return newly open handle <END>
<BEG> specify the class use to log sql statement <END>
<BEG> add a callback to accumulate timing information about the query run from this data source <END>
<BEG> param expectedtype the type to use for match against bound argumentfactory instance param boundvalue the value to be bind by the create argument param ctx the relevant statementcontext return <END>
<BEG> obtains an object from the map <SEG> the object obtain should have be create with { link org skife jdbi v2 callablestatementmapper } param name the out parameter name return the output of name a type t <END>
<BEG> type-casting convenience method which obtain an object from the the result positionally object obtain should have be create with { link org skife jdbi v2 callablestatementmapper } param position the out parameter name return the output of name a type t <END>
<BEG> execute the batch return the number of row modify or insert per batch part <END>
<BEG> add a statement part to this batch <END>
<BEG> submit this statement to the batch <SEG> yield the batch <END>
<BEG> makes use of registered mapper to map the result set to the desire type <END>
<BEG> specify the fetch size for the query <END>
<BEG> specify the maimum field size in the result set <END>
<BEG> specify that the fetch order should be reverse <SEG> use the underlie { link statement # setfetchdirection int } return the modified query <END>
<BEG> specify that the result set should be concurrent updatable <END>
<BEG> create a a sql object of the specify type bound to this handle <END>
<BEG> create a new sql object which will obtain and release connection from this dbi instance <SEG> a it need to <SEG> and can <SEG> respectively <END>
<BEG> encodes hex octects into base64 param binarydata array contain binarydata return encoded base64 array <END>
<BEG> decodes base64 data into octects param binarydata byte array contain base64 data return array containind decode data <END>
<BEG> override the statement locator use for this statement <END>
<BEG> exactly the same a setstatementlocator but return self <END>
<BEG> the un-translated sql use to create this statement <END>
<BEG> set the query timeout <SEG> in second <SEG> on the prepared statement param second number of second before time out return the same instance <END>
<BEG> force transaction state when the statement be clean up <END>
<BEG> binds name parameter from javabean property on o <END>
<BEG> bind an argument positionally param position position to bind the paramater at <SEG> start at 0 param value to bind param length how long be the stream be bind ? <END>
<BEG> bind an argument by name param name token name to bind the paramater to param value to bind param length byte to read from value return the same query instance <END>
<BEG> bind an argument dynamically by the class pass in <END>
<BEG> bind null to be set for a give argument <END>
<BEG> bind a value use a specific type from < code > java sql types < code > via preparedstatement # setobject int <SEG> object <SEG> int param name named parameter to bind at param value value to bind param sqltype the sqltype from java sql types return self <END>
<BEG> bind a value use a specific type from < code > java sql types < code > via preparedstatement # setobject int <SEG> object <SEG> int param position position to bind null to <SEG> start at 0 param value value to bind param sqltype the sqltype from java sql types return self <END>
<BEG> callable after the statement have be execute to obtain the mapped result <END>
<BEG> used to specify the type require of the out parameter <END>
<BEG> writes the column name <END>
<BEG> lazy resultsethelper creation <END>
<BEG> tells the accumulator whether it should stop <END>
<BEG> prepares this executor to receive job <END>
<BEG> sends a signal to the executor that it should shut down once all thread have complete <END>
<BEG> returns exception capture during the conversion process if the conversion process be set not to propagate these error up the call stack <END>
<BEG> if an unrecoverable exception be throw during processing <SEG> it can be retrieve here <END>
<BEG> return the position in a sequence of object <END>
<BEG> return the { link beanfield } associate with this header or these header <END>
<BEG> return whether the string return by { link # getname } be a header name or a regular expression pattern to match header name <END>
<BEG> constructs csvparser <END>
<BEG> return the defined separator <END>
<BEG> return the null field indicator <END>
<BEG> creates the csvreader <END>
<BEG> checks to see if it should treat a field with two separator <SEG> two quote <SEG> or both a a null field <END>
<BEG> retrieves a specific data element from a line base on the value of the header <END>
<BEG> reads the next line and return a map of header value and data value <END>
<BEG> sets the parser that the icsvwriter will be use <END>
<BEG> sets the quote character that the icsvwriter will be use <END>
<BEG> sets the newline character that the icsvwriter will use <END>
<BEG> return the class of the provided custom converter <END>
<BEG> gets a human-readable error message <END>
<BEG> gets the bean that be to be introspect <END>
<BEG> gets the field from the reflection api that be involve in the error <END>
<BEG> gets the type of the field to which the data be to be assign <END>
<BEG> return the line number that cause the error <END>
<BEG> return the type that be misconfigured and cause the error <END>
<BEG> flushes the writer without throw any exception <END>
<BEG> add an validator to the aggregator <END>
<BEG> runs all linevalidators isvalid command against the line <END>
<BEG> runs all linevaldators validate command and if the string be invalid then it combine all the validation error message in a single csvvalidationexception <END>
<BEG> checks that the input value be not < tt > null < tt > <SEG> throw a < tt > nullinputexception < tt > if it be <END>
<BEG> returns the cellproccessor 's fully qualified class name <END>
<BEG> gets the collection of collected value <END>
<BEG>  throw supercsvcellprocessorexception if value be null or ca n't be parse a a double throw supercsvconstraintviolationexception if value do n't lie between min and max inclusive <END>
<BEG>  throw supercsvcellprocessorexception if value be null throw supercsvconstraintviolationexception if value be in the forbidden list <END>
<BEG>  throw supercsvconstraintviolationexception if value be n't in the collection <END>
<BEG>  throw supercsvcellprocessorexception if value be null throw supercsvconstraintviolationexception if value be n't one of the possible value <END>
<BEG>  throw supercsvcellprocessorexception if value be null or ca n't be parse a a long throws supercsvconstraintviolationexception if value <SEG> or do n't lie between min and max inclusive <END>
<BEG>  throw supercsvcellprocessorexception if value be null <END>
<BEG>  throw supercsvcellprocessorexception if value be null throw supercsvconstraintviolationexception if value be n't one of the required hash code <END>
<BEG>  throw supercsvcellprocessorexception if value be null throw supercsvconstraintviolationexception if value do n't contain any of the required substring <END>
<BEG>  throw supercsvcellprocessorexception if value be null throw supercsvconstraintviolationexception if the length of value be n't one of the required length <END>
<BEG>  throw supercsvcellprocessorexception if value be null throw supercsvconstraintviolationexception if { code length < min } or { code length > max } <END>
<BEG>  throw supercsvcellprocessorexception if value be null or be n't a string throw supercsvconstraintviolationexception if value be an empty string <END>
<BEG>  throw supercsvcellprocessorexception if value be null throw supercsvconstraintviolationexception if a non-unique value be encounter <END>
<BEG>  throw supercsvcellprocessorexception if value be null or be not a boolean <END>
<BEG>  throw supercsvcellprocessorexception if value be null or be not a date <SEG> or if dateformat be not a valid date format <END>
<BEG>  throw supercsvcellprocessorexception if value be null or not a number <SEG> or if an invalid decimalformat string be supply <END>
<BEG>  throw supercsvcellprocessorexception if value be null <SEG> not a string <SEG> or ca n't be parse to a boolean <END>
<BEG>  throw supercsvcellprocessorexception if value be null <SEG> be n't a character or string <SEG> or be a string of multiple character <END>
<BEG>  throw supercsvcellprocessorexception if value be null <SEG> be n't a double or string <SEG> or ca n't be parse a a double <END>
<BEG> gets the processor that be execute <END>
<BEG> gets the tokenized column <END>
<BEG> calls the tokenizer to read a csv row <END>
<BEG> executes the supplied cell processor on the last row of csv that be read and populate the supplied list of processed column <END>
<BEG> in order to maintain the current row and line number <SEG> this method < strong > must < strong > be call at the very beginning of every write method implement in concrete csv writer <END>
<BEG> writes one or more string column a a line to the csvwriter <END>
<BEG> gets the csv preference <END>
<BEG> returns the end of line symbol return the end of line symbol <END>
<BEG> returns the csv encoder <END>
<BEG> returns the maximum number of line a row can span <END>
<BEG>  < p > if a getter method be encounter then this method return the stored value from the bean state or null if the field have not be set <END>
<BEG> returns the getter method for field on an object <END>
<BEG> returns the setter method for the field on an object <END>
<BEG> existence check of a value or < tt > null < tt > map to the key <END>
<BEG> insert a value param firstkey first key param secondkey second key param thirdkey third key param value the value to be insert <END>
<BEG> returns the number of key-value mapping in this map for the second key <END>
<BEG> insert a value param firstkey first key param secondkey second key param value the value to be insert <END>
<BEG> returns a list of all of the value in the map whose key match an entry in the namemapping array <END>
<BEG> converts an { code list < object > } to a string array null-safe <SEG> by call { code tostring } on each element <END>
<BEG> transforms a header name param field the field of a { link nested } class whose header will be transform param name the current header name associate with the field of the { link nested } class return the transformed header name to be use to read write value from to the give field <END>
<BEG> transforms a header index param field the field of a { link nested } class whose header will be transform param index the current column position associate with the field of the { link nested } class return the transformed position to be use to read write value from to the give field <END>
<BEG> applied the configuration of a formatter object { link simpledateformat } <SEG> { link numberformat } and others <END>
<BEG> runs through all annotation of a give class to identify whether all annotate field and method with the { link parsed } annotation be map to a column by index <END>
<BEG> runs through all { link parsed } annotation of a give class to identify all index associate with it field param beanclass a class whose { link parsed } annotation will be process <END>
<BEG> searches for the { link headers } annotation in the hierarchy of a class param beanclass the class whose hierarchy will be search return the { link headers } annotation of the give class or it most immediate parent <SEG> or { code null } if not find <END>
<BEG> returns all field available from a give class <END>
<BEG> returns all method available from a give class param beanclass a class whose method will be return <END>
<BEG> returns all attribute available from a give class that have an annotation <END>
<BEG> searches for an annotation of a give type that 's be apply to an element either directly a a regular annotation or indirectly a a meta-annotations <SEG> i e <END>
<BEG> returns all annotation apply to an element <SEG> exclude the one not in a give package <END>
<BEG> returns java 's default value for a give type <SEG> in a primitive type wrapper <END>
<BEG> associates a value to a give annotation attribute param annotatedelement a method or field that have an annotation whose property be change by a { link com univocity parser annotation copy } annotation param annotation the altered annotation of the give annotatedelement param attribute the attribute of the altered annotation param newvalue the value of the give attribute of the altered annotation <END>
<BEG> returns the a value to a give annotation attribute that might have be modify by a { link com univocity parser annotation copy } annotation param annotatedelement a method or field that have an annotation whose property might have be change by a { link com univocity parser annotation copy } annotation param annotation the possibly altered annotation of the give annotatedelement param attribute the attribute of the possibly altered annotation param valueifnull the value to return from the unmodified annotation <SEG> if it have not be change by a { link com univocity parser annotation copy } param < t > the expect value type to be return by this method <END>
<BEG> returns the a value to a give annotation attribute that might have be modify by a { link com univocity parser annotation copy } annotation param annotatedelement a method or field that have an annotation whose property might have be change by a { link com univocity parser annotation copy } annotation param annotation the possibly altered annotation of the give annotatedelement param attribute the attribute of the possibly altered annotation return the value associate with the give annotation property <SEG> or { code null } if it have not be modify by a { link com univocity parser annotation copy } <END>
<BEG> returns { code true } if the field be map to a column index <SEG> otherwise { code false } return { code true } if the field be map to a column index <SEG> otherwise { code false } <END>
<BEG> returns the column index against which this field be map <END>
<BEG> defines the column name against which this field be map <SEG> override any current name derive from annotation or from the attribute name itself <END>
<BEG> returns the { link field } map to a column return the { link field } map to a column <END>
<BEG> returns the parent class that contain the mapped field <END>
<BEG> returns the type of the mapped field return the field type <END>
<BEG> queries whether this field mapping can be apply over a give object instance <END>
<BEG> creates a descriptor for a setter method param name name of the setter method param parametertype the parameter type accept by the give setter method return a setter method descriptor <END>
<BEG> creates a descriptor for a setter method param prefix a dot separate string denote a path of nested object name param method a actual class method to be associate with this prefix return a setter method descriptor <END>
<BEG> returns the prefix : a dot separate string denote a path of nested object name e g <END>
<BEG> returns the parameter type associate with a method <SEG> if available return the type of parameter accept by this method if it be a setter <SEG> or { code null } if a getter be be represent <END>
<BEG> returns the return type associate with a method <SEG> if available return the return type of this method if it be a getter <SEG> or { code null } if a setter be be represent <END>
<BEG> returns full path to a method <SEG> e g <END>
<BEG> creates a descriptor for a getter or setter method param prefix a dot separate string denote a path of nested object name param method a actual class method to be associate with this prefix return a descriptor for the give method <END>
<BEG> returns the name to be use a a header base on a give field and it { link parsed } annotation <END>
<BEG> returns the index that determine which column the current field represent <SEG> a specify by { link parsed # index } return the current header index <END>
<BEG> returns the original attribute name of the field in it containing class <END>
<BEG> returns { code true } if this { link annotatedelement } be a { link method } with parameter and can only be use for write value into the java bean <END>
<BEG> returns { code true } if this { link annotatedelement } be a { link method } with no parameter and a return type which can only be use for read value from the java bean <END>
<BEG> allows subclasses to alter the exception message that should be display to end user <END>
<BEG> starts an iterator-style parsing cycle <END>
<BEG> allows the parser implementation to traverse the input buffer before the parsing process start <SEG> in order to enable automatic configuration and discovery of data format <END>
<BEG> stops parsing and close all open resource <END>
<BEG> parses all remain row from the input and return them in a list <END>
<BEG> parses all remain { link record } s from the input and return them in a list <END>
<BEG> parses all record from the input and return them in a list <END>
<BEG> parses the next record from the input <END>
<BEG> reloads header from setting <END>
<BEG> parses a single line from a string in the format support by the parser implementation <END>
<BEG> returns all comment collect by the parser so far <END>
<BEG> returns the last comment find in the input <END>
<BEG> returns the header < b > parse < b > from the input <SEG> if and only if { link commonparsersettings # headerextractionenabled } be { code true } <END>
<BEG> returns the current parsing context with information about the status of the parser at any give time <END>
<BEG> returns the metadata associate with { link record } s parse from the input use { link abstractparser # parseallrecords file } or { link abstractparser # parsenextrecord } <END>
<BEG> provides an { link iterableresult } for iterate row parse from the input <END>
<BEG> updates the selection of field to write <END>
<BEG> appends the processed sequence of character in { link abstractwriter # appender } to the output row <END>
<BEG> appends the give character to the output row <END>
<BEG> appends the give character sequence to the output row param char the sequence of character to append to the output row <END>
<BEG> writes the give collection of header to the output <END>
<BEG> iterates over all record <SEG> process each one with the { link rowwriterprocessor } provide by { link commonwritersettings # getrowwriterprocessor } <SEG> and write them <SEG> then finally and close the output a { link textwritingexception } will be throw if no { link rowwriterprocessor } be provide by { link commonwritersettings # getrowwriterprocessor } <END>
<BEG> iterates over all record <SEG> process each one with the { link rowwriterprocessor } provide by { link commonwritersettings # getrowwriterprocessor } <SEG> and write them <END>
<BEG> iterates over all record <SEG> write them and close the output <END>
<BEG> iterates over all record and write them to the output <END>
<BEG> writes the data give for an individual record <END>
<BEG> writes a plain potentially free-text string a a line to the output <END>
<BEG> closes the { link java io writer } give in this class constructor <END>
<BEG> converts a give object to it string representation for write to a { code string } < ul > < li > if the object be null <SEG> then { link abstractwriter # nullvalue } be returned < li > < li > if the string representation of this object be an empty string <SEG> then { link abstractwriter # emptyvalue } be returned < li > < ul > param element the object to be convert into a string <END>
<BEG> writes a value to a row in memory <END>
<BEG> writes the content accumulate in an internal in-memory row use { link # addvalues object or # writevalue } to a new record in the output <END>
<BEG> writes the give collection of header to a { code string } a { link textwritingexception } will be throw if no header be define <END>
<BEG> writes the give collection of header to a { code string } a { link textwritingexception } will be throw if no header be define or if record be already write to a { code string } param header the header to write to a { code string } return a formatted { code string } contain the give header <END>
<BEG> iterates over all record <SEG> process each one with the { link rowwriterprocessor } provide by { link commonwritersettings # getrowwriterprocessor } <SEG> and write them to a { code list } of { code string } <END>
<BEG> iterates over all record <SEG> process each one with the { link rowwriterprocessor } provide by { link commonwritersettings # getrowwriterprocessor } <SEG> and write them them to a { code list } of { code string } <END>
<BEG> processes the data give for an individual record with the { link rowwriterprocessor } provide by { link commonwritersettings # getrowwriterprocessor } <SEG> then write it <END>
<BEG> iterates over all record and write them to a { code list } of { code string } <END>
<BEG> writes the data give for an individual record to a { code string } <END>
<BEG> writes a comment row to a { code string } param comment the content to be write a a comment to a { code string } <END>
<BEG> writes the content accumulate in an internal in-memory row use { link # addvalues object or # addvalue } a a { code string } return a formatted { code string } contain the information accumulate in the internal in-memory row <END>
<BEG> returns the number of record write to the output so far return the number of record write to the output so far <END>
<BEG> writes the value of a give map to a { code string } format to accord to the specify output format <END>
<BEG> writes the value of a give map to a { code list } of { code string } format to accord to the specify output format <END>
<BEG> writes the value of a give map to multiple output record each value be expect to be iterable and the result of this method will produce the number of record equal to the long iterable <END>
<BEG> writes the value of a give map to multiple output record and close the output when finish <END>
<BEG> processes the value of a map use the { link rowwriterprocessor } provide by { link commonwritersettings # getrowwriterprocessor } and write the result into { code string } format accord to the specify output format <END>
<BEG> processes the value of a map use the { link rowwriterprocessor } provide by { link commonwritersettings # getrowwriterprocessor } and write the result into a new output record a { link textwritingexception } will be throw if no { link rowwriterprocessor } be provide by { link commonwritersettings # getrowwriterprocessor } <END>
<BEG> processes the data in all value of a map use the { link rowwriterprocessor } provide by { link commonwritersettings # getrowwriterprocessor } <SEG> then write all value to the output <END>
<BEG> processes the data in all value of a map use the { link rowwriterprocessor } provide by { link commonwritersettings # getrowwriterprocessor } and write the result into a { code list } of { code string } format to accord to the specify output format <END>
<BEG> processes the data in all value of a map use the { link rowwriterprocessor } provide by { link commonwritersettings # getrowwriterprocessor } <SEG> then write all value to the output and close the writer <END>
<BEG> checks whether the writer can remove trail lead whitespaces from a value be write <END>
<BEG> throws an illegalargumentexception if the give array be null or empty <END>
<BEG> throws an illegalargumentexception if the give array be null <SEG> empty <SEG> or contain null value param argdescription the description of the element param args the element to be validate <END>
<BEG> returns the index of an element in a give array <END>
<BEG> converts a list of enumeration to an array of their { link enum # tostring } representation param enums a list of enumeration to convert return an array of { code string } with the value produce by each element 's { link enum # tostring } method <END>
<BEG> converts any collection of { code integer } into an { code int } array <END>
<BEG> restricts the length of a give content <END>
<BEG> allows rethrowing a checked exception instead of wrap it into a runtime exception <END>
<BEG> converts a sequence of int number into a byte array <END>
<BEG> identifies duplicate value in a give array and return them param array the search array param < t > the type of element hold in the give array <END>
<BEG> removes surround space from a give { code string } <SEG> from it right or left side <SEG> or both <END>
<BEG> displays line separator in a string by replace all instance of ` \r ` and ` \n ` with ` [ cr ] ` and ` [ lf ] ` <END>
<BEG> removes all instance of a give element from an int array <END>
<BEG> returns the method that should be use to write a value to a property of a java bean <END>
<BEG> indicates whether or not a separate thread will be use to read character from the input while parse default true if the number of available processor at runtime be great than 1 < p > when enable <SEG> a reading thread in { code com univocity parser common input concurrent concurrentcharinputreader } will be start and load character from the input <SEG> while the parser be process it input buffer <END>
<BEG> indicates whether or not the first valid record parse from the input should be consider a the row contain the name of each column return true if the first valid record parse from the input should be consider a the row contain the name of each column <SEG> false otherwise <END>
<BEG> returns the callback implementation of the interface { link rowprocessor } which handle the lifecycle of the parsing process and process each record extract from the input return returns the rowprocessor use by the parser to handle each record see com univocity parser common processor objectrowprocessor see com univocity parser common processor objectrowlistprocessor see com univocity parser common processor masterdetailprocessor see com univocity parser common processor masterdetaillistprocessor see com univocity parser common processor beanprocessor see com univocity parser common processor beanlistprocessor deprecate use the { link # getprocessor } method a it allow format-specific processor to be build to work with different implementation of { link context } <END>
<BEG> defines the callback implementation of the interface { link rowprocessor } which handle the lifecycle of the parsing process and process each record extract from the input param processor the rowprocessor instance which should use by the parser to handle each record see com univocity parser common processor objectrowprocessor see com univocity parser common processor objectrowlistprocessor see com univocity parser common processor masterdetailprocessor see com univocity parser common processor masterdetaillistprocessor see com univocity parser common processor beanprocessor see com univocity parser common processor beanlistprocessor deprecate use the { link # setprocessor processor } method a it allow format-specific processor to be build to work with different implementation of { link context } <END>
<BEG> returns the callback implementation of the interface { link processor } which handle the lifecycle of the parsing process and process each record extract from the input param < t > the context type support by the parser implementation <END>
<BEG> defines the callback implementation of the interface { link processor } which handle the lifecycle of the parsing process and process each record extract from the input param processor the { link processor } instance which should use by the parser to handle each record see abstractobjectprocessor see abstractobjectlistprocessor see abstractmasterdetailprocessor see abstractmasterdetaillistprocessor see abstractbeanprocessor see abstractbeanlistprocessor see abstractcolumnprocessor see abstractcolumnprocessor <END>
<BEG> an implementation of { link charinputreader } which load the parser buffer in parallel or sequentially <SEG> a define by the readinputonseparatethread property param whitespacerangestart start range of character consider to be whitespace <END>
<BEG> defines the number of valid record to be parse before the process be stop <END>
<BEG> indicates whether field select use the field selection method define by the parent class { link commonsettings } should be reorder default to true <END>
<BEG> informs the number of character hold by the parser 's buffer when process the input default to 1024 1024 character <END>
<BEG> indicates whether the parser should detect the line separator automatically <END>
<BEG> indicates that comment find in the input must be collect disabled by default <END>
<BEG> enables collection of comment find in the input disable by default <END>
<BEG> indicates whether automatic closing of the input reader <SEG> stream <SEG> etc be enable <END>
<BEG> configures whether the parser should always close the input reader <SEG> stream <SEG> etc automatically when all record have be parse or when an error occurs <END>
<BEG> sets the string representation of a null value default to null < p > when reading <SEG> if the parser do not read any character from the input <SEG> the nullvalue be use instead of an empty string < p > when writing <SEG> if the writer have a null object to write to the output <SEG> the nullvalue be use instead of an empty string param emptyvalue the string representation of a null value <END>
<BEG> the maximum number of character allow for any give value be write read <END>
<BEG> returns whether or not empty line should be ignore default to true < p > when reading <SEG> if the parser read a line that be empty <SEG> it will be skip <END>
<BEG> returns whether or not trail whitespaces from value be read write should be skip default to true return true if trail whitespaces from value be read write should be skip <SEG> false otherwise <END>
<BEG> defines whether or not trail whitespaces from value be read write should be skip default to true param ignoretrailingwhitespaces true if trail whitespaces from value be read write should be skip <SEG> false otherwise <END>
<BEG> defines the field names in the input output <SEG> in the sequence they occur default to null <END>
<BEG> defines the field names in the input output derive from a give class with { link parsed } annotate attribute method <END>
<BEG> indicates whether header should be derive from a give class <END>
<BEG> the format of the file to be parse write return the format 's default <END>
<BEG> defines the format of the file to be parse write return the format 's default <END>
<BEG> selects field which will not be read write <SEG> by their name < p > < b > when read < b > <SEG> only the value of the select column will be parse <SEG> and the content of the other column ignore <END>
<BEG> selects a sequence of field for read write by their name < p > < b > when read < b > <SEG> only the value of the select column will be parse <SEG> and the content of the other column ignore <END>
<BEG> returns the set of select field <SEG> if any return the set of select field <END>
<BEG> returns the fieldselector object <SEG> which handle select field <END>
<BEG> returns the custom error handler to be use to capture and handle error that might happen while process record with a { link rowprocessor } or a { link rowwriterprocessor } i e <END>
<BEG> defines a custom error handler to capture and handle error that might happen while process record with a { link rowprocessor } or a { link rowwriterprocessor } i e <END>
<BEG> returns the custom error handler to be use to capture and handle error that might happen while process record with a { link com univocity parser common processor core processor } or a { link rowwriterprocessor } i e <END>
<BEG> defines a custom error handler to capture and handle error that might happen while process record with a { link com univocity parser common processor core processor } or a { link rowwriterprocessor } i e <END>
<BEG> returns a flag indicate whether or not a { link processorerrorhandler } have be define through the use of method { link # setprocessorerrorhandler processorerrorhandler } return { code true } if the parser writer be configure to use a { link processorerrorhandler } <END>
<BEG> configures the parser writer to trim or keep leading and trailing whitespaces around value this have the same effect a invoke both { link # setignoreleadingwhitespaces boolean } and { link # setignoretrailingwhitespaces boolean } with the same value <END>
<BEG> configures the parser writer to limit the length of displayed content be parse write in the exception message when an error occur < p > if set to { code 0 } <SEG> then no exception will include the content be manipulate in their attribute <SEG> and the { code < omit > } string will appear in error message a the parsed write content < p > < p > default to { code -1 } no limit < p > <END>
<BEG> configures the parser writer to limit the length of displayed content be parse write in the exception message when an error occurs <END>
<BEG> returns a flag indicate whether the parser writer should skip bit value a whitespace <END>
<BEG> configures the parser to skip bit value a whitespace <END>
<BEG> returns the start decimal range for { code character < = ' ' } that should be skip a whitespace <SEG> a determine by { link # getskipbitsaswhitespace } return the starting range after which character will be consider whitespace <END>
<BEG> returns the string representation of an empty value default to null < p > when writing <SEG> if the writer have an empty string to write to the output <SEG> the emptyvalue be use instead of an empty string return the string representation of an empty value <END>
<BEG> sets the string representation of an empty value default to null < p > if the writer have an empty string to write to the output <SEG> the emptyvalue be use instead of an empty string param emptyvalue the string representation of an empty value <END>
<BEG> returns the implementation of the interface { link rowwriterprocessor } which process input object into a manageable format for write <END>
<BEG> defines a processor for input object that convert them into a manageable format for write <END>
<BEG> returns a flag indicate whether automatic writing of header be enable <END>
<BEG> enables automatic writing of header when they be available <END>
<BEG> indicates whether the writer should expand record with less column than the number of header <END>
<BEG> returns the name of the column from where the error occur <SEG> if available <END>
<BEG> returns the record be process when the error occur <SEG> if available <END>
<BEG> defines the value be process when the error occur <END>
<BEG> associates a label in the exception message idenfied in curly brace with a value be process when the error occur <END>
<BEG> defines the column index be process when the error occur <END>
<BEG> defines the name of the column be process when the error occur <END>
<BEG> returns a flag indicate this exception have be handle by a user-provided { link processorerrorhandler } return { code true } if this exception have be handle to a user-provided { link processorerrorhandler } <SEG> otherwise { code false } <END>
<BEG> executes the sequence of conversion define use { link defaultconversionprocessor # convertfields conversion } <SEG> { link defaultconversionprocessor # convertindexes conversion } and { link defaultconversionprocessor # convertall conversion } <SEG> for every field in the give row <END>
<BEG> executes the sequence of reverse conversion define use { link defaultconversionprocessor # convertfields conversion } <SEG> { link defaultconversionprocessor # convertindexes conversion } and { link defaultconversionprocessor # convertall conversion } <SEG> for every field in the give row <END>
<BEG> maps a attribute or method to a column name param key attribute method name or specific method definition with parameter and return type param columnname name of column associate with the give key <END>
<BEG> maps multiple attribute or method to multiple column name param mapping the mapping to be add <END>
<BEG> tests whether a give attribute or method be map to a column param key the attribute or method name descriptor return { code true } if the key be map <END>
<BEG> updates the mapping of a attribute method so a mapped class member can target a user provide column <END>
<BEG> returns all prefix use by the key in this mapping <END>
<BEG> removes any mapping contain key that have a give attribute or method name <END>
<BEG> returns the index of any that be part of a sequence of header but not part of the selection <END>
<BEG> applies a sequence of conversion on all field <END>
<BEG> applies a sequence of conversion on a selection of enumeration that represent field param conversion the sequence of conversion to be apply return a selector of enumeration <END>
<BEG> applies any validation associate with a field at a give index in a record param index the index of parse value in a record param value the value of the record at the give index <END>
<BEG> returns the sequence of conversion to be apply at a give column index param index the index of the column where the conversion should be execute param expectedtype the type result from the conversion sequence <END>
<BEG> returns a copy of the field in this set return a copy of the field in this set <END>
<BEG> validates and add multiple field reference param field information that uniquely identifies each field return the set of currently select field <END>
<BEG> returns a string that represent the current field selection return a string that represent the current field selection <END>
<BEG> submits a custom { link inputanalysisprocess } to analyze the input buffer and potentially discover configuration option such a column separator be csv <SEG> data format <SEG> etc <END>
<BEG> returns a flag indicate whether or not all byte read from the wrap input stream have be consume <END>
<BEG> returns the detected { link charset } determine by the byte order mark bom available in the input provide in the constructor of this class <END>
<BEG> fills the bucket with the character take from a { link java io reader } < p > the { link charbucket # length } attribute will be update with the number of character extract param reader the source of character use to fill the bucket return the number of character extract from the reader throw ioexception if any error occur while extract character from the reader <END>
<BEG> stops the charinputreader from read character from the { link java io reader } provide in { link concurrentcharinputreader # start reader } and close it <END>
<BEG> stops the { link charbucket } load process and close the reader provide in the constructor of this class <END>
<BEG> returns the object store in this { link fixedinstancepool } entry <END>
<BEG> retrieves the next available entry in this instance pool <END>
<BEG> releases the give entry and make it available for allocation by { link fixedinstancepool # allocate } param e the entry to be release and make available for reuse <END>
<BEG> returns the accumulated value a a string <SEG> discard any trail whitespace character identify when use { link defaultcharappender # appendignoringwhitespace char } <SEG> { link defaultcharappender # appendignoringpadding char <SEG> char } or { link defaultcharappender # appendignoringwhitespaceandpadding char <SEG> char } < p > the internal accumulated value be discard after invoke this method a in { link defaultcharappender # reset } < p > if the accumulated value be empty i e <END>
<BEG> returns the accumulated value a a string <SEG> discard any trail whitespace character identify when use { link defaultcharappender # appendignoringwhitespace char } <SEG> { link defaultcharappender # appendignoringpadding char <SEG> char } or { link defaultcharappender # appendignoringwhitespaceandpadding char <SEG> char } < p > does not discard the accumulated value <END>
<BEG> returns the accumulated character <SEG> discard any trail whitespace character identify when use { link defaultcharappender # appendignoringwhitespace char } <SEG> { link defaultcharappender # appendignoringpadding char <SEG> char } or { link defaultcharappender # appendignoringwhitespaceandpadding char <SEG> char } < p > the internal accumulated value be discard after invoke this method a in { link defaultcharappender # reset } < p > if the accumulated value be empty i e <END>
<BEG> appends the content of another defaultcharappender <SEG> discard any of it trail whitespace character param appender the defaultcharappender instance get get content from <END>
<BEG> prepends the current accumulated value with a character param ch the character to prepend in front of the current accumulated value <END>
<BEG> matches a sequence of character against the current lookahead buffer <END>
<BEG> returns the lookahead value prepended with the current character param current the current character obtain by the parser return a { code string } form by the give character follow by the lookahead value if any <END>
<BEG> fills the lookahead buffer with a give number of character that will be extract from the wrap { link charinputreader } param numberofcharacters the number of character to read from the wrap { link charinputreader } <SEG> give in the constructor of this class <END>
<BEG> returns the singleton instance of noopcharappender return the singleton instance of noopcharappender <END>
<BEG> returns -1 a this appender do nothing <END>
<BEG> appends the give character and mark it a ignore if it be a padding character < p > if the give character be equal to { link format # getnormalizednewline } <SEG> then the character sequence return by { link format # getlineseparator } be go to be append <END>
<BEG> appends the give character and mark it a ignore if it be a whitespace { code ch < = ' ' } or a padding character < p > if the give character be equal to { link format # getnormalizednewline } <SEG> then the character sequence return by { link format # getlineseparator } be go to be append <END>
<BEG> appends the give character <END>
<BEG> writes the accumulated value to the { link java io writer } <SEG> discard any trail whitespace character identify when use { link writercharappender # appendignoringwhitespace char } <SEG> { link writercharappender # appendignoringpadding char <SEG> char } or { link writercharappender # appendignoringwhitespaceandpadding char <SEG> char } < p > the internal accumulated value be discard after invoke this method a in { link defaultcharappender # reset } < p > if the accumulated value be empty i e <END>
<BEG> configures the appender to allow line end sequence to be append as-is <SEG> without replace them by the normalized line separator character <END>
<BEG> rethrows the { link dataprocessingexception } param error the exception thrown during the process an input record <END>
<BEG> creates a literal { code normalizedstring } <SEG> mean it will only match with other { code string } or { code normalizedstring } if they have the exact same content include character case and surrounding whitespaces <END>
<BEG> creates a non-literal { code normalizedstring } <SEG> mean it will match with other { code string } or { code normalizedstring } regardless of different include character case and surrounding whitespaces <END>
<BEG> converts a collection of plain string into an array of { code normalizedstring } param args the string to convert to { code normalizedstring } return the { code normalizedstring } representation of all input string <END>
<BEG> converts a collection of normalized string into an array of { code string } param args the normalized string to convert back to to { code string } return the { code string } representation of all normalized string <END>
<BEG> converts multiple plain string into an array of { code normalizedstring } <SEG> ensure no duplicate { code normalizedstring } element exist <SEG> even if their original { code string } s be different <END>
<BEG> converts multiple plain string into an array of { code normalizedstring } <END>
<BEG> converts multiple plain string into an { code arraylist } of { code normalizedstring } <END>
<BEG> returns the literal representation of this { code normalizedstring } <SEG> mean it will only match with other { code string } or { code normalizedstring } if they have the exact same content include character case and surrounding whitespaces <END>
<BEG> analyzes a group of normalizedstring to identify any instance whose normalized content will generate clash <END>
<BEG> returns the internal string cache to allow user to tweak it size limit or clear it when appropriate return the string cache use to store { code normalizedstring } instance associate with their original { code string } <END>
<BEG> returns the sequence of value that represent the header each field in the input <END>
<BEG> returns the select index of all field a define in { link commonsettings } <END>
<BEG> indicates whether field select use the field selection method in { link commonsettings } be be reorder <END>
<BEG> returns the position of the current parsed value return the position of the current parsed value <END>
<BEG> adds a nullvalue a specify in { link commonsettings # getnullvalue } to the output and prepare the next position in the record to receive more value <END>
<BEG> discards the value parse so far <END>
<BEG> converts the java bean instance into a sequence of value for write <END>
<BEG> stores the generate java bean produce with a parsed record into a list <END>
<BEG> returns the record header <END>
<BEG> converts a parsed row to a java object <END>
<BEG> indicates whether this processor should persist the { link context } object that be send to the wrap { link processor } give in the constructor of this class <SEG> so all method of { link context } reflect the parser state at the time each row be parse <END>
<BEG> configures the switch to be case sensitive when compare value provide in { link # addswitchforvalue string <SEG> processor <SEG> string } with the column give in the constructor of this class <END>
<BEG> configures the switch to use a custom { link comparator } to compare value in the column to analyze which be give in the constructor of this class <END>
<BEG> defines a default { link processor } implementation to use when no match value be find in the input row <END>
<BEG> returns a flag indicate whether this switch contain a default { link processor } implementation to use when no match value be find in the input row <END>
<BEG> the list of parsed record return the list of parsed record <END>
<BEG> invoked by the parser after all value of a valid record have be process <END>
<BEG> returns a map of all bean process from the input <END>
<BEG> returns the { link com univocity parser common processor beanprocessor } responsible for process a give class param type the type of java bean be process param < t > the type of java bean be process return the { link com univocity parser common processor beanprocessor } that handle java bean of the give class <END>
<BEG> stores the row extract by the parser and them convert to an object array into a list <END>
<BEG> returns the list of parsed and converted record return the list of parsed and convert record <END>
<BEG> returns the header in use by the current row processor implementation <SEG> which can vary among row processor <END>
<BEG> returns a flag indicate whether all header declare in the annotated class must be present in the input <END>
<BEG> returns a mapper that allow user to manually define mapping from attribute method of a give class to columns to be parse or write <END>
<BEG> defines whether all header declare in the annotated class must be present in the input <END>
<BEG> creates a copy of the manually defined conversion to be apply over any column <END>
<BEG> determines whether or not an annotated field should be process <END>
<BEG> goes through a list of object and associate each value to a particular field of a java bean instance param instance the java bean instance that be go to have it property set param row the value to associate with each field of the javabean <END>
<BEG> converts a record with value extract from the parser into a java bean instance <END>
<BEG> returns the class of the annotated java bean instance that will be manipulate by this processor <END>
<BEG> copies the give column mapping over to this processor <END>
<BEG> removes any column value previously process <END>
<BEG> prepares to execute a column split process from the beginning <END>
<BEG> returns the value process for each column return a list of list <END>
<BEG> returns the header of a particular column param columnindex the index of the column whose header be to be obtain return the name of the column at the give index <SEG> or null if there 's no header define for the give column index <END>
<BEG> splits the row and add store the value of each column in it corresponding list in { link # columnvalues } param row the row whose column value will be split param context the current active parsing context <END>
<BEG> fills a give map associate each column name to it list o value param map the map to hold the value of each column throw illegalargumentexception if a column do not have a name associate to it <END>
<BEG> fills a give map associate each column index to it list of value param map the map to hold the value of each column <END>
<BEG> returns a map of column name and their respective list of value parse from the input <END>
<BEG> initializes each { link processor } use by this class <END>
<BEG> this method will by invoke by the parser once for each { link processor } use by this class <SEG> after the parsing process stop and all resource be close <END>
<BEG> returns the master row a identify by a { link masterdetailprocessor } return the master row <END>
<BEG> returns the detail row which be associate with the master row return the detail row which be associate with the master row <END>
<BEG> sets the detail row associate with the master row param detailrows the list of row associate with the master row <END>
<BEG> empties the detail row and set the master row to null <END>
<BEG> returns the header in use by the current row writer processor implementation <SEG> which can vary among row writer processor <END>
<BEG> returns the minimum row length base on the number of header and index size return the minimum length a row must have in order to be send to the output <END>
<BEG> returns the metadata information associate with the record generate by this factory class return the record metadata <END>
<BEG> assigns a default value to be assign to the problematic column that raise the current { link dataprocessingexception } <END>
<BEG> ignores the { link dataprocessingexception } and instruct the parser writer to continue process the record <END>
<BEG> prepares this error handler to be execute <END>
<BEG> flag indicate whether the current record will be skip <END>
<BEG> returns the parser configuration if any use by the routine of this utility class <END>
<BEG> allows writer of any give format to adjust it setting to take into account column header and length prior to write data in any routine <END>
<BEG> dumps the content of a { link java sql resultset } <END>
<BEG> reads all data from a give input and write it to an output <END>
<BEG> iterates over an input to produce instance of annotated java bean on demand <END>
<BEG> returns a flag indicate whether resource use for write should be keep open after be use by the routine available from this object <SEG> when applicable <END>
<BEG> allows prevent resource use for write from be close after be use by the routine available from this object <SEG> when applicable <END>
<BEG> returns the total number of row the input contains <END>
<BEG> returns the size limit of this string cache <END>
<BEG> defines the size limit of this string cache 16<SEG>384 by default <END>
<BEG> returns the location of the last character read from before the error occur <END>
<BEG> returns the last chunk of content parse before the error take place return the last chunk of content parse before the error take place <END>
<BEG> returns the data that fail to be write return the data that fail to be write <END>
<BEG> returns the character data that fail to be write return the character data that fail to be write <END>
<BEG> converts a string to bigdecimal <END>
<BEG> converts a boolean back to a string < p > the return value depend on the list of value for true false provide in the constructor of this class <END>
<BEG> converts a string to a boolean param input a string to be convert into a boolean value <END>
<BEG> returns the { code boolean } value represent by a { code string } <SEG> a define by set of strings that represent { code true } and { code false } value <END>
<BEG> converts a formatted date string to an instance of calendar <END>
<BEG> returns a singleton instance of { link tostringconversion } return a singleton instance of { link tostringconversion } <END>
<BEG> returns a { link trimconversion } that limit the output to a fixed length param length the maximum length a value can contain <END>
<BEG> returns a new instance of { link regexconversion } param replaceregex the regular expression use to match content of a give input string param replacement the replacement content to replace any content match by the give regular expression return the new instance of { link regexconversion } create with the give parameter <END>
<BEG> returns a new instance of { link nullstringconversion } param nullrepresentations the sequence of strings that represent a null value <END>
<BEG> returns a new instance of { link dateconversion } param locale the { link locale } that determine how the date mask should be format <END>
<BEG> returns a new instance of { link dateconversion } param dateformats list of acceptable date pattern <END>
<BEG> returns a new instance of { link dateconversion } param dateifnull default date value to be return when the input string be null <END>
<BEG> returns a new instance of { link dateconversion } param timezone the { link timezone } of the date to be format param locale the { link locale } that determine how the date mask should be format <END>
<BEG> returns a new instance of { link calendarconversion } param timezone the { link timezone } to be consider param locale the { link locale } that determine how the date mask should be format <END>
<BEG> returns a new instance of { link numericconversion } param numbertype type of number to be return <END>
<BEG> returns a new instance of { link booleanconversion } param valuesfortrue strings that identify the boolean value < i > true < i > <END>
<BEG> returns a new instance of { link enumconversion } param < t > the { code enum } type param enumtype the enumeration type to be convert from to { code string } return new instance of { link enumconversion } <END>
<BEG> returns a new instance of { link enumconversion } param < t > the { code enum } type param enumtype the enumeration type to be convert from to { code string } param valueifstringisnull the default enumeration constant to use if the input { code string } be { code null } param valueifenumisnull the default { code string } value to use if the input { code enum } constant be { code null } param customenumelement name of custom element of the enumeration attribute or method whose value should be use to match equivalent { code string } s param selector the selection element of the enumeration to use for match { code string } s return new instance of { link enumconversion } <END>
<BEG> returns a new instance of { link formatteddateconversion } param pattern date mask to be be use to convert a date object i e <END>
<BEG> returns a { link validatedconversion } that do n't allow null value return a not-null validator <END>
<BEG> returns a { link validatedconversion } that do n't allow null or blank value return a not-blank validator <END>
<BEG> returns a { link validatedconversion } that verify the format of a give value param regextomatch regular expression to match and ensure the value have a give format return a value format validator <END>
<BEG> returns a { link validatedconversion } that check for null or blank value <END>
<BEG> returns a new instance of { link validatedconversion } to validate value of a record param nullable flag to indicate whether value can be null param allowblanks flag to indicate whether value can be blank param oneof list of accepted value <END>
<BEG> returns a new instance of { link validatedconversion } to validate value of a record nulls and blank be not be allow by default <END>
<BEG> unsupported operation <END>
<BEG> applies the tolowercase operation in the input and return the result <END>
<BEG> converts a value of type < b > o < b > back to a value of type < b > i < b > param input the input of type < b > o < b > to be convert to an output < b > i < b > return the conversion result <SEG> or the value of { link nullconversion # valueonnulloutput } if the input object be null <END>
<BEG> return a default value of type < b > o < b > to be return when the input of type < b > i < b > be null <END>
<BEG> return default instance of < b > i < b > to be return when an input of type < b > o < b > be null <END>
<BEG> defines the default value of type < b > o < b > which should be return when { link nullconversion # execute object } be invoked with a null < b > i < b > param valueonnullinput the default value of type < b > t < b > when convert from a null input <END>
<BEG> converts an object to null <END>
<BEG> converts a null input to a string representation <END>
<BEG> returns the implementation of { code number } that should be use when convert numeric data <END>
<BEG> defines a specific implementation of { code number } that should be use when convert numeric data <END>
<BEG> adds a new numeric pattern to be use to parse input strings and convert them to number <END>
<BEG> creates an instance of < b > t < b > from a string representation <END>
<BEG> return a default value of type < b > t < b > to be return when the input string be null <END>
<BEG> return default string value to be return when an input of type < b > t < b > be null <END>
<BEG> defines a default value of type < b > t < b > which should be return when the input string be null <END>
<BEG> executes the regular expression provide in the constructor of this class against the input and replace any matched content with the replacement string <END>
<BEG> removes lead and trail white space from the input and return the result <END>
<BEG> provides a basic csv configuration that allow parse csv file produce by microsoft excel <END>
<BEG> provides a basic csv configuration for parse csv file in accordance with the rule establish by < a href= http : tool ietf org html rfc4180 > rfc 4180 < a > return a pre-configured { link csvparsersettings } object with suggested setting for parse csv use the < a href= http : tool ietf org html rfc4180 > rfc 4180 < a > rule <END>
<BEG> provides a basic csv configuration that allow write csv file that can be read by microsoft excel <END>
<BEG> provides a basic csv configuration for write csv file in accordance with the rule establish by < a href= http : tool ietf org html rfc4180 > rfc 4180 < a > return a pre-configured { link csvwritersettings } object with the setting require to generate csv file in accordance with the rule establish by < a href= http : tool ietf org html rfc4180 > rfc 4180 < a > <END>
<BEG> returns the character use for escape value where the field delimiter be part of the value <END>
<BEG> identifies whether or not a give character be use for escape value where the field delimiter be part of the value param ch the character to be verified return true if the give character be the character use for escape value <SEG> false otherwise <END>
<BEG> returns the character use for escape quote inside an already quote value <END>
<BEG> identifies whether or not a give character be use for escape quote inside an already quote value <END>
<BEG> returns the field delimiter character <END>
<BEG> defines the field delimiter a a sequence of character <END>
<BEG> identifies whether or not a give character represent a field delimiter param sequence the character sequence to be verified return true if the give sequence be the field delimiter character sequence <SEG> false otherwise <END>
<BEG> returns the character use to escape the character use for escape quote define by { link # getquoteescape } <END>
<BEG> identifies whether or not a give character be use to escape the character use for escape quote define by { link # getquoteescape } <END>
<BEG> returns the csv format detect when one of the following setting be enable : < ul > < li > { link commonparsersettings # islineseparatordetectionenabled } < li > < li > { link csvparsersettings # isdelimiterdetectionenabled } < li > < li > { link csvparsersettings # isquotedetectionenabled } < li > < ul > the detected format will be available once the parsing process be initialize i e <END>
<BEG> allows change the format of the input on the fly <END>
<BEG> returns an instance of charappender with the configured limit of maximum character per column and the default value use to represent an empty value when the string parse from the input <SEG> within quote <SEG> be empty < p > this override the parent 's version because the csv parser do not rely on the appender to identify null value <SEG> but on the other hand <SEG> the appender be require to identify empty value <END>
<BEG> indicates whether the csv parser should accept unescaped quote inside quote value and parse them normally <END>
<BEG> configures how to handle unescaped quote inside quote value <END>
<BEG> configures the parser to process value with unescaped quote <SEG> and stop accumulate character and consider the value parse when a delimiter be find <END>
<BEG> when parse unescaped quote <SEG> indicate the parser should stop accumulate character and consider the value parse when a delimiter be find <END>
<BEG> indicates whether escape sequence should be process in unquoted value <END>
<BEG> configures the parser to process escape sequence in unquoted value <END>
<BEG> configures the parser to keep any escape sequence if they be present in the input i e <END>
<BEG> returns a flag indicate whether the parser should analyze the input to discover the column delimiter character <END>
<BEG> returns a flag indicate whether the parser should analyze the input to discover the quote character <END>
<BEG> configures the parser to analyze the input before parse to discover the quote character <END>
<BEG> convenience method to turn on all format detection feature in a single method call <SEG> namely : < ul > < li > { link # setdelimiterdetectionenabled boolean <SEG> char [ ] } < li > < li > { link # setquotedetectionenabled boolean } < li > < li > { link # setlineseparatordetectionenabled boolean } < li > < ul > param delimitersfordetection possible delimiters for detection <SEG> in order of priority <END>
<BEG> flag indicate whether the parser should replace line separator <SEG> specify in { link format # getlineseparator } by the normalized line separator character specify in { link format # getnormalizednewline } <SEG> even on quote value <END>
<BEG> configures the handling of value with unescaped quote <END>
<BEG> flag indicate whether the parser should keep enclose quote character in the value parse from the input <END>
<BEG> configures the parser to keep enclose quote character in the value parse from the input <END>
<BEG> returns the sequence of possible delimiters for detection when { link # isdelimiterdetectionenabled } evaluate to { code true } <SEG> in order of priority <END>
<BEG> returns whether or not trail whitespaces from within quote value should be skip default to false note : if { link # keepquotes } evaluate to { code true } <SEG> value wo n't be trim <END>
<BEG> defines whether or not trail whitespaces from quote value should be skip default to false note : if { link # keepquotes } evaluate to { code true } <SEG> value wo n't be trim <END>
<BEG> configures the parser to trim any whitespaces around value extract from within quote <END>
<BEG> initializes the csv writer with csv-specific configuration param settings the csv writer configuration <END>
<BEG> indicates that all write value should be enclose within quote a define in { link csvformat } < p > defaults to false return true if all write value should be enclose within quote <SEG> false otherwise <END>
<BEG> indicates indicate whether or not all write value should be enclose within quote a define in { link csvformat } < p > defaults to false < p > by default <SEG> only value that contain a field separator be enclose within quote <END>
<BEG> configures the writer to prevent it to introduce escape sequence <END>
<BEG> returns the list of character that when present in a value to be write <SEG> will force the output value to be enclose in quote <END>
<BEG> defines one or more trigger for enclose a value within quote <END>
<BEG> queries if a give character be a quotation trigger <SEG> i e <END>
<BEG> indicates whether the csv writer should escape value that contain the quote character <SEG> by enclose the entire value in quote <END>
<BEG> configures the csv writer to escape value that contain the quote character <SEG> by enclose the entire value in quote <END>
<BEG> calculates how many white pace to introduce before a value so it be print a specify by the alignment type <END>
<BEG> adds the range of the next field in a fixed-width record <END>
<BEG> returns the sequence of field to ignore <END>
<BEG> returns the sequence of field whose pad character must must not be retain in the parsed value return the sequence that have an explicit 'keeppadding ' flag <END>
<BEG> returns the number of field in a fixed-width record return the number of field in a fixed-width record <END>
<BEG> returns the name of each field in a fixed-width record <SEG> if any return the name of each field in a fixed-width record <SEG> or null if no name have be define <END>
<BEG> returns a copy of the sequence of field length of a fixed-width record return a copy of the sequence of field length of a fixed-width record <END>
<BEG> modifies the length of a give field param name the name of the field whose length must be alter param newlength the new length of the give field <END>
<BEG> returns the index of a field name <END>
<BEG> applies a custom pad character to a give list of field param pad the padding to apply param position the position of the field that should use the give padding character <END>
<BEG> configures a give list of field to retain the padding character in any parsed value <SEG> override the any default set for the whole input in { link fixedwidthparsersettings # getkeeppadding } param position the position of the field that should keep the padding character param position additional position <END>
<BEG> configures a give list of field to retain the padding character in any parsed value <SEG> override the any default set for the whole input in { link fixedwidthparsersettings # getkeeppadding } param name the name of the first field that should keep the padding character param name the name of more field that should keep the padding character <END>
<BEG> configures a give list of field to remove the padding character in any parsed value <SEG> override the any default set for the whole input in { link fixedwidthparsersettings # getkeeppadding } param name the name of the first field that have any padding character remove param name the name of the field that should have any padding character remove <END>
<BEG> returns the padding character use to represent unwritten space <END>
<BEG> identifies whether or not a give character represent a padding character param pad the character to be verified return true if the give character be the pad character <SEG> false otherwise <END>
<BEG> returns the sequence of length to be read by the parser to form a record <END>
<BEG> returns the sequence of padding use by each field of each record <END>
<BEG> returns the sequence of alignment to consider for each field of each record <END>
<BEG> indicates whether or not any trail character beyond the record 's length should be skip until the newline be reach default to { code false } < p > for example <SEG> if the record length be 5 <SEG> but the row contain 12345678\n <SEG> then the portion contain 678\n will be discard and not consider part of the next record return return true if any trail character beyond the record 's length should be skip until the newline be reach <SEG> false otherwise <END>
<BEG> defines whether or not any trail character beyond the record 's length should be skip until the newline be reach default to { code false } < p > for example <SEG> if the record length be 5 <SEG> but the row contain 12345678\n <SEG> then the portion contain 678\n will be discard and not consider part of the next record param skiptrailingcharsuntilnewline a flag indicate if any trail character beyond the record 's length should be skip until the newline be reach <END>
<BEG> returns the default fixedwidthformat configure to handle fixed-width input return and instance of fixedwidthformat configure to handle fixed-width input <END>
<BEG> returns an instance of charappender with the configured limit of maximum character per column and <SEG> default value use to represent a null value when the string parse from the input be empty <SEG> and the padding character to handle unwritten position < p > this override the parent implementation to create a charappender capable of handle pad character that represent unwritten position <END>
<BEG> indicates whether header should be parse use the default pad specify in { link fixedwidthformat # getpadding } instead of any custom padding associate with a give field in { link fixedwidthfields # setpadding char <SEG> int } defaults to { code true } return { code true } if the default padding be to be use when read header <SEG> otherwise { code false } <END>
<BEG> defines whether header should be parse use the default pad specify in { link fixedwidthformat # getpadding } instead of any custom padding associate with a give field in { link fixedwidthfields # setpadding char <SEG> int } param usedefaultpaddingforheaders flag indicate whether the default padding be to be use when parse header <END>
<BEG> indicate the padding character should be keep in the parsed value < i > default to { code false } < i > this setting can be override for individual field through { link fixedwidthfields # strippaddingfrom string <SEG> string } and { link fixedwidthfields # keeppaddingon string <SEG> string } return flag indicate the pad character should be keep in the parsed value <END>
<BEG> configures the fixed-width parser to retain the padding character in any parsed value < i > default to { code false } < i > this setting can be override for individual field through { link fixedwidthfields # strippaddingfrom string <SEG> string } and { link fixedwidthfields # keeppaddingon string <SEG> string } param keeppadding flag indicate the pad character should be keep in the parsed value <END>
<BEG> returns the default alignment to use when write header <END>
<BEG> returns a flag indicate whether each record <SEG> when write <SEG> should be follow by a line separator a specify in { link format # getlineseparator } <END>
<BEG> defines the character use for escape special character in tsv input : \t <SEG> \n <SEG> \r and \ <END>
<BEG> returns the character use for escape special character in tsv input : \t <SEG> \n <SEG> \r and \ return the escape character <END>
<BEG> returns the character that should be use to represent an escaped tab <SEG> i e <END>
<BEG> identifies whether or not a give character be use for escape special character in tsv \t <SEG> \n <SEG> \r and \ <END>
<BEG> identifies whether or line end with the escape character define by { link tsvformat # getescapechar } and follow by a line separator character should be join with the following line <END>
<BEG> defines how the parser should handle escaped line separator <END>
<BEG> returns the default tsvformat configure to handle tsv input return and instance of tsvformat configure to handle tsv <END>
<BEG> get the value of one of the field of a datetime <END>
<BEG> output the instant use the specify format pattern <END>
<BEG> converts this duration to a period instance use the standard period type and the iso chronology <END>
<BEG> compares this duration with the specify duration base on length and direction <END>
<BEG> is the length of this duration equal to the duration pass in <END>
<BEG> compares this object with the specified object for equality base on the millisecond length <END>
<BEG> gets a hash code for the duration that be compatible with the equal method <END>
<BEG> gets the value a a string in the iso8601 duration format include only second and millisecond <END>
<BEG> checks if the field type specify be support by this instant and chronology <END>
<BEG> get this object a a datetime in the same zone <END>
<BEG> get this object a a datetime use the same chronology but a different zone <END>
<BEG> get this object a a datetime use the give chronology and it zone <END>
<BEG> compares this object with the specified object for equality base on the millisecond instant <SEG> chronology and time zone <END>
<BEG> gets a hash code for the instant a define in < code > readableinstant < code > <END>
<BEG> compares this object with the specified object for ascend millisecond instant order <END>
<BEG> is this instant strictly after the millisecond instant pass in compare solely by millisecond <END>
<BEG> is this instant strictly after the current instant comparing solely by millisecond <END>
<BEG> is this instant strictly after the instant pass in compare solely by millisecond <END>
<BEG> output the date time in iso8601 format yyyy-mm-ddthh : mm : s ssszz <END>
<BEG> uses the specified formatter to convert this partial to a string <END>
<BEG> gets the start of this time interval <SEG> which be inclusive <SEG> a a datetime <END>
<BEG> does this time interval contain the specified millisecond instant <END>
<BEG> is this interval equal to the specify interval ignore the chronology <END>
<BEG> is this time interval entirely before the specify instant <END>
<BEG> get this time interval a a < code > mutableinterval < code > <END>
<BEG> gets the duration of this time interval in millisecond <END>
<BEG> gets the duration of this time interval <END>
<BEG> converts the duration of the interval to a < code > period < code > use the all period type <END>
<BEG> compares this object with the specified object for equality base on start and end millis plus the chronology <END>
<BEG> hashcode compatible with equal method <END>
<BEG> output a string in iso8601 interval format <END>
<BEG> gets the field type at the specified index <END>
<BEG> gets an array of the field type that this partial support <END>
<BEG> gets an array of the field that this partial support <END>
<BEG> checks whether the field specify be support by this partial <END>
<BEG> gets the index of the specified field <SEG> or -1 if the field be unsupported <END>
<BEG> gets the index of the specified field <SEG> throw an exception if the field be unsupported <END>
<BEG> gets the index of the first field to have the specify duration <SEG> throw an exception if the field be unsupported <END>
<BEG> resolves this partial against another complete instant to create a new full instant <END>
<BEG> compares this readablepartial with another return true if the chronology <SEG> field type and value be equal <END>
<BEG> compares this partial with another return an integer indicate the order <END>
<BEG> is this partial late than the specify partial <END>
<BEG> is this partial the same a the specify partial <END>
<BEG> get this object a a < code > mutableperiod < code > <END>
<BEG> compares this object with the specified object for equality base on the value of each field <END>
<BEG> gets a hash code for the period a define by readableperiod <END>
<BEG> gets the value a a string in the iso8601 duration format <END>
<BEG> checks the specified chronology before store it <SEG> potentially alter it <END>
<BEG> gets the millisecond of the datetime instant from the java epoch of 1970-01-01t00:00:00z <END>
<BEG> converts this duration to a period instance use the specified period type and chronology <END>
<BEG> converts this duration to a period instance by add the duration to a start instant to obtain an interval use the standard period type <END>
<BEG> converts this duration to a period instance by add the duration to a start instant to obtain an interval <END>
<BEG> converts this duration to an interval starting at the specify instant <END>
<BEG> gets the value of the field at the specified index <END>
<BEG> gets the chronology of the partial which be never null <END>
<BEG> sets the value of all field <END>
<BEG> validates a period type <SEG> convert null to a default value and check the type be suitable for this instance <END>
<BEG> gets the total millisecond duration of this period relative to a start instant <END>
<BEG> sets all the field of this period from another <END>
<BEG> sets the value of a field in this period <END>
<BEG> merges the field from another period <END>
<BEG> calculates the number of whole unit between the two specify datetimes <END>
<BEG> calculates the number of whole unit between the two specify partial datetimes <END>
<BEG> creates a new instance represent the number of complete standard length unit in the specified period <END>
<BEG> gets the number of field that this period support <SEG> which be one <END>
<BEG> checks whether the duration field specify be support by this period <END>
<BEG> returns the same base chronology a pass into the constructor <END>
<BEG> adds the period to the instant <SEG> specify the number of time to add <END>
<BEG> checks if this chronology instance equal another <END>
<BEG> gets a debugging tostring <END>
<BEG> get the millis for the first week of a year <END>
<BEG> get the millisecond for a particular date <END>
<BEG> param instant millis from 1970-01-01t00:00:00z param year precalculated year of millis <END>
<BEG> gets the maximum number of day in the month specify by the instant <END>
<BEG> is the specified instant a leap day ? <END>
<BEG> get the day of the year component of the specified time instant <END>
<BEG> gets the number of day in the specified month and year <END>
<BEG> add to the month component of the specified time instant wrapping around within that component if necessary <END>
<BEG> set the month component of the specified time instant < p > if the new month have less total day than the specified day of the month <SEG> this value be coerce to the near sane value <END>
<BEG> get the week of a week base year component of the specified time instant <END>
<BEG> standard instance of a buddhist chronology <SEG> that match sun 's buddhistcalendar class <END>
<BEG> gets the chronology in the utc time zone <END>
<BEG> gets an instance of the copticchronology <END>
<BEG> gets an instance of the copticchronology in the give time zone <END>
<BEG> get the value of the specified time instant <END>
<BEG> get the abbreviated textual value of the specified time instant <END>
<BEG> convert the specified text and locale into a value <END>
<BEG> get the minimum value that this field can have <END>
<BEG> get the maximum length of the text return by this field <END>
<BEG> get the maximum length of the abbreviated text return by this field <END>
<BEG> obtains the symbol for a locale <END>
<BEG> gets the leap year pattern type <END>
<BEG> create a lenientchronology for any chronology <END>
<BEG> a lenient chronology be only equal to a lenient chronology with the same base chronology <END>
<BEG> returns the inclusive low limit instant <END>
<BEG> if this limitchronology be already utc <SEG> then this be return <END>
<BEG> if this limitchronology have the same time zone a the one give <SEG> then this be return <END>
<BEG> a limit chronology be only equal to a limit chronology with the same base chronology and limit <END>
<BEG> a suitable hashcode for the chronology <END>
<BEG> create a zonedchronology for any chronology <SEG> override any time zone it may already have <END>
<BEG> extracts the millis from an object of this converter 's type <END>
<BEG> extracts the chronology from an object of this converter 's type where the time zone be specify <END>
<BEG> extracts the value of the partial from an object of this converter 's type <END>
<BEG> selects a suitable period type for the give object <END>
<BEG> gets a debugging string version of this converter <END>
<BEG> gets the chronology <SEG> which be the gjchronology if a gregoriancalendar be use <SEG> buddhistchronology if a buddhistcalendar be use or isochronology otherwise <END>
<BEG> gets the millis <SEG> which be the calendar millis value <END>
<BEG> returns calendar class <END>
<BEG> gets the best converter for the object specify <END>
<BEG> gets a copy of the set of converter <END>
<BEG> gets a debug representation of the object <END>
<BEG> returns the close matching converter for the give type <SEG> or null if none find <END>
<BEG> returns the amount of converter in the set <END>
<BEG> copies all the converter in the set to the give array <END>
<BEG> returns a copy of this set <SEG> with the give converter add <END>
<BEG> gets the millisecond instant <SEG> which be the long value <END>
<BEG> gets the millisecond duration <SEG> which be zero <END>
<BEG> extracts interval endpoint value from an object of this converter 's type <SEG> and set them into the give readwritableinterval <END>
<BEG> extracts duration value from an object of this converter 's type <SEG> and set them into the give readwritableduration <END>
<BEG> gets the millisecond length of the interval <END>
<BEG> sets the value of the mutable duration from the specify interval <END>
<BEG> gets the millis <SEG> which be the iso parse string value <END>
<BEG> sets the value of the mutable interval from the string <END>
<BEG> parses a { code datemidnight } from the specify string use a formatter <END>
<BEG> returns a copy of this date with a different chronology <SEG> potentially change the day in unexpected way <END>
<BEG> returns a copy of this date plus the specified number of year <END>
<BEG> returns a copy of this date with the specify duration take away <END>
<BEG> gets the property object for the specified type <SEG> which contain many useful method <END>
<BEG> converts this object to an < code > interval < code > encompass the whole of this day <END>
<BEG> returns a datetimecomparator the compare the entire date time value <END>
<BEG> returns a datetimecomparator with a low and upper limit <END>
<BEG> returns a comparator that only considers date field <END>
<BEG> compare two object against only the range of date time field a specify in the constructor <END>
<BEG> compares this comparator to another <END>
<BEG> get the millis of second field type <END>
<BEG> get the hour of day 0-23 field type <END>
<BEG> get the hour of day offset to 1-24 field type <END>
<BEG> get the hour of be pm 0-11 field type <END>
<BEG> get the hour of be pm offset to 1-12 field type <END>
<BEG> get the week of a week base year field type <END>
<BEG> get the year field type <END>
<BEG> resets the current time to return the system time <END>
<BEG> sets the current time to return a fixed millisecond time <END>
<BEG> sets the current time to return the system time plus an offset <END>
<BEG> sets the provider of the current time to class specify <END>
<BEG> gets the millisecond instant from the specify instant object handle null <END>
<BEG> gets the chronology from the specify instant object handle null <END>
<BEG> gets the chronology from the specify instant base interval handle null <END>
<BEG> gets the interval handle null <END>
<BEG> gets the period type handle null <END>
<BEG> checks whether the partial be contiguous <END>
<BEG> gets the default map of time zone name <END>
<BEG> gets the millisecond offset to add to utc to get local time <END>
<BEG> gets the millisecond offset to subtract from local time to get utc time <END>
<BEG> get the datetime zone a a { link java util timezone } <END>
<BEG> subtracts a duration value which may be negative from the instant <END>
<BEG> gets the field type be use <END>
<BEG> gets the value of this property from the instant a a string <END>
<BEG> compare this field to the same field on another instant <END>
<BEG> compare this field to the same field on another partial instant <END>
<BEG> gets a suitable hashcode for the object <END>
<BEG> output a debugging string <END>
<BEG> gets the chronology of the datetime that this property be link to <END>
<BEG> returns the difference between this field property instant and the one pass in <SEG> in the unit of this field <END>
<BEG> returns the interval that represent the range of the minimum and maximum value of this field <END>
<BEG> return true always <END>
<BEG> get the human-readable <SEG> text value of this field from the field value <END>
<BEG> get the human-readable <SEG> short text value of this field from the field value <END>
<BEG> adds a value which may be negative to the partial instant <SEG> throw an exception if the maximum size of the instant be reach <END>
<BEG> adds a value which may be negative to the partial instant <SEG> wrap the whole partial if the maximum size of the partial be reach <END>
<BEG> adds a value which may be negative to the instant value <SEG> wrap within this field <END>
<BEG> sets a value use the specify partial instant <END>
<BEG> sets a value in the millisecond supply from a human-readable <SEG> text value <END>
<BEG> returns whether this field be 'leap ' for the specify instant <END>
<BEG> gets the amount by which this field be 'leap ' for the specify instant <END>
<BEG> if this field be to leap <SEG> then it would be in unit describe by the return duration <END>
<BEG> get the maximum text value for this field <END>
<BEG> get the maximum short text value for this field <END>
<BEG> round to the high whole unit of this field <END>
<BEG> returns the fractional duration millisecond of this field <END>
<BEG> get the value of this field from the millisecond <SEG> which be approximate if this field be imprecise <END>
<BEG> get the value of this field from the millisecond relative to an instant <END>
<BEG> get the millisecond duration of this field from it value <SEG> which be approximate if this field be imprecise <END>
<BEG> gets the wrapped date time field <END>
<BEG> gets the wrapped duration field <END>
<BEG> set the specified amount of scale unit to the specified time instant <END>
<BEG> returns a scaled version of the wrapped field 's unit duration field <END>
<BEG> returns the divisor apply <SEG> in the field 's unit <END>
<BEG> returns a lenient version of the give field <END>
<BEG> returns the amount of millisecond per unit value of this field <END>
<BEG> returns the offset add to the field value <END>
<BEG> get the amount of fractional unit from the specified time instant <END>
<BEG> add to the component of the specified time instant <SEG> wrap around within that component if necessary <END>
<BEG> set the specified amount of unit to the specified time instant <END>
<BEG> returns the range duration of this field <END>
<BEG> returns false by default <END>
<BEG> returns the duration per unit value of this field <END>
<BEG> this field be precise <END>
<BEG> get the value of this field from the millisecond <END>
<BEG> compares this duration field to another <END>
<BEG> gets a hash code for this instance <END>
<BEG> add the specified amount to the specified time instant <SEG> wrap around within the remainder range if necessary <END>
<BEG> get the minimum value for the field <SEG> which be always zero <END>
<BEG> get the maximum value for the field <SEG> which be always one less than the divisor <END>
<BEG> gets an instance of unsupporteddurationfield for a specific name field <END>
<BEG> always return zero <SEG> indicate that sort order be not relevant <END>
<BEG> factory to create a formatter from a pattern string <END>
<BEG> factory to create a format from a two character style pattern <END>
<BEG> returns the pattern use by a particular style and locale <END>
<BEG> creates a format that output a short date format <END>
<BEG> parses the give pattern and append the rule to the give datetimeformatterbuilder <END>
<BEG> is this formatter capable of print <END>
<BEG> gets the internal printer object that perform the real printing work <END>
<BEG> returns a new formatter with a different locale that will be use for printing and parsing <END>
<BEG> gets the locale that will be use for printing and parsing <END>
<BEG> returns a new formatter that will create a datetime with a time zone equal to that of the offset of the parsed string <END>
<BEG> returns a new formatter that will use the specified chronology in preference to that of the printed object <SEG> or iso on a parse <END>
<BEG> gets the chronology to use a an override <END>
<BEG> gets the pivot year to use a an override <END>
<BEG> returns a new formatter that will use the specify default year <END>
<BEG> gets the default year for parse month and day <END>
<BEG> prints a readableinstant <SEG> use the chronology supply by the instant <END>
<BEG> prints a readablepartial <END>
<BEG> prints a readableinstant to a string <END>
<BEG> prints a millisecond instant to a string <END>
<BEG> prints a readablepartial to a new string <END>
<BEG> parses a datetime from the give text <SEG> at the give position <SEG> save the result into the field of the give readwritableinstant <END>
<BEG> parses a datetime from the give text <SEG> return the number of millisecond since the epoch <SEG> 1970-01-01t00:00:00z <END>
<BEG> parses only the local date from the give text <SEG> return a new localdate <END>
<BEG> parses a date-time from the give text <SEG> return a new datetime <END>
<BEG> resets the state back to that when the object be construct <END>
<BEG> returns the time zone use by computemillis <END>
<BEG> set a time zone to be use when computemillis be call <END>
<BEG> returns the time zone offset in millisecond use by computemillis <END>
<BEG> set a time zone offset to be use when computemillis be call <END>
<BEG> sets the pivot year to use when parse two digit year <END>
<BEG> saves a datetime field value <END>
<BEG> saves the state of this bucket <SEG> return it in an opaque object <END>
<BEG> restores the state of this bucket from a previously save state <END>
<BEG> computes the parsed datetime by set the save field <END>
<BEG> converts an integer to a string <SEG> prepended with a variable amount of ' 0 ' pad character <SEG> and append it to the give appendable <END>
<BEG> converts an integer to a string <SEG> and append it to the give appendable <END>
<BEG> returns a generic iso date parser for parse local date <END>
<BEG> returns a generic iso date parser for parse date <END>
<BEG> returns a generic iso time parser <END>
<BEG> returns a generic iso datetime parser which parse either a date or a time or both <END>
<BEG> returns a generic iso datetime parser where the date be mandatory and the time be optional <END>
<BEG> returns a formatter for a full date a four digit year <SEG> two digit month of year <SEG> and two digit day of month yyyy-mm-dd <END>
<BEG> returns a formatter for a two digit hour of day <SEG> two digit minute of hour <SEG> two digit second of minute <SEG> three digit fraction of second <SEG> and time zone offset hh : mm : s ssszz <END>
<BEG> returns a formatter for a two digit hour of day <SEG> two digit minute of hour <SEG> two digit second of minute <SEG> and time zone offset hh : mm : sszz <END>
<BEG> returns a formatter for a two digit hour of day <SEG> two digit minute of hour <SEG> two digit second of minute <SEG> three digit fraction of second <SEG> and time zone offset prefix by 't ' 't'hh : mm : s ssszz <END>
<BEG> returns a formatter for a two digit hour of day <SEG> two digit minute of hour <SEG> two digit second of minute <SEG> and time zone offset prefix by 't ' 't'hh : mm : sszz <END>
<BEG> returns a formatter that combine a full date and time <SEG> separate by a 't ' yyyy-mm-dd't'hh : mm : s ssszz <END>
<BEG> returns a formatter for a full ordinal date <SEG> use a four digit year and three digit dayofyear yyyy-ddd <END>
<BEG> returns a formatter for a full ordinal date and time <SEG> use a four digit year and three digit dayofyear yyyy-ddd't'hh : mm : s ssszz <END>
<BEG> returns a formatter for a full ordinal date and time without millis <SEG> use a four digit year and three digit dayofyear yyyy-ddd't'hh : mm : sszz <END>
<BEG> returns a formatter for a full date a four digit weekyear <SEG> two digit week of weekyear <SEG> and one digit day of week xxxx- ' w'ww-e <END>
<BEG> returns a formatter that combine a full weekyear date and time <SEG> separate by a 't ' xxxx- ' w'ww-e't'hh : mm : s ssszz <END>
<BEG> returns a basic formatter for a full date a four digit year <SEG> two digit month of year <SEG> and two digit day of month yyyymmdd <END>
<BEG> returns a basic formatter for a two digit hour of day <SEG> two digit minute of hour <SEG> two digit second of minute <SEG> three digit millis <SEG> and time zone offset hhmmss sssz <END>
<BEG> returns a basic formatter for a two digit hour of day <SEG> two digit minute of hour <SEG> two digit second of minute <SEG> and time zone offset hhmmssz <END>
<BEG> returns a basic formatter for a two digit hour of day <SEG> two digit minute of hour <SEG> two digit second of minute <SEG> three digit millis <SEG> and time zone offset prefix by 't ' 't'hhmmss sssz <END>
<BEG> returns a basic formatter for a two digit hour of day <SEG> two digit minute of hour <SEG> two digit second of minute <SEG> and time zone offset prefix by 't ' 't'hhmmssz <END>
<BEG> returns a basic formatter that combine a basic date and time <SEG> separate by a 't ' yyyymmdd't'hhmmss sssz <END>
<BEG> returns a basic formatter that combine a basic date and time without millis <SEG> separate by a 't ' yyyymmdd't'hhmmssz <END>
<BEG> returns a formatter for a full ordinal date and time <SEG> use a four digit year and three digit dayofyear yyyyddd't'hhmmss sssz <END>
<BEG> returns a basic formatter that combine a basic weekyear date and time <SEG> separate by a 't ' xxxx ' w'wwe't'hhmmss sssz <END>
<BEG> returns a basic formatter that combine a basic weekyear date and time without millis <SEG> separate by a 't ' xxxx ' w'wwe't'hhmmssz <END>
<BEG> returns a formatter for a four digit year <END>
<BEG> returns a formatter for a four digit year and two digit month of year <END>
<BEG> returns a formatter for a two digit hour of day <END>
<BEG> returns a formatter for a two digit hour of day and two digit minute of hour <END>
<BEG> returns a formatter for a two digit hour of day <SEG> two digit minute of hour <SEG> and two digit second of minute <END>
<BEG> returns a formatter for a two digit hour of day <SEG> two digit minute of hour <SEG> two digit second of minute <SEG> and three digit fraction of second hh : mm : s sss <END>
<BEG> returns a formatter that combine a full date and two digit hour of day <END>
<BEG> returns a formatter that combine a full date <SEG> two digit hour of day <SEG> and two digit minute of hour <END>
<BEG> returns a formatter that combine a full date <SEG> two digit hour of day <SEG> two digit minute of hour <SEG> and two digit second of minute <END>
<BEG> returns a formatter that combine a full date <SEG> two digit hour of day <SEG> two digit minute of hour <SEG> two digit second of minute <SEG> and three digit fraction of second yyyy-mm-dd't'hh : mm : s sss <END>
<BEG> the standard iso format - pyymmwwddthhmmss <END>
<BEG> the alternate iso format <SEG> pyyyymmddthhmmss <SEG> which exclude week <END>
<BEG> the alternate iso format <SEG> pyyyy-mm-ddthh : mm : s <SEG> which exclude week <END>
<BEG> returns a new formatter with a different periodtype for parse <END>
<BEG> gets the periodtype that will be use for parse <END>
<BEG> internal method to create a periodprinter instance use all the appended element <END>
<BEG> clears out all the appended element <SEG> allow this builder to be reuse <END>
<BEG> appends another formatter <END>
<BEG> appends a printer parser pair <END>
<BEG> instructs the printer to emit specific text <SEG> and the parser to expect it <END>
<BEG> never print zero value for the next and follow appended field <SEG> unless no field would be print <END>
<BEG> print zero value for the next and follow append field only if the period support it <END>
<BEG> always print zero value for the next and follow appended field <SEG> even if the period do n't support it <END>
<BEG> append a field prefix which apply only to the next appended field <END>
<BEG> returns the name of the field whose value be invalid <END>
<BEG> returns the illegal integer value assign to the field <SEG> or null if not applicable <END>
<BEG> returns the illegal value assign to the field a a non-null string <END>
<BEG> returns the low bound of the legal value range <SEG> or null if not applicable <END>
<BEG> provide additional detail by prepending a message to the exist message <END>
<BEG> checks if the exception be <SEG> or have a cause <SEG> of { code illegalinstantexception } <END>
<BEG> parses a { code mutableinterval } from the specify string <END>
<BEG> sets the start of this time interval a an instant <END>
<BEG> sets the duration of this time interval <SEG> preserve the start instant <END>
<BEG> sets the period of this time interval <SEG> preserve the start instant and use the isochronology in the default zone for calculation <END>
<BEG> gets a type that define all standard field <END>
<BEG> gets a type that define the year <SEG> month and day field <END>
<BEG> gets a type that define year <SEG> week and day field <END>
<BEG> gets a type that define all standard field except month and week <END>
<BEG> gets a type that define the year and day field <END>
<BEG> gets a type that define all standard field from day downwards <END>
<BEG> gets a period type that contain the duration type of the array <END>
<BEG> gets the number of field in the period type <END>
<BEG> adds to the indexed field part of the period <END>
<BEG> returns a version of this periodtype instance that do not support year <END>
<BEG> returns a hashcode base on the field type <END>
<BEG> override to return the correct timezone instance <END>
<BEG> returns { link datetimezone # utc utc } for < code > utc < code > <SEG> null otherwise <END>
<BEG> gets a list of all the available zone id <END>
<BEG> called if an exception be throw from getzone while load zone data <END>
<BEG> the line within the fulltext this date group be find on return <END>
<BEG> return the text within fulltext this group represent <END>
<BEG> remove all the annotation <END>
<BEG> param predicate testing the original { link annotatedparameter } return a sequence of { link annotatedparameterconfigurator } s match the give predicate see annotatedparameterconfigurator # getannotated <END>
<BEG> returns an { link annotatedtypeconfigurator } to to configure the { link annotatedtype } use to create the { link injectiontarget } <END>
<BEG> returns a key for the member of { code type } <END>
<BEG> returns a key for the type provide by <SEG> or inject by this key <END>
<BEG> returns true if { code key } have a qualifier annotation <END>
<BEG> returns the class name for { code key } <SEG> if { code key } be create with a class instance <END>
<BEG> returns true if { code name } be the name of a platform-provided class <END>
<BEG> returns a new list that be pre-sized to { code size } <SEG> or { link collections # emptylist } if empty <END>
<BEG> returns true if at least one pair of item in { code list } be equal <END>
<BEG> creates a { link hashset } instance <SEG> with a high enough intial capcity that it < em > should < em > hold { code expectedsize } element without growth <END>
<BEG> returns a { link membersinjector } implementation that inject no member < p > note that there be no verification that the type be inject do not have { link inject } member <SEG> so care should be take to ensure appropriate use <END>
<BEG> ensures that an object reference pass a a parameter to the call method be not null <END>
<BEG> checks that the component builder field { code requirement } have be initialize <END>
<BEG> configures the { code mapbinder } to handle duplicate entry <END>
<BEG> configures the bound set to silently discard duplicate element <END>
<BEG> returns an initializable for an instance that require no initialization <END>
<BEG> returns true if { code a } and { code b } be equal <END>
<BEG> resets and return elapse time in millisecond <END>
<BEG> returns a module that <SEG> when instal <SEG> will scan all module for method with the annotation { literal } { link providesintomap } <SEG> { literal } { link providesintoset } <SEG> and { literal } { link providesintooptional } <END>
<BEG> deprecate this method return an empty scanner since the preexisting functionality be instal by default <END>
<BEG> return returns the componentadapter 's class name and the component 's key <END>
<BEG> delegates change of monitor if the delegate support a component monitor strategy <END>
<BEG> returns delegate 's current monitor if the delegate support a component monitor strategy <END>
<BEG> converts a string value of a name type to an object <END>
<BEG> sets the bean property value that should be set upon creation <END>
<BEG> retrieves the stored reference <END>
<BEG> transforms a single name value pair unto a < em > read only < em > { linkplain java util properties } instance <END>
<BEG> makes a child container with the same basic characteristic of < tt > this < tt > object componentfactory <SEG> picocontainer type <SEG> behavior <SEG> etc param name the name of the child container return the child mutablepicocontainer <END>
<BEG> null-object implementation of converters <END>
<BEG> this be invoke when getcomponent be call <END>
<BEG> start the component of this picocontainer and all it logical child container <END>
<BEG> changes monitor in the componentfactory <SEG> the component adapter and the child container <SEG> if these support a componentmonitorstrategy <END>
<BEG> if this container have a set of converter <SEG> then return it <END>
<BEG> create default parameter for the give type <END>
<BEG> return the object return be the result of the last of the injector delegate to <END>
<BEG> checks if the target argument be primative <END>
<BEG> checks to see if a null parameter be allow in the give constructor field method <END>
<BEG> returns true if no other state have be trigger so far <END>
<BEG>  the component have a lifecycle predestroy or postconstruct be on a method <END>
<BEG>  the component have a lifecycle if at least one of the three method be present <END>
<BEG> retrieve the lifecycle method name that represent the dispose method <END>
<BEG> if the delegate support a { link componentmonitorstrategy monitor strategy } <SEG> this be use to change the monitor while keep the same delegate <END>
<BEG> evaluate whether the give component adapter will be part of the collective type <END>
<BEG> returns true if the object object be a default_constructor object <END>
<BEG> nulls can not be assign to primitive <END>
<BEG> allows you to fully specify your lifecycle strategy by pass in a built instance param specifiedlifecyclestrategy return < em > this < em > to allow for method chaining <END>
<BEG> allows you to specify your very own component monitor to be use by the created picocontainer param specifiedcomponentmonitor return < em > this < em > to allow for method chaining <END>
<BEG> return a string listing of all the message associate with the exception that cause this one <END>
<BEG> checks the traversal flag <SEG> indicate a currently run traversal of the visitor <END>
<BEG> traverse through all component of the { link picocontainer } hierarchy and verify the component <END>
<BEG> evaluate an expression <END>
<BEG> returns this event 's set of componentdescriptors <END>
<BEG> gets a key for an artifact <SEG> which be an alias for a specific project timeline in a group <END>
<BEG> sets the dependency 's artifact id <END>
<BEG> sets the point in a project 's development timeline param version the project 's version <END>
<BEG> returns a human-friendly key <SEG> suitable for display <END>
<BEG> returns the field name that this component requirement will inject <END>
<BEG> sets the name of the field that will be populate by the required component <END>
<BEG> returns the role of the required component <END>
<BEG> returns the type of the field this component requirement will inject <END>
<BEG> whether this component requirement be optional and need not be satisfied return { code true } if the requested component may be miss <SEG> { code false } if the component be mandatory <END>
<BEG> utility method to retrieve containercontext data return the containercontext data <END>
<BEG> make the containercontext read-only <END>
<BEG> creates a string key useful a key in < code > map < code > 's <END>
<BEG> sets the threshold for all new logger <END>
<BEG> returns the current threshold for all new logger <END>
<BEG> set the { code accessible } flag for this accessible object <END>
<BEG> does not perform { link privilegedaction } unless necessary <END>
<BEG> peeks the current top of the stack or return null if the stack be empty return the current top of the stack or return null if the stack be empty <END>
<BEG> param beanarchiveid param delimiter return the abbreviated bean archive id see configurationkey # rolling_upgrades_id_delimiter <END>
<BEG> param value return < code > true < code > if the give value correspond to the type of the default value <SEG> < code > false < code > otherwise <END>
<BEG> param valuetype return < code > true < code > if the give value type correspond to the type of the default value <SEG> < code > false < code > otherwise <END>
<BEG> param value return the converted value <END>
<BEG> param valuetype return < code > true < code > if the give value type be support <SEG> < code > false < code > otherwise <END>
<BEG> param from return the key with the give value <SEG> or < code > null < code > if no such exists <END>
<BEG> end the request and clear the cache <END>
<BEG> flushes the bean cache <END>
<BEG> non-javadoc see org jboss weld exception weldexceptionmessage # getasstring <END>
<BEG> convenience method which only push something to stack if the condition evaluate to true <END>
<BEG> convenience method which also accept null value <END>
<BEG> core implementation of matchpath <END>
<BEG> tokenize the the string a a package hierarchy param str return <END>
<BEG> typevariable bound be treat specially - cdi assignability rule be apply <END>
<BEG> values store in the cache should be wrap in a { link weakreference } <END>
<BEG> param computingfunction return a new computingcache instance <END>
<BEG> add all element in the iterable to the collection <END>
<BEG> param iterable return see weldcollections # tomultirowstring java util collection <END>
<BEG> param iterables return an iterator over iterators from the give iterable of iterables <END>
<BEG> param iterator param function return an iterator that apply the give function to each element of the original iterator <END>
<BEG> note that { link multimap # get object } return unmodifiable collection <END>
<BEG> returns an immutable view of a give set <END>
<BEG> param collection param element return < tt > true < tt > if the collection change a a result of the call <END>
<BEG> see also jls8 <SEG> 4 12 5 initial values of variables <END>
<BEG> param declaringclass return the ordered list of declared field for the give class <END>
<BEG> removes the ambiguity between { link privilegedaction } and { link privilegedexceptionaction } that normally occur when a lambda be pass to { link accesscontroller # doprivileged } <END>
<BEG> generates the diffrows describe the difference between original and revised text use the give patch <END>
<BEG> wrap the give line with the give tag param line the give line param tag the tag name without angle bracket <SEG> just a word param cssclass the optional cs class return the wrapped string <END>
<BEG> patch the original text with give patch param original the original text param patch the give patch return the revise text throw patchfailedexception if ca n't apply patch <END>
<BEG> unpatch the revise text for a give patch param revise the revise text param patch the give patch return the original text <END>
<BEG> restore the text to original <END>
<BEG> replaces all tab with 4 space <END>
<BEG> wrap the text with the give column width param line the text param columnwidth the give column return the wrapped text <END>
<BEG> returns a legacy < code > difference < code > see < code > differ < code > to return a subclass of difference <END>
<BEG> runs diff and return the result <END>
<BEG> adds the last difference <SEG> if pending <END>
<BEG> traverses the sequence <SEG> seek the long common subsequence <SEG> invoke the method < code > finishedfrom < code > <SEG> < code > finishedto < code > <SEG> < code > onfromnotto < code > <SEG> and < code > ontonotfrom < code > <END>
<BEG> invoked for element in < code > from < code > and not in < code > to < code > <END>
<BEG> invoked for element match in < code > from < code > and < code > to < code > <END>
<BEG> converts the map into a list <END>
<BEG> updates the value for the key < code > k < code > <END>
<BEG> returns whether the integer be not zero include if it be not null <END>
<BEG> returns whether the value in the map for the give index be great than the give value <END>
<BEG> returns the value for the great key in the map <END>
<BEG> adds the give value to the end of the threshold map <SEG> that be <SEG> with the great index key <END>
<BEG> inserts the give value into the threshold map <END>
<BEG> referred to a { code epsilon } in the whitepaper <END>
<BEG> similar to { code add } <SEG> however we reuse the fact that the hask bucket have to be calculate for { code add } already <SEG> and a separate { code estimatecount } operation would have to calculate them again <SEG> so we do it all in one go <END>
<BEG> the estimate be correct within { code 'epsilon ' total item count } <SEG> with probability { code confidence } <END>
<BEG> returns a new { link circuitbreakerbuilder } that have the specify name <END>
<BEG> creates a new { link circuitbreaker } that have the specify name and the default configuration <END>
<BEG> returns a new { link circuitbreakerhttpclientbuilder } with the specify { link circuitbreakerstrategy } <END>
<BEG> returns a weighted round-robin strategy <END>
<BEG> returns a round-robin strategy <SEG> which ignore { link endpoint # weight } <END>
<BEG> returns a newly create { link healthcheckedendpointgroupbuilder } that build a { link healthcheckedendpointgroup } which send http { code head } health check request <END>
<BEG> returns a singleton { link goawayreceivedexception } <END>
<BEG> creates a new http response of the specify { link httpstatus } <END>
<BEG> returns whether the { code no-cache } directive be enable <END>
<BEG> returns the value of the { code max-age } directive or { code -1 } if disabled <END>
<BEG> returns a new { link stringbuilder } with the common directive append <END>
<BEG> makes sure the specified { link duration } be not negative <END>
<BEG> enables the { code max-age } directive <END>
<BEG> returns a newly create { link clientcachecontrolbuilder } with all directived disable initially <END>
<BEG> returns the value of the { code max-stale } directive or { code -1 } if disable or the value be not specify <END>
<BEG> returns a newly create { link cookiebuilder } which build a { link cookie } <END>
<BEG> returns a new { link cookie } which be the result from the mutation by the specify { link consumer } <END>
<BEG> sets the maximum age of the { link cookie } in second <END>
<BEG> returns a newly create { link cookie } with the property set so far <END>
<BEG> returns an immutable empty { link set } of { link cookie } s <END>
<BEG> creates an instance with a copy of the specified set of { link cookie } s deprecate use { link # of iterable } <END>
<BEG> returns the simplified name of the { link # servicetype } <END>
<BEG> returns the class of the specify http status code <END>
<BEG> returns the { link requestlogproperty } s for request <END>
<BEG> returns all available { link serializationformat } s <END>
<BEG> notify the new value change to the listener add via { link # addlistener consumer } <END>
<BEG> returns all available option of the specify option type <END>
<BEG> returns the option of the specify option type and name <END>
<BEG> returns the default value of this option <END>
<BEG> returns a newly create option value <END>
<BEG> returns the value of the specify { code option } <END>
<BEG> returns an immutable { link map } of user-specified option <END>
<BEG> returns the option that this option value holder belongs to <END>
<BEG> returns the value of this option value holder have <END>
<BEG> returns a new { link asynccloseablesupport } which call the specify { link consumer } on { link # close } or { link # closeasync } <END>
<BEG> loop over the pre-canned decision <SEG> reset to zero when it get to the end <END>
<BEG> returns a non-negative mod <END>
<BEG> returns { code true } if the { link # size } of this map exceed the maximum number of allowed entry <END>
<BEG> adds the specify { code listener } <SEG> so that it be notify when the state of this { link startstopsupport } change <END>
<BEG> removes the specified { code listener } <SEG> so that it be not notify anymore <END>
<BEG> creates a new { link stringbuilder } whose content be the human-readable representation of the duration give a { code elapse } <END>
<BEG> appends the human-readable representation of the duration give a { code elapse } to the specify { link stringbuilder } <END>
<BEG> creates a new { link stringbuilder } whose content be the human-readable representation of the byte-unit { code size } <END>
<BEG> appends the human-readable representation of the specify byte-unit { code size } to the specify { link stringbuffer } <END>
<BEG> similar to { link # appendelapsedandsize stringbuilder <SEG> long <SEG> long <SEG> long } except that this method create a new { link stringbuilder } <END>
<BEG> formats the give epoch time in millisecond to typical human-readable format yyyy-mm-dd't'hh_mm : s sssx and append it to the specify { link stringbuilder } <END>
<BEG> returns a new builder which build a new { link threadfactory } <END>
<BEG> creates a new { link threadfactory } for event loop thread <END>
<BEG> creates a new { link threadfactory } for non event loop thread <END>
<BEG> invokes the specified { link supplier } with { link bouncycastlekeyfactoryprovider } enable temporarily <END>
<BEG> returns the http format timestamp for the current time <END>
<BEG> returns the current { link thread } 's { link temporarythreadlocals } <END>
<BEG> returns a set of all interface define for { code cl } <END>
<BEG> returns the value of the { link param } annotation which be specify on the { code element } if the value be not blank <END>
<BEG> ensures that the specify { code path } be an absolute path that start with { code } <END>
<BEG> creates a new { link basictoken } from the give { code username } and { code password } <END>
<BEG> returns the value of the { value # realm } property <END>
<BEG> returns additional or user-defined parameter <END>
<BEG> creates a new { link oauth2token } from the give { code accesstoken } <END>
<BEG> returns the list of { link compositeserviceentry } s add to this composite { link service } <END>
<BEG> returns the list of the { link compositeserviceentry } s add via { link # service string <SEG> service } <SEG> { link # serviceunder string <SEG> service } <SEG> { link # service route <SEG> service } and { link # service compositeserviceentry } <END>
<BEG> returns the { link route } of the { link # service } <END>
<BEG> returns a { link docservicefilter } which return { code true } only for the service detect by the thrift plugin <END>
<BEG> returns a { link docservicefilter } which return { code true } only for the service detect by the annotated service plugin <END>
<BEG> returns a { link docservicefilter } which return { code true } when the name of the plugin match the specified { code pluginname } <END>
<BEG> returns a { link docservicefilter } which return { code true } when the name of the plugin and service match the specify { code pluginname } and { code servicename } <END>
<BEG> returns a { link docservicefilter } which return { code true } when the name of the plugin <SEG> service and method match the specify { code pluginname } <SEG> { code servicename } and { code methodname } <END>
<BEG> returns a composite { link docservicefilter } that represent a short-circuiting logical { code or } of this filter and { code other } <END>
<BEG> returns the constant value define by the type <END>
<BEG> returns the { link # metertag } of this { link httpvfs } <END>
<BEG> increases the number of pending response <END>
<BEG> sets if the { link server } be healthy or not <END>
<BEG> returns a new { link httpstatusexception } instance with the specify http status code and { code cause } <END>
<BEG> returns disable access log writer <END>
<BEG> returns an access log writer with the specify { code formatstr } <END>
<BEG> returns the source address of the proxied request <END>
<BEG> creates a new { link routed } with the specify { link route } <SEG> { link routingresult } and { code value } <END>
<BEG> tells whether this { link routepathtype } have a trie path or not <END>
<BEG> returns a new builder <END>
<BEG> invokes { link service # serviceadded serviceconfig } <END>
<BEG> sets the rpc response <SEG> and unblock all thread wait on { link # get } or { link # get long <SEG> timeunit } <END>
<BEG> sets an error thrown during rpc execution <SEG> and unblock all thread wait on { link # get } or { link # get long <SEG> timeunit } <END>
<BEG> gets the error that be throw during rpc execution <END>
<BEG> returns second that have elapse since start <END>
<BEG> stops the stopwatch and calculate the elapsed time <END>
<BEG> initialize the hessian stream with the underlie input stream <END>
<BEG> sets the resolver use to lookup remote object <END>
<BEG> sets the serializer factory <END>
<BEG> for backward compatibility with hessianskeleton <END>
<BEG> reads the number of method argument return -1 for a variable length hessian 1 0 <END>
<BEG> reads an arbitrary object from the input stream <END>
<BEG> initialize the output with a new underlying stream <END>
<BEG> writes a complete method call <END>
<BEG> for hessian 2 0 <SEG> use the header envelope instead deprecate <END>
<BEG> writes the object header to the stream for hessian 2 0 <SEG> or a map for hessian 1 0 <END>
<BEG> creates a map of the class field <END>
<BEG> returns the readresolve method <END>
<BEG> returns the default serializer for a class that be n't match directly <END>
<BEG> return true if the java type of the collection should be send <END>
<BEG> starts an envelope <END>
<BEG> flushiffull ; _buffer [ _offset++ ] = byte ' z ' ; <END>
<BEG> starts a packet < p > < p > a message contain several object encapsulate by a length < p > < p > < pre > p x02 x00 < pre > <END>
<BEG> completes read the message < p > < p > a successful completion will have a single value : < p > < pre > z < pre > <END>
<BEG> returns an output stream to write binary data <END>
<BEG> starts the streaming message < p > < p > a streaming message start with ' p ' < p > < p > < pre > p x02 x00 < pre > <END>
<BEG> prints a string to the stream <SEG> encode a utf-8 with preceeding length param v the string to print <END>
<BEG> writes any object to the output stream <END>
<BEG> applications which override this can do custom serialization <END>
<BEG> puts a new value in the property table with the appropriate flag <END>
<BEG> creates a { code listenablefuturetask } that will upon running <SEG> execute the give { code callable } <END>
<BEG> internal implementation detail use to invoke the listener <END>
<BEG> this be equivalent to { code getactivateextension url <SEG> url getparameter key split <SEG> <SEG> null } param url url param key url parameter key which use to get extension point name param group group return extension list which be activate <END>
<BEG> get activate extension <END>
<BEG> get extension 's instance <END>
<BEG> return the list of extension which be already load <END>
<BEG> return default extension name <SEG> return < code > null < code > if not configure <END>
<BEG> replace the exist extension via api param name extension name param clazz extension class throw illegalstateexception when extension to be place do n't exist deprecate not recommend any long <SEG> and use only when test <END>
<BEG> byte array copy <END>
<BEG> to byte array <END>
<BEG> to hex string <END>
<BEG> from base64 string <END>
<BEG> zip <END>
<BEG> unzip <END>
<BEG> get key iterator <END>
<BEG> contains key <END>
<BEG> put all <END>
<BEG> object begin <END>
<BEG> array end <SEG> return array value <END>
<BEG> value <END>
<BEG> returns the internal data structure that keep the threadlocal variable bind to this thread <END>
<BEG> removes all { link internalthreadlocal } variables bound to the current thread <END>
<BEG> returns the number of thread local variable bound to the current thread <END>
<BEG> sets the value for the current thread <END>
<BEG> sets the value to uninitialized for the specify thread local map ; a proceeding call to get will trigger a call to initialvalue <END>
<BEG> returns the initial value for this thread-local variable <END>
<BEG> invoked when this thread local variable be remove by { link # remove } <END>
<BEG> return { code true } if and only if a new thread-local variable have be create <END>
<BEG> return current task which be execute <END>
<BEG> retry offer task param o task return offer success or not throws rejectedexecutionexception if executor be terminate <END>
<BEG> fetch ip address for this url <END>
<BEG> add parameter to a new url <END>
<BEG> see # getparameter string <SEG> int deprecate replace to < code > getparameter string <SEG> int < code > <END>
<BEG> see # getmethodparameter string <SEG> string <SEG> int deprecate replace to < code > getmethodparameter string <SEG> string <SEG> int < code > <END>
<BEG> resolve the give class name a primitive class <SEG> if appropriate <SEG> accord to the jvm 's naming rule for primitive class <END>
<BEG> system environment - > system property param key key return value <END>
<BEG> load property file to { link properties } from class path <END>
<BEG> append thread name with url address return new url with updated thread name <END>
<BEG> write <END>
<BEG> append line <END>
<BEG> find first valid ip from local network card return first valid local ip <END>
<BEG> param hostname return ip address or hostname if unknownhostexception <END>
<BEG> push <END>
<BEG> pop <END>
<BEG> peek <END>
<BEG> get <END>
<BEG> set <END>
<BEG> remove <END>
<BEG> get stack size <END>
<BEG> be empty <END>
<BEG> be empty string <END>
<BEG> split <END>
<BEG> join string like javascript <END>
<BEG> check if the give value match the give pattern <END>
<BEG> return deprecate instead <SEG> use scope to judge if it 's in jvm <SEG> scope=local <END>
<BEG> param injvm deprecate instead <SEG> use scope to judge if it 's in jvm <SEG> scope=local <END>
<BEG> destroy all the resource <SEG> include registry and protocol <END>
<BEG> return service metadata for consumer return service metadata <END>
<BEG> return all method model for the current service return method model list <END>
<BEG> typo <SEG> switch to use { link # getdispatcher } deprecate { link # setdispatcher string } <END>
<BEG> return wait see com alibaba dubbo config providerconfig # getwait deprecate <END>
<BEG> param wait see com alibaba dubbo config providerconfig # setwait integer deprecate <END>
<BEG> param transport see # settransporter string deprecate <END>
<BEG> convert from variable argument to array param value variable argument param < t > the class return array <END>
<BEG> get the cache use specify { link keygenerator } <END>
<BEG> create a branch node param data node data return this <END>
<BEG> end a branch node return this <END>
<BEG> convert override urls to map for use when re-refer <END>
<BEG> haomin : add for test purpose <END>
<BEG> close a channel when a channel be inactive directly return the unfinished request <END>
<BEG> get invoker addr list cache for specify invocation < p > < b > for unit test only < b > param invokers param invocation return <END>
<BEG> generate class name which represent service argument <END>
<BEG> get server side context <END>
<BEG> get the request object of the underlie rpc protocol <SEG> e g <END>
<BEG> set local address <END>
<BEG> get remote address <END>
<BEG> get remote address string <END>
<BEG> set attachment param attachment return context <END>
<BEG> deprecate replace to isproviderside <END>
<BEG> deprecate replace to getmethodname <SEG> getparametertypes <SEG> getarguments <END>
<BEG> param url return status <END>
<BEG> param url param methodname return status <END>
<BEG> get total elapsed <END>
<BEG> get average elapse <END>
<BEG> get failed average elapse <END>
<BEG> calculate average tps transaction per second <END>
<BEG> get the semaphore for thread number <END>
<BEG> dubbo will populate and set the cache factory instance base on service method consumer provider configure cache attribute value <END>
<BEG> if cache be configure <SEG> dubbo will invoke method on each method call <END>
<BEG> takes url a an method argument and return new instance of cache store implement by jcache <END>
<BEG> executes the { link callable } with the specify timeout param task the { link callable task } param timeout timeout in millisecond param < v > the type of compute result return the computing result <END>
<BEG> since 2 7 5 <END>
<BEG> create new instance for each call <SEG> since it will be call only at startup <SEG> i think there 's no big deal of the potential cost <END>
<BEG> add a set of property into the store <END>
<BEG> { link predicate } always return < code > true < code > param < t > the type to test return < code > true < code > <END>
<BEG> executes { link throwableconsumer } param t the function argument throw runtimeexception wrapper { link throwable } <END>
<BEG> executes { link throwablefunction } param t the function argument return the function result throw runtimeexception wrapper { link throwable } <END>
<BEG> only suppose to be call at startup time param clazz object type param serializer object serializer <END>
<BEG> waits until there be a runnable <SEG> then execute it and all queue runnables after it <END>
<BEG> if the call thread be still wait for a callback task <SEG> add the task into the block queue to wait for schedule <END>
<BEG> tell the thread blocking on { link # waitanddrain } to return <SEG> despite of the current status <SEG> to avoid endless wait <END>
<BEG> < p > checks if the array be null or empty <END>
<BEG> < p > checks if the array be not null or empty <END>
<BEG> convert to multiple value to be { link linkedhashset } param value one or more value param < t > the type of < code > value < code > return read-only { link set } <END>
<BEG> check if an ipv6 address return true if it be reachable <END>
<BEG> normalize the ipv6 address <SEG> convert scope name to scope id <END>
<BEG> param pattern param host param port return throw unknownhostexception <END>
<BEG> check the framework release version number to decide if it 's 2 7 0 or high <END>
<BEG> check the framework release version number to decide if it 's 2 6 3 or high because response attachment feature be firstly introduce in 2 6 3 and moreover we have no other approach to know the framework 's version <SEG> so we use issupportresponseattachment to decide if it 's v2 6 3 <END>
<BEG> fixme check parameter required=true and any condition that need to match <END>
<BEG> param local see abstractinterfacebuilder # stub string deprecate replace to < code > stub string < code > <END>
<BEG> param injvm see abstractinterfacebuilder # scope string deprecate instead <SEG> use the parameter < b > scope < b > to judge if it 's in jvm <SEG> scope=local <END>
<BEG> param path return protocolbuilder see protocolbuilder # contextpath string <END>
<BEG> param wait see providerbuilder # wait integer deprecate <END>
<BEG> set the name of application param name the name of application return current { link dubbobootstrap } instance <END>
<BEG> set the name of application and it 's future build param name the name of application param consumerbuilder { link applicationbuilder } return current { link dubbobootstrap } instance <END>
<BEG> add an instance of { link registryconfig } param registryconfig an instance of { link registryconfig } return current { link dubbobootstrap } instance <END>
<BEG> add an instance of { link registryconfig } param registryconfigs the multiple instance of { link registryconfig } return current { link dubbobootstrap } instance <END>
<BEG> block current thread to be await <END>
<BEG> register the shutdownhook <END>
<BEG> param interfaceclass see # setinterface class deprecate <END>
<BEG> default <SEG> load the instance of { link eventlistener event listener } by { link serviceloader } < p > it could be override by the sub-class see eventlistener see serviceloader # load class <END>
<BEG> add multiple { link eventlistener dubbo event listener } param listener the { link eventlistener dubbo event listener } throw nullpointerexception if < code > listener < code > argument be < code > null < code > throw illegalargumentexception if any element of < code > listener < code > be not concrete instance <END>
<BEG> remove all { link eventlistener dubbo event listener } return a amount of removed listener <END>
<BEG> describe a java interface in { link servicedefinition } <END>
<BEG> the invocation interceptor <SEG> it will collect the invoke data about this invocation and send it to monitor center param invoker service param invocation invocation <END>
<BEG> create the { link servicediscovery } by { link url # getprotocol the protocol } from { link url connection url } param registryurl return <END>
<BEG> get the correlative service name return the correlative service name <END>
<BEG> param event { link serviceinstanceschangedevent event } return if service name match <SEG> return < code > true < code > <SEG> or < code > false < code > <END>
<BEG> get the original { link servicediscovery } return the original { link servicediscovery } <END>
<BEG> return all { link serviceinstance service instance } <END>
<BEG> 1 developer explicitly specify the application name this interface belong to 2 check interface-app mapping 3 use the service specify in registry url <END>
<BEG> is override { link serviceinstance # getmetadata } the service instance ' metadata } or not return default be < code > false < code > <END>
<BEG> build an instance of { link nacosservicename } param url return <END>
<BEG> get the parameter value from the specify { link url } param url the dubbo registry { link url } param < t > the type of value return the parameter value if present <SEG> or return < code > null < code > <END>
<BEG> invisible injection of zookeeper client via ioc spi param zookeepertransporter <END>
<BEG> whether the implementation can sense and handle the idle connection <END>
<BEG> currently <SEG> this method be mainly customize to facilitate the thread model on consumer side <END>
<BEG> get the share executor for current server or client return <END>
<BEG> get the zookeeperclient from cache <SEG> the zookeeperclient must be connect <END>
<BEG> get all zookeeper url such a : zookeeper : 127 0 0 1:2181 ? 127 0 0 1:8989<SEG>127 0 0 1:9999 param url such a : zookeeper : 127 0 0 1:2181 ? 127 0 0 1:8989<SEG>127 0 0 1:9999 return such a 127 0 0 1:2181<SEG>127 0 0 1:8989<SEG>127 0 0 1:9999 <END>
<BEG> redefine the url for zookeeper <END>
<BEG> for unit test return <END>
<BEG> append all item from the map into the attachment <SEG> if map be empty then nothing happen param map contain all key-value pair to append <END>
<BEG> this method will always return after a maximum 'timeout ' waiting : 1 if value return before timeout <SEG> return normally <END>
<BEG> if we use route : protocol in version before 2 7 0 <SEG> each url will generate a router instance <SEG> so we should keep the router up to date <SEG> that be <SEG> each time router urls change <SEG> we should update the router list <SEG> only keep the builtinrouters which be available all the time and the late notified router which be generate from urls <END>
<BEG> notify router chain of the initial address from registry at the first time <END>
<BEG> guarantee 'using org apache dubbo rpc rpccontext getfuture before proxy return ' can work <SEG> a typical scenario be : < pre > { code public final class tracingfilter implement filter { public result invoke invoker < ? > invoker <SEG> invocation invocation throw rpcexception { result result = invoker invoke invocation ; future < object > future = rpccontext getfuture ; if future instanceof futureadapter { futureadapter future getfuture setcallback new finishspancallback span ; } } } } < pre > start from 2 7 3 <SEG> you do n't have to get future from rpccontext <SEG> we recommend use result directly : < pre > { code public final class tracingfilter implement filter { public result invoke invoker < ? > invoker <SEG> invocation invocation throw rpcexception { result result = invoker invoke invocation ; result getresponsefuture whencomplete new finishspancallback span ; } } } < pre > <END>
<BEG> param method metodname param argstype method argument type return <END>
<BEG> sets the validation instance for validationfilter param validation validation instance inject by dubbo framework base on validation attribute value <END>
<BEG> perform the validation of before invoke the actual method base on < b > validation < b > attribute value <END>
<BEG> adds a new { link readablebuffer } at the end of the buffer list <END>
<BEG> returns { code true } when the conscrypt java class be available <END>
<BEG> same a { code conscrypt isconscrypt provider } <END>
<BEG> same a { code conscrypt newprovider } <END>
<BEG> appends a piece of information which be a plain string <END>
<BEG> appends a piece of information which be a key-value <SEG> which will be format into { code key=value } <END>
<BEG> returns true if the environment support longadder <END>
<BEG> initialize the burlap input stream with a new underlying stream <END>
<BEG> writes the method call : < code > < pre > & lt ; burlap : request > < pre > < code > <END>
<BEG> adds http header <END>
<BEG> the hessianproxyfactory contain some common network configuration like timeouts <END>
<BEG> method that allow subclass to add request header such a cooky <END>
<BEG> sets the connection factory to use when connect to the hessian service <END>
<BEG> returns the connection factory to be use for the http request <END>
<BEG> set true if should use chunk encode on the request <END>
<BEG> the socket timeout on request in millisecond <END>
<BEG> the socket connection timeout in millisecond <END>
<BEG> true if the proxy can read hessian 2 response <END>
<BEG> creates the field array for a class <END>
<BEG> allow a class or package base on a pattern <END>
<BEG> returns the serializer for a give class <END>
<BEG> returns a custom serializer the class param cl the class of the object that need to be serialize <END>
<BEG> resets all counter and reference <END>
<BEG> creates a new hessian 2 0 deserializer <END>
<BEG> frees a hessian 2 0 deserializer <END>
<BEG> starts the method call : < code > < pre > c < pre > < code > param method the method name to call <END>
<BEG> writes the map header to the stream <END>
<BEG> initialize the multiplexor with input and output stream <END>
<BEG> frees the channel for write <END>
<BEG> try to get an object from the free list <END>
<BEG> debugging to see if the object have already be free <END>
<BEG> removes a value in the property table <END>
<BEG> returns the api class of the factory home <END>
<BEG> sets the home api class <END>
<BEG> creates a unique mangle method name base on the method name and the method parameter <END>
<BEG> mangles a classname <END>
<BEG> get the ip address of this principal <END>
<BEG> add a user to the authentication table <END>
<BEG> public void start throw exception { super start ; ipaddress self= ipaddress auth getphysicaladdress ; if ! isinmemberslist self throw new illegalstateexception own physical address + self + be not in member + memberlist + ; } <END>
<BEG> returns an iterator of all of the registered { code saslserverfactory } s where the order be base on the order of the provider registration and or class path order <END>
<BEG> this method should not be use to add or remove element ! <END>
<BEG> starts accept connection <END>
<BEG> stops listen for connection and handle traffic <END>
<BEG> called by a { link connection } implementation when a message have be receive <END>
<BEG> creates a new connection to dest <SEG> or return an exist one <END>
<BEG> only remove the connection if conns get address == conn <END>
<BEG> used only for test ! <END>
<BEG> removes all connection which be not in current_mbrs <END>
<BEG> the default implementation assume that { link bytebuffer # flip } or { link bytebuffer # rewind } be call on buf before invoke this callback param sender param buf <END>
<BEG> reads the peer 's address <END>
<BEG> { inheritdoc completionservice } < p > this future object may not be use a a notifyingfuture <END>
<BEG> returns a copy of the runner be use with the runner and what thread <END>
<BEG> returns true if all of the key in key be present <END>
<BEG> adds all value which have not be mark a removable to the return set return <END>
<BEG> return returns whether be all <END>
<BEG> estimates the number of byte need to serialize an object to an output stream <END>
<BEG> adds a key value to the cache <SEG> replace a previous item if there be one param key the key param val the value param caching_time time to live <END>
<BEG> places a key value pair into one or several node in the cluster <END>
<BEG> removes all key and value in the l2 and l1 cache <END>
<BEG> param key param val param repl_count param timeout param force skips acceptance checking and simply add the key value return <END>
<BEG> the timeout in millisecond for block update <END>
<BEG> fetches the state param state_timeout <END>
<BEG> throw nullpointerexception if the specify key be null <END>
<BEG> throw nullpointerexception if any of the argument be null <END>
<BEG> -- -- -- -- -- -- -- -- -- -- -- -- callbacks -- -- -- -- -- -- -- -- -- -- -- - <END>
<BEG> see java util map # putall java util map <END>
<BEG> -- -- -- -- -- -- -- -- -- -- state exchange -- -- -- -- -- -- -- -- -- -- -- <END>
<BEG> block sending and receiving of message until viewaccepted be call <END>
<BEG> creates a synchronized facade for a replicatedmap <END>
<BEG> processes a request < em > asynchronously < em > <END>
<BEG> not recommend a the internal representation of flag might change e g <END>
<BEG> message contain methodcall <END>
<BEG> < b > callback < b > call by requestcorrelator or transport <END>
<BEG> if the target address be not a member of the new view <SEG> we 'll mark the response a suspected and unblock the caller of execute <END>
<BEG> enables access to event mechanism of a channel and be normally not use by client directly <END>
<BEG> returns a protocol stack configurator base on the xml configuration provide by the specify file <END>
<BEG> returns a protocol stack configurator base on the provided property string <END>
<BEG> returns a jgroups xml configuration inputstream base on the provided property string <END>
<BEG> param convert if false : print old plain output <SEG> else print new xml format return string with protocol stack in specified format <END>
<BEG> method call from other app <SEG> inject channel <END>
<BEG> quote method : <END>
<BEG> connects the fork-channel <SEG> which will be operational after this <END>
<BEG> removes the fork-channel from the fork-stack 's hashmap and reset it state <END>
<BEG> parses the input and return a map of fork-stack ids and list of protocolconfigurations <END>
<BEG> deprecated headers should implement { link sizestreamable # serializedsize } instead <END>
<BEG> dumps the attribute and their value of _all_ protocol in a stack return a map of protocol name a key and map of attribute name and value a value <END>
<BEG> dumps attribute and their value of a give protocol <END>
<BEG> called whenever a member be suspect of have crash <SEG> but have not yet be exclude <END>
<BEG> called < em > after < em > the flush protocol have unblock previously block sender <SEG> and message can be send again <END>
<BEG> returns a copy of the buffer if offset and length be use <SEG> otherwise a reference <END>
<BEG> sets the buffer < p > note that the byte [ ] buffer pass a argument must not be modify <END>
<BEG> sets the internal buffer to point to a subset of a give buffer < p > < em > note that the byte [ ] buffer pass a argument must not be modify <END>
<BEG> takes an object and use java serialization to generate the byte [ ] buffer which be set in the message <END>
<BEG> uses custom serialization to create an object from the buffer of the message <END>
<BEG> sets a number of flag in a message param flag the flag or flag return a reference to the message <END>
<BEG> sets the flag from a short <END>
<BEG> clears a number of flag in a message param flag the flag return a reference to the message <END>
<BEG> atomically check if a give flag be set and - if not - set it <END>
<BEG> returns a header for a range of ids <SEG> or null if not find <END>
<BEG> reads the message 's content from an input stream <END>
<BEG> called when a batch of message be receive <END>
<BEG> nulls the buffer at index <END>
<BEG> reads length and then length byte into the data buffer <SEG> which be grow if need <END>
<BEG> writes the buffer from position to limit to the give channel <END>
<BEG> returns the number of element that have not yet be read or write <END>
<BEG> copies a bytebuffer by copy and wrap the underlying array of a heap-based buffer <END>
<BEG> if there be no header <SEG> we pass the message up <END>
<BEG> returns a new message a a result of uncompress msg <SEG> or null if msg could n't be uncompressed <END>
<BEG> allows to unblock a blocked sender from an external program <SEG> e g <END>
<BEG> joins this process to a group <END>
<BEG> handles the case where no coord responses be receive <END>
<BEG> callback to notify leaver that the coord change <END>
<BEG> interrupts and stop the current leave process if one be in progress <END>
<BEG> invoked upon receive a merge event from the merge layer <END>
<BEG> if merge_id be not equal to this merge_id then discard <END>
<BEG> removes all member from a give view which do n't have u in their view http : jira jboss org browse jgrp-1061 <END>
<BEG> returns the address of the merge leader <END>
<BEG> send back a response contain view and digest to sender <END>
<BEG> sends the new view and digest to all subgroup coordinator <END>
<BEG> multicasts a get_digest_req to all member of this sub partition and wait for all response get_digest_rsp or n m <END>
<BEG> fetches the digest from all member and install them again <END>
<BEG> in case we get a different join_rsp from a previous join_req sent by u a a client <SEG> we simply apply the new view if it be great than ours <END>
<BEG> removes previously suspect member from list of currently suspect member <END>
<BEG> determines whether this member be the new coordinator give a list of suspected member <END>
<BEG> called by the gms when a view be receive <END>
<BEG> -- -- -- -- -- -- -- -- -- -- -- -- -- - private methods -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- <END>
<BEG> to be use by test only ! <END>
<BEG> removes request as long a they match - break at the first non-matching request or when request be empty this method must catch all exception ; or else process might return without set process to true again ! <END>
<BEG> parses site name and their configuration e g <END>
<BEG> disconnects and destroy all bridge <END>
<BEG> read and send message in range [ read-index read-index+available_msgs-1 ] <END>
<BEG> called when rule be instal <END>
<BEG> author bela ban since 3 3 <END>
<BEG> sanitizes bucket and folder name accord to aws guideline <END>
<BEG> updates the current view in use and return a { link collection } with the member that leave the cluster <END>
<BEG> return the current view id or { code -1 } if no view be instal yet <END>
<BEG> mark the message a ready to deliver and set the final sequence number to be order param messageid the message id param finalsequencenumber the final sequence number <END>
<BEG> delivers a message that have only a destination member this node param msg the message <END>
<BEG> it be use for test see the message in jmx return unmodifiable set of message <END>
<BEG> remove all the pending message <END>
<BEG> mark the message a sent param messageid the message id return return true if this member be in destination set <END>
<BEG> obtain the destination set of a message param messageid the message id return the destination set <END>
<BEG> return the next sequence number <END>
<BEG> update the sequence number to the maximum between them param othersequencenumber the sequence number receive <END>
<BEG> update the sequence number and return the next <SEG> that will be use a propose sequence number param othersequencenumber the sequence number receive return the next sequence number or the received sequence number <SEG> if the received sequence number be high the the actual sequence number <END>
<BEG> called when a merge happen <END>
<BEG> called before the transport be stop <END>
<BEG> applies action to a randomly pick routerstub that 's connect param action <END>
<BEG> allows an application to write a state through a provided outputstream <END>
<BEG> returns a list of addr : port response <END>
<BEG> writes an int to a bytebuffer param num the int to be write param buf the buffer <END>
<BEG> writes an int to an output stream param num the int to be write param out the output stream <END>
<BEG> reads an int from a buffer <END>
<BEG> reads an int from an input stream param in the input stream return the int read from the input stream <END>
<BEG> computes the size of a variable-length encode int param num the int return the number of byte need to variable-length encode num <END>
<BEG> reads a variable-length encode long from an input stream <END>
<BEG> writes 2 sequence number seqnos in compressed format to buf <END>
<BEG> writes 2 sequence number seqnos in compressed format to an output stream <END>
<BEG> reads 2 compressed longs from buf into seqnos < p > once variable-length encoding have be implement <SEG> this method will probably get drop a we can simply read the 2 longs individually <END>
<BEG> reads a string from buf <END>
<BEG> writes an asciistring to buf <END>
<BEG> protect static byte [ ] decodelength byte len { return new byte [ ] { byte len & 0xff > > 4 <SEG> byte len & ~0xf0 } ; 0xf0 be the first nibble set 11110000 } <END>
<BEG> appends bytes to the end of the stream param buf throw ioexception see # write byte [ ] <SEG> int <SEG> int <END>
<BEG> moves the byte between [ read_pos and write_pos ] read_pos bytes to the left <SEG> such that the new read_pos be 0 and the write_pos be write_pos - read_pos <END>
<BEG> adds an element at the tail <END>
<BEG> grows the buffer ; whether it grow linearly or exponentially depend on grow_exponentially <END>
<BEG> blocks until condition be true <END>
<BEG> blocks until condition be true or the time elapsed param condition the condition param timeout the timeout to wait <END>
<BEG> decrements credit byte from all <END>
<BEG> names a thread accord to base_name <SEG> cluster name and local address <END>
<BEG> do n't use <SEG> this method be reserve for bela ! <END>
<BEG> 2 digest be equal if their membership match and all highest-delivered and highest-received seqnos match <END>
<BEG> author bela ban <END>
<BEG> the number of non-null key <END>
<BEG> sets the bit at the specified index to { code true } <END>
<BEG> sets the bit from the specify { code from } inclusive to the specify { code to } inclusive to { code true } <END>
<BEG> returns the index of the first bit that be set to { code true } that occur on or after the specify starting index <END>
<BEG> flips all bit : 1 -- > 0 and 0 -- > 1 <END>
<BEG> total size of all queue of the delivery table <END>
<BEG> checks if seqno have already be receive from sender <END>
<BEG> adds hdr at the next available slot <END>
<BEG> increases the capacity of the array and copy the content of the old into the new array <END>
<BEG> gets the wrapped object <SEG> if there be one <END>
<BEG> replaces < addr > with the local address and < cluster > with the cluster name <END>
<BEG> adds a message to the table param msg the message param resize whether or not to resize the table <END>
<BEG> adds another batch to this one param batch the batch to add to this batch param resize when true <SEG> this batch will be resize to accommodate the other batch return the number of message from the other batch that be add successfully <END>
<BEG> removes all message which match filter param filter the filter <END>
<BEG> returns true if all member have a corresponding seqno > = 0 <SEG> else false <END>
<BEG> returns an array of member whose seqno be not set <END>
<BEG> returns a < em > copy < em > of the cache 's content <END>
<BEG> gets the next available resource for which the lock can be acquire and return it and it associated lock <SEG> which need to be release when the caller be do use the resource <END>
<BEG> adds a new element and return the sequence number at which it be insert <END>
<BEG> removes the element at the index match seqno <END>
<BEG> non-blocking alternative to { link # foreach visitor } : iteration be perform on the array that exist at the time of this call <END>
<BEG> grows the array to at least new_capacity <END>
<BEG> checks if there be at least buffer length 2 contiguous space in range [ low+1 high-1 ] available <END>
<BEG> returns the number of non-null element in range [ low high-1 ] return <END>
<BEG> shrinks the array to half of it current size if the current number of element fit into half of the capacity <END>
<BEG> check if we have at least space_needed contiguous free slot available in range [ low+1 high-1 ] param space_needed the number of contiguous free slot require to do compaction <SEG> usually half of the current buffer size return true if a contiguous space be find <SEG> false otherwise <END>
<BEG> returns the next available multicast address <SEG> e g <END>
<BEG> returns a list of member which do n't send a valid response <END>
<BEG> waits until all response have be receive <SEG> or until a timeout have elapse <END>
<BEG> tries to add a new element at the current write index and advance the write index <END>
<BEG> removes the next available element <SEG> block until one be available if need <END>
<BEG> removes a number of message and add them to c contrary to { link # drainto collection <SEG> int } <SEG> this method block until at least one message be available <SEG> or the caller thread be interrupt <END>
<BEG> removes message and add them to c param c the array to add message to <END>
<BEG> adds a new element to the buffer param seqno the seqno of the element param element the element param block if true <SEG> add will block when the buffer be full until there be space <END>
<BEG> only use for test ! ! <END>
<BEG> returns a list of message in the range [ from to ] <SEG> include from and to param from param to return a list of message <SEG> or null if none in range [ from to ] be find <END>
<BEG> nulls element between low and seqno and forward low <END>
<BEG> returns an iterator over the element of the ring buffer in the range [ hd+1 hr ] return ringbufferiterator throw nosuchelementexception be hd be move forward during the iteration <END>
<BEG> returns the value associate with address key param key return object value <END>
<BEG> returns the first value in the response set <END>
<BEG> returns the result from non-suspected member that be not null <END>
<BEG> adds a single seqno <END>
<BEG> adds a seqno range <END>
<BEG> removes all seqnos > seqno <END>
<BEG> returns the last seqno <SEG> this should also be the high seqno in the list a we 're suppose to add seqnos in order return <END>
<BEG> removes and add to collection c a many element a possible include waiter but not exceed max_bytes <END>
<BEG> removes message with flag dont_bundle and oob set and execute them in the oob or internal thread pool <END>
<BEG> returns the total count of all value <END>
<BEG> schedule a task for execution at vary interval <END>
<BEG> stops the timer <SEG> cancel all task <END>
<BEG> returns the timestamp ns return the result of the last call to { link system # nanotime } n <END>
<BEG> prints the value of the description and cv field to system out <END>
<BEG> returns the catenation of the description and cv field <END>
<BEG> returns the version field a a string <END>
<BEG> compares the specified version number against the current version number <END>
<BEG> checks whether ver be binary compatible with the current version <END>
<BEG> returns the address of the member that issue this view return the address of the the creator <END>
<BEG> establishes an order between 2 viewids <END>
<BEG> returns the path that be pass to the operation when add return operation input path <END>
<BEG> returns the number of optimistic lock use to perform the operation return qty <END>
<BEG> returns the time spend try the operation with optimistic lock return time in m <END>
<BEG> returns true if this participant be the current leader return true false <END>
<BEG> returns the unique id of the instance <END>
<BEG> return get the current instance status <END>
<BEG> evaluation rule implement in com netflix discovery discoveryclient # isok method <END>
<BEG> an evaluator that only care about http 2xx response <END>
<BEG> return the up current when the event be generate <END>
<BEG> return the current at the time the event be generate <END>
<BEG> return return the client status immediately before the change <END>
<BEG> join all value separate them with a comma <END>
<BEG> renew the lease <SEG> use renewal duration if it be specify by the associate { link t } during registration <SEG> otherwise default duration be { link # default_duration_in_secs } <END>
<BEG> mark the service a up <END>
<BEG> set the lease service up timestamp <END>
<BEG> checks if the lease of a give { link com netflix appinfo instanceinfo } have expire or not <END>
<BEG> gets the millisecond since epoch when the lease be register <END>
<BEG> gets the millisecond since epoch when the lease be last renewed <END>
<BEG> gets the millisecond since epoch when the service for the lease be mark a up <END>
<BEG> like { link # bindbyname java util map } but this method silently ignore any unnecessary parameter that be pass in <END>
<BEG> gets path <END>
<BEG> look for the annotationtype in the class or one of it ancestor <END>
<BEG> look for a field base on his name and a give annotation in a class <END>
<BEG> param clazz the class param annotationtypes the annotation type expect return true if one of the give annotation type be find <SEG> false otherwise <END>
<BEG> return all field of the class <SEG> include inherit one <END>
<BEG> return all field of the class if annotate with the give type <END>
<BEG> returns a method annotate with the give annotation class param clazz the target object class param annoclass the annotation class that you be look for return the annotate method if any ; null otherwise <END>
<BEG> returns a set of methods annotate with the give annotation class param clazz the target object class param annoclass the annotation class that you be look for return the annotate method if any ; empty set otherwise <END>
<BEG> this condition will be signal if a zookeeper event be process and the event contain a data child change <END>
<BEG> this condition will be signal if any znode relate zookeeper event be receive <END>
<BEG> gives all entry to be log <END>
<BEG> gives the string to be log <SEG> ignore field with null value return string <END>
<BEG> called during initialization of the logger <END>
<BEG> the property string that specify that a key store or trust store should use this store file type <END>
<BEG> the file extension that be associate with this file type <END>
<BEG> converts a property value to a storefiletype enum <END>
<BEG> if < code > propertyvalue < code > be not null or empty <SEG> return the result of < code > keystorefiletype frompropertyvalue propertyvalue < code > <END>
<BEG> validate the provided znode path string param path znode path string throw illegalargumentexception if the path be invalid <END>
<BEG> convert windows path to unix param path file path return convert file path <END>
<BEG> this method take a list & lt ; string & gt ; and a delimiter and join the string into a single string <SEG> where the original string be separate use the give delimiter <END>
<BEG> returns time in millisecond a do system currenttimemillis <SEG> but use elapsed time from an arbitrary epoch more like system nanotime <END>
<BEG> explicitly return system dependent current wall time <END>
<BEG> this be to convert the elapsedtime to a date <END>
<BEG> increment the value by one <END>
<BEG> return the quota path associate with this prefix param path the actual path in zookeeper <END>
<BEG> return a response with the command set to the primary name and the error set to null these be the two entry that all command response be require to include <END>
<BEG> gets the error string may be null <END>
<BEG> call with a single argument of user : pas to generate authdata <END>
<BEG> put the name back together from the part <END>
<BEG> returns transaction log directory <END>
<BEG> for type that support it <SEG> return the extended value from an extended ephemeral owner return 0 or extend value <END>
<BEG> convert a znode ephemeral owner to an ephemeral type <END>
<BEG> adds or update expiration time for element in queue <SEG> round the timeout to the expiry interval bucket use by this queue <END>
<BEG> return millisecond until next expiration time <SEG> or 0 if have already past <END>
<BEG> remove the next expired set of element from expiremap <END>
<BEG> returns an unmodifiable view of the expiration time - & gt ; element map <END>
<BEG> updates statistic by set the last buffer usage size <END>
<BEG> verifies if a give set be a quorum <END>
<BEG> returns weight of 1 by default <END>
<BEG> verifies if a set be a majority <END>
<BEG> returns all port return list of all port <END>
<BEG> returns distinct list of all host string return list of all host <END>
<BEG> returns a reachable address <END>
<BEG> returns a set of all reachable address <END>
<BEG> returns an address from the set <END>
<BEG> minimum session timeout in millisecond <SEG> -1 if unset <END>
<BEG> maximum number of pending socket connection to read <SEG> -1 if unset <END>
<BEG> add new digest to the hash value maintain in this class <END>
<BEG> return the long value of the hash <END>
<BEG> remove the watch <SEG> and return the number of watch be remove <END>
<BEG> optimized for code which will add the same value again and again <SEG> more specifically this be use to add new bit for watcher <SEG> and the same watcher may watch thousand or even million of node <SEG> which will call add the same value of this function <SEG> check exist use read lock will optimize the performance here <END>
<BEG> remove only call once when the session be close <SEG> so use write lock directly without check read lock <END>
<BEG> reads from the buffer in a fifo manner <END>
<BEG> gets host and port by split server config with support for ipv6 literal return string [ ] first element be the ip address and the next be the port param s server config <SEG> server : port <END>
<BEG> add watch to specific path <END>
<BEG> return a new pathparentiterator that iterate from the give path to all parent <END>
<BEG> return a new pathparentiterator that only return the give path - i e <END>
<BEG> return an iterable view so that this iterator can be use in for each statement <END>
<BEG> returns true if this iterator be currently at a parent path a oppose to the initial path give to the constructor return true false <END>
<BEG> checks if the give path have watch set <END>
<BEG> gets the path that the give session have set watch on <END>
<BEG> gets the number of connection session that have set watch <END>
<BEG> gets the number of path that have watch set on them <END>
<BEG> gets the total number of watch set <END>
<BEG> gets the client port <END>
<BEG> gets the data directory <END>
<BEG> gets the data log directory <END>
<BEG> gets the tick time <END>
<BEG> gets the maximum client connection per host <END>
<BEG> returns the server socket listen backlog length <END>
<BEG> get the count of node allow a part of quota return the count a part of this string <END>
<BEG> unregistering watcher that be add on path <END>
<BEG> returns client path which have specify for unregistering it watcher return client path <END>
<BEG> computes the position of the first set bit of the last long size-k bit return long size-k if the last k bit be all zero <END>
<BEG> return # set bit total # of bit <END>
<BEG> given the number of bucket that can be use per element <SEG> return the optimal number of hash function in order to minimize the false positive rate <END>
<BEG> given a maximum tolerable false positive probability <SEG> compute a bloom specification which will give less than the specified false positive rate <SEG> but minimize the number of bucket per element and the number of hash function use <END>
<BEG> return a bloomfilter that always return a positive match <SEG> for test <END>
<BEG> resets the buffer to empty <END>
<BEG> return the number of item strictly before the current element <END>
<BEG> return the sum of the size function for all element strictly before the current element <END>
<BEG> return the first group in this set <END>
<BEG> return the large element less than or equal to base <END>
<BEG> return the subset of element equal to or great than base <END>
<BEG> adds a sample to a histogram <END>
<BEG> param q the quantile desire <END>
<BEG> returns an upper bound on the number bytes that will be require to represent this histogram <END>
<BEG> outputs a histogram a byte use a particularly cheesy encode <END>
<BEG> reads a histogram from a byte buffer return the new histogram structure <END>
<BEG> encodes a value use the variable-length encoding from < a href= http : code google com apis protocolbuffers docs encode html > google protocol buffers < a > <END>
<BEG> see # writesignedvarlong long <SEG> dataoutput <END>
<BEG> see # writeunsignedvarlong long <SEG> dataoutput < p > this one do not use stream and be much faster <END>
<BEG> throw illegalargumentexception if variable-length value do not terminate after 5 byte have be read throw ioexception if { link datainput } throw { link ioexception } see # readsignedvarlong datainput <END>
<BEG> creates a span customizer that will affect the current span in scope if present <END>
<BEG> override to change what data from the error be parse into the span model it <END>
<BEG> normally <SEG> { link # handle tracecontext <SEG> mutablespan } be only call upon explicit termination of a span : { link span # finish } <SEG> { link span # finish long } or { link span # flush } <END>
<BEG> when true <SEG> all span become real span even if they be n't sample remotely <END>
<BEG> returns true if there be no data add <END>
<BEG> returns the { link brave span # name string span name } or null <END>
<BEG> see brave span # name string <END>
<BEG> returns the { link brave span # start long span start timestamp } or zero <END>
<BEG> returns the { link brave span # kind brave span kind span kind } or null <END>
<BEG> see brave span # kind brave span kind <END>
<BEG> when null { link brave tracing builder # localservicename string default } be used <END>
<BEG> see brave tracing builder # localservicename string <END>
<BEG> when null { link brave tracing builder # localip string default } will be use for zipkin <END>
<BEG> the text representation of the primary ipv4 or ipv6 address associate with the remote side of this connection <END>
<BEG> port of the remote ip 's socket or 0 <SEG> if not know <END>
<BEG> see brave span # remoteipandport string <SEG> int <END>
<BEG> returns true if an annotation with the give value exist in this span <END>
<BEG> returns the last value associate with the key or null <END>
<BEG> allows you to update value for redaction purpose <END>
<BEG> allows you to copy all data into a different target <SEG> such a a different span model or log <END>
<BEG> returns true if the span id be { link # setshared share } with a remote client <END>
<BEG> indicates we be contribute to a span start by another tracer ex on a different host <END>
<BEG> this be the last in the chain of finish span handler <END>
<BEG> parses a 1 to 32 character lower-hex string with no prefix into an unsigned long <SEG> toss any bit high than 64 <END>
<BEG> parses a 16 character lower-hex string with no prefix into an unsigned long <SEG> start at the specified index <END>
<BEG> inspired by { code okio buffer writelong } <END>
<BEG> adapted from code in { code com google common net inetaddresses ipstringtobytes } <END>
<BEG> like { link logger # log level <SEG> string <END>
<BEG> like { link logger # log level <SEG> string <SEG> object } <SEG> except with a throwable arg <END>
<BEG> returns the state currently accumulate for this trace id and span id <END>
<BEG> returns a clock that ensure starttimestamp consistency across the trace <END>
<BEG> trace context be equal only on trace id and span id <END>
<BEG> this also match equal against a real span <END>
<BEG> when implement { linkplain # newscope tracecontext } <SEG> decorate the result before return it <END>
<BEG> like { link # newscope tracecontext } <SEG> except return { link scope # noop } if the give context be already in scope <END>
<BEG> wraps the input so that it execute with the same context a now <END>
<BEG> wraps an underlying propagation implementation <SEG> push one or more field <END>
<BEG> synonym for { link # get string } <END>
<BEG> returns the value of the field with the specify key or null if not available <END>
<BEG> sets the current value of the field with the specify key <SEG> or drop if not a configured field <END>
<BEG> returns a mapping of any field in the extraction result <END>
<BEG> useful when develop instrumentation a state be enforce more strictly <END>
<BEG> identifies problem by throw assertion error when a scope be close on a different thread <END>
<BEG> in-process trace context propagation back by a static thread local <END>
<BEG> when non-zero <SEG> the trace contain this span use 128-bit trace identifier <END>
<BEG> returns { code $ traceid } <END>
<BEG> the request that initiate this response or { code null } if unknown <END>
<BEG> returns true when { code ab traceid < = boundary } <END>
<BEG> since 5 8 <END>
<BEG> since 4 4 deprecate since 5 8 <SEG> use { link # newbuilder } <END>
<BEG> the rate-limited sampler allow you to choose an amount of trace to accept on a per-second interval <END>
<BEG> returns a function that return null on null input instead of invoke the delegate with null <END>
<BEG> ignores the argument and return null <END>
<BEG> returns the counter value information for the counter with the give metric name <END>
<BEG> returns the current accumulated timing information for the timer with the give metric name <END>
<BEG> deprecate use { link metricsfactory } and { link metrics # metrics metricsfactory } instead <END>
<BEG> returns 16 or 32 character hex string depend on if { code high } be zero <END>
<BEG> param id a long that represent the traceid use to make a sampling decision the command line argument <END>
<BEG> updates the probabilistic and lowerbound sampler param samplingrate the sampling rate for probabilistic sample param lowerbound the low bound limit for low bound sample return true iff any sampler be update <END>
<BEG> updates the guaranteedthroughputsampler for each operation param strategies the parameter for operation sample return true iff any sampler be update <END>
<BEG> uses a trace id to make a sampling decision <END>
<BEG> only implement to maintain compatibility with sample interface <END>
<BEG> calls { link threadlocalrandom # current } <SEG> if this class be present if you be use java 7 <END>
<BEG> creates an inbound binary instance use for extraction with the specified bytebuffer a input <END>
<BEG> creates an outbound { link binary } instance use for injection with the specified bytebuffer a output <END>
<BEG> creates a random strings consisting of alphanumeric character with a length of 32 <END>
<BEG> creates a alphanumeric projection with a give length of the give object use it { link object # hashcode } <END>
<BEG> generate invocation id if it do n't exist in traceebackend and configuration asks for one param backend currently use traceebackend <END>
<BEG> generate session id hash if it do n't exist in traceebackend and configuration asks for one param backend currently use traceebackend param sessionid current http sessionid <END>
<BEG> param rate minimum sample rate be 0 0001 <SEG> or 0 01 % of trace <END>
<BEG> returns true if span with this trace id should be record to storage <END>
<BEG> for rpc two-way span <SEG> the duration between c and cr be authoritative <END>
<BEG> instrumentation should set { link span # timestamp } when record a span so that guess-work be n't need <END>
<BEG> when perform update <SEG> do n't overwrite an authoritative timestamp with a guess ! <END>
<BEG> writes a length-prefixed string <END>
<BEG> blocks until { link callback # onsuccess object } or { link callback # onerror throwable } <END>
<BEG> reads from byte serialize in tbinaryprotocol <END>
<BEG> writes the current instance in tbinaryprotocol <END>
<BEG> throw illegalargumentexception if the input be n't a json or thrift list or object <END>
<BEG> span key or trace id key <END>
<BEG> returns the same value <SEG> compute a necessary <END>
<BEG> used to conditionally close resource <END>
<BEG> decodes a span from zipkin v2 encode <END>
<BEG> gets the protocol response code associate with this dnsexception <END>
<BEG> converts an ordinal value into a { link messagetype } <END>
<BEG> note that the base be a relative path from the exit context <END>
<BEG> returns the family of the network address <END>
<BEG> returns the source netmask <END>
<BEG> returns the ip address of the client <END>
<BEG> converts an edns option the type-specific option data only into wire format <END>
<BEG> checks that a numeric dclass be valid <END>
<BEG> converts a string representation of a dclass into it numeric value return the class code <SEG> or -1 on error <END>
<BEG> marks the follow byte in the stream a active <END>
<BEG> clears the active region of the string <END>
<BEG> restores the previously set active region <END>
<BEG> resets the current position of the input stream to the specify index <SEG> and clear the active region <END>
<BEG> restores the input stream to it state before the call to { link # save } <END>
<BEG> reads a byte array of a specified length from the stream into an exist array <END>
<BEG> reads a byte array of a specified length from the stream <END>
<BEG> reads a counted string from the stream <END>
<BEG> writes an unsigned 16 bit value to the specify position in the stream <END>
<BEG> returns a byte array contain the current content of the stream <END>
<BEG> converts a numeric extended flag into a string <END>
<BEG> converts a textual representation of an extended flag into it numeric value <END>
<BEG> parses a formatted time string into an instant <END>
<BEG> converts the generate specification to a string contain the corresponding $ generate statement <END>
<BEG> sets a flag to the supplied value see flags <END>
<BEG> retrieves a flag see flags <END>
<BEG> retrieves the message id <END>
<BEG> sets the message 's rcode see rcode <END>
<BEG> retrieves the mesasge 's opcode see opcode <END>
<BEG> retrieves the record count for the give section see section <END>
<BEG> returns an array contain the wire format representation of the message <END>
<BEG> returns an array contain the wire format representation of the message with the specify maximum length <END>
<BEG> sets the prefix to use when convert to and from value that do n't have mnemonic <END>
<BEG> checks that a numeric value be within the range [ 0 max ] <END>
<BEG> defines the text representation of a numeric value <END>
<BEG> copies all mnemonic from one table into another <END>
<BEG> gets the text mnemonic corresponding to a numeric value <END>
<BEG> gets the numeric value correspond to a text mnemonic <END>
<BEG> converts a string representation of an opcode into it numeric value <END>
<BEG> clears all define option <END>
<BEG> sets an option to the the supplied value <END>
<BEG> removes an option <END>
<BEG> checks if an option be define <END>
<BEG> returns the value of an option a an integer <SEG> or -1 if not define <END>
<BEG> converts a numeric section into a full description string <END>
<BEG> converts a numeric section into a full description string for an update message <END>
<BEG> compares two number use serial arithmetic <END>
<BEG> increments a serial number <END>
<BEG> generates a tsig record with a specific error for a message and add it to the message <END>
<BEG> parses a record from the string <SEG> and indicate that the record should be insert into the zone <END>
<BEG> indicates that the record should be insert into the zone <END>
<BEG> indicates that all of the record in the rrset should be insert into the zone <END>
<BEG> convert binary data to a hex-encoded string param b an array contain binary data return a string contain the encode data <END>
<BEG> convert binary data to a base64-encoded string param b an array contain binary data param useurl true to use base64url encode i e <END>
<BEG> formats data into a nicely format base64 encode string param b an array contain binary data param linelength the number of character per line param prefix a string prefix the character on each line param addclose whether to add a close parenthesis or not return a string represent the format output <END>
<BEG> dumps a byte array into hex format <END>
<BEG> returns the zone origin 's ns record <END>
<BEG> adds an rrset to the zone param rrset the rrset to be add see rrset <END>
<BEG> returns the content of the zone a a string in master file format <END>
<BEG> return the string representation of this type return string <END>
<BEG> param index return label <END>
<BEG> param index return mask value <END>
<BEG> checks if the class be unique param index return < code > true < code > be the class be unique <SEG> < code > false < code > otherwise <END>
<BEG> param name return class for name <END>
<BEG> param key return map entry for the key <END>
<BEG> returns all entry in the cache return all entry in the cache <END>
<BEG> get a matching dns entry from the table use issameentry <END>
<BEG> removes a specific entry from the table <END>
<BEG> replace an exist entry by a new one < br > < b > note : < b > the 2 entry must have the same key <END>
<BEG> check if two entry have exactly the same name <SEG> type <SEG> and class <END>
<BEG> check if two entry have the same subtype <END>
<BEG> returns the subtype of this entry return subtype of this entry <END>
<BEG> return record class <END>
<BEG> param dout exception ioexception <END>
<BEG> creates a byte array representation of this record <END>
<BEG> debugging <END>
<BEG> appends answer to this incoming <END>
<BEG> return list of question <END>
<BEG> return number of question in the message <END>
<BEG> return list of additional answer <END>
<BEG> check if the message be a query <END>
<BEG> return the number of byte available in the message <END>
<BEG> add an answer if it be not suppress <END>
<BEG> add an authoritative answer to the message <END>
<BEG> builds the final message buffer to be send and return it <END>
<BEG> true if this record be suppress by the answer in a message <END>
<BEG> get the expiration time of this record <END>
<BEG> get the remain ttl for this record <END>
<BEG> non-javadoc see javax jmdns impl dnsentry # isexpired long <END>
<BEG> reset the ttl of a record <END>
<BEG> when a record flush we do n't remove it immediately <SEG> but mark it for rapid decay <END>
<BEG> non-javadoc see javax jmdns jmmdns # getnames <END>
<BEG> non-javadoc see javax jmdns jmmdns # addservicetypelistener javax jmdns servicetypelistener <END>
<BEG> non-javadoc see javax jmdns jmmdns # addservicelistener java lang string <SEG> javax jmdns servicelistener <END>
<BEG> non-javadoc see javax jmdns impl serviceinfoimpl delegate # textvalueupdated javax jmdns serviceinfo <SEG> byte [ ] <END>
<BEG> non-javadoc see javax jmdns jmmdns # listbysubtype java lang string <SEG> long <END>
<BEG> return < cod > true < code > if the listener must be call synchronously <END>
<BEG> non-javadoc see javax jmdns jmmdns networktopologydiscovery # getinetaddresses <END>
<BEG> non-javadoc see javax jmdns impl task dnstask # start java util timer <END>
<BEG> non-javadoc see javax jmdns impl task resolver # addanswers javax jmdns impl dnsoutgoing <END>
<BEG> non-javadoc see javax jmdns impl task resolver # description <END>
<BEG> non-javadoc see javax jmdns impl task state dnsstatetask # buildoutgoingforinfo javax jmdns impl serviceinfoimpl <SEG> javax jmdns impl dnsoutgoing <END>
<BEG> non-javadoc see javax jmdns impl task state dnsstatetask # recovertask java lang throwable <END>
<BEG> for test only do not use in production <END>
<BEG> < p > create an instance of jmdns <END>
<BEG> < p > create an instance of jmdns and bind it to a specific network interface give it ip-address <END>
<BEG> get a docker endpoint usable for instantiate a new dockerhost with dockerhost from endpoint <END>
<BEG> get the docker rest uri <END>
<BEG> get the docker rest bind uri <END>
<BEG> get the docker ip address or hostname <END>
<BEG> get the path to certificate and key for connect to docker via https <END>
<BEG> create a { link dockerhost } from docker_host and docker_port env var <END>
<BEG> hostname ip address and port of the registry <END>
<BEG> return registry server address give first part of image <END>
<BEG> accessor that need to be overridden to return < code > true < code > if the object id may be serialize a json object ; use by <SEG> for example <SEG> jsog handle <END>
<BEG> helper method call to verify change to standard feature <END>
<BEG> method that can be call to get the name associate with the current event <END>
<BEG> method that return location of the last processed character ; usually for error reporting purpose <END>
<BEG> method call to release internal buffer own by the base reader <END>
<BEG> method call when an eof be encounter between token <END>
<BEG> 05-aug-2008 <SEG> tatu : important note : this must start with more accurate representation <SEG> since we do n't know which value be the original one others get generate when request <END>
<BEG> internal package method : error reporting <END>
<BEG> method that sub-classes must implement to support escaped sequence in base64-encoded section <END>
<BEG> helper method use to encapsulate logic of include or not of source reference when construct { link jsonlocation } instance <END>
<BEG> return 6-bit decoded value <SEG> if valid character ; <END>
<BEG> let 's assume caller have do necessary check ; this method must be fast and inlinable <END>
<BEG> method that encode give right-aligned lsb 24-bit value into 4 base64 character <SEG> store in give result buffer <END>
<BEG> method that output partial chunk which only encode one or two byte of data <END>
<BEG> method that encode give right-aligned lsb 24-bit value into 4 base64 byte ascii <SEG> store in give result buffer <END>
<BEG> convenience method for decode content of a base64-encoded string <SEG> use this variant 's setting and append decoded binary data use provide { link bytearraybuilder } <END>
<BEG> helper method that will construct a message to use in exception for case where input end prematurely in place where padding would be expect <END>
<BEG> method use to get the default variant mime_no_linefeeds for case where caller do not explicitly specify the variant <END>
<BEG> accessor for find number of match <SEG> where specific token and sub-tree starting if structure type be pass <END>
<BEG> specialized variant of { link # _checkparentpath } use when check parent for a property name to be include with value : rule be slightly different <END>
<BEG> method call to indicate that output of non-filtered object one that may have be include either completely <SEG> or in part be complete <SEG> in case where filter other that { link # include_all } be return <END>
<BEG> call make when verify whether a scaler value be be read from a parser <END>
<BEG> call make to verify whether leaf-level boolean value should be include in output or not <END>
<BEG> call make to verify whether leaf-level < code > int < code > value should be include in output or not <END>
<BEG> call make to verify whether leaf-level { link bigdecimal } value should be include in output or not <END>
<BEG> call make to verify whether leaf-level embed opaque value should be include in output or not <END>
<BEG> overridable default implementation delegate to all scalar value inclusion check method <END>
<BEG> overrides <END>
<BEG> accessor for get brief textual name of match format if any null if none <END>
<BEG> helper method that can be use to get a copy of standard json escape definition ; this be useful when just want to slightly customize definition <END>
<BEG> public api <SEG> buffer management <END>
<BEG> < p > note : the method can only be call once during it life cycle <END>
<BEG> method to call when all the processing buffer can be safely recycled <END>
<BEG> accessor for possibly available information about token that be be decode while encounter end of input <END>
<BEG> factory method for get an instance ; this be either recycled per-thread instance <SEG> or a newly construct one <END>
<BEG> method that will quote text content use json standard quoting <SEG> and return result a a character array <END>
<BEG> method that will quote text content use json standard quoting <SEG> and append result to a supply { link stringbuilder } <END>
<BEG> ok : let 's keep strategy simple : ignoring optional minus sign <SEG> we 'll accept 1 - 9 digit and parse thing efficiently ; otherwise just defer to jdk parse functionality <END>
<BEG> ok <SEG> now ; a the very first thing <SEG> let 's just optimize case of fake longs ; that be <SEG> if we know they must be ints <SEG> call int parsing <END>
<BEG> a per [ jackson-827 ] <SEG> let 's use min_value a it be available on all jdks ; normalize only in jdk 1 6 <END>
<BEG> accessor for access value that have be quote use json quote rule <SEG> and encode use utf-8 encoding <END>
<BEG> accessor for access value a be without json quote encode use utf-8 encoding <END>
<BEG> although this method be implement by the base class <SEG> and it should never be call by main code <SEG> let 's still implement it bit more efficiently just in case <END>
<BEG> assumption here be that we will be get a value at least before call this method again <SEG> and so will auto-increment index to avoid have to do another call <END>
<BEG> method for construct a new { link jsonfactory } that have the same setting a this instance <SEG> but be otherwise independent i e <END>
<BEG> since 2 1 param exp <END>
<BEG> method for access kind of { link formatfeature } that a parser { link jsonparser } produce by this factory would accept <SEG> if any ; < code > null < code > return if none <END>
<BEG> somewhat nasty check : since we ca n't make this abstract due to backwards compatibility concern <SEG> need to prevent format name leakage <END>
<BEG> method that can be call to determine if a custom { link objectcodec } be need for bind data parse use { link jsonparser } construct by this factory which typically also imply the same for serialization with { link jsongenerator } <END>
<BEG> method for get currently configure input decorator if any ; there be no default decorator <END>
<BEG> method for construct json parser instance to parse content of resource reference by give url <END>
<BEG> method for construct parser for parse the content access via specify reader <END>
<BEG> method for construct parser for parse content of give string <END>
<BEG> method for construct parser for parse content of give char array <END>
<BEG> optional method for construct parser for read content from specify { link datainput } instance <END>
<BEG> 23-apr-2015 <SEG> tatu : let 's allow disabling of buffer recycle scheme <SEG> for case where it be consider harmful possibly on android <SEG> for example <END>
<BEG> helper method use for construct an optimal stream for parser to use <SEG> when input be to be read from an url <END>
<BEG> return byte offset within underlie stream <SEG> reader or writer <SEG> if available ; -1 if not <END>
<BEG> accessor for get a textual description of source reference object return by { link # getsourceref } <SEG> a include in description return by { link # tostring } <END>
<BEG> the method return the string representation of the request payload if one be specify for parser that throw this exception <END>
<BEG> method call when we have already get a comma i e <END>
<BEG> returns the leaf of current json pointer expression <END>
<BEG> method that may be call to see if the pointer would match property of a json object with give name <END>
<BEG> accessor for get a sub-pointer <SEG> instance where current segment have be remove and pointer include rest of segment <END>
<BEG> accessor for get a pointer instance that be identical to this instance except that the last segment have be drop <END>
<BEG> method call by the use code to indicate it be do with this instance <END>
<BEG> method mostly need by unit test ; calculate number of entry that be in collision list <END>
<BEG> implementation of a hashing method for variable length strings <END>
<BEG> accessor that can be use to find out type for which parameterization be apply : this be often not same a what { link # getrawclass } return <SEG> but rather one of it supertype <END>
<BEG> overridable helper method <END>
<BEG> specialized method that will release all recycled { link bufferrecycler } if and only if recycler tracking have be enable see { link # system_property_track_reusable_buffers } <END>
<BEG> since 2 9 4 <END>
<BEG> clean up method to call to release all buffer this object may be use <END>
<BEG> method call when result be finalized and we can get the full aggregated result buffer to return to the caller <END>
<BEG> method call when start manual output : will clear out current state and return the first segment buffer to fill <END>
<BEG> method call when the current segment buffer be full ; will append to current content <SEG> allocate a new segment buffer and return it <END>
<BEG> method that will complete manual output process <SEG> coalesce content if necessary and return result a a contiguous buffer <END>
<BEG> nop <END>
<BEG> method that be most useful for debug or test ; return actual number of underlie parser sequence be construct with nor just one remain active <END>
<BEG> method that will switch active delegate parser from the current one to the next parser in sequence <SEG> if there be another parser leave : if so <SEG> the next parser will become the active delegate parser <END>
<BEG> returns the raw request payload object i e <SEG> either byte [ ] or string return object which be a raw request payload i e <SEG> either byte [ ] or string <END>
<BEG> method call to indicate that the underlie buffer should now be recycle if they have n't yet be recycle <END>
<BEG> only share input buffer can have non-zero offset ; buffer segment start at 0 <SEG> and if we have to create a combo buffer <SEG> that too will start from begin of the buffer <END>
<BEG> convenience method for convert content of the buffer into a double value <END>
<BEG> specialized convenience method that will decode a 32-bit int <SEG> of at most 9 digit and possible lead minus sign <END>
<BEG> since the intention of the caller be to directly add stuff into buffer <SEG> we should not have anything in share buffer ie <END>
<BEG> helper method that will try to load version information for specified class <END>
<BEG> orphan utility method <END>
<BEG> method that can be use to collect all real introspectors that this introspector contain <SEG> if any ; or this introspector if it be not a container <END>
<BEG> method for check whether give annotation be consider an annotation bundle : if so <SEG> all meta-annotations it have will be use instead of annotation bundle itself <END>
<BEG> method for efficiently figure out which if give set of < code > enum < code > value have explicitly define name <END>
<BEG> method for determine the string value to use for serialize give enumeration entry ; use when serialize enumeration a strings the standard method <END>
<BEG> accessor that may be call to determine whether this setting object have be explicitly configure with a timezone true <SEG> or be still rely on the default setting false <END>
<BEG> method that calculate bit set flag of all feature that be enable by default <END>
<BEG> method for determine whether annotation processing be enable or not default setting be typically that it be enable ; must explicitly disable <END>
<BEG> accessor for determine whether it be ok to try to force override of access modifier to be able to get or set value of non-public methods <SEG> fields ; to invoke non-public constructors <SEG> methods ; or to instantiate non-public classes <END>
<BEG> test-only method -- do not reflect possibly open-ended set that external mix-in resolver might provide <END>
<BEG> accessor for check number of deserialized property <END>
<BEG> accessor for iterate over property this deserializer use ; with the exception that property pass via creator method specifically <SEG> property-based constructor be not include <SEG> but can be access separate by call { link # creatorproperties } <END>
<BEG> accessor for find property that represent value to pass through property-based creator method constructor or factory method since 2 0 <END>
<BEG> method that will add property name a one of property that can be ignore if not recognize <END>
<BEG> method that allow access all property that this builder currently contain <END>
<BEG> set < string > ignorable = _ignorableprops ; if ignorable == null { ignorable = collections emptyset ; } <END>
<BEG> method that will drop all dynamically construct deserializers one that be count a result value for { link # cacheddeserializerscount } <END>
<BEG> jdk serialization handle <END>
<BEG> 04-feb-2014 <SEG> tatu : as per [ # 390 ] <SEG> it may be necessary to switch the ordering of forward backward reference <SEG> and start with back ref <END>
<BEG> helper method call to see if give non-creator property be the id property ; and if so <SEG> handle appropriately <END>
<BEG> method call to convert from delegate value which be deserialized from json use standard jackson deserializer for delegate type into desired target type <END>
<BEG> bulk access method for check that at least one of feature specify by mask be enable <END>
<BEG> bulk access method for get the bit mask of all { link deserializationfeature } s that be enable <END>
<BEG> convenience method equivalant to : < code > isenabled deserializationfeature fail_on_trailing_tokens < code > since 2 9 <END>
<BEG> accessor for check source value string <SEG> number usually that could not be deserialized into target type { link # gettargettype } <END>
<BEG> accessor for get intend target type <SEG> with which input do not match <SEG> if know ; ` null ` if not know for some reason <END>
<BEG> method for access type class that be miss definition to allow binding of the unrecognized property <END>
<BEG> overridable factory method use to create { link documentbuilder } for parse xml a dom <END>
<BEG> jdk declare generic type of the annotated element ; definition of what exactly this mean depend on sub-class <END>
<BEG> method that can be call to modify access right <SEG> by call { link java lang reflect accessibleobject # setaccessible } on the underlie annotated element <END>
<BEG> for method <SEG> this return declare return type <SEG> which be only useful with getters setter do not usually return anything ; hence void type be return here <END>
<BEG> method call to override a method parameter annotation <SEG> usually due to a mix-in annotation masking or override an annotation 'real ' method have <END>
<BEG> helper method that can be use for a bulk check to see if at least one of give annotation type be include within this map <END>
<BEG> method call to add specified annotation in the map <SEG> but only if it do n't yet exist <END>
<BEG> method that can be use to prune unwanted property <SEG> during construction of serializers and deserializers <END>
<BEG> accessor that can be call to check whether property name be due to an explicit marker usually annotation <SEG> or just by name convention or use of use-default-name marker annotation <END>
<BEG> additional method that may be call instead of { link # getconstructorparameter } to get access to all constructor parameter <SEG> not just the high priority one <END>
<BEG> accessor for set of property that be explicitly mark to be ignore via per-property marker but not class annotation <END>
<BEG> method for find class to use a pojo builder <SEG> if any <END>
<BEG> internal method that will collect actual property information <END>
<BEG> method for collect basic information on all field find <END>
<BEG> method call to get rid of candidate property that be mark a ignored <END>
<BEG> internal method ; helper <END>
<BEG> convenience method for check whether underlie java type be a concrete class or not : abstract class and interface be not <END>
<BEG> convenience method that be functionally same a : < code > javatype t = containedtype index ; if t == null { t = typefactory unknowntype ; } < code > and typically use to eliminate need for null check for common case where we just want to check if containedtype be available first ; and if not <SEG> use unknown type which translate to < code > java lang object < code > basically <END>
<BEG> helper method that check whether this type <SEG> or it optional key or content type have { link # getvaluehandler } or { link # gettypehandler } ; that be <SEG> be there any non-standard handler associate with this type object <END>
<BEG> method for access signature that contain generic type information <SEG> in form compatible with jvm 1 5 a per jls <END>
<BEG> accessor that can be use to determine if this deserializer use another deserializer for actual deserialization <SEG> by delegate call <END>
<BEG> method that will either return null to indicate that type be deserializers have no concept of property ; or a collection of identifier for which < code > tostring < code > will give external property name <END>
<BEG> method call to determine value to be use for empty value most commonly when deserializing from empty json strings <END>
<BEG> method for access full structural path within type hierarchy down to problematic property <END>
<BEG> method be override so that we can properly inject description of problem path <SEG> if such be define <END>
<BEG> method that can be call to see whether this serializer instance will use object id to handle cyclic reference <END>
<BEG> accessor for check whether this serializer be an unwrapping serializer ; this be necessary to know since it may also require caller to suppress writing of the lead property name <END>
<BEG> by default we will just defer to regular handling <SEG> hand out the base type ; and since there be no value <SEG> must just pass null here assume that implementation can deal with it <END>
<BEG> helper method use to get a simple description of all know type id <SEG> for use in error message <END>
<BEG> 18-jan-2013 <SEG> tatu : we may be call with null value occasionally it seem ; nothing much we can figure out that way <END>
<BEG> if no name be explicitly give for a class <SEG> we will just use non-qualified class name <END>
<BEG> string typedesc = classutil classnameof value <SEG> null ; throw new illegalargumentexception can not resolve type id for +typedesc+ use +_idresolver getclass getname + ; <END>
<BEG> since non-json factory typically should not extend this class <SEG> let 's just always return json a name <END>
<BEG> since instance be likely to be custom <SEG> implementation return < code > null < code > if but only if ! <END>
<BEG> method for remove an entry from this arraynode <END>
<BEG> method that will construct an arraynode and add it at the end of this array node <END>
<BEG> method that will add a null value at the end of this array node <END>
<BEG> alternative method that we need to avoid bump into npe issue with auto-unboxing <END>
<BEG> method for add specify binary value at the end of this array note : when serialize a json <SEG> will be output base64 encode return this array node <SEG> to allow chaining <END>
<BEG> method for create an array node <SEG> insert it at the specified point in the array <SEG> and return the < b > newly create array < b > note : not 'this ' array <END>
<BEG> method for create an { link objectnode } <SEG> append it at the end of this array <SEG> and return the < b > newly create node < b > note : not 'this ' array return newly construct objectnode <END>
<BEG> no distinct type ; could use one for textual value <SEG> but give that it 's not in text form at this point <SEG> embedded-object be close <END>
<BEG> hmmh <END>
<BEG> 11-mar-2013 <SEG> tatu : apparently classloaders can manage to load different instance <SEG> render identity comparison break <END>
<BEG> convenience method for check whether this node be a { link floatnode } or { link doublenode } that contain not-a-number nan value <END>
<BEG> method to use for access all field with both name and value of this json object <END>
<BEG> method for create a new { link objectmapper } instance that have same initial configuration a this instance <END>
<BEG> method that will return version information store in and read from jar that contain this class <END>
<BEG> the set of { link module } typeids that be register in this objectmapper <END>
<BEG> deprecate since 2 5 : replace by a fluent form of the method ; { link # setmixins } <END>
<BEG> deprecate since 2 5 : replace by a fluent form of the method ; { link # addmixin class <SEG> class } <END>
<BEG> 18-sep-2014 <SEG> tatu : let 's add explicit check to ensure no one try to use as external_property <SEG> since that will not work with 2 5+ <END>
<BEG> method for disable automatic inclusion of type information ; if so <SEG> only explicitly annotate type one with { link com fasterxml jackson annotation jsontypeinfo } will have additional embed type information <END>
<BEG> method for remove all register { link deserializationproblemhandler } s instance from this mapper <END>
<BEG> deprecate since 2 6 <SEG> use { link # setfilterprovider } instead allow chain <END>
<BEG> < p > note : return type be co-variant <SEG> a basic objectcodec abstraction can not refer to concrete node type a it 's part of core package <SEG> whereas impls be part of mapper package <END>
<BEG> method that can be call to check whether mapper think it could serialize an instance of give class <END>
<BEG> method similar to { link # canserialize class } but that can return actual { link throwable } that be throw when try to construct serializer : this may be useful in figure out what the actual problem be <END>
<BEG> factory method for construct { link objectwriter } with specified feature enable compare to setting that this mapper instance have <END>
<BEG> factory method for construct { link objectwriter } that will serialize object use specify { link dateformat } ; or <SEG> if null pass <SEG> use timestamp 64-bit number <END>
<BEG> factory method for construct { link objectwriter } that will serialize object use specify pretty printer for indentation or if null <SEG> no pretty printer <END>
<BEG> factory method for construct { link objectwriter } that will serialize object use specified filter provider <END>
<BEG> factory method for construct { link objectwriter } that will pass specific schema object to { link jsongenerator } use for write content <END>
<BEG> factory method for construct { link objectwriter } that will use specified base64 encode variant for base64-encoded binary data <END>
<BEG> factory method for construct { link objectreader } that will use specified character escape detail for output <END>
<BEG> factory method for construct { link objectwriter } that will use specified default attribute <END>
<BEG> factory method for construct { link objectreader } that will use specified { link jsonnodefactory } for construct json tree <END>
<BEG> diagnostics method that can be call to check whether this writer have pre-fetched serializer to use : pre-fetching improves performance when writer instance be reuse a it avoid a per-call serializer lookup <END>
<BEG> method for check whether instance of give type can be serialize <SEG> and optionally why a per { link throwable } return <END>
<BEG> minor optimization : let 's canonicalize back to placeholder in case where there be no real data to consider <END>
<BEG> ideally would not require mutable state <SEG> and instead would re-create with final setting <END>
<BEG> method for access value of specified internal setting <END>
<BEG> method for set specific internal setting to give value return old value of the setting <SEG> if any null if none <END>
<BEG> method for remove entry for specify internal setting <END>
<BEG> accessor that will return true if this bean property have to support unwrapping ; ability to replace pojo structural wrapping with optional name prefix and or suffix or in some case <SEG> just removal of wrapper name <END>
<BEG> deprecate since 2 7 <SEG> to be remove from 2 9 <SEG> use { link # gettype } instead <END>
<BEG> get the generic property type of this property writer <END>
<BEG> 06-aug-2013 <SEG> tatu : we may actually want to use equality <SEG> instead of identity so : <END>
<BEG> method that can be use to determine how many serializers this provider be cache currently if it do cache : default implementation do exact count depend on what kind of serializers get cache ; default implementation cache all serializers <SEG> include one that be eagerly construct for optimal access speed < p > the main use case for this method be to allow conditional flushing of serializer cache <SEG> if certain number of entry be reach <END>
<BEG> method that will drop all serializers currently cache by this provider <END>
<BEG> method that define what to do with container element value contain in an array or { link java util collection } : default implementation simply write them out <END>
<BEG> method call by stdserializerprovider # flushcachedserializers to clear all cached serializers <END>
<BEG> method call to convert from source java value into delegate value which will be serialize use standard jackson serializer for delegate type < p > the default implementation use configure { link converter } to do conversion <END>
<BEG> method call by { link basicserializerfactory } to access all serializers this class provide <END>
<BEG> method that can be use for check whether this type be a real collection type ; mean whether it represent a parameterized subtype of { link java util collection } or just something that act like one <END>
<BEG> method that will clear up any cached type definition that may be cache by this { link typefactory } instance <END>
<BEG> low-level lookup method move from { link com fasterxml jackson databind util classutil } <SEG> to allow for override of lookup functionality in environment like osgi <END>
<BEG> 15-sep-2015 <SEG> tatu : prior to 2 7 <SEG> we construct new instance for each call <END>
<BEG> helper method use for construct simple value comparator use for compare array for content equality <END>
<BEG> method call to figure out name of the property <SEG> give correspond suggest name base on a method or field name <END>
<BEG> as per [ jackson-187 ] <SEG> gae seem to throw securityexceptions here and there and gae itself have a bug <SEG> too see [ ] <END>
<BEG> then : well-known proxy etc class if proxy isproxyclass type { return true ; } <END>
<BEG> helper method that check if give class be a concrete one ; that be <SEG> not an interface or abstract class <END>
<BEG> method that will wrap 't ' a an { link illegalargumentexception } and with specified message if it be a checked exception ; otherwise runtime exception or error throw a be <END>
<BEG> method that will locate the innermost exception for give throwable ; and then wrap it a an { link illegalargumentexception } if it be a checked exception ; otherwise runtime exception or error throw a be <END>
<BEG> returns either quote value with double-quotes -- if argument non-null string -- or string null no quote if null <END>
<BEG> helper method use to construct appropriate description when pass either type class or an instance ; in latter case <SEG> class of instance be to be use <END>
<BEG> returns either ` text ` or [ null ] <END>
<BEG> helper method that return { link throwable # getmessage } for all other exception except for { link jsonprocessingexception } <SEG> for which { code getoriginalmessage } be return instead <END>
<BEG> helper method use to get default value for wrapper use for primitive type 0 for integer etc <END>
<BEG> helper method for find wrapper type for give primitive type why be n't there one in jdk ? <END>
<BEG> method that can be use to find primitive type for give class if but only if it be either wrapper type or primitive type ; return ` null ` if type be neither <END>
<BEG> a method that will look for the first enum value annotate with the give annotation <END>
<BEG> convenience accessor for get raw enum instance <END>
<BEG> method use for serialization and introspection by core jackson code <END>
<BEG> method call to start buffer process <END>
<BEG> method call to add a full object array a a chunk buffer within this buffer <SEG> and to obtain a new array to fill <END>
<BEG> method call to indicate that the buffering process be now complete ; and to construct a combined exactly-sized result array <END>
<BEG> helper method that can be use to check how much free capacity will this instance start with <END>
<BEG> return length of the next chunk to allocate <END>
<BEG> method for mark specify type a untouchable <SEG> mean that provider will not try to read or write value of this type or it subtypes <END>
<BEG> method for remove definition of specified type a untouchable : usually only since 2 2 <END>
<BEG> method that will add jsonp wrapper object <SEG> if and a configure by collected annotation <END>
<BEG> returns a copy of the input string in which all { linkplain # isuppercase char uppercase ascii character } have be convert to lowercase <END>
<BEG> returns a copy of the input character sequence in which all { linkplain # isuppercase char uppercase ascii character } have be convert to lowercase <END>
<BEG> if the argument be an { linkplain # isuppercase char uppercase ascii character } return the lowercase equivalent <END>
<BEG> indicates whether { code c } be one of the twenty-six uppercase ascii alphabetic character between { code ' a ' } and { code ' z ' } inclusive <END>
<BEG> truncates the give character sequence to the give maximum length <END>
<BEG> indicates whether the content of the give character sequence { code s1 } and { code s2 } be equal <SEG> ignore the case of any ascii alphabetic character between { code ' a ' } and { code ' z ' } or { code ' a ' } and { code ' z ' } inclusive <END>
<BEG> returns an optional enum constant for the give type <SEG> use { link enum # valueof } <END>
<BEG> returns { code true } if the give object be consider equivalent <END>
<BEG> returns a wrapper of { code reference } that implement { link wrapper # equal object object equal } such that { code wrap a equal wrap b } if and only if { code equivalent a <SEG> b } <END>
<BEG> returns a predicate that evaluate to true if and only if the input be equivalent to { code target } accord to this equivalence relation <END>
<BEG> returns an equivalence that delegate to { link object # equal } and { link object # hashcode } <END>
<BEG> returns an equivalence that use { code == } to compare value and { link system # identityhashcode object } to compute the hash code <END>
<BEG> returns a function which perform a map lookup <END>
<BEG> returns a function which perform a map lookup with a default value <END>
<BEG> returns a function that ignore it input and always return { code value } <END>
<BEG> returns a joiner which automatically place { code separator } between consecutive element <END>
<BEG> returns a { code mapjoiner } use the give key-value separator <SEG> and the same configuration a this { code joiner } otherwise <END>
<BEG> returns the first of two give parameter that be not { code null } <SEG> if either be <SEG> or otherwise throw a { link nullpointerexception } <END>
<BEG> returns a predicate that always evaluate to { code true } <END>
<BEG> returns a predicate that evaluate to { code true } if the object reference be test be null <END>
<BEG> returns a predicate that evaluate to { code true } if the object reference be test be not null <END>
<BEG> returns a predicate that evaluate to { code true } if the object be test { code equal } the give target or both be null <END>
<BEG> returns a predicate that evaluate to { code true } if the object be test be an instance of the give class <END>
<BEG> returns a predicate that evaluate to { code true } if the object reference be test be a member of the give collection <END>
<BEG> returns a predicate that evaluate to { code true } if the { code charsequence } be tested contains any match for the give regular expression pattern <END>
<BEG> this method be rewrite in java from an intermediate step of the murmur hash function in http : code google com p smhasher source browse trunk murmurhash3 cpp <SEG> which contain the following header : murmurhash3 be write by austin appleby <SEG> and be place in the public domain <END>
<BEG> returns an array size suitable for the backing array of a hash table that use open address with linear probe in it implementation <END>
<BEG> returns a splitter that consider any single character match by the give { code charmatcher } to be a separator <END>
<BEG> returns a splitter that use the give fixed string a a separator <END>
<BEG> returns a splitter that consider any subsequence match a give pattern regular expression to be a separator <END>
<BEG> returns a splitter that divide string into piece of the give length <END>
<BEG> returns a splitter that behave equivalently to { code this } splitter <SEG> but automatically omit empty string from the result <END>
<BEG> returns a splitter that behave equivalently to { code this } splitter but stop splitting after it reach the limit <END>
<BEG> returns a splitter that behave equivalently to { code this } splitter <SEG> but remove all lead or trail character match the give { code charmatcher } from each return substring <END>
<BEG> splits { code sequence } into string component and make them available through an { link iterator } <SEG> which may be lazily evaluate <END>
<BEG> splits { code sequence } into string component and return them a an immutable list <END>
<BEG> returns a { code mapsplitter } which split entry base on this splitter <SEG> and split entry into key and value use the specify key-value splitter <END>
<BEG> returns a function that accept a supplier and return the result of invoke { link supplier # get } on that supplier <END>
<BEG> returns the number of byte in the utf-8-encoded form of { code sequence } <END>
<BEG> this implementation of { code getallpresent } lack any insight into the internal cache data structure <SEG> and be thus force to return the query key instead of the cached key <END>
<BEG> returns the number of time { link cache } lookup method throw an exception while load a new value <END>
<BEG> returns it input <SEG> or throw an exception if this be not a valid key <END>
<BEG> we can almost reuse the inverse 's keyset <SEG> except we have to fix the iteration order so that it be consistent with the forward map <END>
<BEG> creates an unmodifiable <SEG> empty collection of value <END>
<BEG>  < p > the return collection be immutable <END>
<BEG> returns an iterator across all key-value map entry <SEG> use by { code entry iterator } and { code value iterator } <END>
<BEG> returns a string representation of the form { code { key } = { value } } <END>
<BEG> creates a new instance of this multiset 's element set <SEG> which will be return by { link # elementset } <END>
<BEG>  < p > this implementation return { code true } if { code object } be a multiset of the same size and if <SEG> for each element <SEG> the two multisets have the same count <END>
<BEG> constructs an empty { code arraylistmultimap } with enough capacity to hold the specified number of key and value without resize <END>
<BEG> reduces the memory use by this { code arraylistmultimap } <SEG> if feasible <END>
<BEG> creates an { code arraytable } with the mapping in the provide table <END>
<BEG> returns { code true } if the provide key be among the key provide when the table be construct <END>
<BEG> returns { code true } if the provided column key be among the column key provide when the table be construct <END>
<BEG> returns an immutable set of the valid column key <SEG> include those that be associate with null value only <END>
<BEG> returns the child of this node <SEG> in left-to-right order <END>
<BEG> returns the bound type correspond to a boolean value for inclusivity <END>
<BEG> delegates to { link collection # contains } <END>
<BEG> returns { code true } if the collection { code self } contain all of the element in the collection { code c } <END>
<BEG> returns best-effort-sized stringbuilder base on the give collection size <END>
<BEG> used to avoid http : bug sun com view_bug do ? bug_id=6558557 <END>
<BEG> returns a { link collection } of all the permutation of the specify { link collection } <END>
<BEG> begins a new chained comparison statement <END>
<BEG> returns the number of occurrence of { code element } in this multiset <END>
<BEG>  < p > if the data in the multiset be modify by any other thread during this method <SEG> it be undefined which if any of these modification will be reflect in the result <END>
<BEG> the implementation neither produce nor consumes any non-null instance of type c <SEG> so cast the type parameter be safe <END>
<BEG> creates a new { code enummultiset } contain the specified element <END>
<BEG> returns the number of additional element that this queue can accept without evict ; zero if the queue be currently full <END>
<BEG> determines whether this fluent iterable be empty <END>
<BEG> a sensible definition of { link # contains } in term of { link # iterator } <END>
<BEG> a sensible definition of { link # remove } in term of { link # iterator } <SEG> use the iterator 's { code remove } method <END>
<BEG> a sensible definition of { link # equal object } in term of { link # size } and { link # iterator } <END>
<BEG> a sensible <SEG> albeit inefficient <SEG> definition of { link # remove } in term of the { code iterator } method of { link # entryset } <END>
<BEG> a sensible definition of { link # hashcode } a { code entryset hashcode } <END>
<BEG> a sensible definition of { link # lowerentry } in term of the { code lastentry } of { link # headmap object <SEG> boolean } <END>
<BEG> a sensible definition of { link # lowerkey } in term of { code lowerentry } <END>
<BEG> a sensible definition of { link # lastentry } in term of the { code iterator } of the { link # entryset } of { link # descendingmap } <END>
<BEG> a sensible definition of { link # pollfirstentry } in term of the { code iterator } of { code entryset } <END>
<BEG> a sensible definition of { link # pollfirstentry } in term of the { code iterator } of the { code entryset } of { code descendingmap } <END>
<BEG> a sensible definition of { link # descendingkeyset } a the { code navigablekeyset } of { link # descendingmap } <END>
<BEG> a sensible definition of { link # submap object <SEG> object } in term of { link # submap object <SEG> boolean <SEG> object <SEG> boolean } <END>
<BEG> a sensible definition of { link # low } in term of the { code descendingiterator } method of { link # headset object <SEG> boolean } <END>
<BEG> a sensible definition of { link # pollfirst } in term of the { code iterator } method <END>
<BEG> a sensible definition of { link # headset object } in term of the { link # headset object <SEG> boolean } method <END>
<BEG> a sensible definition of { link # lastentry } in term of { code descendingmultiset entryset iterator } <END>
<BEG> creates an empty { code hashbasedtable } with the specify map size <END>
<BEG> returns an immutable sorted set of the key in this map <END>
<BEG> returns an immutable collection of the value in this map <SEG> sort by the ordering of the corresponding key <END>
<BEG> returns a new thread-safe interner which retain a strong reference to each instance it have intern <SEG> thus prevent these instance from be garbage-collected <END>
<BEG> returns a new thread-safe interner which retain a weak reference to each instance it have intern <SEG> and so do not prevent these instance from be garbage-collected <END>
<BEG> removes <SEG> from an iterable <SEG> every element that belong to the provide collection <END>
<BEG> removes <SEG> from an iterable <SEG> every element that do not belong to the provide collection <END>
<BEG> adds all element in { code iterable } to { code collection } <END>
<BEG> divides an iterable into unmodifiable sublists of the give size the final iterable may be small <END>
<BEG> returns the element at the specified position in an iterable <END>
<BEG> returns the element at the specified position in an iterable or a default value otherwise <END>
<BEG> determines if the give iterable contain no element <END>
<BEG> traverses an iterator and remove every element that belong to the provide collection <END>
<BEG> traverses an iterator and remove every element that do not belong to the provide collection <END>
<BEG> returns a string representation of { code iterator } <SEG> with the format { code [ e1 <SEG> e2 <SEG> <SEG> en ] } <END>
<BEG> copies an iterator 's element into an array <END>
<BEG> returns { code true } if every element return by { code iterator } satisfy the give predicate <END>
<BEG> returns the index in { code iterator } of the first element that satisfy the provided { code predicate } <SEG> or { code -1 } if the iterator have no such element <END>
<BEG> advances { code iterator } { code position + 1 } time <SEG> return the element at the { code position } th position <END>
<BEG> clears the iterator use it remove method <END>
<BEG>  < p > creates a decorated insertion-ordered set that also keep track of the order in which key-value pair be add to the multimap <END>
<BEG> creates a new <SEG> empty { code linkedhashmultiset } with the specify expected number of distinct element <END>
<BEG> constructs an empty { code linkedlistmultimap } with enough capacity to hold the specified number of key without rehash <END>
<BEG> returns an unmodifiable list contain the specify first element and back by the specified array of additional element <END>
<BEG> returns every possible list that can be form by choose one element from each of the give list in order ; the n-ary < a href= http : en wikipedia org wiki cartesian_product > cartesian product < a > of the list <END>
<BEG> returns consecutive { linkplain list # sublist int <SEG> int sublists } of a list <SEG> each of the same size the final list may be small <END>
<BEG> returns a reversed view of the specified list <END>
<BEG> an implementation of { link list # equal object } <END>
<BEG> returns a view of the sorted set a a map <SEG> map key from the set accord to the specify function <END>
<BEG> returns the comparator use to order the element in this queue <END>
<BEG> returns a new { code mutableclasstoinstancemap } instance back by a { link hashmap } use the default initial capacity and load factor <END>
<BEG> swaps { code array [ i ] } with { code array [ j ] } <END>
<BEG> reads a count correspond to a serialize map <SEG> multiset <SEG> or multimap <END>
<BEG> stores the content of a map in an output stream <SEG> a part of serialization <END>
<BEG> populates a map by read an input stream <SEG> a part of deserialization <END>
<BEG> creates a < i > mutable < i > <SEG> initially empty { code hashset } instance <END>
<BEG> creates a < i > mutable < i > { code hashset } instance initially contain the give element <END>
<BEG> returns a new hash set use the small initial table size that can hold { code expectedsize } element without resize <END>
<BEG> creates a thread-safe set back by a hash map <END>
<BEG> creates a < i > mutable < i > { code linkedhashset } instance contain the give element in order <END>
<BEG> creates a < i > mutable < i > <SEG> empty { code treeset } instance sort by the natural sort ordering of it element <END>
<BEG> creates a < i > mutable < i > <SEG> empty { code treeset } instance with the give comparator <END>
<BEG> creates an empty { code set } that use identity to determine equality <END>
<BEG> creates an { code enumset } consist of all enum value that be not in the specify collection <END>
<BEG> returns an unmodifiable < b > view < b > of the union of two set <END>
<BEG> returns the set of all possible subset of { code set } <END>
<BEG> returns a synchronized thread-safe navigable set back by the specify navigable set <END>
<BEG> remove each element in an iterable from a set <END>
<BEG> returns { code true } if { code element } be a sorted collection use an order equivalent to { code comparator } <END>
<BEG>  < p > this method return a { link sortedset } <SEG> instead of the { code set } specify in the { link table } interface <END>
<BEG> creates an iterator that return each column value with duplicate omit <END>
<BEG> adds { code elem } a a candidate for the top { code k } element <END>
<BEG> adds each member of { code element } a a candidate for the top { code k } element <END>
<BEG> returns the top { code k } elements offer to this { code topkselector } <SEG> or all element if few than { code k } have be offer <SEG> in the order specify by the factory use to create this { code topkselector } <END>
<BEG> creates an empty { code treebasedtable } that use the natural ordering of both row and column key <END>
<BEG> overridden column iterator to return columns value in globally sort order <END>
<BEG> creates an empty { code treemultimap } order by the natural ordering of it key and value <END>
<BEG> returns the comparator that order the multimap key <END>
<BEG> creates a new <SEG> empty multiset <SEG> sort accord to the element ' natural order <END>
<BEG> wraps the give map into a { code wellbehavedentriesmap } <SEG> which intercept it { code entryset } method by take the { code set < k > keyset } and transform it to { code set < entry < k <SEG> v > > } <END>
<BEG> this be overridden to improve performance <END>
<BEG> escapes a single character use the replacement array and safe range value <END>
<BEG> overridden for performance <END>
<BEG> escapes a single unicode code point use the replacement array and safe range value <END>
<BEG> returns the object that originate this event < em > not < em > the object that originate the wrapped event <END>
<BEG> returns the wrapped <SEG> 'dead ' event <SEG> which the system be unable to deliver to any registered subscriber <END>
<BEG> returns a dispatcher that queue event that be post reentrantly on a thread that be already dispatch an event <SEG> guarantee that all event post on a single thread be dispatch to all subscriber in the order they be post <END>
<BEG> returns a dispatcher that queue event that be post in a single global queue <END>
<BEG> returns a dispatcher that dispatch event to subscriber immediately a they 're post without use an intermediate queue to change the dispatch order <END>
<BEG> registers all subscriber method on the give listener object <END>
<BEG> unregisters all subscriber on the give listener object <END>
<BEG> a reasonable default implementation of { link graph # edge } define in term of { link # node } and { link # successor object } <END>
<BEG> returns an { link endpointpair } represent the endpoint of an edge in { code graph } <END>
<BEG> returns the node { link # adjacentnode object adjacent } to { link # nodeu } along the origin edge <END>
<BEG> returns the node that be adjacent to { code node } along the origin edge <END>
<BEG> iterates in the order { link # nodeu } <SEG> { link # nodev } <END>
<BEG> called after { link # successoriterator } be exhausted <END>
<BEG> returns a { link networkbuilder } for building direct network <END>
<BEG> specifies whether the network will allow parallel edge <END>
<BEG> specifies the expected number of node in the network <END>
<BEG> specifies the order of iteration for the element of { link network # node } <END>
<BEG> returns an empty { link mutablenetwork } with the property of this { link networkbuilder } <END>
<BEG> returns a funnel that extract the byte from a { code byte } array <END>
<BEG> returns a funnel that extract the character from a { code charsequence } <SEG> a character at a time <SEG> without perform any encoding <END>
<BEG> returns a funnel that encode the character of a { code charsequence } with the specify { code charset } <END>
<BEG> returns a funnel for integer <END>
<BEG> wraps a { code primitivesink } a an { link outputstream } <SEG> so it be easy to { link funnel # funnel funnel } an object to a { code primitivesink } if there be already a way to write the content of the object to an { code outputstream } <END>
<BEG> returns { code true } if { code object } be a { link hashcode } instance with the identical byte representation to this hash code <END>
<BEG> returns a string contain each byte of { link # asbytes } <SEG> in order <SEG> a a two-digit unsigned hexadecimal number in low case <END>
<BEG> load 8 byte into long in a little endian manner <SEG> from the substring between position and position + 8 <END>
<BEG> store 8 byte into the provided array at the indicated offset <SEG> use the value provide <END>
<BEG> load 4 byte from the provided array at the indicated offset <END>
<BEG> indicates that the loading of unsafe be successful and the load and store operation will be very efficient <END>
<BEG> encodes the specified range of the specify byte array <SEG> and return the encoded { code string } <END>
<BEG> decodes the specified character sequence <SEG> and return the result { code byte [ ] } <END>
<BEG> the base64 base encode specify by < a href= http : tool ietf org html rfc4648 # section-4 > rfc 4648 section 4 < a > <SEG> base 64 encoding <END>
<BEG> the base64url encode specify by < a href= http : tool ietf org html rfc4648 # section-5 > rfc 4648 section 5 < a > <SEG> base 64 encoding with url and filename safe alphabet <SEG> also sometimes refer to a the web safe base64 <END>
<BEG> the base32 encode specify by < a href= http : tool ietf org html rfc4648 # section-6 > rfc 4648 section 6 < a > <SEG> base 32 encoding <END>
<BEG> writes all the give byte to this sink <END>
<BEG> reads the full content of this byte source a a byte array <END>
<BEG> writes the give character sequence to this sink <END>
<BEG> closes a { link closeable } <SEG> with control over whether an { code ioexception } may be throw <END>
<BEG> returns a readable { link bytesource } view of the data that have be write to this stream <END>
<BEG> calls { link # close } if not already close <SEG> and then reset this object back to it initial state <SEG> for reuse <END>
<BEG> returns a new { link bytesource } for read byte from the give file <END>
<BEG> appends a character sequence such a a string to a file use the give character set <END>
<BEG> equivalent to call { code flush flushable <SEG> true } <SEG> but with no { code ioexception } in the signature <END>
<BEG> writes a char a specify by { link dataoutputstream # writechar int } <SEG> except use little-endian byte order <END>
<BEG> writes a { code string } a specify by { link dataoutputstream # writechars string } <SEG> except each character be write use little-endian byte order <END>
<BEG> writes a { code double } a specify by { link dataoutputstream # writedouble double } <SEG> except use little-endian byte order <END>
<BEG> returns x scale by a power of 2 such that it be in the range [ 1 <SEG> 2 <END>
<BEG> returns it argument if it be non-negative <SEG> zero if it be negative <END>
<BEG> builds an instance represent a vertical transformation with a constant value of { code x } <END>
<BEG> builds an instance for datasets which contain { link double # nan } <END>
<BEG> returns the statistic on the { code x } value alone <END>
<BEG> returns the population covariance of the value <END>
<BEG> returns the < a href= http : mathworld wolfram com correlationcoefficient html > pearson 's or product-moment correlation coefficient < a > of the value <END>
<BEG> returns a linear transformation give the best fit to the data accord to < a href= http : mathworld wolfram com leastsquaresfitting html > ordinary least squares linear regression < a > of { code y } a a function of { code x } <END>
<BEG>  < p > < b > note : < b > this test exact equality of the calculated statistic <SEG> include the floating point value <END>
<BEG> adds the give statistic to the dataset <SEG> a if the individual value use to compute the statistic have be add directly <END>
<BEG> returns an immutable snapshot of the statistic on the { code x } value alone <END>
<BEG> specifies the computation of a median i e <END>
<BEG> specifies the computation of quartile i e <END>
<BEG> specifies the computation of q-quantiles <END>
<BEG> returns a string representation of the host specifier suitable for inclusion in a uri <END>
<BEG> returns the individual component of this domain name <SEG> normalize to all low case <END>
<BEG> indicates whether this domain name end in a { linkplain # ispublicsuffix public suffix } <SEG> include if it be a public suffix itself <END>
<BEG> returns the { linkplain # ispublicsuffix public suffix } portion of the domain name <SEG> or { code null } if no public suffix be present <END>
<BEG> indicates whether this domain name end in a { linkplain # ispublicsuffix public suffix } <SEG> while not be a public suffix itself <END>
<BEG> indicates whether this domain be compose of two or more part <END>
<BEG> returns an { code internetdomainname } that be the immediate ancestor of this one ; that be <SEG> the current domain with the leftmost part remove <END>
<BEG> indicates whether the argument be a syntactically valid domain name use lenient validation <END>
<BEG> returns the domain name <SEG> normalize to all low case <END>
<BEG> equality testing be base on the text supply by the caller <SEG> after normalization a describe in the class documentation <END>
<BEG> returns an { link escaper } instance that escape string so they can be safely include in < a href= http : goo gl mplk6i > url form parameter name and value < a > <END>
<BEG> returns an { link escaper } instance that escape string so they can be safely include in < a href= http : goo gl m2mif0 > url path segment < a > <END>
<BEG> returns an { link escaper } instance that escape string so they can be safely include in a < a href= http : goo gl xxeq4p > url fragment < a > <END>
<BEG> returns a hash code for { code value } ; equal to the result of invoke { code boolean value hashcode } <END>
<BEG> returns { code true } if { code target } be present a an element anywhere in { code array } <END>
<BEG> returns the start position of the first occurrence of the specify { code target } within { code array } <SEG> or { code -1 } if there be no such occurrence <END>
<BEG> returns the value from each provide array combine into a single array <END>
<BEG> returns a comparator that compare two { code boolean } array < a href= http : en wikipedia org wiki lexicographical_order > lexicographically < a > <END>
<BEG> copies a collection of { code boolean } instance into a new array of primitive { code boolean } value <END>
<BEG> returns a fixed-size list back by the specified array <SEG> similar to { link arrays # aslist object [ ] } <END>
<BEG> returns the number of { code value } that be { code true } <END>
<BEG> returns an array contain each value of { code collection } <SEG> convert to a { code byte } value in the manner of { link number # bytevalue } <END>
<BEG> returns the { code char } value that be equal to { code value } <SEG> if possible <END>
<BEG> returns the { code char } near in value to { code value } <END>
<BEG> compares the two specify { code char } value <END>
<BEG> returns the least value present in { code array } <END>
<BEG> returns a big-endian representation of { code value } in a 2-element byte array ; equivalent to { code bytebuffer allocate 2 putchar value array } <END>
<BEG> returns the { code char } value whose big-endian representation be store in the first 2 byte of { code byte } ; equivalent to { code bytebuffer wrap bytes getchar } <END>
<BEG> returns the { code char } value whose byte representation be the give 2 byte <SEG> in big-endian order ; equivalent to { code chars frombytearray new byte [ ] { b1 <SEG> b2 } } <END>
<BEG> returns the least value present in { code array } <SEG> use the same rule of comparison a { link math # min double <SEG> double } <END>
<BEG> returns a serializable converter object that convert between string and double use { link double # valueof } and { link double # tostring } <END>
<BEG> returns the { code int } value whose byte representation be the give 4 byte <SEG> in big-endian order ; equivalent to { code ints frombytearray new byte [ ] { b1 <SEG> b2 <SEG> b3 <SEG> b4 } } <END>
<BEG> returns { code true } if { code type } be one of the nine primitive-wrapper type <SEG> such a { link integer } <END>
<BEG> returns the corresponding wrapper type of { code type } if it be a primitive type ; otherwise return { code type } itself <END>
<BEG> returns the { code byte } value that <SEG> when treat a unsigned <SEG> be equal to { code value } <SEG> if possible <END>
<BEG> compares the two specify { code byte } value <SEG> treat them a unsigned value between 0 and 255 inclusive <END>
<BEG> returns a string representation of { code x } for the give radix <SEG> where { code x } be treated a unsigned <END>
<BEG> returns an { code unsignedinteger } correspond to a give bit representation <END>
<BEG> returns the value of this { code unsignedinteger } a an { code int } <END>
<BEG> returns the value of this { code unsignedinteger } a a { code float } <SEG> analogous to a widen primitive conversion from { code int } to { code float } <SEG> and correctly round <END>
<BEG> returns the least value present in { code array } <SEG> treat value a unsigned <END>
<BEG> returns a comparator that compare two array of unsigned { code int } value < a href= http : en wikipedia org wiki lexicographical_order > lexicographically < a > <END>
<BEG> returns all resource loadable from the current class path <SEG> include the class file of all loadable class but exclude the meta-inf manifest mf file <END>
<BEG> returns all class loadable from the current class path <END>
<BEG> returns all top level class loadable from the current class path <END>
<BEG> returns true if the element be package-private <END>
<BEG> returns the package name of { code classfullname } accord to the java language specification section 6 7 <END>
<BEG> returns a proxy instance that implement { code interfacetype } by dispatch method invocation to { code handler } <END>
<BEG> < p > resolves the give { code type } against the type context represent by this type <END>
<BEG> returns true if { code o } be another { code typetoken } that represent the same { link type } <END>
<BEG> callback method that be call exactly once after the future be complete <END>
<BEG> the initialization of seenexceptions have to be more complicated than we 'd like <END>
<BEG> creates an { code atomicreference } instance with no initial value <END>
<BEG> creates an { code atomicreference } instance with the give initial value <END>
<BEG> creates an { code atomicreferencearray } instance of give length <END>
<BEG> returns a { link runnable } instance that do nothing when run <END>
<BEG> updates { code storedpermits } and { code nextfreeticketmicros } base on the current time <END>
<BEG> returns the stripe that correspond to the pass object <SEG> in ascend a per { link # getat int } order <END>
<BEG> creates a { code striped < lock > } with eagerly initialize <SEG> strongly reference lock <END>
<BEG> creates a { code striped < semaphore > } with eagerly initialize <SEG> strongly reference semaphore <SEG> with the specified number of permit <END>
<BEG> creates a { code striped < readwritelock > } with eagerly initialize <SEG> strongly reference read-write lock <END>
<BEG> returns an exception handler that exit the system <END>
<BEG> returns an { link escaper } instance that escape special character in a string so it can safely be include in an xml document a element content <END>
<BEG> gets a < tt > constantset < tt > param name the name of the constant set to get <END>
<BEG> gets the constant for a name <END>
<BEG> return true if immediate be unsigned value <END>
<BEG> return relocation mode <END>
<BEG> returns c true if label be unused not bound or link <END>
<BEG> returns c true if label be link <END>
<BEG> simple wrapper around log <END>
<BEG> return type of operand <SEG> see c op <END>
<BEG> return c true if operand be none c op_none <END>
<BEG> brief return c true if operand be register of a regtype type or memory <END>
<BEG> byte swap 32 bit or 64 bit register only i486 <END>
<BEG> cpu identification i486 <END>
<BEG> move byte <SEG> word <SEG> dword or qword from absolute address a src to al <SEG> ax <SEG> eax or rax register <END>
<BEG> move byte <SEG> word <SEG> dword or qword from al <SEG> ax <SEG> eax or rax register to absolute address a dst <END>
<BEG> push eflags register 32 bit or 64 bit onto the stack <END>
<BEG> read time-stamp counter pentium <END>
<BEG> read time-stamp counter and processor id new <END>
<BEG> set carry flag to 1 <END>
<BEG> undefined instruction - raise invalid opcode exception <END>
<BEG> absolute value of st 0 fpu <END>
<BEG> add st 0 to a dst and pop register stack fpu <END>
<BEG> load binary coded decimal fpu <END>
<BEG> store bcd integer and pop fpu <END>
<BEG> fp conditional move fpu <END>
<BEG> compare st 0 with a reg and pop the stack fpu <END>
<BEG> compare st 0 with st 1 and pop register stack twice fpu <END>
<BEG> compare st 0 and a reg and set eflags fpu <END>
<BEG> compare st 0 and a reg and set eflags and pop the stack fpu <END>
<BEG> divide st 0 by 32 bit or 64 bit fp value fpu <END>
<BEG> divide a reg by st 0 fpu <END>
<BEG> reverse divide a reg by st 0 fpu <END>
<BEG> add 16 bit or 32 bit integer to st 0 fpu <END>
<BEG> divide st 0 by 32 bit or 16 bit integer a src fpu <END>
<BEG> push a reg onto the fpu register stack fpu <END>
<BEG> load x87 fpu control word 2 byte fpu <END>
<BEG> load x87 fpu environment 14 or 28 byte fpu <END>
<BEG> no operation fpu <END>
<BEG> reverse subtract st 0 from a dst and pop register stack fpu <END>
<BEG> floating point test - compare st 0 with 0 0 <END>
<BEG> unordered compare st 0 with a reg fpu <END>
<BEG> load streaming simd extension control status sse <END>
<BEG> store fence sse <END>
<BEG> flush cache line sse2 <END>
<BEG> load fence sse2 <END>
<BEG> store integer with truncation sse3 <END>
<BEG> set up monitor address sse3 <END>
<BEG> monitor wait sse3 <END>
<BEG> create a new { code clientbuilder } instance use the default client builder implementation class provide by the jax-rs implementation provider <END>
<BEG> create a new custom-configured { link client } instance use the default client builder implementation class provide by the jax-rs implementation provider <END>
<BEG> get entity data <END>
<BEG> get the entity annotation <END>
<BEG> get the http response for which the processing have fail <END>
<BEG> add a value to the current list of value for the supplied key <END>
<BEG> add all the value from the supply value list to the current list of value for the supplied key <END>
<BEG> add a value to the first position in the current list of value for the supplied key <END>
<BEG> return a non-null list of value for a give key <END>
<BEG> get a set of root resource <SEG> provider and { link feature feature } class <END>
<BEG> get a map of custom application-wide property <END>
<BEG> corresponds to the must-revalidate cache control directive <END>
<BEG> corresponds to the value of the no-cache cache control directive <END>
<BEG> corresponds to a set of extension cache control directive <END>
<BEG> generate hash code from cache control property <END>
<BEG> compares object argument to this cache control to see if they be the same consider all property value <END>
<BEG> creates a new instance of { code cookie } by parse the supplied string <END>
<BEG> generate a hash code by hash all of the cooky property <END>
<BEG> check the strength of an { code entitytag } <END>
<BEG> compares { code obj } to this tag to see if they be the same consider weakness and value <END>
<BEG> generate hashcode base on value and weakness <END>
<BEG> adds a new value to the specify form parameter <END>
<BEG> returns multivalued map representation of the form <END>
<BEG> gets the raw type of the enclosed entity <END>
<BEG> return the value of the type parameter of { code generictype < t > } <END>
<BEG> simple parser to convert link header string representation into a link <END>
<BEG> create a new builder instance initialize from an exist uri <END>
<BEG> create a new builder instance initialize from an exist uri represent a a string <END>
<BEG> whether the cookie will only be send over a secure connection <END>
<BEG> obtain a new instance of a { link cookie } with the same name <SEG> value <SEG> path <SEG> domain and version a this { code newcookie } <END>
<BEG> create a new instance initialize from an exist uri <END>
<BEG> create a new instance represent a relative uri initialize from a uri path <END>
<BEG> create a new instance represent a relative uri initialize from a root resource class <END>
<BEG> set the runtime delegate that will be use by jax-rs class <END>
<BEG> get the list of authorization challenge associate with the exception and applicable to the resource request by the client <END>
<BEG> check if the underlying response contain the information on when be it possible to { link httpheaders # retry_after retry the request } <END>
<BEG> get the retry time for the failed request <END>
<BEG> gets the native size of type of reference in byte <END>
<BEG> loads a native library and link the method define in { code interfaceclass } to native method in the library <END>
<BEG> returns an integer representation of this < tt > nativelong < tt > <END>
<BEG> returns an { code long } representation of this < tt > nativelong < tt > <END>
<BEG> compares this < tt > nativelong < tt > to another < tt > nativelong < tt > <END>
<BEG> compares two { code nativelong } instance numerically <END>
<BEG> adds a mapping from a java object to a unique native address <END>
<BEG> gets the java object that be map to the native memory address refer to by { code reference } <END>
<BEG> looks up the runtime-specific that correspond to the pseudo-type <END>
<BEG> gets the address mask for this runtime <END>
<BEG> gets the size of a c long integer for this runtime return the size of a c long integer in byte <END>
<BEG> retrieves this runtime 's native byte order <END>
<BEG> gets an instance of < tt > ffiprovider < tt > return an instance of < tt > ffiprovider < tt > <END>
<BEG> creates a class path name <SEG> from a class name <END>
<BEG> create a method signature from the give param type and return value <END>
<BEG> checks if the annotation be a recognised parameter flag <END>
<BEG> starts an array construction session <END>
<BEG> creates an array of < tt > member < tt > instance <END>
<BEG> calculates this annotation value hash code <END>
<BEG> calculates the { code tostring } of the property value <END>
<BEG> set a property value <END>
<BEG> returns the property value <SEG> give the name <SEG> if present <END>
<BEG> returns the proxed annotation <END>
<BEG> finds the position of a byte relative to the start of the buffer <END>
<BEG> limitation : java have no access time support <SEG> so we return mtime a the next best thing <END>
<BEG> limitation : we have no pure-java way of get inode <END>
<BEG> limitation : [ see jruby-1516 ] we just pick more likely value <END>
<BEG> get a posix instance <END>
<BEG> a posixhandler with reasonable default behavior <END>
<BEG> retrieves the peer 's process id <END>
<BEG> returns a human readable description of this instance <END>
<BEG> sets the protocol family of this unix socket address <END>
<BEG> sets the file system path of this socket address param path the unix socket address <END>
<BEG> updates the file system path of this socket address <END>
<BEG> gets the path of this socket address <SEG> support abstract namespace on linux <END>
<BEG> creates a new instance of < tt > sockaddrunix < tt > return an instance of < tt > sockaddrunix < tt > <END>
<BEG> returns the address to which this socket be connect < b > not implement < b > <END>
<BEG> returns the address of the endpoint this socket be connect to <SEG> or { code null } if it be unconnected <END>
<BEG> retrieves the credential for this unix socket <END>
<BEG> sends a datagram packet from this socket < b > not implement < b > <END>
<BEG> returns a human readable path <END>
<BEG> jump <END>
<BEG> decrement by 1 <END>
<BEG> move <END>
<BEG> rotate bits left <END>
<BEG> shift bits right <END>
<BEG> compare st 0 with 4 byte or 8 byte fp at a adr and pop the <END>
<BEG> multiply st 0 by 16 bit or 32 bit integer and store it <END>
<BEG> subtract 16 bit or 32 bit integer from st 0 and store result to <END>
<BEG> reverse subtract 16 bit or 32 bit integer from st 0 and <END>
<BEG> store st 0 a 16 bit <SEG> 32 bit or 64 bit integer to a dst and pop <END>
<BEG> push 32 bit <SEG> 64 bit or 80 bit floating point value onto the fpu <END>
<BEG> unordered compare st 0 and a reg <SEG> check for ordered value <END>
<BEG> content encoding be now 'identity ' <END>
<BEG> length of decompressed content be not know <END>
<BEG> returns content encoding of the entity <SEG> if set <END>
<BEG> returns { code true } if entity be to be chunk cod <SEG> { code false } otherwise <END>
<BEG> resets internal state of the request make it reusable <END>
<BEG> unconditionally close a response <END>
<BEG> determines the default socket timeout value for non-blocking i o operation <END>
<BEG> determines the default value of the { link java net socketoptions # so_reuseaddr } parameter for newly create socket <END>
<BEG> determines the maximum queue length for incoming connection indication a request to connect also know a server socket backlog <END>
<BEG> obtains the 'chunked ' flag <END>
<BEG> specifies the content-type header <SEG> a a string <END>
<BEG> specifies the content-encoding header <END>
<BEG> obtains the content <SEG> once only <END>
<BEG> <SEG> charset null ; default public static final contenttype default_text = text_plain ; public static final contenttype default_binary = application_octet_stream ; private final string mimetype ; private final charset charset ; private final namevaluepair [ ] params ; contenttype final string mimetype <SEG> final charset charset { this mimetype = mimetype ; this charset = charset ; this params = null ; } contenttype final string mimetype <SEG> final charset charset <SEG> final namevaluepair [ ] params { this mimetype = mimetype ; this charset = charset ; this params = params ; } public string getmimetype { return this mimetype ; } public charset getcharset { return this charset ; } since 4 3 <END>
<BEG> generates textual representation of this content type which can be use a the value of a { code content-type } header <END>
<BEG> creates a new instance with this mime type and the give charset <END>
<BEG> return the content length or { code -1 } if unknown <END>
<BEG> writes byte from the { code inputstream } this entity be construct with to an { code outputstream } <END>
<BEG> creates { code httphost } instance from string <END>
<BEG> returns the inet address if explicitly set by a constructor <SEG> { code null } otherwise <END>
<BEG> obtains the host string <SEG> without scheme prefix <END>
<BEG> binds this connection to the give { link socket } <END>
<BEG> sets the factor to use when back off ; the new per-host limit will be roughly the current max time this factor <END>
<BEG> sets the amount of time <SEG> in millisecond <SEG> to wait between adjustment in pool size for a give host <SEG> to allow enough time for the adjustment to take effect <END>
<BEG> sets the absolute maximum per-host connection pool size to probe up to ; default to 2 the default per-host max <END>
<BEG> creates { link closeablehttpclient } instance with default configuration <END>
<BEG> return the time in millis the task be schedule <END>
<BEG> return the time in millis the task be finish cancel <END>
<BEG> return the time in millis it take to make the request exclude the time it be schedule to be execute <END>
<BEG> detaches this adapter from the wrapped connection <END>
<BEG> returns the state object associate with this pool entry <END>
<BEG> obtains the route for which this pool be specific <END>
<BEG> sets the exception from the blacklist <END>
<BEG> obtains the reason phrase for a status code <END>
<BEG> writes character from the specify string follow by a line delimiter to this session buffer <END>
<BEG> writes character from the specify char array follow by a line delimiter to this session buffer <END>
<BEG> < p > returns all the data in a chunked stream in coalesced form <END>
<BEG> upon close <SEG> this read the remainder of the chunked message <SEG> leave the underlie socket at a position to start read the next response without scan <END>
<BEG> writes the cache and buffertoappend to the underlie stream a one large chunk <END>
<BEG> must be call to ensure the internal cache be flush and the closing chunk be write <END>
<BEG> flushes the content buffer and the underlying stream <END>
<BEG> < p > reads until the end of the known length of content < p > < p > does not close the underlie socket input <SEG> but instead leave it prim to parse the next response < p > throw ioexception if an io problem occurs <END>
<BEG> read the next byte from the stream return the next byte or -1 if the end of stream have be reach <END>
<BEG> skips and discard a number of byte from the input stream <END>
<BEG> determines the index of the next header <END>
<BEG> estimates the length of formatted header element <END>
<BEG> estimates the length of a formatted header element <END>
<BEG> estimates the length of formatted parameter <END>
<BEG> checks whether a character be a { link # separators separator } <END>
<BEG> checks whether a character be { link # unsafe_chars unsafe } <END>
<BEG> returns the request line of this request <END>
<BEG> looks up a reason phrase <END>
<BEG> guesses the length of a format protocol version <END>
<BEG> creates a protocol version <END>
<BEG> determines the next token <END>
<BEG> creates a new token to be return <END>
<BEG> determines the start position of the next token <END>
<BEG> determines the position of the next token separator <END>
<BEG> adds the give header to the group <END>
<BEG> replaces the first occurence of the header with the same name <END>
<BEG> sets all of the header contain within this group override any exist header <END>
<BEG> gets a header represent all of the header value with the give name <END>
<BEG> gets all of the header with the give name <END>
<BEG> gets all of the header contain within this group <END>
<BEG> returns an iterator over this group of header <END>
<BEG> returns an iterator over the header with a give name in this group <END>
<BEG> returns a copy of this object return copy of this object since 4 0 <END>
<BEG>  < p > dummy implementation - must be override by subclass <END>
<BEG> assigns the value to all the parameter with the give name param name array of parameter name param value parameter value <END>
<BEG> copies the locally defined parameter to the argument parameter <END>
<BEG> return the default httpparams collection <END>
<BEG> obtains value of the { link coreconnectionpnames # so_timeout } parameter <END>
<BEG> gets the number of persistent connection track by the connection manager currently be use to execute request <END>
<BEG> gets the number idle persistent connection <END>
<BEG> gets the maximum number of allow persistent connection <END>
<BEG> clears both interceptor list maintain by this processor <END>
<BEG> sets up the target to have the same list of interceptor a the current instance <END>
<BEG> creates a copy of this instance return new instance of the basichttpprocessor <END>
<BEG> sets handler from the give map <END>
<BEG> deprecate 4 1 set { link httpprocessor } use constructor <END>
<BEG> tests if the give request path match the give pattern <END>
<BEG> returns the minor version number of the http protocol <END>
<BEG> obtains a specific version of this protocol <END>
<BEG> checks equality of this protocol version with an object <END>
<BEG> checks whether this protocol can be compare to another one <END>
<BEG> compares this protocol version with another one <END>
<BEG> tests if this protocol version be great or equal to the give one <END>
<BEG> converts this protocol version to a string <END>
<BEG> appends { code len } bytes to this buffer from the give source array start at index { code off } <END>
<BEG> appends { code b } byte to this buffer <END>
<BEG> appends { code len } char to this buffer from the give source char array buffer start at index { code off } <END>
<BEG> clears content of the buffer <END>
<BEG> converts the content of this buffer to an array of byte <END>
<BEG> returns the { code byte } value in this buffer at the specified index <END>
<BEG> returns reference to the underlie byte array <END>
<BEG> returns { code true } if this buffer be empty <SEG> that be <SEG> it { link # length } be equal to { code 0 } <END>
<BEG> returns { code true } if this buffer be full <SEG> that be <SEG> it { link # length } be equal to it { link # capacity } <END>
<BEG> returns the index within this buffer of the first occurrence of the specified byte <SEG> start the search at the specify { code beginindex } and finish at { code endindex } <END>
<BEG> appends char of the give string to this buffer <END>
<BEG> appends all char to this buffer from the give source buffer start at index { code 0 } <END>
<BEG> returns a substring of this buffer <END>
<BEG> returns a substring of this buffer with leading and trail whitespace omit <END>
<BEG> converts the specify string to a byte array <END>
<BEG> converts the specify string to byte array of ascii character <END>
<BEG> ensures that the entity content be fully consume and the content stream <SEG> if exists <SEG> be close <END>
<BEG> read the content of an entity and return it a a byte array <END>
<BEG> obtains character set of the entity <SEG> if know <END>
<BEG> if we 're run on jdk 1 4 or later <SEG> initialize the cause for the give throwable <END>
<BEG> check if two object array be equal <END>
<BEG> returns true if the parameter be null or of zero length <END>
<BEG> obtains the name of the versioned module or informal unit <END>
<BEG> obtains the classloader use to read the version information <END>
<BEG> provides the version information in human-readable format <END>
<BEG> gets all the error associate with this multiexception return all the error associate with this multiexception <END>
<BEG> gets the message associate with this exception <END>
<BEG> prints the stack trace of this exception to the give printstream <END>
<BEG> returns true if this exception should be report to the error service when thrown during a creation or deletion of a service return true if this exception should be report to the error service when create or delete a service <END>
<BEG> sets if this exception should be report to the error service when thrown during a creation or deletion of a service param report true if this exception should be report to the error service when create or delete a service <END>
<BEG> this will return a factory where the servicelocatorgenerator be discover from the meta-inf service of the process return the factory to use to create service locator <END>
<BEG> gets the type associate with this literal return a non-null but possibly empty array of type associate with this literal <END>
<BEG> returns the injectee that be unsatisfied return the injectee that be unsatisfied <END>
<BEG> param serviceclass type of service request param factory providerfactory use to instantiate provider instance from a provider class <END>
<BEG> this method be call to change the state of the reification of this descriptor param reify true if this descriptor should appear reify <SEG> false otherwise <END>
<BEG> sets the scope a an { link annotation } implementation <END>
<BEG> sets the scope annotation for this descriptor param scopeannotation the non-null scope annotation for this service <END>
<BEG> adds the give string to the list of qualifier param addme the fully qualified class name of the qualifier to add <END>
<BEG> non-javadoc see org glassfish hk2 api activedescriptor # dispose java lang object <SEG> org glassfish hk2 api servicehandle <END>
<BEG> get the descriptor be aliased <END>
<BEG> adds all bind definition from the binder to the binding configuration <END>
<BEG> returns a filter of type descriptor that match all descriptor return a filter that match all descriptor <END>
<BEG> this method link an implementation class with a { link descriptorbuilder } <SEG> to be use to far build the { link descriptor } <END>
<BEG> this method link an implementation class with a { link descriptorbuilder } <SEG> to be use to far build the { link descriptor } param implementationclass the implementation class to be associate with the { link descriptorbuilder } <END>
<BEG> non-javadoc see org glassfish hk2 utility cache weakcarcache # getkeysize <END>
<BEG> creates a cache with the give maximum cache size param maxcachesize the maximum number of entry in the cache <SEG> must be great than 2 return an lrucache that can be use to quickly retrieve object <END>
<BEG> simple implementation of the finddescriptorfiles which do a simple getresources on the classloader in order to find the hk2 descriptor file <END>
<BEG> sets the implementation param implementation the implementation this descriptor should have <END>
<BEG> sets the metadata of this descriptorimpl to exactly the set of metadata in the incoming map <END>
<BEG> adds all of the entry from this map to the exist descriptor 's metadata <END>
<BEG> removes the give value from the give key param key the key of the value to remove <END>
<BEG> removes all the metadata value associate with key param key the key of the metadata value to remove return true if any value be remove <END>
<BEG> removes all metadata value <END>
<BEG> sets the service id for this descriptor param id the service id for this descriptor <END>
<BEG> sets whether or not to proxy this descriptor for other service in the same scope param proxyforsamescope if true then this descriptor will be proxied for service in the same scope <END>
<BEG> sets the name of the service that will be use to analyze this class param name the name of the { link classanalyzer } service that should be use to analyze this descriptor <END>
<BEG> this can be use to read in instance of this object that be previously write out with writeobject <END>
<BEG> returns true if a be equal to b <SEG> or both and and b be null <END>
<BEG> loads the class from the give classloader or return null do not throw <END>
<BEG> returns the current thread 's initial value for this thread-local variable <END>
<BEG> returns the value in the current thread 's copy of this thread-local variable <END>
<BEG> sets the current thread 's copy of this thread-local variable to the specify value <END>
<BEG> removes the current thread 's value for this thread-local variable <END>
<BEG> removes all thread current thread 's value for this thread-local variable <END>
<BEG> non-javadoc see org glassfish hk2 utility general weakhashclock # put java lang object <SEG> java lang object <END>
<BEG> non-javadoc see org glassfish hk2 utility general weakhashclock # get java lang object <END>
<BEG> gets the thread on which this object be create return the thread on which this object be create <END>
<BEG> gets the incoming object bound to the thread id return the incoming object bound to the thread id <END>
<BEG> for when the server shut down <END>
<BEG> sets the required type of this injectee param requiredtype the required type of this injectee <END>
<BEG> sets the required qualifier for this injectee param requiredqualifiers the non-null set of required qualifier <END>
<BEG> this setter set both the parent and the injecteeclass field <END>
<BEG> sets whether or not this be a self-referencing injectee param self true if this be a self-referencing injectee <SEG> and false otherwise <END>
<BEG> sets the unqualified annotation to be associate with this injectee param unqualified the unqualified annotation to be associate with this injectee <END>
<BEG> sets the descriptor to be associate with this injectee param injecteedescriptor the injectee to be associate with this injectee <END>
<BEG> non-javadoc see javax inject named # value <END>
<BEG> returns the bean version of the property name if the method be a getter <SEG> or return null if the method be not a getter param method the method to get the property name from return the java-bean version of the property name or null if the method be not a java-bean getter <END>
<BEG> non-javadoc see java lang reflect parameterizedtype # getownertype this be only use for top level type <END>
<BEG> makes a nice <SEG> pretty class without the package name param clazz make me a pretty class return a nice string of the class <SEG> with no package <END>
<BEG> returns a pretty string for the give type param t a possibly null type return a pretty string represent the type <END>
<BEG> makes a nice pretty string of the method <SEG> with the method name and all parameter param method the method to make pretty return a nice pretty string <END>
<BEG> returns a pretty string represent a field param field the possibly null field return a pretty string represent the field <END>
<BEG> returns a pretty string for the give array param array the possibly null array to represent return a pretty string representation of the array <END>
<BEG> returns a pretty string represent the collection param collection a possibly null collection to represent return a pretty string represent the collection <END>
<BEG> returns the annotation class for this annotation type return the annotation type for this scope <END>
<BEG> returns true if the give requiredtype be safely assignable from the give beantype <END>
<BEG> the set of annotation that must not be associate with the service be inject return all annotation that must not be on the injected service <END>
<BEG> get the abort response that cause this exception <END>
<BEG> create new chunk parser that will split the response entity input stream base on a fixed boundary string <END>
<BEG> create new chunk parser that will split the response entity input stream base on a fixed boundary sequence of byte <END>
<BEG> get the underlying chunk parser <END>
<BEG> set new chunk parser <END>
<BEG> set custom chunk data medium type <END>
<BEG> set custom chunk data medium type from a string value <END>
<BEG> check if the chunk input have be close <END>
<BEG> read next chunk from the response stream and convert it to a java instance use the { link # getchunktype chunk medium type } <END>
<BEG> take a snapshot of the current configuration and it internal state <END>
<BEG> get the configured runtime <END>
<BEG> check that the configuration instance have a parent client set <END>
<BEG> get the request filter chain abort response if set <SEG> or { code null } otherwise <END>
<BEG> get internal client configuration state <END>
<BEG> add new accept type to the message header <END>
<BEG> add new cookie to the message header <END>
<BEG> add new cache control entry to the message header <END>
<BEG> set message content variant type <SEG> language and encode <END>
<BEG> returns true if the request be call asynchronously use { link javax w r client asyncinvoker } return true if the request be asynchronous ; false otherwise <END>
<BEG> sets the flag indicate whether the request be call asynchronously use { link javax w r client asyncinvoker } <END>
<BEG> write serialize the entity set in this request into the { link # getentitystream entity stream } <END>
<BEG> set writer interceptor for this request <END>
<BEG> get reader interceptor of this request <END>
<BEG> indicates whether the user-agent header should be omit if not directly set to the map of header <END>
<BEG> get the absolute uri of the ultimate request make to receive this response <END>
<BEG> set the absolute uri of the ultimate request that be make to receive this response <END>
<BEG> get the message entity java instance <END>
<BEG> get the request scope instance configure for the runtime <END>
<BEG> get runtime configuration <END>
<BEG> pre-initialize the client runtime <END>
<BEG> runtime connector <END>
<BEG> get service locator <END>
<BEG> check client state <END>
<BEG> check that the client instance have not be close <END>
<BEG> create a new custom-configured { link jerseyclient } instance <END>
<BEG> submit the request for an asynchronous invocation and register an { link invocationcallback } to process the future result of the invocation <END>
<BEG> returns a reference to the mutable request context to be invoke <END>
<BEG> extract and return service locator from { link javax w r client clientrequestcontext clientrequestcontext } <END>
<BEG> add a fatal error to the list of message <END>
<BEG> add a warning to the list of message <END>
<BEG> check whether a fatal error be present in the list of all message <END>
<BEG> shutdown { link org glassfish hk2 api servicelocator } - either via service locator factory if possible or directly by call shutdown method <END>
<BEG> register bind custom provider instance <END>
<BEG> register bind custom provider class that may also be resource <END>
<BEG> get a reference factory provide an empty reference <END>
<BEG> this method be invoke indirectly from the test <END>
<BEG> a method that be execute from a unit test by maven surefire plugin within the same maven module <END>
<BEG> this method be execute from a unit test by maven surefire plugin from a dependant module <END>
<BEG> a method that be execute in a jvm of maven failsafe plugin from a dependant maven module <END>
<BEG> put the { code bytebuffer } to the internal queue to be available for read from the stream <END>
<BEG> closes the byte buffer sink of this input stream to indicate that write to the stream have be finish <END>
<BEG> closes the byte buffer sink of this input stream to indicate that write to the stream have be finish due to a throwable <END>
<BEG> get the actual type behind the { link # rawclass raw class } <END>
<BEG> spreads xors high bit of hash to low and also force top bit to 0 <END>
<BEG> returns x 's class if it be of the form class c implement comparable < c > <SEG> else null <END>
<BEG> returns k compareto x if x match kc k 's screen comparable class <SEG> else 0 <END>
<BEG> returns { code true } if this map map one or more key to the specify value <END>
<BEG> implementation for put and putifabsent <END>
<BEG> returns the hash code value for this { link map } <SEG> i e <SEG> the sum of <SEG> for each key-value pair in the map <SEG> { code key hashcode ^ value hashcode } <END>
<BEG> returns internal representation for key <END>
<BEG> returns key represent by specified internal representation <END>
<BEG> check for equality of non-null reference x and possibly-null y <END>
<BEG> returns index for hash code h <END>
<BEG> returns the value to which the specify key be map in this identity hash map <SEG> or < tt > null < tt > if the map contain no mapping for this key <END>
<BEG> copies all of the mapping from the specify map to this map these mapping will replace any mapping that this map have for any of the key currently in the specified map <END>
<BEG> returns a shallow copy of this < tt > hashmap < tt > instance : the key and value themselves be not clone <END>
<BEG> add a new entry with the specify key <SEG> value and hash code to the specify bucket <END>
<BEG> like addentry except that this version be use when create entry a part of map construction or pseudo-construction cloning <SEG> deserialization <END>
<BEG> called by superclass constructor and pseudoconstructors clone <SEG> readobject before any entry be insert into the map <END>
<BEG> this override alters behavior of superclass put method <END>
<BEG> this override differs from addentry in that it do n't resize the table or remove the eldest entry <END>
<BEG> returns < tt > true < tt > if this map should remove it eldest entry <END>
<BEG> check if the debug level be loggable <END>
<BEG> log a debug message use the configured debug level <END>
<BEG> returns < tt > true < tt > if { code sun misc unsafe } be present in the current jdk version <SEG> or < tt > false < tt > otherwise <END>
<BEG> return uuid value <END>
<BEG> get a canonical array of token from an array of string entry where each entry may contain zero or more token separate by character in delimiters string <END>
<BEG> return { code true } whether at least one of the entity filtering feature be register in the give config <END>
<BEG> return an unmodifiable map of entity graph for reader writer <END>
<BEG> create { link permitall } annotation implementation <END>
<BEG> get entity-filtering scope for { link rolesallowed } s role <END>
<BEG> get authorization role that have be derive from examine entity class <END>
<BEG> a helper method for a creation of an immutable set base on a provide set together with a give item <END>
<BEG> enable buffering of the serialized entity <END>
<BEG> determine whether the stream be already commit or not <END>
<BEG> commit the output stream <END>
<BEG> check if the committing output stream have be close already <END>
<BEG>  < p > the method be customize to not throw an { link ioexception } if the close operation fails <END>
<BEG> get the wrapped input stream instance <END>
<BEG> returns { code true } if the provided char be a white space <END>
<BEG> returns { code true } if all char in string s be token <END>
<BEG> returns { code true } if string s contain a white space char <END>
<BEG> filter a substring of a string by remove any new-line character and un-escaping escaped character unless preservebackslash be set to { code true } <END>
<BEG> create an empty inbound message header container <END>
<BEG> get the preferred http specify date format rfc 1123 <END>
<BEG> read a date <END>
<BEG> fixme use somewhere in production code or remove <END>
<BEG> get a message header a a single string value <END>
<BEG> get the mutable message header multivalued map <END>
<BEG> get if-match header <END>
<BEG> get the medium type of the entity <END>
<BEG> get a list of medium type that be acceptable for a request <END>
<BEG> get any new cooky set on the response message <END>
<BEG> get the link attach to the message a header <END>
<BEG> check if link for relation exists <END>
<BEG> get the link for the relation <END>
<BEG> check if there be a non-empty entity input stream be available in the message <END>
<BEG> set a new entity input stream <END>
<BEG> clear last traced interceptor information <END>
<BEG> convert { link link } instance to a string version <END>
<BEG> extract the list of link relation from the string value of a { link link # rel } attribute <END>
<BEG> determine if the two list of medium type share a common { link # typeequal javax w r core mediatype <SEG> javax w r core mediatype type-equal } sub-list <END>
<BEG> create an unmodifiable list of medium type from the value declare in the { link consumes } annotation <END>
<BEG> reads quality factor from give medium type <END>
<BEG> convert medium type into { link java lang string } <END>
<BEG> check if the give medium type be a wildcard type <END>
<BEG> get a multi-valued map represent outbound message header with their value convert to string <END>
<BEG> check if there be an entity available in the message <END>
<BEG> set the message content medium type <END>
<BEG> enable a buffering of serialized entity <END>
<BEG> get quality source factor value in [ ppt ] <END>
<BEG> extract quality source information from the supply { link mediatype } value <END>
<BEG> make the { link inputstream } able to close <END>
<BEG> safely close a closeable <SEG> without throw an exception <END>
<BEG> append a new quote value to the string builder <END>
<BEG> format time duration in millis with accurate to 2 decimal place <END>
<BEG> format { code value } from { code top } value in percent with accurate to 2 decimal place <END>
<BEG> get an empty no-op tracing logger instance <END>
<BEG> create new contract provider model builder from an exist one <END>
<BEG> get provide contract recognize by jersey <END>
<BEG> get the map of contract and their priority <END>
<BEG> get the provider contract priority <SEG> if set <SEG> default component provider <SEG> if not set <END>
<BEG> register a component class use a give registration strategy <END>
<BEG> register a component use a give registration strategy <END>
<BEG> get all register component class <SEG> include { link javax w r core feature feature } and { link org glassfish hk2 utility binder binder } mtea-providers <END>
<BEG> get a subset of all register component class use the { code filter } predicate to determine for each component class base on it 's contract provider class model whether it should be keep or filter out <END>
<BEG> get an unmodifiable view of all component class <SEG> for which a registration exist either class or instance base in the component bag <END>
<BEG> register an object for invocation of it { link predestroy } method <END>
<BEG> get me set of implemented contract <END>
<BEG> get the provisioned thread pool executor termination time out in millisecond <END>
<BEG> get the number of the core thread of the the provisioned thread pool executor <END>
<BEG> get the handler for task that could not be execute by the provision thread pool executor <END>
<BEG> get a backing thread factory that should be use a a delegate for create the new thread for the provisioned executor service <END>
<BEG> close event handler <SEG> that invoke during the { link # close } operation <END>
<BEG> close this thread pool executor provider <END>
<BEG> returns value of content-encoding header support by this encoder <END>
<BEG> container pre-destroy handler method <END>
<BEG> get a new instance of a { link sslcontext } configure use default configuration setting <END>
<BEG> get a new & initialized ssl configurator instance <END>
<BEG> get a new ssl configurator instance <END>
<BEG> create a copy of the current ssl configurator instance <END>
<BEG> set the < em > trust < em > store provider name <END>
<BEG> set the type of < em > trust < em > store <END>
<BEG> set the sslcontext protocol <END>
<BEG> get the < em > key < em > store instance <END>
<BEG> retrieve the ssl context configuration from the supplied property <END>
<BEG> determines whether there be next character in the iteration chain <END>
<BEG> returns next character in the iteration chain and increase the current position <END>
<BEG> returns the next character without increase the position <END>
<BEG> returns the input string on which this { link characteriterator iterator } operate <END>
<BEG> changes the current position to the position <END>
<BEG> returns character at the current position <END>
<BEG> returns parse scheme specific part <END>
<BEG> returns parse scheme component <END>
<BEG> returns parse user info component <END>
<BEG> returns whether the input string uri be opaque <END>
<BEG> get the normalized template <END>
<BEG> get the map of template name to pattern <END>
<BEG> get the capture group count for each template variable <END>
<BEG> get the group index to capture group <END>
<BEG> get the number of explicit regular expression <END>
<BEG> get the number of regular expression group return the number of regular expression group since 2 9 <END>
<BEG> encode literal character of a template <END>
<BEG> match against the pattern <END>
<BEG> normalize the uri by resolve the dot & dot-dot path segment a describe in < a href= http : tool ietf org html rfc3986 # section-5 2 4 > rfc 3986 < a > <END>
<BEG> relativize uri with respect to a base uri <END>
<BEG> get the uri template a a string <END>
<BEG> get the uri pattern <END>
<BEG> check if the uri template end in a slash { code ' ' } <END>
<BEG> ascertain if a template variable be a member of this template <END>
<BEG> get the number of character in the regular expression not result from conversion of template variable <END>
<BEG> match a uri against the template <END>
<BEG> equality be calculate from the string of the regular expression generate from the template <END>
<BEG> adds one more key-value pair <END>
<BEG> replaces all the exist value associate with the key by the give value <END>
<BEG> this method merge all of the key and value from another multimap into this multimap <END>
<BEG> checks if the map contain the give key <END>
<BEG> removes an key value pair from the map <END>
<BEG> gets the first value if any <SEG> or null <END>
<BEG> return the map a key=value1 <SEG> key=value2 <SEG> <END>
<BEG> this be do because sometimes when create the creator we do not know what the true system descriptor will be param selfdescriptor the descriptor that should replace our self descriptor <END>
<BEG> non-javadoc see org jvnet hk2 internal creator # getinjectees <END>
<BEG> checks whether an annotated element have any annotation that be use for the injection param locator the service locator to use a it will get all the annotation that be add on as well a the normal inject param annotate the annotated element param checkparams check the params if true return true if element contains at least one inject annotation <END>
<BEG> gets the decision of the filter from this service <END>
<BEG> non-javadoc see org glassfish hk2 api message topic # name java lang string <END>
<BEG> non-javadoc see org glassfish hk2 api message topic # gettopictype <END>
<BEG> the implementation of this method be very dependent on the implementation of servicelocatorimpl <END>
<BEG> compares two version string <END>
<BEG> returns the number of match character find in a character sequence <END>
<BEG> creates a thread-safe set back by a hash map and contain the give element <END>
<BEG> one or more value that can be substitute in an expression <END>
<BEG> returns the low-level result last retrieve for the current page from the server side ; or null if there have yet no call to the server <END>
<BEG> internal method use by the implementation layer for set the low level result receive from the server side <END>
<BEG> return the list of primary key of the current table to be include in a batch get-item operation <END>
<BEG> used to specify the attribute to be retrieve in each item return from the batch get-item operation <END>
<BEG> fluent method to add the specified element to this list <END>
<BEG> fluent method to add the element from the specify collection to this list <END>
<BEG> fluent method to add the element to this list <END>
<BEG> fluent method to remove the specified key from this map <END>
<BEG> returns the name map which be unmodifiable ; or null if there be none <END>
<BEG> returns the name token for the give name <SEG> create a new token a necessary <END>
<BEG> use this in place of { link # value } to return a { link set } of all value know to the sdk <END>
<BEG> evicts a single { link reference } from the list ; replace it with one from the end <END>
<BEG> return soft or weak { link reference } for the give key <END>
<BEG> return temporary { link reference } for the give key ; use in query <END>
<BEG> return soft or weak { link reference } for the give key-value mapping <END>
<BEG> lock just to prevent subscription race condition <END>
<BEG> extracts the original potentially non-unique assigned rank from the give unique id <END>
<BEG> finds the insertion point with the near uid <SEG> regardless of whether the uid be in the list or not <END>
<BEG> param capacity the initial capacity return { link collection } whose element be keep alive with { link softreference } s <END>
<BEG> param capacity the initial capacity param concurrency the concurrency level return { link concurrentmap } whose key be keep alive with { link softreference } s <END>
<BEG> returns < tt > true < tt > if this type of attribute be a code attribute <END>
<BEG> returns the length of the attribute list that begin with this attribute <END>
<BEG> puts an array of byte into this byte vector <END>
<BEG> returns the bytecode of the class that be build with this class writer <END>
<BEG> adds an integer to the constant pool of the class be build <END>
<BEG> adds the give internal name to { link # typetable } and return it index <END>
<BEG> returns the index of the common super type of the two give type <END>
<BEG> returns the offset corresponding to this label <END>
<BEG> returns the first label of the series to which this label belongs <END>
<BEG> returns true if this basic block and the give one belong to a common subroutine <END>
<BEG> marks this basic block a belonging to the give subroutine <END>
<BEG> returns a reference to the type of a formal parameter of a method <END>
<BEG> returns a reference to the type of an exception <SEG> in a 'throws ' clause of a method <END>
<BEG> returns a reference to the type of a type argument in a constructor or method call or reference <END>
<BEG> returns the sort of this type reference <END>
<BEG> returns the index of the type parameter reference by this type reference <END>
<BEG> returns the index of the type parameter bound <SEG> within the type parameter { link # gettypeparameterindex } <SEG> reference by this type reference <END>
<BEG> returns the index of the formal parameter whose type be reference by this type reference <END>
<BEG> returns the index of the exception <SEG> in a 'throws ' clause of a method <SEG> whose type be reference by this type reference <END>
<BEG> converts a { link url } into a { link file } convert slash and encode character where appropriate <END>
<BEG> selects the optimal globber strategy for the give plain-text glob <END>
<BEG> extracts the basename segment from the give filename <END>
<BEG> attempts to load the potential { link qualifier } annotation and return it class <END>
<BEG> reads the give index table from disk to memory <END>
<BEG> return and remove the element with high priority <SEG> or null if empty <END>
<BEG> see map # containskey java lang object <END>
<BEG> the capacity of the map have be exceed <SEG> grow the array by grow_size to accommodate more entry <END>
<BEG> see map # keyset note : this implementation do not conform properly to the specification in the map interface <END>
<BEG> see map # put java lang object <SEG> java lang object <END>
<BEG> see map # putall java util map <END>
<BEG> attempts to acquire this semaphore <END>
<BEG> attempt to acquire the semaphore without wait <END>
<BEG> non-javadoc for debug purpose only <END>
<BEG> returns the child rule within this rule <END>
<BEG> returns the parameter with the provided id or < code > null < code > if this command do not have a parameter with the id <END>
<BEG> return whether the enable property change <END>
<BEG> returns the cause of this throwable or < code > null < code > if the cause be nonexistent or unknown <END>
<BEG> the string representation of this operation <END>
<BEG> return the object that be represent by this context <END>
<BEG> add the specified context a a match of this context <END>
<BEG> non-javadoc see org eclipse core command operation iundocontext # match iundocontext context <END>
<BEG> returns the parameter that be be parameterized <END>
<BEG> returns the value for the parameter in this parameterization <END>
<BEG> compares two object that be not otherwise comparable <END>
<BEG> decides whether two object be equal -- defend against < code > null < code > <END>
<BEG> computes the hash code for an integer <END>
<BEG> must be call with increase offset <END>
<BEG> can be invoke only after a call to precede offset+1 <END>
<BEG> returns a { link breakiterator # getsentenceinstance locale } bound to maxlen <END>
<BEG> the internal id of the type <END>
<BEG> constructs search type base on the internal id <END>
<BEG> the a string representation search type to execute <SEG> default to { link searchtype # default } <END>
<BEG> returns the action filter that have be inject <END>
<BEG> { code true } if the actual operation the action represent will be execute on a different thread than the call thread assume it will be execute on the same node <END>
<BEG> whether the cluster state update be acknowledge or not <END>
<BEG> returns whether the requisite number of shard copy start before the completion of the operation <END>
<BEG> determine the name of the package of the give class : e g <END>
<BEG> return the number of additional element that the queue can accommodate before eviction occur <END>
<BEG> add the give element to the queue <SEG> possibly force an eviction from the head if { link # remainingcapacity } be zero <END>
<BEG> see # add object <END>
<BEG> add the give element to the queue <SEG> possibly force eviction from the head if { link # remainingcapacity } be zero or become zero during the execution of this method <END>
<BEG> build an immutable copy of the map under construction <END>
<BEG> return true if the value pass be a conscious decision <SEG> false if use some kind of default <END>
<BEG> returns the { link parameterlistkey } for this constructor <END>
<BEG> returns an ordered list of all constructor parameter both { link assisted } and { link inject } ed <END>
<BEG> returns the guice { link key } for this parameter <END>
<BEG> returns a value that be only partially compute due to this exception <END>
<BEG> returns true if the key type be provider but not a subclass of provider <END>
<BEG> looks up thread local context <END>
<BEG> returns the scoping annotation <SEG> or null if there be n't one <END>
<BEG> returns an equivalent type that 's safe for use in a key <END>
<BEG> returns a reader for a { link namedwriteable } object identify by the name provide a argument and it category <END>
<BEG> sets the output stream to use for write until this writer be close <END>
<BEG> writes a character give it 31-bits unicode <END>
<BEG> writes a portion of an array of character <END>
<BEG> writes a portion of a string <END>
<BEG> writes the specified character sequence <END>
<BEG> formats the node id and cluster uuid into json field <END>
<BEG> insert a value for the give path <END>
<BEG> returns an iterator of the object store in the { code pathtrie } <SEG> use all possible { code triematchingmode } mode <END>
<BEG> returns a base64 encode version of a version 4 0 compatible uuid randomly initialize by the give { link java util random } instance a define here : http : www ietf org rfc rfc4122 txt <END>
<BEG> wrap a recycled reference <END>
<BEG> return a { link recycler } that never recycle entry <END>
<BEG> return a concurrent recycler base on a deque <END>
<BEG> return a recycler base on a deque <END>
<BEG> wrap the provided recycler so that call to { link recycler # obtain } and { link recycler v # close } be protect by a lock <END>
<BEG> create a concurrent implementation that can support concurrent access from < code > concurrencylevel < code > thread with little contention <END>
<BEG> constant time equality to avoid potential timing attack <END>
<BEG> convert to a { link string } <END>
<BEG> returns a new copy of this object that be back by it own char array <END>
<BEG> returns the underlying char [ ] <END>
<BEG> return the index of < code > value < code > in < code > array < code > <SEG> or { code -1 } if there be no such index <END>
<BEG> compare < code > d1 < code > against < code > d2 < code > <SEG> push { value double # nan } at the bottom <END>
<BEG>  < p > this override the default behavior of { code onafter } to add the caveat that it only run if the { link # lifecycle } be < em > not < em > stop or close <END>
<BEG> should the runnable force it execution in case it get reject ? <END>
<BEG> this method be call in a finally block after successful execution or on a rejection <END>
<BEG> this should be execute if the thread-pool executing this action reject the execution <END>
<BEG> copies the content of the underlying atomic array to a normal one <END>
<BEG> creates a new chm with an aggressive concurrency level <SEG> aim at highly updateable long living map <END>
<BEG> decrements the count-down and return < code > true < code > iff this call reach zero otherwise < code > false < code > <END>
<BEG> fast forward the count-down to zero and return < code > true < code > iff the count down reach zero with this fast forward call otherwise < code > false < code > <END>
<BEG> checks if the thread pool that reject the execution be terminate shortly after the rejection <END>
<BEG> acquires a lock for the give key <END>
<BEG> tries to acquire the lock for the give key and return it <END>
<BEG> returns < code > true < code > iff the caller thread hold the lock for the give key <END>
<BEG> returns < code > true < code > if this lock have at least one lock key <END>
<BEG> resize the limit for the queue <SEG> return the new size limit <END>
<BEG> { code true } if the { link runonce } have be execute once <END>
<BEG> flattens the two level { code iterable } into a single { code iterable } <END>
<BEG> clears the value <SEG> if it have be previously create by call { code # getorcompute } <END>
<BEG> parse the give locale a { code language } <SEG> { code language-country } or { code language-country-variant } <END>
<BEG> get the value that be associate with < code > key < code > or null if < code > key < code > be not present in the hash table <END>
<BEG> generates a time-based uuid similar to flake ids <SEG> which be prefer when generate an id to be index into a lucene index a primary key <END>
<BEG> returns a base64 encode version of a version 4 0 compatible uuid a define here : http : www ietf org rfc rfc4122 txt <SEG> use the provide { code random } instance <END>
<BEG> returns a base64 encode { link securestring } of a version 4 0 compatible uuid a define here : http : www ietf org rfc rfc4122 txt <SEG> use a private { code securerandom } instance <END>
<BEG> if this method return false <SEG> state be guarantee to be not write to disk <END>
<BEG> rethrows this { link writestateexception } a { link ioerror } if dirty flag be set <SEG> which will lead to jvm shutdown <END>
<BEG> total number of successfully process document <END>
<BEG> compute the minimum of the give current minimum sequence number and the specify sequence number <SEG> account for the fact that the current minimum sequence number could be { link sequencenumbers # no_ops_performed } or { link sequencenumbers # unassigned_seq_no } <END>
<BEG> modifies the data of a document to be index base on the processor this pipeline hold if < code > null < code > be return then this document will be drop and not indexed <SEG> otherwise this document will be keep and indexed <END>
<BEG> resolves the gc type by it memory pool name { link java lang management memorypoolmxbean # getname } <END>
<BEG> reload any spi implementation from the give classloader <END>
<BEG> returns additional ingest processor type add by this plugin <END>
<BEG> return the update context for this script <END>
<BEG> resets the internal state to use the new value and compensation delta <END>
<BEG> returns the required docvalue field <END>
<BEG> convert this record to a map from timingtype to time <END>
<BEG> check that the current stack have { link specialpermission } access accord to the { link securitymanager } <END>
<BEG> registers new listener <END>
<BEG> called for every file find in the watched directory during initialization <END>
<BEG> called for every new file find in the watched directory <END>
<BEG> called for every file that be change in the watched directory <END>
<BEG> the main of crypto param args do n't use the args throw exception if getcryptorandom or getcryptocipher get error <END>
<BEG> loads the library if possible <END>
<BEG> checks whether native code be load for this platform <END>
<BEG> gets the error cause if loading fail <END>
<BEG> gets the native lib folder <END>
<BEG> gets a cryptorandom instance use the default implementation a define by { link # classes_default } return cryptorandom the cryptorandom object <END>
<BEG> judges whether native library be successfully load and initialise <END>
<BEG> overrides { link cryptorandom # nextbytes byte [ ] } <END>
<BEG> does the readfully base on the input read <END>
<BEG> retrieve the name of the environment variable which value have be load a the algorithm <END>
<BEG> set the config object to use the specified environment variable to load the value for the algorithm <END>
<BEG> retrieve the name of the jvm system property which value have be load a the algorithm <END>
<BEG> set the config object to use the specify jvm system property to load the value for the algorithm <END>
<BEG> retrieve the name of the environment variable which value have be load a the iteration count <END>
<BEG> set the config object to use the specified environment variable to load the value for the iteration count <END>
<BEG> retrieve the name of the environment variable which value have be load a the salt size in byte <END>
<BEG> set the config object to use the specify jvm system property to load the value for the salt size in byte <END>
<BEG> < p > set the config object to use the specified environment variable to load the value for the salt generator class name <END>
<BEG> < p > set the config object to use the specify jvm system property to load the value for the salt generator class name <END>
<BEG> retrieve the name of the jvm system property which value have be load a the provider class name <END>
<BEG> < p > set the config object to use the specify jvm system property to load the value for the provider class name <END>
<BEG> retrieve the name of the environment variable which value have be load a the value for the invertpositionofsaltinmessagebeforedigesting property <END>
<BEG> retrieve the name of the jvm system property which value have be load a the value for the invertpositionofsaltinmessagebeforedigesting property <END>
<BEG> < p > set the config object to use the specify jvm system property to load the value for the invertpositionofsaltinmessagebeforedigesting property <END>
<BEG> retrieve the name of the jvm system property which value have be load a a value for the unicode normalization ignore parameter <END>
<BEG> set the config object to use the specified environment variable to load the value for the string output type <END>
<BEG> set the config object to use the specify jvm system property to load the value for the string output type <END>
<BEG> < p > sets whether the unicode text normalization step should be ignore <END>
<BEG> < p > sets the the form in which string output will be encode <END>
<BEG> < p > sets the prefix to be add at the beginning of encryption result <SEG> and also to be expect at the beginning of plain message provide for match operation raise an { link encryptionoperationnotpossibleexception } if not <END>
<BEG> < p > size in byte of the salt to be use <END>
<BEG> < p > sets the salt generator <END>
<BEG> < p > sets the class name of the salt generator <END>
<BEG> < p > sets the name of the security provider to be ask for the digest algorithm <END>
<BEG> < p > sets the security provider to be use for obtain the digest algorithm <END>
<BEG> < p > sets the class name for the security provider to be use for obtain the digest algorithm <END>
<BEG> < p > whether digest match operation will allow match digest with a salt size different to the one configure in the saltsizebytes property <END>
<BEG> < p > sets the size of the pool of digester to be create <END>
<BEG> < p > returns true if the digester have already be initialize <SEG> false if not < br > initialization happen : < p > < ul > < li > when < tt > initialize < tt > be call < li > < li > when < tt > digest < tt > or < tt > match < tt > be call for the first time <SEG> if < tt > initialize < tt > have not be call before < li > < ul > < p > once a digester have be initialize <SEG> try to change it configuration algorithm <SEG> provider <SEG> salt size <SEG> iteration or salt generator will result in an < tt > alreadyinitializedexception < tt > be throw <END>
<BEG> < p > sets a < tt > { link org jasypt digest config digesterconfig } < tt > object for the digester <END>
<BEG> < p > sets the algorithm to be use for digest <SEG> like < tt > md5 < tt > or < tt > sha-1 < tt > <END>
<BEG> < p > sets the security provider to be ask for the digest algorithm <END>
<BEG> < p > performs a digest operation on a byte array message <END>
<BEG> < p > checks a message against a give digest <END>
<BEG> < p > performs a digest operation on a string message <END>
<BEG> < p > sets a value for the encryption algorithm < p > < p > this algorithm have to be support by your jce provider and <SEG> if this provider support it <SEG> you can also specify < i > mode < i > and < i > pad < i > for it <SEG> like < tt > algorithm mode padding < tt > <END>
<BEG> sets the password to be use for encryption <SEG> a a char [ ] <END>
<BEG> sets the number of hash iteration apply to obtain the encryption key <END>
<BEG> < p > returns the name by which this webpbeconfig object will be identify from the web <END>
<BEG> < p > returns the validation word which will be ask from the web to the person set the password for the encryptor this config object belongs to <END>
<BEG> < p > returns whether this config object be complete or not both name and validation word have be set <END>
<BEG> < p > encrypts a message use the specify configuration <END>
<BEG> < p > sets a < tt > { link org jasypt encryption pbe config pbeconfig } < tt > object for the encryptor <END>
<BEG> < p > sets the password to be use <END>
<BEG> < p > sets the password to be use <SEG> a a char [ ] <END>
<BEG> renders the execution environment <END>
<BEG> renders the command argument a accept for execution <END>
<BEG> renders the command output <END>
<BEG> renders an error occur during execution <END>
<BEG> defines whether the user have turn verbosity off or not <END>
<BEG> < p > cli execution method <END>
<BEG> return iv with the specify byte length <END>
<BEG> as this iv generator provide a fixed iv <SEG> it inclusion unencrypted in encryption result be not necessary <SEG> and in fact not desirable so that it remain hidden <END>
<BEG> return iv with 0 byte length <END>
<BEG> generate a random iv of the specified length in byte <END>
<BEG> returns the identifier <SEG> just to be use by the registry <END>
<BEG> < p > returns a set with the name of all the registered digest algorithm <END>
<BEG> < p > returns a set with the name of all the registered pbe password-based encryption algorithm <END>
<BEG> encrypts digest a password <END>
<BEG> lets the user specify if he she want a plain digest use a an encryption mechanism no salt or iteration <SEG> a with { link java security messagedigest } <SEG> or rather use the jasypt 's usual strong mechanism for password encryption base on the use of a salt and the iteration of the hash function <END>
<BEG> checks if the specified ephemeral public key be on the give curve <END>
<BEG> gets the secure random generator <END>
<BEG> sets a specific secure random generator for the initialisation vector and other purpose require a random number <END>
<BEG> sets a specific jca provider for the key encryption <END>
<BEG> sets a specific jca provider for the mac computation where require by the jwe encryption method <END>
<BEG> returns the identifier of this public key use <END>
<BEG> checks if the specify key use and key operation be consistent <END>
<BEG> gets the list of { link jwk } s return the { code jwk } list <END>
<BEG> concatenates the specified array <END>
<BEG> computes the base 64 encode character length for the specify input byte length <END>
<BEG> checks if a & lt ; b without leak information about either a or b param a any int param b any int return 1 if yes <SEG> 0 if no <END>
<BEG> convert a digit index to the appropriate base 64 ascii byte <END>
<BEG> convert a digit index to the appropriate base64url ascii byte <END>
<BEG> returns the maximum number of byte to return <END>
<BEG> indicates whether the { link # close } method should propagate to the underling inputstream <END>
<BEG> returns the bit length of the specify byte length <END>
<BEG> converts the specified date object to a unix epoch time in second <END>
<BEG> converts the specified unix epoch time in second to a date object <END>
<BEG> implementation of the < a href= http : www tarsnap com scrypt scrypt pdf > scrypt kdf < a > <END>
<BEG> hash the supplied plaintext password and generate output in the format describe in { link scryptutil } <END>
<BEG> compare the supplied plaintext password to a hash password <END>
<BEG> load a shared library <SEG> and optionally verify the jar signature <END>
<BEG> create a new { link libraryloader } for the current vm <END>
<BEG> attempt to detect the current platform <END>
<BEG> writes out the data validation exception ioexception param outputfile the output file <END>
<BEG> retrieves the data for output to binary file return the data to be write <END>
<BEG> called by the cell when the feature be added param wc the writable cell <END>
<BEG> internal method to set the cell comment <END>
<BEG> sets the cell comment param s the comment param height the height of the comment box in cell param width the width of the comment box in cell <END>
<BEG> public function which remove any data validation <SEG> if present <END>
<BEG> internal function which remove any data validation <SEG> include share one <SEG> if present <END>
<BEG> sets the comment draw object <END>
<BEG> gets the data validation list a a formula <END>
<BEG> the list of item to validate for this cell <END>
<BEG> the list of item to validate for this cell in the form of a cell range <END>
<BEG> sets the data validation base upon a name range <END>
<BEG> accessor for the data validation return true if this have a data validation associate with it <SEG> false otherwise <END>
<BEG> accessor for whether a drop down be required return true if this require a drop down <SEG> false otherwise <END>
<BEG> sets the combo box draw object for list validation param cb the combo box <END>
<BEG> use the same data validation logic a the specify cell feature param cf the data validation to reuse <END>
<BEG> accessor for the index style of this format return the index for this format <END>
<BEG> initializes this format with the specified index number param pos the position of this format record in the workbook <END>
<BEG> accessor to determine whether or not this format be build in return true if this format be a build in format <SEG> false otherwise <END>
<BEG> accessor for the name return the name <END>
<BEG> gets the built in name for the value <END>
<BEG> abstract method implementation to get the raw byte data ready to write out return the byte data <END>
<BEG> adds a byte onto the array param b the byte <END>
<BEG> gets the complete array return the array <END>
<BEG> gets the cell whose content match the string pass in <END>
<BEG> gets the column letter correspond to the 0-based column number param column the column number return the letter for that column number <END>
<BEG> gets the column letter correspond to the 0-based column number param column the column number param buf the string buffer in which to write the column letter <END>
<BEG> gets the cell reference for the specified column and row param column param row return <END>
<BEG> sees if the column component be relative or not param s return true if the column be relative <SEG> false otherwise <END>
<BEG> gets the sheet name from the cell reference string param ref return the sheet reference <END>
<BEG> adds a condition param cond the condition <END>
<BEG> inserts a blank column into this spreadsheet <END>
<BEG> gets the country code for the give two character mnemonic string <END>
<BEG> inserts a row param row the inserted row <END>
<BEG> removes a column param col the inserted column <END>
<BEG> used during the copy process to retrieve the validity setting for a particular cell <END>
<BEG> accessor for the combo box <SEG> use when copy sheet <END>
<BEG> called when a writable dv record be add to a copy validity list <END>
<BEG> accessor for the number of dv record return the number of dv record for this list <END>
<BEG> accessor for the object id return the object id <END>
<BEG> inserts a row param row the row to insert <END>
<BEG> accessor for first column return the first column <END>
<BEG> sets the handle to the data validation record param dv the data validation <END>
<BEG> gets the ieee value from the byte array pass in param pos the position in the data block which contain the double value param data the data block contain the raw byte return the double value convert from the raw data <END>
<BEG> accessor for the blip type return the blip type <END>
<BEG> gets the data for this blip so that it can be write out return the data for the blip <END>
<BEG> reduces the reference count in this blip <END>
<BEG> accessor for the reference count on the blip return the reference count on the blip <END>
<BEG> gets the blip type give the value param val get the value return the blip type <END>
<BEG> accessor for the draw param i the index number of the draw to return return the drawing <END>
<BEG> gets the drawing record which be read in return the drawing record <END>
<BEG> creates the main sp container for the draw return the sp container <END>
<BEG> accessor for the draw group return the draw group <END>
<BEG> gets the origin of this draw return where this draw come from <END>
<BEG> accessor for the column of this draw return the column <END>
<BEG> sets the column position of this drawing <END>
<BEG> accessor for the row of the draw param y the row <END>
<BEG> accessor for the width of this draw return the number of column span by this image <END>
<BEG> accessor for the height of this draw param h the number of row span by this image <END>
<BEG> sets the text object param t the text object record <END>
<BEG> sets the text data param t continuation record <END>
<BEG> sets the formatting param t continue record <END>
<BEG> accessor for the image file path <END>
<BEG> the drawing record param d the drawing record <END>
<BEG> writes out any additional record param outputfile the output file exception ioexception <END>
<BEG> writes any record that need to be write after all the draw group object have be write writes out all the note record param outputfile the output file <END>
<BEG> accessor for the row <END>
<BEG> accessor for the text on the button return the button text <END>
<BEG> queries whether this object be a form object <END>
<BEG> gets the entire binary record for the chart a a chunk of binary data return the byte <END>
<BEG> accessor for the obj record return the obj record <END>
<BEG> writes out the additional record for a combo box param outputfile the output file exception ioexception <END>
<BEG> gets the client anchor data return the data <END>
<BEG> accessor for the x1 position return the x1 position <END>
<BEG> accessor for the raw data return <END>
<BEG> writes out the additional comment record param outputfile the output file exception ioexception <END>
<BEG> gets the shape count return the shape count <END>
<BEG> used to generate the draw data return the data <END>
<BEG> adds a cluster to this record param dgid the id param sids the sid <END>
<BEG> gets the data for write out return the binary data <END>
<BEG> accessor for a particular cluster param i the cluster number return the cluster <END>
<BEG> writes any other record associate with this draw group object param outputfile the output file exception ioexception <END>
<BEG> interface method return the column number at which the image be position <END>
<BEG> removes a row param r the row to be remove <END>
<BEG> get the width of this image a render within excel param unit the unit of measurement return the width of the image within excel <END>
<BEG> adds the byte stream to the draw data param data the data to add <END>
<BEG> adds the data to the array without incrementing the drawing number <END>
<BEG> accessor for the number of drawing return the current count of drawing <END>
<BEG> gets the sp container for the specified drawing number param drawingnum the draw number for which to return the spcontainer return the spcontainer <END>
<BEG> gets the data which be read in for the drawing return the drawing data <END>
<BEG> adds in a draw group record to this draw group <END>
<BEG> adds a continue record to this draw group <END>
<BEG> adds a chart to the draw group param c the chart <END>
<BEG> adds a drawing from the public <SEG> writable interface param d the draw to add <END>
<BEG> writes the draw group to the output file param outputfile the file to write to exception ioexception <END>
<BEG> gets the drawing data for the give blip id <END>
<BEG> indicates that at least one of the drawing have be omit from the worksheet param mso the mso record param obj the obj record <END>
<BEG> updates this with the appropriate data from the draw group pass in this be call during the copy process : this be first initialise a an empty object <SEG> but during the copy <SEG> the source drawinggroup may change <END>
<BEG> gets the data for this container and all of it child recursively return the binary data <END>
<BEG> display the formatted escher stream exception ioexception <END>
<BEG> used by the escherdisplay class to retrieve the data return the data <END>
<BEG> determines whether this record be a container return true if this be a container <SEG> false otherwise <END>
<BEG> accessor for the length <SEG> exclude the 8 byte header return the length exclude the 8 byte header <END>
<BEG> accessor for the draw group stream return the draw group stream <END>
<BEG> gets the position in the stream return the position in the stream <END>
<BEG> called from the subclass when write to set the instance value param inst the instance <END>
<BEG> called when write to set the length of this record param l the length <END>
<BEG> adds the 8 byte header data on the value data pass in <SEG> return the modify data param d the value data return the value data with the header information <END>
<BEG> accessor for the header stream return the escher stream <END>
<BEG> gets the data that be read in <SEG> exclude the header data return the value data that be read in <END>
<BEG> accessor for the stream length return the stream length <END>
<BEG> accessor to get the item from a particular value param val the escher record value return the type correspond to val <SEG> or unknown if a match could not be find <END>
<BEG> sets the flag to indicate that this be the first drawing on the sheet <END>
<BEG> accessor for the first drawing on the sheet <END>
<BEG> accessor for the object id return accessor for the object id <END>
<BEG> gets the shape type give the value param v the value return the shape type for the value <END>
<BEG> the drawing on the sheet param dr the list of drawing param mod flag indicate whether the drawing have be tamper with <END>
<BEG> sets the chart on the sheet param ch the chart <END>
<BEG> accessor for the chart on the sheet return the chart <END>
<BEG> gets the data return the binary data <END>
<BEG> gets the binary data return the binary data <END>
<BEG> gets the text length <END>
<BEG> removes a column param col the row to remove <END>
<BEG> gets the formula present in the validation return the validation formula a a string exception formulaexception <END>
<BEG> returns the row number of this cell return the row number of this cell <END>
<BEG> returns the content type of this cell return the content type for this cell <END>
<BEG> quick and dirty function to return the content of this cell a a string <END>
<BEG> accessor for the format which be apply to this cell return the format apply to this cell <END>
<BEG> dummy override param flag dummy <END>
<BEG> dummy override param line dummy param border dummy <END>
<BEG> dummy override param cf dummy deprecate <END>
<BEG> indicates whether or not this cell be hide <SEG> by virtue of either the entire row or column be collapsed return true if this cell be hide <SEG> false otherwise <END>
<BEG> implementation of the deep copy function param c the column which the new cell will occupy param r the row which the new cell will occupy return a copy of this cell <SEG> which can then be add to the sheet <END>
<BEG> accessor for the cell feature return the cell feature or null if this cell do n't have any <END>
<BEG> gets the byte data for write out return the raw data <END>
<BEG> sets the font index of this record <END>
<BEG> accessor for the font index return the font index <END>
<BEG> sets the point size for this font <SEG> if the font have n't be initialize param p the point size <END>
<BEG> returns the italic flag return true if this font be italic <SEG> false otherwise <END>
<BEG> gets the underline style for this font return the underline style <END>
<BEG> sets the colour for this font <SEG> if the font have n't be initialize param c the colour <END>
<BEG> gets the colour for this font return the colour <END>
<BEG> gets the script style return the script style <END>
<BEG> standard equal method param o the object to compare return true if the object be equal <SEG> false otherwise <END>
<BEG> accessor for the strike out flag return true if this font be strike out <SEG> false otherwise <END>
<BEG> sets the struck out flag param os true if the font be strike out <SEG> false otherwise <END>
<BEG> adds a font record to this workbook <END>
<BEG> writes out the list of font param outputfile the compound file to write the data to exception ioexception <END>
<BEG> rationalizes all the font <SEG> remove any duplicate return the mapping between new index and old one <END>
<BEG> sees if the extended formatting record at the specified position represent a date <END>
<BEG> gets the dateformat use to format the cell <END>
<BEG> accessor for the font use by this workbook return the font container <END>
<BEG> gets the xfrecord for the specified index <END>
<BEG> gets the number of format record on the list <END>
<BEG> rationalizes all the font <SEG> remove duplicate entry return the list of new font index number <END>
<BEG> accessor for the colour palette return the palette <END>
<BEG> called from the workbookparser to set the colour palette param pr the palette <END>
<BEG> sets the rgb value for the specified colour for this workbook param c the colour whose rgb value be to be overwrite param r the red portion to set 0-255 param g the green portion to set 0-255 param b the blue portion to set 0-255 <END>
<BEG> accessor for the rgb value for the specified colour return the rgb for the specify colour <END>
<BEG> abstract method which get the token for this operator return the string symbol for this token <END>
<BEG> accessor for the first row return the first row <END>
<BEG> reads the ptg data from the array start at the specified position param data the rpn array param po the current position in the array <SEG> exclude the ptg identifier return the number of byte read <END>
<BEG> gets the string representation of this item param buf the string buffer <END>
<BEG> gets the token representation of this item in rpn return the byte applicable to this formula <END>
<BEG> adjusts all the relative cell reference in this formula by the amount specify <END>
<BEG> called when a column be insert on the specified sheet <END>
<BEG> if this formula be on an imported sheet <SEG> check that cell reference to another sheet be warn appropriately does nothing here <END>
<BEG> gets the string version of this area param buf the area to populate <END>
<BEG> if this formula be on an imported sheet <SEG> check that cell reference to another sheet be warn appropriately <END>
<BEG> sets the if condition for this attribute <SEG> if it represent an if function param vaf a < code > variableargfunction < code > value <END>
<BEG> queries whether this attribute be a sum return true if this be sum <SEG> false otherwise <END>
<BEG> gets the operand for this operator from the stack param s the token stack <END>
<BEG> default behaviour be to do nothing param coladjust the amount to add on to each relative cell reference param rowadjust the amount to add on to each relative row reference <END>
<BEG> if this formula be on an imported sheet <SEG> check that cell reference to another sheet be warn appropriately does nothing <SEG> a operator do n't have cell reference <END>
<BEG> gets the cell reference a a string for this item param buf the string buffer to populate <END>
<BEG> gets the string representation of this column range param buf the string buffer to append to <END>
<BEG> gets the error type give just the code param code the code to lookup return the error type <END>
<BEG> gets the function for the specify name param s the string return the function <END>
<BEG> gets the name for the function param f the function return the string <END>
<BEG> accessor for the out of range flag return true if the value be out of range for an excel integer <END>
<BEG> abstract method which get the binary version of this operator <END>
<BEG> reads the ptg data from the array start at the specified position <END>
<BEG> default behaviour be to do nothing param sheetindex the sheet on which the column be insert param col the column number which be insert param currentsheet true if this formula be on the sheet in which the column be insert <SEG> false otherwise <END>
<BEG> gets the operand for this operator from the stack <END>
<BEG> sets the volatile flag and ripple all the way up the parse tree <END>
<BEG> tells the operand to use the alternate code deprecate - use setparsecontext now <END>
<BEG> accessor for the alternate code flag return true to use the alternate code <SEG> false otherwise deprecate - use setparsecontext now <END>
<BEG> tells the operand to use the alternate code pc the parse context <END>
<BEG> accessor for the alternate code flag return the parse context <END>
<BEG> overrides the getbytes method in the base class and prepends the memfunc token return the byte <END>
<BEG> parses the list of token exception formulaexception <END>
<BEG> accessor for the function param ws the workbook setting return the function <END>
<BEG> gets the token code for the specified token return the token code <END>
<BEG> gets the reference token code for the specify token <END>
<BEG> gets the an alternative token code for the specify token used for certain type of volatile function return the token code <END>
<BEG> parses the sublist of token <END>
<BEG> reads the ptg data from the array start at the specified position param data the rpn array param po the current position in the array <SEG> exclude the ptg identifier return the number of byte read exception formulaexception <END>
<BEG> retrieves a < code > string < code > ified version of this object return the header string <END>
<BEG> accessor for the content which appear on the right hand side of the page return the right align content <END>
<BEG> accessor for the content which in the centre of the page return the centrally aligned content <END>
<BEG> sets a mapping param oldindex the old index param newindex the new index <END>
<BEG> gets the new cell format index param oldindex the exist index number return the new index number <END>
<BEG> gets an int from two byte param b2 the second byte param b1 the first byte return the integer value <END>
<BEG> gets a four byte array from an integer param i the integer return a four byte array <END>
<BEG> converts an integer into two byte <SEG> and place it in the array at the specified position param target the array to place the byte data into param po the position at which to place the data param i the integer value to convert <END>
<BEG> gets the cell at the top left of this range return the cell at the top left <END>
<BEG> sees whether there be any intersection between this range and the range pass in <END>
<BEG> to string method - primarily use during debug return the string version of this object <END>
<BEG> a row have be insert <SEG> so adjust the range object accordingly param r the row which have be insert <END>
<BEG> gets the fit to page flag return true if fit to page be set <END>
<BEG> sets the fit to page flag param b fit to page indicator <END>
<BEG> gets the binary data for output to file return the binary data <END>
<BEG> gets the java date format for this format record return return the date format <END>
<BEG> gets the lookup number of the format record return return the lookup number of the format record <END>
<BEG> sees if this format be a date format return true if this refer to a build in date format <END>
<BEG> accessor for the hidden flag return true if this xf record hide the cell <SEG> false otherwise <END>
<BEG> sets whether or not this xf record lock the cell param l the locked flag <END>
<BEG> sets the cell option param opt the cell option <END>
<BEG> sets the horizontal alignment for the data in this cell <END>
<BEG> sets the indentation param i the indentation <END>
<BEG> sets the shrink to fit flag param s the shrink to fit flag <END>
<BEG> gets the horizontal cell alignment return the alignment <END>
<BEG> gets the shrink to fit flag return true if this format be shrink to fit <SEG> false otherise <END>
<BEG> accessor for whether a particular cell be locked return true if this cell be lock <SEG> false otherwise <END>
<BEG> gets the pattern use by this cell format return the background pattern <END>
<BEG> sets the vertical alignment for the data in this cell this method should only be call from it writable subclass cellxfrecord param o the orientation <END>
<BEG> sets whether the data in this cell be wrap this method should only be call from it writable subclass cellxfrecord param w the wrap flag <END>
<BEG> sets the border for this cell this method should only be call from it writable subclass cellxfrecord param b the border param ls the border line style <END>
<BEG> sets the xf index <END>
<BEG> sets the format type and parent format from the writable subclass param t the xf type param pf the parent format <END>
<BEG> changes the appropriate index during the rationalization process param xfmapping the xf index re-mappings <END>
<BEG> returns a string description of this cell return the string description for this type <END>
<BEG> sets the hidden status of this row column param h the hidden flag <END>
<BEG> accessor for the hidden nature of this row column return true if this row column be hide <SEG> false otherwise <END>
<BEG> sets the dimension for this view param d the width of the column in character <SEG> or the height of the row in 1 20ths of a point deprecate use the setsize method instead <END>
<BEG> sets the dimension for this view param d the width of the column in character multiply by 256 <SEG> or the height of the row in 1 20ths of a point <END>
<BEG> gets the width of the column in character or the height of the row in 1 20ths return the dimension deprecate use getsize instead <END>
<BEG> gets the width of the column in character multiply by 256 <SEG> or the height of the row in 1 20ths of a point return the dimension <END>
<BEG> sets the cell format for this group of cell param cf the format for every cell in the column row <END>
<BEG> accessor for the cell format for this group <END>
<BEG> accessor for the depused attribute return true if the deprecate method be use to set the size <SEG> false otherwise <END>
<BEG> accessor for the autosize flag note : use of the autosize function be very processor intensive <SEG> so use with care return true if this row column be to be autosized <END>
<BEG> if the condition evaluate to false <SEG> an assertionfailed be throw param message a message throw with the failed assertion param condition if this evaluate to false <SEG> an assertionfailed be throw <END>
<BEG> log an error message <END>
<BEG> log a warning message object <END>
<BEG> overrides the method in the base class to suppress warning - it can be set use the system property jxl nowarnings <END>
<BEG> displays the property to the output stream <END>
<BEG> reads in the inputfile and create a writable copy of it call outputfile exception ioexception exception biffexception <END>
<BEG> gets the string description of this alignment return the string description <END>
<BEG> gets the alignment from the value param val return the alignment with that value <END>
<BEG> gets the default red content of this colour <END>
<BEG> returns the default rgb of the colour return the default rgb <END>
<BEG> gets the internal colour from the value param val return the colour with that value <END>
<BEG> returns all available colour - use when generate the default palette return all available colour <END>
<BEG> accessor for the internal binary value association with this paper size return the internal value <END>
<BEG> gets the paper size for a specific value param val the value return the paper size <END>
<BEG> accessor for the red component return the red component of the colour <SEG> between 0 and 255 <END>
<BEG> gets the formula a an excel string return the formula a an excel string exception formulaexception <END>
<BEG> called by the share formula record to set the token for this formula param t the token <END>
<BEG> accessor for the token which make up this formula return the token <END>
<BEG> access for the external sheet return the external sheet <END>
<BEG> access for the name table return the name table <END>
<BEG> accessor for the position of the next record return the position of the next record <END>
<BEG> interrogates this substream to see if it represent the commencement of the workbook globals substream return true if this be the commencement of a workbook globals substream <SEG> false otherwise <END>
<BEG> interrogates the substream to see if it be the commencement of a worksheet return true if this substream be the beginning of a worksheet <SEG> false otherwise <END>
<BEG> interrogates the substream to see if it be a chart return true if this substream be the beginning of a worksheet <SEG> false otherwise <END>
<BEG> gets the raw byte for the formula <END>
<BEG> accessor to determine if this be a chart return true if this be a chart <SEG> false otherwise <END>
<BEG> accessor for the calculation mode return the calculation mode <END>
<BEG> determines whether or not this cell have be hidden return true if this cell have be hide <SEG> false otherwise <END>
<BEG> accessor for the centre flag return returns the centre flag <END>
<BEG> accessor for the start column of this range return the start column index <END>
<BEG> accessor for the column 's outline level return the column 's outline level <END>
<BEG> accessor for the width of the column return the width <END>
<BEG> interface method which return the value return the last calculated value of the formula <END>
<BEG> dummy implementation in order to adhere to the numbercell interface return null <END>
<BEG> interface method which get the error code for this cell <END>
<BEG> queries whether this name record refers to an external record return true if this name record be an add in function <SEG> false otherwise <END>
<BEG> gets the supbook index for the specified external sheet param index the index of the supbook record return the supbook index <END>
<BEG> gets the first tab index for the specified external sheet param index the index of the supbook record return the first tab index <END>
<BEG> gets the footer string return the footer string <END>
<BEG> accessor for the hide mode mode return the hide mode <END>
<BEG> gets the row break return the row break on the current sheet <END>
<BEG> determines whether this be a hyperlink to a file return true if this be a hyperlink to a file <SEG> false otherwise <END>
<BEG> determines whether this be a hyperlink to a web resource return true if this be a url <END>
<BEG> determines whether this be a hyperlink to a location in this workbook return true if this be a link to an internal location <END>
<BEG> returns the row number of the top left cell return the row number of this cell <END>
<BEG> gets the url reference by this hyperlink return the url <SEG> or null if this hyperlink be not a url <END>
<BEG> returns the local file eferenced by this hyperlink return the file <SEG> or null if this hyperlink be not a file <END>
<BEG> gets the cell content a a string return the label <END>
<BEG> gets the range which have be merge in this sheet return the range of cell which have be merge <END>
<BEG> gets the cell format for this cell return the cell format for these cell <END>
<BEG> the first column contain the blank number return the first column <END>
<BEG> return a specific format index param index the cell index in the group return the formatting index <END>
<BEG> accessor to see whether this spreadsheet date be base around 1904 return true if this workbooks date be base around the 1904 date system <END>
<BEG> returns the content of this cell a a string return the value format into a string <END>
<BEG> accessor for the number of row in the top left pane return the number of row visible in the top left pane <END>
<BEG> accessor for the numbe rof column visible in the top left pane return the number of column visible in the top left pane <END>
<BEG> accessor for the print grid line flag return true to print grid line <SEG> false otherwise <END>
<BEG> returns the protected flag return true if this be protect <SEG> false otherwise <END>
<BEG> converts excel 's internal rk format into a double value param rk the rk number in bit return the double representation <END>
<BEG> interrogates whether this row be of default height return true if this be set to the default height <SEG> false otherwise <END>
<BEG> interrogates this row to see whether it match the default font height return true if this match the default font height <SEG> false otherwise <END>
<BEG> gets the row number return the number of this row <END>
<BEG> accessor for row 's groupstart value return the row 's groupstart value <END>
<BEG> gets the height of the row return the row height <END>
<BEG> queries whether the row be collapsed return the collapsed indicator <END>
<BEG> queries whether the row have a specific default cell format apply return the default cell format <END>
<BEG> accessor for the recalculate on save mode return the recalculate on save mode <END>
<BEG> accessor for the zoom factor return the zoom factor a the near integer percentage <END>
<BEG> the horizontal print resolution <END>
<BEG> accessor for the vertical print resolution <END>
<BEG> accessor for the initialized flag return whether the print page setup should be initialize in the dialog box <END>
<BEG> sets the format for the number base on the excel spreadsheet ' format <END>
<BEG> sets the name of this sheet param s the sheet name <END>
<BEG> gets the column info record for the specified column <END>
<BEG> clears out the array of cell <END>
<BEG> gets the hyperlink on this sheet return an array of hyperlink <END>
<BEG> gets the non-default row <END>
<BEG> gets the row record <END>
<BEG> gets the workspace option for this sheet <END>
<BEG> accessor for the sheet setting return the setting for this sheet <END>
<BEG> gets the column format for the specified column param col the column number return the column format <SEG> or null if the column have no specific format deprecate use getcolumnview instead <END>
<BEG> gets the column width for the specified column param col the column number return the column format <SEG> or the default format if no override be specify <END>
<BEG> gets the row height for the specified column param row the row number return the row height <SEG> or the default height if the row have no specify format deprecate use getrowview instead <END>
<BEG> used when copy sheet in order to determine the type of the contain workboook return the workbook bof record <END>
<BEG> accessor for the environment specific print record <SEG> invoke when copy sheet return the environment specific print record <END>
<BEG> accessor for the number of image on the sheet return the number of image on this sheet <END>
<BEG> used by one of the demo program for debug purpose only <END>
<BEG> gets the conditional format return the conditional format <END>
<BEG> returns the autofilter return the autofilter <END>
<BEG> accessor for the maximum column outline level <END>
<BEG> reads in the content of this sheet <END>
<BEG> accessor return the row property <END>
<BEG> accessor for the 1st sort column name return the 1st sort column name <END>
<BEG> accessor for the sort by columns flag return the sort by columns flag <END>
<BEG> gets the type of this supbook record return the type of this supbook <END>
<BEG> gets the name of the external file return the name of the external file <END>
<BEG> gets the name of the external sheet param i the index of the external sheet return the name of the sheet <END>
<BEG> accessor for the zero value flag return true if this sheet display zero value <SEG> false otherwise <END>
<BEG> accessor for the frozen pane flag return true if this contain frozen pane <SEG> false otherwise <END>
<BEG> accessor for the frozen not split flag return true if this contain frozen <SEG> false otherwise <END>
<BEG> accessor for the page break preview mode return true if this sheet be in page break preview <SEG> false otherwise <END>
<BEG> accessor for the page break preview magnification return the cached page break preview magnfication factor in percent <END>
<BEG> accessor for the normal view magnification return the cached normal view magnfication factor in percent <END>
<BEG> gets the sheet within this workbook <END>
<BEG> gets the sheet names return an array of string contain the sheet name <END>
<BEG> returns the number of sheet in this workbook return the number of sheet in this workbook <END>
<BEG> closes this workbook <SEG> and free make any memory allocate available for garbage collection <END>
<BEG> adds the sheet to the end of the array param s the sheet to add <END>
<BEG> accessor for the formattingrecords <SEG> use by the writableworkbook when create a copy of this return the formatting record <END>
<BEG> accessor for the externsheet <SEG> use by the writableworkbook when create a copy of this return the external sheet record <END>
<BEG> accessor for the msodrawinggroup <SEG> use by the writableworkbook when create a copy of this return the mso drawing group record <END>
<BEG> accessor for the supbook record <SEG> use by the writableworkbook when create a copy of this return the supbook record <END>
<BEG> returns the cell for the specify location eg <END>
<BEG> gets the name cell from this workbook <END>
<BEG> determines whether the sheet be protect return whether or not the sheet be protect <END>
<BEG> accessor implementation method for the external sheet reference param sheetname the sheet name to look for return the external sheet index <END>
<BEG> gets the index of the name record for the name param name the name to search for return the index in the name table <END>
<BEG> accessor for the country record <SEG> use during copy return the country record read in <END>
<BEG> accessor for addin function name return list of add in function name <END>
<BEG> gets the binary data for output to file return write access user name <END>
<BEG> sets the paper orientation for print this sheet param po the orientation <END>
<BEG> sets the page order for print this sheet param order <END>
<BEG> sets the paper size to be use when print this sheet param p the paper size <END>
<BEG> accessor for the paper size return the paper size <END>
<BEG> queries whether this sheet be protect ie <END>
<BEG> sets the protected ie <END>
<BEG> sets the margin for any page header param d the margin in inch <END>
<BEG> sets the margin for any page footer param d the footer margin in inch <END>
<BEG> accessor for the footer margin return the footer margin <END>
<BEG> sets the scale factor for this sheet to be use when print <END>
<BEG> accessor for the scale factor return the scale factor <END>
<BEG> sets the page number at which to commence print param p the page start number <END>
<BEG> accessor for the page start return the page start <END>
<BEG> accessor for the fit width return the number of page this sheet will be print into widthwise <END>
<BEG> sets the number of page vertically that this sheet will be print into param fh the number of page this sheet will be print into heightwise <END>
<BEG> sets the horizontal print resolution param hpw the print resolution <END>
<BEG> sets the vertical print reslution param vpw the vertical print resolution <END>
<BEG> sets the right margin param m the right margin in inch <END>
<BEG> accessor for the right margin return the right margin in inch <END>
<BEG> accessor for the password return the password to unlock this sheet <SEG> or null if not protect <END>
<BEG> accessor for the password hash - use only when copy sheet return passwordhash <END>
<BEG> accessor for the password hash - use only when copy sheet param ph the password hash <END>
<BEG> accessor for the default column width return the default column width <SEG> in character <END>
<BEG> sets the default column width param w the new default column width <END>
<BEG> accessor for the default row height return the default row height <SEG> in 1 20ths of a point <END>
<BEG> sets the default row height param h the default row height <SEG> in 1 20ths of a point <END>
<BEG> sets the zoom factor <END>
<BEG> accessor for the page break preview mangificaton factor <END>
<BEG> accessor for the nomral view magnificaton factor <END>
<BEG> accessor for the normal magnificaton factor <END>
<BEG> sets the displayzerovalues property param b true to show zero value <SEG> false not to bother <END>
<BEG> accessor for the showgridlines property return true if grid line will be show <SEG> false otherwise <END>
<BEG> sets the showgridlines property param b true to show grid line on this sheet <SEG> false otherwise <END>
<BEG> accessor for the pagebreakpreview mode return true if page break preview be enable <SEG> false otherwise <END>
<BEG> sets the pagebreakpreviewmode property param b true to launch in page break preview mode <SEG> false otherwise <END>
<BEG> sets the printheaders property param b true to print header on this sheet <SEG> false otherwise <END>
<BEG> sets the number of copy param c the number of copy <END>
<BEG> accessor for the number of copy to print return the number of copy <END>
<BEG> sets the header param h the header <END>
<BEG> sets the footer param f the footer <END>
<BEG> accessor for the horizontal centre return returns the horizontalcentre <END>
<BEG> sets the horizontal centre param horizcentre the horizontalcentre to set <END>
<BEG> sets the automatic formula calculation flag param auto - true to automatically calculate the formula <SEG> false otherwise <END>
<BEG> sets the recalculate formula when the sheet be save flag param recalc - true to automatically calculate the formula when the <SEG> spreadsheet be save <SEG> false otherwise <END>
<BEG> accessor for the print area return the print area <SEG> or null if one be not define for this sheet <END>
<BEG> accessor for the print row title return the print row title <SEG> or null if one be not define for this sheet <END>
<BEG> sets the amount of memory by which to increase the amount of memory allocate to store the workbook data <END>
<BEG> sets the initial amount of memory allocate to store the workbook data when read a worksheet <END>
<BEG> gets the drawing disable flag return true if drawing be disable <SEG> false otherwise <END>
<BEG> accessor for the disabling of garbage collection return false if jexcelapi hint for garbage collection <SEG> true otherwise <END>
<BEG> accessor for the disabling of interpretation of name range return false if name cell be interpret <SEG> true otherwise <END>
<BEG> accessor to retrieve the rationalization flag return true if rationalization be off <SEG> false if rationalization be on <END>
<BEG> accessor to retrieve the merge cell check flag return true if merge cell checking be off <SEG> false if it be on <END>
<BEG> accessor to set the merge cell check param b - true to enable merge cell checking <SEG> false otherwise <END>
<BEG> accessor for the formula adjust disable return true if formula be adjust follow row column insert delete false otherwise <END>
<BEG> setter for the formula adjust disable property param b true to adjust formula <SEG> false otherwise <END>
<BEG> sets the locale use by jexcelapi to generate the spreadsheet <END>
<BEG> returns the locale use by jexcelapi to read the spreadsheet return the locale <END>
<BEG> accessor for the character encode return the character encode for this workbook <END>
<BEG> sets the encoding for this workbook param enc the encoding <END>
<BEG> sets the character set <END>
<BEG> sets the garbage collection disable param disable true to disable garbage collection <SEG> false to enable it <END>
<BEG> sets the ignore blank flag param ignoreblanks true to ignore blank <SEG> false to take them into account <END>
<BEG> accessor for the ignore blank flag return true if blank cell be be ignore <SEG> false otherwise <END>
<BEG> sets the ignore cell validation flag param cv true to disable cell validation <SEG> false to enable it <END>
<BEG> accessor for the ignore cell validation return true if cell validation be disabled <END>
<BEG> returns the two character iso 3166 mnemonic use by excel for it regional setting return the regional setting <END>
<BEG> sets the language in which the generate file will display param code the two character iso 3166 country code <END>
<BEG> sets the regional setting for the generated excel file param code the two character iso 3166 country code <END>
<BEG> accessor for the autofilter disabled feature return true if autofilter be disable <SEG> false otherwise <END>
<BEG> sets the autofilter disable param disable <END>
<BEG> accessor for the temporary file during write <END>
<BEG> sets whether a temporary file be use during the generation of the workbook <END>
<BEG> used in conjunction with the usetemporaryfileduringwrite setting to set the target directory for the temporary file <END>
<BEG> when true then refresh all should be do on all external data range and pivottables when load the workbook the default be =0 param refreshall the refreshall to set <END>
<BEG> when true then refresh all should be do on all external data range and pivottables when load the workbook the default be =0 return the refreshall value <END>
<BEG> workbook is a template return the template <END>
<BEG> workbook is a template param template the template to set <END>
<BEG> the hideobj record store option select in the options dialog <SEG> view tab possible value be : hideobj_hide_all <SEG> hideobj_show_all and hideobj_show_placeholders return the hideobj <END>
<BEG> sets the background for the cell exception writeexception param c the background colour param p the background patter <END>
<BEG> sets whether or not this xf record lock the cell param l the locked flag exception writeexception <END>
<BEG> sets the text wrapping for cell with this style <END>
<BEG> sets the offset of this cell record within the sheet stream param pos the offset <END>
<BEG> adds a cell param po <END>
<BEG> sets the position of this cell within the sheet stream param pos the position <END>
<BEG> returns the binary data to be write to the output file return the binary data <END>
<BEG> sets the data at the specified position to the content of the array param pos the position to alter param newdata the data to modify <END>
<BEG> gets the binary data for output <END>
<BEG> adds another index record into the array param pos the position in the output file <END>
<BEG> writes the byte to the end of the array <SEG> grow the array a need dictate param d the data to write to the end of the array <END>
<BEG> gets the current position within the file return the position within the file <END>
<BEG> used to adjust the merged cell follow a column insertion <END>
<BEG> unmerges the specified cell <END>
<BEG> error formula specific exception handling <END>
<BEG> an exception have occur <SEG> so produce some appropriate dummy cell content <END>
<BEG> accessor for the read formula return the read formula <END>
<BEG> imports a sheet from a different workbook <SEG> do a deep copy <END>
<BEG> gets the number of row - allow for the case where formatting have be apply to row <SEG> even though the row have no data return the number of row <END>
<BEG> sets the sheet setting for this particular sheet <END>
<BEG> accessor for the workspace option param wo the workspace option <END>
<BEG> check all the merge cell for border <END>
<BEG> sets a flag to indicate that this sheet contain a chart only <END>
<BEG> sets the environment specific print record param pls the print record <END>
<BEG> sets the button property set record param bps the button property set <END>
<BEG> sets the data validation param dv the read-in list of data validation param vc the api manipulate set of data validation <END>
<BEG> sets the conditional format param cf the conditonal format <END>
<BEG> sets the auto filter param af the autofilter <END>
<BEG> adds the first string to this sst record param s the string to add param b include the length information for the first string return the number of character not add <END>
<BEG> gets the current offset into this record <SEG> exclude the header field return the number of byte after the header field <END>
<BEG> gets the thread safe version of the cell format pass in <END>
<BEG> sets the point size for this font <SEG> if the font have n't be initialize param pointsize the point size exception writeexception <SEG> if this font be already in use elsewhere <END>
<BEG> sets the struck out flag param so true if the font be strike out <SEG> false otherwise exception writeexception <SEG> if this font be already in use elsewhere <END>
<BEG> gets the row record for the specified row param r the row return the row record <END>
<BEG> sets the width in character for a particular column in this sheet param col the column whose width to set param width the width of the column in character <END>
<BEG> sets the view for this column param row the column on which to set the view param view the view to set exception rowsexceededexception <END>
<BEG> gets the writable hyperlink on this sheet return an array of hyperlink <END>
<BEG> sets the header for this page param l the print header to print on the left side param c the print header to print in the centre param r the print header to print on the right hand side deprecate use the sheet setting bean <END>
<BEG> sets the page setup detail param p the page orientation deprecate use the sheetsettings bean <END>
<BEG> gets the workbook setting <END>
<BEG> accessor for the chart only method return true if this be a chart only <SEG> false otherwise <END>
<BEG> adds an image to this sheet param image the image to add <END>
<BEG> gets the number of image on this sheet return the number of image on this sheet <END>
<BEG> accessor for a particular image on this sheet param i the 0-based image index number return the image with the specified index number <END>
<BEG> adds a drawing to the list - typically use for comment param the drawing to add <END>
<BEG> removes the data validation for the specify cell <END>
<BEG> accessor for the page break on this sheet return the page break on this sheet <END>
<BEG> flags the added cell a have data validation param cell the cell with data validation <END>
<BEG> accessor for the combo box object use for list data validation on this sheet return the combo box <END>
<BEG> gets the specified sheet within this workbook param index the zero base index of the required sheet return the sheet specify by the index <END>
<BEG> sets a new output file <END>
<BEG> removes a sheet from this workbook <SEG> the other sheet index be alter accordingly <END>
<BEG> indicates whether or not this workbook be protect param prot protect flag <END>
<BEG> gets the name of the external sheet specify by the index param index the external sheet index return the name of the external sheet <END>
<BEG> gets the name of the last external sheet specify by the index param index the external sheet index return the name of the external sheet <END>
<BEG> parsing of formula be only support for a subset of the available biff version <SEG> so we need to test to see if this version be acceptable return the bof record <SEG> which <END>
<BEG> gets the index of the external sheet for the name param sheetname return the sheet index of the external sheet index <END>
<BEG> gets the external sheet index for the sheet name param sheetname return the sheet index or -1 if the sheet could not be find <END>
<BEG> gets the last external sheet index for the sheet name param sheetname return the sheet index or -1 if the sheet could not be find <END>
<BEG> gets the name at the specified index param index the index into the name table return the name of the cell <END>
<BEG> adds a cell to workbook wide range of cell which need adjustment follow a row column insert or remove param f the cell to add to the list <END>
<BEG> adds a drawing to this workbook param d the draw to add <END>
<BEG> create a draw group for this workbook - use when import sheet which contain drawing <SEG> but this workbook do n't <END>
<BEG> removes the specify name range from the workbook param name the name to remove <END>
<BEG> accessor for the jxl common style return the standard style for this workbook <END>
<BEG> imports a sheet from a different workbook <END>
<BEG> factory method which create the specified font name <END>
<BEG> sets the description to appear in the hyperlink cell param desc the description <END>
<BEG> accessor for the image position return the column number at which the image be position <END>
<BEG> accessor for the image position param c the column number at which the image should be position <END>
<BEG> appends cell reference with ' $ ' marker for absolute value a require <END>
<BEG> param in xlsx input stream return new temp file <END>
<BEG> param in xlsx input stream that contain r { key } element param out xlsx output stream for write the result that contain translate r { key } element <END>
<BEG> author curtis stanford author leonid vysochyn <END>
<BEG> return charset for the font or < code > null < code > if there be no matching charset or if the charset be a & quot ; default & quot ; <END>
<BEG> get the font weight < p > the weight of the font in the range 0 through 1000 <END>
<BEG> set the font weight param weight the font weight <END>
<BEG> return { code true } <SEG> if the font be italic <END>
<BEG> set the font posture param italic { code true } for italic <SEG> { code false } for regular <END>
<BEG> return the wrapper object hold the font data <END>
<BEG> get fontfamily from combine native id param pitchandfamily the pitchfamily to decode <END>
<BEG> try to guess the font group base on the codepoint param runtext the text which font group be to be analyze return the fontgroup <END>
<BEG> get the index within the collection of font object return unique index number of the underlying record this font represent probably you do n't care unless you 're compare which one be which <END>
<BEG> sets the index within the collection of font object param index the index within the collection of font object throw unsupportedoperationexception if unsupported <END>
<BEG> return the font charset <END>
<BEG> return the font pitch or { code null } if unsupported <END>
<BEG> set the font pitch param pitch the font pitch throw unsupportedoperationexception if unsupported <END>
<BEG> return panose info in binary form or { code null } if unknown <END>
<BEG> set the panose in binary form param panose the panose byte <END>
<BEG> if font facet be embed in the document <SEG> return the list of embedded facet <END>
<BEG> get fontpitch from native id param pitchandfamily the combine byte value for pitch and family return the result fontpitch enumeration value <END>
<BEG> set an escher property <END>
<BEG> we have this method because the way in which array in escher work be screw for seemly arbitrary reason <END>
<BEG> serializes the simple part of this property <END>
<BEG> gets the first md4 <SEG> that specify the unique identifier of the uncompressed blip data return the first md4 <END>
<BEG> sets the first md4 <SEG> that specify the unique identifier of the uncompressed blip data param field_1_uid the first md4 <END>
<BEG> gets the picture data byte return the picture data <END>
<BEG> sets the picture data byte param picturedata the picture data param offset the offset into the picture data param length the amount of byte to be use <END>
<BEG> whether this boolean property be true return the boolean property value <END>
<BEG> the expect blip type under window failure to match this blip type will result in excel convert to this format <END>
<BEG> set the expected win32 blip type param bliptypewin32 win32 blip type <END>
<BEG> unused return an unknown tag <END>
<BEG> blip size in stream <END>
<BEG> file offset in the delay stream <END>
<BEG> defines the way this blip be use <END>
<BEG> the length in character of the blip name <END>
<BEG> any remain data in this record <END>
<BEG> 0 = move and size with cells <SEG> 2 = move but do n't size with cell <SEG> 3 = do n't move or size with cell <END>
<BEG> the column number for the top-left position <END>
<BEG> the x offset within the top-left cell <END>
<BEG> the y offset within the top-left corner of the current shape <END>
<BEG> the column of the bottom right corner of this shape <END>
<BEG> the x offset withing the cell for the bottom-right corner of this shape <END>
<BEG> the row number for the bottom-right corner of the current shape <END>
<BEG> any remain data in the record return the remain byte <END>
<BEG> any remain data in the record param remainingdata the remain byte <END>
<BEG> return { link sysindexsource } if { link # hassysindexflag } be { code true } <SEG> otherwise null <END>
<BEG> return the { link sysindexprocedure } - for invert flag use { link # getsysindexinvert } return { link sysindexprocedure } if { link # hassysindexflag } be { code true } <SEG> otherwise null <END>
<BEG> return 0 for no invert flag <SEG> 1 for { link sysindexprocedure # invert_after } and 2 for { link sysindexprocedure # invert_highbit_after } <END>
<BEG> return index of the scheme color or -1 if { link # hasschemeindexflag } be { code false } see org apache poi hslf record colorschemeatom # getcolor int <END>
<BEG> return index of current palette color or -1 if { link # haspaletteindexflag } be { code false } <END>
<BEG> return index of system color table or -1 if { link # hassysindexflag } be { code false } see org apache poi sl usermodel presetcolor <END>
<BEG> calculates the number of byte require to serialize this property <END>
<BEG> return a copy of the list of all the child record of the container <END>
<BEG> removes the give escher record from the child list param toberemoved the escher record to be remove return true <SEG> if the record be find and remove <END>
<BEG> returns all of our child which be also eschercontainers may be 0 <SEG> 1 <SEG> or vary rarely 2 or 3 return eschercontainer child <END>
<BEG> add a child record before the record with give recordid param record the record to be add param insertbeforerecordid the recordid of the next sibling <END>
<BEG> recursively find record with the specify record id param recordid the recordid to be search for param out - list to store found record <END>
<BEG> the number of shape in this drawing group <END>
<BEG> gets the draw group id for this record <END>
<BEG> decodes the escher stream from a byte array and dump the result to a print stream <END>
<BEG> most property be just 6 byte in length <END>
<BEG> reads the 8 byte header information and populate the < code > option < code > and < code > recordid < code > record <END>
<BEG> read the option field from header and return instance part of it <END>
<BEG> determine whether this be a container record by inspect the option field <END>
<BEG> serializes to a new byte array <END>
<BEG> sets the record id for this record <END>
<BEG> returns the indexed child record <END>
<BEG> the display method allow escher variable to print the record name accord to their hierarchy <END>
<BEG> sets the instance part of record param value instance part value <END>
<BEG> param tab - each child must be indent right relative to it parent return xml representation of this record <END>
<BEG> return the red part <END>
<BEG> return return the 32 bit value of this property <END>
<BEG> returns a hashcode so that this object can be store in collection that require the use of such thing <END>
<BEG> the start top-left coordinate of child record <END>
<BEG> gets the fill color return the fill color <END>
<BEG> sets the fill color param field_1_color1 the fill color <END>
<BEG> return a number that identify this shape <END>
<BEG> the flag that apply to this shape <END>
<BEG> returns shape type <END>
<BEG> returns any extra data associate with this record <END>
<BEG> sets the extra data in the parent application 's format to be contain by the record <END>
<BEG> returns the document information metadata for the document return the document summary information or null if it could not be read for this document <END>
<BEG> returns an hpsf power text extractor for the document property metadata <SEG> such a title and author <END>
<BEG> return the underlying directoryentry of this document <END>
<BEG> used to ensure file handle cleanup <END>
<BEG> allows to free resource of the extractor as soon a it be not need any more <END>
<BEG> reads the class id 's value from a byte array by turn little-endian into big-endian <END>
<BEG> check array size : <END>
<BEG> write the class id to a littleendianoutput stream param leo the output <END>
<BEG> returns a human-readable representation of the class id in standard format { code { xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx } } <END>
<BEG> return the list of property value - use { link # property } for the wrapped value <END>
<BEG> compares two custom property for equality <END>
<BEG> converts a windows filetime in utc into a { link date } in utc <END>
<BEG> converts a { link date } into a filetime <END>
<BEG> return { code true } if the date be undefined param date the date return { code true } if the date be undefined <END>
<BEG> < p > returns the { link throwable } that cause this exception to be throw or < code > null < code > if there be no such { link throwable } < p > return the reason <END>
<BEG> write out to the currently open file the property change <SEG> but nothing else <END>
<BEG> creates the most specific { link propertyset } from an entry in the specified poifs directory <END>
<BEG> creates the most specific { link propertyset } from an { link inputstream } <END>
<BEG> creates a new document summary information <END>
<BEG> check whether we have already generate the byte make out the section <END>
<BEG> < p > returns the thumbnail a a < code > byte [ ] < code > in { link variant # vt_cf vt_cf } format < p > return the thumbnail value see summaryinformation # getthumbnail <END>
<BEG> < p > sets the thumbnail 's underlying < code > byte [ ] < code > in { link variant # vt_cf vt_cf } format < p > param thumbnail the new thumbnail value see summaryinformation # getthumbnail <END>
<BEG> < p > returns an < code > int < code > represent the clipboard format < p > < p > will throw an exception if the thumbnail 's clipboard format tag be not { link thumbnail # cftag_windows cftag_windows } < p > < p > possible return value be : < p > < ul > < li > { link # cf_metafilepict cf_metafilepict } < li > < li > { link # cf_dib cf_dib } < li > < li > { link # cf_enhmetafile cf_enhmetafile } < li > < li > { link # cf_bitmap cf_bitmap } < li > < ul > return a flag indicate the clipboard format throw hpsfexception if the thumbnail be n't cftag_windows <END>
<BEG> < p > returns the thumbnail a a < code > byte [ ] < code > of wmf data if the thumbnail 's clipboard format tag be { link # cftag_windows cftag_windows } and it clipboard format be { link # cf_metafilepict cf_metafilepict } < p > < p > this < code > byte [ ] < code > be in the traditional wmf file <SEG> not the clipboard-specific version with special header < p > < p > see < a href= http : www wvware com caolan ora-wmf html target= _blank > http : www wvware com caolan ora-wmf html < a > for more information on the wmf image format < p > return a wmf image of the thumbnail throw hpsfexception if the thumbnail be n't cftag_windows and cf_metafilepict <END>
<BEG> returns the variant type name associate with a variant type number <END>
<BEG> returns a variant type 's length <END>
<BEG> return the summary information property singleton <END>
<BEG> return the document summary information property singleton <END>
<BEG> returns a property map <SEG> which be only use a a fallback <SEG> i e <END>
<BEG> for the most basic testing <END>
<BEG> method main with 1 argument just run straight biffview against give file < p > < b > usage < b > : < p > biffviewer [ -- biffhex ] [ -- noint ] [ -- noescher ] [ -- out ] & lt ; filename & gt ; < p > biffviewer -- rawhex [ -- out ] & lt ; filename & gt ; < table summary= biffviewer option > < tr > < td > -- biffhex < td > < td > show hex dump of each biff record < td > < tr > < tr > < td > -- noint < td > < td > do not output interpretation of biff record < td > < tr > < tr > < td > -- out < td > < td > send output to & lt ; filename & gt ; out < td > < tr > < tr > < td > -- rawhex < td > < td > output raw hex dump of whole workbook stream < td > < tr > < tr > < td > -- escher < td > < td > turn on deserialization of escher record default be off < td > < tr > < tr > < td > -- noheader < td > < td > do not print record header default be on < td > < tr > < table > param args the command line argument throw ioexception if the file do n't exist or contain error throw commandparseexception if the command line contain error <END>
<BEG> method parseformularecord param record the record to be parse <END>
<BEG> method main pas me a filename and i 'll try and parse the formula from it param args pas one argument with the filename or -- help throw ioexception if the file ca n't be read or contain error <END>
<BEG> create an array of record from an input stream param in the inputstream from which the record will be obtain exception recordformatexception on error process the inputstream <END>
<BEG> returns the 0 base number of the last column see for this row <END>
<BEG> process the record ourselves <SEG> but do not pass it on to the child listener <END>
<BEG> formats the give numeric of date cell content a a string <SEG> in as close a we can to the way that excel would do so <END>
<BEG> returns the format string <SEG> eg $ # # # # <SEG> for the give number format index <END>
<BEG> returns the format string <SEG> eg $ # # # # <SEG> use by your cell param cell the cell return the format string <END>
<BEG> returns the index of the format string <SEG> use by your cell <SEG> or -1 if none find param cell the cell return the index of the format string <END>
<BEG> processes a file into essentially record event <END>
<BEG> add an event listener for a particular record type <END>
<BEG> this be the equivalent of call addlistener mylistener <SEG> sid for every record in the org apache poi hssf record package <END>
<BEG> called by hssfeventfactory <SEG> pass the record to each listener associate with a record sid <END>
<BEG> would return the document information metadata for the document <SEG> if we support it <END>
<BEG> would control the inclusion of cell comment from the document <SEG> if we support it <END>
<BEG> should sheet name be include ? <END>
<BEG> should we return the formula itself <SEG> and not the result it produce ? <END>
<BEG> creates a new draw group return a new drawing group <END>
<BEG> returns the draw group container record return the draw group container record <END>
<BEG> increment the drawing counter <END>
<BEG> read support offset use a start point for search for low level api <END>
<BEG> clones the low level record of this sheet and return the new sheet instance <END>
<BEG> creates a sheet with all the usual record minus value and the index record not require <END>
<BEG> updates formulas in cell and conditional format due to move of cell param shifter the formular shifter param externsheetindex the externsheet index of this sheet <END>
<BEG> per an early report bug in work with andy khan 's excel read library <END>
<BEG> adds a value record to the sheet 's contain binary record i e <END>
<BEG> adds a row record to the sheet < p > this method be loc sensitive <END>
<BEG> get the next rowrecord from loc <END>
<BEG> create the bof record <END>
<BEG> get the default column width for the sheet if the column do not define their own width return default column width <END>
<BEG> set the default column width for the sheet if the column do not define their own width param dcw default column width <END>
<BEG> get the index to the extendedformatrecord associate with the column at specify 0-based index <END>
<BEG> set the width for a give column in 1 256th of a character width unit param column - the column number param width in unit of 1 256th of a character width <END>
<BEG> sets the left column to show in desktop window pane <END>
<BEG> returns the active row see org apache poi hssf record selectionrecord return row the active row index <END>
<BEG> sets the active row param row the row index see org apache poi hssf record selectionrecord <END>
<BEG> see org apache poi hssf record selectionrecord return column of the active cell <END>
<BEG> returns the first occurrence of a record match a particular sid <END>
<BEG> sets the scl record or create it in the correct place if it do not already exist <END>
<BEG> finds the first occurrence of a record match a particular sid and return it 's position <END>
<BEG> creates a split freezepane <END>
<BEG> returns the information regard the currently configure pane split or freeze <END>
<BEG> returns if formula be display <END>
<BEG> param uncalced whether an uncalced record must be insert or not at generation <END>
<BEG> finds the drawingrecord for our sheet <SEG> and attach it to the drawingmanager which know about the overall drawinggroup for our workbook <END>
<BEG> perform any work necessary before the sheet be about to be serialize <END>
<BEG> get the { link noterecord } s related to cell comment for this sheet return never < code > null < code > <SEG> typically empty array <END>
<BEG> todo - would not be require if call code use recordstream or similar <END>
<BEG> param builtincode a builtin_~ constant from { link namerecord } param sheetnumber 1-based sheet number <END>
<BEG> check if the give name be already include in the linktable <END>
<BEG> param extrefindex a from a { link ref3dptg } or { link area3dptg } return -1 if the reference be to an external book <END>
<BEG> finds the external name definition for the give name <SEG> optionally restrict by externsheet index <SEG> and return if find a a namexptg <END>
<BEG> changes an external referenced file to another file <END>
<BEG> return the { link class } of the next record <END>
<BEG> return the next record <END>
<BEG> find the give record in the record list by identity and remove it param record the identical record to be search for <END>
<BEG> string representation of cfrecordsaggregate <END>
<BEG> param shifter the { link formulashifter } to use param currentexternsheetix the index for extern sheet return < code > false < code > if this whole { link cfheaderrecord } { link cfrulerecord } s should be delete <END>
<BEG> inserts a column into the aggregate at the end of the list <END>
<BEG> creates an outline group for the specified column <SEG> by set the level field for each col info record in the range <END>
<BEG> finds the < tt > columninforecord < tt > which contain the specified columnindex param columnindex index of the column not the index of the columninforecord return < code > null < code > if no column info find for the specified column <END>
<BEG> return index of the newly add cf header aggregate <END>
<BEG> debug only todo - encapsulate <END>
<BEG> also check for a related share formula and unlinks it if find <END>
<BEG> read zero or more consecutive { link mergecellsrecord } s param r <END>
<BEG> gets the { link sharedvaluerecordbase } record if it should be encode immediately after the formula record contain in the specified { link formularecordaggregate } agg <END>
<BEG> converts all { link formularecord } s handle by < tt > sharedformularecord < tt > to plain unshared formula <END>
<BEG> add specify array record <END>
<BEG> removes the { link arrayrecord } for the cell group contain the specify cell <END>
<BEG> tallies a count of the size of the cell record that be attach to the row in the range specify <END>
<BEG> returns true if the row have cell attach to it <END>
<BEG> get the row this cell occur on return the row <END>
<BEG> set the index of the extended format record to style this cell with param xf - the 0-based index of the extended format see org apache poi hssf record extendedformatrecord <END>
<BEG> get the index of the extended format record to style this cell with return extend format index <END>
<BEG> return the non static version of the id for this record <END>
<BEG> version number - for biff8 should be 0x06 see # version param version version to be set <END>
<BEG> type of object this mark see # type_workbook see # type_vb_module see # type_worksheet see # type_chart see # type_excel_4_macro see # type_workspace_file param type type to be set <END>
<BEG> build that write this file see # build param build build number to set <END>
<BEG> year of the build that write this file see # build_year param year build year to set <END>
<BEG> set the history bit mask not very useful see # history_mask param bitmask bitmask to set for the history <END>
<BEG> set the minimum version require to read this file see # version param version version to set <END>
<BEG> version number - for biff8 should be 0x06 see # version return version number of the generator of this file <END>
<BEG> type of object this mark see # type_workbook see # type_vb_module see # type_worksheet see # type_chart see # type_excel_4_macro see # type_workspace_file return type of object <END>
<BEG> get the build that write this file see # build return short build number of the generator of this file <END>
<BEG> year of the build that write this file see # build_year return short build year of the generator of this file <END>
<BEG> get the history bit mask not very useful see # history_mask return int bitmask show the history of the file who care ! <END>
<BEG> get the minimum version require to read this file see # version return int least version that can read the file <END>
<BEG> set the offset in byte of the beginning of file marker within the hssf stream part of the poifs file param po offset in byte <END>
<BEG> get the offset in byte of the beginning of file marker within the hssf stream part of the poifs file return offset in byte <END>
<BEG> set the index to the extendedformat see org apache poi hssf record extendedformatrecord param xf index to the xf record <END>
<BEG> set the type of border to use for the left border of the cell param border type see # border_none see # border_thin see # border_medium see # border_dashed see # border_dotted see # border_thick see # border_double see # border_hair see # border_medium_dashed see # border_dash_dot see # border_medium_dash_dot see # border_dash_dot_dot see # border_medium_dash_dot_dot see # border_slanted_dash_dot <END>
<BEG> set the color to use for the left border param color the index of the color definition <END>
<BEG> of off bottom leave to top right line param on - if < code > true < code > - on <SEG> otherwise off <END>
<BEG> return < code > true < code > if forward diagonal be on <END>
<BEG> get the height of the font in 1 20th point unit return fontheight in point 20 ; or -1 if not modify <END>
<BEG> set the font to be stricken out or not param strike - whether the font be stricken out or not <END>
<BEG> get whether the font be to be stricken out or not return strike - whether the font be stricken out or not see # getfontoption org apache poi util bitfield <END>
<BEG> set the font weight to bold weight=700 or to normal weight=400 boldness <END>
<BEG> get the type of super or subscript for the font return super or subscript option see org apache poi hssf usermodel hssffontformatting # ss_none see org apache poi hssf usermodel hssffontformatting # ss_super see org apache poi hssf usermodel hssffontformatting # ss_sub <END>
<BEG> set the escapement type for the font param escapementtype super or subscript option see org apache poi hssf usermodel hssffontformatting # ss_none see org apache poi hssf usermodel hssffontformatting # ss_super see org apache poi hssf usermodel hssffontformatting # ss_sub <END>
<BEG> get the type of underline for the font return font underlining type see org apache poi hssf usermodel hssffontformatting # u_none see org apache poi hssf usermodel hssffontformatting # u_single see org apache poi hssf usermodel hssffontformatting # u_double see org apache poi hssf usermodel hssffontformatting # u_single_accounting see org apache poi hssf usermodel hssffontformatting # u_double_accounting <END>
<BEG> set the type of underline type for the font param underlinetype underline option see org apache poi hssf usermodel hssffontformatting # u_none see org apache poi hssf usermodel hssffontformatting # u_single see org apache poi hssf usermodel hssffontformatting # u_double see org apache poi hssf usermodel hssffontformatting # u_single_accounting see org apache poi hssf usermodel hssffontformatting # u_double_accounting <END>
<BEG> set fill pattern see # no_fill see # solid_foreground see # fine_dots see # alt_bars see # sparse_dots see # thick_horz_bands see # thick_vert_bands see # thick_backward_diag see # thick_forward_diag see # big_spots see # bricks see # thin_horz_bands see # thin_vert_bands see # thin_backward_diag see # thin_forward_diag see # squares see # diamonds param fp fill pattern <END>
<BEG> return fill pattern <END>
<BEG> set the background fill color <END>
<BEG> see org apache poi hssf usermodel hssfpalette # getcolor short return get the background fill color <END>
<BEG> set cell range list to a single cell range and modify the enclosing cell range accordingly <END>
<BEG> creates a new comparison operation rule param sheet the sheet param formulatext the first formula text return a new comparison operation rule <END>
<BEG> creates a new data bar formatting param sheet the sheet param color the data bar color return a new data bar formatting <END>
<BEG> creates a new icon set multi-state format param sheet the sheet param iconset the icon set return a new icon set multi-state formatting <END>
<BEG> creates a new color scale color gradient format param sheet the sheet return a new color scale color gradient formatting <END>
<BEG> get the stack of the scale expression a a list return list of token cast stack to a list and return it ! <END>
<BEG> get the option flag return bit mask <END>
<BEG> creates a new comparison operation rule param sheet the sheet param formulatext the formula text return a new comparison operation rule <END>
<BEG> call by the class that be responsible for write this sucker <END>
<BEG> get the foreground color field for the areaformat record <END>
<BEG> automatic format return the automatic field value <END>
<BEG> swap foreground and background colour when data be negative return the invert field value <END>
<BEG> set the format flags field for the area record <END>
<BEG> series be stack return the stacked field value <END>
<BEG> sets the display a percentage field value <END>
<BEG> result display a percentage return the display a percentage field value <END>
<BEG> display a shadow for the chart return the shadow field value <END>
<BEG> sets the default minimum field value <END>
<BEG> use the default minimum category return the default minimum field value <END>
<BEG> sets the default minor unit field value <END>
<BEG> this be a date axis return the isdate field value <END>
<BEG> use default date setttings for this axis return the default date setting field value <END>
<BEG> true to display horizontal bar chart <SEG> false for vertical return the horizontal field value <END>
<BEG> display chart value a a percentage return the display a percentage field value <END>
<BEG> get the tick mark frequency field for the categoryseriesaxis record <END>
<BEG> sets the value axis cross field value <END>
<BEG> set true to indicate axis cross between category and false to cross axis midway return the value axis cross field value <END>
<BEG> sets the cross far right field value <END>
<BEG> axis cross at the far right return the cross far right field value <END>
<BEG> category be display in reverse order return the reversed field value <END>
<BEG> sets the use excel 4 color field value <END>
<BEG> set true to use excel 4 color <END>
<BEG> have a horizontal border return the horizontal border field value <END>
<BEG> have vertical border return the vertical border field value <END>
<BEG> data table have a border return the border field value <END>
<BEG> sets the show series key field value <END>
<BEG> show the series key return the show series key field value <END>
<BEG> get the x axis upper leave field for the legend record <END>
<BEG> automatic position 1=docked return the auto position field value <END>
<BEG> excel 5 only true return the auto series field value <END>
<BEG> sets the auto x position field value <END>
<BEG> vertical or horizontal legend 1 or 0 respectively <END>
<BEG> 1 if chart contain data table return the data table field value <END>
<BEG> get the index number fmt record field for the linkeddata record <END>
<BEG> get the formula of link field for the linkeddata record <END>
<BEG> sets the custom number format field value <END>
<BEG> get the chart group index field for the serieschartgroupindex record <END>
<BEG> show value a percentage of total pie chart only return the show percent field value <END>
<BEG> show smooth line return the smoothed line field value <END>
<BEG> display category label return the show label field value <END>
<BEG> ? ? <END>
<BEG> set the bubble series type field for the series record <END>
<BEG> sets the chart type manually format field value <END>
<BEG> has the chart type be manually format ? <END>
<BEG> only show visible cell on the chart <END>
<BEG> sets the do not size with window field value <END>
<BEG> do not size the chart when the window change size return the do not size with window field value <END>
<BEG> indicates that the default area dimension should be use <END>
<BEG> get the label color rgb field for the tick record <END>
<BEG> use the quote unquote automatic color for text return the auto text color field value <END>
<BEG> use the quote unquote automatic color for text background return the auto text background field value <END>
<BEG> rotate text 0=none <SEG> 1=normal <SEG> 2=90 degree counterclockwise <SEG> 3=90 degree clockwise return the rotation field value <END>
<BEG> automatically rotate the text return the autorotate field value <END>
<BEG> set the minimum axis value field for the valuerange record <END>
<BEG> automatic minimum value select return the automatic minimum field value <END>
<BEG> category cross point be automatically select return the automatic category cross field value <END>
<BEG> use logarithmic scale return the logarithmic scale field value <END>
<BEG> value be revers in graph return the value in reverse field value <END>
<BEG> sets the cross category axis at maximum field value <END>
<BEG> category axis to cross at maximum value return the cross category axis at maximum field value <END>
<BEG> reserve <SEG> must equal 1 excel dev <END>
<BEG> return palette color index <SEG> if type be { link # type_indexed } <END>
<BEG> return red green blue alpha <SEG> if type be { link # type_rgb } <END>
<BEG> return theme color type index <SEG> eg { link # theme_dark_1 } <SEG> if type be { link # type_themed } <END>
<BEG> return tint and shade value <SEG> between -1 and +1 <END>
<BEG> param tint tint and shade value <SEG> between -1 and +1 <END>
<BEG> returns our size <SEG> exclude our 4 byte header <END>
<BEG> object appear when printed return the printable field value <END>
<BEG> whether object use an automatic fill style return the autofill field value <END>
<BEG> return the total length of the encoded record s note - if any { link continuerecord } be require <SEG> this result include the size of those too <END>
<BEG> terminates the current record and start a new { link continuerecord } regardless of how much space be still available in the current record <END>
<BEG> will terminate the current record and start a new { link continuerecord } if there be n't space for the requested number of byte param requiredcontinuoussize the number of byte that need to be write <END>
<BEG> writes the 'optionflags ' byte and encode character data of a unicode string <END>
<BEG> writes a unicode string complete with header and character data <END>
<BEG> include 4 byte header <END>
<BEG> finishes write the current record and update 'ushort size ' field < br > after this method be call <SEG> only { link # gettotalsize } may be call <END>
<BEG> return raw path byte array <END>
<BEG> return the link 's path <SEG> with the special character strip replace <END>
<BEG> checks if the data source in this reference record be external to this sheet or internal <END>
<BEG> process the byte into escher record <END>
<BEG> cloning of draw record must be execute through hssfpatriarch <SEG> because all id 's must be change return clone drawing record <END>
<BEG> param option the option of the dialog <END>
<BEG> param horiz_pos the horizontal position of the dialog <END>
<BEG> set the object id of the drop down arrow object for list box param cboid - object id <END>
<BEG> return the horizontal position of the dialog <END>
<BEG> return the object id of the drop down arrow object for list box <END>
<BEG> return the condition data type see org apache poi s usermodel datavalidationconstraint validationtype <END>
<BEG> return < code > true < code > if in list validation the string list be explicitly give in the formula <SEG> < code > false < code > otherwise <END>
<BEG> return < code > true < code > if empty value be allow in cell <SEG> < code > false < code > otherwise <END>
<BEG> return < code > true < code > if drop down arrow should be suppress when list validation be use <SEG> < code > false < code > otherwise <END>
<BEG> return < code > true < code > if a prompt window should appear when cell be select <SEG> < code > false < code > otherwise <END>
<BEG> return < code > true < code > if an error window should appear when an invalid value be enter in the cell <SEG> < code > false < code > otherwise <END>
<BEG> clones all the style information from another extendedformatrecord <SEG> onto this one <END>
<BEG> will consider two different record with the same content a equal <SEG> a the various index that matter be embed in the record <END>
<BEG> return { code true } if the name be a built-in name <END>
<BEG> for ole and dde <SEG> link can be either 'automatic ' or 'manual ' return { code true } if this be a automatic link <END>
<BEG> only for ole and dde return { code true } if this be a picture link <END>
<BEG> dde link only <END>
<BEG> return the standard string representation of this name <END>
<BEG> if this be a local name <SEG> then this be the 1 base index of the name of the sheet this refers to <SEG> a define in the precede { link supbookrecord } <END>
<BEG> return the number of ref records <SEG> which be in model return number of ref record <END>
<BEG> param refindex specify the n-th refindex return the index of the supbookrecord for this index <END>
<BEG> param extbookindex external sheet reference index return -1 if not find <END>
<BEG> returns the first sheet that the reference applies to <SEG> or -1 if the referenced sheet ca n't be find <SEG> or -2 if the reference be workbook scoped <END>
<BEG> add a zero-based reference to a { link org apache poi hssf record supbookrecord } <END>
<BEG> given a number of string in the sst <SEG> return the size of the extsst record param numstrings the number of string return the size of the extsst record <END>
<BEG> set the readonly flag param readonly 1 for true <SEG> not 1 for false <END>
<BEG> get the readonly return short represent if this be read only 1 = true <END>
<BEG> param password hash password <END>
<BEG> return password hash with hashpassword very lame <END>
<BEG> set the height of the font in 1 20th point unit param height fontheight in point 20 <END>
<BEG> set the font attribute see individual bit setter that reference this method param attribute the bitmask to set <END>
<BEG> set the font to be stricken out or not param strike - whether the font be stricken out or not see # setattributes short <END>
<BEG> set the font 's color palette index param cpi - font color index <END>
<BEG> set the bold weight for this font 100-1000dec or 0x64-0x3e8 <END>
<BEG> set the type of super or subscript for the font param ss super or subscript option see # ss_none see # ss_super see # ss_sub <END>
<BEG> set the type of underline for the font param u super or subscript option see # u_none see # u_single see # u_double see # u_single_accounting see # u_double_accounting <END>
<BEG> set the character set param charset - character set <END>
<BEG> set the name of the font param fn - name of the font i e <END>
<BEG> get the font attribute see individual bit getters that reference this method return attribute - the bitmask <END>
<BEG> get whether the font be to be stricken out or not return strike - whether the font be stricken out or not see # getattributes <END>
<BEG> whether to use the mac outline font style thing mac only - some mac person should comment this instead of me do it since i have no idea return mac - whether to do that mac font outline thing or not see # getattributes <END>
<BEG> get the type of super or subscript for the font return super or subscript option see # ss_none see # ss_super see # ss_sub <END>
<BEG> get the font family todo return family <END>
<BEG> clones all the font style information from another fontrecord <SEG> onto this one <END>
<BEG> does this fontrecord have all the same font property a the supplied fontrecord ? <END>
<BEG> set the calculated value of the formula param value calculate value <END>
<BEG> return < code > true < code > if this { link formularecord } be follow by a { link stringrecord } represent the cache text result of the formula evaluation <END>
<BEG> set the option flag param option bitmask <END>
<BEG> get the calculated value of the formula return calculate value <END>
<BEG> get the option flag return bitmask <END>
<BEG> return the formula token <END>
<BEG> convert this record to string <END>
<BEG> use one of the bitmasks manual_advance_bit cursor_visible_bit param bitmask the bitmask to apply param enable if true <SEG> the bitmask will be or-ed <SEG> otherwise the bit set in the mask will be remove from the flag <END>
<BEG> get whether the gridlines be show during printing <END>
<BEG> set whether or not to horizonatally center this sheet <END>
<BEG> set the footer string param text string to display <END>
<BEG> spit the record out as is <END>
<BEG> if this header belong to a specific sheet view <SEG> the sheet view ? s guid will be save here <END>
<BEG> return whether this record belong to the current sheet <END>
<BEG> return 16-byte guid identifier seems to always equal { link org apache poi hpsf classidpredefined # std_moniker } <END>
<BEG> return 16-byte moniker <END>
<BEG> sets text label for this hyperlink param label text label for this hyperlink <END>
<BEG> return options for a file link <END>
<BEG> based on the link option <SEG> be this a url ? <END>
<BEG> initialize a new url link <END>
<BEG> set whether or not to iterate for calculation param iterate or not <END>
<BEG> get whether or not to iterate for calculation return whether iterative calculation be turn off or on <END>
<BEG> get the number of character this string contain return number of character <END>
<BEG> be this uncompressed unicode 16bit ? <END>
<BEG> get the value return the text string see # getstringlength <END>
<BEG> throws a runtime exception use labelsstrecords <END>
<BEG> set the index to the string in the sstrecord param index - of string in the sst table see org apache poi hssf record sstrecord <END>
<BEG> get the index to the string in the sstrecord return index of string in the sst table see org apache poi hssf record sstrecord <END>
<BEG> return the row number of the cell this represent <END>
<BEG> get the number of column this contain last-first +1 return number of column last - first +1 <END>
<BEG> return the xf index for column coffset = column - field_2_first_col param coffset the column coffset = column - field_2_first_col return the xf index for the column <END>
<BEG> start column first cell this hold in the row return first column number <END>
<BEG> return the xf index for column coffset = column - field_2_first_col param coffset the coffset = column - field_2_first_col return the xf index for the column <END>
<BEG> updates the name we 're associate with <SEG> normally use when rename that name param newname the new name <END>
<BEG> options flag <END>
<BEG> options flag param flag the option flag see # note_visible see # note_hidden <END>
<BEG> object id for obj record that contain the comment return the object id for obj record that contain the comment <END>
<BEG> object id for obj record that contain the comment param id the object id for obj record that contain the comment <END>
<BEG> name of the original comment author return the name of the original author of the comment <END>
<BEG> set the value for the cell param value double represent the value <END>
<BEG> get the index to the extendedformat <SEG> for non-biff2 see org apache poi hssf record extendedformatrecord return index to the xf record <END>
<BEG> is this a biff2 record <SEG> or new ? <END>
<BEG> get the string of the cell return the string of the cell <END>
<BEG> colornum = append i append '\n ' ; } buffer append [ palette ] \n ; return buffer tostring ; } override public void serialize littleendianoutput out { out writeshort _colors size ; for pcolor color : _colors { color serialize out ; } } override protect int getdatasize { return 2 + _colors size pcolor encoded_size ; } override public short getsid { return sid ; } returns the color value at a give index param byteindex palette index <SEG> must be & gt ; = 0x8 return the rgb triplet for the color <SEG> or < code > null < code > if the specify index do not exist <END>
<BEG> sets the color value at a give index if the give index be great than the current last color index <SEG> then black be insert at every index require to make the palette continuous <END>
<BEG> set the password param password represent the password <END>
<BEG> clone this record <END>
<BEG> set whether to use full precision or just skew all you figure all to hell <END>
<BEG> get whether or not to print the gridlines and make your spreadsheet ugly return make spreadsheet ugly - y n <END>
<BEG> set whether the this be protect shared tracked workbook or not param protect whether to protect the workbook or not <END>
<BEG> get whether the this be protect shared tracked workbook or not return whether to protect the workbook or not <END>
<BEG> get whether the sheet be protect or not return whether to protect the sheet or not <END>
<BEG> return the next complete record from the stream <SEG> or null if there be no more <END>
<BEG> return the number of byte available in the current biff record see # remain <END>
<BEG> note - this method be expect to be call only when complete read the current biff record <END>
<BEG> moves to the next record in the stream <END>
<BEG> reads an 8 bit <SEG> sign value <END>
<BEG> give a byte array of 16-bit unicode character <SEG> compress to 8-bit and return a string { 0x16 <SEG> 0x00 } -0x16 param requestedlength the length of the final string return the converted string exception illegalargumentexception if len be too large i e <SEG> there be not enough data in string to create a string of that length <END>
<BEG> the remain number of byte in the < i > current < i > record <END>
<BEG> return sid of next record <END>
<BEG> set whether to refresh all external data when load a sheet param refreshall or not <END>
<BEG> updates the firstcol and lastcol field to the reserve value -1 to signify that this row be empty <END>
<BEG> set the logical row number for this row 0 base index param row - the row number <END>
<BEG> set the logical col number for the first cell this row 0 base index param col - the col number <END>
<BEG> param col - one past the zero-based index to the last cell in this row <END>
<BEG> set the height of the row param height of the row <END>
<BEG> set whether to optimize or not set to 0 param optimize set to 0 <END>
<BEG> set the outline level of this row param ol - the outline level <END>
<BEG> set whether or not to display this row with 0 height param z height be zero or not <END>
<BEG> set whether the font and row height be not compatible param f true if they be n't compatible damn not logic <END>
<BEG> bit that specify whether any cell in the row have a thick top border <SEG> or any cell in the row directly above the current row have a thick bottom border <END>
<BEG> a bit that specify whether any cell in the row have a medium or thick bottom border <SEG> or any cell in the row directly below the current row have a medium or thick top border <END>
<BEG> a bit that specify whether the phonetic guide feature be enable for any cell in this row <END>
<BEG> get the logical col number for the last cell this row 0 base index <SEG> plus one return col - the last col index + 1 <END>
<BEG> get the option bitmask <END>
<BEG> get the outline level of this row return ol - the outline level see # getoptionflags <END>
<BEG> get whether or not to colapse this row return c - colapse or not see # getoptionflags <END>
<BEG> get whether or not to display this row with 0 height return - z height be zero or not <END>
<BEG> get whether the font and row height be not compatible return - f -true if they be n't compatible damn not logic see # getoptionflags <END>
<BEG> get whether the row have be format even if it get all blank cell return format or not see # getoptionflags <END>
<BEG> get the 2nd option bitmask <END>
<BEG> a bit that specify whether any cell in the row have a thick top border <SEG> or any cell in the row directly above the current row have a thick bottom border <END>
<BEG> set whether to recalculate formula etc before save or not param recalc - whether to recalculate or not <END>
<BEG> convert formula into an array of { link ptg } token <END>
<BEG> param rowix the row index param colix the column index return { code true } if rowix <SEG> colix be within the range of this share value object <END>
<BEG> param rowix the row index param colix the column index return { code true } if rowix <SEG> colix describe the first cell in this share value object 's range see # getrange <END>
<BEG> this be the start point where string be construct <END>
<BEG> write the data content of this biff record include the sid and record length <END>
<BEG> set the actual index of the style extend format record param xfindex of the xf record <END>
<BEG> get the actual index of the style extend format record see # getxfindex return index of the xf record <END>
<BEG> if this be a builtin style set the number of the build in style param builtinstyleid style number 0-7 <END>
<BEG> set the row or column level of the style if builtin 1||2 param level the outline-level <END>
<BEG> set the tab array <END>
<BEG> return the text lock field value <END>
<BEG> sets the first visible sheet in the worksheet tab-bar <END>
<BEG> return the index of the currently display sheet <END>
<BEG> set whether this window should be protect or not param protect or not <END>
<BEG> be this window protect or not return protect or not <END>
<BEG> set whether the window should display formulas param formula or not <END>
<BEG> set whether the window should display row and column heading param heading or not <END>
<BEG> set whether the window should freeze pane param freezepanes freeze pane or not <END>
<BEG> set whether the window should display a default header param header or not <END>
<BEG> be this arabic ? <END>
<BEG> set whether the outline symbol be displaed param gut symbol or not <END>
<BEG> freeze unsplit pane or not param freeze or not <END>
<BEG> be the sheet currently display in the window param p display or not <END>
<BEG> be the sheet save in page break view param p pagebreaksaved or not <END>
<BEG> set the top row visible in the window param toprow top row visible <END>
<BEG> set the leftmost column display in the window param leftcol leftmost column <END>
<BEG> zoom magnification in page break view param zoom the zoom-level to use for the page-break view <END>
<BEG> get whether the window should display gridlines return gridlines or not <END>
<BEG> get whether the window should freeze pane return freeze pane or not <END>
<BEG> get whether the outline symbol be displaed return symbol or not <END>
<BEG> be the sheet save in page break view return pagebreaksaved or not <END>
<BEG> get the leftmost column display in the window return leftmost <END>
<BEG> get the palette index for the header color return color <END>
<BEG> zoom magification in page break view return zoom <END>
<BEG> get the zoom magnification in normal view return zoom <END>
<BEG> get the reserve bit - why would you do this ? <END>
<BEG> set the username for the user that create the report <END>
<BEG> set first byte see bit setter param bool1 set boolean 1 of this record <END>
<BEG> show automatic page break or not param ab whether to show auto page break <END>
<BEG> set whether sheet be a dialog sheet or not param isdialog or not <END>
<BEG> fit to page option be on param fit2page fit or not <END>
<BEG> set whether to display the gut or not param gut or no gut or glory <END>
<BEG> whether alternate expression evaluation be on param altexp alternative expression evaluation or not <END>
<BEG> whether alternative formula entry be on param formula alternative formula or not <END>
<BEG> get first byte see bit getters return boolean 1 of this record <END>
<BEG> show automatic page break or not return whether to show auto page break <END>
<BEG> get the second byte see bit getters return boolean 1 of this record <END>
<BEG> fit to page option be on return fit or not <END>
<BEG> whether alternate expression evaluation be on return alternative expression evaluation or not <END>
<BEG> whether alternative formula entry be on return alternative formula or not <END>
<BEG> retrieves the width of the specified character <END>
<BEG> create an instance of < code > fontdetails < code > by load them from the provide property object <END>
<BEG> gets the width of all character in a string <END>
<BEG> param newleft the string to set a the left side <END>
<BEG> param newcenter the string to set a the center <END>
<BEG> param size the new font size return the mark-up tag represent a new font size <END>
<BEG> return the mark-up tag represent the current page number <END>
<BEG> return the mark-up tag represent current time <END>
<BEG> return the mark-up tag represent the current tab sheet name <END>
<BEG> return the mark-up tag for start bold <END>
<BEG> return the mark-up tag for start double underline <END>
<BEG> not available for hssf <END>
<BEG> get the index within the hssfworkbook sequence within the collection of extnededformat object return unique index number of the underlying record this style represent probably you do n't care unless you 're compare which one be which <END>
<BEG> return the parent style for this cell style <END>
<BEG> get the content of the format string <SEG> by look up the dataformat against the bound workbook see org apache poi hssf usermodel hssfdataformat return the format string or general if not find <END>
<BEG> get the content of the format string <SEG> by look up the dataformat against the supplied low level workbook see org apache poi hssf usermodel hssfdataformat <END>
<BEG> is quote prefix or 123 prefix enable for the cell ? <END>
<BEG> verifies that this style belong to the supply workbook <END>
<BEG> returns the chart 's title <SEG> if there be one <SEG> or null if not <END>
<BEG> changes the chart 's title <SEG> but only if there be one already <END>
<BEG> set value range basic axis options param axisindex 0 - primary axis <SEG> 1 - secondary axis param minimum minimum value ; double nan - automatic ; null - no change param maximum maximum value ; double nan - automatic ; null - no change param majorunit major unit value ; double nan - automatic ; null - no change param minorunit minor unit value ; double nan - automatic ; null - no change <END>
<BEG> param dx1 x coordinate of the leave up corner param dy1 y coordinate of the leave up corner param dx2 x coordinate of the right down corner param dy2 y coordinate of the right down corner <END>
<BEG> calculates the height of a client anchor in point <END>
<BEG> param col1 the column 0 base of the first cell <END>
<BEG> param row1 0-based row of the first cell <END>
<BEG> sets the top-left and bottom-right coordinate of the anchor <END>
<BEG> gets the anchor type changed from return an int to an enum in poi 3 14 beta 1 <END>
<BEG> sets the anchor type param anchortype the anchor type to set since poi 3 14 <END>
<BEG> do we know which cell this comment belong to ? <END>
<BEG> return array of < tt > cellrangeaddress < tt > s <END>
<BEG> creates a hssfformulaevaluator <SEG> the object that evaluate formula cell <END>
<BEG> get the format string that match the give format index param index of a format return string represent at index of format or null if there be not a format at that index <END>
<BEG> get the number of built-in and reserved builtinformats return number of built-in and reserve builtinformats <END>
<BEG> non-javadoc see org apache poi hssf usermodel datavalidation # getconstraint <END>
<BEG> non-javadoc see org apache poi hssf usermodel datavalidation # seterrorstyle int <END>
<BEG> non-javadoc see org apache poi hssf usermodel datavalidation # createpromptbox java lang string <SEG> java lang string <END>
<BEG> non-javadoc see org apache poi s usermodel datavalidationhelper # createnumericconstraint int <SEG> java lang string <SEG> java lang string <END>
<BEG> non-javadoc see org apache poi s formula evaluationsheet # isrowhidden int since poi 4 1 0 <END>
<BEG> non-javadoc <SEG> inherit javadoc from evaluationsheet since poi 3 15 beta 3 <END>
<BEG> lookup a name range by it name <END>
<BEG> throw illegalstateexception : data table be not support in excel 97-2003 format <END>
<BEG> get the color for the font return color to use see # color_normal see # color_red see org apache poi hssf usermodel hssfpalette # getcolor short <END>
<BEG> get if the font be bold or not <END>
<BEG> get character-set to use <END>
<BEG> returns a cellvalue wrapper around the supplied valueeval instance <END>
<BEG> get the sheet name which this name range be reference to return sheet name <SEG> which this name range refer to <END>
<BEG> specifies if the define name be a local name <SEG> and if so <SEG> which sheet it be on <END>
<BEG> returns the sheet index this name apply to <END>
<BEG> returns the comment the user provide when the name be create <END>
<BEG> finds the embeddedobjectrefsubrecord <SEG> or throw an exception if there be n't one <END>
<BEG> finds the first occurrence of a give color param red the rgb red component <SEG> between 0 and 255 inclusive param green the rgb green component <SEG> between 0 and 255 inclusive param blue the rgb blue component <SEG> between 0 and 255 inclusive return the color <SEG> or null if the color do not exist in this palette <END>
<BEG> sets the color at the give offset param index the palette index <SEG> between 0x8 to 0x40 inclusive param red the rgb red component <SEG> between 0 and 255 inclusive param green the rgb green component <SEG> between 0 and 255 inclusive param blue the rgb blue component <SEG> between 0 and 255 inclusive <END>
<BEG> adds a new color into an empty color slot <END>
<BEG> resize the image < p > please note <SEG> that this method work correctly only for workbook with default font size arial 10pt for xl <END>
<BEG> calculate the preferred size for this picture <END>
<BEG> return the dimension of the embedded image in pixel return image dimension in pixel <END>
<BEG> return picture data for this shape return picture data for this shape or { code null } if picture be n't embed <SEG> i e <END>
<BEG> the filename of the embedded image <END>
<BEG> generates the shape record for this shape <END>
<BEG> creates the low level obj record for this shape <END>
<BEG> defines the width and height of the point in the polygon param width param height <END>
<BEG> return shape width <END>
<BEG> removes any formatting that may have be apply to the string <END>
<BEG> used internally by the hssfcell to get the internal string value <END>
<BEG> returns the font in use at a particular index <END>
<BEG> return the number of format run use <END>
<BEG> the index within the string to which the specify formatting run applies <END>
<BEG> gets the font use in a particular formatting run <END>
<BEG> param shapeid - global shapeid which must be set to eschersprecord <END>
<BEG> return the low-level escheroptrecord to read modify not yet wrap escher property return the low-level escheroptrecord <END>
<BEG> the color apply to the line of this shape <END>
<BEG> the color use to fill this shape <END>
<BEG> return return with width of the line in emus <END>
<BEG> return one of the constant in linestyle_ <END>
<BEG> param value specify whether this shape be vertically flipped <END>
<BEG> return whether this shape be vertically flipped <END>
<BEG> return the rotation <SEG> in degree <SEG> that be apply to a shape <END>
<BEG> count of all child and their child 's child <END>
<BEG> a factory method allow to create a conditional formatting rule with a formula < br > the formatting rule be apply by excel when the value of the formula not equal to 0 < p > todo - formula contain cell reference be currently not parse properly param formula - formula for the value <SEG> compare with the cell <END>
<BEG> create a databar conditional formatting rule <END>
<BEG> adds a copy of hssfconditionalformatting object to the sheet < p > this method could be use to copy hssfconditionalformatting object from one sheet to another <END>
<BEG> return number of conditional formatting object of the sheet <END>
<BEG> remove a conditional formatting object by index param index of a conditional formatting object to remove <END>
<BEG> return the rich text string for this textbox <END>
<BEG> param string sets the rich text string use by this object <END>
<BEG> see hssfshapetypes param value - shapetype <END>
<BEG> return returns the left margin within the textbox <END>
<BEG> sets the left margin within the textbox <END>
<BEG> sets the vertical alignment <END>
<BEG> this function return all the colour in an unmodifiable map <END>
<BEG> this function return all color in a hastable <END>
<BEG> return alternative color standard palette index return alternative index to the standard palette <SEG> if -1 this index be not define <END>
<BEG> return rgb triplet 0 <SEG> 0 <SEG> 0 return triplet representation like that in excel <END>
<BEG> return colon-delimited hex string 0:0:0 return a hex string exactly like a gnumeric triplet <END>
<BEG> concatenates an array onto the end of our array <END>
<BEG> gets the concatenated content a a single byte array <END>
<BEG> do the dirty work of decode ; make a private static method to facilitate test the algorithm <END>
<BEG> returns the value that get write into the header <END>
<BEG> display the entry of multiple poifs file param args the name of the file to be display <END>
<BEG> read from an inputstream and process the document we get param stream the inputstream from which to read the data exception ioexception on error read <SEG> or on invalid data <END>
<BEG> read from a { link poifsfilesystem } and process the document we get param poifs the poifsfilesystem from which to read the data exception ioexception on error read <SEG> or on invalid data <END>
<BEG> register a poifsreaderlistener for all document param listener the listener to be register exception nullpointerexception if listener be null exception illegalstateexception if read have already be call <END>
<BEG> read in file param args name of the file exception ioexception if the file ca n't be read or have invalid content <END>
<BEG> return the filesystem that this belong to <END>
<BEG> change a contained entry 's name param oldname the original name param newname the new name return true if the operation succeed <SEG> else false <END>
<BEG> get the name of all the entries contain directly in this instance in other word <SEG> name of child only ; no grandchild etc <END>
<BEG> get a specified entry by name param name the name of the entry to obtain <END>
<BEG> get an iterator of object <SEG> some of which may implement poifsviewable return an iterator ; may not be null <SEG> but may have an empty back end store <END>
<BEG> returns an iterator over all the entry <END>
<BEG> get the poifsdocument return the internal poifsdocument <END>
<BEG> copies node from one poifs to the other <SEG> minus the excepts <END>
<BEG> checks to see if the two directories hold the same content <END>
<BEG> get the file magic of the supply inputstream which must support mark and reset < p > if unsure if your inputstream do support mark reset <SEG> use { link # preparetocheckmagic inputstream } to wrap it and make sure to always use that <SEG> and not the original ! < p > even if this method return { link filemagic # unknown } it could potentially mean <SEG> that the zip stream have lead junk byte param inp an inputstream which support either mark reset <END>
<BEG> checks if an { link inputstream } can be reset i e <END>
<BEG> get an array of object <SEG> some of which may implement poifsviewable return an array of object ; may not be null <SEG> but may be empty <END>
<BEG> give viewer a hint a to whether to call getviewablearray or getviewableiterator return < code > true < code > if a viewer should call getviewablearray <SEG> < code > false < code > if a viewer should call getviewableiterator <END>
<BEG> provides a short description of the object <SEG> to be use when a poifsviewable object have not provide it content <END>
<BEG> returns the batblock that handle the specified offset <SEG> and the relative index within it <END>
<BEG> works out what block follow the specified one <END>
<BEG> changes the record of what block follow the specified one <END>
<BEG> returns an iterator that 'll supply one { link bytebuffer } per block in the stream <END>
<BEG> updates the content of the stream to the new set of byte <END>
<BEG> this tool extract out the source of all vba modules of an office file <SEG> both ooxml eg xlsm and ole2 poifs eg doc <SEG> to stdout or a directory <END>
<BEG> reads all macro from all module of the opened office file <END>
<BEG> delete a property param property the property be deleted return true if the property could be delete <SEG> else false <END>
<BEG> return true if a directory type property <END>
<BEG> perform whatever activity need to be perform prior to write <END>
<BEG> get an iterator over the child of this parent ; all element be instance of property <END>
<BEG> set the poifsdocument param doc the associated poifsdocument <END>
<BEG> update the size of the property 's data <END>
<BEG> add a property to the list of property we manage param property the new property to manage <END>
<BEG> remove a property from the list of property we manage param property the property to be remove <END>
<BEG> set the start block for this instance param index index into the array of bigblock instance make up the the filesystem <END>
<BEG> writes the property out into the give low-level stream <END>
<BEG> set size param size size in term of small block <END>
<BEG> returns the fixed name root entry <SEG> a the raw property do n't have a real name set <END>
<BEG> does this batblock have any free sector in it <SEG> or be it full ? <END>
<BEG> how many sector in this block be take ? <END>
<BEG> record where in the file we live <END>
<BEG> get start of property table return the index of the first block of the property table <END>
<BEG> set start of property table param startblock the index of the first block of the property table <END>
<BEG> set count of sbat block param count the number of sbat block <END>
<BEG> sets the number of bat block that be use <END>
<BEG> sets the number of xbat difat block use <END>
<BEG> sets the first xbat difat block location <END>
<BEG> return the big block size <SEG> normally 512 byte <SEG> sometimes 4096 byte <END>
<BEG> write the block 's data to an outputstream param stream the outputstream to which the store data should be write exception ioexception on problem write to the specify stream <END>
<BEG> note - writing be not yet support for this file format <SEG> sorry <END>
<BEG> embedded audio file relationship id return possible object be { link string } <END>
<BEG> set a custom draw factory for the current thread <END>
<BEG> convenience method for draw single shape <END>
<BEG> symbol font like wingdings or symbol have glyphs map to a unicode private use range via the java font loader <SEG> although a system font viewer might show you the glyph in the ascii range <END>
<BEG> checks if this { code sheet } display the specified shape <END>
<BEG> checks if this < code > sheet < code > display the specified shape <END>
<BEG> return full height of this text run which be sum of ascent <SEG> descent and lead <END>
<BEG> return the string to be paint <END>
<BEG> gets this graphic context 's current color <END>
<BEG> sets this graphic context 's current color to the specify color <END>
<BEG> returns the current < code > stroke < code > in the < code > graphics2d < code > context <END>
<BEG> sets the < code > stroke < code > for the < code > graphics2d < code > context <END>
<BEG> sets the < code > paint < code > attribute for the < code > graphics2d < code > context <END>
<BEG> strokes the outline of a < code > shape < code > use the setting of the current < code > graphics2d < code > context <END>
<BEG> renders the text specify by the specify < code > string < code > <SEG> use the current text attribute state in the < code > graphics2d < code > context <END>
<BEG> fills the interior of a < code > shape < code > use the setting of the < code > graphics2d < code > context <END>
<BEG> intersects the current < code > clip < code > with the interior of the specify < code > shape < code > and set the < code > clip < code > to the result intersection <END>
<BEG> fills an oval bound by the specify rectangle with the current color <END>
<BEG> draws the outline of a circular or elliptical arc cover the specify rectangle <END>
<BEG> draws the outline of an oval <END>
<BEG> disposes of this graphic context and release any system resource that it be use <END>
<BEG> fills the specify rectangle <END>
<BEG> draws the outline of the specify rectangle <END>
<BEG> returns the bound rectangle of the current clipping area <END>
<BEG> clears the specify rectangle by fill it with the background color of the current drawing surface <END>
<BEG> composes an < code > affinetransform < code > object with the < code > transform < code > in this < code > graphics2d < code > accord to the rule last-specified-first-applied <END>
<BEG> sets the background color for the < code > graphics2d < code > context <END>
<BEG> returns the value of a single preference for the rendering algorithm <END>
<BEG> renders the text of the specify { link glyphvector } use the < code > graphics2d < code > context 's rendering attribute <END>
<BEG> returns the device configuration associate with this < code > graphics2d < code > <END>
<BEG> sets the value of an arbitrary number of preference for the rendering algorithm <END>
<BEG> renders the text of the specified iterator <SEG> use the < code > graphics2d < code > context 's current < code > paint < code > <END>
<BEG> gets the preference for the rendering algorithm <END>
<BEG> replaces the value of all preference for the render algorithm with the specify < code > hint < code > <END>
<BEG> renders an image <SEG> apply a transform from image space into user space before draw <END>
<BEG> sets the paint mode of this graphic context to overwrite the destination with this graphic context 's current color <END>
<BEG> renders a { link renderableimage } <SEG> apply a transform from image space into user space before draw <END>
<BEG> returns a checksum value for the previous 10 short in the header <END>
<BEG> set top <SEG> leave <SEG> bottom <SEG> and right to the specify value param top the inset from the top <END>
<BEG> checks whether two inset object be equal <END>
<BEG> returns the hash code for this insets <END>
<BEG> returns a string representation of this < code > insets < code > object <END>
<BEG> reads the ole data a stream - the application specific stream be serve the { link # readobjectdataraw raw data } serve the outer wrap object <SEG> which be usually a { link poifsfilesystem } stream <SEG> whereas this method return the unwrapped entry return an { link inputstream } which serve the object data throw ioexception if the link object data could n't be find <END>
<BEG> convenience method to return the raw data a { code inputstream } return the raw data stream throw ioexception if the data could n't be retrieve <END>
<BEG> the string representation <SEG> which correspond to the internal xml enum value <END>
<BEG> return the embedded object byte array <END>
<BEG> sets the embedded object a byte array param embeddeddata the embedded object byte array <END>
<BEG> sets the shape which link to the embed object param shape the shape <END>
<BEG> return the content- mime-type of the embedded object <SEG> the default if unknown be { code binary octet-stream } <END>
<BEG> sets the content- mime-type param contenttype the content-type <END>
<BEG>  < p > for a date <SEG> this be < tt > mm d y < tt > <END>
<BEG> formats the value <SEG> return the result string <END>
<BEG> formats the value in the most basic way <SEG> return the result string <END>
<BEG> returns the input string <SEG> surround by quote <END>
<BEG> the general style be not quite the same a any other <SEG> or any combination of others <END>
<BEG> equivalent to { link # formatvalue stringbuffer <SEG> object } <END>
<BEG> create a fraction give a double value and a denominator <END>
<BEG> access the denominator <END>
<BEG> returns a collection of atp function name not implement by poi <END>
<BEG> register a atp function in runtime <END>
<BEG> evaluate a generic { link valueeval } argument to a double value that represent a date in poi <END>
<BEG> evaluate a generic { link valueeval } argument to an array of double value that represent date in poi <END>
<BEG> evaluate a generic { link valueeval } argument to a double value <END>
<BEG> calculate the workday past x workday from a starting date <SEG> consider a range of holiday <END>
<BEG> calculates how many day of week past between a start and an end date <END>
<BEG> calculates how many holiday in a list be workday <SEG> consider an interval of date <END>
<BEG> param adate a give date <END>
<BEG> calls formulacell setformularesult null <SEG> null recursively all the way up the tree of dependency <END>
<BEG> param inputcell a cell directly use by the formula of this evaluation frame <END>
<BEG> call this whenever rule be add <SEG> reorder <SEG> or remove <SEG> or a rule formula be change not the formula input but the formula expression itself <END>
<BEG> call this whenever cell value change in the workbook <SEG> so condional format be re-evaluated for all cell <END>
<BEG> lazy load by sheet since reading can be expensive param sheet the sheet to look at return unmodifiable list of rule <END>
<BEG> conditional formatting rule can apply only to cell in the sheet to which they be attach <END>
<BEG> retrieve all cell where the give formatting rule evaluate to true <END>
<BEG> call this whenever validation structure change <SEG> so future result stay in sync with the workbook state <END>
<BEG> finds and return the { link datavalidation } for the cell <SEG> if there be one <END>
<BEG> if { link # getvalidationforcell cellreference } return an instance <SEG> and the { link validationtype } be { link validationtype # list } <SEG> return the valid value <SEG> whether they be from a static list or cell range <END>
<BEG> static so enums can reference it without create a whole instance return return an unmodifiable { link list } of { link valueeval } s <SEG> which may be empty <END>
<BEG> note that this assume the cell cache value be up to date and in sync with data edits param cell the { link cell } to check <END>
<BEG> return whether cell at rowindex and columnindex be a subtotal <END>
<BEG> return false by default <SEG> mean all row be calculate see org apache poi s formula twodeval # isrowhidden int <END>
<BEG> converts error cod to text <END>
<BEG> < b > # value ! < b > - wrong type of operand <END>
<BEG> < b > # ref ! < b > - illegal or delete cell reference <END>
<BEG> applies some conversion rule if the supplied value be not already an integer < br > value be first coerce to a < tt > double < tt > see < tt > coercevaluetodouble < tt > <END>
<BEG> applies some conversion rule if the supplied value be not already a number <END>
<BEG> converts a string to a double use standard rule that excel would use < br > tolerates lead and trail space <SEG> < p > does n't support currency prefix <SEG> comma <SEG> percentage sign or arithmetic operation string <END>
<BEG> return < code > null < code > to represent blank value throw evaluationexception if ve be an erroreval <SEG> or if a string value can not be convert <END>
<BEG> should be call whenever there be change to input cell in the evaluated workbook <END>
<BEG> return conditional formatting index <END>
<BEG> return excel number format string to apply to match cell <SEG> or null to keep the cell default <END>
<BEG> return rule index <END>
<BEG> return condition text if any <SEG> or null <END>
<BEG> defined a equal sheet name and formatting and rule index see java lang object # equal java lang object <END>
<BEG> per excel help <SEG> xssf rule priority be sheet-wide <SEG> not just within the own conditionalformatting object <END>
<BEG> param ref return true if this rule evaluate to true for the give cell <END>
<BEG> notifies this evaluation tracker that evaluation of the specify cell be about to start < br > in the case of a < code > true < code > return code <SEG> the caller should continue evaluation of the specify cell <SEG> and also be sure to call < tt > endevaluate < tt > when complete < br > in the case of a < code > null < code > return code <SEG> the caller should return an evaluation result of < tt > erroreval circular_ref_error < tt > <SEG> and not call < tt > endevaluate < tt > <END>
<BEG> static method to convert an array of { link ptg } s in rpn order to a human readable string format in infix mode <END>
<BEG> param ptgs - if necessary <SEG> will get modify by this method param currentexternsheetix - the extern sheet index of the sheet that contain the formula be adjust return < code > true < code > if a change be make to the formula token <END>
<BEG> return true if this formula type only return single value <SEG> false if it can return multiple value array <SEG> range <SEG> etc <END>
<BEG> used to transition from < code > int < code > s possibly store in the excel file to < code > formulatype < code > s <END>
<BEG> some varags function like vlookup have a specific limit to the number of argument that can be pass <END>
<BEG> create an instance of count to use in { link subtotal } < p > if there be other subtotal within argument ref or nested subtotal <SEG> these nest subtotal be ignore to avoid double counting <END>
<BEG> http : support office com en-us article countifs-function-dda3dc6e-f74e-4aee-88bc-aa8c2a866842 ? ui=en-us & rs=en-us & ad=us countifs criteria_range1 <SEG> criteria1 <SEG> [ criteria_range2 <SEG> criteria2 ] need at least 2 argument and need to have an even number of argument criteria_range1 <SEG> criteria1 plus x criteria_range <SEG> criterion see org apache poi s formula function baseifs # hasinitialrange <END>
<BEG> return the number of evaluated cell in the range that match the specify criterion <END>
<BEG> emulates excel calc 's pmt interest_rate <SEG> number_payments <SEG> pv <SEG> fv <SEG> type function <SEG> which calculate the payment for a loan or the future value of an investment param r - periodic interest rate represent a a decimal <END>
<BEG> emulates excel calc 's ipmt interest_rate <SEG> period <SEG> number_payments <SEG> pv <SEG> fv <SEG> type function <SEG> which calculate the portion of the payment at a give period that be the interest on previous balance <END>
<BEG> emulates excel calc 's ppmt interest_rate <SEG> period <SEG> number_payments <SEG> pv <SEG> fv <SEG> type function <SEG> which calculate the portion of the payment at a give period that will apply to principal <END>
<BEG> emulates excel calc 's fv interest_rate <SEG> number_payments <SEG> payment <SEG> pv <SEG> type function <SEG> which calculate future value or principal at period n param r - periodic interest rate represent a a decimal <END>
<BEG> future value of an amount give the number of payment <SEG> rate <SEG> amount of individual payment <SEG> present value and boolean value indicate whether payment be due at the beginning of period false = > payment be due at end of period param r rate param n num of period param y pmt per period param p present value param t type true=pmt at begin of period <SEG> false=pmt at end of period <END>
<BEG> present value of an amount give the number of future payment <SEG> rate <SEG> amount of individual payment <SEG> future value and boolean value indicate whether payment be due at the beginning of period false = > payment be due at end of period param r rate param n num of period param y pmt per period param f future value param t type true=pmt at begin of period <SEG> false=pmt at end of period <END>
<BEG> calculate the net present value of a principal amount give the discount rate and a sequence of cash flow supply a an array <END>
<BEG> param r rate param n num of period param p present value param f future value param t type true=pmt at begin of period <SEG> false=pmt at end of period <END>
<BEG> convenience base class for function that only take zero argument <END>
<BEG> convenience base class for function that must take exactly one argument <END>
<BEG> calculates irr use the newton-raphson method <END>
<BEG> processes the third argument to vlookup <SEG> or hlookup < b > col_index_num < b > or < b > row_index_num < b > respectively < br > sample behaviour : < table border= 0 cellpadding= 1 cellspacing= 2 summary= sample behaviour > < tr > < th > input & nbsp ; & nbsp ; & nbsp ; return < th > < th > value & nbsp ; & nbsp ; < th > < th > thrown error < th > < tr > < tr > < td > 5 < td > < td > 4 < td > < td > & nbsp ; < td > < tr > < tr > < td > 2 9 < td > < td > 2 < td > < td > & nbsp ; < td > < tr > < tr > < td > 5 < td > < td > 4 < td > < td > & nbsp ; < td > < tr > < tr > < td > 2 18e1 < td > < td > 21 < td > < td > & nbsp ; < td > < tr > < tr > < td > - $ 2 < td > < td > -3 < td > < td > < td > < tr > < tr > < td > false < td > < td > -1 < td > < td > < td > < tr > < tr > < td > true < td > < td > 0 < td > < td > & nbsp ; < td > < tr > < tr > < td > true < td > < td > & nbsp ; < td > < td > # ref ! < td > < tr > < tr > < td > abc < td > < td > & nbsp ; < td > < td > # ref ! < td > < tr > < tr > < td > < td > < td > & nbsp ; < td > < td > # ref ! < td > < tr > < tr > < td > & lt ; blank & gt ; < td > < td > & nbsp ; < td > < td > # value ! < td > < tr > < table > < br > note - out of range error result index too high be handle by the caller <END>
<BEG> the second argument table_array should be an area ref <SEG> but can actually be a cell ref <SEG> in which case it be interpret a a 1x1 area ref <END>
<BEG> resolves the last optional parameter < b > range_lookup < b > to the vlookup and hlookup function <END>
<BEG> returns a value rounded-up to p digit after decimal <END>
<BEG> if d < 0 <SEG> return short -1 < br > if d > 0 <SEG> return short 1 < br > if d == 0 <SEG> return short 0 < p > if d be nan <SEG> then 1 will be return <END>
<BEG> average of all value param value <END>
<BEG> sum of square of all value param value <END>
<BEG> min of all value <END>
<BEG> note : this function be different from java lang math floor <END>
<BEG> < br > for all n > = 1 ; factorial n = n n-1 n-2 1 < br > else if n == 0 ; factorial n = 1 < br > else if n < 0 ; factorial n = double nan < br > loss of precision can occur if n be large enough <END>
<BEG> return the remainder result from operation : n d < br > the result have the sign of the divisor <END>
<BEG> inverse hyperbolic cosine param d <END>
<BEG> hyperbolic cosine param d <END>
<BEG> maximum number of operand accept by this function <END>
<BEG> returns a double array that contain value for the numeric cell from among the list of operand <END>
<BEG> whether to count nested subtotal <END>
<BEG> return true if value in hidden row be count see subtotal <END>
<BEG> use conversion rule to factor some part and make them more concise param result param form <END>
<BEG> return the mean of deviation from mean <END>
<BEG> return the kth large element in the array <END>
<BEG> implementation of excel today function < br > <END>
<BEG> perform weekday date <SEG> returnoption function <END>
<BEG> collects the array of < tt > ptg < tt > token for the specify tree <END>
<BEG> external function get some special processing return < code > true < code > if this be an external function <END>
<BEG> used to detect whether a function name find in a formula be one of the standard excel function < p > the name matching be case insensitive <END>
<BEG> resolves internal function name into function index <END>
<BEG> implementation of method from operationsptg <END>
<BEG> return text representation of this area reference that can be use in text formula <END>
<BEG> sort the first and last row and columns in-place to the preferred top left : bottom right order note : sort only occur when an instance be construct or when this method be call <END>
<BEG> return the first row in the area <END>
<BEG> return last row in the range x2 in x1 <SEG> y1-x2 <SEG> y2 <END>
<BEG> param rowix last row number in the area <END>
<BEG> return the first column number in the area <END>
<BEG> return the first column number + the option bite setting unstripped <END>
<BEG> return whether or not the first row be a relative reference or not <END>
<BEG> set the first row to relative or not param rel be relative or not <END>
<BEG> return isrelative first column to relative or not <END>
<BEG> set whether the first column be relative <END>
<BEG> set the first column irrespective of the bitmasks <END>
<BEG> return lastcolumn in the area <END>
<BEG> return last column and bitmask the raw field <END>
<BEG> return last row relative or not <END>
<BEG> set whether the last row be relative or not param rel < code > true < code > if the last row relative <SEG> else < code > false < code > <END>
<BEG> return lastcol relative or not <END>
<BEG> set whether the last column should be relative or not <END>
<BEG> set the last column in the area <END>
<BEG> return 2-d array inner index be rowix <SEG> out index be colix <END>
<BEG> note - 2d array element be store row by row return the index into the internal 1d array for the specified column and row <END>
<BEG> this size include the size of the array ptg plus the array ptg token value size <END>
<BEG> param type a constant from < tt > spacetype < tt > param count the number of space character <END>
<BEG> param dist distance in byte to start of either < ul > < li > false parameter < li > < li > tfuncvar if token when false parameter be not present < li > < ul > <END>
<BEG> param dist distance in byte to position behind tfuncvar if token minus 1 <END>
<BEG> get the number of operand for the less than operator return int the number of operand <END>
<BEG> implementation of method from operationsptg param operands a string array of operand return string the formula a a string <END>
<BEG> excel represent integer 0 65535 with the tint token <END>
<BEG> creates a non share formula from the share formula counterpart <SEG> i e <END>
<BEG> param rowindex param columnindex return whether cell at rowindex and columnindex be a subtotal see org apache poi s formula function subtotal <END>
<BEG> return the maximum number of usable row in each spreadsheet <END>
<BEG> return the last maximum valid row index <SEG> equal to < code > getmaxrows - 1 < code > <END>
<BEG> return the maximum number argument that can be pass to a multi-arg function e g <END>
<BEG> return the maximum number of conditional format condition on a cell <END>
<BEG> return the maximum number of cell style per spreadsheet <END>
<BEG> return the last valid column index in a alpha-26 representation < code > iv < code > or < code > xfd < code > <END>
<BEG> return array of built-in data format <END>
<BEG> get the format string that match the give format index param index of a build in format return string represent at index of format or < code > null < code > if there be not a built-in format at that index <END>
<BEG> get the format index that match the give format string < br > automatically convert text to excel 's format string to represent text <END>
<BEG> called when this an array formula in this cell be delete <END>
<BEG> get value type of this cell <END>
<BEG> if condenserows be true <SEG> a discontinuity in srcrows will be remove when copy to destination for example : sheet copyrows { row 1 <SEG> row 2 <SEG> row 5 } <SEG> 11 <SEG> policy result in rows 1 <SEG> 2 <SEG> and 5 be copy to row 11 <SEG> 12 <SEG> and 13 if condenserows be true <SEG> or row 11 <SEG> 11 <SEG> 15 if condenserows be false return the condenserows <END>
<BEG> since poi 3 15 beta 3 <END>
<BEG> return excel number format index <SEG> either a built-in or a high custom # map in the workbook style table <END>
<BEG> return excel number format string for the index <END>
<BEG> return long internal numeric code of the error <END>
<BEG> returns index of this color return index of this color <END>
<BEG> param index the index of the color return the corresponding indexedcolors enum throw illegalargumentexception if index be not a valid indexedcolors since 3 15-beta2 <END>
<BEG> a range be return only for the part of the table match this enum instance and contain the give cell <END>
<BEG> a range be return only for the part of the table match this enum instance and contain the give cell reference <END>
<BEG> calls { link # getrange table <SEG> cellreference } <END>
<BEG> param table param cell return default be unimplemented null <END>
<BEG> is the reference for a contiguous i e <END>
<BEG> is the reference for a whole-column reference <SEG> such a c : c or d : g ? <END>
<BEG> takes a non-contiguous area reference <SEG> and return an array of contiguous area reference return an array of contiguous area reference <END>
<BEG> note - if this area reference refers to a single cell <SEG> the return value of this method will be identical to that of < tt > getfirstcell < tt > return the second cell reference which define this area <END>
<BEG> returns a reference to every cell cover by this area <END>
<BEG> compare this celladdress use the natural row-major <SEG> column-minor ordering <END>
<BEG> same a { link # tostring } return a1-style cell address string representation <END>
<BEG> return the text format of this range use specified sheet name <END>
<BEG> creates a cellrangeaddress from a cell range reference string <END>
<BEG> validate the range limit against the supplied version of excel param ssversion the version of excel to validate against throw illegalargumentexception if the range limit be outside of the allowed range <END>
<BEG> check if the row be in the specify cell range param rowind the row to check return true if the range contain the row [ rowind ] <END>
<BEG> determines whether or not this cellrangeaddress and the specified cellrangeaddress intersect <END>
<BEG> useful for logic like table range styling <SEG> where some element apply base on relative position in a range <END>
<BEG> param lastrow row number for the low right hand corner <END>
<BEG> return the size of the range number of cell in the area <END>
<BEG> add a cell range structure <END>
<BEG> return < tt > cellrangeaddress < tt > at the give index <END>
<BEG> do all possible cell merges between cell of the list so that : < br > < ul > < li > if a cell range be completely inside of another cell range <SEG> it get remove from the list < li > < li > if two cell have a share border <SEG> merge them into one big cell range < li > < ul > param cellranges the range to merge return list of merge cell range <END>
<BEG> check if the two cell range have a share border <END>
<BEG> creates a cell <SEG> give it a value <SEG> and apply a style if provide param row the row to create the cell in param column the column index to create the cell in param value the value of the cell param style if the style be not null <SEG> then set return a new cell <END>
<BEG> take a cell <SEG> and align it <END>
<BEG> take a cell <SEG> and vertically align it <END>
<BEG> < p > this method attempt to find an exist cellstyle that match the < code > cell < code > 's current style plus a single style property < code > propertyname < code > with value < code > propertyvalue < code > <END>
<BEG> looks for text in the cell that should be unicode <SEG> like & alpha ; and provide the unicode version of it <END>
<BEG> convert to an equivalent { link normaliseddecimal } representation have 15 decimal digit of precision in the non-fractional bit of the significand <END>
<BEG> return the number of non-fractional bit after the msb of the significand <END>
<BEG> param rawbits the 64 bit binary representation of the double value return the top 12 bit sign and bias exponent value <END>
<BEG> this class attempt to reproduce excel 's behaviour for compare number <END>
<BEG> returns the vertical position of the split <END>
<BEG> for a horizontal split return the top row in the bottom pane <END>
<BEG> returns the active pane see # pane_lower_right see # pane_upper_right see # pane_lower_left see # pane_upper_left return the active pane <END>
<BEG> returns true if this be a freeze pane <SEG> false if it be a split pane <END>
<BEG> returns { code true } if null array element should be treat a empty cell <END>
<BEG> specifies if null array element should be treat a empty cell <END>
<BEG> specifies name of the sheet to build <END>
<BEG> builds sheet from parent workbook and 2d array with cell value <END>
<BEG> compute width of a single cell param cell the cell whose width be to be calculate param defaultcharwidth the width of a single character param formatter formatter use to prepare the text to be measure param usemergedcells whether to use merged cell return the width in pixel or -1 if cell be empty <END>
<BEG> compute width of a column base on a subset of the row and return the result param sheet the sheet to calculate param column 0-based index of the column param usemergedcells whether to use merged cell param firstrow 0-based index of the first row to consider inclusive param lastrow 0-based index of the last row to consider inclusive return the width in pixel or -1 if cell be empty <END>
<BEG> get default character width use the workbook 's default font param wb the workbook to get the default character width from return default character width in pixel <END>
<BEG> return the cell <SEG> without take account of merged region <END>
<BEG> return the cell <SEG> take account of merged region <END>
<BEG> this be really a debug version of < code > system arraycopy < code > <END>
<BEG> moves a number of entry in an array to another point in the array <SEG> shift those inbetween a required <END>
<BEG> invokes the delegate 's < code > skip long < code > method <END>
<BEG> syntactic sugar to check whether a documentformatexception should be throw <END>
<BEG> appends the specified element to the end of this list param value element to be append to this list <END>
<BEG> if this value be set to > 0 <SEG> { link # safelyallocate long <SEG> int } will ignore the maximum record length parameter <END>
<BEG> peeks at the first 8 byte of the stream <END>
<BEG> returns an array that should n't be write to ! <END>
<BEG> < p > same a the normal { link inputstream # read byte [ ] <SEG> int <SEG> int } <SEG> but try to ensure that the entire len number of byte be read < p > < p > if the end of file be reach before any byte be read <SEG> return < tt > -1 < tt > <END>
<BEG> same a the normal < tt > channel read b < tt > <SEG> but try to ensure that the buffer be fill completely if possible <SEG> i e <END>
<BEG> calculate checksum on input data <END>
<BEG> calculate checksum on all the data read from input stream <END>
<BEG> quietly no exception close closable resource <END>
<BEG> skips bytes from an input byte stream <END>
<BEG> simple utility function to check that you have n't hit eof when read a byte <END>
<BEG> copy a portion of a byte array param data the original byte array param offset where to start copying from <END>
<BEG> get a double value from a byte array <SEG> read it in little endian format then convert the result revolt ieee 754 curse them float point number to a happy java double param data the byte array param offset a starting offset into the byte array return the double 64-bit value <END>
<BEG> get an int value from a byte array param data the byte array param offset a starting offset into the byte array return the int 32-bit value <END>
<BEG> read short array param data the original byte array param offset where to start copying from <END>
<BEG> get the unsigned value of a byte <END>
<BEG> get an unsigned int value from a byte array param data the byte array param offset a starting offset into the byte array return the unsigned int 32-bit value in a long <END>
<BEG> executes : < p > < code > data [ offset ] = byte value ; < code > < p > added for consistency with other put~ method <END>
<BEG> put an unsigned byte value into a byte array param data the byte array param offset a starting offset into the byte array param value the short 16-bit value exception arrayindexoutofboundsexception may be throw <END>
<BEG> convert an 'unsigned ' byte to an integer <END>
<BEG> put unsigned int into output stream param value the int 32-bit value <END>
<BEG> put unsigned short into output stream param value the unsigned short 16-bit value <END>
<BEG> as time zone information be not store in any format <SEG> it can be set before any date calculation take place <END>
<BEG> return the time zone which be use for date calculation <END>
<BEG> clear the thread-local user time zone <END>
<BEG> sets default user locale <END>
<BEG> decode the language id from lcid value param lcid the lcid value return the locale language id <END>
<BEG> get default code page from lcid value param lcid the lcid value return the default code page <END>
<BEG> decompresses the give input stream <SEG> return the array of byte of the decompressed input <END>
<BEG> check if a logger be enable to log at the specified level param level one of debug <SEG> info <SEG> warn <SEG> error <SEG> fatal <END>
<BEG> log a message <END>
<BEG> helper method to determine how many bit in the copytoken be use for the copylength <END>
<BEG> given a byte array of 16-bit unicode character in little endian format most important byte last <SEG> return a java string representation of it <END>
<BEG> convert string to 16-bit unicode character in little endian format param string the string return the byte array of 16-bit unicode character <END>
<BEG> inputstream < tt > in < tt > be expect to contain : < ol > < li > ushort nchars < li > < li > byte is16bitflag < li > < li > byte [ ] char [ ] characterdata < li > < ol > for this encoding <SEG> the is16bitflag be always present even if nchars==0 <END>
<BEG> outputstream < tt > out < tt > will get : < ol > < li > ushort nchars < li > < li > byte is16bitflag < li > < li > byte [ ] char [ ] characterdata < li > < ol > for this encoding <SEG> the is16bitflag be always present even if nchars==0 <END>
<BEG> outputstream < tt > out < tt > will get : < ol > < li > byte is16bitflag < li > < li > byte [ ] char [ ] characterdata < li > < ol > for this encoding <SEG> the is16bitflag be always present even if nchars==0 <END>
<BEG> return the number of byte that would be write by { link # writeunicodestring littleendianoutput <SEG> string } <END>
<BEG> takes a unicode java string <SEG> and return it a 8 bit data in iso-8859-1 codepage <END>
<BEG> takes a unicode string <SEG> and return it a little endian most important byte last byte in the supplied byte array <END>
<BEG> return the encode we want to use <SEG> currently hardcoded to iso-8859-1 <END>
<BEG> check the parameter have multibyte character param value string to check return boolean result true : string have at least one multibyte character <END>
<BEG> checks to see if a give string need to be represent a unicode param value the string to look at <END>
<BEG> tests if the string start with the specified prefix <SEG> ignore case consideration <END>
<BEG> some string may contain encoded character of the unicode private use area <END>
<BEG> count number of occurrence of needle in haystack has same signature a org apache common lang3 stringutils # countmatches param haystack the charsequence to check <SEG> may be null param needle the character to count the quantity of return the number of occurrence <SEG> 0 if the charsequence be null <END>
<BEG> configures the strategy use by { link # createtempfile string <SEG> string } to create the temporary file <END>
<BEG> converts emus to point param emu emu return point <END>
<BEG> converts a value of type fixedpoint to a float point param fixedpoint value in fixed point notation return float point double see < a href= http : msdn microsoft com en-us library dd910765 v=office 12 aspx > [ ms-oshared ] - 2 2 1 6 fixedpoint < a > <END>
<BEG> converts a value of type float point to a fixedpoint param floatpoint value in float point notation return fixedpoint value in fixed point notation see < a href= http : msdn microsoft com en-us library dd910765 v=office 12 aspx > [ ms-oshared ] - 2 2 1 6 fixedpoint < a > <END>
<BEG> param twips 1 20th of a point typically use for row height return equivalent emus <END>
<BEG> creates a new documentbuilderfactory <SEG> with sensible default <END>
<BEG> creates a new sax xmlreader <SEG> with sensible default <END>
<BEG> create a command line from a string <END>
<BEG> was a file be use to set the executable ? <END>
<BEG> add a single argument <END>
<BEG> return the substitution map <END>
<BEG> set the substitutionmap to expand variable in the command line <END>
<BEG> returns the command line a an array of string <END>
<BEG> see org apache common exec executeresulthandler # onprocesscomplete int <END>
<BEG> see org apache common exec executeresulthandler # onprocessfailed org apache common exec executeexception <END>
<BEG> get the { code exception } cause the process execution to fail <END>
<BEG> get the { code exitvalue } of the process <END>
<BEG> has the process exit and a result be available <SEG> i e <END>
<BEG> causes the current thread to wait <SEG> if necessary <SEG> until the process have terminate <END>
<BEG> see org apache common exec executor # getstreamhandler <END>
<BEG> see org apache common exec executor # setworkingdirectory java io file <END>
<BEG> see org apache common exec executor # setexitvalues int [ ] <END>
<BEG> factory method to create a thread waiting for the result of an asynchronous execution <END>
<BEG> get the worker thread be use for asynchronous execution <END>
<BEG> find the list of environment variable for this process <END>
<BEG> get the variable list a an array <END>
<BEG> add a key value pair to the give environment <END>
<BEG> return the underlying cause of this exception if any <END>
<BEG> gets the exit value return by the failed process return the exit value <END>
<BEG> watches the give process and terminate it <SEG> if it run for too long <END>
<BEG> destroys the run process manually <END>
<BEG> this method will rethrow the exception that be possibly catch during the run of the process <END>
<BEG> indicates whether or not the watchdog be still monitor the process <END>
<BEG> indicates whether the last process run be kill <END>
<BEG> reset the monitor flag and the process <END>
<BEG> copies data from the input stream to the output stream <END>
<BEG> flush this log stream <END>
<BEG> writes all remain data from the buffer <END>
<BEG> return the trace level of the log system <END>
<BEG> converts the buffer to a string and send it to { code processline } <END>
<BEG> determines if the os on which ant be execute match the give os name <END>
<BEG> set maximum time to wait until output stream be exchausted when { link # stop } be call <END>
<BEG> set the < code > inputstream < code > from which to read the standard output of the process <END>
<BEG> set the < code > outputstream < code > by mean of which input can be send to the process <END>
<BEG> stop pump the stream <END>
<BEG> create the pump to handle process output <END>
<BEG> creates a stream pumper to copy the give input stream to the give output stream <END>
<BEG> stopping a pumper thread <END>
<BEG> invoked by the vm when it be exit <END>
<BEG> determines if lenient mode be enable <END>
<BEG> clones a map <END>
<BEG> clones a map and prefix the key in the clone <SEG> e g <END>
<BEG> clones the lh map and add all thing from the rh map <END>
<BEG> param uncpath the unc path to convert to a windows file path return the windows file path represent the unc path <END>
<BEG> sets a connection option <END>
<BEG> retrieves the value of a connection option or a default value if that option have not be set <END>
<BEG> returns the key of all connection option set <END>
<BEG> returns the { link operatingsystemfamily } that correspond to the local host <END>
<BEG> converts a text to use the { link # getlineseparator line separator } of this operating system family <END>
<BEG> returns the string use by the operating system family to separate component of a file path <SEG> e g <END>
<BEG> returns the string use by the operating system family to separate component of a path <SEG> e g <END>
<BEG> returns the extension for script use by the operating system family <SEG> e g <END>
<BEG> returns the default path of the temporary directory for this operating system family <SEG> i e <END>
<BEG> creates a { link consoleoverthereexecutionoutputhandler } that log to { link system # out } <END>
<BEG> internal method that walk the directory hierarchy in a depth-first manner <END>
<BEG> overridable callback method invoke to determine if a directory should be process <END>
<BEG> overridable callback method invoke at the start of process each directory <END>
<BEG> overridable callback method invoke for each non-directory file <END>
<BEG> check the process exit value <END>
<BEG> return actual process result <END>
<BEG> return the exit value of the finished process <END>
<BEG> returns this process executor 's operating system program and argument <END>
<BEG> returns this process executor 's work directory <END>
<BEG> sets the allowed exit value for the process be execute <END>
<BEG> return binary output of the finished process <END>
<BEG> return output of the finished process convert to a string use platform 's default encoding <END>
<BEG> return output of the finished process convert to utf-8 string <END>
<BEG> return output line of the finished process convert use platform 's default encoding <END>
<BEG> return output line of the finished process convert use utf-8 <END>
<BEG> return < code > true < code > if the process output be read <END>
<BEG> return output of the finished process <END>
<BEG> return the started process <END>
<BEG> returns the inputstream from which the standard output of the remote process can be read <END>
<BEG> returns the inputstream from which the standard error of the remote process can be read if a separate error stream be request from the server <END>
<BEG> return whether or not verification of the remote host provide a separate error stream be enable <END>
<BEG> sends the data initiation datagram <END>
<BEG> opens a datagramsocket on the local host at the first available port <END>
<BEG> opens a datagramsocket at the specified address on the local host at a specified port <END>
<BEG> closes the datagramsocket use for the connection <END>
<BEG> set the default timeout in millisecond to use when open a socket <END>
<BEG> sets the datagramsocketfactory use by the datagramsocketclient to open datagramsockets <END>
<BEG> returns an outputstream through which you may write data to the server <END>
<BEG> receives echo data and return it length <END>
<BEG> get the reply <SEG> but do n't pass it to command listener <END>
<BEG> return the character encode use to communicate over the control connection <END>
<BEG> sends an ftp command to the server <SEG> wait for a reply and return the numerical response code <END>
<BEG> returns the integer value of the reply code of the last ftp reply <END>
<BEG> returns the line of text from the last ftp server response a an array of string <SEG> one entry per line <END>
<BEG> a convenience method to send the ftp type command for text file to the server <SEG> receive the reply <SEG> and return the reply code <END>
<BEG> param file name of file return the status throw ioexception on error since 2 0 <END>
<BEG> set strict multiline parsing <END>
<BEG> provide command support to super-class <END>
<BEG> set the factory use for parser creation to the supplied factory object <END>
<BEG> logout of the ftp server by send the quit command <END>
<BEG> change the current work directory of the ftp session <END>
<BEG> change to the parent directory of the current working directory <END>
<BEG> issue the ftp smnt command <END>
<BEG> reinitialize the ftp session <END>
<BEG> set the current data connection mode to < code > active_local_data_connection_mode < code > <END>
<BEG> if in passive mode <SEG> return the data port of the passive host <END>
<BEG> returns the current data connection mode one of the < code > _data_connection_mode < code > constant <END>
<BEG> set the local ip address to use in passive mode <END>
<BEG> sets the file type to be transfer <END>
<BEG> sets the file structure <END>
<BEG> sets the transfer mode <END>
<BEG> initiate a server to server file transfer <END>
<BEG> there be a few ftpclient method that do not complete the entire sequence of ftp command to complete a transaction <END>
<BEG> returns an outputstream through which data can be write to append to a file on the server with the give name <END>
<BEG> returns an outputstream through which data can be write to store a file on the server use a unique name derive from the give name <END>
<BEG> stores a file on the server use a unique name assign by the server and take input from the give inputstream <END>
<BEG> query the server for supported feature <END>
<BEG> query the server for a supported feature <SEG> and return it value if any <END>
<BEG> query the server for a supported feature <SEG> and return the it value if any <END>
<BEG> query the server for a supported feature <END>
<BEG> query the server for a supported feature with particular value <SEG> for example auth ssl or auth tls <END>
<BEG> reserve space on the server for the next file transfer <END>
<BEG> issue a command and wait for the reply <SEG> return it a an array of string <END>
<BEG> generate a directory listing use the mlsd command <END>
<BEG> restart a < code > stream_transfer_mode < code > file transfer start from the give offset <END>
<BEG> sets the restart offset for file transfer <END>
<BEG> fetches the restart offset <END>
<BEG> renames a remote file <END>
<BEG> abort a transfer in progress <END>
<BEG> deletes a file on the ftp server <END>
<BEG> removes a directory on the ftp server if empty <END>
<BEG> creates a new subdirectory on the ftp server in the current directory if a relative pathname be give or where specify if an absolute pathname be give <END>
<BEG> send a site specific command <END>
<BEG> fetches the system help information from the server and return the full string <END>
<BEG> sends a noop command to the ftp server <END>
<BEG> obtain a list of filename in a directory or just the name of a give file <SEG> which be not particularly useful <END>
<BEG> issue the ftp stat command to the server <END>
<BEG> issue the ftp mdtm command not support by all server to retrieve the last modification time of a file <END>
<BEG> set the internal buffer size for buffer data stream <END>
<BEG> retrieve the current internal buffer size for buffer data stream <END>
<BEG> sets the value to be use for the data socket so_sndbuf option <END>
<BEG> implementation of the { link configurable configurable } interface <END>
<BEG> you can set this to true if you would like to get hidden file when { link # listfiles } too <END>
<BEG> see # setlisthiddenfiles boolean return the current state since 2 0 <END>
<BEG> whether should attempt to use epsv with ipv4 <END>
<BEG> set whether to use epsv with ipv4 <END>
<BEG> set the listener to be use when perform store retrieve operation <END>
<BEG> get the time to wait between send control connection keepalive message <END>
<BEG> set how long to wait for control keep-alive message reply <END>
<BEG> set the workaround strategy to replace the pasv mode reply address <END>
<BEG> tells if automatic server encode detection be enable or disable <END>
<BEG> getter for the { link # setdefaultdateformatstr string defaultdateformatstr } property <END>
<BEG> < p > getter for the { link # setshortmonthnames string shortmonthnames } property <END>
<BEG> < p > setter for the defaultdateformatstr property <END>
<BEG> looks up the supplied language code in the internally maintain table of language code <END>
<BEG> returns a dateformatsymbols object configure with short month name a in the supplied string param shortmonths this should be a describe in { link # setshortmonthnames string shortmonthnames } return a dateformatsymbols object configure with short month name a in the supplied string <END>
<BEG> returns a collection of all the language cod currently support by this class <END>
<BEG> allow list parse method to create basic ftpfile entry if parsing fails <END>
<BEG> return true if list parsing should return ftpfile entry even for unparseable response line < p > if true <SEG> the ftpfile for any unparseable entry will contain only the unparsed entry { link ftpfile # getrawlisting } and { link ftpfile # isvalid } will return { code false } since 3 4 <END>
<BEG> retrieve the ftp protocol command string correspond to a specify command code <END>
<BEG> set the original ftp server raw listing from which the ftpfile be create <END>
<BEG> get the original ftp server raw listing use to initialize the ftpfile <END>
<BEG> determine if the file be a directory <END>
<BEG> determine if the type of the file be unknown <END>
<BEG> used to indicate whether an entry be valid or not <END>
<BEG> set the type of the file < code > directory_type < code > <SEG> < code > file_type < code > <SEG> etc <END>
<BEG> return the type of the file one of the < code > _type < code > constant <SEG> e g <SEG> if it be a directory <SEG> a regular file <SEG> or a symbolic link <END>
<BEG> if the ftpfile be a symbolic link <SEG> use this method to set the name of the file be point to by the symbolic link <END>
<BEG> if the ftpfile be a symbolic link <SEG> this method return the name of the file be point to by the symbolic link <END>
<BEG> this method be a hook for those implementors such a vmsversioningftpentryparser <SEG> and possibly others which need to perform some action upon the ftpfilelist after it have be create from the server stream <SEG> but before any client see the list <END>
<BEG> returns an array of at most < code > quantityrequested < code > ftpfile object start at this object 's internal iterator 's current position <END>
<BEG> returns an array of at most < code > quantityrequested < code > ftpfile object start at this object 's internal iterator 's current position <SEG> and work back toward the beginning <END>
<BEG> reset this object 's internal iterator to the beginning of the list <END>
<BEG> determine if a reply code be a positive preliminary response <END>
<BEG> set auth command use value <END>
<BEG> auth command <END>
<BEG> ssl tls negotiation <END>
<BEG> set a { link keymanager } to use param keymanager the keymanager implementation to set <END>
<BEG> controls whether a new ssl session may be establish by this socket <END>
<BEG> configures the socket to require client authentication <END>
<BEG> returns true if the socket will require client authentication <END>
<BEG> configures the socket to request client authentication <SEG> but only if such a request be appropriate to the cipher suite negotiate <END>
<BEG> returns true if the socket be set to use client mode in it first handshake <END>
<BEG> controls which particular cipher suite be enable for use on this connection <END>
<BEG> override the default { link trustmanager } to use ; if set to { code null } <SEG> the default trustmanager from the jvm will be use <END>
<BEG> return whether or not endpoint identification use the https algorithm on java 1 7+ be enable <END>
<BEG> automatic endpoint identification check use the https algorithm be support on java 1 7+ <END>
<BEG> send the adat command with the specified authentication data <END>
<BEG> send the ccc command to the server <END>
<BEG> parses the give adat response line and base64-decodes the data <END>
<BEG> sets the socket so newly accept connection will use ssl client mode <END>
<BEG> if the recentdateformat member have be define <SEG> try to parse the supplied string with that <END>
<BEG> return returns the defaultdateformat pattern string <END>
<BEG> return returns the servertimezone use by this parser <END>
<BEG> defines a default configuration to be use when this class be instantiate without a { link ftpclientconfig ftpclientconfig } parameter be specify <END>
<BEG> return the root cause of this exception or null if no root cause be specify <END>
<BEG> convenience method delegate to the internal matchresult 's match method <END>
<BEG> for debug purpose - return a string show each match group by number <END>
<BEG> alter the current regular expression be utilise for entry parsing and create a new { link pattern } instance <END>
<BEG> implement hook provide for those implementers such a vmsversioningftpentryparser <SEG> and possibly others which return multiple file with the same name to remove the duplicate param original original list return original list purged of duplicate <END>
<BEG> overrides { link socketclient # firereplyreceived int <SEG> string } so a to avoid create the reply string if there be no listener to invoke <END>
<BEG> returns the current imap client state <END>
<BEG> sends a command an argument to the server and return the reply code <END>
<BEG> sends a command and argument to the server and return whether successful <END>
<BEG> sends a command to the server and return whether successful <END>
<BEG> sends data to the server and return the reply code <END>
<BEG> returns the reply to the last command send to the server <END>
<BEG> generates a new command id tag for a command <END>
<BEG> get the imap protocol string command for this command return the imap protocol string command correspond to this command <END>
<BEG> checks if the reply line be untagged - e g <END>
<BEG> checks if the reply line be a continuation <SEG> i e <END>
<BEG> checks if the line introduce a literal <SEG> i e <END>
<BEG> the tls command execution <END>
<BEG> registers a copystreamlistener to receive copystreamevents <END>
<BEG> returns the number of byte transfer by the write that trigger the event <END>
<BEG> returns the ioexception responsible for the failure of a copy operation <END>
<BEG> returns true if the netascii line separator differs from the system line separator <SEG> false if they be the same <END>
<BEG> closes the object quietly <SEG> catch rather than throw ioexception <END>
<BEG> adds a message-id to the list of message that this message reference i e <END>
<BEG> returns the messageid reference a an array of strings return an array of message-ids <END>
<BEG> add a newsgroup to the list of newsgroups be query <END>
<BEG> add a newsgroup to the list of newsgroups be query <SEG> but indicate that group should not be check for new news <END>
<BEG> return the nntp query format date year <SEG> month <SEG> day in the form yymmdd <END>
<BEG> return the comma separate list of distribution <END>
<BEG> get the estimated number of article in the newsgroup <END>
<BEG> get the number of the first article in the newsgroup <END>
<BEG> get the post permission of the newsgroup <END>
<BEG> indicates whether or not the client be allow to post article to the server it be currently connect to <END>
<BEG> returns the entire text of the last nntp server response exactly a it be receive <SEG> not include the end of line marker <END>
<BEG> a convenience method to send the nntp article command to the server <SEG> receive the initial reply <SEG> and return the reply code <END>
<BEG> a convenience wrapper for the extended list command that take an argument <SEG> allow u to selectively list multiple group <END>
<BEG> determine if a reply code be an informational response <END>
<BEG> adds a newsgroup to the article < code > newsgroups : < code > field <END>
<BEG> adds an arbitrary header field with the give value to the article header <END>
<BEG> returns the address use in the < code > from : < code > header field <END>
<BEG> returns the content of the < code > newsgroups : < code > header field <END>
<BEG> param container return true if child be under self 's tree <END>
<BEG> reverse the entire set of child <END>
<BEG> the client pass in a list of iterable object <SEG> and the threader construct a connected 'graph ' of message param message iterable of message to thread <SEG> must not be empty return null if message == null or root child == null or message list be empty since 3 0 <END>
<BEG> returns the ntp protocol version number that client set on request packet that be send to remote host e g <END>
<BEG> add comment error warn to list of comment associate with processing of ntp parameter <END>
<BEG> get round-trip network delay <END>
<BEG> get clock offset need to adjust local clock to match remote clock <END>
<BEG> get host address from message datagram if available return host address of available otherwise null since 3 4 <END>
<BEG> returns time at which time message packet be receive by local machine <END>
<BEG> returns the value of this timestamp a a long value <END>
<BEG> returns high-order 32-bits represent the second of this ntp timestamp <END>
<BEG> returns low-order 32-bits represent the fractional second <END>
<BEG> convert ntp timestamp to java date object <END>
<BEG> convert 64-bit ntp timestamp to java standard time <END>
<BEG> helper method to convert java time to ntp timestamp object <END>
<BEG> constructs a ntp timestamp object and initialize it so that it represent the time at which it be allocate <SEG> measure to the near millisecond <END>
<BEG> converts java time to 64-bit ntp time representation <END>
<BEG> converts this < code > timestamp < code > object to a < code > string < code > of the form : < blockquote > < pre > eee <SEG> mmm dd yyyy hh : mm : s sss utc < pre > < blockquote > see java text simpledataformat for code description <END>
<BEG> set the internal pop3 state <END>
<BEG> returns the string representation of the command type send e g <SEG> stat or get <END>
<BEG> returns the entire message send to or receive from the server <END>
<BEG> add an email address to the cc carbon copy or courtesy copy list <END>
<BEG> looks for the state of the option <END>
<BEG> sends a command <SEG> automatically add iac prefix and flush the output <END>
<BEG> processes the response of an ayt <END>
<BEG> registers an outputstream for spy what 's go on in the telnet session <END>
<BEG> stops spy this telnet <END>
<BEG> sends a read char on the spy stream <END>
<BEG> registers a notification handler to which will be sent notification of received telnet option negotiation command <END>
<BEG> returns the telnet connection output stream <END>
<BEG> bug option active when not already acknowledge start <END>
<BEG> sets the status of the reader thread <END>
<BEG> register a listener to be notify when new incoming data be available to be read on the { link # getinputstream input stream } <END>
<BEG> unregisters the current { link telnetinputlistener } <SEG> if any <END>
<BEG> returns the string representation of the telnet protocol command correspond to the give command code <END>
<BEG> determines if a give command code be valid <END>
<BEG> returns a boolean indicate whether to accept a do request come from the other end <END>
<BEG> returns a boolean indicate whether to send a will request to the other end upon connection <END>
<BEG> tells this option whether to send a will request upon connection <END>
<BEG> method call upon reception of a subnegotiation for this option come from the other end <END>
<BEG> this method be invoke whenever this option be acknowledge active on the local end telnetclient send a will <SEG> remote side send a do <END>
<BEG> returns a boolean indicating whether a will request sent to the other side have be acknowledge <END>
<BEG> tells this option whether a will request sent to the other side have be acknowledge invoke by telnetclient <END>
<BEG> this be a special method to perform a more efficient packet send <END>
<BEG> sends a tftp packet to it destination <END>
<BEG> trace facility ; this implementation do nothing <END>
<BEG> returns the block number of the acknowledgement <END>
<BEG> sets the data for the data packet <END>
<BEG> returns the length of the data part of the data packet <END>
<BEG> returns the offset into the byte array where the packet data actually start <END>
<BEG> returns the requested filename <END>
<BEG> enable the https endpoint identification algorithm on an sslsocket <END>
<BEG> returns < code > true < code > if the return value of { link subnetinfo # getaddresscount } include the network and broadcast address <END>
<BEG> count the number of 1-bits in a 32-bit integer use a divide-and-conquer strategy see hacker 's delight section 5 1 <END>
<BEG> generate a trustmanager that check server certificate for validity <SEG> but otherwise perform no check <END>
<BEG> return the default trustmanager provide by the jvm <END>
<BEG> returns the cause of this exception same a getcause <END>
<BEG> get the list of registered file extension return string [ ] of file extension <END>
<BEG> unregister a file extension param ext filename extension exclude <END>
<BEG> determines if a file match this extension type param name file 's name return true if match <SEG> false otherwise <END>
<BEG> set the tcp timeout on the underlie data socket s <END>
<BEG> waits for a connection from the server and then set the timeout when the connection be make <END>
<BEG> if active mode <SEG> accept the ftp server 's connection - in pasv <SEG> we be already connect <END>
<BEG> connects to the server at the address and port number define in the constructor <END>
<BEG> checks if the client have connect to the server and throw an exception if it have n't <END>
<BEG> switch debug of response on or off param on true if you wish to have response to the log stream <SEG> false otherwise deprecate use the logger class to switch debug on and off <END>
<BEG> set strict checking of ftp return code <END>
<BEG> determine if strict checking of return code be switch on <END>
<BEG> non-javadoc see com enterprisedt net ftp ftpclientinterface # getdetecttransfermode <END>
<BEG> get the tcp timeout return timeout that be use <SEG> in millisecond <END>
<BEG> returns the control-port be connect to on the remote server <END>
<BEG> set the remote address param remoteaddr the remoteaddr to set <END>
<BEG> is automatic substitution of the remote host ip set to be on for passive mode connection ? <END>
<BEG> set automatic substitution of the remote host ip on if in passive mode param autopassiveipsubstitution true if set to on <SEG> false otherwise <END>
<BEG> get the encoding use for the control connection return returns the current controlencoding <END>
<BEG> set the control socket 's encoding <END>
<BEG> set a listener that handle all ftp message param listener message listener <END>
<BEG> set the connect mode param mode active or pasv mode <END>
<BEG> non-javadoc see com enterprisedt net ftp ftpclientinterface # setprogressmonitor com enterprisedt net ftp ftpprogressmonitor <SEG> long <END>
<BEG> non-javadoc see com enterprisedt net ftp ftpclientinterface # setprogressmonitor com enterprisedt net ftp ftpprogressmonitor <END>
<BEG> set the size of the buffer use in write to and read from the data socket param size new size of buffer in byte <END>
<BEG> we can force port to send a fixed ip address <SEG> which can be useful with certain nat configuration <END>
<BEG> clear socks setting <END>
<BEG> issue the restart command to the remote server <END>
<BEG> override the chosen file factory with a user create one - meaning that a specific parser have be select param filefactory <END>
<BEG> set the locale for date parsing of dir listing param locale new locale to use <END>
<BEG> get the current transfer type return the current type of the transfer <SEG> i e <END>
<BEG> set the port number range for active mode param low low port number in range param high high port number in range <END>
<BEG> log a message <SEG> check for password param msg message to log param reply true if a response <SEG> false otherwise <END>
<BEG> get the reply code if it exist return reply if it exist <SEG> -1 otherwise <END>
<BEG> get the type of file <SEG> i e unix return the integer type of the file deprecate no longer necessary <END>
<BEG> return returns true if file be a symlink <END>
<BEG> param linkedname the link name to set <END>
<BEG> param linkcount new link count <END>
<BEG> parse an array of raw file information return from the ftp server param file array of string return array of ftpfile object <END>
<BEG> splits string consist of field separate by whitespace into an array of string <END>
<BEG> log an ftp command be send to the server param cmd command string <END>
<BEG> log an ftp reply be send back to the client param reply reply string <END>
<BEG> clear the log of all message <END>
<BEG> set the tcp timeout on the underlie control socket <END>
<BEG> getter for reply code return server 's reply code <END>
<BEG> getter for reply data line return array of data line return if any <END>
<BEG> basic usage statement <END>
<BEG> connect to the remote host return connect ftpclient throw exception <END>
<BEG> is this a unix format listing ? <END>
<BEG> report on useful thing for debug purpose param obj instance to report on return string <END>
<BEG> parse server supply string output : < begin > directory < dir > < filename > use allocate dd-mmm-yyyy hh : mm : s [ unknown ] perms < filename > use allocate dd-mmm-yyyy hh : mm : s [ unknown ] perms total of < > file <SEG> < > < > block param raw raw string to parse <END>
<BEG> parse server supply string <END>
<BEG> log a message param msg message to log <END>
<BEG> non-javadoc see com enterprisedt util debug appender # log java lang throwable <END>
<BEG> non-javadoc see com enterprisedt util debug appender # close <END>
<BEG> get integer log level return log level <END>
<BEG> is this level great or equal to the supply level param l level to test against return true if great or equal to <SEG> false if less than <END>
<BEG> get level from supply string param level level a a string return level object or null if not find <END>
<BEG> string representation return string <END>
<BEG> add an appender to our list param newappender <END>
<BEG> close all appenders <END>
<BEG> log a message param level log level param message message to log param t throwable object <END>
<BEG> is log enable for the supplied level ? <END>
<BEG> the listing option <SEG> return all option <END>
<BEG> the file path include the directory return the file path <END>
<BEG> parse the argument param argument the argument string return the parsed argument throw illegalargumentexception if the argument string be incorrectly format <END>
<BEG> create a connection configuration instance base on the configuration on this factory return the { link connectionconfig } instance <END>
<BEG> the delay in number of millisecond between login failure <END>
<BEG> the maximum number of time an anonymous user can fail to login before get disconnected return the maximum number of failer login attempt <END>
<BEG> the maximum number of time an user can fail to login before get disconnected return the maximum number of failure login attempt <END>
<BEG> the maximum number of concurrently log in user return the maximum number of user <END>
<BEG> set she maximum number of concurrently log in user param maxlogins the maximum number of user <END>
<BEG> sets the maximum number of time an anonymous user can fail to login before get disconnect param maxanonymouslogins the maximum number of failer login attempt <END>
<BEG> set the maximum number of time an user can fail to login before get disconnect param maxloginfailures the maximum number of failure login attempt <END>
<BEG> set the delay in number of millisecond between login failure <END>
<BEG> create a { link dataconnectionconfiguration } instance base on the configuration on this factory return the { link dataconnectionconfiguration } instance <END>
<BEG> get the maximum idle time in second <END>
<BEG> set if active data connection be enable param activeenabled true if active data connection be enable <END>
<BEG> check the port ip ? <END>
<BEG> get the local address for active mode data transfer <END>
<BEG> set the active data connection local host <END>
<BEG> get the active local port number <END>
<BEG> set the passive server address <END>
<BEG> get the passive address that will be return to client on the pasv command <END>
<BEG> retrieve the passive port configure for this data connection return the string of passive port <END>
<BEG> set the passive port to be use for data connection <END>
<BEG> release data port param port the port to release <END>
<BEG> get the { link sslconfiguration } to be use by data connection return the { link sslconfiguration } use by data connection <END>
<BEG> see sslconfiguration # getclientauth <END>
<BEG> retrive the certificate chain use for an ssl connection <END>
<BEG> set the certificate chain param certificatechain the certificate chain to set <END>
<BEG> retrive the remote ip adress of the client return the client ip adress <END>
<BEG> hashes the password use md5 <END>
<BEG> checks if a class be a subclass of a class with the specify name <END>
<BEG> get unix style date string <END>
<BEG> get iso 8601 timestamp <END>
<BEG> encrypt string use md5 algorithm <END>
<BEG> no exception < code > inputstream < code > close method <END>
<BEG> no exception < code > java io reader < code > close method <END>
<BEG> get exception stack trace <END>
<BEG> read fully from reader <END>
<BEG> lifts a function that potentially throw into a function that either return a success of the value or a failure contain the thrown exception <END>
<BEG> create a new try represent the result of a potentially exception throwing operation <END>
<BEG> create a new delayed try represent a delayed evaluation of a potentially exception throwing operation <END>
<BEG> projects this either a a left <END>
<BEG> if this be a right <SEG> return the same right <END>
<BEG> if this be a right return the contain value <SEG> else return the result of run function on left param or function to run if this be a left return contain value of r or result of { code or } since 2 3 deprecate in favor of { code rightor } see either # rightor function <END>
<BEG> if this be a right return the contain value <SEG> else return the result of apply { code lefttransformer } on left param lefttransformer function to run on left if this be a left return contain value of right or result of { code lefttransformer } since 3 2 <END>
<BEG> given a right contain a function from the right type { code < r > } to a new type { code < x > } apply that function to the value inside this either <END>
<BEG> map the give function across the left hand side value if it be one <END>
<BEG> extracts an object from an either <SEG> regardless of the side in which it be store <SEG> provide both side contain the same type <END>
<BEG> creates an either base on a boolean expression <END>
<BEG> simplifies extract a value or throw a checked exception from an either <END>
<BEG> a predicate that test if the supply either be a left <END>
<BEG> a function that map an either to an option of it left type <END>
<BEG> function to convert from an value to a { link io atlassian fugue either left } contain that value <END>
<BEG> function to convert from an value to a { link io atlassian fugue either right } <END>
<BEG> upcasts an { link either either } of left type l to an either of left type ll <SEG> which be a super type of l <SEG> keep the right type unchanged <END>
<BEG> takes an { link java lang iterable } of { link either eithers } <SEG> and collect the left value of every either which have a leave value param < l > the lhs type param < r > the rhs type param it iterable of eithers to filter and transform from return the left value contain in the content of it <END>
<BEG> collect the right value if there be only right <SEG> otherwise return the first left encounter <END>
<BEG> collect the value wrap within the option <END>
<BEG> performs function application within a higher-order function applicative functor pattern <END>
<BEG> apply f to each element in element <SEG> with each application use the result of the previous application a the other argument to f zero be use a the first 'result ' value <END>
<BEG> function that take another function and apply it to the argument <END>
<BEG> partial function that do a type check and match if the value be of the right type <END>
<BEG> create a partialfunction from a { link java util function predicate } and a { link java util function function } <END>
<BEG> transforms a function that take 2 argument into a function that take the first argument and return a new function that take the second argument and return the final result <END>
<BEG> maps a function that return null into a partial function that return an option of the result <END>
<BEG> function that turn null input into a none <SEG> and not-null input into some <END>
<BEG> takes a function and memoizes cache the result for each input <END>
<BEG> get a function that use the supplier a a factory for all input <END>
<BEG> get a function with { link unit } return type that call the consumer for all input <END>
<BEG> create a function that perform a map lookup supply a default value when a map # get return null if you do not need a defaulted return result use a method reference be prefer { literal map : :get } param map map to use for lookup param < a > map key type param < b > map value type return result of call map # get return defaultvalue instead if the result be null param defaultvalue a b to use when the map return null from map # get <END>
<BEG> returns an empty iterable <SEG> that be <SEG> an { code iterable } with an { code iterator } for which { code hasnext } always return { code false } <SEG> and the other method throw appropriate exception if call <END>
<BEG> finds the first item that match the predicate <END>
<BEG> if { code a } be empty <SEG> return { code none } <END>
<BEG> applies each function in { code f } to { code arg } <END>
<BEG> predicate that check if an iterable be empty <END>
<BEG> filters and map aka transform the unfiltered iterable <END>
<BEG> filter an { code iterable } into a { code pair } of { code iterable } 's <END>
<BEG> aakes the first { code n } { code a } and return them <END>
<BEG> drop element of { code a } until an element return false for { literal p # test } param a iterable to remove the first element of { code a } <SEG> must not be null param p predicate use to test which element to drop from the iterable <SEG> must not be null param < a > type of { code a } return remain element of { code a } after remove the start element that for which { code p # test } return true since 3 0 see # drop int <SEG> iterable to remove the first n element <END>
<BEG> return a new iterable contain only the first element of { code a } for which { code p # test } return true <END>
<BEG> zips two iterables into a single iterable that produce { link pair pair } <END>
<BEG> takes an iterable <SEG> and return an iterable of a pair of the original element and it index start at zero <END>
<BEG> creates a sequence of { link integer integer } from start up to but not include end with the the supplied step between them <END>
<BEG> creates a sequence of { link integer integer } from start up to and include end with the the supplied step between them <END>
<BEG> intersperse an element between all the element in an iterable <END>
<BEG> return the size of an iterable <END>
<BEG> transform an interable by map a function across each of it element param a the source iterable param f function to apply to all the element of a param < a > original iterable type param < b > output iterable type return new iterable contain the transformed value produce by f # apply since 3 0 deprecated function provide to make migration easy prefer to use # map where possible <END>
<BEG> apply the input function to each of the element of the input iterable return a new iterable param a the source iterable param f function to apply to all the element of a param < a > original iterable type param < b > output iterable type return new iterable contain value produce by f # apply call on each element since 3 0 <END>
<BEG> remove element from the input iterable for which the predicate return false param a original iterable param p predicate to filter by param < a > element type return new iterable contain only those element for which p # test return true since 3 0 <END>
<BEG> join { literal iterable < iterable < a > > } down to { literal iterable < a > } <END>
<BEG> check if all element in the input iterable match the input predicate param a iterable to compare for match element param p predicate to test for match element param < a > type of element inside the input iterable return true if all element in the iterable return true for the input predicate otherwise false <END>
<BEG> returns an infinite iterable construct by apply the give iteration function start at the give value <END>
<BEG> builds an iterable from a seed value until { code f } return { code none } <END>
<BEG> merge a number of already sort collection of element into a single collection of element <END>
<BEG> add all the element of the iterable to the collection param collectiontomodify collection to add element to param elementstoadd source of addtional element param < a > element type return true if the collectiontomodify be change since 3 0 <END>
<BEG> pretty print an iterable <END>
<BEG> makes a lazy copy of { code x } <END>
<BEG> adds all the element of the iterator to the collectiontomodify param collectiontomodify collection to add element to <SEG> must not be null param iterator source of element to add <SEG> must not be null param < a > element type return true if any of the element from iterator be not also in collectiontomodify since 3 0 <END>
<BEG> iterator with no value inside param < a > element type return empty iterator since 3 0 <END>
<BEG> function to use for comparison of two equal element param case a { link java util function bifunction } take two value of this equality class param < r > result type return a r object <END>
<BEG> two equal element param lhs an a param rh an a param < a > equality type return a { link io atlassian fugue law iseq } instance <END>
<BEG> a monoid must not care about the order element be combine <END>
<BEG> if an element of the type your monoid work with be combine with the zero of your monoid result should be that element <END>
<BEG> the sum function of your monoid must be equal to { link functions # fold bifunction <SEG> object <SEG> iterable } use append a the folding function and zero a the initial value param a a { link java lang iterable } return a { link io atlassian fugue law iseq } where sum a be equal to fold append <SEG> zero <SEG> a <END>
<BEG> the { link semigroup # multiply1p int <SEG> object } function of your semigroup must be equal to { link semigroup # sumnonempty object <SEG> iterable } apply to the input and an iterable contain { code n - 1 } copy of that input param n a int represent the number of copy of the input to combine param a an a return a { link io atlassian fugue law iseq } where multiply n <SEG> a be equal to sumnonempty a <SEG> take n-1 <SEG> cycle a <END>
<BEG> composes a monoid with another <END>
<BEG> a monoid for function <END>
<BEG> a monoid for option that take the first available value <END>
<BEG> a monoid for option that combine inner value with a semigroup <END>
<BEG> factory method for { link io atlassian fugue option } instance <END>
<BEG> factory method for some instance <END>
<BEG> predicate for filter define option only <END>
<BEG> supplies none a require <END>
<BEG> apply { code f } to the value if define <END>
<BEG> returns this { link io atlassian fugue option } if it be nonempty < strong > and < strong > apply the predicate to this option 's value return true <END>
<BEG> creates an either from this option <END>
<BEG> lifts a function that take an a and return a b into a function that take an option of a and return an option of b <END>
<BEG> returns a function that will lift a function that take an a and return a b into a function that take an option of a and return an option of b <END>
<BEG> applies an option of a to an option of a function with input type a and result type b and return an option of b <END>
<BEG> lifts a function that take an a and a b and return a c into a function that take an option of a and an option of b and return an option of c param f2 the original function to be lift param < a > the input type of the first argument of the original function param < b > the input type of the second argument of the original function param < c > the result type of the original function return a function that take an option of type a and an option of b and return an option of type c since 2 0 <END>
<BEG> returns a function that will lift a function that take an a and a b and return a c into a function that take an option of a and an option of b and return an option of c param < a > the input type of the first argument of the function that can be lift param < b > the input type of the second argument of the function that can be lift param < c > the result type of the function that can be lift return a function that can lift a function of input type a and b and result type c into option since 2 0 <END>
<BEG> flattens an { link java lang iterable } of { link option option } into an iterable of the thing <SEG> filter out any none <END>
<BEG> function for wrap value in a some or none <END>
<BEG> turn a null produce function into one that return an option instead <END>
<BEG> factory method for static pair growth <END>
<BEG> apply a function to both element of an homogeneous pair <END>
<BEG> zips the two give optionals into an optional of a pair <END>
<BEG> accessor method for the left value of the pair <END>
<BEG> accessor method for the right value of the pair q return a b object <END>
<BEG> reduce a 'non-empty ' iterable with { link # append object <SEG> object } param head the head of the 'non-empty ' iterable param tail the tail maybe an empty iterable <END>
<BEG> return the dual semigroup of a semigroup param semigroup base semigroup to create the dual from return a semigroup append in reverse order <END>
<BEG> return the first value <SEG> ignore the second param < a > result type return a { link io atlassian fugue semigroup } that ignore the second input <END>
<BEG> sums up value inside either <SEG> if both be leave or right <END>
<BEG> creates a { link java util function supplier } of a constant value <END>
<BEG> performs function application within a supplier applicative functor pattern <END>
<BEG> supplies true <END>
<BEG> turns an option into a supplier <SEG> but throw an exception if undefined <END>
<BEG> constantly apply the input value to the supply function <SEG> and return the result <END>
<BEG> a supplier that weakly memoize the value return by another { link java util function supplier } <SEG> the return { link java util function supplier } be thread-safe param < a > the type param supplier the supplier to memoize return the weakly memoizing supplier <END>
<BEG> creates a new success param value a value to wrap <SEG> must not be null param < a > the wrapped value type return a new success wrapping v <END>
<BEG> creates a delayed try <SEG> which will return either a failure or a success when evaluate <END>
<BEG> reduces a nested try by a single level param t a nested try param < a > the success type return the flattened try <END>
<BEG> provide ability to statically import { code unit unit } and then use { code unit } within your code <SEG> primarily for readability purpose <END>
<BEG> returns an error to represent undefinedness in a computation <END>
<BEG> returns an error to represent undefinedness in a computation with early failure use the give message <END>
<BEG> provides a thunk that throw an error use the give message when evaluate <END>
<BEG> provides a function that throw an error use the give message <SEG> ignore it argument <END>
<BEG> represents a deconstruction failure that be non-exhaustive <END>
<BEG> a function that return the < code > tostring < code > for a throwable <END>
<BEG> provides this class 's type parameter information a a tree of the type expression <END>
<BEG> provides this class 's superclass type parameter information a a tree of the type expression <END>
<BEG> provides this class 's interface type parameter information a a list of tree <END>
<BEG> constructs a class from the give argument <END>
<BEG> map a function over the result of this action <END>
<BEG> promotes any give function so that it transform between value in the database <END>
<BEG> constructs a database action that return the give value completely intact <END>
<BEG> binds the give action across the result of this database action <END>
<BEG> a simple connector the default that get connection to the give database url from the driver manager <END>
<BEG> creates a database state reader give a connection url <END>
<BEG> returns a new reader that read the database via the give connector <END>
<BEG> runs the give database action a a single transaction <END>
<BEG> an actor equip with a queue and which be guarantee to process one message at a time <END>
<BEG> creates a new actor that use the give parallelization strategy and have the give side-effect <END>
<BEG> pass a message to this actor <SEG> apply it side-effect to the message <END>
<BEG> contravariant functor pattern <END>
<BEG> returns a callable that completely preserve the argument <END>
<BEG> returns a callable that throw the give exception <END>
<BEG> wraps a give function 's return value in a callable <END>
<BEG> provides a transformation from a function to a callable-valued function that be equivalent to it <END>
<BEG> binds the give function to the value in a callable with a final join <END>
<BEG> lifts any function to a function on callables <END>
<BEG> joins a callable of a callable with a bind operation <END>
<BEG> promotes a function of arity-2 to a function on callables <END>
<BEG> turns a list of callables into a single callable of a list <END>
<BEG> turns the give callable into an optional value <END>
<BEG> returns a transformation from a callable to an either <END>
<BEG> returns a transformation from an either to a callable <END>
<BEG> returns a transformation from an optional value to a callable return a function that turn an optional value into a callable that yield some value or throw an exception in the case of no value <END>
<BEG> normalises the give callable by call it and wrap the result in a new callable <END>
<BEG> constructor method for parmodule param u a parallel strategy for the module <END>
<BEG> returns a function that evaluate a give product concurrently and return a promise of the result <END>
<BEG> promotes the give function to a concurrent function that return a promise <END>
<BEG> returns a function that promote a give function to a concurrent function that return a promise <END>
<BEG> creates a very fast concurrent effect <SEG> a an actor that do not guarantee order of it message <END>
<BEG> a first-class constructor of concurrent effect <SEG> a actor that do n't guarantee order of message <END>
<BEG> creates a concurrent actor that be guarantee to process only one message at a time <END>
<BEG> a first-class constructor of actor <END>
<BEG> a first-class function that traverse a list inside a promise <END>
<BEG> takes a promise-valued function and apply it to each element in the give list <SEG> yield a promise of a list of result <END>
<BEG> first-class function that map a concurrent function over a list inside a promise <END>
<BEG> maps a concurrent function over a product-1 inside a promise <END>
<BEG> maps across a list in parallel <END>
<BEG> a first-class function that map another function across a list in parallel <END>
<BEG> maps across a nonempty list in parallel <END>
<BEG> maps a function across a tree in parallel <END>
<BEG> a first-class function that map across a tree in parallel <END>
<BEG> binds a list-valued function across a list in parallel <SEG> concatenate the result into a new list <END>
<BEG> zips two list together with a give function <SEG> in parallel <END>
<BEG> maps the give function across all position of the give zipper in parallel <END>
<BEG> promises to provide the value of the give 1-product <SEG> in the future <END>
<BEG> provides a promise to apply the give function to this promise 's future value covariant functor pattern <END>
<BEG> promotes any function to a transformation between promise covariant functor pattern <END>
<BEG> turns a promise of a promise into just a promise <END>
<BEG> binds the give function over this promise <SEG> with a final join <END>
<BEG> first-class version of the sequence function through a stream <END>
<BEG> transforms a product of a promise to a promise of a product <END>
<BEG> binds the give function across a promise of this promise comonad pattern <END>
<BEG> duplicates this promise to a promise of itself comonad pattern <END>
<BEG> returns the functional representation of this strategy <SEG> a function that evaluate a product-1 <END>
<BEG> constructs a strategy from the give evaluation function <END>
<BEG> apply the strategy to the give product-1 <END>
<BEG> promotes a function to a concurrent function <END>
<BEG> waits for every future in a list to obtain a value <SEG> and collect those value in a list <END>
<BEG> evaluates a list of product-1s in parallel <END>
<BEG> maps the give function over the give list in parallel use this strategy <END>
<BEG> promotes a function to a parallel function on list use this strategy <END>
<BEG> first-class version of parmap1 on list parallel list functor <END>
<BEG> zips together two list in parallel use a give function <SEG> with this strategy <END>
<BEG> provides a simple parallelization strategy that create <SEG> and discard <SEG> a new thread for every evaluation <END>
<BEG> provides a parallelization strategy that use an executorservice to control the method and degree of parallelism <END>
<BEG> provides a parallelization strategy that use a completionservice to control the method and degree of parallelism <SEG> and where each parallel task 's completion be register with the service <END>
<BEG> provides a strategy that perform no evaluation of it argument <END>
<BEG> maps the give bijective transformation across this strategy exponential functor pattern <END>
<BEG> maps the give transformation across this strategy 's codomain invariant functor pattern <END>
<BEG> provides an error-handling strategy <END>
<BEG> provides a normalising strategy that fully evaluate it callable argument <END>
<BEG> return the first-class version of { code pure } <END>
<BEG> constructs a pure computation that result in the give value <END>
<BEG> suspends the give computation in a thunk <END>
<BEG> runs this computation all the way to the end <SEG> in constant stack <END>
<BEG> combines two trampoline so they run cooperatively <END>
<BEG> returns the element at the give index if it exist <SEG> fails otherwise <END>
<BEG> sets the element at the give index to the give value <END>
<BEG> returns an option projection of this array ; < code > none < code > if empty <SEG> or the first element in < code > some < code > <END>
<BEG> returns an either projection of this array ; the give argument in < code > left < code > if empty <SEG> or the first element in < code > right < code > <END>
<BEG> returns a list projection of this array <END>
<BEG> maps the give function across this array <END>
<BEG> filters element from this array by return only element which produce < code > true < code > when the give function be apply to them <END>
<BEG> performs a side-effect for each element of this array <END>
<BEG> performs a right-fold reduction across this array <END>
<BEG> performs a fold leave accummulating and return an array of the intermediate result <END>
<BEG> performs a left-fold accummulating use first array element a a start value and return an array of the intermediate result <END>
<BEG> performs a right-fold accummulating and return an array of the intermediate result <END>
<BEG> binds the give function across each element of this array with a final join <END>
<BEG> performs a bind across each array element <SEG> but ignore the element value each time <END>
<BEG> binds the give function across each element of this array and the give array with a final join <END>
<BEG> reverse this array in constant stack space <END>
<BEG> returns an empty array <END>
<BEG> unsafe package-private constructor <END>
<BEG> constructs a singleton array <END>
<BEG> first-class wrapper function for array <END>
<BEG> joins the give array of array use a bind operation <END>
<BEG> a first-class version of join return a function that join a array of array use a bind operation <END>
<BEG> returns < code > true < code > if the predicate hold for all of the element of this array <SEG> < code > false < code > otherwise < code > true < code > for the empty array <END>
<BEG> returns < code > true < code > if the predicate hold for at least one of the element of this array <SEG> < code > false < code > otherwise < code > false < code > for the empty array <END>
<BEG> finds the first occurrence of an element that match the give predicate or no value if no element match <END>
<BEG> returns an array of integer from the give < code > from < code > value inclusive to the give < code > to < code > value exclusive <END>
<BEG> zips this array with the give array use the give function to produce a new array <END>
<BEG> zips this array with the give array to produce an array of pair <END>
<BEG> zips this array with the index of it element a a pair <END>
<BEG> projects an immutable collection of this array <END>
<BEG> returns a java util arraylist projection of this array <END>
<BEG> takes the give iterable to an array <END>
<BEG> creates an array from the iterator <END>
<BEG> transforms an array of pair into an array of first component and an array of second component <END>
<BEG> a function that convert eithers to string buffer <END>
<BEG> a function that convert string buffer to eithers <END>
<BEG> creates a dlist from the function for alternative function to create a dlist : see # iterabledlist see # iteratordlist see # arraydlist <END>
<BEG> creates a dlist from an iterable <END>
<BEG> produces a dlist with one element <END>
<BEG> prepends a single element on the dlist to produce a new dlist <END>
<BEG> appends a single element on the end of the dlist to produce a new dlist <END>
<BEG> appends two dlists together to produce a new dlist <END>
<BEG> map the give function across the appropriate side <END>
<BEG> if this be a left <SEG> then return the left value in right <SEG> or vice versa <END>
<BEG> a function that construct a left value of either <END>
<BEG> first class catamorphism for either <END>
<BEG> return a function that map another function across an either 's left projection <END>
<BEG> joins an either through left <END>
<BEG> sequences through the left side of the either monad with a list of value <END>
<BEG> traversable instance of rightprojection of either for list <END>
<BEG> returns all the left value in the give list <END>
<BEG> returns the potential successor of a value for this enumerator in curried form <END>
<BEG> returns the potential successor of a value for this enumerator <END>
<BEG> returns the maximum value for this enumerator if there be one <END>
<BEG> returns a function that move a value along the enumerator a give number of time <END>
<BEG> moves a value along the enumerator a give number of time <END>
<BEG> invariant functor map over this enumerator <END>
<BEG> returns a stream of the value from this enumerator <SEG> start at the give value <SEG> count up <END>
<BEG> constructs an eager evaluation by wrap the give value <END>
<BEG> constructs a lazy evaluation with cache <END>
<BEG> transforms < code > eval < a > < code > into a < code > eval < b > < code > use the give function <END>
<BEG> transforms < code > eval < a > < code > into a < code > eval < b > < code > use the give function that directly produce < code > eval < b > < code > <END>
<BEG> returns a finger tree of the inner node of this tree <END>
<BEG> returns the sum of the measurement of this tree 's element <SEG> accord to the monoid <END>
<BEG> folds this digit to the right use the give function <END>
<BEG> maps a function across the element of this digit <SEG> measure with the give measurement <END>
<BEG> performs a reduction on this finger tree use the give argument <END>
<BEG> a digit of one element <END>
<BEG> a binary tree node <END>
<BEG> a binary tree node param v a vector of the node 's element <END>
<BEG> returns the monoid use to sum measure <END>
<BEG> measures a give element <END>
<BEG> a measured instance for node <END>
<BEG> returns the single element in this digit <END>
<BEG> returns a stream of boolean where the head be the most significant bit the bit with the large value <END>
<BEG> returns the bit set from index in the range from low inclusive to high exclusive from the least significant bit on the right <SEG> e g <END>
<BEG> create and empty trie key by integer <END>
<BEG> returns an optional value for the give key k for those node between lowindex inclusive and highindex exclusive <END>
<BEG> construct a hash map <END>
<BEG> a curried version of { link # get object } <END>
<BEG> determines if the give key value exist in this hash map <END>
<BEG> returns all key entry in this hash map <END>
<BEG> inserts the give key and value association into the hash map <END>
<BEG> deletes the entry in the hash map that correspond to the give key <END>
<BEG> deletes the entry in the hash map that correspond to the give key and return any associated value <END>
<BEG> deletes the give element from this hash set <END>
<BEG> returns a list projection of this hash set <END>
<BEG> returns a heterogeneous list consist of an element and another list <END>
<BEG> convert io to a safeio <SEG> throw any ioexception wrap inside a runtimeexception param io <END>
<BEG> an io monad that read line from the give file use a { link bufferedreader } and pass line to the provide iteratee <END>
<BEG> an io monad that read char chunk from the give file and pass them to the give iteratee <END>
<BEG> an io monad that read char chunk from the give file and pass single char to the give iteratee <END>
<BEG> read line from stdin until condition be not meet <SEG> transform each line and print the result to stdout <END>
<BEG> wraps the give iterable <END>
<BEG> provides a function that wrap the give iterable <END>
<BEG> performs a bind across each element of all iterables of an iterable <SEG> collect the value in an iterable <END>
<BEG> the first-class bind function over iterable <END>
<BEG> returns a function that join an iterable of iterables into a single iterable <END>
<BEG> maps a give function across the wrapped iterable <END>
<BEG> the catamorphism for iterables <SEG> implement a a left fold <END>
<BEG> returns a java util list implementation for this iterable <END>
<BEG> a function that convert list to array enum set <END>
<BEG> a function that convert list to copy on write array list <END>
<BEG> a function that convert string buffer to array block queue <END>
<BEG> a function that convert link hash set to list <END>
<BEG> a function that convert copy on write array list to list <END>
<BEG> constructs a lazy string from a stream of character <END>
<BEG> gives a stream representation of this lazy string <END>
<BEG> returns true if the give lazy string be a substring of this lazy string <END>
<BEG> splits this lazy string by character match the give predicate <END>
<BEG> splits this lazy string into word by space <END>
<BEG> splits this lazy string into line <END>
<BEG> joins the give stream of lazy string into one <SEG> separate by newlines <END>
<BEG> first-class successor function <END>
<BEG> divide a natural number by another yield both the quotient and the remainder <END>
<BEG> return the biginteger value of this natural number <END>
<BEG> sums a stream of natural number <END>
<BEG> takes the product of a stream of natural number <END>
<BEG> returns a nonemptylist of the sublists of this list <END>
<BEG> returns a < code > list < code > projection of this list <END>
<BEG> return a non-empty list with the give head and tail <END>
<BEG> returns a potential non-empty list from the give list <END>
<BEG> perform an equality test on this list which delegate to the equal method of the member instance <END>
<BEG> combine all target use a target 's { link monoid } <END>
<BEG> get all the target of a { link fold } todo : shall it return a stream a there might be an infinite number of target ? <END>
<BEG> find the first target of a { link fold } match the predicate <END>
<BEG> get the first target of a { link fold } <END>
<BEG> check if at least one target satisfy the predicate <END>
<BEG> join two { link fold } with the same target <END>
<BEG> pair two disjoint { link getter } <END>
<BEG> create an { link iso } use a pair of function : one to get the target and one to get the source <END>
<BEG> modify polymorphically the target of a { link piso } with an applicative function <END>
<BEG> modify polymorphically the target of a { link piso } with a function <END>
<BEG> compose a { link plens } with an { link piso } <END>
<BEG> create a { link getter } from the modify target to the modify source of a { link pprism } <END>
<BEG> returns < code > false < code > if this optional value have a value <SEG> < code > true < code > otherwise <END>
<BEG> returns the length of this optional value ; 1 if there be a value <SEG> 0 otherwise <END>
<BEG> returns the value of this optional value or the give argument <END>
<BEG> returns the value of this optional value or fail with the give message <END>
<BEG> maps the give function across this optional value <END>
<BEG> binds the give function across the element of this optional value with a final join <END>
<BEG> binds the give function across the element of this optional value and the give optional value with a final join <END>
<BEG> performs a bind across the optional value <SEG> but ignore the element value in the function <END>
<BEG> returns this optional value if there be one <SEG> otherwise <SEG> return the argument optional value <END>
<BEG> returns the value from this optional value <SEG> or if there be no value <SEG> return < code > null < code > <END>
<BEG> returns < code > true < code > if this optional value have no value <SEG> or the predicate hold for the give predicate function <SEG> < code > false < code > otherwise <END>
<BEG> constructs an optional value that have a value of the give argument <END>
<BEG> constructs an optional value that have no value <END>
<BEG> turns an unsafe nullable value into a safe optional value <END>
<BEG> first-class catamorphism for option : return a function that will perform a reduction on an optional value use the give argument <END>
<BEG> sequence through the option monad <END>
<BEG> returns an optional value that have a value of the give argument <SEG> if the give predicate hold on that argument <SEG> otherwise <SEG> return no value <END>
<BEG> returns an optional value that have a value of the give argument if the give boolean be true <SEG> otherwise <SEG> return no value <END>
<BEG> returns an optional non-empty string <SEG> or no value if the give string be empty <END>
<BEG> returns a function that transform a string to an optional non-empty string <SEG> or no value if the string be empty <END>
<BEG> returns a function that take an optional value to a value or error if there be no value <END>
<BEG> promotes a function of arity-2 so that it operate over option <END>
<BEG> creates a priority queue from a finger tree <END>
<BEG> an empty priority queue with integer priority <END>
<BEG> filters node base on the value inside each node <END>
<BEG> if the tree be not empty <SEG> return the node with high priority otherwise return nothing <END>
<BEG> returns all the element of the queue with the high same priority <END>
<BEG> adds a node with priority k and value a <END>
<BEG> does the priority k exist already ? <END>
<BEG> removes the node with the high priority <END>
<BEG> returns a tuple of the node with the high priority and the rest of the priority queue <END>
<BEG> removes the top n element with the high priority <END>
<BEG> converts this sequence to a stream <END>
<BEG> converts the sequence to a java util list <END>
<BEG> inserts the element at the give index <END>
<BEG> performs a reduction on this stream use the give argument <END>
<BEG> takes the first 2 element of the stream and apply the function to them <SEG> then apply the function to the result and the third element and so on <END>
<BEG> returns the head of this stream if there be one or the give argument if this stream be empty <END>
<BEG> intersperses the give value between each two element of the stream <END>
<BEG> provides a first-class version of the map function <END>
<BEG> returns a new stream of all the item in this stream that do not appear in the give stream <END>
<BEG> turn a stream of function into a function return a stream <END>
<BEG> maps the give function of arity-2 across this stream and return a function that apply all the result function to a give argument <END>
<BEG> constructs a stream with the give element <END>
<BEG> returns a stream use the give enumerator from the give value to the other give value step at the give increment <END>
<BEG> zips this stream with the give stream of function <SEG> apply each function in turn to the corresponding element in this stream to produce a new stream <END>
<BEG> prepends con the give element to this stream to product a new stream <END>
<BEG> returns a string from the give stream of character <END>
<BEG> returns a stream of character from the give string <END>
<BEG> append the give element to this stream to produce a new stream <END>
<BEG> drops the give number of element from the head of this stream if they be available <END>
<BEG> returns the first element of the head of this stream that match the give predicate function <END>
<BEG> returns a new stream result from replace all element that match the give predicate with the give element <END>
<BEG> returns a tuple where the first element be the long prefix of this stream that do not satisfy the give predicate and the second element be the remainder of the stream <END>
<BEG> get the last element of this stream <END>
<BEG> binds the give function across the stream of substreams of this stream <END>
<BEG> returns a stream of all prefix of this stream <END>
<BEG> returns the position of the first element match the give predicate <SEG> if any <END>
<BEG> converts a function of an enumerable type to a stream of the result of that function <SEG> start at the give index <END>
<BEG> transforms a stream of pair into a stream of first component and a stream of second component <END>
<BEG> returns a function that determine whether a give stream be empty <END>
<BEG> returns a stream of one element contain the give value <END>
<BEG> returns a function that yield a stream contain it argument <END>
<BEG> prepends the give head element to the give tail element to produce a new stream <END>
<BEG> unfolds across the give function start at the give value to produce a stream <END>
<BEG> creates a stream where the first item be calculate by apply the function on the third argument <SEG> the second item by apply the function on the previous result and so on <END>
<BEG> returns an infinite-length stream of the give element cycle <END>
<BEG> returns all value in this tree map <END>
<BEG> returns an iterator for this map 's key-value pair <END>
<BEG> a mutable map projection of this tree map <END>
<BEG> an immutable projection of the give mutable map <END>
<BEG> modifies the value for the give key <SEG> if present <SEG> by apply the give function to it <END>
<BEG> splits this treemap at the give key <END>
<BEG> a first-class function that return the product-4 representation of a give zipper <END>
<BEG> an equal instance for tree zipper <END>
<BEG> navigates to the parent of the current location <END>
<BEG> navigates to the top-most parent of the current location <END>
<BEG> navigates to the give child of the current location <SEG> start at index 0 <END>
<BEG> creates a new tree zipper focus on the root of the give tree <END>
<BEG> creates a new tree zipper focus on the first element of the give forest <END>
<BEG> returns the tree contain this location <END>
<BEG> returns the tree at the currently focus node <END>
<BEG> indicates whether the current node be at the top of the tree <END>
<BEG> indicates whether the current node be the leftmost tree in the current forest <END>
<BEG> indicates whether the current node be a child node of another node <END>
<BEG> indicates whether the current node have any child node <END>
<BEG> replaces the current node with the give tree <END>
<BEG> modifies the label at the current node with the give function <END>
<BEG> returns the label at the current node <END>
<BEG> inserts a tree to the left of the current position <END>
<BEG> inserts a tree a the first child of the current node <END>
<BEG> inserts a tree at the specified location in the current node 's stream of child <END>
<BEG> removes the current node from the tree <END>
<BEG> maps the give function across this zipper covariant functor pattern <END>
<BEG> first-class conversion of a tree to the corresponding tree zipper <END>
<BEG> maps the give function over the tree of all position for this zipper comonad pattern <END>
<BEG> zips this treezipper with another <SEG> apply the give function lock-step over both zipper in all direction <END>
<BEG> returns the fail value <SEG> or throw an error if there be no fail value <END>
<BEG> the catamorphism for validation <END>
<BEG> returns an either projection of this validation <END>
<BEG> returns the success value or fail with the give error message <END>
<BEG> maps the give function across the success side of this validation <END>
<BEG> binds the give function across this validation 's success value if it have one <END>
<BEG> anonymous bind through this validation <END>
<BEG> if list contain a failure <SEG> return a failure of the reduction of all the failure use the semigroup <SEG> otherwise return the successful list <END>
<BEG> function application on the success value <END>
<BEG> accumulates error on the failing side of this or any give validation if one or more be encounter <SEG> or apply the give function if all succeed and return that value on the successful side <END>
<BEG> if the list contain a failure <SEG> return a validation of the list of fails in the list <SEG> otherwise return a successful validation with the list of successful value <END>
<BEG> puts this validation 's fail value in a non-empty list if there be one <END>
<BEG> returns a function that construct a validation with an either <END>
<BEG> returns a function that construct an either with a validation <END>
<BEG> returns a failing validation contain a non-empty list that contain the give value <END>
<BEG> returns a validation base on a boolean condition <END>
<BEG> partitions the list into the list of fails and the list of success <END>
<BEG> puts element in a vector-2 <END>
<BEG> returns a function that put element in a vector-2 <END>
<BEG> creates a vector-2 from a homogeneous product-2 <END>
<BEG> a first-class function to get the first element of a vector <END>
<BEG> returns a homogeneous product-2 equivalent to this vector <END>
<BEG> returns a nonempty list with the element of this vector <END>
<BEG> returns a function that transform a vector-2 to the equivalent product-2 <END>
<BEG> returns an array with the element of this vector <END>
<BEG> zips this vector with the give vector to produce a vector of vector <END>
<BEG> return the first element of this vector a a product-1 <END>
<BEG> creates a vector-3 from a head and a tail <END>
<BEG> returns the second element of this vector <END>
<BEG> returns all but the first element of this vector <SEG> a a vector-2 <END>
<BEG> returns the first element of this vector <SEG> a a product-1 <END>
<BEG> a contra-variant functor on effect <END>
<BEG> returns < code > true < code > if the two give argument be not equal <SEG> < code > false < code > otherwise <END>
<BEG> first-class equality check <END>
<BEG> partially apply equality check <END>
<BEG> maps the give function across this equal a a contra-variant functor <END>
<BEG> an equal instance <SEG> which revert equality for self return a new equal instance <END>
<BEG> begin definition of an equal instance <END>
<BEG> constructs an equal instance from the give function <END>
<BEG> constructs an equal instance from the give alternative definition <END>
<BEG> an equal instance for the { link either } type <END>
<BEG> equal instance for set <END>
<BEG> helper method to implement { link object # equal object } correctly <END>
<BEG> function composition param g a function to compose with this one <END>
<BEG> binds a give function across this function reader monad <END>
<BEG> function application in an environment applicative functor <END>
<BEG> promotes this function to map over a product-1 <END>
<BEG> promotes this function to map over an optional value <END>
<BEG> returns a function that contramaps over a give actor <END>
<BEG> promotes this function to a concurrent function that return a promise of a value <END>
<BEG> promotes this function so that it return it result on the left side of an either <END>
<BEG> promotes this function to map over the left side of an either <END>
<BEG> returns a function that return the left side of a give either <SEG> or this function apply to the right side <END>
<BEG> promotes this function to return it value in an iterable <END>
<BEG> promotes this function to map over iterables <END>
<BEG> returns a function that map this function over a tree and fold it with the give monoid <END>
<BEG> promotes this function to map over both element of a pair <END>
<BEG> maps this function over a synchronousqueue <END>
<BEG> both map with g and contramap with f the target function <END>
<BEG> partial application <END>
<BEG> lifts the function into the fully feature function wrapper <END>
<BEG> curries this wrap function to a wrapped function of arity-1 that return another wrapped function <END>
<BEG> flips the argument of this function <END>
<BEG> promotes this function to a function on non-empty list <END>
<BEG> promotes this function to zip two array <SEG> apply the function lock-step over both arrays <END>
<BEG> promotes this function to zip two non-empty list <SEG> apply the function lock-step over both list <END>
<BEG> sums a list of big integer <END>
<BEG> returns the product of a list of big integer <END>
<BEG> returns true if all the element of the give list be true <END>
<BEG> map give function to the predicate function param p predicate to be map over param f function return predicate function <END>
<BEG> alias for contramap param p predicate to be map over param f function return predicate function <END>
<BEG> return inverse of contramap param p predicate to be map over param f function return predicate function <END>
<BEG> compose the give predicate use exclusive disjunction param p1 first predicate param p2 second predicate return compose predicate function <END>
<BEG> return compose predicate use disjunction param p1 first predicate param p2 second predicate return compose predicate <END>
<BEG> returns compose predicate param l a stream of predicate return compose predicate <END>
<BEG> returns a composed predicate of give list of predicate param l a list of predicate function return compose predicate function <END>
<BEG> returns true if any element of the give list be true <END>
<BEG> negates the give predicate <END>
<BEG> curried form of conditional <END>
<BEG> returns the product of a list of double <END>
<BEG> returns the first value available in the give list of optional value <END>
<BEG> returns the first non- < code > null < code > value in the give list of optional value <END>
<BEG> returns the first value find in the list of visitor after application of the give value <SEG> otherwise return the give default <END>
<BEG> returns the first non- < code > null < code > value find in the list of visitor after application of the give value <SEG> otherwise return the give default <END>
<BEG> function application with the argument flip <END>
<BEG> function composition <END>
<BEG> the identity transformation <END>
<BEG> returns a function that give an argument <SEG> return a function that ignore it argument <END>
<BEG> returns a function that ignore it argument to constantly produce the give value <END>
<BEG> simultaneously covaries and contravaries a function <END>
<BEG> return a function that inspect the argument of the give function for a < code > null < code > value and if so <SEG> do not apply the value <SEG> instead return an empty optional value <END>
<BEG> binds the function in the second argument to the function in the first argument <END>
<BEG> binds the give function < em > f < em > to the value of the give function <SEG> with a final join <END>
<BEG> applies a give function over the argument of another function of arity-2 <END>
<BEG> promotes a function of arity-2 to a higher-order function <END>
<BEG> partial application of the second argument to the supply function to get a function of type { code a - > c } <END>
<BEG> partial application of the third argument to the supply function to get a function of type { code a - > b - > d } <END>
<BEG> partial application of the fourth argument to the supply function to get a function of type { code a - > b - > c - > e } <END>
<BEG> construct a hash with the give hash function <END>
<BEG> a hash that use { link object # hashcode } <END>
<BEG> a hash instance for a product-1 <END>
<BEG> param seed return product of seed and value <END>
<BEG> sums the two give argument <END>
<BEG> returns a function that sum the give value accord to this monoid <END>
<BEG> returns a function that sum accord to this monoid <END>
<BEG> the zero value for this monoid <END>
<BEG> sums the give value with right-fold <END>
<BEG> returns a function that sum the give value with left-fold <END>
<BEG> constructs a monoid from the give definition <SEG> which must follow the monoidal law <END>
<BEG> constructs a monoid from the give semigroup definition and zero value <SEG> which must follow the monoidal law <END>
<BEG> lift a { code semigroup < a > } for a to a { code monoid < option < a > > } <SEG> use option none a zero <END>
<BEG> a monoid for io value <END>
<BEG> a monoid for the maximum of element with order o <END>
<BEG> first-class ordering <END>
<BEG> returns an < code > equal < code > for this order <END>
<BEG> returns < code > true < code > if the first give argument be less than the second give argument <SEG> < code > false < code > otherwise <END>
<BEG> returns < code > true < code > if the first give argument be less than or equal to the second give argument <SEG> < code > false < code > otherwise <END>
<BEG> returns a function that return true if it argument be less than the argument to this method <END>
<BEG> returns a function that return true if it argument be great than than the argument to this method <END>
<BEG> returns the great of it two argument <END>
<BEG> static version of { link # contramap f } <END>
<BEG> returns an order instance that use the give equality test and order function <END>
<BEG> returns an order instance that use the give minimal equality test and order definition <END>
<BEG> an order instance for a product-2 <SEG> with the first factor consider most significant <END>
<BEG> an order instance for the < code > comparable < code > interface <END>
<BEG> an order instance that use { link object # hashcode } for compute the order and equality <SEG> thus object return the same hashcode be consider to be equal <END>
<BEG> an order instance that use { link object # hashcode } and { link object # equal } for compute the order and equality <END>
<BEG> a function that put an element in a product-1 <END>
<BEG> convert a f0 into a p1 <SEG> use call-by-need semantic : function f be evaluate at most once <SEG> at first to { link p1 # _1 } <END>
<BEG> convert a f0 into a p1 <SEG> use weak call-by-need semantic : function f be evaluate at first call to { link p1 # _1 } and at each subsequent call if and only if the reference have be garbage collect <END>
<BEG> convert a f0 into a p1 <SEG> use soft call-by-need semantic : function f be evaluate at first call to { link p1 # _1 } and at each subsequent call if and only if the reference have be garbage collect due of shortage of memory ie <END>
<BEG> a function that put element in a product-2 <END>
<BEG> promotes the give function so that it return it value in a p1 <END>
<BEG> a first-class version of the sequence method for list of p1s <END>
<BEG> turns an optional p1 into a lazy option <END>
<BEG> traversable instance of p1 for list param f the function that take a and produce a list < b > non-deterministic result return a list of p1 < b > <END>
<BEG> traversable instance of p1 for either param f the function produce either return an either of p1 < b > <END>
<BEG> traversable instance of p1 for option param f the function that produce option return an option of p1 < b > <END>
<BEG> deprecate since 4 7 <END>
<BEG> swaps the element around in this product <END>
<BEG> map the first element of the product <END>
<BEG> split this product between two argument function and combine their output <END>
<BEG> duplicates this product on the first element <SEG> and map the give function across the duplicate comonad pattern <END>
<BEG> provides a memoising p2 that remember it value <END>
<BEG> promotes a function so that it map the first element of a product <END>
<BEG> sends the give input value to both argument function and combine their output <END>
<BEG> maps the give function across both the element of the give product <END>
<BEG> transforms a curried function of arity-2 to a function of a product-2 param f a curried function of arity-2 to transform into a function of a product-2 return the function <SEG> transform to operate on on a product-2 <END>
<BEG> transforms a function of a product-2 to an uncurried function or arity-2 <END>
<BEG> parses the input to produce a result or error <END>
<BEG> maps the parse input type through an invariant functor <END>
<BEG> returns a parser that fail with the give error if the result value do not meet the give predicate <END>
<BEG> binds the give function across the parser with a final join <END>
<BEG> binds anonymously <SEG> ignore the result value <END>
<BEG> performs function application within a parser <END>
<BEG> returns a parser that try this parser and if it fail <SEG> then try the give parser <END>
<BEG> returns a parser that negate this parser <END>
<BEG> returns a parser that repeat application of this parser zero or many time <END>
<BEG> maps the give function across this parser 's error <END>
<BEG> returns a parser that compute use the give function <END>
<BEG> constructs a parser that always return the give value <END>
<BEG> sequence the list of parser through { link # bind } <END>
<BEG> the remainder of the parse input <END>
<BEG> maps the give function across the remainder of the parse input <END>
<BEG> first-class function mapping across the remainder of the parse input <END>
<BEG> a bifunctor map across both the remainder of the parse input and the parse value <END>
<BEG> first-class construction of a result <END>
<BEG> sums the give value with left-fold <SEG> shortcutting the computation as early a possible <END>
<BEG> lifts the semigroup to obtain a trivial monoid <END>
<BEG> constructs a monoid from this semigroup and a zero value <SEG> which must follow the monoidal law <END>
<BEG> a semigroup which always use the first left-hand side value <END>
<BEG> a semigroup for list <END>
<BEG> a semigroup for non-empty list <END>
<BEG> a semigroup for optional value that take the first available value <END>
<BEG> returns the display rendering of the give argument <END>
<BEG> returns the display rendering of the give argument a a < code > string < code > <END>
<BEG> prints the give argument to the standard output stream <END>
<BEG> returns a show instance use the give function <END>
<BEG> a show instance for the { link p2 tuple-2 } type in the style of a mapping from a to b <END>
<BEG> a show instance for the { link p2 tuple-2 } type <END>
<BEG> returns the transformation equivalent for the stream show <END>
<BEG> a show instance for heterogeneous streams <END>
<BEG> promotes the try0 to a validation that return an exception on the failure side and it result on the success side <END>
<BEG> the only value of the unit type <END>
<BEG> returns an unchecked { link consumer } that will < em > sneaky throw < em > if an exception occur when accept a value <END>
<BEG> creates a { code checkedfunction0 } base on < ul > < li > < a href= http : doc oracle com javase tutorial java javaoo methodreferences html > method reference < a > < li > < li > < a href= http : doc oracle com javase tutorial java javaoo lambdaexpressions html # syntax > lambda expression < a > < li > < ul > examples w l o g <END>
<BEG> narrows the give { code checkedfunction0 < ? <END>
<BEG> returns a curried version of this function <END>
<BEG> checks if this function be memoizing = caching compute value <END>
<BEG> return a composed function that first applies this checkedfunction0 to the give argument and in case of throwable try to get value from { code recover } function with same argument and throwable information <END>
<BEG> returns an unchecked function that will < em > sneaky throw < em > if an exception occur when apply the function <END>
<BEG> returns a composed function that first applies this checkedfunction0 to the give argument and then applies { linkplain checkedfunction1 } { code after } to the result <END>
<BEG> negates this predicate <END>
<BEG> returns an unchecked { link runnable } that will < em > sneaky throw < em > if an exception occur when run the unit of work <END>
<BEG> enqueues the give element <END>
<BEG> returns the first element without modify it <END>
<BEG> returns the first element without modify the queue <END>
<BEG> dual of { linkplain # tailoption } <SEG> return all element except the last a { code option } <END>
<BEG> returns a singleton { code array } <SEG> i e <END>
<BEG> returns an array contain { code n } value of a give function { code f } over a range of integer value from 0 to { code n - 1 } <END>
<BEG> returns an array contain { code n } value supply by a give supplier { code s } <END>
<BEG> transforms this { code array } <END>
<BEG> system arraycopy with same source and destination <END>
<BEG> repeatedly group an array into equal size sub-trees <END>
<BEG> clone the source and set the value at the give position <END>
<BEG> clone the source and keep everything after the index pre-padding the value with null <END>
<BEG> create a single element array <END>
<BEG> fetch the leaf <SEG> correspond to the give index <END>
<BEG> creates a bitset from boolean value <END>
<BEG> creates a string of the give character <END>
<BEG> repeats a character { code time } time <END>
<BEG> returns the { code char } value at the specified index <END>
<BEG> returns the index of the first occurrence of the give element a an { code option } <END>
<BEG> returns the index of the first occurrence of the give element a an { code option } <SEG> start the search at the specified index <END>
<BEG> returns a string contain the character in this sequence in the same order a this sequence <END>
<BEG> converts the first character in this { code charseq } to upper case use the rule of the give { code locale } <END>
<BEG> decodes this { code charseq } into a { code byte } by call { link byte # decode string } <END>
<BEG> converts this { code charseq } to a { code byte } in the specify radix by call { link byte # valueof string <SEG> int } <END>
<BEG> returns the natural comparator for type u <SEG> i e <END>
<BEG> folds this element use the give associative binary operator <SEG> start with { code zero } and successively call { code combine } <END>
<BEG> returns a { link java util stream collector } which may be use in conjunction with { link java util stream stream # collect java util stream collector } to obtain a { link hashmap } <END>
<BEG> returns a hashmap containing tuples return by { code n } call to a give supplier { code s } <END>
<BEG> searches this sequence for a specific element use a binary search <END>
<BEG> add the give element to this set <SEG> replace exist one if it be already contain <END>
<BEG> adds all of the give element to this set <SEG> replace exist one if they be not already contain <END>
<BEG> returns the single instance of nil <END>
<BEG> performs an action on the head element of this { code list } <END>
<BEG> pushes a new element on top of this list <END>
<BEG> enqueues a new element <END>
<BEG> returns the first element of a non-empty { link priorityqueue } <END>
<BEG> returns a { link priorityqueue } contain { code size } value of a give function { code function } over a range of integer value from { code 0 } to { code size - 1 } <END>
<BEG> accumulates the element of this { link priorityqueue } by successively call the give function { code f } from the right <SEG> start with a value { code zero } of type b <END>
<BEG> checks if this { link priorityqueue } be know to have a finite size <END>
<BEG> checks if this { link priorityqueue } can be repeatedly traverse <END>
<BEG> returns this { code priorityqueue } if it be nonempty <SEG> otherwise { code priorityqueue } create from iterable <SEG> use exist comparator <END>
<BEG> returns this { code priorityqueue } if it be nonempty <SEG> otherwise { code priorityqueue } create from result of evaluate supplier <SEG> use exist comparator <END>
<BEG> returns an iterator that iterate element in the order induce by the underlying comparator <END>
<BEG> generates an theoretically infinitely long stream use a value supplier <END>
<BEG> generates a theoretically infinitely long stream use a repeatedly invoke supplier that provide a { code some } for each next value and a { code none } for the end <END>
<BEG> constructs a stream of a head element and a tail supplier <END>
<BEG> creates a stream value double value <END>
<BEG> appends itself to the end of stream with { code mapper } function <END>
<BEG> repeat the element of this stream infinitely <END>
<BEG> repeat the element of this stream { code count } time <END>
<BEG> extends continue this { code stream } with a constantly repeat value <END>
<BEG> extends continue this { code stream } with value provide by a { code supplier } param nextsupplier a supplier which will provide value for extend a stream return new { code stream } compose from this stream extend with value provide by the supplier <END>
<BEG> tests if this traversable contain all give element <END>
<BEG> checks <SEG> if a unique element exists such that the predicate hold <END>
<BEG> returns a new traversable consisting of all element which do not satisfy the give predicate <END>
<BEG> returns the first element of this which satisfy the give predicate <END>
<BEG> performs an action on each element <END>
<BEG> gets the first value in iteration order if this { code traversable } be not empty <SEG> otherwise throw <END>
<BEG> returns the first element of a non-empty traversable a { code option } <END>
<BEG> checks if this traversable may consist of distinct element only <END>
<BEG> checks if this traversable be empty <END>
<BEG> checks if this traversable be ordered return true <SEG> if this traversable be order <SEG> false otherwise <END>
<BEG> checks if the element of this traversable appear in encounter order <END>
<BEG> each of vavr 's collection may contain more than one element <END>
<BEG> calculates the maximum of this element accord to their natural order <END>
<BEG> calculates the maximum of this element use a specific comparator <END>
<BEG> calculates the maximum of this element within the co-domain of a specific function <END>
<BEG> joins the string representation of this element use a specific delimiter <SEG> prefix and suffix <END>
<BEG> checks <SEG> this { code traversable } be not empty <END>
<BEG> calculates the product of this element <END>
<BEG> accumulates the element of this traversable by successively call the give operation { code op } from the left <END>
<BEG> shortcut for { code isempty ? <END>
<BEG> returns a { link collector } which may be use in conjunction with { link java util stream stream # collect collector } to obtain a { link treemap } <END>
<BEG> creates a failed { code future } with the give { code exception } <SEG> back by the { link # default_executor } <END>
<BEG> creates a { code future } from a { link try } <SEG> back by the give { link executor } <END>
<BEG> creates a failed { code promise } <SEG> back by the { link future # default_executor } <END>
<BEG> makes a { code promise } that be n't fulfil yet <SEG> back by the give { link executor } <END>
<BEG> returns the { link executor } use by the underlie { link future } of this { code promise } <END>
<BEG> completes this { code promise } with the give { code value } <END>
<BEG> attempts to complete this { code promise } with the specify { code future } <SEG> once that { code future } be complete <END>
<BEG> constructs a { link right } param right the value <END>
<BEG> maps either the left or the right side of this disjunction <END>
<BEG> maps the value of an iterable to a sequence of mapped value into a single { code either } by transform an { code iterable < ? <END>
<BEG> reduces many { code either } s into a single { code either } by transform an { code iterable < either < l <SEG> r > > } into a { code either < l <SEG> seq < r > > } <END>
<BEG> gets the right value or an alternate value <SEG> if the project either be a left <END>
<BEG> gets the right value or throw <SEG> if the project either be a left <END>
<BEG> converts a { code left } to a { code right } vice versa by wrap the value in a new type <END>
<BEG> flatmaps this right-biased either <END>
<BEG> maps the value of this either if it be a left <SEG> perform no operation if this be a right <END>
<BEG> filters this right-biased { code either } by test a predicate <END>
<BEG> return the order-dependent hash of the two give integer <END>
<BEG> creates a new { code option } of a give value <END>
<BEG> returns the single instance of { code none } param < t > component type return the single instance of { code none } <END>
<BEG> creates { code some } of supplier value if condition be true <SEG> or { code none } in other case param < t > type of the optional value param condition a boolean value param supplier an optional value supplier <SEG> may supply { code null } return return { code some } of supplier 's value if condition be true <SEG> or { code none } in other case throw nullpointerexception if the give { code supplier } be null <END>
<BEG> creates { code some } of value if condition be true <SEG> or { code none } in other case param < t > type of the optional value param condition a boolean value param value an optional value <SEG> may be { code null } return return { code some } of value if condition be true <SEG> or { code none } in other case <END>
<BEG> wraps a java optional to a new option param optional a give optional to wrap in { code option } param < t > type of the value return { code some optional get } if value be java { code optional } be present <SEG> { code none } otherwise <END>
<BEG> runs a java runnable pass a parameter if this { code option } be empty <END>
<BEG> returns true <SEG> if this be { code some } <SEG> otherwise false <SEG> if this be { code none } <END>
<BEG> returns the value if this be a { code some } or the { code other } value if this be a { code none } <END>
<BEG> returns this { code option } if it be nonempty <SEG> otherwise return the alternative <END>
<BEG> returns this { code option } if it be nonempty <SEG> otherwise return the result of evaluate supplier <END>
<BEG> returns the value if this be a { code some } <SEG> otherwise the { code other } value be return <SEG> if this be a { code none } <END>
<BEG> returns the value if this be a { code some } <SEG> otherwise throw an exception <END>
<BEG> returns { code some value } if this be a { code some } and the value satisfy the give predicate <END>
<BEG> maps the value to a new { code option } if this be a { code some } <SEG> otherwise return { code none } <END>
<BEG> folds either the { code none } or the { code some } side of the option value <END>
<BEG> applies an action to this value <SEG> if this option be define <SEG> otherwise do nothing <END>
<BEG> creates a try of a checkedfunction0 <END>
<BEG> shortcut for { code filtertry predicate : :test <SEG> throwablesupplier } <SEG> see { link # filtertry checkedpredicate <SEG> supplier } } <END>
<BEG> shortcut for { code filtertry predicate : :test <SEG> errorprovider : :apply } <SEG> see { link # filtertry checkedpredicate <SEG> checkedfunction1 } } <END>
<BEG> shortcut for { code filtertry predicate : :test } <SEG> see { link # filtertry checkedpredicate } } <END>
<BEG> applies the action to the value of a success or do nothing in the case of a failure <END>
<BEG> creates a { code validation } of an { code either } <END>
<BEG> combines two { code validation } s into a { link builder } <END>
<BEG> gets the value if it be a valid or an value calculate from the error <END>
<BEG> converts this validation to an { link either } <END>
<BEG> whereas map only perform a mapping on a valid validation <SEG> and maperror performs a mapping on an invalid validation <SEG> bimap allow you to provide mapping action for both <SEG> and will give you the result base on what type of validation this be <END>
<BEG> applies a function f to the error of this validation if this be an invalid <END>
<BEG> combines two { code validation } s to form a { link builder } <SEG> which can then be use to perform further combine <SEG> or apply a function to it in order to transform the { link builder } into a { code validation } <END>
<BEG> evaluates this lazy value and cache it <SEG> when call the first time <END>
<BEG> checks <SEG> if this lazy value be evaluate <END>
<BEG> returns the object which could not be match <END>
<BEG> factory method for create a partial function that map a give { code value } to it underlie value <END>
<BEG> a combinator that check if < strong > all < strong > element of an { code iterable } satisfy the { code predicate } <END>
<BEG> creates a { code predicate } that test <SEG> if an object be equal to the specify { code value } use { link objects # equal object <SEG> object } for comparison <END>
<BEG> creates a { code predicate } that test <SEG> if an object be null < pre > { code predicate < integer > isnull = isnull ; isnull test null ; true isnull test 0 ; false } < pre > param < t > test object type return a new { code predicate } <END>
<BEG> creates the empty tuple <END>
<BEG> creates a { code tuple2 } from a { link map entry } <END>
<BEG> creates a tuple of one element <END>
<BEG> turns a sequence of { code tuple1 } into a tuple1 of { code seq } <END>
<BEG> turns a sequence of { code tuple2 } into a tuple2 of { code seq } s param < t1 > 1st component type param < t2 > 2nd component type param tuples an { code iterable } of tuples return a tuple of two { link seq } s <END>
<BEG> turns a sequence of { code tuple3 } into a tuple3 of { code seq } s param < t1 > 1st component type param < t2 > 2nd component type param < t3 > 3rd component type param tuples an { code iterable } of tuples return a tuple of three { link seq } s <END>
<BEG> turns a sequence of { code tuple4 } into a tuple4 of { code seq } s param < t1 > 1st component type param < t2 > 2nd component type param < t3 > 3rd component type param < t4 > 4th component type param tuples an { code iterable } of tuples return a tuple of 4 { link seq } s <END>
<BEG> turns a sequence of { code tuple5 } into a tuple5 of { code seq } s param < t1 > 1st component type param < t2 > 2nd component type param < t3 > 3rd component type param < t4 > 4th component type param < t5 > 5th component type param tuples an { code iterable } of tuples return a tuple of 5 { link seq } s <END>
<BEG> turns a sequence of { code tuple6 } into a tuple6 of { code seq } s param < t1 > 1st component type param < t2 > 2nd component type param < t3 > 3rd component type param < t4 > 4th component type param < t5 > 5th component type param < t6 > 6th component type param tuples an { code iterable } of tuples return a tuple of 6 { link seq } s <END>
<BEG> turns a sequence of { code tuple7 } into a tuple7 of { code seq } s param < t1 > 1st component type param < t2 > 2nd component type param < t3 > 3rd component type param < t4 > 4th component type param < t5 > 5th component type param < t6 > 6th component type param < t7 > 7th component type param tuples an { code iterable } of tuples return a tuple of 7 { link seq } s <END>
<BEG> append a value to this tuple <END>
<BEG> getter of the 1st element of this tuple <END>
<BEG> sets the 1st element of this tuple to the give { code value } <END>
<BEG> maps the component of this tuple use a mapper function <END>
<BEG> converts the tuple to java util map entry { code tuple } <END>
<BEG> maps the 1st component of this tuple to a new value <END>
<BEG> shortcut for { code exist e - > objects equal e <SEG> element } <SEG> test if the give { code element } be contained <END>
<BEG> tests whether every element of this iterable relate to the corresponding element of another iterable by satisfy a test predicate <END>
<BEG> a < em > smooth < em > replacement for { code equal } <END>
<BEG> checks <SEG> if an element exists such that the predicate hold <END>
<BEG> checks <SEG> if the give predicate hold for all element <END>
<BEG> returns the underlie value if present <SEG> otherwise throw { code supplier get } <END>
<BEG> returns the underlie value if present <SEG> otherwise return the result of { code try of supplier get } <END>
<BEG> sends the string representation of this to the standard error stream { linkplain system # err } <END>
<BEG> converts this to a { link array } <END>
<BEG> converts this to a { link completablefuture } return a new { link completablefuture } contain the value <END>
<BEG> converts this to a java array with component type { code object } < pre > { code = [ ] of type object [ ] future < string > of - > { throw new error ; } tojavaarray = [ ok ] of type object [ ] try of - > ok tojavaarray = [ 1 <SEG> 2 <SEG> 3 ] of type object [ ] list of 1 <SEG> 2 <SEG> 3 tojavaarray } < pre > return a new java array <END>
<BEG> converts this to a java array have an accurate component type <END>
<BEG> overwrites give element with new value <END>
<BEG> or 's the give element with new value <END>
<BEG> adds a geometry to the current bounding geometry use an incremental algorithm for dynamic insertion <END>
<BEG> static method to construct the convex hull of a multi_vertex_geometry <END>
<BEG> returns true if the give path of the input multipath be convex <END>
<BEG> returns true if the envelope contain the other envelope boundary inclusive <END>
<BEG> const <END>
<BEG> intersects this envelope with the other and store result in this envelope <END>
<BEG> assigns the new vertexdescription by add or drop attribute <END>
<BEG> adds a new attribute to the geometry <END>
<BEG> returns tight conservative box of the geometry in 3d <END>
<BEG> calculates the area of the geometry <END>
<BEG> returns true if this geometry have the z attribute return true if this geometry have the z attribute <END>
<BEG> the output of this method can be only use for debug <END>
<BEG> resets the interval_tree_impl to an empty state <SEG> but maintain a handle on the current interval <END>
<BEG> returns the number of interval store in the interval_tree_impl <END>
<BEG> gets an iterator on the interval_tree_impl use the input envelope_1d interval a the query <END>
<BEG> gets an iterator on the interval_tree_impl <END>
<BEG> call this method to add geometry to the cursor <END>
<BEG> gets the only geometry without the spatial reference from the mapgeometry <END>
<BEG> returns an estimate of this object size in byte <END>
<BEG> returns one value with the sign of another like copysign <END>
<BEG> calculates sign of the give value <END>
<BEG> rounds towards zero <END>
<BEG> c fmod function <END>
<BEG> rounds double to the close integer value <END>
<BEG> returns the segment count in the give multipath path <END>
<BEG> returns a segmentiterator that be set to a specific vertex of the multipath <END>
<BEG> adds a point to this multipoint with give x <SEG> y coordinate <END>
<BEG> adds a point to this multipoint with give x <SEG> y <SEG> z coordinate <END>
<BEG> appends point from another multivertexgeometryimpl at the end of this one <END>
<BEG> resizes the multipoint to have the give size <END>
<BEG> returns give vertex of the geometry by value <END>
<BEG> returns xy coordinate a an array <END>
<BEG> returns the total vertex count in this geometry <END>
<BEG> \internal calculates loose envelope <END>
<BEG> notifies the geometry of change make to the vertex so that it could reset cached structure <END>
<BEG> param bexact true <SEG> when the exact envelope need to be calculate and false for the loose one <END>
<BEG> \internal updates x <SEG> y interval <END>
<BEG> clips geometry with envelope2d <END>
<BEG> returns a reference to the singleton <END>
<BEG> checks the tracker and throw usercancelexception if tracker be not null and progress return false param tracker can be null <SEG> then the method do nothing <END>
<BEG> sets the right_side info to true or false <END>
<BEG> returns the distance to the close vertex or coordinate <END>
<BEG> returns true if the close coordinate be to the right of the multipath <END>
<BEG> gets an iterator on the quadtree use the input envelope2d a the query <END>
<BEG> returns a void to the impl class <END>
<BEG> resets the quad_tree_impl to the give extent and height <END>
<BEG> inserts the element and bounding_box into the quad_tree_impl at the give quad_handle <END>
<BEG> returns the element extent at the give element_handle <END>
<BEG> returns the extent of the ith unique element <END>
<BEG> returns the extent of all element in the quad tree <END>
<BEG> returns the extent of the quad tree <END>
<BEG> returns the height of the quad at the give quad_handle <END>
<BEG> returns the number of element in the subtree root at the give quad_handle <END>
<BEG> returns the number of element contain in the subtree root at the give quad_handle <END>
<BEG> returns the number of element in the quad tree that intersect the qiven query <END>
<BEG> gets a sorted iterator on the quad_tree_impl use the input envelope_2d a the query <END>
<BEG> sets up the rasterizer <END>
<BEG> flushes any cached scan <END>
<BEG> adds edge of a triangle <END>
<BEG> adds edge of the ring to the rasterizer <END>
<BEG> call before start the edge <END>
<BEG> renders all edge add so far <SEG> and remove them <END>
<BEG> creates an instance of the spatial reference base on the provide well know id for the horizontal coordinate system <END>
<BEG> creates an instance of the spatial reference base on the provide well know text representation for the horizontal coordinate system <END>
<BEG> returns string representation of the class for debug purpose <END>
<BEG> initializes a zero transformation <END>
<BEG> transforms an array of point <END>
<BEG> multiplies this matrix on the left with the left matrix <END>
<BEG> transforms envelope param env the envelope that be to be transform <END>
<BEG> initializes an orhtonormal transformation from the src and dest rectangle <END>
<BEG> transforms size <END>
<BEG> sets this matrix to be the identity matrix <END>
<BEG> returns true if this matrix be the identity matrix <END>
<BEG> returns true for reflective transformation <END>
<BEG> returns true if this be an orthonormal transformation with the give tolerance <END>
<BEG> returns true <SEG> if this transformation do not have rotation and shear within the give tolerance <END>
<BEG> set this transformation to be a shift <END>
<BEG> sets the transformation to be a flip around the x axis <END>
<BEG> produces a transformation that swap x and y coordinate value <END>
<BEG> sets this transformation to be a rotation around point rotationcenter <END>
<BEG> flips the transformation around the x axis <END>
<BEG> rotates the transformation aroung a center point <END>
<BEG> sets all element to 0 <SEG> thus produce and invalid transformation <END>
<BEG> calculates the inverse transformation <END>
<BEG> returns the interpolation type for the attribute <END>
<BEG> returns the size of the persistence type in byte <END>
<BEG> returns the number of the component of the give semantics <END>
<BEG> returns default value for each ordinate of the vertex attribute with give semantics <END>
<BEG> checks if the give value be the default one <END>
<BEG> returns a packed array of double representation of all ordinate of attribute of a point <SEG> i e <END>
<BEG> this factory class allow to describe and create a vertexdescription instance <END>
<BEG> return the coordinate of a vector that be the corner of a box upper right or low left <SEG> assume a rectangular coordinate system <END>
<BEG> puts in range -180 & lt ; = lon_deg & lt ; = +180 <END>
<BEG> the delta longitude of a point-distance <END>
<BEG> the latitude of the horizontal axis e g <END>
<BEG> the square of the cartesian distance <END>
<BEG> calculates the great circle distance use the vincenty formula <SEG> simplify for a spherical model <END>
<BEG> converts a distance in the unit of the radius to degrees 360 degree be in a circle <END>
<BEG> converts < code > radians < code > multiple of the < code > radius < code > to distance in the unit of the radius e g <END>
<BEG> same a { link math # toradians double } but 3x faster multiply vs divide <END>
<BEG> decodes the give geohash into a longitude x and latitude y <END>
<BEG> returns min-max lon x <SEG> min-max lat y <END>
<BEG> array of geohashes 1 level below the basegeohash <END>
<BEG> helper method to encode a distance property with optional unit <END>
<BEG> reads the shape specification a define in the class javadocs <END>
<BEG> a convenience method to create a suitable numberformat for write number <END>
<BEG> given a string contain < i > dimension < i > value encode in it <SEG> separate by comma <SEG> return a string array of length < i > dimension < i > contain the value <END>
<BEG> a variation of { link # parselatitudelongitude string } that re-uses an output array <END>
<BEG> internal parses the remainder of a shape definition follow the shape 's name give a { code shapetype } already consumed via { link state # nextword } <END>
<BEG> parses the buffer operation apply to a parsed shape <END>
<BEG> parses a multipoint shape from the raw string -- a collection of point <END>
<BEG> parses an envelope aka rectangle shape from the raw string <END>
<BEG> parses a linestring shape from the raw string -- an ordered sequence of point <END>
<BEG> parses a multilinestring shape from the raw string -- a collection of line string <END>
<BEG> reads a shape from the current position <SEG> start with the name of the shape <END>
<BEG> internal <END>
<BEG> the < code > y < code > coordinate of where the circle axis intersect <END>
<BEG> all { link circle } implementation should use this definition of { link object # equal object } <END>
<BEG> internal aka linetopointdistance <END>
<BEG> internal : aka linetopointquadrant <END>
<BEG> called by relate to determine whether to return early if it find contains <SEG> instead of check the remain shape <END>
<BEG> get a config option by name <END>
<BEG> check if two array be equal <END>
<BEG> count miss item in an array <END>
<BEG> count item from a different array contain in an array <END>
<BEG> check if array contains item <END>
<BEG> compare two item for equality ; if both be { code null } they be regard a equal <END>
<BEG> get the union of two array <END>
<BEG> check if provide array be empty param array - array to check return true if array be null or empty <END>
<BEG> convert an array to a string use a custom delimiter <END>
<BEG> the first port <SEG> or 0 if no port be give <END>
<BEG> remove the first occurrence of the specified listener from this container <SEG> if it be present <END>
<BEG> notify all listener in this container with the give notification <END>
<BEG> notify all listener in this container with the give notification use the give executor <END>
<BEG> return an integer one less than the give integer <SEG> or throw { link arithmeticexception } if the give integer be zero <END>
<BEG> return label token id this index be for <END>
<BEG> return property key token id this index be for <END>
<BEG> param tokennamelookup use for look up name for token id <END>
<BEG> check if record format have same format family param recordformats1 first record format param recordformats2 second record format return true if format have the same format family <END>
<BEG> should be call every now and then to check for safe threshold of buffered chunk and potentially release them onto the { link consumer } <END>
<BEG> closes this buffer <SEG> release all { link # offer long } value into the { link consumer } <END>
<BEG> checks if the give id be reserve <SEG> i e <END>
<BEG> prepare for rotation <END>
<BEG> [ lll <SEG> llle ] [ eeee <SEG> tttt ] [ kkkk <SEG> kkkk ] [ kkkk <SEG> kkkk ] [ kkkk <SEG> kkkk ] <END>
<BEG> clears this record to it initial state <END>
<BEG> sets a secondary record unit id for this record <END>
<BEG> return secondary record unit id set by { link # setsecondaryunitid long } <END>
<BEG> gets the sum of the size of the block in this record <SEG> in byte <END>
<BEG> the previous pointer <SEG> i e <END>
<BEG> calculates which page a record with the give { code id } should go into <END>
<BEG> calculates which offset into the right page have by { link # pageidforrecord long <SEG> int <SEG> int } the give { code id } live at <END>
<BEG> determine type of a store base on a store file name <END>
<BEG> return byte value represent this log entry version <END>
<BEG> return the correct { link logentryversion } for the give { code version } code read from f ex a log entry <END>
<BEG> clear the position and data <END>
<BEG> given the write position <SEG> how many longs be in use <END>
<BEG> only enable iff -ea be enable <END>
<BEG> append one byte into the print stream param value return <END>
<BEG> append { code atmost } count of byte into print stream param source param atmost return throw ioexception <END>
<BEG> append a part of byte buffer into print stream param bytes param offset param length return <END>
<BEG> return whether or not the manage reference have be initialize <SEG> i e { link # get evaluate } for the first time <SEG> or after { link # invalidate invalidate } <END>
<BEG> compares two number give some amount of allow error <END>
<BEG> returns true if both argument be equal or within the range of allow error inclusive <END>
<BEG> return total amount of physical memory in byte <SEG> or { link # value_unavailable } if underlying bean do not provide this functionality <END>
<BEG> return amount of virtual memory that be guarantee to be available to the run process in byte <SEG> or { link # value_unavailable } if underlying bean do not provide this functionality <END>
<BEG> return maximum number of file descriptor <SEG> or { link # value_unavailable } if underlying bean do not provide this functionality <END>
<BEG> return whether or not apply a transaction need to track and update high id of underlie store <END>
<BEG> return whether or not apply a transaction need to be extra cautious about idempotency <END>
<BEG> param startingid the first id return <END>
<BEG> return an { link idgenerator } that return id incrementally <SEG> start from 0 <END>
<BEG> return { link trackerfactory } create different { link tracker } instance depend on size <END>
<BEG> keeps label id for the give node id <END>
<BEG> returns the count degree of the request relationship chain <END>
<BEG> change number of processor assign to this { link parallelizable } <END>
<BEG> called once <SEG> when upstream have run out of batch to send and all receive batch have be process successfully <END>
<BEG> called from { link # process } <SEG> report progress so that statistic be update appropriately <END>
<BEG> param step a part of the max <SEG> not the projection <END>
<BEG> param stat statistic { link key } <END>
<BEG> essentially start a thread { link # submit object submitting } a stream of input which will each be process and asynchronically make available in order of process ticket by later call { link # next } <END>
<BEG> tells this processor that there will be no more submission and so { link # next } will stop blocking <SEG> wait for new process result <END>
<BEG> return next processed job block call <SEG> or { code null } if all job have be process and { link # shutdown boolean } have be call <END>
<BEG> the version of this titan graph database return <END>
<BEG> a predicate that determine whether { link # process com thinkaurelius titan diskstorage staticbuffer <SEG> java util map <SEG> scanmetrics } should be invoke for the give key <END>
<BEG> compares two { link java nio bytebuffer } s and check whether the first bytebuffer be small than the second <END>
<BEG> compares two { link java nio bytebuffer } s and check whether the first bytebuffer be small than or equal to the second <END>
<BEG> compares two { link java nio bytebuffer } s accord to their byte order and not the byte value <END>
<BEG> create a string from a char array with zero-copy if available <SEG> use reflection to access a package-protected constructor of string <END>
<BEG> sets the limit of the query if it be n't specify in the constructor param limit return <END>
<BEG> returns an iterable over all edge incident on the vertex return by the give iterable over vertex <END>
<BEG> returns an iterable over all edge contain in the subgraph span by the give vertex <END>
<BEG> this method can be override by extend class to return a sentinel object which will be use by the { link priorityqueue # priorityqueue int <SEG> boolean } constructor to fill the queue <SEG> so that the code which use that queue can always assume it 's full and only change the top without attempt to insert any new object < br > those sentinel value should always compare bad than any non-sentinel value i e <SEG> { link # lessthan } should always favor the non-sentinel value < br > by default <SEG> this method return false <SEG> which mean the queue will not be fill with sentinel value <END>
<BEG> adds an object to a priorityqueue in log size time <END>
<BEG> removes and return the least element of the priorityqueue in log size time <END>
<BEG> should be call when the object at top change value <END>
<BEG> returns the number of element currently store in the priorityqueue <END>
<BEG> this method return the internal heap array a object [ ] <END>
<BEG> converts a < code > double < code > value to a sortable sign < code > long < code > <END>
<BEG> converts ieee 754 representation of a double to sortable order or back to the original <END>
<BEG> increases the count of object o by inc and return the new count value param o param inc return <END>
<BEG> generate a salt for use with the bcrypt hashpw method param log_rounds the log2 of the number of round of hash to apply - the work factor therefore increase a 2 log_rounds <END>
<BEG> check that a plaintext password match a previously hash one param plaintext the plaintext password to verify param hash the previously-hashed password return true if the password match <SEG> false otherwise <END>
<BEG> returns the { code access } delegate { code getxxx input <SEG> offset } method to { code sun misc unsafe getxxx input <SEG> offset } <END>
<BEG> returns the { code access } to any { link bytebuffer } <END>
<BEG> returns the { code access } to { link charsequence } s back by { code char } read make in the specified byte order <END>
<BEG> reads { code [ offset <SEG> offset + 7 ] } bytes of the byte sequence represent by the give { code input } a a single { code long } value <END>
<BEG> shortcut for { code getint input <SEG> offset & 0xffffffffl } <END>
<BEG> returns a hash function implement < a href= http : github com google cityhash blob 8af9b8c2b889d80c22d6bc26ba0df1afb79a30db src city cc > cityhash64 algorithm <SEG> version 1 1 < a > without seed value <END>
<BEG> returns a hash function implement < a href= http : github com google cityhash blob 8af9b8c2b889d80c22d6bc26ba0df1afb79a30db src city cc > cityhash64 algorithm <SEG> version 1 1 < a > use the give seed value <END>
<BEG> returns a hash function implement so-called < a href= http : github com google farmhash blob a371645d2caa1685541d9963b94751c23b235c72 dev farmhashna cc > farmhashna algorithm < a > <SEG> without seed value <END>
<BEG> returns a hash function implement so-called < a href= http : github com google farmhash blob a371645d2caa1685541d9963b94751c23b235c72 dev farmhashna cc > farmhashna algorithm < a > <SEG> use the give seed value <END>
<BEG> returns a hash function implement so-called < a href= http : github com google farmhash blob a371645d2caa1685541d9963b94751c23b235c72 dev farmhashna cc > farmhashna algorithm < a > <SEG> use the two give seed value <END>
<BEG> returns a hash function implement so-called < a href= http : github com google farmhash blob 34c13ddfab0e35422f4c3979f360635a8c050260 dev farmhashuo cc > farmhashuo algorithm < a > without seed value <END>
<BEG> returns a hash function implement < a href= http : github com aappleby smhasher blob master src murmurhash3 cpp > murmurhash3 algorithm < a > without seed value <END>
<BEG> returns a hash function implement < a href= http : github com aappleby smhasher blob master src murmurhash3 cpp > murmurhash3 algorithm < a > with the give seed value <END>
<BEG> returns a hash function implement < a href= http : github com cyan4973 xxhash > xxhash algorithm < a > without a seed value 0 be use a default seed value <END>
<BEG> returns a hash function implement < a href= http : github com cyan4973 xxhash > xxhash algorithm < a > with the give seed value <END>
<BEG> returns a hash function implement < a href= http : github com wangyi-fudan wyhash blob 9f68c1b10166a54c17f55b284c21bd455fd0f7e2 wyhash h > wyhash algorithm <SEG> version 3 < a > without a seed value 0 be use a default seed value <END>
<BEG> returns a hash function implement < a href= http : github com wangyi-fudan wyhash blob 9f68c1b10166a54c17f55b284c21bd455fd0f7e2 wyhash h > wyhash algorithm <SEG> version 3 < a > with the give seed value <END>
<BEG> returns a hash function implement the 64 bit version of < a href= http : github com jandrewrogers metrohash > metrohash algorithm < a > with the give seed value <SEG> with the initialization vector for metrohash64_2 <END>
<BEG> shortcut for { link # hashbooleans boolean [ ] <SEG> int <SEG> int hashbooleans input <SEG> 0 <SEG> input length } <END>
<BEG> returns the hash code for the specified subsequence of the give { code boolean } array <END>
<BEG> shortcut for { link # hashbytes bytebuffer <SEG> int <SEG> int hashbytes input <SEG> input position <SEG> input remain } <END>
<BEG> returns the hash code of byte of the wild memory from the give address <END>
<BEG> returns the hash code for byte <SEG> a they lay in memory <SEG> of the specified subsequence of the give { code char } array <END>
<BEG> shortcut for { link # hashchars string <SEG> int <SEG> int hashchars input <SEG> 0 <SEG> input length } <END>
<BEG> param seed seed for the hash param input the type wrap by the access <SEG> ex <END>
<BEG> non-javadoc see org htmlcleaner contentnode # getcontent <END>
<BEG> todo : use { link optionaloutput } param translatespecialentities <END>
<BEG> return also return true if omit the html envelope <END>
<BEG> adds the condition to exist prune tag set <END>
<BEG> advancedxmlescape = true ; setusecdatafor script <SEG> style ; translatespecialentities = true ; recognizeunicodechars = true ; omitunknowntags = false ; treatunknowntagsascontent = false ; omitdeprecatedtags = false ; treatdeprecatedtagsascontent = false ; omitcomments = false ; omitxmldeclaration = optionaloutput alwaysoutput ; omitdoctypedeclaration = optionaloutput alwaysoutput ; omithtmlenvelope = optionaloutput alwaysoutput ; useemptyelementtags = true ; allowmultiwordattributes = true ; allowhtmlinsideattributes = false ; ignorequestandexclam = true ; namespacesaware = true ; keepheadwhitespace = true ; addnewlinetoheadandbody = true ; hyphenreplacementincomment = = ; prunetags = null ; allowtags = null ; booleanattributevalues = bool_att_self ; collapsenullhtml = collapsehtml none charset = utf-8 ; trimattributevalues = true ; taginfoprovider = html5tagprovider instance <END>
<BEG> get the prefix to use to try to make valid attribute name return <END>
<BEG> return true if < x > or < x > be permit <END>
<BEG> all node <END>
<BEG> see org htmlcleaner conditional itagnodecondition # satisfy org htmlcleaner tagnode <END>
<BEG> generates code for tag provider class from specify configuration xml file <END>
<BEG> return true to advise serializers to put line break after tag with such a display type <END>
<BEG> return true if tag content can have single lead or end whitespace <END>
<BEG> this will retrieve an integer represent the identify doctype <END>
<BEG> this will retrieve the public id of an externally referenced dtd <SEG> or an empty string if none be reference <END>
<BEG> deprecated - use getpublicid instead return <END>
<BEG> param rootnode the html cleaner root node to serialize return the w3c document object throw parserconfigurationexception if there 's an error during serialization <END>
<BEG> encapsulate content with < [ cdata [ ] ] > for thing like script and style element param element return true if < [ cdata [ ] ] > should be use <END>
<BEG> serialize a give html cleaner node <END>
<BEG> the html5 interactive tag 4 total <END>
<BEG> html5 phrasing tag -- text level semantics 31 total thelw data <END>
<BEG> html5 scripting tag <END>
<BEG> it return the tag information <END>
<BEG> basic version of the cleaning call <END>
<BEG> this method generally mutate flattened list of token into tree structure <END>
<BEG> param starttagtoken return true if no id attribute or class attribute <END>
<BEG> return transformations define for this instance of cleaner <END>
<BEG> for the specified node <SEG> return it 's content a string <END>
<BEG> for the specified tag node <SEG> define it 's html content <END>
<BEG> starts parse html <END>
<BEG> param seq may have a leading & and or trailing ; those will be remove prior to comparision return { link specialentity } if find <END>
<BEG> return { link # intvalue } cast to an char <END>
<BEG> return escaped value of the entity <END>
<BEG> adds new attribute transformation to this tag transformation <END>
<BEG> evaluates string template for specified map of variable <END>
<BEG> removes the first newline and last newline if present of a string param str return <END>
<BEG> removes the last newline if present of a string param str return <END>
<BEG> reads content from the specify url with specified charset into string param url param charset throw ioexception <END>
<BEG> checks if specify link be full url <END>
<BEG> calculates full url for specify page url and link which could be full <SEG> absolute or relative like there can be find in a or img tag <END>
<BEG> escapes html string param s string to be escape param prop cleaner property affect escape behaviour return <END>
<BEG> escapes xml string <END>
<BEG> attempts to replace invalid attribute name with valid one <END>
<BEG> param o return true if specify string be null of contains only whitespace character <END>
<BEG> param name return for xml element name or attribute name return prefix part before : or null if there be no prefix <END>
<BEG> param name return for xml element name or attribute name return name after prefix part after : <END>
<BEG> trims specify string from leave <END>
<BEG> checks whether specified object 's string representation be empty string containing of only whitespaces <END>
<BEG> determines whether the initial character of an identifier be valid for xml param identifier return <END>
<BEG> strips out invalid character from name use for xml elements and replaces them with the specify character <END>
<BEG> main public method for this class - a way to execute xpath expression against specify tagnode instance <END>
<BEG> filter node satisfy the condition param source param from param to <END>
<BEG> evaluates logic operation on two collection <END>
<BEG> see nu validator htmlparser impl treebuilder # start <END>
<BEG> return the document fragment <END>
<BEG> returns the dom implementation return the dom implementation see javax xml parser documentbuilder # getdomimplementation <END>
<BEG> returns < code > false < code > return < code > false < code > see javax xml parser documentbuilder # isvalidating <END>
<BEG> for api compatibility <END>
<BEG> parses a document from a sax < code > inputsource < code > <END>
<BEG> parses a document fragment from a sax < code > inputsource < code > <END>
<BEG> indicates whether nfc normalization of source be be check <END>
<BEG> toggles the checking of the nfc normalization of source <END>
<BEG> sets the policy for consecutive hyphen in comment <END>
<BEG> sets the policy for non-xml white space <END>
<BEG> whether the parser considers script to be enable for noscript treatment <END>
<BEG> sets whether the parser considers script to be enable for noscript treatment <END>
<BEG> returns the doctype expectation <END>
<BEG> whether < code > lang < code > be map to < code > xml : lang < code > <END>
<BEG> whether the < code > xmlns < code > attribute on the root element be pass to through <END>
<BEG> param reportingdoctype see nu validator htmlparser impl treebuilder # setreportingdoctype boolean <END>
<BEG> the policy for non-ncname element and attribute name <END>
<BEG> sets the encode sniffing heuristic <END>
<BEG> clones the attribute use an interner <END>
<BEG> creator for use when the xml violation policy require an attribute name to be change <END>
<BEG> queries whether this name be an xml 1 0 4th ed <END>
<BEG> queries whether this be an < code > xmlns < code > attribute <END>
<BEG> see nu validator htmlparser impl treebuilder # appendisindexprompt java lang object <END>
<BEG> allocates a new local name object <END>
<BEG> adjusts the start index to skip over the first character if it be a line feed and the previous character be a carriage return <END>
<BEG> see java io reader # read java nio charbuffer <END>
<BEG> see org xml sax xmlreader # getcontenthandler <END>
<BEG> allows < code > xmlreader < code > -level access to non-boolean value getters <END>
<BEG> see org xml sax xmlreader # parse org xml sax inputsource <END>
<BEG> parses a fragment <END>
<BEG> sets the lexical handler <END>
<BEG> see org xml sax xmlreader # seterrorhandler org xml sax errorhandler deprecate for validator nu internal use <END>
<BEG> sets a boolean feature without have to use non- < code > xmlreader < code > setter directly <END>
<BEG> param errorprofile see nu validator htmlparser impl errorreportingtokenizer # seterrorprofile set <END>
<BEG> see nu validator htmlparser impl treebuilder # appenddoctypetodocument java lang string <SEG> java lang string <SEG> java lang string <END>
<BEG> see nu validator htmlparser impl treebuilder # elementpopped string <SEG> java lang string <SEG> java lang object <END>
<BEG> see nu validator saxtree node # visit nu validator saxtree treeparser <END>
<BEG> see nu validator saxtree node # getnodetype <END>
<BEG> see org xml sax ext lexicalhandler # endcdata <END>
<BEG> see org xml sax ext lexicalhandler # endentity java lang string <END>
<BEG> copies the endlocator from another node <END>
<BEG> insert a new child before a pre-existing child and return the newly insert child <END>
<BEG> see org xml sax contenthandler # character char [ ] <SEG> int <SEG> int <END>
<BEG> see org xml sax contenthandler # endelement java lang string <SEG> java lang string <SEG> java lang string <END>
<BEG> see org xml sax contenthandler # endprefixmapping java lang string <END>
<BEG> returns the name of this attribute in low case <END>
<BEG> returns the segment span the { linkplain # getname name } of this attribute <END>
<BEG> indicates whether this attribute have a value <END>
<BEG> returns the { linkplain characterreference # decode charsequence <SEG> boolean decode } value of this attribute <SEG> or < code > null < code > if it { linkplain # hasvalue have no value } <END>
<BEG> returns the segment span the { linkplain # getvalue value } of this attribute <SEG> or < code > null < code > if it { linkplain # hasvalue have no value } <END>
<BEG> returns the character use to quote the value <END>
<BEG> returns the start tag to which this attribute belongs <END>
<BEG> returns the raw not { linkplain characterreference # decode charsequence decode } value of the attribute <SEG> or null if the attribute { linkplain attribute # hasvalue have no value } <END>
<BEG> returns an iterator over the { link attribute } object in this list in order of appearance <END>
<BEG> populates the specified < code > map < code > with the name value pair from these attribute <END>
<BEG> returns the default maximum error count allow when parse attribute <END>
<BEG> returns the content of the specify { linkplain # populatemap map <SEG> boolean attribute map } a html attribute name value pair <END>
<BEG> outputs the content of the specify { linkplain # populatemap map <SEG> boolean attribute map } a html attribute name value pair to the specify < code > appendable < code > object <END>
<BEG> returns the < code > map < code > contain the name value entry to be output <END>
<BEG> writes the content of the { linkplain # getmap map } a html attribute name value pair to the specify < code > writer < code > <END>
<BEG> appends the content of the { linkplain # getmap map } a html attribute name value pair to the specify < code > appendable < code > object <END>
<BEG> returns the name of this character entity reference <END>
<BEG> returns the character entity reference name of the specified unicode code point <END>
<BEG> returns the character entity reference encode form of the specified unicode code point <END>
<BEG> returns a map of character entity reference name < code > string < code > to unicode code point < code > integer < code > <END>
<BEG> returns the character represent by this character reference <END>
<BEG> indicates whether this character reference be terminate by a semicolon < code > ; < code > <END>
<BEG> encodes the specified text <SEG> escape certain character into character reference <END>
<BEG> encodes the specified character into a character reference if { linkplain config # currentcharacterreferenceencodingbehaviour require } <END>
<BEG> { linkplain # encode charsequence encodes } the specified text <SEG> preserve line break <SEG> tab and space for render by convert them to markup <END>
<BEG> re-encodes the specified text <SEG> equivalent to { linkplain # decode charsequence decoding } and then { linkplain # encode charsequence encoding } again <END>
<BEG> returns the encoded form of the specified unicode code point <END>
<BEG> returns the < a href= numericcharacterreference html # decimalcharacterreference > decimal encode form < a > of the specified unicode code point <END>
<BEG> returns the specified unicode code point in < a target= _blank href= http : www unicode org report tr27 # notation > u+ notation < a > <END>
<BEG> parses a single encoded character reference text into a unicode code point <END>
<BEG> indicates whether the specified character would need to be encode in an attribute value <END>
<BEG> returns a filter < code > writer < code > that { linkplain # encode charsequence encodes } all text before pass it through to the specify < code > writer < code > <END>
<BEG> returns the parent of this element in the document element hierarchy <END>
<BEG> returns the nesting depth of this element in the document element hierarchy <END>
<BEG> returns the segment represent the < a target= _blank href= http : www w3 org tr rec-xml # dt-content > content < a > of the element <END>
<BEG> returns the end tag of the element <END>
<BEG> indicates whether this element have zero-length { linkplain # getcontent content } <END>
<BEG> returns the { link formcontrol } define by this element <END>
<BEG> returns the { linkplain element element } that be end by this end tag <END>
<BEG> returns the { linkplain endtagtype type } of this end tag <END>
<BEG> returns an xml representation of this end tag <END>
<BEG> returns the previous end tag match the specify { linkplain # getname name } and { linkplain endtagtype type } <SEG> start at the specified position <END>
<BEG> returns the { linkplain starttagtype type } of { linkplain starttag start tag } that be < i > usually < i > pair with an { linkplain endtag end tag } of this type to form an { link element } <END>
<BEG> returns the end tag { linkplain endtag # getname name } that be require to match a { linkplain # getcorrespondingstarttagtype corresponding } { linkplain starttag start tag } with the specify { linkplain starttag # getname name } <END>
<BEG> generates the html text of an { linkplain endtag end tag } of this type give the { linkplain starttag # getname name } of a { linkplain # getcorrespondingstarttagtype corresponding } { linkplain starttag start tag } <END>
<BEG> internal method for the construction of an { link endtag } object of this type <END>
<BEG> indicates whether the { linkplain # generatehtml string end tag text } be static <END>
<BEG> constructs a tag of this type at the specified position in the specify source document if it match all of the required feature <END>
<BEG> returns the { linkplain element # getname name } of the { link element } that constitues this form control type <END>
<BEG> indicates whether this control type cause the form to be < a target= _blank href= http : www w3 org tr html401 interact form html # submit-format > submit < a > <END>
<BEG> returns a collection of all the constituent { linkplain formcontrol form control } in this field <END>
<BEG> returns the constituent { link formcontrol } with the specify { linkplain formcontrol # getpredefinedvalue predefined value } <END>
<BEG> returns the first { link formcontrol } from this field <END>
<BEG> indicates whether the field allow multiple value <END>
<BEG> returns the number of constituent < a href= formcontrol html # uservaluecontrol > user value control < a > in this field <END>
<BEG> returns a collection of the { linkplain formcontrol # getpredefinedvalue predefined value } of all constituent { linkplain formcontrol control } in this field <END>
<BEG> returns a list of the < a href= # fieldsubmissionvalues > field submission value < a > in order of appearance <END>
<BEG> sets the < a href= # fieldsubmissionvalues > field submission value < a > of this field to the single specify value <END>
<BEG> adds the specified value to the < a href= # fieldsubmissionvalues > field submission value < a > of this field <END>
<BEG> returns the < code > formfield < code > with the specify { linkplain formfield # getname name } <END>
<BEG> returns a list of the < a href= formfield html # fieldsubmissionvalues > field submission value < a > of all the specify constituent { linkplain formfield form field } with the specify { linkplain formfield # getname name } <END>
<BEG> sets the < a href= formcontrol html # submissionvalue > submission value < a > of all the constituent { linkplain formcontrol form control } to match the data in the specify < a href= # fielddataset > field data set < a > <END>
<BEG> sets the < a href= formfield html # fieldsubmissionvalues > field submission value < a > of the constituent { linkplain formfield form field } with the specify { linkplain formfield # getname name } to the single specify value <END>
<BEG> adds the specified value to the < a href= formfield html # fieldsubmissionvalues > field submission value < a > of the constituent { linkplain formfield form field } with the specify { linkplain formfield # getname name } <END>
<BEG> returns a string array contain the column label correspond to the value from the { link # getcolumnvalues map } method <END>
<BEG> converts the data value in the specify < a href= # fielddataset > field data set < a > into a simple string array <SEG> suitable for storage in a tabular format such a a database table or < code > csv < code > file <END>
<BEG> returns a list of all the { linkplain formfield # getformcontrols constituent form control } from all the { linkplain formfield form field } in this collection <END>
<BEG> merges the specify < code > formfields < code > into this < code > formfields < code > collection <END>
<BEG> returns a list contain all of the { linkplain htmlelementname html element name } <END>
<BEG> returns a set contain the { linkplain element # getname name } of all the < a target= _blank href= http : www w3 org tr rec-css2 visuren html # q5 > block-level element < a > <END>
<BEG> returns a set contain the { linkplain element # getname name } of all < a target= _blank href= http : www w3 org tr html401 conform html # deprecate > deprecate < a > element in html 4 01 <END>
<BEG> returns a set contain the { linkplain element # getname name } of all of the < a href= # htmlelement > html elements < a > for which the { linkplain element # getendtag end tag } be < i > forbidden < i > <END>
<BEG> returns the { linkplain starttag # getname name } of start tag that < a href= # implicitlyterminated > implicitly terminate < a > an < a href= # htmlelement > html element < a > with the specify name <END>
<BEG> returns the { linkplain element # getname name } of element that do not < a href= # implicitlyterminated > implicitly terminate < a > an < a href= # htmlelement > html element < a > with the specify name <END>
<BEG> returns a set contain the { linkplain element # getname name } of all of the < a href= # htmlelement > html elements < a > which should never contain element of the same name <SEG> either a direct or indirect descendant <END>
<BEG> indicates whether the specify tag type be define in this class <END>
<BEG> indicates whether the specify tag type be recognise by a < a target= _blank href= http : www masonhq com > mason < a > parser <END>
<BEG> indicates whether the specified tag be a { linkplain # downlevel_revealed_conditional_comment downlevel-revealed conditional comment } if tag < code > & lt ; & # 33 ; [ if < var > & # 46 ; & # 46 ; & # 46 ; < var > ] & gt ; < code > <END>
<BEG> indicates whether the specified tag be a { linkplain # downlevel_revealed_conditional_comment downlevel-revealed conditional comment } endif tag < code > & lt ; & # 33 ; [ endif ] & gt ; < code > <END>
<BEG> indicates whether this list contain the specified object <END>
<BEG> this list be unmodifiable <SEG> so this method always throw an < code > unsupportedoperationexception < code > <END>
<BEG> indicates whether this list contain all of the item in the specify collection <END>
<BEG> returns the index in this list of the first occurence of the specified object <SEG> or -1 if the list do not contain this object <END>
<BEG> returns a view of the portion of this list between < code > fromindex < code > <SEG> inclusive <SEG> and < code > toindex < code > <SEG> exclusive <END>
<BEG> indicates whether this numeric character reference specify the unicode code point in decimal format <END>
<BEG> encodes the specified text <SEG> escape special character into numeric character reference <END>
<BEG> encodes the specified text <SEG> escape special character into < a href= # decimalcharacterreference > decimal character reference < a > <END>
<BEG> returns the correct encode form of this numeric character reference <END>
<BEG> returns the original segment upon which this output document be base <END>
<BEG> returns the original source text upon which this output document be base <END>
<BEG> removes the specified segment of this output document <END>
<BEG> removes the specified { linkplain segment segment } from this output document <END>
<BEG> replaces the specify segment of this output document with the specify text <END>
<BEG> { linkplain # replace formcontrol replaces } all the constituent { linkplain formcontrol form control } from the specify { link formfields } in this output document <END>
<BEG> replaces the specify { link attributes } segment in this output document with the name value entry in the returned < code > map < code > <END>
<BEG> replaces the specify attribute segment in this source document with the name value entry in the specified < code > map < code > <END>
<BEG> replaces the specify segment of this output document with a string of space of the same length <END>
<BEG> registers the specify { linkplain outputsegment output segment } in this output document <END>
<BEG> writes the final content of this output document to the specify < code > writer < code > <END>
<BEG> writes the specified portion of the final content of this output document to the specify < code > writer < code > <END>
<BEG> appends the specified portion of the final content of this output document to the specify < code > appendable < code > object <END>
<BEG> returns a list all of the { linkplain # register outputsegment register } { link outputsegment } object in this output document <END>
<BEG> sets the column at which line be to be wrap <END>
<BEG> returns the length of a horizontal line <END>
<BEG> sets whether hyperlink urls be include in the output <END>
<BEG> sets whether the alternate text of a tag that have an < code > alt < code > attribute be include in the output <END>
<BEG> renders the alternate text of the specified start tag <END>
<BEG> sets whether decoration character be to be include around the content of some < a target= _blank href= http : www w3 org tr html401 present graphic html # h-15 2 1 > font style element < a > and < a target= _blank href= http : www w3 org tr html401 struct text html # h-9 2 1 > phrase element < a > <END>
<BEG> sets whether non-breaking space { link characterentityreference # _nbsp & amp ; nbsp ; } character entity reference be convert to space <END>
<BEG> sets the size of the indent to be use for anything other than { link htmlelementname # li li } element <END>
<BEG> sets the size of the indent to be use for { link htmlelementname # li li } element <END>
<BEG> sets whether the top margin of the first element be render <END>
<BEG> sets the string that be to separate table cell <END>
<BEG> sets the default top margin of an html block element with the specify name <END>
<BEG> sets the default value of whether an html block element of the specify name be indent <END>
<BEG> sets whether the original text of each tag be to be replace with the output from it { link tag # tidy } method <END>
<BEG> sets whether all non-essential line break be remove <END>
<BEG> sets whether all element be to be indent <SEG> include { linkplain htmlelements # getinlinelevelelementnames inline-level element } and those with preformatted content <END>
<BEG> indicates whether this start tag be an < a target= _blank href= http : www w3 org tr rec-xml # dt-eetag > empty-element tag < a > <END>
<BEG> indicates whether this start tag be syntactically an < a target= _blank href= http : www w3 org tr rec-xml # dt-eetag > empty-element tag < a > <END>
<BEG> returns the attribute specify in this start tag <END>
<BEG> parses the attribute specify in this start tag <SEG> regardless of the type of start tag <END>
<BEG> returns the segment between the end of the tag 's { linkplain # getname name } and the start of it < a href= # enddelimiter > end delimiter < a > <END>
<BEG> indicates whether a matching end tag be forbidden <END>
<BEG> returns an xml or xhtml representation of this start tag <END>
<BEG> returns the { linkplain endtagtype type } of { linkplain endtag end tag } require to pair with a { linkplain starttag start tag } of this type to form an { linkplain element element } <END>
<BEG> indicates whether a start tag of this type contain { linkplain attributes attribute } <END>
<BEG> indicates whether a valid { linkplain tag # isxmlname charsequence xml tag name } be require directly after the { linkplain # getnameprefix prefix } <END>
<BEG> indicates whether the specify source document position be at the end of a tag 's { linkplain attributes attribute } <END>
<BEG> internal method for the parsing of { link attributes } <END>
<BEG> returns the { linkplain tag # getend end } of a tag of this type <SEG> start from the specify position in the specify source document <END>
<BEG> specifies whether an unbroken section of < a href= # plaintext > plain text < a > in the source document should always be coalesce into a single { link segment } by the { linkplain # iterator iterator } <END>
<BEG> closes the underlie < code > reader < code > or < code > inputstream < code > and release any system resource associate with it <END>
<BEG> returns the current { link segment } from the { linkplain # iterator } <END>
<BEG> returns a < code > charbuffer < code > contain the source text of the { linkplain # getcurrentsegment current segment } <END>
<BEG> returns the length of the text stream <END>
<BEG> returns a new string that be a substring of this text <END>
<BEG> returns a new character sequence that be a subsequence of this sequence <END>
<BEG> sets whether any attribute value be include in the output <END>
<BEG> sets whether the content of < a href= htmlelements html # nonhtmlelement > non-html element < a > be exclude from the output <END>
<BEG> indicates whether the text inside the { link element } of the specified start tag should be exclude from the output <END>
<BEG> sets whether logging be enable at the error level <END>
<BEG> logs the specified message at the specified level <END>
<BEG> returns combinator sign <END>
<BEG> returns attribute value or < code > null < code > if do n't exist <END>
<BEG> returns pseudo-class name from simple class name <END>
<BEG> matches node to this selector <END>
<BEG> accepts node within select result <END>
<BEG> matches expression with the value <END>
<BEG> matches node with this pseudo function selector <END>
<BEG> renders node to appendable <END>
<BEG> renders node child to appendable <END>
<BEG> resolves current position on parse error and for dom element <END>
<BEG> starts the tag with the index of first ' < ' <END>
<BEG> defines tag end with index of last ' > ' <END>
<BEG> returns tag start string <END>
<BEG> returns < code > true < code > if tag be { link # start } or { link # self_closing } <END>
<BEG> loads a file to a document <END>
<BEG> parses a document from an input steam <SEG> use the provide parser <END>
<BEG> writes the input stream to the output stream <END>
<BEG> parse out a charset from a content type header <END>
<BEG> creates a random string <SEG> suitable for use a a mime boundary <END>
<BEG> validates that the object be not null param obj object to test <END>
<BEG> validates that the object be not null param obj object to test param msg message to output if validation fails <END>
<BEG> validates that the value be true param val object to test <END>
<BEG> validates that the array contain no null element param object the array to test param msg message to output if validation fails <END>
<BEG> validates that the string be not empty param string the string to test <END>
<BEG> validates that the string be not empty param string the string to test param msg message to output if validation fails <END>
<BEG> blow up if we reach an unexpected state <END>
<BEG> cause a failure <END>
<BEG> converts a jsoup dom to a w3c dom param in jsoup document return w3c document <END>
<BEG> serialize a w3c document to a string <END>
<BEG> canned default for html output <END>
<BEG> convert a jsoup document to a w3c document <END>
<BEG> converts a jsoup document into the provided w3c document <END>
<BEG> if this inputstream be not already a constrainableinputstream <SEG> let it be one <END>
<BEG> reads this inputstream to a bytebuffer <END>
<BEG> join a collection of string by a separator param string iterator of string object param sep string to place between string return join string <END>
<BEG> returns space pad param width amount of pad desired return string of space width <END>
<BEG> tests if a string be blank : null <SEG> empty <SEG> or only whitespace <SEG> \r\n <SEG> \t <SEG> etc param string string to test return if string be blank <END>
<BEG> tests if a string be numeric <SEG> i e <END>
<BEG> tests if a code point be whitespace a define by what it look like <END>
<BEG> normalise the whitespace within this string ; multiple space collapse to a single <SEG> and all whitespace character e g <END>
<BEG> after normalize the whitespace within a string <SEG> append it to a string builder <END>
<BEG> create a new absolute url <SEG> from a provided exist absolute url and a relative url component <END>
<BEG> maintains cache stringbuilders in a flyweight pattern <SEG> to minimize new stringbuilder gcs <END>
<BEG> parse html into a document <SEG> use the provide parser <END>
<BEG> read an input stream <SEG> and parse it to a document <END>
<BEG> fetch a url <SEG> and parse it a html <END>
<BEG> get safe html from untrusted input html <SEG> by parse input html and filter it through a white-list of permitted tag and attribute <END>
<BEG> test if the input body html have only tag and attribute allow by the whitelist <END>
<BEG> set the attribute key ; case be preserve <END>
<BEG> get the html representation of this attribute ; e g <END>
<BEG> get the string representation of this attribute <SEG> implement a { link # html } <END>
<BEG> create a new attribute from an unencoded key and a html attribute encode value <END>
<BEG> checks if this attribute name be define a a boolean attribute in html5 <END>
<BEG> get an attribute 's value by case-insensitive key param key the attribute name return the first match attribute value if set ; or empty string if not set ora boolean attribute <END>
<BEG> set a new boolean attribute <SEG> remove attribute if value be false <END>
<BEG> remove an attribute by key <END>
<BEG> check if these attribute contain an attribute with a value for this key <END>
<BEG> add all the attribute from the incoming set to this set <END>
<BEG> get the attribute a a list <SEG> for iteration <END>
<BEG> retrieves a filtered view of attribute that be html5 custom data attribute ; that be <SEG> attribute with key start with { code data- } <END>
<BEG> get the html representation of these attribute <END>
<BEG> checks if these attribute be equal to another set of attribute <SEG> by compare the two set param o attribute to compare with return if both set of attribute have the same content <END>
<BEG> get the unencoded <SEG> < b > non-normalized < b > text content of this cdatanode <END>
<BEG> check if this comment look like an xml declaration <END>
<BEG> create a valid <SEG> empty shell of a document <SEG> suitable for add more element to <END>
<BEG> get the url this document be parse from <END>
<BEG> accessor to the document 's { code head } element <END>
<BEG> set the document 's { code title } element <END>
<BEG> create a new element <SEG> with this document 's base uri <END>
<BEG> sets the charset use in this document <END>
<BEG> sets whether the element with charset information in this document be update on change through { link # charset java nio charset charset document charset charset } or not <END>
<BEG> get the document 's current output setting <END>
<BEG> get the parser that be use to parse this document <END>
<BEG> get this doctype 's name when set <SEG> or empty string return doctype name <END>
<BEG> get this doctype 's public id when set <SEG> or empty string return doctype public id <END>
<BEG> get the { code id } attribute of this element <END>
<BEG> set a boolean attribute value on this element <END>
<BEG> get this element 's parent and ancestor <SEG> up to the document root <END>
<BEG> get a child element of this element <SEG> by it 0-based index number <END>
<BEG> get the number of child node of this element that be element <END>
<BEG> get this element 's child element <END>
<BEG> finds the first element that match the supplied evaluator <SEG> with this element a the start context <SEG> or { code null } if none match <END>
<BEG> check if this element match the give evaluator <END>
<BEG> find the close element up the tree of parent that match the specified evaluator <END>
<BEG> add a node child node to this element <END>
<BEG> add a node to the start of this element 's child <END>
<BEG> inserts the give child node into this element at the specified index <END>
<BEG> create and append a new textnode to this element <END>
<BEG> add inner html to this element <END>
<BEG> get a css selector that will uniquely select this element <END>
<BEG> get sibling element <END>
<BEG> gets the next sibling element of this element <END>
<BEG> get each of the element sibling before this element <END>
<BEG> finds element <SEG> include and recursively under this element <SEG> with the specify tag name <END>
<BEG> find an element by id <SEG> include or under this element <END>
<BEG> find element that have this class <SEG> include or under this element <END>
<BEG> find element that have a name attribute set <END>
<BEG> find element that have an attribute name start with the supplied prefix <END>
<BEG> find element that have an attribute with the specific value <END>
<BEG> find element that either do not have this attribute <SEG> or have it with a different value <END>
<BEG> find element that have attribute whose value contain the match string <END>
<BEG> find element that have attribute whose value match the supplied regular expression <END>
<BEG> find element whose sibling index be less than the supplied index <END>
<BEG> find element that contain the specified string <END>
<BEG> find element that directly contain the specified string <END>
<BEG> find element whose text match the supplied regular expression <END>
<BEG> find element whose own text match the supplied regular expression <END>
<BEG> find all element under this element include self <SEG> and child of child <END>
<BEG> gets the combined text of this element and all it child <END>
<BEG> get the unencoded text of all child of this element <SEG> include any newlines and space present in the original <END>
<BEG> gets the text own by this element only ; do not get the combined text of all child <END>
<BEG> test if this element have any text content that be not just whitespace <END>
<BEG> gets the literal value of this element 's class attribute <SEG> which may include multiple class name <SEG> space separate <END>
<BEG> set the element 's { code class } attribute to the supplied class name <END>
<BEG> toggle a class name on this element 's { code class } attribute : if present <SEG> remove it ; otherwise add it <END>
<BEG> get the value of a form element input <SEG> textarea <SEG> etc <END>
<BEG> retrieves the element 's inner html <END>
<BEG> get the list of form control element associate with this form <END>
<BEG> add a form control element to this form <END>
<BEG> prepare to submit this form <END>
<BEG> get the data that this form submit <END>
<BEG> get the output set for this node <SEG> or if this node have no document or parent <SEG> retrieve the default output setting <END>
<BEG> get the parser that be use to make this node <SEG> or the default html parser if it have no parent <END>
<BEG> get the text content of this text node <END>
<BEG> get the unencoded text of this text node <SEG> include any newlines and space present in the original <END>
<BEG> split this text node into two node at the specified string offset <END>
<BEG> create a new textnode from html encode aka escape data <END>
<BEG> get the unencoded xml declaration <END>
<BEG> get the treebuilder currently in use <END>
<BEG> update the treebuilder use when parse content <END>
<BEG> check if parse error tracking be enable <END>
<BEG> enable or disable parse error track for the next parse <END>
<BEG> retrieve the parse error <SEG> if any <SEG> from the last parse <END>
<BEG> parse html into a document <END>
<BEG> parse a fragment of html into a list of node <END>
<BEG> utility method to unescape html entity from a string param string html escape string param inattribute if the string be to be escape in strict mode a attribute be return an unescaped string <END>
<BEG> returns true if preserve attribute case <END>
<BEG> normalizes a tag name accord to the case preservation set <END>
<BEG> normalizes an attribute accord to the case preservation set <END>
<BEG> gets if this be a block tag <END>
<BEG> gets if this tag be an inline tag <END>
<BEG> get if this be an empty tag return if this be an empty tag <END>
<BEG> get if this tag be self closing <END>
<BEG> get if this be a pre-defined tag <SEG> or be auto create on parse <END>
<BEG> check if this tagname be a known tag <END>
<BEG> get if this tag represent a control associate with a form <END>
<BEG> get if this tag represent an element that should be submit with a form <END>
<BEG> utility method to consume reader and unescape entity find within <END>
<BEG> retrieves but do not remove the first character from the queue <END>
<BEG> tests if the next character on the queue match the sequence <END>
<BEG> case sensitive match test <END>
<BEG> tests if the next character match any of the sequence <END>
<BEG> tests if the queue match the sequence a with match <SEG> and if they do <SEG> remove the matched string from the queue <END>
<BEG> tests if queue start with a whitespace character <END>
<BEG> test if the queue match a word character letter or digit <END>
<BEG> drops the next character off the queue <END>
<BEG> consume one character off queue <END>
<BEG> consumes the supplied sequence of the queue <END>
<BEG> pulls a string off the queue <SEG> up to but exclusive of the match sequence <SEG> or to the queue run out <END>
<BEG> pulls a string off the queue like consumeto <SEG> and then pull off the matched string but do not return it <END>
<BEG> unescape a \ escape string <END>
<BEG> retrieves the next run of word type letter or digit off the queue <END>
<BEG> consume a css element selector tag name <SEG> but | instead of : for namespaces or | for wildcard namespace <SEG> to not conflict with : pseudo selects <END>
<BEG> consume and return whatever be leave on the queue <END>
<BEG> creates a new <SEG> clean document <SEG> from the original dirty document <SEG> contain only element allow by the whitelist <END>
<BEG> determines if the input document < b > body < b > be valid <SEG> against the whitelist <END>
<BEG> this whitelist allow the same text tag a { link # basic } <SEG> and also allow < code > img < code > tag <SEG> with appropriate attribute <SEG> with < code > src < code > point to < code > http < code > or < code > http < code > <END>
<BEG> this whitelist allow a full range of text and structural body html : < code > a <SEG> b <SEG> blockquote <SEG> br <SEG> caption <SEG> cite <SEG> code <SEG> col <SEG> colgroup <SEG> dd <SEG> div <SEG> dl <SEG> dt <SEG> em <SEG> h1 <SEG> h2 <SEG> h3 <SEG> h4 <SEG> h5 <SEG> h6 <SEG> i <SEG> img <SEG> li <SEG> ol <SEG> p <SEG> pre <SEG> q <SEG> small <SEG> span <SEG> strike <SEG> strong <SEG> sub <SEG> sup <SEG> table <SEG> tbody <SEG> td <SEG> tfoot <SEG> th <SEG> thead <SEG> tr <SEG> u <SEG> ul < code > < p > links do not have an enforced < code > rel=nofollow < code > attribute <SEG> but you can add that if desire <END>
<BEG> add a list of allowed element to a whitelist <END>
<BEG> remove a list of allow attribute from a tag <END>
<BEG> add an enforced attribute to a tag <END>
<BEG> configure this whitelist to preserve relative link in an element 's url attribute <SEG> or convert them to absolute link <END>
<BEG> add allow url protocol for an element 's url attribute <END>
<BEG> test if the supplied tag be allow by this whitelist param tag test tag return true if allow <END>
<BEG> test if the supplied attribute be allow by this whitelist for this tag param tagname tag to consider allow the attribute in param el element under test <SEG> to confirm protocol param attr attribute under test return true if allow <END>
<BEG> creates a deep copy of these element <END>
<BEG> get an attribute value from the first match element that have the attribute <END>
<BEG> checks if any of the matched element have this attribute define <END>
<BEG> set an attribute on all match element <END>
<BEG> add the class name to every match element 's { code class } attribute <END>
<BEG> determine if any of the matched element have this class name set in their { code class } attribute <END>
<BEG> set the form element 's value in each of the matched element <END>
<BEG> get the combined text of all the matched element <END>
<BEG> test if any matched element have any text content <SEG> that be not just whitespace <END>
<BEG> get the combined inner html of all matched element <END>
<BEG> update the tag name of each match element <END>
<BEG> add the supplied html to the start of each match element 's inner html <END>
<BEG> insert the supplied html before each match element 's outer html <END>
<BEG> wrap the supplied html around each matched element <END>
<BEG> removes the matched element from the dom <SEG> and move their child up into their parent <END>
<BEG> empty remove all child node from each matched element <END>
<BEG> remove each match element from the dom <END>
<BEG> get the < i > nth < i > match element a an elements object <END>
<BEG> test if any of the matched element match the supplied query <END>
<BEG> get the immediate next element sibling of each element in this list <SEG> filter by the query <END>
<BEG> get each of the following element sibling of each element in this list <END>
<BEG> get each of the following element sibling of each element in this list <SEG> that match the query <END>
<BEG> get the { link formelement } form from the select element <SEG> if any <END>
<BEG> get { link comment } node that be direct child node of the select element <END>
<BEG> start a depth-first traverse of the root and all of it descendant <END>
<BEG> start a depth-first traverse of all element <END>
<BEG> parse the query return evaluator <END>
<BEG> is this a literal unmodifiable attribute ? <END>
<BEG> do n't wrap this attribute ? <END>
<BEG> returns the html version in which this attribute be support <END>
<BEG> lookup an installed attribute <END>
<BEG> returns the default attribute table instance <END>
<BEG> is this a boolean attribute <END>
<BEG> check attribute name value and report error <END>
<BEG> clean an html tree <END>
<BEG> simplifies < b > < b > < b > < b > etc <END>
<BEG> replace i by em and b by strong <END>
<BEG> some people use dir or ul without an li to indent the content <END>
<BEG> drop if endif section insert by word2000 <END>
<BEG> remove word2000 attribute from node <END>
<BEG> used to hunt for hidden preformatted section <END>
<BEG> does element have a single space a it content ? <END>
<BEG> where appropriate move object element from head to body <END>
<BEG> add configuration properties <END>
<BEG> is the give string a valid configuration flag ? <END>
<BEG> print available configuration option <END>
<BEG> convert a char encode from the deprecate tidy constant to a standard java encoding name <END>
<BEG> see org w3c dom node # getnodevalue <END>
<BEG> see org w3c dom node # setnodevalue java lang string <END>
<BEG> todo dom level 2 getfirstchild not implement <END>
<BEG> see org w3c dom element # setattributenode org w3c dom attr <END>
<BEG> todo dom level 3 getschematypeinfo not support <END>
<BEG> traverse the node list <END>
<BEG> see org w3c dom nodelist # item int <END>
<BEG> function for conversion from windows-1252 to unicode <END>
<BEG> function to convert from macroman to unicode <END>
<BEG> encode a char to an array of byte <END>
<BEG> lookup an entity by it name <END>
<BEG> returns the entity name for the give entity code <END>
<BEG> returns the appropriate out implementation <END>
<BEG> move give node to end of body element <END>
<BEG> error in positioning of form start or end tag generally require human intervention to fix <END>
<BEG> store char c a utf-8 encode byte stream <END>
<BEG> print just the content of the body element <END>
<BEG> add meta element for page transition effect <SEG> this work on ie but not ns <END>
<BEG> see org w3c tidy streamin # isendofstream <END>
<BEG> convert an int to unsigned & 0xff <END>
<BEG> check if the first string contain the second one ignore case <END>
<BEG> is the character a hex digit ? <END>
<BEG> is the give char valid in xml name ? <END>
<BEG> is the give character a single or double quote ? <END>
<BEG> determines if the specified character be whitespace <END>
<BEG> determines if the specified character be a lowercase character <END>
<BEG> maps the give character to it lowercase equivalent <END>
<BEG> is the give character encode support ? <END>
<BEG> returns the element information for the specified element code <END>
<BEG> return an appropriate instance of this class <SEG> depend on whether we 're on a jdk 1 1 or j2se 1 2 or later system <END>
<BEG> make this element anonymous <END>
<BEG> force this element to preclosed status <SEG> mean that an end-tag have be see but the element can not yet be close for structural reason <END>
<BEG> return a namespace name from a qname <END>
<BEG> returns true if this element type can contain another element type <END>
<BEG> sets an attribute and it value into an attributesimpl object <END>
<BEG> will throw assertionerror <SEG> if expression be not true param expression result of your asserted condition param failedmessage message to be include in error log throw java lang assertionerror <END>
<BEG> will throw illegalargumentexception if provide object be null on runtime param argument object that should be assert a not null param name name of the object assert throw java lang illegalargumentexception <END>
<BEG> return the { link com ning http client asynchttpclientconfig } return { link com ning http client asynchttpclientconfig } <END>
<BEG> this method -- unlike future < reponse > get -- will block only a long <SEG> a header arrive <END>
<BEG> return the original or decorate { link asynchandler } return the original or decorate { link asynchandler } <END>
<BEG> return true if the current response 's processing need to be interrupt and a new { link request } be execute <END>
<BEG> adds the specified value and return this object <END>
<BEG> adds all key-values pair from the give object to this object and return this object <END>
<BEG> replace the value for all key from the give map that be also present in this object <SEG> with the value from the give map <END>
<BEG> removes the value for the give key if present and return this object <END>
<BEG> close the underlying connection once the processing have complete <END>
<BEG> return true of the underlying connection will be close once the response have be fully process <END>
<BEG> return true be header have be receive after the response body <END>
<BEG> return the request { link uri } return the request { link uri } <END>
<BEG> adds a listener executor pair to execution list to execute when this task be complete <END>
<BEG> add the runnable executor pair to the list of pair to execute <END>
<BEG> return the full length of all the data <END>
<BEG> if the specify key be not already associate with a value <SEG> attempt to compute it value use the give mapping function and enters it into this map unless { code null } <END>
<BEG> computes initial batch value for bulk task <END>
<BEG> performs the give action for each key <SEG> value <END>
<BEG> return true be preemptive authentication be enabled return true be preemptive authentication be enable <END>
<BEG> return the ntlm domain to use <END>
<BEG> return the ntlm host <END>
<BEG> convenient for http layer when target server root return the raw path or if it 's null <END>
<BEG> encodes the specify data into a base64 string <END>
<BEG> decodes the specified base64 string back into it raw data <END>
<BEG> beware : mus n't append to itself ! <END>
<BEG> this method invalidate the property cache <END>
<BEG> return the sum of { link # gethostactiveconnectioncount } and { link # gethostidleconnectioncount } <SEG> a long represent the total number of connection to this host <END>
<BEG> return a long represent the number of active connection to the host <END>
<BEG> acquires the global lock and return the remain time <SEG> in millis <SEG> to acquire the per-host lock <END>
<BEG> return [ scheme ] : [ hostname ] : [ port ] path <END>
<BEG> default implementation call { link # computelength } once and cache it for future invocation <SEG> but subclass may override <END>
<BEG> returns the medium type to use for the content-type header <SEG> or { code null } if unspecified <END>
<BEG> returns the charset specify in the medium type or { code charsets # utf_8 } if not specify <END>
<BEG> default implementation return { code true } <SEG> but subclass may override <END>
<BEG> returns the computed content length base use { link ioutils # computelength streamingcontent } or instead { code -1 } if { link httpcontent # retrysupported } be { code false } because the stream must not be read twice <END>
<BEG> returns whether the input stream should be close at the end of { link # writeto } <END>
<BEG> sets the content type or { code null } for none <END>
<BEG> returns a new instance with the utf-8 encoding use { link stringutils # getbytesutf8 string } of the give content string <END>
<BEG> returns the scheme lowercase <SEG> for example { code http } <END>
<BEG> returns the user info or { code null } for none <SEG> for example { code username : password } <END>
<BEG> returns the port number or { code -1 } if undefined <SEG> for example { code 443 } <END>
<BEG> sets the port number <SEG> for example { code 443 } <END>
<BEG> returns the decoded path component by part with each part separate by a { code ' ' } or { code null } for none <END>
<BEG> constructs the string representation of the url <SEG> include the path specify by { link # pathparts } and the query parameter specify by this generic url <END>
<BEG> constructs the portion of the url contain the scheme <SEG> host and port <END>
<BEG> constructs the portion of the url beginning at the rooted path <END>
<BEG> returns the first query parameter value for the give query parameter name <END>
<BEG> returns all query parameter value for the give query parameter name <END>
<BEG> returns the raw encode path compute from the { link # pathparts } <END>
<BEG> appends the give raw encode path to the current { link # pathparts } <SEG> set field only if it be { code null } or empty <END>
<BEG> returns the path part decode if not { code verbatim } <END>
<BEG> returns the streaming content <END>
<BEG> returns the first { code accept } header or { code null } for none <END>
<BEG> sets the { code accept } header or { code null } for none <END>
<BEG> sets the { link # authorization } header a specify in < a href= http : tool ietf org html rfc2617 # section-2 > basic authentication scheme < a > <END>
<BEG> puts all header of the { link lowlevelhttpresponse } into this { link httpheaders } object <END>
<BEG> returns the first header string value for the give header name <END>
<BEG> returns an unmodifiable list of the header string value for the give header name <END>
<BEG> puts all header of the { link httpheaders } object into this { link httpheaders } object <END>
<BEG> sets the main medium type <SEG> for example { code text } <END>
<BEG> returns the main medium type <SEG> for example { code text } <SEG> or { code null } for ' ' <END>
<BEG> sets the sub medium type <SEG> for example { code plain } when use { code text } <END>
<BEG> removes all set parameter from this medium type <END>
<BEG> builds the full medium type string which can be pass in the content-type header <END>
<BEG> returns { code true } if the specified medium type have both the same type and subtype <SEG> or { code false } if they do n't match or the medium type be { code null } <END>
<BEG> returns { code true } if the two specified medium type have the same type and subtype <SEG> or if both type be { code null } <END>
<BEG> sets the charset parameter of the medium type <END>
<BEG> returns the specified charset or { code null } if unset <END>
<BEG> returns whether receive a successful http status code { code > = 200 & & < 300 } see { link # getstatuscode } <END>
<BEG> returns an exception message string builder to use for the give http response <END>
<BEG>  < p > returns { link httpurlconnection # getinputstream } when it do n't throw { link ioexception } <SEG> otherwise it return { link httpurlconnection # geterrorstream } <END>
<BEG> returns the json key name value data <END>
<BEG> sets the content length or less than zero if not know <END>
<BEG> sets the content encode for example { code gzip } or { code null } for none <END>
<BEG> sets the connection and read timeouts <END>
<BEG> adds an http multipart part <END>
<BEG> sets the http content part of the http multipart request <SEG> where each part be assume to have no http header and no encoding <END>
<BEG> returns whether to stop parsing at the give key of the give context object <END>
<BEG> returns a pretty-printed serialized json string representation or { link # tostring } if { link # getfactory } be { code null } <END>
<BEG> returns a pretty-printed serialized json string representation for the give item use { link jsongenerator # serialize object } with { link jsongenerator # enableprettyprint } <END>
<BEG> parse and close an input stream a a json object <SEG> array <SEG> or value into a new instance of the give destination class use { link jsonparser # parseandclose class } <END>
<BEG> parse and close a reader a a json object <SEG> array <SEG> or value into a new instance of the give destination class use { link jsonparser # parseandclose class } <END>
<BEG> returns the unmodifiable set of wrapper key for the json content <END>
<BEG> returns the version of the json-rpc protocol which be { code 2 0 } <END>
<BEG> returns the structured value that hold the parameter value to be use during the invocation of the method or { code null } for none <END>
<BEG> { link beta } < br > verifies the signature of the content use the certificate chain embed in the signature <END>
<BEG> returns the byte of the signature content <END>
<BEG> returns a new instance of a jws parser <END>
<BEG> changes the time value this time provider be return <END>
<BEG> returns whether { link # dooutput } be call <END>
<BEG> sets the output stream or { code null } to throw an { link unknownserviceexception } when { link # getoutputstream } be call <END>
<BEG> sets the http response status code <END>
<BEG> returns an unmodifiable view of the map of lowercase header name to value <END>
<BEG> returns the value of the first header of the give name or { code null } for none <END>
<BEG> returns the unmodifiable list of value of the header of the give name may be empty <END>
<BEG> returns http content a a string <SEG> take care of any encoding of the content if necessary <END>
<BEG> sets the response content to the give content string <END>
<BEG> sets the content to { code null } and the content length to 0 <END>
<BEG> returns the list of header name of http response <END>
<BEG> sets the input stream content of http response or { code null } for none <END>
<BEG> sets the content type of http response or { code null } for none <END>
<BEG> sets the status code of http response <END>
<BEG> returns a new instance of a list of publish record message <END>
<BEG> sets the fixed back-off millisecond default to { code 0 } <END>
<BEG> sets the maximum number of try before return { link # stop } default to { code 10 } <END>
<BEG> returns the maximum number of try before return { link # stop } <END>
<BEG> returns the number of try so far <END>
<BEG> returns the number of time { link # sleep long } be call <END>
<BEG> returns a new copy of a sample encode rsa private key that match { link # newencodedrsapublickeybytes } <END>
<BEG> returns a new copy of a sample encode public key that match { link # newencodedrsaprivatekeybytes } <END>
<BEG> returns a new sample rsa private key that match { link # newrsapublickey } <END>
<BEG>  < p > overriding be support <SEG> but override method must call the super implementation <END>
<BEG> returns the write buffer value a a modifiable byte array <END>
<BEG> returns whether the output stream have be close <END>
<BEG> returns a new instance of an array map with initial capacity of zero <END>
<BEG> returns a new instance of an array map of the give key value pair in alternate order <END>
<BEG> returns the number of key-value pair set <END>
<BEG> returns the key at the give index or { code null } if out of bound <END>
<BEG> sets the key value mapping at the give index <SEG> override any exist key value mapping <END>
<BEG> sets the value at the give index <SEG> override any exist value mapping <END>
<BEG> adds the key value mapping at the end of the list <END>
<BEG> returns whether there be a mapping for the give key <END>
<BEG> returns the index of the give key or { code -1 } if there be no such key <END>
<BEG> returns the value set for the give key or { code null } if there be no such mapping or if the mapping value be { code null } <END>
<BEG> sets the value for the give key <SEG> override any exist value <END>
<BEG> trims the internal array storage to minimize memory usage <END>
<BEG> ensures that the capacity of the internal array be at least a give capacity <END>
<BEG> sets the field of the give object use the value collect during parsing of the object 's field <END>
<BEG> puts an additional value for the give field <SEG> accumulate value on repeat call on the same field <END>
<BEG> puts an additional value for the give key name <SEG> accumulate value on repeat call on the same key name <END>
<BEG> wraps an input stream <SEG> limit the number of byte which can be read <END>
<BEG> reads some byte from an input stream and store them into the buffer array { code b } <END>
<BEG> returns the class information for the give underlying class <END>
<BEG> returns whether field name be case sensitive <END>
<BEG> returns an unmodifiable sorted set with any possible { code null } member first of { link fieldinfo # getname name } <END>
<BEG> returns an unmodifiable collection of the { code fieldinfo } s for this class <SEG> without any guarantee of order <END>
<BEG> returns whether the give object be the magic object that represent the null value of it class <END>
<BEG> returns the map to use for the give data that be treat a a map from string key to some value <END>
<BEG> returns whether the give type be one of the supported primitive class like number and date time <SEG> or be a wildcard of one <END>
<BEG> returns whether to give value be { code null } or it class be primitive a define by { link data # isprimitive type } <END>
<BEG> parses the give string value base on the give primitive type <END>
<BEG> returns a new instance of a map base on the give field class <END>
<BEG> aggressively resolve the give type in such a way that the resolve type be not a wildcard type or a type variable <SEG> return { code object class } if the type variable can not be resolve <END>
<BEG> returns the date time value express a the number of millisecond since the unix epoch <END>
<BEG>  < p > a check be add that the time zone be the same <END>
<BEG> escapes the string value so it can be safely include in application x-www-form-urlencoded data <END>
<BEG> escapes the string value so it can be safely include in any part of a uri <END>
<BEG> decodes application x-www-form-urlencoded string <END>
<BEG> decodes the path component of a uri <END>
<BEG> escapes a uri path but retain all reserved character <SEG> include all general delimiters <END>
<BEG> escapes the string value so it can be safely include in uri user info part <END>
<BEG> returns the escaped form of a give literal string <SEG> start at the give index <END>
<BEG> returns the unicode code point of the character at the give index <END>
<BEG> sets the interval back to the initial retry interval and restart the timer <END>
<BEG>  < p > this method calculate the next back off interval use the formula : randomized_interval = retry_interval + - randomization_factor retry_interval < p > subclasses may override if a different algorithm be require <END>
<BEG> returns the initial retry interval in millisecond <END>
<BEG> returns the maximum value of the back off period in millisecond <END>
<BEG> returns the maximum elapsed time in millisecond <END>
<BEG> returns the elapsed time in millisecond since an { link exponentialbackoff } instance be create and be reset when { link # reset } be call <END>
<BEG> returns whether the field be primitive a define by { link data # isprimitive type } <END>
<BEG> returns the value of the field in the give object instance use reflection <END>
<BEG> returns the class information of the field 's declare class <END>
<BEG> returns the map of unknown data key name to value <END>
<BEG> computes and return the byte content length for a streaming content by call { link streamingcontent # writeto outputstream } on a fake output stream that only count byte write <END>
<BEG> serializes the give object value to a newly allocate byte array <END>
<BEG> serializes the give object value to an output stream <SEG> and close the output stream <END>
<BEG> deserializes the give byte array into to a newly allocate object <END>
<BEG> returns a new mutable <SEG> empty { code arraylist } instance <END>
<BEG> creates an { code arraylist } instance back by an array of the < i > exact < i > size specify ; equivalent to { link arraylist # arraylist int } <END>
<BEG> returns a new mutable { code arraylist } instance contain the give element <END>
<BEG> returns the maximum number of byte to log may be { code 0 } to avoid logging content <END>
<BEG> returns the byte write to the stream may or may not have be log <END>
<BEG> returns the log stream <END>
<BEG> returns a new mutable <SEG> empty <SEG> insertion-ordered { code linkedhashmap } instance <END>
<BEG> returns a new mutable <SEG> empty { code treemap } instance use the natural ordering of it element <END>
<BEG> reads the first section in the pem file <SEG> optionally base on a title to look for <SEG> and then close the reader <END>
<BEG> returns the default key store use { link keystore # getdefaulttype } <END>
<BEG> returns the java keystore jks <END>
<BEG> returns the private key from the key store <END>
<BEG> returns the sha-1 with rsa signature algorithm <END>
<BEG> returns the x 509 certificate factory <END>
<BEG> returns a new mutable <SEG> empty { code treeset } instance sort by the natural sort ordering of it element <END>
<BEG> returns the ssl context for ssl algorithm <END>
<BEG> returns the default trust manager factory <END>
<BEG> { link beta } < br > returns a verifier that trust all host name <END>
<BEG>  < p > overriding be only support for the purpose of call the super implementation and change the return type <SEG> but nothing else <END>
<BEG>  < p > default implementation be to check if { link # size } be { code 0 } <END>
<BEG> persist the key-value map into storage at the end of { link # set } <SEG> { link # delete string } <SEG> and { link # clear } <END>
<BEG> returns a debug string for the give data store to be use a an implementation of { link object # tostring } <END>
<BEG> returns a global thread-safe instance <END>
<BEG> constructs a new < code > string < code > by decode the specified array of byte use the utf-8 charset <END>
<BEG> returns the parameterized type that be or extend the give type that match the give super class <END>
<BEG> returns whether a class be either assignable to or from another class <END>
<BEG> returns whether the give type be an array <END>
<BEG> returns the component type of the give array type <SEG> assume { link # isarray type } <END>
<BEG> returns the raw class for the give parameter type a define in { link parameterizedtype # getrawtype } <END>
<BEG> returns the only bound of the give wildcard type <END>
<BEG> resolves the actual type of the give type variable that come from a field type base on the give context list <END>
<BEG> returns the raw array component type to use -- for example for the first parameter of { link array # newinstance class <SEG> int } -- for the give component type <END>
<BEG> returns the type parameter of { link iterable } that be assignable from the give iterable type <END>
<BEG> returns an iterable for an input iterable or array value <END>
<BEG> < p > convenience method to perform an http get request <END>
<BEG> returns true if the numeric code match the represented status either < code > success < code > or < code > failure < code > <END>
<BEG> find the status value that match the give status code <END>
<BEG> append give map a query parameter to the base url < p > each map entry 's key will be a parameter name and the value 's { link object # tostring } will be the parameter value <END>
<BEG> append give name value pair a query parameter to the base url < p > the params argument be interpret a a sequence of name value pair so the give number of params must be divisible by 2 <END>
<BEG> start a 'get ' request to the give url along with the query params param baseurl param params the query parameter to include a part of the baseurl param encode true to encode the full url see # append charsequence <SEG> map see # encode charsequence return request <END>
<BEG> set the 'http keepalive ' property to the give value <END>
<BEG> set the 'http proxyhost ' and 'https proxyhost ' property to the give host value <END>
<BEG> set the 'http nonproxyhosts ' property to the give host value <END>
<BEG> get underlying connection return connection <END>
<BEG> set whether or not to ignore exception that occur from call { link closeable # close } < p > the default value of this setting be < code > true < code > param ignore return this request <END>
<BEG> get whether or not exception throw by { link closeable # close } be ignored return true if ignoring <SEG> false if throw <END>
<BEG> is the response code a 200 ok ? <END>
<BEG> is the response code a 500 internal server error ? <END>
<BEG> get status message of the response return message throw httprequestexception <END>
<BEG> set chunk stream mode to the give size param size return this request <END>
<BEG> get the configured buffer size < p > the default buffer size be 8<SEG>192 byte return buffer size <END>
<BEG> set whether or not the response body should be automatically uncompressed when read from <END>
<BEG> create byte array output stream return stream <END>
<BEG> get response a { link string } in give character set < p > this will fall back to use the utf-8 character set if the give charset be null param charset return string throw httprequestexception <END>
<BEG> is the response body empty ? <END>
<BEG> get response a byte array return byte array throw httprequestexception <END>
<BEG> get response in a buffered stream see # buffersize int return stream throw httprequestexception <END>
<BEG> get stream to response body return stream throw httprequestexception <END>
<BEG> get buffer reader to response body use the give character set r and the configured buffer size see # buffersize int param charset return reader throw httprequestexception <END>
<BEG> receive response into the give appendable param appendable return this request throw httprequestexception <END>
<BEG> set read timeout on connection to give value param timeout return this request <END>
<BEG> set header name to give value param name param value return this request <END>
<BEG> set all header find in give map where the key be the header name and the value be the header value param header return this request <END>
<BEG> get a response header param name return response header throw httprequestexception <END>
<BEG> get all the response header return map of response header name to their value s throw httprequestexception <END>
<BEG> get a date header from the response fall back to return the give default value if the header be miss or parse fails param name param defaultvalue return date <SEG> default value on failure throw httprequestexception <END>
<BEG> get an integer header value from the response fall back to the give default value if the header be miss or if parsing fail param name param defaultvalue return header value a an integer <SEG> default value when miss or parse fails throw httprequestexception <END>
<BEG> get parameter with give name from header value in response param headername param paramname return parameter value or null if miss <END>
<BEG> get all parameter from header value in response < p > this will be all key=value pair after the first ' ; ' that be separate by a ' ; ' param headername return non-null but possibly empty map of parameter header <END>
<BEG> get parameter value from header value param header return parameter value or null if none <END>
<BEG> get parameter value from header value param value param paramname return parameter value or null if none <END>
<BEG> get 'charset ' parameter from 'content-type ' response header return charset or null if none <END>
<BEG> set value of { link httpurlconnection # setusecaches boolean } param usecaches return this request <END>
<BEG> set the 'accept-encoding ' header to 'gzip ' see # uncompress boolean return this request <END>
<BEG> get the 'server ' header from the response return server <END>
<BEG> get the 'date ' header from the response return date value <SEG> -1 on failure <END>
<BEG> get the 'last-modified ' header from the response return last modified value <SEG> -1 on failure <END>
<BEG> set the 'authorization ' header to give value in basic authentication format param name param password return this request <END>
<BEG> get the 'content-type ' header from the response return response header value <END>
<BEG> set the 'accept ' header to 'application json ' return this request <END>
<BEG> copy from input stream to output stream param input param output return this request throw ioexception <END>
<BEG> copy from reader to writer param input param output return this request throw ioexception <END>
<BEG> set the uploadprogress callback for this request param callback return this request <END>
<BEG> close output stream return this request throw httprequestexception throw ioexception <END>
<BEG> open output stream return this request throw ioexception <END>
<BEG> write a multipart header to the response body param name param value return this request throw httprequestexception <END>
<BEG> write byte array to request body param input return this request throw httprequestexception <END>
<BEG> write stream to request body < p > the give stream will be close once send completes param input return this request throw httprequestexception <END>
<BEG> create writer to request output stream return writer throw httprequestexception <END>
<BEG> write the name value pair a form data to the request body < p > the value specify will be url-encoded and send with the 'application x-www-form-urlencoded ' content-type param name param value param charset return this request throw httprequestexception <END>
<BEG> write the value in the map a encoded form data to the request body param value param charset return this request throw httprequestexception <END>
<BEG> configure https connection to trust all certificate < p > this method do nothing if the current request be not a https request return this request throw httprequestexception <END>
<BEG> configure https connection to trust all host use a custom { link hostnameverifier } that always return < code > true < code > for each host verify < p > this method do nothing if the current request be not a https request return this request <END>
<BEG> get the { link url } of this request 's connection return request url <END>
<BEG> configure an http proxy on this connection <END>
<BEG> set whether or not the underlying connection should follow redirects in the response <END>
<BEG> <SEG> charset null ; private static final map < string <SEG> contenttype > content_type_map ; static { final contenttype [ ] contenttypes = { application_atom_xml <SEG> application_form_urlencoded <SEG> application_json <SEG> application_svg_xml <SEG> application_xhtml_xml <SEG> application_xml <SEG> image_bmp <SEG> image_gif <SEG> image_jpeg <SEG> image_png <SEG> image_svg <SEG> image_tiff <SEG> image_webp <SEG> multipart_form_data <SEG> text_html <SEG> text_plain <SEG> text_xml } ; final hashmap < string <SEG> contenttype > map = new hashmap < string <SEG> contenttype > ; for final contenttype contenttype : contenttypes { map put contenttype getmimetype <SEG> contenttype ; } content_type_map = collections unmodifiablemap map ; } default public static final contenttype default_text = text_plain ; public static final contenttype default_binary = application_octet_stream ; private final string mimetype ; private final charset charset ; private final namevaluepair [ ] params ; contenttype final string mimetype <SEG> final charset charset { this mimetype = mimetype ; this charset = charset ; this params = null ; } contenttype final string mimetype <SEG> final charset charset <SEG> final namevaluepair [ ] params { this mimetype = mimetype ; this charset = charset ; this params = params ; } public string getmimetype { return this mimetype ; } public charset getcharset { return this charset ; } since 4 3 <END>
<BEG> returns { code content-type } for the give mime type <END>
<BEG> converts character < 32 to hex <END>
<BEG> does standard { link inputstream # read byte [ ] <SEG> int <SEG> int } behavior <SEG> but also notify the watcher when the content have be consume <END>
<BEG>  < p > please note that this class do not maintain it own pool of execution { link thread } s therefore <SEG> one < b > must < b > call { link future # get } or { link future # get long <SEG> timeunit } method on the { link future } return by this method in order for the lease operation to complete <END>
<BEG> returns snapshot of all know route return the set of route since 4 4 <END>
<BEG> enumerates all available connection <END>
<BEG> closes connection that have be idle long than the give period of time and evict them from the pool <END>
<BEG> closes expire connection and evict them from the pool <END>
<BEG> return the number of millisecond since 4 4 <END>
<BEG> param ms the number of millisecond since 4 4 <END>
<BEG> sets the sslcontext protocol algorithm name <END>
<BEG> sets the key manager factory algorithm name <END>
<BEG> returns full request response <SEG> or just header <END>
<BEG> returns default implementation of connection provider <END>
<BEG> returns the first value from the map associate with the name <END>
<BEG> returns first entry for give name <END>
<BEG> returns all value associate with the name <END>
<BEG> sets the destination method <SEG> host <SEG> port at once <END>
<BEG> builds a connect request <END>
<BEG> returns { code true } if status code indicate successful result <END>
<BEG> invoked on incoming connection <END>
<BEG> stops the tunnel <SEG> shutdowns the thread pool and close server socket <END>
<BEG> returns < code > socket < code > use by this connection <END>
<BEG> creates socks4 proxy <END>
<BEG> returns proxy user name or < code > null < code > if no authentication require <END>
<BEG> returns proxy password or < code > null < code > <END>
<BEG> encodes a string into base64 format <END>
<BEG> encodes a byte array into base 64 format and break the output into line <END>
<BEG> decodes a byte array from base64 format and ignores line separator <SEG> tab and blank <END>
<BEG> decodes a byte array from base64 format <END>
<BEG> return the length of the bom 's byte <END>
<BEG> the byte at the specified position <END>
<BEG> indicates if this bom 's byte equal another <END>
<BEG> parses the string argument a a { link byteorder } <END>
<BEG> constructs a sorted map from canonical charset name to charset object require of every implementation of the java platform <END>
<BEG> string representation of this file comparator <END>
<BEG> compare the two file use delegate comparators <END>
<BEG> compare the two file use the { link file # compareto file } method <END>
<BEG> compare the two file use the { link file # isdirectory } method <END>
<BEG> compare the extension of two file the specified case sensitivity <END>
<BEG> compare the last the last modified date time of two file <END>
<BEG> compare the name of two file with the specified case sensitivity <END>
<BEG> compare the length of two file <END>
<BEG> copy byte from a < code > byte [ ] < code > to an < code > outputstream < code > <END>
<BEG> checks whether the walk have be cancel by call { link # handleiscancelled } <SEG> throw a < code > cancelexception < code > if it have <END>
<BEG> overridable callback method invoke with the content of each directory <END>
<BEG> converts a short value between endian system <END>
<BEG> reads an unsigned short 16-bit value from a byte array at a give offset <END>
<BEG> returns the singleton instance <SEG> which be use by the deprecate <SEG> static method <END>
<BEG> track the specify file <SEG> use the provided marker <SEG> delete the file when the marker instance be garbage collect <END>
<BEG> return the file path that fail to delete <END>
<BEG> call this method to cause the file clean thread to terminate when there be no more object be track for deletion <END>
<BEG> actually delete the file object <SEG> which may be a file or a directory <END>
<BEG> checks to see if the last modification of the file match cutoff favorably <END>
<BEG> checks to see if the file can be write to <END>
<BEG> checks to see if the file be a directory <END>
<BEG> < p > applies an { link iofilefilter } to the provide { link file } object <END>
<BEG> returns a filter that return true if the filename start with the specify text <END>
<BEG> returns a filter that return true if the filename match the specified text <END>
<BEG> returns a filter that check if the file be a directory <END>
<BEG> returns a filter that check if the file be a file and not a directory <END>
<BEG> returns a filter that ands the specified filter <END>
<BEG> create a list of file filter <END>
<BEG> returns a filter that always return true <END>
<BEG> returns an < code > iofilefilter < code > that wrap the < code > filefilter < code > instance <END>
<BEG> returns a filter that return true if the file be last modified before or at the specify cutoff time <END>
<BEG> returns a filter that return true if the file be last modified before or at the same time a the specified reference file <END>
<BEG> returns a filter that filter file base on a cutoff reference file <END>
<BEG> returns a filter that return true if the file be big than a certain size <END>
<BEG> returns a filter that filter base on file size <END>
<BEG> returns a filter that accept file whose size be & gt ; = minimum size and & lt ; = maximum size <END>
<BEG> returns a filter that accept file that begin with the provide magic number <END>
<BEG> decorates a filter to make it ignore cvs directory <END>
<BEG> decorates a filter so that it only apply to directory and not to file <END>
<BEG> < p > accepts the provide file if the file contain the file filter 's magic number at the specified offset <END>
<BEG> checks to see if the filename match <END>
<BEG> checks to see if the filename start with the prefix <END>
<BEG> checks to see if the filename match one of the regular expression <END>
<BEG> checks to see if the size of the file be favorable <END>
<BEG> checks to see if the filename match one of the wildcards <END>
<BEG> determines if windows file system be in use <END>
<BEG> normalizes a path <SEG> remove double and single dot path step <END>
<BEG> converts all separator to the unix separator of forward slash <END>
<BEG> converts all separator to the windows separator of backslash <END>
<BEG> converts all separator to the system separator <END>
<BEG> returns the length of the filename prefix <SEG> such a < code > c : < code > or < code > ~ < code > <END>
<BEG> returns the index of the last directory separator character <END>
<BEG> returns the index of the last extension separator character <SEG> which be a dot <END>
<BEG> gets the path from a full filename <SEG> which exclude the prefix <END>
<BEG> gets the path from a full filename <SEG> which exclude the prefix <SEG> and also exclude the final directory separator <END>
<BEG> gets the full path from a full filename <SEG> which be the prefix + path <END>
<BEG> gets the full path from a full filename <SEG> which be the prefix + path <SEG> and also exclude the final directory separator <END>
<BEG> gets the base name <SEG> minus the full path and extension <SEG> from a full filename <END>
<BEG> checks whether two filename be equal after both have be normalize and use the case rule of the system <END>
<BEG> checks whether the extension of the filename be that specify <END>
<BEG> checks a filename to see if it match the specified wildcard matcher use the case rule of the system <END>
<BEG> construct a file from the set of name element <END>
<BEG> returns the path to the system temporary directory <END>
<BEG> returns a { link file } represent the system temporary directory <END>
<BEG> returns the path to the user 's home directory <END>
<BEG> returns a { link file } represent the user 's home directory <END>
<BEG> opens a { link fileinputstream } for the specify file <SEG> provide well error message than simply call < code > new fileinputstream file < code > <END>
<BEG> opens a { link fileoutputstream } for the specify file <SEG> check and create the parent directory if it do not exist <END>
<BEG> converts a collection contain java io file instance into array representation <END>
<BEG> converts each of an array of < code > url < code > to a < code > file < code > <END>
<BEG> copies a file to a directory optionally preserve the file date <END>
<BEG> copy byte from a < code > file < code > to an < code > outputstream < code > <END>
<BEG> copies a directory to within another directory preserve the file date <END>
<BEG> copies bytes from the url < code > source < code > to a file < code > destination < code > <END>
<BEG> copies bytes from an { link inputstream } < code > source < code > to a file < code > destination < code > <END>
<BEG> copies a file to a directory preserve each file 's date <END>
<BEG> deletes a directory recursively <END>
<BEG> deletes a file <SEG> never throw an exception <END>
<BEG> cleans a directory without delete it <END>
<BEG> waits for nfs to propagate a file creation <SEG> impose a timeout <END>
<BEG> reads the content of a file line by line to a list of strings <END>
<BEG> returns an iterator for the line in a < code > file < code > <END>
<BEG> writes a charsequence to a file create the file if it do not exist <END>
<BEG> schedules a file to be delete when jvm exit <END>
<BEG> makes a directory <SEG> include any necessary but nonexistent parent directory <END>
<BEG> makes any necessary but nonexistent parent directory for a give file <END>
<BEG> returns the size of the specify file or directory <END>
<BEG> counts the size of a directory recursively sum of the length of all file <END>
<BEG> computes the checksum of a file use the crc32 checksum routine <END>
<BEG> moves a directory <END>
<BEG> moves a file or directory to the destination directory <END>
<BEG> determines whether the specify file be a symbolic link rather than an actual file <END>
<BEG> automatically close the stream if the end of stream be reach <END>
<BEG> indicates whether the stream contain one of the specify boms <END>
<BEG> return the bom byte order mark <END>
<BEG> invokes the delegate 's < code > read < code > method <SEG> detect and optionally skip bom <END>
<BEG> invokes the delegate 's < code > read byte [ ] <SEG> int <SEG> int < code > method <SEG> detect and optionally skip bom <END>
<BEG> invokes the delegate 's < code > reset < code > method <END>
<BEG> invokes the delegate 's < code > skip long < code > method <SEG> detect and optionally skip bom <END>
<BEG> mark the target stream param readaheadlimit the number of character that can be read while still retain the ability to do # reset <END>
<BEG> this could be make more efficient by use position to skip within the current buffer <END>
<BEG> this be not the most efficient implementation <SEG> a it re-encodes from the beginning <END>
<BEG> close reset the file back to the start and remove any marked position <END>
<BEG> mark the current position <END>
<BEG> mark be support return true <END>
<BEG> reset the reader to the last marked position or the beginning if mark have not be call <END>
<BEG> skip the specified number of character <END>
<BEG> returns -1 to indicate that the stream be close <END>
<BEG> replaces the underlie input stream with a { link closedinputstream } sentinel <END>
<BEG> adds the number of read byte to the count <END>
<BEG> the number of byte that have pass through this stream <END>
<BEG> set the byte count back to 0 <END>
<BEG> returns the { link messagedigest } <SEG> which be be use for generate the checksum <END>
<BEG> return the size this { link inputstream } emulates <END>
<BEG> return the number of byte that can be read <END>
<BEG> close this input stream - reset the internal state to the initial value <END>
<BEG> read the specified number bytes into an array <END>
<BEG> reset the stream to the point when mark be last call <END>
<BEG> return a byte value for the < code > read < code > method <END>
<BEG> process the byte for the < code > read byte [ ] <SEG> offset <SEG> length < code > method <END>
<BEG> removes all observers <END>
<BEG> notifies the observer by invoke { link observer # data byte [ ] <SEG> int <SEG> int } with the give argument <END>
<BEG> notifies the observer by invoke { link observer # finish } <END>
<BEG> reads all data from the underlie { link inputstream } <SEG> while notify the observer <END>
<BEG> invoked by the read method before the call be proxied <END>
<BEG> invoked by the read method after the proxied call have return successfully <END>
<BEG> handle any ioexceptions thrown <END>
<BEG> tests if the give exception be cause by this stream <END>
<BEG> tags any ioexceptions thrown <SEG> wrap and re-throwing <END>
<BEG> gets whether to keep on run <END>
<BEG> return the delay in millisecond <END>
<BEG> allows the tailer to complete it current loop and return <END>
<BEG> the tailer will call this method during construction <SEG> give the listener a method of stop the tailer <END>
<BEG> this method be call if the tail file be not find <END>
<BEG> called if a file rotation be detect <END>
<BEG> called each time the tailer reach the end of the file <END>
<BEG> returns the default encode to use if none be set in http content-type <SEG> xml prolog and the rule base on content-type be not adequate <END>
<BEG> returns the charset encoding of the xmlstreamreader <END>
<BEG> returns mime type or null if httpcontenttype be null <END>
<BEG> returns charset parameter value <SEG> null if not present <SEG> null if httpcontenttype be null <END>
<BEG> returns the encode guess base on the first byte of the inputstream <END>
<BEG> returns the encode found in the xml prolog of the inputstream <END>
<BEG> returns the mime type in the content-type use to attempt determine the encoding <END>
<BEG> returns the encoding in the content-type use to attempt determine the encoding <END>
<BEG> does the object represent case sensitive comparison <END>
<BEG> compares two string use the case-sensitivity rule <END>
<BEG> checks if one string start with another use the case-sensitivity rule <END>
<BEG> checks if one string contain another at a specific index use the case-sensitivity rule <END>
<BEG> gets a string describe the sensitivity <END>
<BEG> closes a urlconnection <END>
<BEG> closes a < code > closeable < code > unconditionally <END>
<BEG> returns the give reader if it be a { link bufferedreader } <SEG> otherwise create a bufferedreader from the give reader <END>
<BEG> returns the give reader if it be already a { link bufferedreader } <SEG> otherwise create a bufferedreader from the give reader <END>
<BEG> gets content of an < code > inputstream < code > a a < code > byte [ ] < code > <END>
<BEG> gets the content of a < code > reader < code > a a < code > byte [ ] < code > use the specified character encode <END>
<BEG> gets the content of an < code > inputstream < code > a a character array use the specified character encode <END>
<BEG> gets the content of a < code > reader < code > a a character array <END>
<BEG> gets the content of an < code > inputstream < code > a a string use the specified character encode <END>
<BEG> gets the content of an < code > inputstream < code > a a list of strings <SEG> one entry per line <SEG> use the specified character encode <END>
<BEG> gets the content of a < code > reader < code > a a list of strings <SEG> one entry per line <END>
<BEG> returns an iterator for the line in an < code > inputstream < code > <SEG> use the character encode specify or default encode if null <END>
<BEG> converts the specify string to an input stream <SEG> encode a byte use the specified character encode <END>
<BEG> writes byte from a < code > byte [ ] < code > to an < code > outputstream < code > use chunk writes <END>
<BEG> writes byte from a < code > byte [ ] < code > to char on a < code > writer < code > use the specified character encode <END>
<BEG> writes char from a < code > charsequence < code > to byte on an < code > outputstream < code > use the specified character encode <END>
<BEG> copies bytes from an < code > inputstream < code > to an < code > outputstream < code > use an internal buffer of the give size <END>
<BEG> copies bytes from a large over 2gb < code > inputstream < code > to an < code > outputstream < code > <END>
<BEG> copies char from a < code > reader < code > to byte on an < code > outputstream < code > use the specified character encoding <SEG> and call flush <END>
<BEG> skips the requested number of byte or fail if there be not enough leave <END>
<BEG> reads character from an input character stream <END>
<BEG> reads bytes from an input stream <END>
<BEG> indicates whether the < code > reader < code > have more line <END>
<BEG> returns the next line in the wrapped < code > reader < code > <END>
<BEG> unsupported <END>
<BEG> file system observer start check event <END>
<BEG> directory create event <END>
<BEG> file change event <END>
<BEG> returns the set of { link filealterationobserver } register with this monitor <END>
<BEG> run <END>
<BEG> final processing <END>
<BEG> fire onstart <END>
<BEG> return the parent entry <END>
<BEG> set the directory 's file <END>
<BEG> return the last modified time from the last time it be check <END>
<BEG> indicate whether the file exist the last time it be check <END>
<BEG> indicate whether the file be a directory or not <END>
<BEG> write a character to the underlie appendable <END>
<BEG> return the target appendable <END>
<BEG> writes the entire content of the specify input stream to this byte stream <END>
<BEG> writes the entire content of this byte stream to the specify output stream <END>
<BEG> gets the current content of this byte stream a a input stream <END>
<BEG> gets the current content of this byte stream a a string use the specify encoding <END>
<BEG> writes the data buffer in chunk to the underlie stream param data the data to write param srcoffset the offset param length the length of data to write throw ioexception if an i o error occurs <END>
<BEG> write the data buffer in chunk to the underlying writer param data the data param srcoffset the offset param length the number of byte to write throw ioexception upon error <END>
<BEG> updates the count with the number of byte that be be write <END>
<BEG> determines whether or not the data for this output stream have be retain in memory <END>
<BEG> returns the data for this output stream a an array of byte <SEG> assume that the data have be retain in memory <END>
<BEG> closes stream associate with current thread <END>
<BEG> writes a string to the { link stringbuilder } <END>
<BEG> writes a portion of a character array to the { link stringbuilder } <END>
<BEG> returns the threshold <SEG> in byte <SEG> at which an event will be trigger <END>
<BEG> returns the number of byte that have be write to this output stream <END>
<BEG> determines whether or not the configure threshold have be exceed for this output stream <END>
<BEG> checks to see if write the specified number of byte would cause the configured threshold to be exceed <END>
<BEG> write byte from the specify byte array to the stream <END>
<BEG> flush the stream <END>
<BEG> writes the character to the underlying writer <SEG> detect encode <END>
<BEG> called to throw < code > invalidclassexception < code > if an invalid class name be find during deserialization <END>
<BEG> accept the specified class for deserialization <SEG> unless they be otherwise reject <END>
<BEG> reject the specified class for deserialization <SEG> even if they be otherwise accept <END>
<BEG> accept the wildcard specify class for deserialization <SEG> unless they be otherwise reject <END>
<BEG> reject the wildcard specify class for deserialization <SEG> even if they be otherwise accept <END>
<BEG> accept class name that match the supplied pattern for deserialization <SEG> unless they be otherwise reject <END>
<BEG> reject class name that match the supplied pattern for deserialization <SEG> even if they be otherwise accept <END>
<BEG> checks whether the give throwable be tag with the give tag <END>
<BEG> throws the original { link ioexception } if the give throwable be a { link taggedioexception } decorator the give tag <END>
<BEG> start monitor the specify thread <END>
<BEG> < p > callback method invoke when the tls handshake succeed < p > param event the event object carry information about the tls handshake event <END>
<BEG> returns the zip file <END>
<BEG> get the map of fallback mailcapentries base on the mime type <END>
<BEG> return all the mime type know to this mailcap file <END>
<BEG> return all the native comands for the give mime type <END>
<BEG> appendtomailcap : append to this mailcap db <SEG> use the mailcap format : comment == # < i > comment string < i > entry == mimetype ; javabeanclass < nl > example : # this be a comment image gif jaf viewer imageviewer <END>
<BEG> a routine to parse individual entry in a mailcap file <END>
<BEG> get the mimetypeentry base on the file extension <END>
<BEG> get the mime type string correspond to the file extension <END>
<BEG> appends string of entry to the type registry <SEG> must be valid mime type format <END>
<BEG> set the datahandler for this commandobject param datahandler the datahandler <END>
<BEG> set the data stream <SEG> component to assume it be ready to be read <END>
<BEG> return the mime type for this dataflavor <END>
<BEG> set the human presentable name <END>
<BEG> compares the dataflavor pass in with this dataflavor ; call the < code > ismimetypeequal < code > method <END>
<BEG> is the string representation of the mime type pass in equivalent to the mime type of this dataflavor <END>
<BEG> called for each mime type string to give dataflavor subtypes the opportunity to change how the normalization of mime type be accomplish <END>
<BEG> return the command verb <END>
<BEG> return the command 's class name <END>
<BEG> return the instantiated javabean component <END>
<BEG> set the default commandmap <END>
<BEG> return the datasource associate with this instance of datahandler <END>
<BEG> return the mime type of this object a retrieve from the source object <END>
<BEG> write the data to an < code > outputstream < code > < p > if the datahandler be create with a datasource <SEG> writeto retrieve the inputstream and copy the byte from the inputstream to the outputstream pass in <END>
<BEG> get an outputstream for this datahandler to allow overwrite the underlie data <END>
<BEG> return the dataflavors in which this data be available <END>
<BEG> set the commandmap for use by this datahandler <END>
<BEG> return the < i > prefer < i > command for this type of data <END>
<BEG> return all the command for this type of data <END>
<BEG> return the data in it preferred object form <END>
<BEG> a convenience method that take a commandinfo object and instantiate the corresponding command <SEG> usually a javabean component <END>
<BEG> this method return the mime type of the data in the form of a string <END>
<BEG> return the file object that correspond to this filedatasource <END>
<BEG> set the filetypemap to use with this filedatasource param map the filetypemap for this object <END>
<BEG> sets the default filetypemap for the system <END>
<BEG> get all the available command in all mailcap file know to this instance of mailcapcommandmap for this mime type <END>
<BEG> get the native command for the give mime type <END>
<BEG> retrieve the primary type of this object <END>
<BEG> set the primary type for this object to the give string <END>
<BEG> retrieve this object 's parameter list <END>
<BEG> retrieve the value associate with the give name <SEG> or null if there be no current association <END>
<BEG> set the value to be associate with the give name <SEG> replace any previous association <END>
<BEG> remove any value associate with the give name <END>
<BEG> return a string representation of this object without the parameter list <END>
<BEG> determine if the primary and sub type of this object be the same a what be in the give type <END>
<BEG> the object implement the writeexternal method to save it content by call the method of dataoutput for it primitive value or call the writeobject method of objectoutput for object <SEG> string and array <END>
<BEG> a routine for parse the parameter list out of a string <END>
<BEG> retrieve an enumeration of all the name in this list <END>
<BEG> prepend the mime type value to the registry <END>
<BEG> return the mime type base on the specify file name <END>
<BEG> returns the value of the url content-type header field <END>
<BEG> calls the < code > getfile < code > method on the url use to instantiate the object <END>
<BEG> the getinputstream method from the url <END>
<BEG> return the url use to create this datasource <END>
<BEG> tells the hound to bay param loudness 0 for mute <SEG> 1 be the softest and 255 be the loud param duration the duraction of the bay in second <END>
<BEG> implemented without class checking <END>
<BEG> obtains the internal { link client } use to communicate with the { link org jsr107 tck integration cacheloaderserver } <END>
<BEG> gets the vendor-specific error code <END>
<BEG> gets the exception link to this one <END>
<BEG> write the object to the output stream <SEG> use the specify mime type <END>
<BEG> return the dataflavors for this < code > datacontenthandler < code > return the dataflavors <END>
<BEG> append the give argument to this argument <END>
<BEG> write out give string a an astring <SEG> depend on the type of the character inside the string <END>
<BEG> convert the give string into byte in the specified charset <SEG> and write the byte out a an astring <END>
<BEG> write out give bytearrayoutputstream a a literal <END>
<BEG> write out give string a an atom <END>
<BEG> write out number <END>
<BEG> write out all the buffered item into the output stream <END>
<BEG> set the count of byte <END>
<BEG> returns a bytearrayinputstream <END>
<BEG> grow the byte array by incr byte <END>
<BEG> adds a response handler <END>
<BEG> removed the specify response handler <END>
<BEG> notify response handler <END>
<BEG> returns whether this protocol support non-synchronizing literal default be false <END>
<BEG> send a command to the server <END>
<BEG> convenience routine to handle ok <SEG> no <SEG> bad and bye response <END>
<BEG> start tls on the current connection <END>
<BEG> disconnect <END>
<BEG> temporarily turn off protocol tracing <SEG> e g <SEG> to prevent trace the authentication sequence <SEG> include the password <END>
<BEG> resume protocol tracing <SEG> if it be enable to begin with <END>
<BEG> return a response object that look like a bye protocol response <END>
<BEG> skip to the next space <SEG> for use in error recovery while parse <END>
<BEG> return the next byte from this statement <END>
<BEG> extract an atom <SEG> but stop at the additional delimiter if not nul <END>
<BEG> read a string a an arbitrary sequence of character <SEG> stop at the delimiter used to read part of a response code inside [ ] <END>
<BEG> extract an integer <SEG> start at the current position <END>
<BEG> special case <SEG> return the data after the continuation uninterpreted <END>
<BEG> extract an astring <SEG> start at the current position and return a a string <END>
<BEG> return the tag <SEG> if this be a tagged statement <END>
<BEG> get the identifier name for this acl entry <END>
<BEG> override this method to make it a no-op <SEG> rather than throw an illegalwriteexception <END>
<BEG> the imap protocol do n't support return the entire part content in one operation so we have to fake it by concatenate the header stream and the content stream <END>
<BEG> ensure the folder be close <END>
<BEG> return the last component of this folder 's full name <END>
<BEG> check whether this folder really exist on the server <END>
<BEG> list all subfolders match the specified pattern <END>
<BEG> list all subscribe subfolders match the specified pattern <END>
<BEG> get the separator character <END>
<BEG> check whether this folder be subscribe <END>
<BEG> check whether this folder have new message <END>
<BEG> delete this folder <END>
<BEG> open this folder in the give mode <END>
<BEG> prefetch attribute <SEG> base on the give fetchprofile <END>
<BEG> set the specified flag for the give array of message <END>
<BEG> return the permanent flag support by the server <END>
<BEG> append the give message into this folder <END>
<BEG> copy the specified message from this folder <SEG> to the specify destination <END>
<BEG> search whole folder for message match the give term <END>
<BEG> returns the predicted uid that will be assign to the next message that be append to this folder <END>
<BEG> get the messages specify by the give range <END>
<BEG> set the quota for the quotaroot specify in the quota argument <END>
<BEG> add an access control list entry to the access control list for this folder <END>
<BEG> remove any access control list entry for the give identifier from the access control list for this folder <END>
<BEG> add the right specify in the acl to the entry for the identifier specify in the acl <END>
<BEG> get all the right that may be allow to the give identifier <END>
<BEG> get the attribute that the imap server return with the list response <END>
<BEG> if an idle command be in progress <SEG> abort it if necessary <SEG> and wait until it complete <END>
<BEG> assert : this method must be call only when hold the messagecachelock <END>
<BEG> get this folder 's store 's protocol connection <END>
<BEG> return the imapprotocol object for this folder <END>
<BEG> execute a user-supplied imap command <END>
<BEG> release the store protocol object <END>
<BEG> get the message object for the give sequence number <END>
<BEG> reads the next byte of data from this buffer input stream <END>
<BEG> returns the number of byte that can be read from this input stream without block <END>
<BEG> get the messagecachelock <SEG> associate with this message 's folder <END>
<BEG> do a noop to force any untagged expunge response and then check if this message be expunge <END>
<BEG> get the replyto address <END>
<BEG> get the decoded subject <END>
<BEG> get the recieved date internaldate <END>
<BEG> get the message size <END>
<BEG> get the content language <END>
<BEG> get the in-reply-to header <END>
<BEG> get the filename disposition parameter <END>
<BEG> get all the byte for this message <END>
<BEG> get the datahandler object for this message <END>
<BEG> write out the byte into the give outputstream <END>
<BEG> get all non-matching headerlines <END>
<BEG> test if the give flags be set in this message <END>
<BEG> set whether or not to use the peek variant of fetch when fetch message content <END>
<BEG> invalidate cache header and envelope information for this message <END>
<BEG> this method be call after the connection be make and tls be start if need <SEG> but before any authentication be attempt <END>
<BEG> set the user name that will be use for subsequent connection after this store be first connect for example <SEG> when create a connection to open a folder <END>
<BEG> set the password that will be use for subsequent connection after this store be first connect for example <SEG> when create a connection to open a folder <END>
<BEG> get a new authenticate protocol object for this folder <END>
<BEG> get a store protocol object for use by a folder <END>
<BEG> if a select succeed <SEG> but indicate that the folder be read-only <SEG> and the user ask to open the folder read_write <SEG> do we allow the open to succeed ? <END>
<BEG> report whether the separatestoreconnection be set <END>
<BEG> report whether connection pool debugging be enable <END>
<BEG> report whether the connection pool be full <END>
<BEG> release the protocol object back to the connection pool <END>
<BEG> release a store protocol object that be be use by a folder <END>
<BEG> get the number of millisecond to cache status response <END>
<BEG> get the maximum size of a message to buffer for append <END>
<BEG> get the minimum amount of time to delay when return from idle <END>
<BEG> return true if the specified capability string be in the list of capability the server announce <END>
<BEG> get name folder <END>
<BEG> using the imap namespace command rfc 2342 <SEG> return a set of folder represent the personal namespaces <END>
<BEG> using the imap namespace command rfc 2342 <SEG> return a set of folder represent the user 's namespaces <END>
<BEG> get the quota for the name quota root <END>
<BEG> set the quota for the quota root specify in the quota argument <END>
<BEG> use the imap idle command see < a href= http : www ietf org rfc rfc2177 txt > rfc 2177 < a > <SEG> if support by the server <SEG> to enter idle mode so that the server can send unsolicited notification without the need for the client to constantly poll the server <END>
<BEG> size of cache <END>
<BEG> remove all the expunge message from the array <SEG> return a list of removed message object <END>
<BEG> add count message to the cache <END>
<BEG> read a list of space-separated flag_extension sequence and return the list a a array of strings <END>
<BEG> convert an array of integer into an array of messagesets <END>
<BEG> convert an array of messagesets into an imap sequence range <END>
<BEG> count the total number of element in an array of messagesets <END>
<BEG> check if the text term in the give searchterm contain non us-ascii character <END>
<BEG> does this string contain only ascii character ? <END>
<BEG> add the specify right to this rights object <END>
<BEG> add all the right in the give rights object to this rights object <END>
<BEG> remove all right in the give rights object from this rights object <END>
<BEG> check whether the specify right be present in this rights object <END>
<BEG> check whether all the right in the specified rights object be present in this rights object <END>
<BEG> check whether the two rights object be equal <END>
<BEG> returns a clone of this rights object <END>
<BEG> run thru the give array of message <SEG> apply the give condition on each message and generate set of contiguous sequence-numbers for the successful message <END>
<BEG> always throw < code > messagingexception < code > because no pop3 folder can contain subfolders <END>
<BEG> always return a nul character because pop3 do n't support a hierarchy <END>
<BEG> always return folder holds_messages <END>
<BEG> always return < code > false < code > ; the pop3 protocol do n't support create folder <END>
<BEG> always throw < code > methodnotsupportedexception < code > because the pop3 protocol do n't allow the inbox to be delete <END>
<BEG> throws < code > foldernotfoundexception < code > unless this folder be name inbox <END>
<BEG> always return an empty < code > flags < code > object because the pop3 protocol do n't support any permanent flag <END>
<BEG> will not change while the folder be open because the pop3 protocol do n't support notification of new message arrive in open folder <END>
<BEG> always throw < code > methodnotsupportedexception < code > because the pop3 protocol do n't support expunge message without close the folder ; call the { link # close close } method with the < code > expunge < code > argument set to < code > true < code > instead <END>
<BEG> prefetch information about pop3 message <END>
<BEG> return the size of this folder <SEG> a be return by the pop3 stat command when this folder be open <END>
<BEG> return the size of all message in this folder <SEG> a return by the pop3 list command <END>
<BEG> return the raw result of the pop3 list command with no argument <END>
<BEG> centralize access to the protocol object by pop3message object so that they will fail appropriately when the folder be close <END>
<BEG> used by pop3message <END>
<BEG> produce the raw byte of the content <END>
<BEG> return the mime format stream correspond to this message part <END>
<BEG> invalidate the cache of content for this message object <SEG> cause it to be fetch again from the server the next time it be need <END>
<BEG> fetch the header of the message and the first < code > n < code > line of the raw content of the message <END>
<BEG> get all the header for this header name <SEG> return a a single string <SEG> with header separate by the delimiter <END>
<BEG> return all the header from this message a an enumeration of header object <END>
<BEG> return match header from this message a an enumeration of header object <END>
<BEG> add a raw rfc822 header-line <END>
<BEG> get all header line a an enumeration of strings <END>
<BEG> pop3 message ca n't be change <END>
<BEG> output the message a an rfc 822 format stream <SEG> without specify header <END>
<BEG> allow the client to authenticate the server base on it response <END>
<BEG> return the address that fail <END>
<BEG> set the from address to appear in the smtp envelope <END>
<BEG> return the envelope from address <END>
<BEG> get notification option <END>
<BEG> return notification option a an rfc 1891 string <END>
<BEG> set return option to be use if server support delivery status notification < a href= http : www ietf org rfc rfc1891 txt > rfc 1891 < a > <END>
<BEG> if set to true <SEG> and the server support the 8bitmime extension <SEG> text part of this message that use the quoted-printable or base64 encoding be convert to use 8bit encode if they follow the rfc 2045 rule for 8bit text <END>
<BEG> is use of the 8bitmime extension be allow ? <END>
<BEG> send message if some address be invalid ? <END>
<BEG> gets the extension string to use with the mail command <END>
<BEG> ensure we 're at the beginning of a line <END>
<BEG> convert the byte within the specified range of the give byte array into a signed integer in the give radix <END>
<BEG> convert the byte within the specified range of the give byte array into a string <END>
<BEG> read the next decoded byte from this input stream <END>
<BEG> skips over and discard n byte of data from this stream <END>
<BEG> tests if this input stream support mark <END>
<BEG> encodes < code > len < code > bytes from the specify < code > byte < code > array start at offset < code > off < code > to this output stream <END>
<BEG> encodes the specified < code > byte < code > to this output stream <END>
<BEG> forces any buffered output byte to be encode out to the stream and close this output stream <END>
<BEG> returns the length of the encoded version of this byte array <END>
<BEG> read a line contain only ascii character from the input stream <END>
<BEG> gets the logmanger for the running jvm <END>
<BEG> creates a new filter from the give class name <END>
<BEG> creates a new log record comparator from the give class name <END>
<BEG> creates a new error manager from the give class name <END>
<BEG> returns a property object that contain a snapshot of the current state <END>
<BEG> required to work with proputil <END>
<BEG> it be assume that this method will never be call <END>
<BEG> check if this < tt > handler < tt > would actually log a give < tt > logrecord < tt > into it internal buffer <END>
<BEG> it be possible for the handler to be close after the call to isloggable <END>
<BEG> pushes any buffer record to the email server a normal priority <END>
<BEG> set the log level specify which message level will be log by this < tt > handler < tt > <END>
<BEG> sets the push filter <END>
<BEG> gets the comparator use to order all < tt > logrecord < tt > object prior to format <END>
<BEG> gets the number of log record the internal buffer can hold <END>
<BEG> gets the < tt > authenticator < tt > use to login to the email server <END>
<BEG> sets the attachment < tt > formatter < tt > object for this handler <END>
<BEG> gets the attachment name formatters <END>
<BEG> sets the attachment file name formatters <END>
<BEG> sets a literal string for the email subject <END>
<BEG> sets the subject formatter for email <END>
<BEG> protected convenience method to report an error to this handler 's errormanager <END>
<BEG> calls log manager checkaccess if this be seal <END>
<BEG> determines the mimetype of a formatter from the gethead call <END>
<BEG> determines if the give throwable be a no content exception <END>
<BEG> return true if all host should be trust <END>
<BEG> param trustallhosts should all host be trust ? <END>
<BEG> param trustedhosts the host to trust <END>
<BEG> if a content-type handler have be specify <SEG> call it to clean up the content-type value <END>
<BEG> get an integer value property <END>
<BEG> writes < code > b length < code > bytes to this output stream <END>
<BEG> get the name field from the prefix <END>
<BEG> buffer up character till we get a line 's worth <SEG> then encode and write them out <END>
<BEG> return the type of this event return type <END>
<BEG> invokes the appropriate connectionlistener method <END>
<BEG> if this event indicate that a folder be rename <SEG> i e <SEG> the event type be renamed <SEG> then this method return the folder object represent the new name <END>
<BEG> indicates whether this event be the result of an explicit expunge by this client <SEG> or due to an expunge from external source <END>
<BEG> return the array of message add or remove <END>
<BEG> return the address that be valid but to which this message be not send <END>
<BEG> get the message object associate with this transport event <END>
<BEG> enqueue an event <END>
<BEG> stop the dispatcher so we can be destroy <END>
<BEG> add the give special item a one of the attribute to be prefetched <END>
<BEG> add the specified header-field to the list of attribute to be prefetched <END>
<BEG> get the item set in this profile <END>
<BEG> get the name of the header-fields set in this profile <END>
<BEG> add the specified system flag to this flags object <END>
<BEG> remove the specify user flag from this flags object <END>
<BEG> return all the system flag in this flags object <END>
<BEG> get the string that be be parse when the error be detect null if not relevant <END>
<BEG> get the position with the reference string where the error be detect -1 if not relevant <END>
<BEG> return a parameterlist object that hold all the available parameter <END>
<BEG> set the specified parameter <END>
<BEG> set a new parameterlist <END>
<BEG> retrieve a rfc2045 style string representation of this contentdisposition <END>
<BEG> match with the specify contenttype object <END>
<BEG> convert this address into a rfc 822 rfc 2047 encode address <END>
<BEG> returns a properly format address rfc 822 syntax of unicode character <END>
<BEG> the equality operator <END>
<BEG> convert the give array of internetaddress object into a comma separate sequence of address string <END>
<BEG> validate that this address conform to the syntax rule of rfc 822 <END>
<BEG> indicates whether this address be an rfc 822 group address <END>
<BEG> return the member of a group address <END>
<BEG> return all the value for the specify header <END>
<BEG> change the first header line that match name to have value <SEG> add a new header if no exist header match <END>
<BEG> add a header with the specify name and value to the header list <END>
<BEG> remove all header entry that match the give name param name header name <END>
<BEG> return all match { link javax mail header } object <END>
<BEG> add an rfc822 header line to the header store <END>
<BEG> return all the header line a an enumeration of strings <END>
<BEG> return all non-matching header line <END>
<BEG> parses the give date in the format specify by draft-ietf-drums-msg-fmt-08 in the current timezone <END>
<BEG> return the size of the content of this body part in byte <END>
<BEG> return the number of line for the content of this part <END>
<BEG> returns the value of the rfc 822 content-type header field <END>
<BEG> set the content-id header field of this body part <END>
<BEG> return an inputstream to the raw data with any content-transfer-encoding intact <END>
<BEG> return a datahandler for this body part 's content <END>
<BEG> return the content a a java object <END>
<BEG> this method provide the mechanism to set this body part 's content <END>
<BEG> a convenience method for set this body part 's content <END>
<BEG> this method set the body part 's content to a multipart object <END>
<BEG> use the specify file to provide the data for this part <END>
<BEG> save the content of this part in the specify file <END>
<BEG> restrict the encoding to value allow for the content-type of the specified mimepart <END>
<BEG> parse the inputstream set the < code > header < code > and < code > content < code > field appropriately <END>
<BEG> set the rfc 822 from header field <END>
<BEG> set the rfc 822 from header field use the value of the < code > internetaddress getlocaladdress < code > method <END>
<BEG> add the specified address to the exist from field <END>
<BEG> returns the recepients specify by the type <END>
<BEG> add the give address to the specify recipient type <END>
<BEG> set the subject header field <END>
<BEG> returns the date on this message be receive <END>
<BEG> return a datahandler for this message 's content <END>
<BEG> get a new message suitable for a reply to this message <END>
<BEG> return a < code > flags < code > object contain the flag for this message <END>
<BEG> check whether the flag specify in the < code > flag < code > argument be set in this message <END>
<BEG> updates the appropriate header field of this message to be consistent with the message 's content <END>
<BEG> update the message-id header <END>
<BEG> create and return a mimemessage object <END>
<BEG> return the number of enclosed bodypart object <END>
<BEG> get the mimebodypart refer to by the give contentid cid <END>
<BEG> remove the specified part from the multipart message <END>
<BEG> return true if the final boundary line for this multipart be see <END>
<BEG> get the preamble text <SEG> if any <SEG> that appear before the first body part of this multipart <END>
<BEG> set the preamble text to be include before the first body part <END>
<BEG> iterates through all the part and output each mime part separate by a boundary <END>
<BEG> parse the inputstream from our datasource <SEG> construct the appropriate mimebodyparts <END>
<BEG> datasource method to return a name <END>
<BEG> return the < code > messagecontext < code > for the current part <END>
<BEG> convert this address into a rfc 1036 address <END>
<BEG> returns the content transfer encode specify when this object be create <END>
<BEG> get a unique value for use in a multipart boundary string <END>
<BEG> get a unique value for use in a message-id <END>
<BEG> return the part that contain the content <END>
<BEG> return the session we 're operate in <END>
<BEG> get the next exception chain to this one <END>
<BEG> overrides the < code > getcause < code > method of < code > throwable < code > to return the next exception in the chain of nested exception <END>
<BEG> returns the protocol support by this provider <END>
<BEG> returns name of the class that implement the protocol <END>
<BEG> returns name of vendor associate with this implementation or null <END>
<BEG> returns version of this implementation or null if no version <END>
<BEG> set a resource limit for this quota root <END>
<BEG> equality comparison <END>
<BEG> return the address to match with <END>
<BEG> return the search term <END>
<BEG> the and operation <END>
<BEG> { multipart mp = multipart p getcontent ; int count = mp getcount ; for int i = 0 ; i < count ; i++ if matchpart mp getbodypart i return true ; } else if p ismimetype message rfc822 { return matchpart part p getcontent ; } } catch exception ex { } return false ; } equality comparison <END>
<BEG> return true if test whether the flag be set <END>
<BEG> return the name of the header to compare with <END>
<BEG> return the type of recipient to match with <END>
<BEG> set the connection state of this service <END>
<BEG> close this service and terminate it connection <END>
<BEG> add a listener for connection event on this service <END>
<BEG> do n't bother queue an event if there 's no listener <END>
<BEG> add the event and vector of listener to the queue to be deliver <END>
<BEG> get a new session object <END>
<BEG> set the debug set for this session <END>
<BEG> returns the stream to be use for debug output <END>
<BEG> set the passed provider to be the default implementation for the protocol in provider protocol override any previous value <END>
<BEG> get a store object for the give urlname <END>
<BEG> return any saved passwordauthentication for this store or transport urlname <END>
<BEG> returns the properties object associate with this session return properties object <END>
<BEG> return an inputstream for the data <END>
<BEG> get the mime content type of the data <END>
<BEG> return the current position in the inputstream <SEG> a an offset from the beginning of the inputstream <END>
<BEG> return the persistenceutil instance return persistenceutil instance since java persistence 2 0 <END>
<BEG> returns the current persistence provider resolver <END>
<BEG> defines the persistence provider resolver use <END>
<BEG> returns information about the servlet <SEG> such a author <SEG> version <SEG> and copyright <END>
<BEG> returns the time the < code > httpservletrequest < code > object be last modified <SEG> in millisecond since midnight january 1 <SEG> 1970 gmt <END>
<BEG> returns the value of the attribute that have be add <SEG> remove or replace <END>
<BEG> return the name of the attribute that change on the servletcontext <END>
<BEG> returns the exception that cause this servlet exception <END>
<BEG> writes a < code > string < code > to the client <SEG> without a carriage return-line feed crlf character at the end <END>
<BEG> writes a carriage return-line feed crlf to the client <END>
<BEG> writes a < code > string < code > to the client <SEG> follow by a carriage return-line feed crlf <END>
<BEG> writes a < code > boolean < code > value to the client <SEG> follow by a carriage return-line feed crlf <END>
<BEG> writes a character to the client <SEG> follow by a carriage return-line feed crlf <END>
<BEG> writes an int to the client <SEG> follow by a carriage return-line feed crlf character <END>
<BEG> returns a < code > boolean < code > indicate whether the servlet be permanently unavailable <END>
<BEG> returns the number of second the servlet expect to be temporarily unavailable <END>
<BEG> returns the throwable that cause the error <END>
<BEG> redefined flush so it be not legal <END>
<BEG> default processing of the start tag returning eval_body_buffered <END>
<BEG> prepare for evaluation of the body : stash the bodycontent away <END>
<BEG> prepare for evaluation of the body just before the first body evaluation : no action <END>
<BEG> after the body evaluation : do not reevaluate and continue with the page <END>
<BEG> get current bodycontent <END>
<BEG> get surround out jspwriter <END>
<BEG> the type a a string of this attribute <END>
<BEG> convenience static method that go through an array of tagattributeinfo object and look for id <END>
<BEG> whether this attribute be of type jspfragment <END>
<BEG> get the value for a give attribute <END>
<BEG> enumerates the attribute <END>
<BEG> information on script variable define by the tag associate with this tagextrainfo instance <END>
<BEG> translation-time validation of the attribute <END>
<BEG> where to find the tag file implement this action <END>
<BEG> returns information about this tag <SEG> parse from the directive in the tag file <END>
<BEG> attribute information in the tld on this tag <END>
<BEG> set the instance for extra tag information <END>
<BEG> the instance if any for extra tag information <END>
<BEG> the information string for the tag <END>
<BEG> the instance of tablibraryinfo we belong to <END>
<BEG> get dynamicattributes associate with this taginfo <END>
<BEG> the value of the uri attribute from the taglib directive for this library <END>
<BEG> the preferred short name prefix a indicate in the tld <END>
<BEG> the reliable urn indicate in the tld the uri element <END>
<BEG> information documentation for this tld <END>
<BEG> a string describe the required version of the jsp container <END>
<BEG> an array describe the tag that be define in this tag library <END>
<BEG> an array describe the tag file that be define in this tag library <END>
<BEG> get the taginfo for a give tag name <SEG> look through all the tag in this tag library <END>
<BEG> get the tagfileinfo for a give tag name <SEG> look through all the tag file in this tag library <END>
<BEG> set the init data in the tld for this validator <END>
<BEG> release any data keep by this instance for validation purpose <END>
<BEG> the body of the & lt ; name-given & gt ; element <END>
<BEG> get the localized validation message <END>
<BEG> gets the resource bundle of this i18n localization context <END>
<BEG> gets the locale of this i18n localization context <END>
<BEG> returns an array of object [ ] object <END>
<BEG> returns the number of row in the cached resultset return the number of cached row <SEG> or -1 if the result could not be initialize due to sqlexceptions <END>
<BEG> converts < code > maxrows < code > of a < code > resultset < code > object to a < code > result < code > object <END>
<BEG> returns true if the give sax attributelist be suitable <SEG> give our attribute name and target ; return false otherwise <END>
<BEG> filter for ignoreablewhitespace <END>
<BEG> returns true if the give name match the step object 's name <SEG> take into account the step object 's wildcards ; return false otherwise <END>
<BEG> returns a list of this step object 's predicate <END>
<BEG> public static method retrieves a message with no argument <END>
<BEG> retrieves a message with arbitrarily many argument <END>
<BEG> returns a connection use the drivermanager and all set property <END>
<BEG> always throw a sqlexception <END>
<BEG> < p > establishes a variable resolver < p > param resolver variable resolver <END>
<BEG> < p > establishes a namespace context < p > param nscontext namespace context to use <END>
<BEG> get prefix bound to namespace uri in the current scope param namespace uri return prefix bound to namespace uri throw illegalargumentexception if namespace uri be null <END>
<BEG> get all prefixes bound to namespace uri in the current scope param namespace uri return iterator of prefixes bound to namespace uri throw illegalargumentexception if namespace uri be null <END>
<BEG> populate map of prefix and namespace uri 's entry <END>
<BEG> get the basic version string for the current release <END>
<BEG> print the processor version to the command line <END>
<BEG> name of product <END>
<BEG> major version number <END>
<BEG> release number <END>
<BEG> maintenance drop number <END>
<BEG> return the nested exception if any return the nested exception or null <END>
<BEG> gets the location of the exception return the location of the exception <SEG> may be null if none be available <END>
<BEG> retrieves the warning chain to this < code > resourcewarning < code > object <END>
<BEG> adds an < code > resourcewarning < code > object to the end of the chain <END>
<BEG> set the error code <END>
<BEG> add a link exception to this resourceexception <END>
<BEG> set the connection handle <END>
<BEG> gets the target managedconnectionfactory for which the user name and password have be set by the application server <END>
<BEG> sets the target managedconenctionfactory instance for which the user name and password have be set by the application server <END>
<BEG> compares this passwordcredential with the specified object for equality <END>
<BEG> returns the hash code for this passwordcredential return hash code for this passwordcredential <END>
<BEG> set the transaction timeout value for a imported transaction <END>
<BEG> invoked when a < code > work < code > instance have be accept <END>
<BEG> obtain the exception that cause the ejbexception be throw <END>
<BEG> prints the composite message and the embedded stack trace to the specify print writer < code > pw < code > <END>
<BEG> set a namevalue object in this list <END>
<BEG> compare if two namevalue list be equal <END>
<BEG> do a lookup on a give name and return value associate with it <END>
<BEG> get the namevalue record give a name <END>
<BEG> returns a boolean telling if this namevaluelist have a record with this name <END>
<BEG> remove the element correspond to this name <END>
<BEG> get a list of parameter name <END>
<BEG> return the match expression <END>
<BEG> recursively override the field of this object with the field of a new object <END>
<BEG> debug printing function <END>
<BEG> an introspection base predicate match use a template object <END>
<BEG> formatter with a give starting indentation <END>
<BEG> return true if this support reflection base cloning <END>
<BEG> fetch the next object from the list base on the default list iterator <END>
<BEG> concatenate two compatible header list <SEG> add the argument either to the beginning or the tail end of this list <END>
<BEG> convert this list of header to a format string <END>
<BEG> convert this list of header to a string for print with an indentation give <END>
<BEG> alias for the encode function above <END>
<BEG> match with a template return true if we have a superset of the give template <END>
<BEG> compare for equality of host <END>
<BEG> get the hostname field return string <END>
<BEG> convenience function to get the raw ip destination address of a sip message a a string <END>
<BEG> set the hostname member <END>
<BEG> set the address member param address address string to set <END>
<BEG> return true if the address be a dns host name and not an ipv4 address return true if the hostname be a dns name <END>
<BEG> return true if the address be a dns host name and not an ipv4 address return true if the hostname be host address <END>
<BEG> get the inet address from this host <END>
<BEG> verifies whether the ipv6reference <SEG> i e <END>
<BEG> return true if the two object be equal <SEG> false otherwise <END>
<BEG> get the host field return host field <END>
<BEG> set the host member param h host to set <END>
<BEG> return the internet address correspond to the host <END>
<BEG> handle an unexpected exception <END>
<BEG> handle an unexpected condition and print the error code <END>
<BEG> a flag that indicate that doublequotes should be put around the value when encode for example name=value when value be doublequoted <END>
<BEG> non-javadoc see java util map $ entry # getkey <END>
<BEG> non-javadoc see java util map $ entry # setvalue java lang object <END>
<BEG> get a vector of the buffer tokenized by line <END>
<BEG> get the sdp field name of the line return string <END>
<BEG> audits the sanity of all thread return an audit report string multiple line <SEG> or null if all be well <END>
<BEG> get the string encode version of this object since v1 0 <END>
<BEG> returns the name of this attribute throw sdpparseexception if the name be not well format <END>
<BEG> allow for null value when set the value <END>
<BEG> returns the bandwidth value measure in kilobit per second <END>
<BEG> returns the type audio <SEG> video etc of the medium define by this description <END>
<BEG> returns the port of the medium define by this description throw sdpparseexception return the integer medium port <END>
<BEG> returns the number of port associate with this medium description throw sdpparseexception return the integer port count <END>
<BEG> sets the number of port associate with this medium description <END>
<BEG> returns the protocol over which this medium should be transmit <END>
<BEG> returns an vector of the medium format support by this description <END>
<BEG> get the sessionid member <END>
<BEG> this be a work around for some implementation that do not set a long session id <END>
<BEG> set the session version a a string <END>
<BEG> sets the unique identity of the session <END>
<BEG> returns the type of the network for this connection throw sdpparseexception return the string network type <END>
<BEG> set the phonenumber member param phonenumber - phone number to set <END>
<BEG> get the string encode version of this object since v1 0 here <SEG> we implement only the name < phonenumber > form and not the phonenumber name form <END>
<BEG> get precondition return vector of attribute field segment precondition <END>
<BEG> set preconditions param precondition - vector with precondition attribute throw sdpexception -- if precondition attribute be null <END>
<BEG> < p > set attribute line for current precondition state <SEG> give a string value encode like the curr attribute value < p > param precondcurrvalue - a string with the value for a curr attribute throw sdpexception <END>
<BEG> < p > get the attribute field with the name conf for confirmation precondition < p > < p > ietf rfc3312 < p > < p > the confirmation status attribute carry threshold condition for a medium stream <END>
<BEG> returns the version number <END>
<BEG> set the repeat interval in second <END>
<BEG> sets the active duration in second <END>
<BEG> returns whether the field will be output a a typed time or a integer value <END>
<BEG> convert to a string representation for printing <END>
<BEG> do a template match of field <END>
<BEG> generic introspection base print funciton for this package <END>
<BEG> sets the value param value the - new information <END>
<BEG> returns the stop time of the session throw sdpparseexception return the stop time of the session <END>
<BEG> returns whether the start and stop time be set to zero in ntp <END>
<BEG> sets the start and stop time to zero in ntp <END>
<BEG> add an element to the zone adjustment list <END>
<BEG> get the zone adjustment list <END>
<BEG> encode this structure into a canonical form <END>
<BEG> returns a hashtable of adjustment time <SEG> where : key = date <END>
<BEG> return the media field of the description <END>
<BEG> returns value of the info field i= of this object <END>
<BEG> sets the i= field of this object <END>
<BEG> set the connection data for this entity param conn to set throw sdpexception if the connexion be null <END>
<BEG> returns the bandwidth of the specify type <END>
<BEG> set the value of the bandwidth with the specify type param bandwidth type of the bandwidth object whose value be request throw sdpexception if vector be null <END>
<BEG> returns the integer value of the specify bandwidth name <END>
<BEG> sets the value of the specify bandwidth type <END>
<BEG> sets encryption key information <END>
<BEG> returns the set of attribute for this description a a vector of attribute object in the order they be parse <END>
<BEG> adds the specified attribute to this description object <END>
<BEG> sets the value of the specify attribute param name the name of the attribute <END>
<BEG> removes the attribute specify by the value parameter <END>
<BEG> returns a vector contain a string indicate the mime type for each of the codecs in this description <END>
<BEG> returns a vector contain a string of parameter for each of the codecs in this description <END>
<BEG> < p > set the media description 's precondition fields < p > < p > issue by miguel freitas it ptinovacao < p > param precondition vector contain preconditionfields throw sdpexception <END>
<BEG> < p > set the media description 's precondition fields < p > < p > issue by miguel freitas it ptinovacao < p > param precondition preconditionfields parameter <END>
<BEG> < p > get attribute field of segmented precondition < p > < p > issue by miguel freitas it ptinovacao < p > return vector of attribute field segment precondition <END>
<BEG> get the typed time <END>
<BEG> parse the zone field string return zonefield <END>
<BEG> specifies whether to generate a=rtpmap : attribute for static rtp avp format string <END>
<BEG> returns the version of sdp in use <END>
<BEG> returns information about the originator of the session <END>
<BEG> sets a an email address to contact for further information about the session <END>
<BEG> returns a timefield indicate the start <SEG> stop <SEG> repetition and time zone information of the session <END>
<BEG> returns the time zone adjustment for the session param create boolean to set throw sdpexception return a hashtable contain the zone adjustment <SEG> where the key be the adjusted time zone and the value be the offset <END>
<BEG> set the connection data for this entity <END>
<BEG> set the value of the bandwidth with the specify type <END>
<BEG> adds a mediadescription to the session description <END>
<BEG> returns the canonical string representation of the current sessiondescrption <END>
<BEG> returns the list of repeat time r= field specify in the sessiondescription <END>
<BEG> add a repeat field <END>
<BEG> create a sip uri <END>
<BEG> create a sipuri param user -- the user param host -- the host <END>
<BEG> creates a telurl base on give uri string <END>
<BEG> get the port from the imbedded uri <END>
<BEG> get the host name from the address <END>
<BEG> compare two address spec for equality <END>
<BEG> remove the displayname field <END>
<BEG> returns the uri address of this address <END>
<BEG> this determine if this address be a wildcard address <END>
<BEG> mark this a wild card address type <END>
<BEG> get the userinfo memnber <END>
<BEG> get password from the user info <END>
<BEG> get the user name if it exist <END>
<BEG> remove the user infor <END>
<BEG> encode the uri <END>
<BEG> returns the value of the scheme of this uri <SEG> for example sip <SEG> sip or tel <END>
<BEG> constructor give the scheme <END>
<BEG> clear the password from the user part if it exist <END>
<BEG> clear all qheaders <END>
<BEG> remove the uri parameter <END>
<BEG> accessor forsipobjects return get the query header that appear after the ? <END>
<BEG> returns the stucture correspond to the telephone number provide that the user be a telephone subscriber <END>
<BEG> get the host and port of the server <END>
<BEG> return true if the user be a telephone subscriber <END>
<BEG> remove the ttl value from the parameter list if it exist <END>
<BEG> remove the maddr param if it exist <END>
<BEG> delete the transport string <END>
<BEG> set the default parameter for this uri <END>
<BEG> set the uriparms member param parms uri parameter to set <END>
<BEG> set a give uri parameter <END>
<BEG> set the method param method method parameter <END>
<BEG> sets isdn subaddress of sipurl param isdnsubaddress isdn subaddress <END>
<BEG> set the port to a give value <END>
<BEG> boolean to check if a parameter of a give name exists <END>
<BEG> set the query header when provide a a name-value pair <END>
<BEG> set the parameter a give <END>
<BEG> remove a parameter give it name param name -- name of the parameter to remove <END>
<BEG> set the hostport field of the imbedded authority field <END>
<BEG> returns the value of the name header <SEG> or null if it be not set <END>
<BEG> returns the value of the < code > lr < code > parameter <SEG> or null if this be not set <END>
<BEG> returns true if this sipuri be secure i e <END>
<BEG> sets the value of the specify header field to be include in a request construct from the uri <END>
<BEG> set the host portion of the sipuri param host host to set <END>
<BEG> sets the scheme of this uri to sip or sip depend on whether the argument be true or false <END>
<BEG> returns whether the the < code > lr < code > parameter be set <END>
<BEG> get the isdn subaddress for this number <END>
<BEG> return true if this header have parameter <END>
<BEG> be a global telephone number <END>
<BEG> set the specified parameter param name string to set param value object to set <END>
<BEG> returns an iterator over the name strings of all parameter <END>
<BEG> sets isdn subaddress of this telurl <END>
<BEG> return the string encode <END>
<BEG> non-javadoc see android javax sip address telurl # getphonecontext <END>
<BEG> compare for equality <END>
<BEG> clear the password field <END>
<BEG> set the user type to telephone_subscriber or user <END>
<BEG> non-javadoc see android gov nist javax sip clientauthutils authenticationhelper # attachauthenticationheaders android javax sip message request <END>
<BEG> non-javadoc see android gov nist javax sip clientauthutils authenticationhelper # removecachedauthenticationheaders java lang string <END>
<BEG> authenticate the inbound request <END>
<BEG> authenticate the inbound request give plain text password <END>
<BEG> non-javadoc see android gov nist core net addressresolver # resolveaddress android javax sip address hop <END>
<BEG> the reason for the dialog timeout event be deliver to the application <END>
<BEG> return true if this header allow all contenttypes <SEG> false otherwise <END>
<BEG> remove the q value <END>
<BEG> set the q value param qvalue float to set throw illegalargumentexception if qvalue be < 0 0 or > 1 0 <END>
<BEG> set the mediarange member param m mediarange field <END>
<BEG> encode the value of this header <END>
<BEG> get qvalue field return float <END>
<BEG> get the qvalue field <END>
<BEG> sets q-value for media-range in acceptlanguageheader <END>
<BEG> gets the language value of the acceptlanguageheader <END>
<BEG> sets the language parameter of this acceptlanguageheader <END>
<BEG> sets the eventtype define in this alloweventsheader <END>
<BEG> gets an iterator of all the method of the alloweventsheader <END>
<BEG> sets the method support define by this alloweventsheader <END>
<BEG> this be only use for the parser interface <END>
<BEG> encode in canonical form <END>
<BEG> sets the realm of the wwwauthenicateheader to the < var > realm < var > parameter value <END>
<BEG> sets the algorithm of the wwwauthenicateheader to the new < var > algorithm < var > parameter value <END>
<BEG> sets the value of the stale parameter of the wwwauthenicateheader to the < var > stale < var > parameter value <END>
<BEG> set the nonce count pakrameter <END>
<BEG> get the response value or null if it do not exist <END>
<BEG> get the name value pair for a give authentication info parameter <END>
<BEG> sets the nonce count of the authenticationinfoheader to the < var > noncecount < var > parameter value <END>
<BEG> get the host field return host member string <END>
<BEG> set the callid field param cid strimg to set throw illegalargumentexception if cid be null or be not a token or token token <END>
<BEG> set the purpose field param purpose be the purpose field <END>
<BEG> set the uri field param info be the uri to set <END>
<BEG> get authparms list <END>
<BEG> get qop value return string <END>
<BEG> boolean function param name string to set return true if this header have the specify parameter <SEG> false otherwise <END>
<BEG> boolean function return true if this header have some parameter <END>
<BEG> delete the specified parameter param name string return true if the specify parameter have be remove <SEG> false otherwise <END>
<BEG> get the contact list <END>
<BEG> get the parameter list return namevaluelist <END>
<BEG> get expires parameter <END>
<BEG> encode value of header into canonical string <END>
<BEG> set the dispositiontype field <END>
<BEG> gets the interpretation of the message body or message body part of this contentdispositionheader <END>
<BEG> canonical encoding of body of the header <END>
<BEG> canonical encoding of the value of the header <END>
<BEG> set the languagetag field param languagetag -- language tag to set <END>
<BEG> pattern matcher ignore content length <END>
<BEG> compare two mediarange header <END>
<BEG> set the content type and subtype <END>
<BEG> return canonical encode header <END>
<BEG> non-javadoc see android javax sip header cseqheader # setsequencenumber long <END>
<BEG> non-javadoc see android javax sip header cseqheader # setmethod java lang string <END>
<BEG> sets the relative expire value of the expiresheader <END>
<BEG> return the canonical encoding of this header <END>
<BEG> encode the body part of this header i e <END>
<BEG> boolean function return true if the tag exist <END>
<BEG> encode the header content into a string <END>
<BEG> set pretty encode on off <END>
<BEG> creates a new acceptencodingheader base on the newly supply encode value <END>
<BEG> creates a new cseqheader base on the newly supply sequence number and method value <END>
<BEG> creates a new fromheader base on the newly supply address and tag value <END>
<BEG> create a header from the give header text <END>
<BEG> create and return a list of header <END>
<BEG> creates a new p-associated-uri header base on the supplied address param assocuri - address return newly create p-associated-uri header throw nullpointerexception if the supplied address be null throw parseexception <END>
<BEG> p-called-party-id header param address - address return newly create p-called-party-id header throw nullpointerexception throw parseexception <END>
<BEG> p-charging-function-addresses header return newly create p-charging-function-addresses header <END>
<BEG> privacy header param privacytype - privacy type string return newly create privacy header throw nullpointerexception <END>
<BEG> set the accesstpe param accesstypeval - access type throw nullpointerexception <END>
<BEG> return string access type <END>
<BEG> param cgi -- string cgi value throw nullpointerexception -- if null argument pass in throws parseexception -- if bad argument pass in <END>
<BEG> return string utran cell id value <END>
<BEG> param dsllocation - string with the dsl location value throw nullpointerexception throw parseexception <END>
<BEG> return string dsl location value <END>
<BEG> < p > set the uri on this address < p > param associateduri - genericuri to be set in the address of this header throw nullpointerexception when supply uri be null <END>
<BEG> < p > set the charging collection function ccf address < p > param ccfaddress - the address to set in the ccf parameter throw parseexception <END>
<BEG> < p > add another charging collection function ccf address to this header < p > param ccfaddress - the address to set in the ccf parameter throw parseexception <END>
<BEG> < p > get all the charging collection function ccf addresses set in this header < p > return listiterator that constains all ccf address of this header <END>
<BEG> < p > remove parameter < p > param value - of the parameter param name - of the parameter return true if parameter be remove <SEG> and false if not <END>
<BEG> no need to check for the presence of icid-value <END>
<BEG> < p > get the icid-value parameter value < p > return the value of the icid-value parameter <END>
<BEG> < p > get the icid-generated-at parameter value < p > return the icid-generated-at parameter value <END>
<BEG> < p > set the orig-ioi parameter < p > param origioi - value to set in the orig-ioi parameter <END>
<BEG> get the medium authorization token <END>
<BEG> encode header return the header content <END>
<BEG> get privacy type return privacy type <END>
<BEG> suppress direct setting of value <END>
<BEG> set the visited network id a a token param networkid - token value <END>
<BEG> get the visited network id value of this header <END>
<BEG> set encryption algorithm ealg parameter param ealg - encryption algorithm value throw parseexception <END>
<BEG> set algorithm alg parameter param alg - algorithm value throw parseexception <END>
<BEG> set protocol prot paramater param prot - protocol value throw parseexception <END>
<BEG> set mode mod parameter param mod - mode value throw parseexception <END>
<BEG> set server spi spi-s parameter param spis - spi-s value throw invalidargumentexception - when value be not valid <END>
<BEG> get security mechanism return security mechanims value <END>
<BEG> get encryption algorithm return ealg parameter value <END>
<BEG> get algorithm return alg parameter value <END>
<BEG> get client spi return spi-c parameter value <END>
<BEG> get server port return port-s parameter value <END>
<BEG> generate canonical form of the header <END>
<BEG> boolean function return true if maxforwards field reach zero <END>
<BEG> decrement maxforwards field one by one <END>
<BEG> get the protocol name + version jvb : this be what be return in the viaheader interface for 'getprotocol ' return string : protocolname + ' ' + version <END>
<BEG> non-javadoc see android gov nist javax sip header authenticationheader # geturi since 1 2 this method be deprecate <SEG> uri be not a valid paramter for this header fail silently for backwards compatibility <END>
<BEG> non-javadoc see android gov nist javax sip header authenticationheader # seturi android javax sip address uri since 1 2 this method be deprecate <SEG> uri be not a valid paramter for this header fail silently for backwards compatibility <END>
<BEG> gets the option tag of this optiontag class <END>
<BEG> gets the cseq sequence number of this rackheader <END>
<BEG> deprecate see android javax sip header rackheader # setcseqnumber int <END>
<BEG> get the cause token <END>
<BEG> set the protocol param protocol - protocol to set <END>
<BEG> gets the unique string name of this header <END>
<BEG> encode the body of this header the stuff that follow headername <END>
<BEG> boolean function return true if comment exist <SEG> false otherwise <END>
<BEG> remove comment field <END>
<BEG> gets the retry after value of the retryafterheader <END>
<BEG> gets the comment of retryafterheader <END>
<BEG> sets the comment value of the retryafterheader <END>
<BEG> gets the sequence number of this rseqheader <END>
<BEG> encode the header into a string <END>
<BEG> sets date of dateheader <END>
<BEG> this method need to be add for backwards compatibility to avoid classcast exception on v1 1 application see android javax sip header extensionheader # setvalue java lang string <END>
<BEG> get the header value i e <END>
<BEG> return false if this be not a header list sipheaderlist overrrides this method <END>
<BEG> alias for getheadervalue <END>
<BEG> concatenate the list of stuff that we be keep around and also the text correspond to these structure that we parse <END>
<BEG> add to this list <END>
<BEG> concatenate two compatible list <END>
<BEG> return a list of encoded string one for each sipheader <END>
<BEG> get the class for the header of this list <END>
<BEG> remove the first element of this list <END>
<BEG> set the root class for all object insert into my list for assertion check param cl class to set <END>
<BEG> template match against a template <END>
<BEG> make a clone of this header list <END>
<BEG> return the iterator to the imbedded list <END>
<BEG> set the priority member param etag -- the entity tag to set <END>
<BEG> do a merge of the genericobjects contain in this list with the genericobjects in the mergelist <END>
<BEG> generate the canonical form <END>
<BEG> gets the subject value of subjectheader return subject of subjectheader <END>
<BEG> just the encoded body of the header <END>
<BEG> return true if delay exist return boolean <END>
<BEG> return a canonical value <END>
<BEG> encode only the body of this header <END>
<BEG> returns the list value of the product parameter <END>
<BEG> accessor for the sentby field return sentby field <END>
<BEG> get the host <SEG> port and transport a a hop <END>
<BEG> set the protocol version param protocolversion string to set <END>
<BEG> set the host of the via header param host string to set <END>
<BEG> set the host part of this viaheader to the newly supply < code > host < code > parameter <END>
<BEG> returns the host part of this viaheader <END>
<BEG> return the rport parameter <END>
<BEG> gets the received paramater of the viaheader <END>
<BEG> sets the received parameter of viaheader <END>
<BEG> encode the body of the header return the stuff follow name : <END>
<BEG> gets code of warningheader return code of warningheader <END>
<BEG> gets agent host of warningheader return agent host of warningheader <END>
<BEG> get the associated list class <END>
<BEG> return a list object for this header if it have an associate list object <END>
<BEG> this be for test -- allow you to generate invalid request <END>
<BEG> set the common useragent header for all request create from this message factory <END>
<BEG> get the default common server header <END>
<BEG> set default charset use for encode string content <END>
<BEG> non-javadoc see android gov nist javax sip message multipartmimecontentext # setcontent java lang string <SEG> java lang string <SEG> android gov nist javax sip message content <END>
<BEG> encode only the message and exclude the content for debug ; return a string with all the header encode <END>
<BEG> get a dialog identifier construct from this messsage <END>
<BEG> get a dialog id give the remote tag <END>
<BEG> merge a request with a template param template -- template to merge with <END>
<BEG> encode this message a a string <END>
<BEG> get the string representation of this header for pretty print the generated structure <END>
<BEG> attach a header replace the original header <END>
<BEG> set a header from a link list of header <END>
<BEG> remove a header give it name <END>
<BEG> generate compute a transaction id for this sip message <END>
<BEG> return true if this message have a body <END>
<BEG> return an iterator for the list of header in this message <END>
<BEG> get the first header of the give name <END>
<BEG> get the errorinfo list of header null if one do not exist <END>
<BEG> get the topmost via header <END>
<BEG> set the max forward header <END>
<BEG> get the callid header null if one do not exist return call-id header <END>
<BEG> get the callid header null if one do not exist param callid -- the call identifier to be assign to the call id header <END>
<BEG> get the recordroute header list null if one do not exist <END>
<BEG> get the message content a an array of byte <END>
<BEG> set the message content give type and subtype <END>
<BEG> get the content body of the message <END>
<BEG> set the message content for a give type and subtype <END>
<BEG> method to set the content - call by the parser param content throw parseexception <END>
<BEG> get a sip header or header list give it name <END>
<BEG> get a header of the give name a a string <END>
<BEG> return true if the message have a from header tag <END>
<BEG> return the from tag <END>
<BEG> set the to tag <END>
<BEG> add a sip header <END>
<BEG> add a header to the unparsed list of header <END>
<BEG> get content disposition header or null if no such header exists <END>
<BEG> set the expiresheader param expiresheader -- the expires header to set <END>
<BEG> set the size of all the header <END>
<BEG> non-javadoc see android javax sip message message # addlast android javax sip header header <END>
<BEG> set the cseq header <END>
<BEG> get the multipart mime content <END>
<BEG> returns the charset to use for encode decode the body of this message <END>
<BEG> set a flag to indiate this be a special message encode with crlfcrlf <END>
<BEG> return true iff the method be a target refresh <END>
<BEG> return true iff the method be a dialog create method <END>
<BEG> get the request line of the siprequest <END>
<BEG> set the request line of the sip request <END>
<BEG> check header for constraint <END>
<BEG> a conveniance function to access the request uri <END>
<BEG> get the method from the request line <END>
<BEG> encode only the header and not the content <END>
<BEG> match with a template <END>
<BEG> the ack request construct by the client transaction must contain value for the call-id <SEG> from <SEG> and request-uri that be equal to the value of those header field in the request pass to the transport by the client transaction call this the original request <END>
<BEG> get the host from the topmost via header <END>
<BEG> book keep field to set the current tx for the request <END>
<BEG> set the message channel for the request bookkeeping field <END>
<BEG> generate an identifier from the from tag <SEG> call-id <SEG> and cseq <END>
<BEG> parse the string message return sipheader acceptencoding object throw parseexception if the message do not respect the spec <END>
<BEG> parse the accept string header return sipheader acceptlist object throw sipparseexception if the message do not respect the spec <END>
<BEG> parse and return a date field <END>
<BEG> parse the sip header from the buffer and return a parsed structure <END>
<BEG> parse the header name until the colon and chew ws after that <END>
<BEG> the urn consist of a hierarchical service identifier or application identifier <SEG> with a sequence of label separate by period the left-most label be the most significant one and be call 'top-level service identifier ' <SEG> while name to the right be call 'sub-services ' or 'sub-applications ' <END>
<BEG> parse the string message and generate the recordroute list object return sipheader the recordroute list object throw parseexception if error occur during the parsing <END>
<BEG> add a class that implement a sipmessagelistener interface whose method get call on successful parse and error conditons <END>
<BEG> this be input read thread for the pipelined parser <END>
<BEG> parse a buffer contain a single sip message where the body be an array of un-interpreted byte <END>
<BEG> parse an address nameaddr or address spec and return and address structure <END>
<BEG> parse a host name and return a parsed structure <END>
<BEG> parse a uri from a string and return a uri structure for it <END>
<BEG> parse an individual sip message header from a string <END>
<BEG> overrides the superclass namevalue parser because we have to tolerate ipv6 address in the received parameter <END>
<BEG> set the original transaction for a forked response <END>
<BEG> get the original transaction for which this be a forked response <END>
<BEG> set the remote port from which response be receive <END>
<BEG> get the remote ip addr <END>
<BEG> returns true a this be a reliable transport <END>
<BEG> get my sip stack <END>
<BEG> get the address of the client that send the data to u <END>
<BEG> return a formatted message to the client <END>
<BEG> gets invoke by the parser a a callback on successful message parse i e <END>
<BEG> this get invoked when thread start be call from the constructor <END>
<BEG> get an identifying key <END>
<BEG> get the host to assign to outgo message <END>
<BEG> get the port of the peer to whom we be send message <END>
<BEG> return address for default proxy to forward the request to <END>
<BEG> performs strict router fix accord to rfc3261 section 16 6 step 6 pre : top route header in request have no 'lr ' parameter in uri post : request-uri add a last route header <SEG> new req-uri = top-route-uri <END>
<BEG> non-javadoc see android javax sip address router # getnexthop android javax sip message request <END>
<BEG> debugging println <END>
<BEG> return true if this be uriroute <END>
<BEG> it be assume the current thread have lock the lock previously <END>
<BEG> send message to whoever be connect to u <END>
<BEG> tcp is not a secure protocol <END>
<BEG> call back method <END>
<BEG> called by sctpmessageprocessor when one or more byte be available for read throw ioexception <END>
<BEG> set the log file name param name be the name of the log file to set <END>
<BEG> log an exception stack trace <END>
<BEG> set aux information <END>
<BEG> see android gov nist javax sip stack sipclienttransaction # sendrequest <END>
<BEG> called by the transaction stack when a timeout timer fire <END>
<BEG> start the timer task <END>
<BEG> see android gov nist javax sip stack sipclienttransaction # setdialog android gov nist javax sip stack sipdialog <SEG> java lang string <END>
<BEG> set the remote party for this dialog <END>
<BEG> add a route list extacted from the contact list of the incoming message <END>
<BEG> return true if this dialog be terminate on bye <END>
<BEG> mark that the dialog have see an ack <END>
<BEG> return true if a terminate event be deliver to the application a a result of the dialog termination <END>
<BEG> see android javax sip dialog # setapplicationdata <END>
<BEG> return true if this request can be consume by the dialog <END>
<BEG> this method be call when a forked dialog be create from the client side <END>
<BEG> debugging print for the dialog <END>
<BEG> return true if the dialog have already see the ack <END>
<BEG> return true if ack be send for client tx <END>
<BEG> gets the route set for the dialog <END>
<BEG> return true if this be a re-establishment of the dialog <END>
<BEG> add a transaction record to the dialog <END>
<BEG> get the last transaction from the dialog <END>
<BEG> get the invite transaction null if no invite transaction <END>
<BEG> increment the local cseq # for the dialog <END>
<BEG> get the remote sequence number for cseq assignment of outgo request within this dialog <END>
<BEG> start the dialog timer <END>
<BEG> check the tag of the response against the tag of the dialog <END>
<BEG> non-javadoc see android javax sip dialog # terminateonbye boolean <END>
<BEG> return true if the dialog have already be map to a transaction <END>
<BEG> release the semaphore for ack processing so the next re-invite may proceed <END>
<BEG> non-javadoc see android gov nist javax sip dialogext # setbacktobackuseragent boolean <END>
<BEG> release reference so the gc can clean up dialog state <END>
<BEG> in case of fork scenario <SEG> set the original dialog that have be fork param defaultdialog <END>
<BEG> set the ack send strategy to be use by this dialog param acksendingstrategy <END>
<BEG> send a response <END>
<BEG> see android gov nist javax sip stack sipservertransaction # processrequest android gov nist javax sip message siprequest <SEG> android gov nist javax sip stack messagechannel <END>
<BEG> return the book-keeping information that we actually use <END>
<BEG> after the first reliable provisional response for a request have be acknowledge <SEG> the uas may send additional reliable provisional response <END>
<BEG> enables retransmission timer event for this transaction to begin after the number of tick pass to this routine <END>
<BEG> enables a timeout event to occur for this transaction after the number of tick pass to this method <END>
<BEG> this realize basic requirement form rfc 17 2 4 and 8 1 3 1 see android gov nist javax sip stack siptransaction # raiseioexceptionevent <END>
<BEG> add a new client transaction to the set of exist transaction <END>
<BEG> find suitable messageprocessor and call it 's { link messageprocessor # closereliableconnection string <SEG> int } method pass peeraddress and peerport a argument <END>
<BEG> close the message channel <END>
<BEG> run method for the thread that get create for each accept socket <END>
<BEG> stop the message processor <END>
<BEG> run method specify by runnnable <END>
<BEG> return a reply from a pre-constructed reply <END>
<BEG> get the stack address for the stack that receive this message <END>
<BEG> get the name address of the host that send me the message return the name of the sender from the datagram packet <END>
<BEG> get the address of the host that send me the message return the sender ip address <END>
<BEG> get the logical originator of the message from the top via header <END>
<BEG> get the logical port of the message orginator from the top via hdr <END>
<BEG> get port on which to listen for incoming stuff <END>
<BEG> thread main routine <END>
<BEG> shut down the message processor <END>
<BEG> create and return new tcpmessagechannel for the give host port <END>
<BEG> udp can handle a message as large a the max_datagram_size <END>
<BEG> return true if there be any message in use <END>
<BEG> convert an array of byte to an hexadecimal string return a string param b bytes array to convert to a hexadecimal string <END>
<BEG> squeeze out all white space from a string and return the reduced string <END>
<BEG> generate a call identifier <END>
<BEG> generate a tag for a from header or to header <END>
<BEG> generate a cryptographically random identifier that can be use to generate a branch identifier <END>
<BEG> returns the throwable system exception that make this sdpexception necessary <END>
<BEG> obtain an instance of an sdpfactory <END>
<BEG> returns bandwidth object with the specify value <END>
<BEG> returns origin object with the specified property <END>
<BEG> returns timedescription unbounded i e <END>
<BEG> returns a string contain the computed form for a multi-connection address <END>
<BEG> returns a connection object with the specify property and a network and address type of in and ip4 respectively <END>
<BEG> returns a time specification with the specified start and stop time <END>
<BEG> returns an unbounded time specification i e <SEG> t=0 0 <END>
<BEG> constructs a timezone adjustment record <END>
<BEG> param ntptime long to set return returns a date object for a give ntp date value <END>
<BEG> returns a long contain the ntp value for a give java date <END>
<BEG> returns the line number where the error occur return the line number where the error occur <END>
<BEG> returns the cause of this throwable or null if the cause be nonexistent or unknown <END>
<BEG> return transport use for the failed write attempt <END>
<BEG> gets the server transaction associate with this requestevent return the server transaction associate with this requestevent <END>
<BEG> gets the request message associate with this requestevent <END>
<BEG> gets the dialog associate with the event or null if no dialog exist <END>
<BEG> returns the current < var > pathname < var > of the sipfactory <END>
<BEG> this method reset 's the sipfactory 's reference to the object 's it have create <END>
<BEG> indicates if the transaction associate with this transactionterminatedevent be a server transaction <END>
<BEG> override this method if the batchlet will end in response to the joboperator stop operation <END>
<BEG> override this method if the checkpointalgorithm establish a checkpoint timeout <END>
<BEG> override this method for the checkpointalgorithm to do something before a checkpoint interval begin before the next chunk transaction begin <END>
<BEG> override this method for the checkpointalgorithm to do something after a checkpoint be take after the chunk transaction be committed <END>
<BEG> override this method if the itemreader require any open time processing <END>
<BEG> override this method if the chunklistener will do something before the chunk begin <END>
<BEG> override this method if the chunklistener will do something before the chunk transaction be roll back <END>
<BEG> override this method if the itemprocesslistener will do something before the item be process <END>
<BEG> override this method if the itemprocesslistener will do something when the itemprocessor processitem method throw an exception <END>
<BEG> override this method to analyze partitioncollector payload <END>
<BEG> override this method to analyze partition end status <END>
<BEG> override this method to take action before partitioned step processing begin <END>
<BEG> override this method to take action before normal partitioned step processing end <END>
<BEG> override this method to take action when a partitioned step be roll back <END>
<BEG> obtain the exception that cause the ejbexception to be throw <END>
<BEG> create and initialize an embeddable ejb container with a set of configuration property <END>
<BEG> set the day of the month attribute <END>
<BEG> return the value of the day of the month attribute <END>
<BEG> return the timezone <SEG> if set ; otherwise null <END>
<BEG> set the < code > info < code > object make available to timer callback <END>
<BEG> if the base object be < code > null < code > and the property be a name that be resolvable by the beannameresolver <SEG> return the value resolve by the beannameresolver <END>
<BEG> if the base be null and the property be a name resolvable by the beannameresolver <SEG> attempt to determine if the bean be writable <END>
<BEG> always return < code > string class < code > <SEG> since a bean name be a string <END>
<BEG> returns whether the give name be resolve by the beannameresolver param beanname the name of the bean <END>
<BEG> returns the bean know by it name <END>
<BEG> sets a value to a bean of the give name <END>
<BEG> indicates if the bean of the give name be read-only or writable param beanname the name of the bean return < code > true < code > if the bean can be set to a new value <END>
<BEG> allow create a bean of the give name if it do not exist <END>
<BEG> adds the give resolver to the list of component resolvers <END>
<BEG> called to indicate that a < code > elresolver < code > have successfully resolve a give base <SEG> property pair <END>
<BEG> returns whether an { link elresolver } have successfully resolve a give base <SEG> property pair <END>
<BEG> associates a context object with this < code > elcontext < code > <END>
<BEG> retrieves the < code > importhandler < code > associate with this < code > elcontext < code > <END>
<BEG> registers an evaluation listener to the elcontext <END>
<BEG> returns the list of registered evaluation listener <END>
<BEG> notifies the listener before an el expression be evaluate param expr the el expression string to be evaluate <END>
<BEG> notifies the listener after an el expression be evaluate param expr the el expression string that have be evaluate <END>
<BEG> notifies the listener when the base <SEG> property pair be resolve param base the base object param property the property object <END>
<BEG> inquires if the name be a lambdaargument param arg a possible lambda formal parameter name return true if arg be a lambdaargument <SEG> false otherwise <END>
<BEG> retrieves the lambda argument associate with a formal parameter <END>
<BEG> installs a lambda argument map <SEG> in preparation for the evaluation of a lambda expression <END>
<BEG> exits the lambda expression evaluation <END>
<BEG> return the elcontext use for parse and evaluate el expression <END>
<BEG> define a bean in the local bean repository param name the name of the bean param bean the bean instance to be define <END>
<BEG> evaluates an el expression <END>
<BEG> evaluates an el expression <SEG> and coerce the result to the specify type <END>
<BEG> sets an expression with a new value <END>
<BEG> assign an el expression to an el variable <END>
<BEG> define an el function in the local function mapper <END>
<BEG> this method duplicate code in com sun el util reflectionutil <END>
<BEG> receives notification before an el expression be evaluate param context the elcontext param expression the el expression string to be evaluate <END>
<BEG> receives notification when the base <SEG> property pair be resolve param context the elcontext param base the base object param property the property object <END>
<BEG> < p > create a new instance of a < code > expressionfactory < code > <SEG> with optional property <END>
<BEG> retrieves an elresolver that implement the operation in collection <END>
<BEG> retrieve a function map contain a pre-configured function mapping <END>
<BEG> adds a static method that can be use a a function <END>
<BEG> import all the class in a package <END>
<BEG> set the elcontext to use in evaluate the lambdaexpression <END>
<BEG> invoke the encapsulated lambda expression <END>
<BEG> return whether this methodexpression be create with parameter <END>
<BEG> use isparametersprovided instead <END>
<BEG> returns the return type of the method return the return type of the method <END>
<BEG> if the base object be an instance of < code > resourcebundle < code > <SEG> the provided property will first be coerce to a < code > string < code > <END>
<BEG> if the base object be an instance of < code > resourcebundle < code > <SEG> return < code > null < code > <SEG> since the resolver be read only <END>
<BEG> if the base object be not null and an instanceof { link resourcebundle } <SEG> return < code > true < code > <END>
<BEG> if the base object be a resourcebundle <SEG> return an < code > iterator < code > contain the set of key available in the < code > resourcebundle < code > <END>
<BEG> construct if need and return a default elresolver <END>
<BEG> add a custom elresolver to the context <END>
<BEG> get the local bean repository return the bean repository <END>
<BEG> < p > inquires whether the static field be writable < p > < p > if the base object be an instance of < code > elclass < code > and the property be a string <SEG> the < code > propertyresolved < code > property of the < code > elcontext < code > object must be set to < code > true < code > by the resolver <SEG> before return <END>
<BEG> returns a { link valuereference } for this expression instance <END>
<BEG> utility method for check the { code isshutdown } value of the current thread if it be a { link manageablethread } create from { link managedthreadfactory # newthread java lang runnable managedthreadfactory newthread } <END>
<BEG> returns a { link runnable } object that also implement { link managedtask } interface so it can receive notification of lifecycle event with the provide { link managedtasklistener } and to provide additional execution property when the task be submit to a { link managedexecutorservice } or a { link managedscheduledexecutorservice } <END>
<BEG> returns this enumeration value 's integer value <END>
<BEG> returns the string table for class actiontype <END>
<BEG> returns the enumeration value table for class actiontype <END>
<BEG> return an object of the specify value <END>
<BEG> returns the low integer value use by this enumeration value 's enumeration class <END>
<BEG> retrieve the singleton deploymentfactorymanager return deploymentfactorymanager instance <END>
<BEG> registers a deploymentfactory so it will be able to handle request <END>
<BEG> retrieve the targetmoduleid for this event return the object contain the targetmoduleid <END>
<BEG> retrieve the status information <END>
<BEG> < p class= changed_added_2_0 > return the singleton <SEG> stateless <SEG> thread-safe { link resourcehandler } for this application <END>
<BEG> < p class= changed_added_2_0 > set the { link resourcehandler } instance that will be utilize for render the markup for resource <SEG> and for satisfy client request to serve up resource < p > < div class= changed_added_2_0 > param resourcehandler the new < code > resourcehandler < code > instance throw illegalstateexception if this method be call after at least one request have be process by the < code > lifecycle < code > instance for this application <END>
<BEG> < p > find a < code > resourcebundle < code > a define in the application configuration resource under the specify name <END>
<BEG> < p class= changed_added_2_0 > return the project stage for the currently run application instance <END>
<BEG> < p > < span class= changed_modified_2_0_rev_a > cause < span > an the argument < code > resolver < code > to be add to the resolver chain a specify in section jsf 5 5 1 of the javaserver faces specification < p > < p > it be not possible to remove an < code > elresolver < code > register with this method <SEG> once it have be register < p > < p > it be illegal to register an < code > elresolver < code > after the application have receive any request from the client <END>
<BEG> < p > return the singleton { link elresolver } instance to be use for all el resolution <END>
<BEG> < p class= changed_added_2_2 > return the thread-safe singleton { link flowhandler } for this application <END>
<BEG> < p class= changed_added_2_2 > set the { link flowhandler } instance use by the { link navigationhandler } to satisfy the requirement of the face flow feature < p > param newhandler the flow handler to set <END>
<BEG> < p class= changed_added_2_0 > register a validator by it id that be apply to all < code > uiinput < code > component in a view <END>
<BEG> < p class= changed_added_2_0 > return an immutable < code > map < code > over the set of currently register default validator ids and their class name for this < code > application < code > < p > < p > an implementation be provide that return < code > collections emptymap < code > so that user that decorate the < code > application < code > continue to work <END>
<BEG> < p class= changed_added_2_3 > set the { link searchexpressionhandler } instance use by the application < p > param searchexpressionhandler the { link searchexpressionhandler } <END>
<BEG> < p class= changed_added_2_3 > cause the argument < code > resolver < code > to be add to the head of the resolver chain < p > < div class= changed_added_2_3 > < p > it be not possible to remove a { link searchkeywordresolver } register with this method <SEG> once it have be register < p > < p > the default implementation throw < code > unsupportedoperationexception < code > and be provide for the sole purpose of not break exist application that extend { link application } < p > < div > throw illegalstateexception if call after the first request to the { link javax face webapp facesservlet } have be service <END>
<BEG> < p class= changed_added_2_3 > return the singleton { link searchkeywordresolver } instance to be use for all search keyword resolution <END>
<BEG> < p class= changed_modified_2_3 > if this factory have be decorate <SEG> the implementation do the decorating may override this method to provide access to the implementation be wrap < p > since 2 0 <END>
<BEG> < p class= changed_added_2_0 > a convenience method to signal the javaserver faces implementation to perform navigation with the provide outcome <END>
<BEG> < p class= changed_added_2_2 > called by the flow system to cause the flow to be inspect for navigation rule <END>
<BEG> < p > return the localized detail text <END>
<BEG> < p > set the localized detail text < p > param detail the new localized detail text <END>
<BEG> < p > set the severity level < p > param severity the new severity level throw illegalargumentexception if the specified severity level be not one of the supported value <END>
<BEG> < p > return the localized summary text < p > return the localized summary text <END>
<BEG> return < code > true < code > if { link # render } have be call <SEG> otherwise < code > false < code > since 2 0 <END>
<BEG> < p > marks this message a have be render to the client < p > since 2 0 <END>
<BEG> < p class= changed_added_2_0 > construct an absolute url to this < code > navigationcase < code > instance use { link javax face application viewhandler # getactionurl } on the path portion of the url < p > param context the { link facescontext } for the current request return the action url <END>
<BEG> < p class= changed_added_2_0 > construct an absolute url suitable for a redirect to this < code > navigationcase < code > instance use { link javax face application viewhandler # getredirecturl } on the path portion of the url < p > param context the { link facescontext } for the current request return the redirect url <END>
<BEG> < p class= changed_added_2_0 > construct an absolute url suitable for a bookmarkable link to this < code > navigationcase < code > instance use { link javax face application viewhandler # getbookmarkableurl } on the path portion of the url <END>
<BEG> < p class= changed_added_2_0 > return the < code > & lt ; from-view-id & gt ; < code > of the < code > & lt ; navigation-rule & gt ; < code > inside which this < code > & lt ; navigation-case & gt ; < code > be nest < p > return the from viedid <END>
<BEG> < p class= changed_added_2_0 > return the < code > & lt ; from-action & gt ; < code > for this < code > & lt ; navigation-case & gt ; < code > < p > return the from action <END>
<BEG> < p class= changed_added_2_0 > evaluates the < code > & lt ; to-view-id & gt ; < code > for this < code > & lt ; navigation-case & gt ; < code > < p > param context the { link facescontext } for the current request return the view id that should be navigate to <END>
<BEG> < p class= changed_added_2_0 > test if this navigation case have an associate < code > & lt ; if & gt ; < code > element <END>
<BEG> < p class= changed_added_2_0 > evaluates the < code > & lt ; if & gt ; < code > for this < code > & lt ; navigation-case & gt ; < code > <SEG> if any <END>
<BEG> < p class= changed_added_2_0 > return the parameter to be include for navigation case require a redirect <END>
<BEG> < p class= changed_added_2_0 > return the < code > & lt ; redirect & gt ; < code > value for this < code > & lt ; navigation-case & gt ; < code > <END>
<BEG> < p class= changed_added_2_3 > return a { code stream } possibly lazily populate by walk the resource tree root at a give initial path <END>
<BEG> < p class= changed_added_2_2 > create an instance of < code > resource < code > give the argument < code > resourceid < code > <END>
<BEG> < p class= changed_added_2_2 > return { code true } if the argument { code url } contain the string give by the value of the constant { link resourcehandler # resource_identifier } <SEG> false otherwise < p > param url the url to inspect for the presence of { link resourcehandler # resource_identifier } <END>
<BEG> < p class= changed_added_2_3 > mark the resource a identify by give resource and library name a rendered <END>
<BEG> < p class= changed_added_2_3 > returns whether the resource a identify by give resource and library name have be render <END>
<BEG> determine whether string be a mixed value bind expression or not <END>
<BEG> determine whether string be a value bind expression or not <END>
<BEG> < p > return the tree structure and component state information for the view contain in the specified { link facescontext } instance a an object of type < code > statemanager serializedview < code > <END>
<BEG> < p > < span class= changed_deleted_2_2 > the functionality of this method be now handle by { link javax face view statemanagementstrategy # saveview } <END>
<BEG> < p > convenience method <SEG> which must be call by < code > saveserializedview < code > <SEG> to construct and return a < code > serializable < code > object that represent the state of all component property <SEG> attribute <SEG> and attached object <SEG> for the entire component tree include child and facet of this view < p > < p > components may opt-out of be include in the component state by set their < code > transient < code > property to < code > true < code > <END>
<BEG> < p > save the state represent in the specified state < code > object < code > instance <SEG> in an implementation dependent manner < p > < p > this method will typically simply delegate the actual writing to the < code > writestate < code > method of the { link responsestatemanager } instance provide by the { link renderkit } be use to render this view <END>
<BEG> < p > < span class= changed_modified_2_3 > method < span > to determine if the state be save on the client <END>
<BEG> < p class= changed_added_2_0 > convenience method to return the view state a a < code > string < code > with no < code > renderkit < code > specific markup <END>
<BEG> < p > return the view identifier of this exception <SEG> or < code > null < code > if the view identifier be nonexistent or unknown < p > return the view id <SEG> or < code > null < code > <END>
<BEG> < p > < span class= changed_modified_2_0 > initialize < span > the view for the request processing lifecycle < p > < p > this method must be call at the beginning of the < em > restore view phase < em > of the request processing lifecycle <END>
<BEG> < p > returns the correct character encode to be use for this request < p > < p > the following algorithm be employ < p > < ul > < li > < p > examine the < code > content-type < code > request header <END>
<BEG> < p class= changed_added_2_0 > derive and return the viewid from the current request <SEG> or the argument input by follow the algorithm define in specification section jsf 7 6 2 < p > < p class= changed_added_2_3 > this method should work correctly when the facesservlet be invoke via either a < code > path mapping < code > <SEG> < code > extension map < code > or an < code > exact match < code > mapping a define by servlet 12 2 <END>
<BEG> < p class= changed_added_2_1 > derive and return the viewid from the current request <SEG> or the argument input by follow the algorithm define in specification section jsf 7 6 2 <END>
<BEG> < p class= changed_added_2_0 > return a jsf action url derive from the < code > viewid < code > argument that be suitable to be use by the { link navigationhandler } to issue a redirect request to the url use a nonfaces request <END>
<BEG> < p class= changed_added_2_0 > return a jsf action url derive from the viewid argument that be suitable to be use a the target of a link in a jsf response <END>
<BEG> < p class= changed_added_2_2 > return an unmodifiable < code > set < code > of the protected view currently know to this < code > viewhandler < code > instance <END>
<BEG> < p class= changed_added_2_2 > add the argument < code > urlpattern < code > to the thread safe < code > set < code > of protected view for this application <END>
<BEG> < p class= changed_added_2_2 > remove the argument < code > urlpattern < code > from the thread safe < code > set < code > of protected view for this application <SEG> if present in the < code > set < code > <END>
<BEG> < p class= changed_added_2_0 > < span class= changed_modified_2_1 > return < span > the { link viewdeclarationlanguage } instance use for this < code > viewhandler < code > instance < p > < div class= changed_added_2_0 > < p > the default implementation must use { link javax face view viewdeclarationlanguagefactory # getviewdeclarationlanguage } to obtain the appropriate < code > viewdeclarationlanguage < code > implementation for the argument < code > viewid < code > <END>
<BEG> < p class= changed_added_2_3 > return a { code stream } possibly lazily populate by walk the view tree of every active { link viewdeclarationlanguage } root at a give initial path <END>
<BEG> < p class= changed_added_2_0 > this method return an unmodifiable < code > set < code > contain the { link clientbehaviorhint } < code > submitting < code > < p > return unmodifiable set contain the hint { link clientbehaviorhint } < code > submitting < code > <END>
<BEG> < p class= changed_added_2_0 > return the < code > string < code > of javascript function name that will be use to identify the client callback function that should be run in the event of an error <END>
<BEG> < p class= changed_added_2_0 > sets the javascript function name that will be use to identify the client callback function that should be run in the event of an error <END>
<BEG> < p class= changed_added_2_0 > return the < code > string < code > of javascript function name that will be use to identify the client callback function that should be run on the occurance of a client-side event <END>
<BEG> < p class= changed_added_2_0 > sets the javascript function name that will be use to identify the client callback function that should be run in response to event activity <END>
<BEG> < p class= changed_added_2_0 > return a non-empty < code > collection & lt ; string & gt ; < code > of component identifier that will be use to identify component that should be process during the < code > execute < code > phase of the request processing lifecycle < p > < p > note that the return collection may be unmodifiable <END>
<BEG> < p class= changed_added_2_0 > sets the component identifier that will be use to identify component that should be process during the < code > execute < code > phase of the request processing lifecycle < p > param execute the id of component to execute since 2 0 <END>
<BEG> < p class= changed_added_2_2 > returns the delay value <SEG> or < code > null < code > if no value be set < p > return the delay value <END>
<BEG> < p class= changed_added_2_2 > return the resetvalues status of this behavior < p > return the resetvalues status <END>
<BEG> < p class= changed_added_2_2 > set the resetvalues status of this behavior < p > param resetvalues the resetvalues status <END>
<BEG> < p class= changed_added_2_0 > return the disabled status of this behavior < p > return the disabled status of this behavior <END>
<BEG> < p class= changed_added_2_0 > sets the disabled status of this behavior < p > param disable the flag to be set <END>
<BEG> < p class= changed_added_2_0 > returns the { link valueexpression } use to calculate the value for the specified property name <SEG> if any <END>
<BEG> < p class= changed_added_2_0 > sets the { link valueexpression } use to calculate the value for the specified property name < p > param name name of the property for which to set a { link valueexpression } param bind the { link valueexpression } to set <SEG> or < code > null < code > to remove any currently set { link valueexpression } throw nullpointerexception if < code > name < code > be < code > null < code > <END>
<BEG> < p class= changed_added_2_0 > add the specify { link ajaxbehaviorlistener } to the set of listener register to receive event notification from this { link ajaxbehavior } < p > param listener the { link ajaxbehaviorlistener } to be register throw nullpointerexception if < code > listener < code > be < code > null < code > since 2 0 <END>
<BEG> < p class= changed_added_2_0 > returns the renderer type of the { link clientbehaviorrenderer } to use for the behavior <END>
<BEG> < p class= changed_added_2_0 > convenience method to return the { link clientbehaviorrenderer } instance associate with this { link clientbehavior } <SEG> if any ; otherwise <SEG> return < code > null < code > <END>
<BEG> we need to remove from both map <SEG> if we do remove an exist key <END>
<BEG> one and only implementation of save-state - make all other implementation unnecessary <END>
<BEG> see javax face component stateholder # istransient <END>
<BEG> < p > return the value of the < code > ondblclick < code > property < p > return the property value < p > contents : javascript code execute when a pointer button be double click over this element <END>
<BEG> < p > return the value of the < code > onload < code > property < p > return the property value <END>
<BEG> < p > return the value of the < code > role < code > property < p > return the property value < p > contents : < p class= changed_added_2_2 > per the wai-aria spec and it relationship to html5 section title aria role attriubute <SEG> every html element may have a role attribute whose value must be pass through unmodified on the element on which it be declare in the final rendered markup <END>
<BEG> < p > return the value of the < code > styleclass < code > property < p > return the property value < p > contents : space-separated list of css style class e to be apply when this element be render <END>
<BEG> < p > return the value of the < code > title < code > property < p > return the property value < p > contents : advisory title information about markup element generate for this component <END>
<BEG> < p > return the value of the < code > footerclass < code > property < p > return the property value < p > contents : space-separated list of css style class e that will be apply to any footer generate for this column <END>
<BEG> < p > return the value of the < code > disable < code > property < p > return the property value < p > contents : flag indicate that this element must never receive focus or be include in a subsequent submit <END>
<BEG> < p > return the value of the < code > image < code > property < p > return the property value < p > contents : < p > absolute or relative url of the image to be display for this button <END>
<BEG> < p > return the value of the < code > label < code > property < p > return the property value < p > contents : a localized user presentable name for this component <END>
<BEG> < p > return the value of the < code > onchange < code > property < p > return the property value < p > contents : javascript code execute when this element lose focus and it value have be modify since gain focus <END>
<BEG> < p > return the value of the < code > tabindex < code > property < p > return the property value < p > contents : position of this element in the tabbing order for the current document <END>
<BEG> < p > return the value of the < code > type < code > property < p > return the property value < p > contents : type of button to create <END>
<BEG> < p > return the value of the < code > coords < code > property < p > return the property value < p > contents : the position and shape of the hot spot on the screen for use in client-side image map <END>
<BEG> < p > return the value of the < code > rel < code > property < p > return the property value < p > contents : the relationship from the current document to the anchor specify by this hyperlink <END>
<BEG> < p > return the value of the < code > rev < code > property < p > return the property value < p > contents : a reverse link from the anchor specify by this hyperlink to the current document <END>
<BEG> < p > return the value of the < code > shape < code > property < p > return the property value < p > contents : the shape of the hot spot on the screen for use in client-side image map <END>
<BEG> < p > return the value of the < code > target < code > property < p > return the property value < p > contents : name of a frame where the resource retrieve via this hyperlink be to be display <END>
<BEG> < p > return the value of the < code > autorun < code > property < p > return the property value < p > contents : whether to execute declared javascript function during < code > load < code > event of the < code > window < code > <END>
<BEG> < p > return the value of the < code > resetvalues < code > property < p > return the property value < p > contents : reset specific input value <END>
<BEG> < p > return the value of the < code > bodyrows < code > property < p > return the property value < p > contents : comma separate list of row index for which a new tbody element should be start and any previously open one should be end <END>
<BEG> < p > return the value of the < code > cellpadding < code > property < p > return the property value < p > contents : definition of how much space the user agent should leave between the border of each cell and it content <END>
<BEG> < p > return the value of the < code > columnclasses < code > property < p > return the property value < p > contents : comma-delimited list of css style class that will be apply to the column of this table <END>
<BEG> < p > return the value of the < code > frame < code > property < p > return the property value < p > contents : code specify which side of the frame surround this table will be visible <END>
<BEG> < p > return the value of the < code > rowclass < code > property < p > return the property value < p > contents : < div class= changed_added_2_3 > < p > assigns one or more space-separated css class name to each tr < p > < div > <END>
<BEG> < p > return the value of the < code > summary < code > property < p > return the property value < p > contents : summary of this table 's purpose and structure <SEG> for user agent render to non-visual medium such a speech and braille <END>
<BEG> < p > return the value of the < code > acceptcharset < code > property < p > return the property value < p > contents : list of character encoding for input data that be accept by the server processing this form <END>
<BEG> < p > return the value of the < code > usemap < code > property < p > return the property value < p > contents : the name of a client side image map an html map element for which this element provide the image <END>
<BEG> < p > return the value of the < code > accesskey < code > property < p > < p > contents : access key that <SEG> when press <SEG> transfer focus to this element <END>
<BEG> < p > return the value of the < code > autocomplete < code > property < p > < p > contents : if the value of this attribute be off <SEG> render off a the value of the attribute <END>
<BEG> < p > return the value of the < code > maxlength < code > property < p > < p > contents : the maximum number of character that may be enter in this field <END>
<BEG> < p > return the value of the < code > readonly < code > property < p > < p > contents : flag indicate that this component will prohibit change by the user <END>
<BEG> < p > return the value of the < code > style < code > property < p > < p > contents : css style s to be apply when this component be render <END>
<BEG> < p > return the value of the < code > redisplay < code > property < p > return the property value < p > contents : flag indicate that any exist value in this field should be render when the form be create <END>
<BEG> < p > return the value of the < code > errorclass < code > property < p > return the property value < p > contents : css style class to apply to any message with a severity class of error <END>
<BEG> < p > return the value of the < code > tooltip < code > property < p > return the property value < p > contents : flag indicate whether the detail portion of the message should be display a a tooltip <END>
<BEG> < p > return the value of the < code > for < code > property < p > return the property value < p > contents : < p class= changed_modified_2_3 > search expression to the component for which this element be a label < p > <END>
<BEG> < p > return the value of the < code > fragment < code > property < p > return the property value < p > contents : the identifier of the page fragment which should be bring into focus when the target page be render <END>
<BEG> < p class= changed_modified_2_3 > if this factory have be decorate <SEG> the implementation do the decorating may override this method to provide access to the implementation be wrap < p > <END>
<BEG> < p class= changed_added_2_3 > this method will be call by an implementation of { link searchkeywordresolver # resolve } with the resolved component for the keyword < p > param target the resolve { link uicomponent } <END>
<BEG> < p class= changed_added_2_3 > returns the { link searchexpressioncontext } for the current request < p > return the { link searchexpressioncontext } <END>
<BEG> < p class= changed_added_2_3 > sets if the keyword be resolve < p > param keywordresolved if the keyword be resolve <END>
<BEG> < p > return the footer facet of the column if any <END>
<BEG> < p > set the footer facet of the column <END>
<BEG>  deprecate this have be replace by { link # getactionexpression } <END>
<BEG>  deprecate this have be replace by { link # addactionlistener javax face event actionlistener } <END>
<BEG> < p > returns the < code > value < code > property of the < code > uicommand < code > <END>
<BEG> < p class= changed_added_2_2 > this method have the same specification a { link # getpassthroughattributes } except that it be allow to return { code null } if and only if the argument { code create } be { code false } and no pas through attribute data structure exist for this instance <END>
<BEG> < p > return the { link valueexpression } use to calculate the value for the specified attribute or property name <SEG> if any < p > < p > this method must be overridden and implement for component that comply with jsf 1 2 and later < p > param name name of the attribute or property for which to retrieve a { link valueexpression } return the value expression <SEG> or < code > null < code > <END>
<BEG> < p > set the { link valueexpression } use to calculate the value for the specified attribute or property name <SEG> if any < p > < p > the implementation must call { link valueexpression # isliteraltext } on the argument < code > expression < code > <END>
<BEG> < p class= changed_added_2_0 > an implementation of { link partialstateholder # markinitialstate } <SEG> this method be call by the runtime to indicate that the instance should start track change to it state < p > since 2 0 <END>
<BEG> < p class= changed_added_2_0 > an implementation of { link partialstateholder # initialstatemarked } <SEG> this method be call by the runtime to test if the { link partialstateholder # markinitialstate } method be call < p > since 2 0 <END>
<BEG> < p class= changed_added_2_0 > like { link # getstatehelper } <SEG> but only create a state helper instance if the argument < code > creat < code > be < code > true < code > < p > param create if < code > true < code > <SEG> a new { link statehelper } instance will be create if it do not exist already <END>
<BEG> < p class= changed_added_2_0 > return < code > true < code > if this component be within the view hierarchy otherwise < code > false < code > return < code > true < code > if within a view hierarchy <SEG> < code > false < code > otherwise <END>
<BEG> < p class= changed_added_2_0 > updates the status a to whether or not this component be currently within the view hierarchy <END>
<BEG> < p class= changed_added_2_0 > enable el to access the < code > clientid < code > of a component <END>
<BEG> < p > allow component that implement { link namingcontainer } to selectively disable prepending their clientid to their descendent 's clientids by break the prepending logic into a separately callable method <END>
<BEG> < p class= changed_added_2_0 > return a < code > map & lt ; string <SEG> string & gt ; < code > of the < code > resourcebundle < code > for this component <END>
<BEG> < p > return the number of facet { link uicomponent } s that be associate with this { link uicomponent } <END>
<BEG> < p > if this component return < code > true < code > from { link # isrendered } <SEG> take the following action < p > < p > render this component and all it child that return < code > true < code > from < code > isrendered < code > <SEG> regardless of the value of the { link # getrenderschildren } flag < p > param context the faces context <END>
<BEG> < p class= changed_added_2_0 > push the current < code > uicomponent < code > < code > this < code > to the { link facescontext } attribute map use the key { link # current_component } save the previous < code > uicomponent < code > associate with { link # current_component } for a subsequent call to { link # popcomponentfromel } < p > < p class= changed_added_2_0 > this method and < code > popcomponentfromel < code > form the basis for the contract that enable the el expression < code > # { component } < code > to resolve to the current component that be be process in the lifecycle <END>
<BEG> < p class= changed_added_2_0 > pop the current < code > uicomponent < code > from the { link facescontext } attribute map so that the previous < code > uicomponent < code > <SEG> if any <SEG> become the current component < p > param context the { link facescontext } for the current request throw nullpointerexception if < code > context < code > be < code > null < code > see javax face context facescontext # getattributes since 2 0 <END>
<BEG> < p class= changed_added_2_0 > return < code > true < code > if < code > component < code > be a composite component <SEG> otherwise < code > false < code > < p > param component the { link uicomponent } to test return < code > true < code > if this be a composite component <SEG> < code > false < code > otherwise <END>
<BEG> < p class= changed_added_2_0 > return the close ancestor component <SEG> relative to the component return from { link # getcurrentcomponent } <SEG> that be a composite component <SEG> or < code > null < code > if no such component exists < p > param context { link facescontext } for the request we be process return the current composite component <SEG> or < code > null < code > <END>
<BEG> < p class= changed_modified_2_1 > this implementation throw < code > unsupportedoperationexception < code > and be provide for the sole purpose of not break exist application that extend this class <END>
<BEG> < p class= changed_added_2_0 > starting with this <SEG> return the close component in the ancestry that be a < code > namingcontainer < code > or < code > null < code > if none can be find < p > return the naming container <SEG> or < code > null < code > <END>
<BEG>  throw illegalargumentexception  throw nullpointerexception  deprecate this have be replace by { link # setvalueexpression } <END>
<BEG> < p class= changed_added_2_0 > this be a default implementation of { link javax face component behavior clientbehaviorholder # addclientbehavior } <END>
<BEG> < p class= changed_modified_2_2 > generate an identifier for a component <END>
<BEG> < p > return the image url for this { link uigraphic } <END>
<BEG> < p > returns the fully qualified name of the type to import the constant field value for <END>
<BEG> < p > returns name of request scope attribute under which constant will be expose a a map <END>
<BEG> < p > return the submittedvalue value of this { link uiinput } component <END>
<BEG> < p > < span class= changed_modified_2_0 > perform < span > the following algorithm to update the model data associate with this { link uiinput } <SEG> if any <SEG> a appropriate < p > < ul > < li > if the < code > valid < code > property of this component be < code > false < code > <SEG> take no further action < li > < li > if the < code > localvalueset < code > property of this component be < code > false < code > <SEG> take no further action < li > < li > if no { link valueexpression } for < code > value < code > exist <SEG> take no further action < li > < li > call < code > setvalue < code > method of the { link valueexpression } to update the value that the { link valueexpression } point at < li > < li > if the < code > setvalue < code > method return successfully : < ul > < li > clear the local value of this { link uiinput } < li > < li > set the < code > localvalueset < code > property of this { link uiinput } to false < li > < ul > < li > < li > if the < code > setvalue < code > method throw an exception : < ul > < li class= changed_modified_2_0 > enqueue an error message <END>
<BEG> < p > < span class= changed_modified_2_0 changed_modified_2_2 changed_modified_2_3 > perform < span > the following algorithm to validate the local value of this { link uiinput } < p > < ul > < li > retrieve the submit value with { link # getsubmittedvalue } <END>
<BEG> < p > return < code > true < code > if the new value be different from the previous value <END>
<BEG> < p class= changed_modified_2_3 > is the value denote an empty value <END>
<BEG> < p > < span class= changed_modified_2_0_rev_a > return the identifier of the component for which to render error message <END>
<BEG> < p > set < span class= changed_modified_2_0_rev_a > the identifier < span > of the component for which this component represent associate message s if any <END>
<BEG> < p > return the flag indicate whether the < code > detail < code > property of the associated message s should be display <END>
<BEG> return < code > true < code > if this < code > uimessage < code > instance should redisplay { link javax face application facesmessage } s that have already be handle <SEG> otherwise return < code > false < code > <END>
<BEG> < p > return the flag indicate whether only global message that be <SEG> message with no associated client identifier should be render <END>
<BEG> < p > set the flag indicate whether only global message that be <SEG> message with no associated client identifier should be render < p > param globalonly the new flag value <END>
<BEG> < p class= changed_added_2_0 > return whether or not the view parameter should be encode into the target url < p > return < code > true < code > if the view parameter should be encode in the url <SEG> < code > false < code > otherwise <END>
<BEG> < p class= changed_added_2_0 > set whether or not the page parameter should be encode into the target url < p > param includeviewparams the state of the switch for encode page parameter since 2 0 <END>
<BEG> < p class= changed_added_2_2 > return whether or not the client window should be encode into the target url < p > return < code > true < code > if the client window should not be encode in the url <SEG> < code > false < code > otherwise <END>
<BEG> < p class= changed_added_2_2 > set whether or not the client window should be encode into the target url < p > param disableclientwindow if { code true } <SEG> the client window will not be include in this outcome target <END>
<BEG> < p class= changed_added_2_0 > returns the < code > outcome < code > property of the < code > uioutcometarget < code > <END>
<BEG> < p class= changed_added_2_2 > convenience method to reset this component 's value to the un-initialized state < p > since 2 2 <END>
<BEG> < p > return the optional parameter name for this parameter < p > return the name <END>
<BEG> < p > sets the < code > value < code > property of the\ < code > uiparameter < code > < p > param value the new value <END>
<BEG> < p class= changed_added_2_0 > return the value of the < code > disable < code > directive for this component <END>
<BEG> < p > sets the < code > disable < code > property of the < code > uiparameter < code > < p > param disable the value for the disable flag <END>
<BEG> < p > return the local value of the select state of this component <END>
<BEG> < p > set the description for this selection item < p > param itemdescription the new description <END>
<BEG> < p > return the disabled setting for this selection item < p > return < code > true < code > be the item disable <SEG> < code > false < code > otherwise <END>
<BEG> < p > set the disabled value for this selection item < p > param itemdisabled the new disabled flag <END>
<BEG> < p > return the escape set for the label of this selection item < p > return < code > true < code > if the item be escape <SEG> < code > false < code > otherwise <END>
<BEG> < p > return the localized label for this selection item < p > return the item label <END>
<BEG> < p class= changed_added_2_0 > return the value of the < code > noselectionoption < code > property <END>
<BEG> < p class= changed_added_2_0 > set the value of the < code > noselectionoption < code > property < p > param noselectionoption the no selection option <END>
<BEG> < p > return the currently select value <SEG> or < code > null < code > if there be no currently select value <END>
<BEG> < p > set the currently select value <SEG> or < code > null < code > to indicate that there be no currently select value <END>
<BEG> < p class= changed_added_2_3 > returns the name of the radio button group <END>
<BEG> < p class= changed_added_2_2 > if the value of the component 's < code > immediate < code > attribute be < code > true < code > <SEG> the action will be invoke during the < em > apply request values < em > jsf lifecycle phase <END>
<BEG> < p class= changed_added_2_2 > returns the name of the lifecycle phase in which the action be to be queue < p > return the phase a string <END>
<BEG> < p class= changed_added_2_2 > attempt to set the lifecycle phase in which this instance will queue it { link actionevent } <END>
<BEG> < p class= changed_added_2_2 > returns < code > true < code > if the current request processing lifecycle be in the midst of process the broadcast of an event queue during a call to { link # decode } <END>
<BEG>  param actionexpression the action expression <END>
<BEG> < p class= changed_added_2_2 > if < code > true < code > this component will operate on postback < p > return < code > true < code > if operating upon postback <SEG> < code > false < code > otherwise <END>
<BEG> < p class= changed_added_2_2 > controls whether or not this component operate on postback < p > param onpostback the onpostback flag <END>
<BEG> < p class= changed_added_2_2 > sets the < code > if < code > property of this component < p > param condition the new value of the property <END>
<BEG> < p class= changed_added_2_0 > < span class= changed_modified_2_2 > assume < span > that the submit value be always a string <SEG> < span class= changed_added_2_2 > but the return type from this method be < code > object < code > < span > < p > return the submit value <END>
<BEG> pending doc interesting that submit value be n't save by the parent param submittedvalue the new submit value <END>
<BEG> < p class= changed_added_2_0 > override behavior from superclass to pull a value from the incoming request parameter map under the name give by { link # getname } and store it with a call to { link uiinput # setsubmittedvalue } < p > since 2 0 <END>
<BEG> < p class= changed_added_2_0 > if the value of this parameter come from a < code > valueexpression < code > return the value of the expression <SEG> otherwise <SEG> return the local value < p > param context the faces context <END>
<BEG> < p > return the render kit identifier of the { link javax face render renderkit } associate with this view <END>
<BEG> < p > return the view identifier for this view < p > return the view id <END>
<BEG> < p > set the view identifier for this view < p > param viewid the new view identifier <END>
<BEG> < p > return the { link methodexpression } that will be invoke before this view be render < p > return the { link methodexpression } that will be invoke before this view be render <END>
<BEG> < p > < span class= changed_modified_2_0 > allow < span > an arbitrary method to be call for the afterphase event a the uiviewroot run through it lifecycle <END>
<BEG> < p > add the argument < code > newphaselistener < code > to the list of { link phaselistener } s on this < code > uiviewroot < code > < p > param newphaselistener the { link phaselistener } to add since 1 2 <END>
<BEG> < p class= changed_added_2_0 > add argument < code > component < code > <SEG> which be assume to represent a resource instance <SEG> a a resource to this view <END>
<BEG> < p class= changed_added_2_3 > return an unmodifiable ordered < code > list < code > of all { link uicomponent } resource of all support target <END>
<BEG> < p class= changed_added_2_0 > broadcast any event that have be queue <END>
<BEG> < p class= changed_added_2_3 > if the argument < code > event < code > be an instance of { link postrestorestateevent } and { link partialviewcontext # ispartialrequest } return < code > true < code > <SEG> then loop over all component resource and call { link resourcehandler # markresourcerendered facescontext <SEG> string <SEG> string } for each of them <END>
<BEG> < div class= changed_added_2_0 > < p > perform partial processing by call { link javax face context partialviewcontext # processpartial } with { link phaseid # apply_request_values } if : < ul > < li > { link javax face context partialviewcontext # ispartialrequest } return < code > true < code > and we do n't have a request to process all component in the view { link javax face context partialviewcontext # isexecuteall } return < code > false < code > < li > < ul > perform full processing by call { link uicomponentbase # processdecodes } if one of the following condition be meet : < ul > < li > { link javax face context partialviewcontext # ispartialrequest } return < code > true < code > and we have a request to process all component in the view { link javax face context partialviewcontext # isexecuteall } return < code > true < code > < li > < li > { link javax face context partialviewcontext # ispartialrequest } return < code > false < code > < li > < ul > < div > < p class= changed_modified_2_0 > override the default { link uicomponentbase # processdecodes } behavior to broadcast any queued event after the default processing or partial processing have be complete and to clear out any event for later phase if the event processing for this phase cause { link facescontext # renderresponse } or { link facescontext # responsecomplete } to be call < p > param context { link facescontext } for the request we be process throw nullpointerexception if < code > context < code > be < code > null < code > <END>
<BEG> < p > < span class= changed_added_2_0 changed_modified_2_3 > override < span > the default { link uicomponentbase # encodebegin } behavior <END>
<BEG> < p class= changed_added_2_0 > if { link javax face context partialviewcontext # isajaxrequest } return < code > true < code > <SEG> perform partial rendering by call { link javax face context partialviewcontext # processpartial } with { link phaseid # render_response } <END>
<BEG> < div class= changed_added_2_0 > < p > perform partial processing by call { link javax face context partialviewcontext # processpartial } with { link phaseid # process_validations } if : < ul > < li > { link javax face context partialviewcontext # ispartialrequest } return < code > true < code > and we do n't have a request to process all component in the view { link javax face context partialviewcontext # isexecuteall } return < code > false < code > < li > < ul > perform full processing by call { link uicomponentbase # processvalidators } if one of the following condition be meet : < ul > < li > { link javax face context partialviewcontext # ispartialrequest } return < code > true < code > and we have a request to process all component in the view { link javax face context partialviewcontext # isexecuteall } return < code > true < code > < li > < li > { link javax face context partialviewcontext # ispartialrequest } return < code > false < code > < li > < ul > < div > < p class= changed_modified_2_0 > override the default { link uicomponentbase # processvalidators } behavior to broadcast any queued event after the default processing or partial processing have be complete and to clear out any event for later phase if the event processing for this phase cause { link facescontext # renderresponse } or { link facescontext # responsecomplete } to be call < p > param context { link facescontext } for the request we be process throw nullpointerexception if < code > context < code > be < code > null < code > <END>
<BEG> < div class= changed_added_2_0 > < p > perform partial processing by call { link javax face context partialviewcontext # processpartial } with { link phaseid # update_model_values } if : < ul > < li > { link javax face context partialviewcontext # ispartialrequest } return < code > true < code > and we do n't have a request to process all component in the view { link javax face context partialviewcontext # isexecuteall } return < code > false < code > < li > < ul > perform full processing by call { link uicomponentbase # processupdates } if one of the following condition be meet : < ul > < li > { link javax face context partialviewcontext # ispartialrequest } return < code > true < code > and we have a request to process all component in the view { link javax face context partialviewcontext # isexecuteall } return < code > true < code > < li > < li > { link javax face context partialviewcontext # ispartialrequest } return < code > false < code > < li > < ul > < div > < p class= changed_modified_2_0 > override the default { link uicomponentbase } behavior to broadcast any queued event after the default processing or partial processing have be complete and to clear out any event for later phase if the event processing for this phase cause { link facescontext # renderresponse } or { link facescontext # responsecomplete } to be call < p > param context { link facescontext } for the request we be process throw nullpointerexception if < code > context < code > be < code > null < code > <END>
<BEG> < p > broadcast any event that have be queue for the < em > invoke application < em > phase of the request processing lifecycle and to clear out any event for later phase if the event processing for this phase cause { link facescontext # renderresponse } or { link facescontext # responsecomplete } to be call < p > param context { link facescontext } for the request we be process throw nullpointerexception if < code > context < code > be < code > null < code > <END>
<BEG> < p > generate an identifier for a component <END>
<BEG> < p > return the < code > locale < code > to be use in localize the response be create for this view < p > < p > algorithm : < p > < p > if we have a < code > locale < code > ivar <SEG> return it <END>
<BEG> < p > set the < code > locale < code > to be use in localize the response be create for this view <END>
<BEG> < p class= changed_added_2_0 > < span class= changed_modified_2_2 changed_modified_2_3 > returns < span > a < code > map < code > that act a the interface to the data store that be the view scope <SEG> or <SEG> if this instance do not have such a < code > map < code > and the < code > create < code > argument be < code > true < code > <SEG> create one and return it <END>
<BEG> < p class= changed_added_2_0 > return the < code > systemeventlistener < code > instance register on this < code > uicomponent < code > instance that be interested in event of type < code > eventclass < code > < p > param systemevent the < code > class < code > of event for which the listener must be return <END>
<BEG> < p > returns { link uiwebsocket # component_family } <END>
<BEG> sets the scope of the websocket channel <END>
<BEG> returns the user identifier of the websocket channel <END>
<BEG> sets the user identifier of the websocket channel <SEG> so that user-targeted push message can be send <END>
<BEG> returns the javascript event handler function that be invoke when a push message be receive from the server <END>
<BEG> returns whether to auto connect the websocket or not <END>
<BEG> non-javadoc see javax face el valuebinding # getexpressionstring <END>
<BEG> non-javadoc see javax face el valuebinding # getvalue javax face context facescontext <END>
<BEG> < p > always return < code > false < code > since we ca n't possibly know if this be a literal text binding or not < p > <END>
<BEG> < p class= changed_added_2_0 changed_modified_2_3 > if this factory have be decorate <SEG> the implementation do the decorating may override this method to provide access to the implementation be wrap < p > <END>
<BEG> < p class= changed_added_2_0 > returns the mime type of the specify file or < code > null < code > if the mime type be not know <END>
<BEG> < p class= changed_added_2_0 > return the name of the container context for this application <END>
<BEG> < p > set the environment-specific request to be return by subsequent call to { link # getrequest } <END>
<BEG> < p class= changed_added_2_0 > returns the name of the scheme use to make this request <SEG> for example <SEG> http <SEG> http <SEG> or ftp < p > < div class= changed_added_2_0 > < p > < em > servlet : < em > this must be the value return by the < code > javax servlet servletrequest < code > method < code > getscheme < code > < p > < p > the default implementation throw < code > unsupportedoperationexception < code > and be provide for the sole purpose of not break exist application that extend this class < p > < div > return the name of the scheme <END>
<BEG> < p class= changed_added_2_0 > returns the host name of the server to which the request be send < p > < div class= changed_added_2_0 > < p > < em > servlet : < em > this must be the value return by the < code > javax servlet servletrequest < code > method < code > getservername < code > < p > < p > the default implementation throw < code > unsupportedoperationexception < code > and be provide for the sole purpose of not break exist application that extend this class < p > < div > return the host name of the server <END>
<BEG> < p class= changed_added_2_0 > returns the port number to which the request be send < p > < div class= changed_added_2_0 > < p > < em > servlet : < em > this must be the value return by the < code > javax servlet servletrequest < code > method < code > getserverport < code > < p > < p > the default implementation throw < code > unsupportedoperationexception < code > and be provide for the sole purpose of not break exist application that extend this class < p > < div > return the port number to which the request be send <END>
<BEG> < p > overrides the name of the character encode use in the body of this request < p > < p > calling this method after the request have be access will have no no effect <SEG> unless a < code > reader < code > or < code > stream < code > have be obtain from the request <SEG> in which case an < code > illegalstateexception < code > be throw < p > < p > < em > servlet : < em > this must call through to the < code > javax servlet servletrequest < code > method < code > setcharacterencoding < code > < p > < p > the default implementation throw < code > unsupportedoperationexception < code > and be provide for the sole purpose of not break exist application that extend this class < p > param encode the encode name to be set <END>
<BEG> < p > return the character encode currently be use to interpret this request < p > < p > < em > servlet : < em > this must return the value return by the < code > javax servlet servletrequest < code > method < code > getcharacterencoding < code > < p > < p > the default implementation throw < code > unsupportedoperationexception < code > and be provide for the sole purpose of not break exist application that extend this class < p > return the character encode currently be use <END>
<BEG> < p > return the mime content-type for this request <END>
<BEG> < p class= changed_added_2_0 > returns an < code > outputstream < code > suitable for write binary data to the user-agent < p > < div class= changed_added_2_0 > < p > < em > servlet : < em > this must return the value return by the < code > javax servlet servletresponse < code > method < code > getoutputstream < code > < p > < p > the default implementation throw < code > unsupportedoperationexception < code > and be provide for the sole purpose of not break exist application that extend this class < p > < div > return the < code > outputstream < code > for the current response <END>
<BEG> < p class= changed_added_2_0 > returns a < code > writer < code > suitable for write character data to the user-agent < p > < div class= changed_added_2_0 > < p > < em > servlet : < em > this must return the value return by the { link javax servlet servletresponse # getwriter } < p > < p > the default implementation throw < code > unsupportedoperationexception < code > and be provide for the sole purpose of not break exist application that extend this class < p > < div > return the < code > writer < code > for the current response <END>
<BEG> < p > sets the character encode mime charset of the response be send to the client <SEG> for example <SEG> to utf-8 < p > < p > < em > servlet : < em > this must call through to the < code > javax servlet servletresponse < code > method < code > setcharacterencoding < code > < p > < p > the default implementation throw < code > unsupportedoperationexception < code > and be provide for the sole purpose of not break exist application that extend this class < p > param encode the character encode to be send by the current response <END>
<BEG> < p class= changed_added_2_0 > sets the content type of the response be send to the client <SEG> if the response have not be commit yet < p > < div class= changed_added_2_0 > < p > < em > servlet : < em > this must call < code > setcontenttype < code > on the underlie < code > javax servlet servletresponse < code > instance < p > < p > the default implementation throw < code > unsupportedoperationexception < code > and be provide for the sole purpose of not break exist application that extend this class < p > < div > param contenttype the content type to be set a the contenttype of the response <END>
<BEG> < p class= changed_added_2_2 > return the id of the current session or the empty string if no session have be create and the < code > create < code > parameter be < code > false < code > < p > < div class= changed_added_2_2 > < p > < em > servlet : < em > if < code > create < code > be true <SEG> obtain a reference to the < code > httpsession < code > for the current request create the session if necessary and return it id <END>
<BEG> < p class= changed_added_2_1 > returns the maximum time interval <SEG> in second <SEG> that the servlet container will keep this session open between client access <END>
<BEG> < p class= changed_added_2_2 > return the { link clientwindow } set in a precede call to { link # setclientwindow } <SEG> or < code > null < code > if no such call have be make < p > since 2 2 return the instance of the < code > clientwindow < code > <END>
<BEG> < p class= changed_added_2_0 > invalidates this session then unbind any object bind to it < p > < div class= changed_added_2_0 > < p > < em > servlet : < em > this must be the value return by the < code > javax servlet http httpsession < code > method < code > invalidate < code > < p > < p > the default implementation throw < code > unsupportedoperationexception < code > and be provide for the sole purpose of not break exist application that extend this class < p > < div > since 2 0 <END>
<BEG> < p class= changed_added_2_0 > set the buffer size for the current response < p > < p > < em > servlet : < em > this must be perform by call the < code > javax servlet http httpservletresponse < code > < code > setbuffersize < code > method < p > < p > the default implementation throw < code > unsupportedoperationexception < code > and be provide for the sole purpose of not break exist application that extend this class < p > param size the new buffer size since 2 0 <END>
<BEG> < p class= changed_added_2_0 > return the buffer size for the current response < p > < p > < em > servlet : < em > this must be perform by call the < code > javax servlet http httpservletresponse < code > < code > getbuffersize < code > method < p > < p > the default implementation throw < code > unsupportedoperationexception < code > and be provide for the sole purpose of not break exist application that extend this class < p > since 2 0 return the buffer size of the response <END>
<BEG> < p class= changed_added_2_0 > check if the current response have be commit < p > < p > < em > servlet : < em > this must be perform by call the < code > javax servlet http httpservletresponse < code > < code > iscommitted < code > method < p > < p > the default implementation throw < code > unsupportedoperationexception < code > and be provide for the sole purpose of not break exist application that extend this class < p > since 2 0 return the flag indicate whether the current response have be commit <END>
<BEG> < p class= changed_added_2_2 > associate this instance with a { link clientwindow } < p > param window the window with which this instance be associate <END>
<BEG> < p class= changed_added_2_0 > < span class= changed_modified_2_2 > return < span > the input url <SEG> after perform any rewriting need to ensure that it can be use in a partial page submission ajax request to correctly identify an addressable action in the current application < p > < p class= changed_added_2_2 > see { link # encodeactionurl java lang string } for the required specification of how to encode the { link javax face lifecycle clientwindow } <END>
<BEG> < p class= changed_added_2_1 > returns a boolean indicating whether this request be make use a secure channel <SEG> such a https <END>
<BEG> < p class= changed_added_2_0 > return the { link exceptionhandler } for this request < p > return instance of < code > exceptionhandler < code > <END>
<BEG> < p class= changed_added_2_0 > set the { link exceptionhandler } for this request < p > param exceptionhandler the < code > exceptionhandler < code > for this request <END>
<BEG> < p class= changed_added_2_0 > like { link # getmessages } <SEG> but return a < code > list & lt ; facesmessage & gt ; < code > <SEG> enable use from el expression < p > < p > the default implementation throw < code > unsupportedoperationexception < code > and be provide for the sole purpose of not break exist application that extend this class < p > return an immutable < code > list < code > which be effectively a snapshot of the message present at the time of invocation <END>
<BEG> < p class= changed_added_2_0 > like { link # getmessages java lang string } <SEG> but return a < code > list & lt ; facesmessage & gt ; < code > of message for the component with client id match argument < code > clientid < code > < p > < p > the default implementation throw < code > unsupportedoperationexception < code > and be provide for the sole purpose of not break exist application that extend this class < p > param clientid the client id of a component <END>
<BEG> < p class= changed_added_2_2 > return the list of resource library contract that have be calculate to be appropriate for use with this view <SEG> or an empty list if there be no such resource library contract <END>
<BEG> < p class= changed_added_2_2 > set the resource library contract calculate a valid to use with this view <END>
<BEG> < p class= changed_added_2_0 > return < code > true < code > if the < code > validationfailed < code > method have be call for the current request < p > return boolean indicate if the < code > validationfailed < code > method have be call for the current request throw illegalstateexception if this method be call after this instance have be release <END>
<BEG> < p class= changed_added_2_0 > this utility method simply return the result of { link javax face render responsestatemanager # ispostback facescontext } <END>
<BEG> < p class= changed_added_2_0 > sets a flag which indicate that a conversion or validation error occur while process the input <END>
<BEG> < p class= changed_added_2_0 > return the value last set on this < code > facescontext < code > instance when { link # setcurrentphaseid } be call < p > return the current phase id <END>
<BEG> < p class= changed_added_2_0 > the implementation must call this method at the early possble point in time after enter into a new phase in the request processing lifecycle < p > param currentphaseid the { link javax face event phaseid } for the current phase <END>
<BEG> < p class= changed_added_2_0 > allows control of wheter or not the runtime will publish event when { link application # publishevent facescontext <SEG> class <SEG> object } or { link application # publishevent facescontext <SEG> class <SEG> class <SEG> object } be call < p > param processingevents flag indicate event should be process or not <END>
<BEG> < p class= changed_added_2_0 > returns a flag indicate whether or not the runtime should publish event when ask to do so < p > return < code > true < code > if event should be publish <SEG> otherwise < code > false < code > <END>
<BEG> < p class= changed_added_2_0 > return < code > true < code > if the current { link projectstage } a return by the { link application } instance be equal to < code > stage < code > <SEG> otherwise return < code > false < code > < p > param stage the { link projectstage } to check return boolean indicate whether the application have the same stage <END>
<BEG> < p class= changed_modified_2_0 > return the { link facescontext } instance for the request that be be process by the current thread <END>
<BEG> < p class= changed_added_2_0 > write the start of a partial response < p > < p class= changed_added_2_3 > if { link uiviewroot } be an instance of { link namingcontainer } <SEG> then write { link uiviewroot # getcontainerclientid facescontext } a value of the < code > id < code > attribute of the root element < p > throw ioexception if an input output error occur since 2 0 <END>
<BEG> < p class= changed_added_2_0 > write the end of a partial response < p > throw ioexception if an input output error occur since 2 0 <END>
<BEG> < p class= changed_added_2_0 > write the start of an insert operation where the content will be insert before the specified target node < p > param targetid id of the node insertion should occur before throw ioexception if an input output error occur since 2 0 <END>
<BEG> < p class= changed_added_2_0 > write the start of an update operation < p > param targetid id of the node to be update throws ioexception if an input output error occur since 2 0 <END>
<BEG> < p class= changed_added_2_0 > write an attribute update operation < p > param targetid id of the node to be update param attribute map of attribute name value pair to be update throws ioexception if an input output error occur since 2 0 <END>
<BEG> < p class= changed_added_2_0 > write a delete operation < p > param targetid id of the node to be delete throws ioexception if an input output error occur since 2 0 <END>
<BEG> < p class= changed_added_2_0 > write the start of an extension operation < p > param attribute string name value pair for extension element attribute throw ioexception if an input output error occur since 2 0 <END>
<BEG> < p class= changed_added_2_0 > write the start of an error < p > param errorname descriptive string for the error throw ioexception if an input output error occur since 2 0 <END>
<BEG> < p class= chaged_added_2_2 > return < code > true < code > if the incoming request have a parameter name by the value of { link # reset_values_param_name } and that value be < code > true < code > <END>
<BEG> < p > returns the facesmessage associate with this exception ; this will only be available if the converter that thew this exception instance place it there <END>
<BEG> < p > return the iso 4217 currency code use by < code > getasstring < code > with a < code > type < code > of < code > currency < code > <END>
<BEG> < p > set the iso 4217 currency code use by < code > getasstring < code > with a < code > type < code > of < code > currency < code > < p > param currencycode the new currency code <END>
<BEG> < p > return the currency symbol use by < code > getasstring < code > with a < code > type < code > of < code > currency < code > <END>
<BEG> < p > set the currency symbol use by < code > getasstring < code > with a < code > type < code > of < code > currency < code > < p > param currencysymbol the new currency symbol <END>
<BEG> < p > return < code > true < code > if < code > getasstring < code > should include group separator if necessary <END>
<BEG> < p > set the flag indicate whether < code > getasstring < code > should include group separator if necessary < p > param groupingused the new grouping use flag <END>
<BEG> < p > return < code > true < code > if only the integer portion of the give value should be return from < code > getasobject < code > <END>
<BEG> < p > set to < code > true < code > if only the integer portion of the give value should be return from < code > getasobject < code > < p > param integeronly the new integer-only flag <END>
<BEG> < p > return the maximum number of digit < code > getasstring < code > should render in the fraction portion of the result < p > return the maximum fraction digit <END>
<BEG> < p > set the maximum number of digit < code > getasstring < code > should render in the fraction portion of the result <END>
<BEG> < p > return the < code > locale < code > to be use when parse number <END>
<BEG> < p > return the format pattern to be use when format and parse number < p > return the pattern <END>
<BEG> < p > set the format pattern to be use when format and parse number <END>
<BEG> < p class= changed_added_2_2 > return < code > true < code > if the argument { link faceslistener } be an instance of the appropriate listener class that this event support <END>
<BEG> < p class= changed_added_2_2 > broadcast this event instance to the specify { link faceslistener } by call the superclass 's < code > processlistener < code > implementation < p > param listener { link faceslistener } to evaluate since 2 2 <END>
<BEG> < p class= changed_added_2_0 > the source { link uicomponent } that send this event < p > since 2 0 return the component for this event <END>
<BEG> < p class= changed_added_2_0 > return the < code > exceptionqueuedeventcontext < code > for this event instance < p > since 2 0 return the context <END>
<BEG> < p class= changed_added_2_0 > the { link facescontext } for this request < p > return the { link facescontext } use to create this < code > exceptionqueuedeventcontext < code > instance <END>
<BEG> < p class= changed_added_2_0 > return the < code > exception < code > property < p > return the exception <END>
<BEG> < p class= changed_added_2_0 > return the < code > uicomponent < code > which be be process when the exception be throw <END>
<BEG> return < code > true < code > if the exception occur during the < code > before phase < code > processing for a particular lifecycle phase <END>
<BEG> < p class= changed_added_2_0 > a < code > map < code > of attribute relevant to the context of this < code > exceptionqueuedevent < code > < p > return attribute relate to this context <END>
<BEG> < p > return the identifier of the request processing phase during which this event should be deliver <END>
<BEG> < p > set the { link phaseid } during which this event will be deliver < p > param phaseid the phase id <END>
<BEG> < p > convenience method to queue this event for broadcast at the end of the current request processing lifecycle phase < p > throw illegalstateexception if the source component for this event be not a descendant of a { link uiviewroot } <END>
<BEG> < p > return the { link facescontext } for the request be process < p > return the { code facescontext } for the current request <END>
<BEG> < p > return the { link phaseid } represent the current request processing lifecycle phase < p > return the phase id <END>
<BEG> < p > return the ordinal value of this { link phaseid } instance < p > return the ordinal <END>
<BEG> < p > return a string representation of this { link phaseid } instance < p > <END>
<BEG> < p class= changed_added_2_2 > return a < code > phaseid < code > representation of the arcument < code > phase < code > < p > param phase the string for which the corresponding < code > phaseid < code > should be return <END>
<BEG> < p class= changed_added_2_0 > return the name of this custom scope < p > return return the name of this custom scope <END>
<BEG> < p class= changed_modified_2_0 > return the scope itself <SEG> expose a a < code > map < code > < p > return return the scope itself <SEG> expose a a < code > map < code > <END>
<BEG> < p > return the previous local value of the source { link uicomponent } <END>
<BEG> returns the < code > & lt ; f : websocket channel & gt ; < code > <END>
<BEG> returns the < code > & lt ; f : websocket user & gt ; < code > <SEG> if any <END>
<BEG> < p class= changed_added_2_2 > methods that append the clientwindow to generate urls must call this method to see if they be permit to do so <END>
<BEG> < p class= changed_added_2_2 > create or restore the { link clientwindow } to be use to display the { link javax face component uiviewroot } for this run through the lifecycle <END>
<BEG> set the wrapped data <END>
<BEG> < p > return the object represent the data for the specify row index <SEG> or < code > null < code > for no associated row data < p > return the object represent the data for the specify row index <SEG> or < code > null < code > for no associated row data <END>
<BEG> < p > return the row index for this event <SEG> or -1 for no specific row < p > return the row index for this event <SEG> or -1 for no specific row <END>
<BEG> < p > return a flag indicate whether there be < code > rowdata < code > available at the current < code > rowindex < code > <END>
<BEG> < p > return the number of row of data object represent by this { link datamodel } <END>
<BEG> < p > return an object represent the data for the currenty select row index <END>
<BEG> < p > return the zero-relative index of the currently select row <END>
<BEG> < p > return the object represent the data wrap by this { link datamodel } <SEG> if any < p > <END>
<BEG> < p > return the set of subordinate { link selectitem } s for this group < p > return the set of subordinate { link selectitem } s for this group <END>
<BEG> < p > set the set of subordinate { link selectitem } s for this group < p > param selectitems the new set of subordinate item throw nullpointerexception if < code > selectitems < code > be < code > null < code > <END>
<BEG> < p class= changed_added_2_0 > return an < code > iterator < code > over the component-family entry support by this < code > renderkit < code > instance < p > < p class= changed_added_2_0 > the default implementation of this method return an empty < code > iterator < code > < p > since 2 0 return return an < code > iterator < code > over the component-family entry <END>
<BEG> < p class= changed_added_2_0 > return an < code > iterator < code > over the renderer-type entry for the give component-family < p > < p class= changed_added_2_0 > if the specify < code > componentfamily < code > be not know to this < code > renderkit < code > implementation <SEG> return an empty < code > iterator < code > < p > < p class= changed_added_2_0 > the default implementation of this method return an empty < code > iterator < code > < p > param componentfamily one of the member of the < code > iterator < code > return by { link # getcomponentfamilies } <END>
<BEG> < p > register the specify { link clientbehaviorrenderer } instance <SEG> associate with the specified component < code > type < code > <SEG> to the set of { link clientbehaviorrenderer } s register with this { link renderkit } <SEG> replace any previously register { link clientbehaviorrenderer } for this type < p > param type type of the { link clientbehaviorrenderer } to register param renderer { link clientbehaviorrenderer } instance we be register throw nullpointerexception if < code > type < code > or < code > renderer < code > be null since 2 0 <END>
<BEG> < p > return the { link clientbehaviorrenderer } instance most recently register for the specified < code > type < code > <SEG> if any ; otherwise <SEG> return < code > null < code > < p > param type type of the request { link clientbehaviorrenderer } instance throw nullpointerexception if < code > type < code > be < code > null < code > since 2 0 return the { link clientbehaviorrenderer } instance <END>
<BEG> < p class= changed_added_2_0 > return an < code > iterator < code > over the { link clientbehaviorrenderer } type < p > since 2 0 return an < code > iterator < code > over the { link clientbehaviorrenderer } <END>
<BEG> < p class= changed_added_2_2 > if the precede call to { link # writestate javax face context facescontext <SEG> java lang object } be stateless <SEG> return { code true } <END>
<BEG> < p > the implementation must inspect the current request and return the tree structure object pass to it on a previous invocation of < code > writestate < code > < p > deprecate this method have be replace by { link # getstate } <END>
<BEG> < p > return true if the current request be a postback <END>
<BEG> < p class= changed_added_2_2 > compliant implementation must return a cryptographically strong token for use to protect view in this application <END>
<BEG> this method do what facescontext getcurrentinstance do before the fix for bug 20458755 <END>
<BEG> < p class= changed_added_2_0 > return the validation group pass to the validation api when check constraint <END>
<BEG> < p > set the maximum value to be enforce by this { link validator } < p > param maximum the new maximum value <END>
<BEG> < p > return the minimum value to be enforce by this { link validator } <SEG> or < code > double min_value < code > if it have not be set < p > return the minimum value <END>
<BEG> < p > return the maximum length to be enforce by this { link validator } <SEG> or < code > 0 < code > if the maximum have not be set < p > return the maximum <END>
<BEG> < p class= changed_added_2_3 > returns a data structure that store the information necessary to perform class-level validation by < code > & lt ; f : validatewholebean & gt ; < code > component elsewhere in the tree <END>
<BEG> < p > the regular expression property to validate against < p > param pattern a regular expression pattern <END>
<BEG> < p class= changed_modified_2_0 > returns the < code > facesmessage < code > associate with the exception <END>
<BEG> < p class= changed_added_2_2 > subclasses that wish to take over the task of instantiate the < code > uicomponent < code > instance correspond to this tag handler my override this method to do so <END>
<BEG> < p class= changed_added_2_0 > determine if the passed component be not null and if it 's new to the tree <END>
<BEG> < p class= changed_added_2_0 > returns the array of child handler contain by this handler < p > return returns the array of child handler contain by this handler <END>
<BEG> < p class= changed_added_2_1 > returns the { link memberfactory } pass to { link # setmemberfactories } for the purpose of create facelet instance < p > return the { link memberfactory } pass to { link # setmemberfactories } for the purpose of create facelet instance <END>
<BEG> < p class= changed_added_2_0 > return the underlie handler for this tag handler instance < p > return the handler instance <END>
<BEG> < p class= changed_added_2_0 > return an object encapsulate the { link tagattributes } specify on this element in the view < p > return the { link tagattributes } <END>
<BEG> < p class= changed_added_2_0 > return the xml local name of the tag <END>
<BEG> < p class= changed_added_2_0 > return the resolve xml namespace for this tag in the facelets view < p > return the xml namespace <END>
<BEG> get the string representation <END>
<BEG> < p class= changed_added_2_2 > set a reference to the tag for which this class represent the attribute <END>
<BEG> < p class= changed_added_2_0 > return the implementation specific delegate instance that provide the bulk of the work for this handler instance < p > return the implementation specific delegate instance <END>
<BEG> < p > retrieve the id of the validator that be to be create and add to the parent < code > editablevalueholder < code > <END>
<BEG> < p class= changed_added_2_0 > return the < code > tagconfig < code > subclass use to configure this handler instance < p > return the < code > tagconfig < code > subclass use to configure this handler instance <END>
<BEG> < p class= changed_added_2_0 > return the estimate character column < p > return the column <END>
<BEG> < p class= changed_added_2_2 > create a component give a { link viewdeclarationlanguage } specific tag library uri and tag name <END>
<BEG> < p class= changed_added_2_0 > < span class= changed_modified_2_0_rev_a > assuming < span > the component metadata for argument < code > toplevelcomponent < code > have be make available by an early call to { link viewdeclarationlanguage # getcomponentmetadata } <SEG> leverage the component metadata for the purpose of re-targeting attach object from the top level composite component to the individual { link attachedobjecttarget } instance inside the composite component <END>
<BEG> < p class= changed_added_2_0 > assuming the component metadata for argument < code > toplevelcomponent < code > have be make available by an early call to { link viewdeclarationlanguage # getcomponentmetadata } <SEG> leverage the component metadata for the purpose of re-targeting any method expression from the top level component to the appropriate inner component <END>
<BEG> < p class= changed_added_2_1 > < span class= changed_modified_2_2 > tests < span > whether a physical resource correspond to the specify viewid exist < p > < p class= changed_modified_2_2 > the default implementation use { link javax face application resourcehandler # createviewresource } to locate the physical resource < p > param context the < code > facescontext < code > for this request <END>
<BEG> < p class= changed_added_2_1 > returns a non-null string that can be use to identify this view declaration language < p > < p > the default implementation return the fully qualified class name of the view declaration language implementation <END>
<BEG> < p class= changed_added_2_0 > utility method to extract view metadata from the provide { link uiviewroot } <END>
<BEG> < p class= changed_added_2_3 > utility method to extract view metadata from the provide { link uiviewroot } < p > param root the { link uiviewroot } from which the metadata will be extract <END>
<BEG> < p > set the identifer of the { link converter } instance to be create <END>
<BEG> < p > set the expression that will be use to create a { link valueexpression } that reference a backing bean property of the { link converter } instance to be create < p > param bind the new expression throw jspexception if a jsp error occur <END>
<BEG> < p > set up the { link javax face context responsewriter } for the current response <SEG> if this have not be do already < p > < p > deprecate <END>
<BEG> adds argument child to component tree a a child of this component <END>
<BEG> < p > create a transient uioutput component from the body content <SEG> of this tag instance or return null if there be no body content <SEG> the body content be whitespace <SEG> or the body content be a comment < p > return the component <END>
<BEG> < p > if this method have be call before on this tag 's useful lifetime before { link # release } be call <SEG> return the previously return value <END>
<BEG> returns the < code > list < code > of { link uicomponent } id create or locate by nested { link uicomponenttag } s while process the current request <END>
<BEG> < p > return the facet name that we should be store under <SEG> if any ; otherwise <SEG> return null indicate that we will be a child component <END>
<BEG> < p > return < code > true < code > if the specify value conforms to the syntax requirement of a value bind expression <END>
<BEG> < p > locate and return the near enclose { link uicomponenttag } if any ; otherwise <SEG> return < code > null < code > < p > param context < code > pagecontext < code > for the current page return the parent tag <END>
<BEG> < p > return the { link elcontext } for the { link facescontext } for this request < p > < p > this be a convenience for < code > getfacescontext getelcontext < code > < p > return the { code elcontext } for this { code facescontext } <END>
<BEG> create a new { code jsonbbuilder } instance a return by the default { link javax json bind spi jsonbprovider # provider } method <END>
<BEG> create a new { code jsonbbuilder } instance a return by { link javax json bind spi jsonbprovider # provider string } method <END>
<BEG> set the particular configuration property to a new value <END>
<BEG> return all configuration property a an unmodifiable map <END>
<BEG> property use to specify whether or not the serialized json data be format with linefeeds and indentation <END>
<BEG> the binding operation will default to this property for encode of json data <END>
<BEG> property use to specify whether strict i-json serialization compliance should be enforce <END>
<BEG> property use to specify custom name strategy <END>
<BEG> property use to specify custom serializers <END>
<BEG> property use to specify custom binary data strategy <END>
<BEG> creates a json binding provider object by use the { link java util serviceloader # load class } method <END>
<BEG> creates a json binding provider object by use the { link java util serviceloader # load class } method <SEG> match { code providername } <END>
<BEG> encodes escape a passed string a define by < a href= http : tool ietf org html rfc6901 > rfc 6901 < a > <END>
<BEG> adds all element of the array in the specified array builder to the array <END>
<BEG> inserts a value to the array at the specified position <END>
<BEG> adds a value to the array a a { link jsonstring } at the specified position <END>
<BEG> adds a { link jsonvalue # true } or { link jsonvalue # false } value to the array at the specified position <END>
<BEG> adds a { link jsonobject } from an object builder to the array at the specified position <END>
<BEG> replaces a value in the array with the specified value a a { link jsonstring } at the specified position <END>
<BEG> replaces a value in the array with a { link jsonvalue # true } or { link jsonvalue # false } value at the specified position <END>
<BEG> replaces a value in the array with a { link jsonvalue # null } value at the specified position <END>
<BEG> replaces a value in the array with the specified value a a { link jsonobject } from an object builder at the specified position <END>
<BEG> creates a { code jsonobjectbuilder } instance <SEG> initialize with the specify object <END>
<BEG> creates a { code jsonarraybuilder } instance <SEG> initialize with the content of specify collection <END>
<BEG> returns this json number a a { link number } object <END>
<BEG> adds all name value pair in the json object associate with the specified object builder to the json object associate with this object builder <END>
<BEG> remove the name value pair from the json object associate with this object builder if it be present <END>
<BEG> returns a json value that be represent in the input source <END>
<BEG> returns the value type of this json value <END>
<BEG> compares the specified object with this { link jsonvalue } object for equality <END>
<BEG> writes the specified { link jsonvalue } to the output source <END>
<BEG> creates a json provider object <END>
<BEG> creates a json object builder <SEG> initialize with the data from specify { code map } <END>
<BEG> creates json pointer < a href= http : tool ietf org html rfc6901 > rfc 6901 < a > from give { code jsonpointer } string <END>
<BEG> creates a json patch builder < a href= http : tool ietf org html rfc6902 > rfc 6902 < a > <END>
<BEG> creates a json patch builder < a href= http : tool ietf org html rfc6902 > rfc 6902 < a > <SEG> initialize with the specify operation <END>
<BEG> creates a json patch < a href= http : tool ietf org html rfc6902 > rfc 6902 < a > from the specify operation <END>
<BEG> generates a json patch < a href= http : tool ietf org html rfc6902 > rfc 6902 < a > from the source and target { code jsonstructure } <END>
<BEG> creates json merge patch < a href= http : tool ietf org html rfc7396 > rfc 7396 < a > from specify { code jsonvalue } <END>
<BEG> generates a json merge patch < a href= http : tool ietf org html rfc7396 > rfc 7396 < a > from the source and target { code jsonvalue } s which when apply to the { code source } <SEG> yield the { code target } <END>
<BEG> returns a { code jsonobject } and advance the parser to the correspond { code end_object } <END>
<BEG> returns a { code jsonvalue } at the current parser position <END>
<BEG> returns a { code jsonarray } and advance the parser to the the corresponding { code end_array } <END>
<BEG> returns a stream of the { code jsonobject } 's name value pair <END>
<BEG> returns a stream of { code jsonvalue } from a sequence of json value <END>
<BEG> advance the parser to { code end_array } <END>
<BEG> return the location of the incorrect json <END>
<BEG> return the inetaddress of the site request authorization <SEG> or null if it 's not available <END>
<BEG> return the port for the requested connection <END>
<BEG> give the protocol that 's request the connection <END>
<BEG> return the prompt string give by the requestor <END>
<BEG> return the default user name give by the requestor <END>
<BEG> called when password authentication be need <END>
<BEG> return the contain < code > multipart < code > object <SEG> or < code > null < code > if not know <END>
<BEG> set the parent of this < code > bodypart < code > to be the specified < code > multipart < code > <END>
<BEG> remove any flag < strong > not < strong > in the give flags object <END>
<BEG> clear all of the system flag <END>
<BEG> returns the dead folder object return the dead folder object <END>
<BEG> parses the give date in the format specify by rfc 2822 <END>
<BEG> create database schema and or table and or create ddl script a determine by the supplied property <END>
<BEG> execute a select query and return the query result a a typed < code > java util stream stream < code > <END>
<BEG> set a brief description of the role play by the instance of hintscontext and any other related debug information <END>
<BEG> set a hint and a related value <END>
<BEG> get the caller principal <END>
<BEG> used by the callbackhandler to set the certstore within the callback <END>
<BEG> used by the certstore user to obtain the certstore set within the callback <END>
<BEG> get the array of group name <END>
<BEG> set the authentication result <END>
<BEG> used by the callbackhandler to get the request object that identify the private key to be return <END>
<BEG> used by the callbackhandler to set the requested private key and the corresponding certificate chain within the callback <END>
<BEG> used to obtain the private key set within the callback <END>
<BEG> used by the callbackhandler to set the requested secret key within the callback <END>
<BEG> get the system-wide authconfigfactory implementation <END>
<BEG> get the messagepolicy modifier <END>
<BEG> creates a new instance of authenticationparameters <SEG> useful for a fluent builder style creation of parameter <END>
<BEG> signals that for this call to the authentication mechanism remember me should be apply <SEG> iff the remember me feature be configure for the authentication mechanism respond to the authenticate call <END>
<BEG> the credential set a parameter in this instance <END>
<BEG> whether a new authentication dialog be require <END>
<BEG> whether remember me should be use <END>
<BEG> specifies that the credential value have be securely clear <END>
<BEG> determines the password value <END>
<BEG> securely clear the password value <END>
<BEG> determines the validation status <END>
<BEG> return the unique id of the identity store use to validate the credential <END>
<BEG> return the callerprincipal for the validated credential <END>
<BEG> validates the give credential <END>
<BEG> returns group for the caller <SEG> who be identify by the { link callerprincipal } and potentially other value find in the { code validationresult } parameter <END>
<BEG> determines the type of validation the { link identitystore } should be use for <END>
<BEG> determines if the argument permission be imply by this ejbmethodpermission <END>
<BEG> checks two urlpatternspec object for equality <END>
<BEG> returns the hash code value for this webresourcepermission <END>
<BEG> < p > returns a < code > string < code > contain the value of the name initialization parameter <SEG> or < code > null < code > if the parameter do not exist <END>
<BEG> < p > returns the name of the filter 's initialization parameter a an < code > enumeration < code > of < code > string < code > object <SEG> or an empty < code > enumeration < code > if the filter have no initialization parameter <END>
<BEG> < p > returns a reference to the { link servletcontext } in which this filter be run <END>
<BEG> < p > called by the servlet container to indicate to a filter that it be be place into service <END>
<BEG> < p > a convenience method which can be override so that there 's no need to call < code > super init config < code > < p > < p > instead of override { link # init filterconfig } <SEG> simply override this method and it will be call by < code > genericfilter init filterconfig config < code > <END>
<BEG> < p > returns the name of this filter instance <END>
<BEG> returns a < code > string < code > contain the value of the name initialization parameter <SEG> or < code > null < code > if the parameter do not exist <END>
<BEG> returns a reference to the { link servletcontext } in which this servlet be run <END>
<BEG> sets the maximum age in second for this cookie <END>
<BEG> assigns a new value to this cookie <END>
<BEG> gets the current value of this cookie <END>
<BEG> sets the version of the cookie protocol that this cookie complies with <END>
<BEG> marks or unmarks this cookie a < i > httponly < i > <END>
<BEG> checks whether this cookie have be mark a < i > httponly < i > <END>
<BEG> < p > the < code > dofilter < code > method of the filter be call by the container each time a request response pair be pass through the chain due to a client request for a resource at the end of the chain <END>
<BEG> < p > return the { link httpservletmapping } by which the { link httpservlet } for this { code httpservletrequest } be invoked <END>
<BEG> return a boolean indicating whether trailer field be ready to read use { link # gettrailerfields } <END>
<BEG> sets the supplier of trailer header <END>
<BEG> notification that the session be about to be passivated <END>
<BEG> notification that the session have just be activate <END>
<BEG> receives notification that an attribute have be add to a session <END>
<BEG> notifies the object that it be be bind to a session and identify the session <END>
<BEG> receives notification that a session have be create <END>
<BEG> receives notification that a session be about to be invalidate <END>
<BEG> parses a query string pass from the client to the server and build a < code > hashtable < code > object with key-value pair <END>
<BEG> gets the data protection requirement i e <SEG> whether or not ssl tls be require that must be satisfy by the transport connection <END>
<BEG> gets the name of the authorized role <END>
<BEG> gets the description string of this tag attribute <END>
<BEG> returns < code > true < code > if this attribute be to be pass a < code > valueexpression < code > so that expression evaluation can be defer <END>
<BEG> returns the name of the expected type a a string of this deferred value attribute <END>
<BEG> returns the expected method signature of this deferred method attribute <END>
<BEG> gets the directory location where file will be store <END>
<BEG> gets the maximum size allow for multipart form-data request <END>
<BEG> gets the size threshold after which file will be write to disk <END>
<BEG> receives notification that an attribute have be remove from the servletcontext <END>
<BEG> receives notification that the web application initialization process be start <END>
<BEG> reads the input stream <SEG> one line at a time <END>
<BEG> receives notification that a servletrequest be about to go out of scope of the web application <END>
<BEG> gets the possibly empty collection of http method specific constraint element <END>
<BEG> gets the set of http method name name by the httpmethodconstraints <END>
<BEG> initializes the validator in preparation for { link # isvalid object <SEG> constraintvalidatorcontext } call <END>
<BEG> set of constraint violation report during a validation <END>
<BEG> converts the closereason to a debug-friendly string <END>
<BEG> return the encoded string that be either the whole message <SEG> or the partial message that could not be decode <SEG> or { code null } if this exception arise from a failure to decode a binary message return the text not decode or { code null } for binary message failure <END>
<BEG> return the protocol <SEG> in order of preference <SEG> favorite first <SEG> that this client would like to use for it session <END>
<BEG> return the unmodifiable list of encoders this client will use <END>
<BEG> editable map of user property <END>
<BEG> the problem send the message <END>
<BEG> determines if this result be ok or not <END>
<BEG> returns the class of the endpoint that this configuration configures <END>
<BEG> return the serverendpointconfigurator return the serverendpointconfigurator <END>
<BEG> return the session on which the problem occur <END>
<BEG> create a { link javax w r core generictype generic type } from a java { code instance } <END>
<BEG> getter for primary type <END>
<BEG> getter for subtype <END>
<BEG> getter for a read-only parameter map <END>
<BEG> check if this medium type be compatible with another medium type <END>
<BEG> get the string representation of the variant language <SEG> or { code null } if no language have be set <END>
<BEG> create a { link variantlistbuilder } initialize with a set of supported medium type <END>
<BEG> create a { link variantlistbuilder } initialize with a set of supported language <END>
<BEG> create new { link outboundsseevent } from provide data <END>
<BEG> returns the throwable embed in this < code > jaxrexception < code > if there be one <END>
<BEG> returns true if a response be available <SEG> false otherwise <END>
<BEG> gets the key to the first object that encounter an error in the registry <END>
<BEG> the < code > handlerequest < code > method process the request soap message <END>
<BEG> the < code > handlefault < code > method process the soap fault base on the soap message processing model <END>
<BEG> the < code > init < code > method to enable the handler instance to initialize itself <END>
<BEG> sets the handler class param handlerclass class for the handler <END>
<BEG> sets the handler configuration a < code > java util map < code > param config configuration map <END>
<BEG> gets the handler configuration return returns empty map if no configuration map have be set ; otherwise return the set configuration map <END>
<BEG> sets the header block process by this handler <END>
<BEG> gets the linked cause return the cause of this exception or < code > null < code > if the cause be noexistent or unknown <END>
<BEG> gets an instance of the < code > servicefactory < code > < p > only one copy of a factory exists and be return to the application each time this method be call <END>
<BEG> gets the detail element <END>
<BEG> add a propertychangelistener to the listener list <END>
<BEG> supports report bound property change <END>
<BEG> getter for property enable <END>
<BEG> gets the < code > object < code > associate with the specify key <END>
<BEG> processes append merge param node the master node return merged master node <END>
<BEG> merge nodes <END>
<BEG> invoked when the mouse exit a component <END>
<BEG> invoked when a mouse button have be release on a component <END>
<BEG> invoked when the mouse have be click on a component <END>
<BEG> tells the listener that the history have change <END>
<BEG> the helpset in which the id be n't find <END>
<BEG> registers the specified manager to maintain dynamic csh <END>
<BEG> registers the specified manager to maintain dynamic csh at the specified position in list of manager <END>
<BEG> removes the first occurrence of the specified manager in manager list <END>
<BEG> removes the manager at the specified position in manager list <END>
<BEG> removes all manager from manager list <END>
<BEG> returns array of manager register to maintain dynamic csh <END>
<BEG> returns the number of manager register to maintain dynamic csh <END>
<BEG> returns the dynamic helpid for a object <END>
<BEG> get the windowpresentation for this helpbroker return the window presentation for this object <END>
<BEG> set the presentation attribute from a helpset presentation <END>
<BEG> displays the presentation to the user <END>
<BEG> show this id <END>
<BEG> shows this id a content relative to the top helpset for the helpbroker instance -- helpvisitlisteners be notify <END>
<BEG> displays this id -- helpvisitlisteners be notify <END>
<BEG> invoked when a key be type <END>
<BEG> enables help for a component <END>
<BEG> sets a new helpmodel param model the new helpmodel <END>
<BEG> removes a listener previously add with < tt > addhelphistorymodellistener < tt > param l the listener to remove <END>
<BEG> adds a listener for the helphistorymodelevent post after the model have change <END>
<BEG> discards a history <END>
<BEG> returns a history return the vector of history entry <END>
<BEG> returns a current history position return the history index <END>
<BEG> fires the history change <END>
<BEG> returns helpmodel return the helpmodel <END>
<BEG> gets the backing helpset <END>
<BEG> sets the current url and the name wich will appear in history list <END>
<BEG> returns the current url return the current url <END>
<BEG> geta all the highlight currently active <END>
<BEG> removes a listener previously add with < b > addhelplistener < b > param l - the listener to remove <END>
<BEG> assigns the document title <END>
<BEG> this pass back the event listener list a an array of listenertype - listener pair <END>
<BEG> returns the total number of listener of the supplied type for this listenerlist <END>
<BEG> returns if action previous be allow <END>
<BEG> returns the current id in the helpmodel <END>
<BEG> returns the name of this entry return the entry name <END>
<BEG> return the start position of this highlighting event <END>
<BEG> returns textual about the instance <END>
<BEG> returns the external representation of url for this item <END>
<BEG> sets this item a folder <END>
<BEG> returns wheter item allow child or not <END>
<BEG> adds favoritesitem a a child <END>
<BEG> returns true if item be initialize a empty <END>
<BEG> removes favoritesitem from vector of child <END>
<BEG> returns parent of favoritesitem <END>
<BEG> returns an object which represent the data to be transfer <END>
<BEG> returns an array of dataflavor object indicate the flavor the data can be provide in <END>
<BEG> returns whether or not the specify data flavor be support for this object <END>
<BEG> returns the string representation of offset <END>
<BEG> exports node and it descendant to the xml file accord favorite dtd <END>
<BEG> returns the xml header string <END>
<BEG> returns the deep copy of node <END>
<BEG> create a navigator for a give model <END>
<BEG> public method for parse the favorites in a url <END>
<BEG> saves favorite file param node the favoritesnode <END>
<BEG> determines whether the give id be valid <END>
<BEG> gets an enumeration of all the ids in a map <END>
<BEG> determines if the url correspond to an id in the map <END>
<BEG> determines the id that be closest to this url with a give anchor <END>
<BEG> determines the ids relate to this url <END>
<BEG> enumerates all the helpsets that have be add to this one <END>
<BEG> sest the title for this helpset <END>
<BEG> returns the id to visit when the user make a go home gesture <END>
<BEG> sets the home id for a helpset <END>
<BEG> the url that be the base for this helpset <END>
<BEG> a classloader to use when locating class <END>
<BEG> navigatorview describe the navigator view that be request by this helpset <END>
<BEG> helpset presentation describe the presentation that be define by this helpset <END>
<BEG> adds a navigatorview to the current list <END>
<BEG> versions with an explicit locale <END>
<BEG> get the context helpset <END>
<BEG> sets the helpmodel that provide the data <END>
<BEG> return the helpmodel that be provide the data <END>
<BEG> set the helpset presentation <END>
<BEG> return the url to the helpset <END>
<BEG> sets the helpui that will provide the current look and feel <END>
<BEG> replaces the ui with the late version from the default uifactory <END>
<BEG> visits a give id <END>
<BEG> return an enumeration of helpnavigators in the helpui <END>
<BEG> sets the current navigator in the helpui <END>
<BEG> determines if the navigators be hide display in the helpui <END>
<BEG> retrieves what be the current content viewer read-only property ? <END>
<BEG> sets the helpviewerui that provide the current look and feel <END>
<BEG> sets synchronization of this jhelpcontentviewer with navigator <END>
<BEG> returns synchronization mode <END>
<BEG> creates a handler for the give type from the registry of editor kit <END>
<BEG> get the accessiblecontext associate with this jcomponent return the accessiblecontext of this jcomponent <END>
<BEG> determines if this instance of a jhelpnavigator can merge it data with another one <END>
<BEG> sets state of navigation entry for give target to expand <END>
<BEG> sets state of navigation entry for give target to collapse if entry be visible <END>
<BEG> returns uiclassid return the id of uiclass represent jhelpglossarynavigator <END>
<BEG> merges some navigatorview into this instance <END>
<BEG> names this navigator <END>
<BEG> gets the navigatorview that create this navigator view <END>
<BEG> gets locale-dependent name for this navigator view <END>
<BEG> creates the parameter for a navigator from data store in a url <END>
<BEG> instantiates and return a searchengine class <END>
<BEG> explicitly change the default override what be in the helpset <END>
<BEG> creates a new mainwindow for a give helpset and helpset presentation name <END>
<BEG> returns name of node param node the node return the name of node <END>
<BEG> returns node with give name param parent the parent node param name the name of child return the child with give name <END>
<BEG> returns locale of node param node the node return the locale object <END>
<BEG> compares name of node param master the master node param slave the slave node return negative be master be lexically low than slave ; positive if master be lexically high than slave and zero if lexically identical <END>
<BEG> method for compare id of node param master the master node param slave the slave node return true if id be the same <END>
<BEG> marks node with the same name but diferent ids with their helpset title param master the master node to mark param slave the slave node to mark <END>
<BEG> gets the locale-dependent name of this view return the locale-dependent name of this view <END>
<BEG> gets parameter pass to this view <END>
<BEG> gets merge type of this navigator view return the merge type of this navigator view <END>
<BEG> returns map id of icon pass to this view <END>
<BEG> follows the reference in an link <END>
<BEG> determines if highlight have change <END>
<BEG> saves favorite to the file <END>
<BEG> returns the add action <END>
<BEG> adds subhelpsets param h the helpset which subhelpsets will be add <END>
<BEG> removes the navigational data from another glossaryview <END>
<BEG> handles action from the jtextfield component for search <END>
<BEG> returns actual helphistorymodel return the helphistorymodel <END>
<BEG> sets the current navigator <END>
<BEG> invoked when the component 's size change <END>
<BEG> invoked when the component have be make visible <END>
<BEG> sets the color the text be draw with when the node be select <END>
<BEG> sets the color the text be draw with when the node be not select <END>
<BEG> sets the color to use for the background if the node be select <END>
<BEG> sets the background color to be use for unselected node <END>
<BEG> returns the the border color <END>
<BEG> subclassed to only accept the font if it be not a fontuiresource <END>
<BEG> this be a version of c a r hoare 's quick sort algorithm <END>
<BEG> merges a navigator view <END>
<BEG> returns an addaction object <END>
<BEG> get the component that invoke this popup return component the invoking component <END>
<BEG> set the invoking component for this popup <END>
<BEG> get the internal bound for the invoker <END>
<BEG> get a name presentation give the pass helpset <END>
<BEG> determines which id be display if any <END>
<BEG> requests the presentation be set to a give size <END>
<BEG> this method get call when a bound property be change <END>
<BEG> overrides listresourcebundle <END>
<BEG> listresourcebundle \u3092\u4e0a\u66f8\u304d\u3057\u307e\u3059\u3002 <END>
<BEG> convenience method for set the locale from a lang string takes the lang string in the form of language_country_variant <END>
<BEG> adds removes a search engine to from list <END>
<BEG> remove a navigator view throws an illegalargumentexception if view be null or if there be no search engine for a view <END>
<BEG> returns the parameter to the query <END>
<BEG> an enumerated list of searchitems that match parameter of the query <END>
<BEG> gets the spec a a url relative to getbase to the document <END>
<BEG> gets the confidence value for the hit <END>
<BEG> gets the end pointer position <END>
<BEG> if there be concept against which the query be make <SEG> this be an enumeration of the concept <END>
<BEG> adds a listener for the searchengine post after the search have start <SEG> stop <SEG> or search parameter have be define <END>
<BEG> removes a listener previously add with < tt > addsearchlistener < tt > <END>
<BEG> notifies that a searchitem have be find <END>
<BEG> passs through that a searchevent have happen <END>
<BEG> notifies that a search have start <END>
<BEG> get a name secondarywindow for a give helpset <END>
<BEG> set the currentview to the navigator with the same name a the < tt > name < tt > parameter <END>
<BEG> determines if the presentation be display <END>
<BEG> hides shows view <END>
<BEG> enables the help key on a component <END>
<BEG> sorts child of node use array sort param node the node to sort param locale the locale return sorted node <END>
<BEG> the propertychange method be use to track change to lookandfeel via the lookandfeel property <END>
<BEG> installs uidefaults for help component and installs lookandfeel property change listener <END>
<BEG> set the topic image id param string id for the topic image <END>
<BEG> returns the helpset scoping this indexitem <END>
<BEG> sets the expansion type throw illegalargumentexception if not a valid type <END>
<BEG> sets the presentation see presentation <END>
<BEG> adds a map to a filter map <END>
<BEG> removes a map from this filter map <END>
<BEG> return the helpset presentation if one be set return helpset presentation - the helpset presentation use in this presentation <END>
<BEG> get the activation window <END>
<BEG> determines if the presentation should be distroyed on exit <END>
<BEG> destory the window on exit <END>
<BEG> requests the screen of the presentation return int the screen of the presentation <END>
<BEG> sets the screen of the presentation param screen the screen number throw illegalargumentexception if the screen be invalid <END>
<BEG> is the title set from the document <END>
<BEG> set the title from the document <END>
<BEG> < p class= changed_added_2_0 > return the wrapped { link responsewriter } instance < p > see responsewriterwrapper # getwrapped since 2 0 <END>
<BEG> < p class= changed_added_2_0 > return < code > true < code > if this { link faceslistener } be an instance of a the appropriate listener class that this event support < p > param listener { link faceslistener } to evaluate since 2 0 <END>
<BEG> < p class= changed_added_2_0 > broadcast this event instance to the specify { link faceslistener } <SEG> by whatever mechanism be appropriate <END>
<BEG> < p > < span class= changed_modified_2_0 changed_modified_2_2 > call < span > through to the { link methodexpression } pass in our constructor <END>
<BEG> < p > compare this { link phaseid } instance to the specify one <END>
<BEG> < p > return the cause of this exception <SEG> or < code > null < code > if the cause be nonexistent or unknown < p > <END>
<BEG> < p > return < code > true < code > if there be < code > wrappeddata < code > available <SEG> and the current value of < code > rowindex < code > be great than or equal to zero <SEG> and less than the length of the array <END>
<BEG> < p > if there be < code > wrappeddata < code > available <SEG> return the length of the array <END>
<BEG> throw javax face facesexception  throw illegalargumentexception  <END>
<BEG> throw classcastexception if < code > data < code > be non- < code > null < code > and be not an array of java object <END>
<BEG> < p > if row data be available <SEG> return the array element at the index specify by < code > rowindex < code > <END>
<BEG> throw classcastexception if < code > data < code > be non- < code > null < code > and be not a < code > list < code > <END>
<BEG> < p > return < code > true < code > if there be < code > wrappeddata < code > available <SEG> and the current value of < code > rowindex < code > be great than or equal to zero <SEG> and less than the length of the array return by call < code > getrows < code > on the underlie < code > result < code > <END>
<BEG> < p > if there be < code > wrappeddata < code > available <SEG> return the length of the array return by call < code > getrows < code > on the underlie < code > result < code > <END>
<BEG> < p > if row data be available <SEG> return the < code > sortedmap < code > array element at the index specify by < code > rowindex < code > of the array return by call < code > getrows < code > on the underlie < code > result < code > <END>
<BEG> < p > return < code > true < code > if there be < code > wrappeddata < code > available <SEG> and the result of call < code > absolute < code > on the underlie < code > resultset < code > <SEG> pass the current value of < code > rowindex < code > plus one to account for the fact that < code > resultset < code > use one-relative indexing <SEG> return < code > true < code > <END>
<BEG> < p > return -1 <SEG> since < code > resultset < code > do not provide a standard way to determine the number of available row without scroll through the entire < code > resultset < code > <SEG> and this can be very expensive if the number of row be large < p > throw facesexception if an error occur get the row count <END>
<BEG> < p > return < code > true < code > if there be < code > wrappeddata < code > available <SEG> and the current value of < code > rowindex < code > be zero <END>
<BEG> < p > if there be < code > wrappeddata < code > available <SEG> return 1 <END>
<BEG> < p > if wrap data be available <SEG> return the wrapped data instance <END>
<BEG> return a new { link exceptionhandler } that behave in a fashion compatible with specification prior to javaserverfaces 1 2 <END>
<BEG> finds the implementation { code class } for the give factory name <SEG> or if that fail <SEG> find the { code class } for the give fallback class name and create it instance <END>
<BEG> gets the value of the mime header whose name be content-id <END>
<BEG> replaces the current value of the first header entry whose name match the give name with the give value <SEG> add a new header if no exist header name match <END>
<BEG> adds a { code mimeheader } object with the specify name and value to this { code mimeheaders } object 's list of header <END>
<BEG> remove all { code mimeheader } object whose name match the give name <END>
<BEG> removes all the header entry from this { code mimeheaders } object <END>
<BEG> returns all the { code mimeheader } object whose name match a name in the give array of name <END>
<BEG> returns all of the { code mimeheader } object whose name do not match a name in the give array of name <END>
<BEG> creates a new instance of a concrete { code saajmetafactory } object <END>
<BEG> create a { code soapelement } object initialize with the give { code name } object <END>
<BEG> create a { code soapelement } object initialize with the give local name <END>
<BEG> create a new { code soapelement } object with the give local name <SEG> prefix and uri <END>
<BEG> creates a new { code soapfactory } object that be an instance of the specified implementation <SEG> this method use the saajmetafactory to locate the implementation class and create the soapfactory instance <END>
<BEG> gets the soap body contain in this { code soapmessage } object <END>
<BEG> associates the specified value with the specify property <END>
<BEG> sets the value of the mime header content-location to the give { code string } <END>
<BEG> removes lead and trail whitespaces of the string give a the parameter <SEG> then truncate any sequence of tab <SEG> cr <SEG> lf <SEG> and sp by a single whitespace character ' ' <END>
<BEG> { link xmladapter } for { code x : hexbinary } <END>
<BEG> replace any tab <SEG> cr <SEG> and lf by a whitespace character ' ' <SEG> a specify in < a href= http : www w3 org tr xmlschema-2 # rf-whitespace > the whitespace facet 'replace ' < a > <END>
<BEG> search the give classloader for an instance of the specified class and return a string representation of the url that point to the resource <END>
<BEG> < p > convert the string argument into a biginteger value <END>
<BEG> < p > converts the string argument into an array of byte <END>
<BEG> < p > return a string contain the lexical representation of the simple type <END>
<BEG> < p > converts a biginteger value into a string <END>
<BEG> by default <SEG> the getnode method be unsupported and throw an { link java lang unsupportedoperationexception } <END>
<BEG> convenience method for set the output encode <END>
<BEG> convenience method for get the current schemalocation <END>
<BEG> convenience method for set the schemalocation <END>
<BEG> gets the corresponding java encode name from an iana name <END>
<BEG> obtains a configured xmlreader <END>
<BEG> indicates whether or not the unmarshaller be configure to validate during unmarshal operation <END>
<BEG> specifies whether or not the unmarshaller should validate during unmarshal operation <END>
<BEG> creates an unmarshalexception from a saxexception <END>
<BEG> loads a string resource and format it with specify argument <END>
<BEG> set the url field on this event locator <END>
<BEG> returns a string representation of this object in a format helpful to debug <END>
<BEG> returns the java binding of the xml element declaration 's type attribute <END>
<BEG> returns the xml element tag name <END>
<BEG> < p > set the content model and attribute of this xml element < p > < p > when this property be set to { code null } <SEG> { code isnil } must by { code true } <END>
<BEG> < p > return the content model and attribute value for this element < p > < p > see { link # isnil } for a description of a property constraint when this value be { code null } < p > <END>
<BEG> returns scope of xml element declaration <END>
<BEG> < p > set whether this element have nil content < p > see # isnil <END>
<BEG> returns true iff this xml element declaration be global <END>
<BEG> returns true iff this xml element instance 's value have a different type than xml element declaration 's declare type <END>
<BEG> get the link exception return the link exception <SEG> null if none exists <END>
<BEG> add a link exception <END>
<BEG> returns a short description of this jaxbexception <END>
<BEG> < p > get the element value of a jaxb element < p > < p > convenience method to abstract whether work with either a javax xml bind jaxbelement instance or an instance of { code xmlrootelement } annotate java class < p > param jaxbelement object that # iselement object return true <END>
<BEG> resolves class from context path <END>
<BEG> find first class in package by { code jaxb index } file <END>
<BEG> implementation may be define in other module than { code java xml bind } <END>
<BEG> this be usually the big processing bottleneck <END>
<BEG> returns true if the specified string be all whitespace <END>
<BEG> < p > create a < code > duration < code > of type < code > xdt : daytimeduration < code > by parse it < code > string < code > representation <SEG> < em > pndtnhnmns < em > <SEG> < a href= http : www w3 org tr xpath-datamodel # daytimeduration > xquery 1 0 and xpath 2 0 data model <SEG> xdt : daytimeduration < a > < p > < p > the datatype < code > xdt : daytimeduration < code > be a subtype of < code > x : duration < code > whose lexical representation contain only day <SEG> hour <SEG> minute <SEG> and second component <END>
<BEG> < p > create a < code > duration < code > of type < code > xdt : daytimeduration < code > use the specified millisecond a define in < a href= http : www w3 org tr xpath-datamodel # daytimeduration > xquery 1 0 and xpath 2 0 data model <SEG> xdt : daytimeduration < a > < p > < p > the datatype < code > xdt : daytimeduration < code > be a subtype of < code > x : duration < code > whose lexical representation contain only day <SEG> hour <SEG> minute <SEG> and second component <END>
<BEG> < p > return the name of the xml schema date time type that this instance map to <END>
<BEG> < p > get the year value of this < code > duration < code > a an < code > int < code > or < code > 0 < code > if not present < p > < p > < code > getyears < code > be a convenience method for { link # getfield datatypeconstants field field getfield datatypeconstants years } < p > < p > as the return value be an < code > int < code > <SEG> an incorrect value will be return for < code > duration < code > s with year that go beyond the range of an < code > int < code > <END>
<BEG> < p > returns the length of the duration in milli-seconds < p > < p > if the second field carry more digit than milli-second order <SEG> those will be simply discarded or in other word <SEG> round to zero <END>
<BEG> < p > computes a new duration whose value be < code > this-rhs < code > < p > < p > for example : < p > < pre > 1 day - -3 day = 4 day 1 year - 1 day = illegalstateexception - 1 hour<SEG>50 minute - -20 minute = - 1hours<SEG>30 minute 15 hour - -3 day = 3 day and 15 hour 1 year - -1 day = 1 year and 1 day < pre > < p > since there 's no way to meaningfully subtract 1 day from 1 month <SEG> there be case where the operation fail in { link illegalstateexception } < p > < p > formally the computation be define a follow <END>
<BEG> < p > checks if this duration object be strictly long than another < code > duration < code > object < p > < p > duration x be long than y if and only if x > y a define in the section 3 2 6 2 of the xml schema 1 0 specification < p > < p > for example <SEG> p1d one day > pt12h 12 hour and p2y two year > p23m 23 month < p > param duration < code > duration < code > to test this < code > duration < code > against <END>
<BEG> < p > checks if this duration object be strictly short than another < code > duration < code > object < p > param duration < code > duration < code > to test this < code > duration < code > against <END>
<BEG> < p > returns a < code > string < code > representation of this < code > duration < code > < code > object < code > < p > < p > the result be format accord to the xml schema 1 0 spec and can be always parse back later into the equivalent < code > duration < code > < code > object < code > by { link datatypefactory # newduration string lexicalrepresentation } < p > < p > formally <SEG> the following hold for any < code > duration < code > < code > object < code > x : < p > < pre > new duration x tostring equal x < pre > return a non- < code > null < code > valid < code > string < code > representation of this < code > duration < code > <END>
<BEG> < p > set time a one unit < p > param hour value constraint be summarize in < a href= # datetimefield-hour > hour field of date time field map table < a > <END>
<BEG> < p > set time a one unit <SEG> include optional millisecond < p > param hour value constraint be summarize in < a href= # datetimefield-hour > hour field of date time field map table < a > <END>
<BEG> < p > compares this calendar to the specify object <END>
<BEG> < p > returns a < code > string < code > representation of this < code > xmlgregoriancalendar < code > < code > object < code > < p > < p > the result be a lexical representation generate by { link # toxmlformat } < p > return a non- < code > null < code > valid < code > string < code > representation of this < code > xmlgregoriancalendar < code > <END>
<BEG> < p > get the namespace uri of this < code > qname < code > < p > return namespace uri of this < code > qname < code > <END>
<BEG> < p > < code > string < code > representation of this < code > qname < code > < p > < p > the commonly accepted way of represent a < code > qname < code > a a < code > string < code > be < a href= http : jclark com xml xmlns htm > define < a > by james clark <END>
<BEG> < p > get a reference to the the { link schema } be use by the xml processor < p > < p > if no schema be be use <SEG> < code > null < code > be return < p > return { link schema } be use or < code > null < code > if none in use throw unsupportedoperationexception when implementation do not override this method since 1 5 <END>
<BEG> < p > get the xinclude processing mode for this parser < p > return the return value of the { link documentbuilderfactory # isxincludeaware } when this parser be create from factory <END>
<BEG> obtain a new instance of a < code > documentbuilderfactory < code > <END>
<BEG> specifies that the parser produce by this code will provide support for xml namespaces <END>
<BEG> specifies that the parser produce by this code will expand entity reference node <END>
<BEG> < p > specifies that the parser produce by this code will ignore comment <END>
<BEG> specifies that the parser produce by this code will convert cdata node to text node and append it to the adjacent if any text node <END>
<BEG> indicates whether or not the factory be configure to produce parser which be namespace aware <END>
<BEG> indicates whether or not the factory be configure to produce parser which expand entity reference node <END>
<BEG> indicates whether or not the factory be configure to produce parser which ignore comment <END>
<BEG> indicates whether or not the factory be configure to produce parser which convert cdata node to text node and append it to the adjacent if any text node <END>
<BEG> < p > set the { link schema } to be use by parser create from this factory <END>
<BEG> < p > set state of xinclude process < p > < p > if xinclude markup be find in the document instance <SEG> should it be process a specify in < a href= http : www w3 org tr xinclude > xml inclusions xinclude version 1 0 < a > < p > < p > xinclude processing default to < code > false < code > < p > param state set xinclude processing to < code > true < code > or < code > false < code > throw unsupportedoperationexception when implementation do not override this method <END>
<BEG> use the exception chain mechanism of jdk1 4 <END>
<BEG> < p > parse the content of the give { link java io inputstream } instance a xml use the specify { link org xml sax handlerbase } <END>
<BEG> parse the content of the give { link java io inputstream } instance a xml use the specify { link org xml sax helper defaulthandler } <END>
<BEG> parse the content describe by the give uniform resource identifier uri a xml use the specify { link org xml sax handlerbase } <END>
<BEG> parse the content describe by the give uniform resource identifier uri a xml use the specify { link org xml sax helper defaulthandler } <END>
<BEG> parse the content of the file specify a xml use the specify { link org xml sax handlerbase } <END>
<BEG> parse the content of the file specify a xml use the specify { link org xml sax helper defaulthandler } <END>
<BEG> < p > get the node that will contain the result dom tree < p > < p > if no node be set via { link # domresult node node } <SEG> { link # domresult node node <SEG> string systeid } <SEG> { link # domresult node node <SEG> node nextsibling } <SEG> { link # domresult node node <SEG> node nextsibling <SEG> string systemid } or { link # setnode node node } <SEG> then the node will be set by the transformation <SEG> and may be obtain from this method once the transformation be complete <END>
<BEG> < p > set the systemid that may be use in association with the node < p > param systemid the system identifier a a uri string <END>
<BEG> < p > get the system identifier < p > < p > if no system id be set via { link # domresult node node <SEG> string systemid } <SEG> { link # domresult node node <SEG> node nextsibling <SEG> string systemid } or { link # setsystemid string systemid } <SEG> then < code > null < code > will be return < p > return the system identifier <END>
<BEG> set the node that will represent a source dom tree <END>
<BEG> set the base id url or system id from where urls will be resolve <END>
<BEG> set the sax2 { link org xml sax ext lexicalhandler } for the output <END>
<BEG> get the xmlreader to be use for the source <END>
<BEG> set the sax inputsource to be use for the source <END>
<BEG> < p > get the base id uri or system id from where uris will be resolve < p > return base url for the < code > source < code > <SEG> or < code > null < code > <END>
<BEG> attempt to obtain a sax inputsource object from a source object <END>
<BEG> < p > get the < code > xmleventwriter < code > use by this < code > staxresult < code > < p > < p > < code > xmleventwriter < code > will be < code > null < code > if this < code > staxresult < code > be create with a < code > xmlstreamwriter < code > < p > return < code > xmleventwriter < code > use by this < code > staxresult < code > <END>
<BEG> < p > in the context of a < code > staxresult < code > <SEG> it be not appropriate to explicitly set the system identifier <END>
<BEG> < p > the returned system identifier be always < code > null < code > < p > return the returned system identifier be always < code > null < code > <END>
<BEG> set the bytestream that be to be write to <END>
<BEG> set the writer that be to receive the result <END>
<BEG> set the byte stream to be use a input <END>
<BEG> method getlocator retrieve an instance of a sourcelocator object that specify where an error occur <END>
<BEG> this method retrieve an exception that this exception wrap <END>
<BEG> get the error message with location information append <END>
<BEG> print the the trace of method from where the error originate <END>
<BEG> < p > obtain a new instance of a < code > schemafactory < code > from class name <END>
<BEG> < p > creates a new { link schemafactory } object for the specified schema language < p > param schemalanguage see { link schemafactory schema language } table in < code > schemafactory < code > for the list of available schema language <END>
<BEG> < p > creates an instance of the specify and return it < p > param classname fully qualified class name to be instanciated <END>
<BEG> < p > print stack trace to specify < code > printstream < code > < p > param s print stack trace to this < code > printstream < code > <END>
<BEG> < p > obtain a new instance of a < code > xpathfactory < code > from a factory class name <END>
<BEG> < p > creates a new { link xpathfactory } object for the specified schema language < p > param uri identifies the underlie object model <END>
<BEG> return the first implementation that have the desire feature <SEG> or < code > null < code > if none be find <END>
<BEG> return a list of implementation that support the desired feature <END>
<BEG> register an implementation <END>
<BEG> override tostring to provide more detailed error message <END>
<BEG> creates an endpoint with the specify binding type <SEG> implementor object <SEG> and web service feature <END>
<BEG> creates and publishes an endpoint for the specified implementor object at the give address <END>
<BEG> by set a { code endpointcontext } <SEG> jax-ws runtime know about address of other endpoint in an application <END>
<BEG> factory method to read an endpointreference from the infoset contain in { code eprinfoset } <END>
<BEG> displays epr infoset for debug convenience <END>
<BEG> if addressing be enable <SEG> this property determine whether endpoint require the use of anonymous response <SEG> or non-anonymous response <SEG> or all response <END>
<BEG> jax-ws runtime set it handler during { link endpoint # publish httpcontext } to handle http request for this context <END>
<BEG> sets the { code address } to the { code w3cendpointreference } instance 's { code wsa : address } <END>
<BEG> sets the { code endpointname } a { code wsam : servicename endpointname } in the { code wsa : metadata } element <END>
<BEG> sets the { code wsdldocumentlocation } that will be reference a { code wsa : metadata wsdli : wsdllocation } <END>
<BEG> adds the { code referenceparameter } to the { code w3cendpointreference } instance { code wsa : referenceparameters } element <END>
<BEG> adds the { code metadataelement } to the { code w3cendpointreference } instance 's { code wsa : metadata } element <END>
<BEG> adds an extension element to the { code w3cendpointreference } instance 's { code wsa : endpointreference } element <END>
<BEG> builds a { code w3cendpointreference } from the accumulated property set on this { code w3cendpointreferencebuilder } instance <END>
<BEG> stores an attribute in this credential instance <END>
<BEG> returns the value of the name attribute a an < code > object < code > <SEG> or < code > null < code > if no attribute of the give name exists <END>
<BEG> returns the name of the attribute available to this credential instance <END>
<BEG> called when the < code > visitor < code > be pass to a < code > property < code > <END>
<BEG> determine if the other object represent the same object id <END>
<BEG> determine the ordering of identity object <END>
<BEG> create the key a an object <END>
<BEG> set the give key a the key for this instance <END>
<BEG> assert that the key be not null <END>
<BEG> check the class and class name and object type <END>
<BEG> write to the output stream <END>
<BEG> the exception may include a failed object <END>
<BEG> jdk 1 4 include a new chaining mechanism for throwable <SEG> but since jdo have it own legacy chain mechanism <SEG> the standard mechanism can not be use <END>
<BEG> the < code > string < code > representation include the name of the class <SEG> the descriptive comment if any <SEG> the < code > string < code > representation of the failed < code > object < code > if any <SEG> and the < code > string < code > representation of the nested < code > throwable < code > s if any <END>
<BEG> prints this < code > jdoexception < code > and it backtrace to the standard error output <END>
<BEG> creates a map from jdoconfig xsd element attribute to pmf property <END>
<BEG> return the singleton instance of jdohelper <END>
<BEG> return the associated < code > persistencemanager < code > if there be one <END>
<BEG> explicitly mark the parameter instance and field dirty <END>
<BEG> tests whether the parameter instance be dirty <END>
<BEG> tests whether the parameter instance have be newly make persistent <END>
<BEG> tests whether the parameter instance have be delete <END>
<BEG> accessor for the state of the pass object <END>
<BEG> get the anonymous < code > persistencemanagerfactory < code > configure via the standard configuration file resource meta-inf jdoconfig xml <SEG> use the current thread 's context class loader to locate the configuration file resource s <END>
<BEG> returns a collection of class object of the registered persistence-capable class <END>
<BEG> register an errorhandler instance for use in parse the resource s meta-inf jdoconfig xml <END>
<BEG> register special stringconstructor instance <END>
<BEG> get the dateformat instance for the default locale from the vm <END>
<BEG> register a dateformat instance for use with construct date instance <END>
<BEG> the key be define a the combination of < code > from-view-id < code > < code > from-action < code > < code > from-outcome < code > <END>
<BEG> return the single default instance of this class create with the default template class <END>
<BEG> < p > this be a no-op <SEG> but be include for parity with { link # endparse } < p > <END>
<BEG> < p > conclude parse one application configuration resource < p > < p > this method take no action if version tracking be disabled < p > <END>
<BEG> reads the next byte of data from this input stream <END>
<BEG> reads up to < code > len < code > byte of data into an array of byte from this input stream <END>
<BEG> skips < code > n < code > byte of input from this input stream <END>
<BEG> set the current marked position in the stream <END>
<BEG> resets the buffer to the mark position <END>
<BEG> closing a < tt > bytearrayinputstream < tt > have no effect <END>
<BEG> writes the specified byte to this byte array output stream <END>
<BEG> writes < code > len < code > bytes from the specify byte array start at offset < code > off < code > to this byte array output stream <END>
<BEG> < p > encodes the remain byte and flush the < code > char [ ] < code > to the wrap < code > writer < code > < p > throw ioexception if an error occur write the remain byte <END>
<BEG> return the total number of character write <END>
<BEG> < p > write a portion of an array of character < p > param cbuf array of character param off offset from which to start write character param len number of character to write throw ioexception <END>
<BEG> return a new < code > timer < code > instance if the < code > timing < code > log level be < code > fine < code > <SEG> otherwise <SEG> return null ; <END>
<BEG> log the timing result <END>
<BEG> < p > the implementation of this method must perform the following step : < ul > < li > inject the supported resource per the servlet 2 5 specification into the provided object < li > < ul > < p > param managedbean the target manage bean <END>
<BEG> < p > the implementation of this method must perform the following step : < ul > < li > inject the supported resource per the servlet 2 5 specification into the provided object < li > < ul > < p > < p > this method < em > must not < em > invoke any method annotate with < code > postconstruct < code > param managedbean the target manage bean throw com sun face spi injectionproviderexception if an error occur during resource injection <END>
<BEG> < p > the implemenation of this method must invoke any method mark with the < code > predestroy < code > annotation per the common annotations specification <END>
<BEG> compare for equality param obj the object to compare to return true if the object be a { code cookie } with the same value for all property <SEG> false otherwise <END>
<BEG> check the strength of an entitytag return true if this represent a weak tag <SEG> false otherwise <END>
<BEG> get the enclosed entity return the enclosed entity <END>
<BEG> checks if the subtype be a wildcard return true if the subtype be a wildcard <END>
<BEG> compares obj to this medium type to see if they be the same by compare type <SEG> subtype and parameter <END>
<BEG> create a new responsebuilder by perform a shallow copy of an exist response <END>
<BEG> create a new responsebuilder with an server error status <END>
<BEG> create a new responsebuilder for a create resource <SEG> set the location header use the supply value <END>
<BEG> create a new responsebuilder for an empty response <END>
<BEG> create a new responsebuilder for a redirection <END>
<BEG> get the medium type of the variant return the medium type or null if none set <END>
<BEG> finds the implementation < code > class < code > object for the give factory name <SEG> or if that fail <SEG> find the < code > class < code > object for the give fallback class name <END>
<BEG> obtain a runtimedelegate instance <END>
<BEG> sets an boolean attribute <END>
<BEG> sets an attribute <SEG> use { code attribute getclass } a attribute < i > type < i > <END>
<BEG> removes an entry of a certain key <END>
<BEG> returns the provider and their ordering to be consider <END>
<BEG> gets the target implementation type require <END>
<BEG> simple override <SEG> that set the provider a provider to use <END>
<BEG> set the historic value <END>
<BEG> creates a new { link conversioncontext } with the data from this builder instance <END>
<BEG> creates a new { link javax money convert conversioncontextbuilder } instance <END>
<BEG> create a new builder <SEG> hereby use the give { link conversioncontext } 's value a default <END>
<BEG> get the base currency <END>
<BEG> creates a new builder preinitialized with value from this instance <END>
<BEG> sets the term currency <END>
<BEG> gets the first currency at fault <END>
<BEG> allows to evaluate if this exchange rate be a derived exchange rate <END>
<BEG> checks if an { link exchangerate } between two { link currencyunit } be available from this provider <END>
<BEG> access a { link exchangerate } use the give currency <END>
<BEG> access an instance of { link currencyconversion } for the give provider <END>
<BEG> checks if a { link javax money convert currencyconversion } be available for the give parameter <END>
<BEG> access an instance of { link currencyconversion } use the give provider a a provider chain <END>
<BEG> return the non localize name of all provider available in the current context <END>
<BEG> allows to convert a instance into the corresponding { link javax money currencycontextbuilder } <SEG> which allow to change the value and of another { link javax money currencycontext } instance <END>
<BEG> creates a new instance of { link javax money currencycontext } <END>
<BEG> gets the currency code <SEG> or the regular expression to select code <END>
<BEG> sets the country for which currency should be request <END>
<BEG> this default implementation simply return all provider define in arbitrary order <END>
<BEG> creates an round instance use { link java math roundingmode # up } round <END>
<BEG> get the default rounding <SEG> which delegate round dynamically depend on the current currency <END>
<BEG> query all rounding match the give { link roundingquery } <END>
<BEG> get the name of all current register provider <END>
<BEG> allows to access the identifier of the current defined rounding <END>
<BEG> access the context 's locale <END>
<BEG> access the format 's { link javax money monetaryamountfactory } that be use to of new amount during parse <END>
<BEG> sets a format 's name <END>
<BEG> sets a locale to be apply <END>
<BEG> creates a new instance of { link amountformatcontext } that configure a { link javax money format monetaryamountformat } <END>
<BEG> creates a new default { link amountformatcontextbuilder } for a formatter base on the locale specific default <END>
<BEG> gets a style 's id <END>
<BEG> gets the { link javax money monetaryamountfactoryquery } to be use for access { link javax money monetaryamountfactory } <SEG> when amount 's be parse <END>
<BEG> get a { link javax money format amountformatquerybuilder } preinitialized with this context instance <END>
<BEG> creates a new { link amountformatquerybuilder } and initialize it with the value from { code formatquery <END>
<BEG> formats the give { link monetaryamount } to a string <END>
<BEG> creates a rounding that can be add a { link monetaryoperator } to chained calculation <END>
<BEG> access a new instance base on the currency code <END>
<BEG> access a new instance base on the { link locale } <END>
<BEG> query all currency match the give query <END>
<BEG> queries this monetary amount for a value <END>
<BEG> checks if a { code monetaryamount } be negative <END>
<BEG> checks if a { code monetaryamount } be negative or zero <END>
<BEG> uses an arbitrary { link monetaryamount } to initialize this factory <END>
<BEG> returns the maximal { link monetarycontext } support <SEG> for request that exceed these maximal capability <SEG> an { link arithmeticexception } must be throw <END>
<BEG> get the maximal scale to be support <END>
<BEG> get the fixed scale flag to be support <END>
<BEG> sets the required precision <SEG> the value 0 model unlimited precision <END>
<BEG> sets the flag if the scale should fix <SEG> mean minimal scale and maximal scale be always equally sized <END>
<BEG> get the maximal scale support <SEG> always { code > = -1 } <END>
<BEG> set the required precision <END>
<BEG> set the flag if the scale should fix <END>
<BEG> creates a new builder <SEG> use an exist { link javax money monetarycontext } a a template <END>
<BEG> creates a new builder <SEG> hereby the target implementation type be require <END>
<BEG> get the basic { link javax money currencyunit } <SEG> which be base for this rounding type <END>
<BEG> get the basic { link currencyunit } <SEG> which be base for this rounding type <END>
<BEG> gets the target scale <END>
<BEG> sets the round name of the { link monetaryrounding } instance <END>
<BEG> sets the target { link currencyunit } <SEG> which define a round target a concrete { link currencyunit } <END>
<BEG> delegate method for { link serviceprovider # getservices class } <END>
<BEG> the unique name of this currency provider instance <END>
<BEG> checks if a { link currencyunit } instance match the give { link javax money currencycontext } be available from this provider <END>
<BEG> method that determine if this factory should be consider for general evaluation of match { link monetaryamount } implementation type when call { link javax money monetary # getamountfactory javax money monetaryamountfactoryquery } <END>
<BEG> checks if an { link javax money monetaryamountfactory } be match the give query <END>
<BEG> executes the query and return the { link javax money monetaryamount } implementation type find <SEG> if there be only one type <END>
<BEG> executes the query and return the { link javax money monetaryamount } implementation type find <END>
<BEG> access the default { link javax money monetaryamountfactory } <END>
<BEG> get the currently register { link monetaryamount } implementation class <END>
<BEG> access the current register { link javax money convert exchangerateprovider } instance <END>
<BEG> checks if a { link javax money format monetaryamountformat } be available give a { link javax money format amountformatquery } <END>
<BEG> access the invalid currency code <END>
<BEG> < div class= changed_added_3_0 > gets the wrapped object <END>
<BEG> returns all of the value for the specified header a an array of < code > string < code > object <END>
<BEG> adds a < code > mimeheader < code > object with the specify name and value to this < code > mimeheaders < code > object 's list of header <END>
<BEG> remove all < code > mimeheader < code > object whose name match the give name <END>
<BEG> returns all the < code > mimeheader < code > s in this < code > mimeheaders < code > object <END>
<BEG> returns all the < code > mimeheader < code > object whose name match a name in the give array of name <END>
<BEG> creates a new instance of a concrete < code > saajmetafactory < code > object <END>
<BEG> returns the specified unit multiply by the factor < code > 1024 < code > binary prefix <END>
<BEG> returns the specified unit multiply by the factor < code > 1024 < sup > 2 < sup > < code > binary prefix <END>
<BEG> base part of the associated factor in { code base^exponent } representation <END>
<BEG> returns { code true } if this { link quantityformat } depend on a { code locale } to perform it task <END>
<BEG> convenient method equivalent to { link # to javax measure unit to getunit tosystemunit } <END>
<BEG> allows to define a priority for a registered { code serviceprovider } instance <END>
<BEG> builds and return a { link validatorfactory } instance base on the default bean validation provider and follow the xml configuration <END>
<BEG> builds a { link configuration } for a particular provider implementation <END>
<BEG> sets the value of this axis angle to the specify x <SEG> y <SEG> z <SEG> angle <END>
<BEG> sets the value of this axis angle to the value of axis angle a1 <END>
<BEG> sets the value of this axisangle4d to the specify axis and angle <END>
<BEG> gets the value of this axis angle and place it into the array a of length four in x <SEG> y <SEG> z <SEG> angle order <END>
<BEG> returns a hash code value base on the data value in this object <END>
<BEG> get value of < i > x < i > coordinate <END>
<BEG> set a new value for < i > x < i > coordinate <END>
<BEG> sets the value of this axis-angle to the specify x <SEG> y <SEG> z <SEG> angle <END>
<BEG> sets the value of this axis-angle to the specify value in the array of length 4 <END>
<BEG> sets the value of this axis-angle to the value of axis-angle a1 <END>
<BEG> copies the value of this axis-angle into the array a <END>
<BEG> sets the r <SEG> g <SEG> b value of this color3b object to those of the specify awt color object <END>
<BEG> returns a new awt color object initialize with the r <SEG> g <SEG> b value of this color3b object <END>
<BEG> sets the r <SEG> g <SEG> b <SEG> a value of this color4b object to those of the specify awt color object <END>
<BEG> returns a new awt color object initialize with the r <SEG> g <SEG> b <SEG> a value of this color4b object <END>
<BEG> inverts this matrix in place <END>
<BEG> inverts matrix m1 and place the new value into this matrix <END>
<BEG> changes the size of this matrix dynamically <END>
<BEG> sets the value of this matrix to that of the matrix3d provide <END>
<BEG> retrieves the value at the specified row and column of this matrix <END>
<BEG> places the value in the upper 3x3 of this gmatrix into the matrix m1 <END>
<BEG> lu decomposition : this matrix must be a square matrix and the lu gmatrix parameter must be the same size a this matrix <END>
<BEG> general invert routine <END>
<BEG> creates a new object of the same class a this object <END>
<BEG> returns the sum of the square of this vector it length square in n-dimensional space <END>
<BEG> multiplies matrix m1 time vector v1 and place the result into this vector this = m1 v1 <END>
<BEG> multiplies the transpose of vector v1 ie <SEG> v1 become a row vector with respect to the multiplication time matrix m1 and place the result into this vector this = transpose v1 m1 <END>
<BEG> negates the value of this vector : this = -this <END>
<BEG> sets all the value in this vector to zero <END>
<BEG> sets the value of this vector to the value find in the array parameter <END>
<BEG> sets the value of this vector to the value in tuple param tuple the source for the new gvector 's new value <END>
<BEG> retrieves the value at the specified index value of this vector <END>
<BEG> modifies the value at the specified index of this vector <END>
<BEG> returns the dot product of this vector and vector v1 <END>
<BEG> solves for x in ax = b <SEG> where x be this vector nx1 <SEG> a be mxn <SEG> b be mx1 <SEG> and a = u w transpose v ; u <SEG> w <SEG> v must be precomputed and can be find by take the singular value decomposition svd of a use the method svd find in the gmatrix class <END>
<BEG> lu decomposition back solve ; this method take the lu matrix and the permutation vector produce by the gmatrix method lud and solve the equation lu x = b by place the solution vector x into this vector <END>
<BEG> returns the n-space angle in radian between this vector and the vector parameter ; the return value be constrain to the range [ 0 <SEG> pi ] <END>
<BEG> linearly interpolate between this vector and vector v1 and place the result into this tuple : this = 1-alpha this + alpha v1 <END>
<BEG> computes the l-1 manhattan distance between this point and point p1 <END>
<BEG> computes the l-infinite distance between this point and point p1 <END>
<BEG> sets the x <SEG> y <SEG> z component of this point to the corresponding component of tuple t1 <END>
<BEG> sets the value of this quaternion to the quaternion product of quaternion q1 and q2 this = q1 q2 <END>
<BEG> multiplies quaternion q1 by the inverse of quaternion q2 and place the value into this quaternion <END>
<BEG> sets the value of this tuple from the 2 value specify in the array <END>
<BEG> sets the value of this tuple to the value of the tuple2d argument <END>
<BEG> copies the value of the element of this tuple into the array t param t the array that will contain the value of the vector <END>
<BEG> sets the value of this tuple to the vector sum of tuples t1 and t2 <END>
<BEG> sets the value of this tuple to the vector difference of tuple t1 and t2 this = t1 - t2 <END>
<BEG> negates the value of this vector in place <END>
<BEG> sets the value of this tuple to the scalar multiplication of itself <END>
<BEG> sets the value of this tuple to the scalar multiplication of tuple t1 and then add tuple t2 this = s t1 + t2 <END>
<BEG> sets the value of this tuple to the scalar multiplication of itself and then add tuple t1 this = s this + t1 <END>
<BEG> clamps the tuple parameter to the range [ low <SEG> high ] and place the value into this tuple <END>
<BEG> clamps the minimum value of the tuple parameter to the min parameter and place the value into this tuple <END>
<BEG> sets each component of the tuple parameter to it absolute value and place the modified value into this tuple <END>
<BEG> clamps this tuple to the range [ low <SEG> high ] <END>
<BEG> clamps the minimum value of this tuple to the min parameter <END>
<BEG> sets each component of this tuple to it absolute value <END>
<BEG> sets the value of this tuple to the specify x and y coordinate <END>
<BEG> copies the value of this tuple into the array t param t be the array <END>
<BEG> copies the value of this tuple into the tuple t param t be the target tuple <END>
<BEG> sets the value of this tuple to the difference of tuples t1 and t2 this = t1 - t2 <END>
<BEG> sets the value of this tuple to the difference of itself and t1 this = this - t1 <END>
<BEG> sets the value of this tuple to the scalar multiplication of the scale factor with this <END>
<BEG> sets the value of this tuple to the scalar multiplication of tuple t1 plus tuple t2 this = s t1 + t2 <END>
<BEG> returns true if the object t1 be of type tuple2i and all of the data member of t1 be equal to the corresponding data member in this tuple2i <END>
<BEG> places the value of the x <SEG> y <SEG> z component of this tuple into the tuple t1 <END>
<BEG> sets the value of the x <SEG> y <SEG> z <SEG> data member of this tuple to the value in the array t of length 3 <END>
<BEG> copies the x <SEG> y <SEG> z coordinate of this tuple into the tuple t param t the tuple3d object into which the value of this object be copy <END>
<BEG> sets the value of this tuple to the xyz coordinate specify in the array of length 3 <END>
<BEG> gets the value of this tuple and copy the value into t param t the array of length 3 into which the value be copy <END>
<BEG> gets the value of this tuple and copy the value into t param t the tuple3f object into which the value of this object be copy <END>
<BEG> places the value of the x <SEG> y <SEG> z <SEG> w component of this tuple4b into the array of length 4 <END>
<BEG> places the value of the x <SEG> y <SEG> z <SEG> w component of this tuple4b into the tuple t1 <END>
<BEG> sets the value of the data member of this tuple to the value of the array b of length 4 <END>
<BEG> sets the value of this tuple to the scalar multiplication of the scale factor with the tuple t1 <END>
<BEG> copies the value of this tuple into the array t param t the array <END>
<BEG> returns the representation of the specify floating-point value accord to the ieee 754 floating-point single format bit layout <SEG> after first mapping -0 0 to 0 0 <END>
<BEG> computes the dot product of the this vector and vector v1 <END>
<BEG> returns the squared length of this vector return the squared length of this vector a a float <END>
<BEG> return the dot product of this vector and v1 param v1 the other vector return the dot product of this vector and v1 <END>
<BEG> returns sql statement use in this prepared statement together with the parameter <END>
<BEG> setter for result <END>
<BEG>  see java lang object # tostring <END>
<BEG> returns the jdbc driver that have be configure for use by this pool <END>
<BEG> see { link basicdatasource # getdefaultschema } return { link basicdatasource # getdefaultschema } since 2 5 0 <END>
<BEG> return the data source <END>
<BEG> testing api gets the value of password for the default user <END>
<BEG> closes all pool associate with this class <END>
<BEG> deserializes the provided byte array to create an object <END>
<BEG> gets the value of user name <END>
<BEG> return the connection uri <END>
<BEG> gets a flag indicate whether auto-generated key should be return ; one of < code > statement return_generated_keys < code > or < code > statement no_generated_keys < code > <END>
<BEG> gets an array of column index indicate the column that should be return from the inserted row or row <END>
<BEG> gets the result set holdability <SEG> one of the following < code > resultset < code > constant : < code > resultset hold_cursors_over_commit < code > or < code > resultset close_cursors_at_commit < code > <END>
<BEG> gets the result set type <SEG> one of < code > resultset type_forward_only < code > <SEG> < code > resultset type_scroll_insensitive < code > <SEG> or < code > resultset type_scroll_sensitive < code > <END>
<BEG> gets the sql statement <END>
<BEG> closes the autocloseable which may be null <END>
<BEG> gets the correct i18n message for the give key with placeholder replace by the supplied argument <END>
<BEG> converts the give char [ ] to a string <END>
<BEG> author brett wooldridge <END>
<BEG> convert an opaque time-stamp return by currenttime into an elapsed time in millisecond <SEG> base on the current instant in time <END>
<BEG> get the difference in millisecond between two opaque time-stamps return by currenttime <END>
<BEG> return the specified opaque time-stamp plus the specified number of millisecond <END>
<BEG> get the timeunit the clocksource be denominate in <END>
<BEG> get a string representation of the elapsed time in appropriate magnitude terminology <END>
<BEG> add a new object to the bag for others to borrow <END>
<BEG> this method provide a snapshot in time of the bagentry item in the bag in the specified state <END>
<BEG> remove the last element from the list <END>
<BEG> return null if string be null or empty <END>
<BEG> checks whether an object be an instance of give type without throw exception when the class be not load <END>
<BEG> create and instance of the specified class use the constructor match the specified argument <END>
<BEG> get the int value of a transaction isolation level by name <END>
<BEG> this remove method be most efficient when the element be remove be the last element <END>
<BEG> get the elapsed time in millisecond between the specified start time and now <END>
<BEG> fair retrieval of an object in the queue <END>
<BEG> find method that be tag a manage somewhere in the hierarchy param clazz the class to analyze return a map that associate a concrete method to the actual method tag a manage which may belong to a different class in clazz 's hierarchy <END>
<BEG> returns a serializable converter that always convert or reverse an object to itself <END>
<BEG> returns the equivalent { code java util optional } value to this optional <END>
<BEG> calls { link system # nanotime } <END>
<BEG>  < p > this implementation of { code getallpresent } lack any insight into the internal cache data structure <SEG> and be thus force to return the query key instead of the cached key <END>
<BEG> generates a decorated collection that remain consistent with the value in the multimap for the provided key <END>
<BEG> returns a { code spliterator } filter by the specified predicate <END>
<BEG> pseudoconstructor for serialization support <END>
<BEG> creates a fresh entry with the specify object at the specified position in the entry array <END>
<BEG> moves the last entry in the entry array into { code dstindex } <SEG> and nulls out it old position <END>
<BEG> updates the index an iterator be point to after a call to remove : return the index of the entry that should be look at after a removal on indexremoved <SEG> with indexbeforeremove a the index that be the next entry that would be look at <END>
<BEG> creates a < i > mutable < i > { code compacthashset } instance contain the element of the give collection in unspecified order <END>
<BEG> creates a < i > mutable < i > { code compacthashset } instance contain the give element in unspecified order <END>
<BEG> creates a { code compactlinkedhashset } instance <SEG> with a high enough initial capacity that it < i > should < i > hold { code expectedsize } element without rebuild internal data structure <END>
<BEG> returns a { code collector } that return the { code k } small relative to the specify { code comparator } input element <SEG> in ascend order <SEG> a an unmodifiable { code list } <END>
<BEG> returns a fluent iterable that combine two iterables <END>
<BEG> returns a new range set consisting of the union of this range set and { code other } <END>
<BEG> not support for immutablesortedmap <END>
<BEG> returns { code true } if { code iterable } contain any element { code o } for which { code objects equal o <SEG> element } would return { code true } <END>
<BEG> creates an { code immutablemap } back by a jdk hashmap <END>
<BEG> uses a hash table to map key to value collection <SEG> initialize to expect the specified number of key <END>
<BEG> returns a { code collector } that accumulate the input elements into a new { code immutableset } with an implementation specialize for enums <END>
<BEG> returns the set of all subset of { code set } of size { code size } <END>
<BEG> if a value be present in { code optional } <SEG> return a stream contain only that element <SEG> otherwise return an empty stream <END>
<BEG> returns an { link intstream } contain the element of the first stream <SEG> follow by the element of the second stream <SEG> and so on <END>
<BEG> returns a stream consisting of the result of apply the give function to the element of { code stream } and their index in the stream <END>
<BEG> returns an unmodifiable iterable over the node in a tree structure <SEG> use pre-order traversal <END>
<BEG> an implementation of { link basegraph # edge } define in term of { link # node } and { link # successor object } <END>
<BEG> defer to { link abstractgraph # edge } base on { link # successor object } for full edge implementation <END>
<BEG> returns an immutable list of path to the file contain in the give directory <END>
<BEG> returns a predicate that return the result of { link java nio file files # isdirectory path <SEG> linkoption } on input path with the give link option <END>
<BEG> returns true if the file locate by the give path exist <SEG> be not directory <SEG> and contain the same byte <END>
<BEG> like the unix command of the same name <SEG> create an empty file or update the last modified timestamp of the exist file at the give path to the current system time <END>
<BEG> returns the < a href= http : en wikipedia org wiki filename_extension > file extension < a > for the file at the give path <SEG> or the empty string if the file have no extension <END>
<BEG> deletes the file or directory at the give { code path } recursively <END>
<BEG> deletes all file within the directory at the give { code path } { linkplain # deleterecursively recursively } <END>
<BEG> returns a { link bytesource } that read from the give url <END>
<BEG> returns a { code comparator < boolean > } that sort { code true } before { code false } <END>
<BEG> reverses the element of { code array } between { code fromindex } inclusive and { code toindex } exclusive <END>
<BEG> returns the value near to { code value } which be within the closed range { code [ min max ] } <END>
<BEG> sorts the element of { code array } in descend order <END>
<BEG> returns the small index for which { link # get } return { code target } <SEG> or { code -1 } if no such index exists <END>
<BEG> returns { code true } if { code target } be present at any index in this array <END>
<BEG> returns a new <SEG> mutable copy of this array 's value <SEG> a a primitive { code double [ ] } <END>
<BEG> typically we cache this kind of thing <SEG> but much repeat use of this view be a performance anti-pattern anyway <END>
<BEG> returns { code true } if { code object } be an { code immutabledoublearray } contain the same value a this one <SEG> in the same order <END>
<BEG> returns a string representation of this array in the same form a { link arrays # tostring double [ ] } <SEG> for example { code [ 1 <SEG> 2 <SEG> 3 ] } <END>
<BEG> sorts the element of { code array } in descend order <SEG> interpret them a unsigned 8-bit integer <END>
<BEG> sorts the element of { code array } between { code fromindex } inclusive and { code toindex } exclusive in descend order <SEG> interpret them a unsigned 8-bit integer <END>
<BEG> returns the { link invokable } that declare this parameter <END>
<BEG> since 25 1 <END>
<BEG> returns a type where { code rawtype } be parameterized by { code argument } <END>
<BEG> returns a new { code typetoken } where type variable represent by { code typeparam } be substitute by { code typearg } <END>
<BEG> resolves the give { code type } against the type context represent by this type <END>
<BEG> returns the value associate with { code key } <SEG> or zero if there be no value associate with { code key } <END>
<BEG> associates { code newvalue } with { code key } in this map <SEG> and return the value previously associate with { code key } <SEG> or zero if there be no such value <END>
<BEG> set runner thread before check isdone <END>
<BEG> adds a listener that will be call use the give executor when event be later { link # enqueue enqueued } and { link # dispatch dispatch } <END>
<BEG> enqueues an event to be run on currently know listener <END>
<BEG> enqueues an event to be run on currently know listener <SEG> with a label <END>
<BEG> dispatches all event enqueued prior to this call <SEG> serially and in order <SEG> for every listener <END>
<BEG> creates a timelimiter instance use the give executor service to execute method call <END>
<BEG> returns the name of the mbean attribute whose value be use by this valueexp <END>
<BEG> returns the objectname of the mbean that be register or unregistered <END>
<BEG> returns null <SEG> a this permission do not have action <END>
<BEG> allows the give notification type to be receive by listener param type the notification type to enable throw illegalargumentexception if the notification type be null <END>
<BEG> forbids all notification type to be receive by listener <END>
<BEG> forbids the gven notification type to be receive by listener param type the notification type to disable <END>
<BEG> returns the notification type that be not filter out by this filter <END>
<BEG> returns the dimension describe by this arraytype return int the dimension <END>
<BEG> returns the opentype of element value contain in in the array describe by this arraytype instance return opentype the < code > opentype < code > instance <END>
<BEG> test whether object be a value for this < code > arraytype < code > instance <END>
<BEG> check if object be equal with this arraytype return true if equal <END>
<BEG> return the composite type of this composite data instance <END>
<BEG> param key - the key for which to return the value return - the value of the item whose name be key throw illegalargumentexception if key be null or an empty string throw invalidkeyexception if key be not an exist item name for this compositedata instance <END>
<BEG> should this throw an exception or under follow condition merely return an empty object [ 0 ] ? ? <END>
<BEG> returns true if and only if this compositedata instance contain an item whose name be key <END>
<BEG> test that the object obj be equal to this compositedata instance param obj - the object to test if be equals return true if and only if < ul > < li > obj be an instanceof compositedata a test by instanceof compositedata < li > < li > all of the name value pair in the object map be equal to the name value pair of this instance < li > < li > if the compositetypes be equal < li > < ul > <END>
<BEG> using the same information a in equal test to create the hashcode i e the hash code of a compositedatasupport instance be the sum of the hash code of all element of information use in equal comparison ie : it composite type and all the item value <END>
<BEG> check if the key itemname be present param itemname the name of the key to look for return true if the key be present <SEG> false otherwise <END>
<BEG> retrieve the description value for the give key param itemname the key return the corresponding value <END>
<BEG> retrieve the opentype for the give key param itemname the key for which to fetch the opentype value return opentype or null if there be no value for the give key <SEG> or no matching key <END>
<BEG> test whether object be a value which could be describe by this compositetype instance <END>
<BEG> see if we can prevent a fairly expensive equal operation later where we compare the treemaps <END>
<BEG> return the calculated hashcode <END>
<BEG> return human readable representation of this class <END>
<BEG> checks if this < code > simpletype < code > object be value of the give object param object the object to check return boolean <END>
<BEG> check the give object for equality return boolean if object be equal <END>
<BEG> retrieve the hashcode return int the computed hascode <END>
<BEG> returns a human readable representation of this simpletype object return string the string representation <END>
<BEG> get the tabulartype that this instance contain return tabulartype describe this tabulardata instance <END>
<BEG> return true if and only if this tabulardata instance contain a compositedata value i e <END>
<BEG> returns true if and only if this tabulardata instance contain a compositedata value ie a row whose index be the specified key <END>
<BEG> this method validate the key object [ ] parameter <END>
<BEG> method validate the key checking for null <SEG> zero length and if item in the key be invalid a return by see opentype isvalue object obj param key - the index of the value to get in this tabulardata instance ; must be valid with this tabulardata instance 's row type definition ; must not be null <END>
<BEG> add all the value contain in the specified map t to this tabulardata instance <END>
<BEG> returns a clone of this tabulardatasupport instance : the clone be obtain by call super clone <SEG> and then clone the underlying map <END>
<BEG> compares the specified obj parameter with this tabulardatasupport instance for equality return true if and only if all of the following statement be true : < ul > < li > < obj be instanceof tabulardata li > < li > their tabular type be equal < li > < li > < their content ie all compositedata value be equal li > < ul > <END>
<BEG> returns a query expression for the result of the not operation on the give expression <END>
<BEG> returns a query expression for the result of the and operation on the two give expression <END>
<BEG> returns a query expression for the result of < code > v1 < code > greater-than < code > v2 < code > <END>
<BEG> returns the expression value that represent the value of an attribute of an mbean of the specified class <END>
<BEG> returns the expression value that represent the class name of an mbean <END>
<BEG> returns the expression value that represent the give string <END>
<BEG> returns a query expression for the result of the wildcard match between the give attribute value and the string pattern <END>
<BEG> returns a query expression for the result of the match <SEG> a initial string <SEG> between the give attribute value and the string pattern <END>
<BEG> sets the mbeanserver use by the queryexp implementation to evaluate the expression <END>
<BEG> returns the nested reflection exception <END>
<BEG> returns the nested runtimeexception <END>
<BEG> returns the string represent by this instance <END>
<BEG> specify the time unit and interval for the trigger to be produce <END>
<BEG> specify an interval in the intervalunit second that the produce trigger will repeat at <END>
<BEG> if the trigger misfire <SEG> use the { link trigger # misfire_instruction_ignore_misfire_policy } instruction <END>
<BEG> the < code > timezone < code > in which to base the schedule <END>
<BEG> if interval be a day or great <SEG> this property set to true will cause the firing of the trigger to always occur at the same time of day <SEG> the time of day of the starttime regardless of daylight save time transition <END>
<BEG> if interval be a day or great <SEG> and preservehourofdayacrossdaylightsavings property be set to true <SEG> and the hour of the day do not exist on a give day for which the trigger would fire <SEG> the day will be skip and the trigger advance a second interval if this property be set to true <END>
<BEG> return composite data <END>
<BEG> param jobdetail return compositedata <END>
<BEG> < p > halts the < code > quartzscheduler < code > 's firing of < code > { link org quartz trigger } s < code > <SEG> and clean up all resource associate with the quartzscheduler <END>
<BEG> < p > get the instance id for the < code > { link quartzscheduler } < code > <END>
<BEG> < p > get the host name of the rmi registry that the scheduler should export itself to <END>
<BEG> < p > get the port number the scheduler server will be bind to <END>
<BEG> < p > set whether or not quartz should create an rmi registry <SEG> and if so <SEG> how <END>
<BEG> < p > get the < code > { link threadpool } < code > for the < code > { link quartzscheduler } < code > to use <END>
<BEG> < p > add the give < code > { link org quartz spi schedulerplugin } < code > for the < code > { link quartzscheduler } < code > to use <END>
<BEG> < p > get the < code > list < code > of all < code > { link org quartz spi schedulerplugin } < code > s for the < code > { link quartzscheduler } < code > to use <END>
<BEG> get whether to mark the quartz schedule thread a daemon <END>
<BEG> get whether to set the class load context of spawned thread to that of the initializing thread <END>
<BEG> get the name under which to bind the quartzscheduler in rmi <END>
<BEG> get whether the quartzscheduler should be register with the local mbeanserver <END>
<BEG> get the name under which the quartzscheduler should be register with the local mbeanserver <END>
<BEG> get the threadexecutor which run the quartzschedulerthread <END>
<BEG> create the name under which this scheduler should be register in jmx <END>
<BEG> set the trigger to fire on the give day of the week <END>
<BEG> set the trigger to fire on the day from monday through friday <END>
<BEG> set the trigger to fire on the day saturday and sunday <END>
<BEG> set the starttimeofday for this trigger to end fire each day at the give time <END>
<BEG> calculate and set the endtimeofday use count <SEG> interval and startimeofday <END>
<BEG> set number of time for interval to repeat <END>
<BEG> set the hour 0-23 for the date that will be build by this builder <END>
<BEG> set the day of month 1-31 for the date that will be build by this builder <END>
<BEG> set the year for the date that will be build by this builder <END>
<BEG> < p > get a < code > date < code > object that represent the give time <SEG> on today 's date equivalent to { link # dateof int <SEG> int <SEG> int } <END>
<BEG> < p > returns a date that be round to the next even hour after the current time <END>
<BEG> translate a date & time from a users time zone to the another probably server time zone to assist in create a simple trigger with the right date & time <END>
<BEG> initialize this remote mbean scheduler <SEG> get the jboss rmiadaptor for communication <END>
<BEG> < p > redefine a certain day to be exclude true or include false <END>
<BEG> < p > set a new base calendar or remove the exist one < p > <END>
<BEG> < p > get the base calendar <END>
<BEG> < p > check if date time represent by timestamp be include <END>
<BEG> < p > determine the next time in millisecond that be 'included ' by the calendar after the give time <END>
<BEG> returns the end of the give day < code > { link java util calendar } < code > <END>
<BEG> determines the next time include by the < code > croncalendar < code > after the specified time <END>
<BEG> returns a string represent the property of the < code > croncalendar < code > return the properteis of the croncalendar in a string format <END>
<BEG> returns the object representation of the cron expression that define the date and time this calendar exclude <END>
<BEG> sets the cron expression for the calendar to a new value param expression the new string value to build a cron expression from throw parseexception if the string expression can not be parse <END>
<BEG> sets the cron expression for the calendar to a new value param expression the new cron expression <END>
<BEG> indicates whether the time range represent an inverted time range see class description <END>
<BEG> < p > returns a < code > sortedset < code > of dates represent the excluded day <END>
<BEG> < p > get the array which define the exclude-value of each day of month <END>
<BEG> < p > check if all day be exclude <END>
<BEG> < p > determine whether the give time in millisecond be 'included ' by the calendar <END>
<BEG> < p > return true <SEG> if wday see calendar get be define to be exluded <END>
<BEG> < p > check if all week day be exclude <END>
<BEG> < p > returns a handle to the scheduler with the give name <SEG> if it exist <END>
<BEG> < p > get the name portion of the key <END>
<BEG> < p > replace the table prefix in a query by replace any occurrence of { 0 } with the table prefix <END>
<BEG> < p > obtain a unique key for a give job <END>
<BEG> cleanup helper method that close the give < code > resultset < code > while ignore any error <END>
<BEG> < p > returns the 'full name ' of the < code > jobdetail < code > in the format group name <END>
<BEG> non-javadoc see org quartz jobdetaili # getkey <END>
<BEG> < p > set the < code > jobdatamap < code > to be associate with the < code > job < code > <END>
<BEG> < p > set whether or not the < code > job < code > should remain stored after it be orphan no < code > { link trigger } s < code > point to it <END>
<BEG> < p > set whether or not the the < code > scheduler < code > should re-execute the < code > job < code > if a 'recovery ' or 'fail-over ' situation be encounter <END>
<BEG> < p > return a simple string representation of this object <END>
<BEG> create an andmatcher that depend upon the result of both of the give matcher <END>
<BEG> create an everythingmatcher that match all job <END>
<BEG> create a groupmatcher that match group equal the give string <END>
<BEG> create a groupmatcher that match job group equal the give string <END>
<BEG> create a groupmatcher that match job group start with the give string <END>
<BEG> create a keymatcher that match keys that equal the give key <END>
<BEG> create a namematcher that match name start with the give string <END>
<BEG> create a notmatcher that reverse the result of the give matcher <END>
<BEG> create an ormatcher that depend upon the result of at least one of the give matcher <END>
<BEG> whether the scheduler have be start <END>
<BEG> < p > initialize the factory <SEG> provide a handle to the < code > scheduler < code > that should be make available within the < code > jobrunshell < code > and the < code > jobexecutioncontext < code > s within it <END>
<BEG> < p > initialize the < code > { link org quartz schedulerfactory } < code > with the content of a < code > properties < code > file and override system property <END>
<BEG> < p > initialize the < code > { link org quartz schedulerfactory } < code > with the content of the give < code > properties < code > object <END>
<BEG> < p > get the name of the associated < code > { link org quartz jobdetail } < code > <END>
<BEG> < p > get the name of the associated < code > { link org quartz jobdetail } < code > 's group <END>
<BEG> < p > returns the 'full name ' of the < code > job < code > that the < code > trigger < code > point to <SEG> in the format group name <END>
<BEG> < p > associate the < code > { link calendar } < code > with the give name with this trigger <END>
<BEG> < p > get the name of the < code > { link calendar } < code > associate with this trigger <END>
<BEG> the priority of a < code > trigger < code > act a a tiebreaker such that if two < code > trigger < code > s have the same scheduled fire time <SEG> then the one with the high priority will get first access to a worker thread <END>
<BEG> the priority of a < code > trigger < code > act a a tie breaker such that if two < code > trigger < code > s have the same scheduled fire time <SEG> then quartz will do it best to give the one with the high priority first access to a worker thread <END>
<BEG> < p > set the instruction the < code > scheduler < code > should be give for handle misfire situation for this < code > trigger < code > - the concrete < code > trigger < code > type that you be use will have define a set of additional < code > misfire_instruction_xxx < code > constant that may be pass to this method <END>
<BEG> < p > validates whether the property of the < code > jobdetail < code > be valid for submission into a < code > scheduler < code > <END>
<BEG> < p > this method should not be use by the quartz client <END>
<BEG> < p > compare the next fire time of this < code > trigger < code > to that of another by compare their key <SEG> or in other word <SEG> sort them accord to the natural i e <END>
<BEG> trigger equality be base upon the equality of the triggerkey <END>
<BEG> create a jobbuilder with which to define a < code > jobdetail < code > <END>
<BEG> produce the < code > jobdetail < code > instance define by this < code > jobbuilder < code > <END>
<BEG> use a < code > jobkey < code > with the give name and default group to identify the jobdetail <END>
<BEG> use a < code > jobkey < code > with the give name and group to identify the jobdetail <END>
<BEG> use a < code > jobkey < code > to identify the jobdetail <END>
<BEG> set the give human-meaningful description of the job <END>
<BEG> set the class which will be instantiate and execute when a trigger fire that be associate with this jobdetail <END>
<BEG> instructs the < code > scheduler < code > whether or not the < code > job < code > should be re-executed if a 'recovery ' or 'fail-over ' situation be encounter <END>
<BEG> whether or not the < code > job < code > should remain stored after it be orphan no < code > { link trigger } s < code > point to it <END>
<BEG> add the give key-value pair to the jobdetail 's { link jobdatamap } <END>
<BEG> add all the data from the give { link jobdatamap } to the { code jobdetail } 's { code jobdatamap } <END>
<BEG> replace the { code jobdetail } 's { link jobdatamap } with the give { code jobdatamap } <END>
<BEG> < p > retrieve the identified < code > int < code > value from the < code > jobdatamap < code > <END>
<BEG> < p > return the exception that be the underlie cause of this exception <END>
<BEG> < p > returns the < code > date < code > at which the scheduler start run <END>
<BEG> < p > returns the number of job execute since the < code > scheduler < code > start < p > <END>
<BEG> < p > returns whether the < code > scheduler < code > be be use remotely via rmi <END>
<BEG> < p > returns whether the scheduler have be start <END>
<BEG> reports whether the < code > scheduler < code > be in standby mode <END>
<BEG> < p > returns the class-name of the < code > jobstore < code > instance that be be use by the < code > scheduler < code > <END>
<BEG> < p > returns whether or not the < code > scheduler < code > 's < code > jobstore < code > be cluster <END>
<BEG> < p > returns the number of thread currently in the < code > scheduler < code > 's < code > threadpool < code > <END>
<BEG> < p > returns a formatted human readable string describe all the < code > scheduler < code > 's meta-data value <END>
<BEG> called to give the classloadhelper a chance to initialize itself <SEG> include the opportunity to steal the class loader off of the call thread <SEG> which be the thread that be initialize quartz <END>
<BEG> finds a resource with a give name <END>
<BEG> enable sharing of the best class-loader with 3rd party <END>
<BEG> enable sharing of the class-loader with 3rd party <END>
<BEG> returns the cluster wide value for this scheduler instance 's id <SEG> base on a system property return the value of the system property name by the value of { link # getsystempropertyname } - which default to { link # system_property } <END>
<BEG> a string of text to prepend add to the beginning to the instanceid find in the system property <END>
<BEG> create a simpleschedulebuilder set to repeat forever with a 1 minute interval <END>
<BEG> create a simpleschedulebuilder set to repeat the give number of time - 1 with a 1 minute interval <END>
<BEG> create a simpleschedulebuilder set to repeat the give number of time - 1 with an interval of the give number of minute <END>
<BEG> specify a repeat interval in millisecond <END>
<BEG> specify a repeat interval in minute - which will then be multiply by 60 1000 to produce millisecond <END>
<BEG> specify a repeat interval in minute - which will then be multiply by 60 60 1000 to produce millisecond <END>
<BEG> specify a the number of time the trigger will repeat - total number of firing will be this number + 1 <END>
<BEG> specify that the trigger will repeat indefinitely <END>
<BEG> the hour of the day between 0 and 23 <END>
<BEG> return a date with time of day reset to this object value <END>
<BEG> create a timeofday from the give date at the zero-second <SEG> in the system default timezone <END>
<BEG> create a new triggerbuilder with which to define a specification for a trigger <END>
<BEG> set the name of the { link calendar } that should be apply to this trigger 's schedule <END>
<BEG> set the time the trigger should start at - the trigger may or may not fire at this time - depend upon the schedule configure for the trigger <END>
<BEG> set the time the trigger should start at to the current moment - the trigger may or may not fire at this time - depend upon the schedule configure for the trigger <END>
<BEG> set the time at which the trigger will no longer fire - even if it 's schedule have remain repeat <END>
<BEG> set the identity of the job which should be fire by the produce trigger - a < code > jobkey < code > will be produce with the give name and default group <END>
<BEG> set the identity of the job which should be fire by the produced trigger <SEG> by extract the jobkey from the give job <END>
<BEG> set the trigger 's { link jobdatamap } <SEG> add any value to it that be already set on this triggerbuilder use any of the other 'usingjobdata ' method <END>
<BEG> get a database connection from the datasource with the give name <END>
<BEG> shuts down database connection from the datasource with the give name <SEG> if applicable for the underlying provider <END>
<BEG> < p > clear the 'dirty ' flag set dirty flag to < code > false < code > <END>
<BEG> < p > get a direct handle to the underlie map <END>
<BEG> get all property that start with the give prefix <END>
<BEG> get a copy of the map 's string key in an array of strings <END>
<BEG> tell the < code > stringkeydirtyflagmap < code > that it should allow non- < code > serializable < code > value <END>
<BEG> determine whether any value in this map do not implement < code > serializable < code > <END>
<BEG> removes any data value in the map that be non-serializable <END>
<BEG> returns collection of error <END>
<BEG> returns the input if it be a json-permissible value ; throw otherwise <END>
<BEG> sets the value at { code index } to { code value } <SEG> null pad this array to the required length if necessary <END>
<BEG> removes and return the value at { code index } <SEG> or null if the array have no value at { code index } <END>
<BEG> returns the value at { code index } if it exist and be a boolean or can be coerce to a boolean <END>
<BEG> returns the value at { code index } if it exist <SEG> coerce it if necessary <END>
<BEG> returns the value at { code index } if it exist and be a { code jsonarray } <END>
<BEG> returns a new object whose value be the value in this array <SEG> and whose name be the value in { code name } <END>
<BEG> returns a new string by alternate this array 's value with { code separator } <END>
<BEG> encodes this array a a compact json string <SEG> such a : < pre > [ 94043<SEG>90210 ] < pre > <END>
<BEG> encodes this array a a human readable json string for debug <SEG> such a : < pre > [ 94043 <SEG> 90210 ] < pre > param indentspaces the number of space to indent for each level of nest <END>
<BEG> maps { code name } to { code value } <SEG> clobber any exist name value map with the same name <END>
<BEG> equivalent to { code put name <SEG> value } when both parameter be non-null ; do nothing otherwise <END>
<BEG> appends { code value } to the array already map to { code name } <END>
<BEG> returns true if this object have a mapping for { code name } <END>
<BEG> returns the value map by { code name } if it exist and be a boolean or can be coerce to a boolean <END>
<BEG> returns the value map by { code name } if it exist <SEG> coerce it if necessary <END>
<BEG> returns the value map by { code name } if it exist and be a { code jsonarray } <END>
<BEG> returns an array with the value correspond to { code name } <END>
<BEG> returns an array contain the string names in this object <END>
<BEG> encodes the number a a json string <END>
<BEG> encodes { code data } a a json string <END>
<BEG> begins encode a new array <END>
<BEG> ends encode the current array <END>
<BEG> encodes { code value } to this stringer <END>
<BEG> encodes the key property name to this stringer <END>
<BEG> puts a reference to this label in the bytecode of a method <END>
<BEG> resolves all forward reference to this label <END>
<BEG> since 1 2 23 <END>
<BEG> extract keyset or field name from rootobject on this jsonpath <END>
<BEG> compile jsonpath and use it to extract keyset or field name from rootobject <END>
<BEG> since 1 2 9 param json param path return <END>
<BEG> the value of a literal token <SEG> record a a string <END>
<BEG> adds the specified symbol to the symbol table and return a reference to the unique symbol <END>
<BEG> get field name of not null field <END>
<BEG> add class level serialize filter since 1 2 10 <END>
<BEG> class level serializer feature config since 1 2 12 <END>
<BEG> write a portion of a string to the buffer <END>
<BEG> writes the content of the buffer to another character stream <END>
<BEG> is write content length boolean <END>
<BEG> sets write content length <END>
<BEG> gets parse process <END>
<BEG> modify the pojo to serialize <END>
<BEG> return the configured jsonp function name <END>
<BEG> decodes a base64 encode char array that be know to be resonably well format <END>
<BEG> decodes a base64 encode string that be know to be resonably well format <END>
<BEG> author mikael grev date : 2004-aug-02 time : 11:31:11 <END>
<BEG> this method exist to help remove any property that be only private member <END>
<BEG> this method add a default format for all dateobjectfactory <END>
<BEG> add a new dateformat to the know format this instance will recognise <END>
<BEG> this be a method be use by flexjson deserialization process to instantiate and bind all data into a date instance <END>
<BEG> this class exist because it possible we do n't have any type information to guide u to what object we should instantiate when deal with type-less collection <END>
<BEG> run a transformer on the provide object param object return <END>
<BEG> use to pass in configured transformer from the jsonserializer param typetransformermap <END>
<BEG> configure the context to output json with new line and indentation param prettyprint <END>
<BEG> set the output handler <END>
<BEG> write a quote and escape value to the output param value <END>
<BEG> static moethod to clean up thread when serialization be complete <END>
<BEG> deserialize the give json format input into a java object <END>
<BEG> same a { link # deserialize string } <SEG> but use an instance of java io reader a json input <END>
<BEG> deserialize the give json input <SEG> and use the give class a the type of the initial object to deserialize into <END>
<BEG> same a { link # deserialize string <SEG> class } <SEG> but use an instance of java io reader a json input <END>
<BEG> same a { link # deserialize string <SEG> class } but it start bind into the instance of the give class at the give path <END>
<BEG> same a { link # deserialize java io reader <SEG> class } but it start bind into the instance of the give class at the give path <END>
<BEG> deserialize the give json input <SEG> and use the give objectfactory to create the initial object to deserialize into <END>
<BEG> deserialize the give input into the exist object target <END>
<BEG> same a { link # deserializeinto string <SEG> string <SEG> object } <SEG> but use an instance of java io reader a json input <END>
<BEG> format output with indentation param prettyprint - should out put cleanfly format json return jsonserializer for chain configuration <END>
<BEG> this wrap the result json in a javascript object that contain a single field name rootname <END>
<BEG> this perform a deep serialization of the target instance <END>
<BEG> this perform a deep serialization of the target instance and pass the generated json into the provided writer <END>
<BEG> param target - the instance to serialize to json param serializationtype - serialize deep or shallow param out - output handler return return json a a string <END>
<BEG> this add a transformer use to manipulate the value of all the field you give it <END>
<BEG> this take in a dot expression represent field to exclude when serialize method be call <END>
<BEG> return the field include in serialization <END>
<BEG> this be the default tranformer for handle null <END>
<BEG> < p > for example <SEG> assume the following class definition : < pre class= code > public class foo { private string bar ; private list & lt ; string & gt ; red ; } type listparameterizedtype = new typetoken & lt ; list & lt ; string & gt ; & gt ; { } gettype ; < pre > < p > this method would return { code string class } for the { code bar } field and { code listparameterizedtype } for the { code red } field <END>
<BEG> converts the field name that use camel-case define word separation into separate word that be separate by the provide { code separatorstring } <END>
<BEG> ensures the json field name begin with an upper case letter <END>
<BEG> this method serialize the specified object into it equivalent representation a a tree of { link jsonelement } s this method should be use when the specify object be not a generic type <END>
<BEG> this method serialize the specified object into it equivalent json representation <END>
<BEG> this method serialize the specified object <SEG> include those of generic type <SEG> into it equivalent json representation <END>
<BEG> writes the json representation of { code src } of type { code typeofsrc } to { code writer } <END>
<BEG> converts a tree of { link jsonelement } s into it equivalent json representation <END>
<BEG> writes out the equivalent json for a tree of { link jsonelement } s param jsonelement root of a tree of { link jsonelement } s param writer writer to which the json representation need to be write throw jsonioexception if there be a problem writing to the writer since 1 4 <END>
<BEG> returns a new json writer configure for the setting on this gson instance <END>
<BEG> writes the json for { code jsonelement } to { code writer } <END>
<BEG> this method deserializes the specified json into an object of the specify type <END>
<BEG> this method deserializes the json read from the specify reader into an object of the specified class <END>
<BEG> reads the next json value from { code reader } and convert it to an object of type { code typeoft } <END>
<BEG> configures gson to enable versioning support <END>
<BEG> makes the output json non-executable in javascript by prefix the generate json with some special text <END>
<BEG> configure gson to serialize null field <END>
<BEG> enabling this feature will only change the serialized form if the map key be a complex type i e <END>
<BEG> configures gson to apply a specific naming policy strategy to an object 's field during serialization and deserialization <END>
<BEG> configures gson to apply a set of exclusion strategy during both serialization and deserialization <END>
<BEG> configures gson to apply the pass in exclusion strategy during serialization <END>
<BEG> configures gson to output json that fit in a page for pretty printing <END>
<BEG> by default <SEG> gson be strict and only accepts json a specify by < a href= http : www ietf org rfc rfc4627 txt > rfc 4627 < a > <END>
<BEG> by default <SEG> gson escape html character such a & lt ; & gt ; etc <END>
<BEG> configures gson for custom serialization or deserialization <END>
<BEG> register a factory for type adapter <END>
<BEG> configures gson for custom serialization or deserialization for an inheritance type hierarchy <END>
<BEG> section 2 4 of < a href= http : www ietf org rfc rfc4627 txt > json specification < a > disallow special double value nan <SEG> infinity <SEG> -infinity <END>
<BEG> returns the top level object produce by this writer <END>
<BEG> returns a new factory that will match each type against { code exacttype } <END>
<BEG> return the major java version <SEG> i e <END>
<BEG> returns the node at or adjacent to the give key <SEG> create it if request <END>
<BEG> removes { code node } from this tree <SEG> rearrange the tree 's structure a necessary <END>
<BEG> returns a new array contain the same node a { code oldtable } <SEG> but with twice a many tree <SEG> each of approximately half the previous size <END>
<BEG> returns the same dateformat a { code dateformat getdateinstance style <SEG> locale us } in java 8 or below <END>
<BEG> returns the same dateformat a { code dateformat getdatetimeinstance datestyle <SEG> timestyle <SEG> locale us } in java 8 or below <END>
<BEG> check if the class can be instantiate by unsafe allocator <END>
<BEG> creates a deep copy of this element and all it child since 2 8 2 <END>
<BEG> adds the specified element to self <END>
<BEG> convenience method to get this array a a { link number } if it contain a single element <END>
<BEG> convenience method to get this array a a double if it contain a single element <END>
<BEG> provide check for verify if this element be an array or not <END>
<BEG> provide check for verify if this element be a json object or not <END>
<BEG> convenience method to get this element a a { link jsonobject } <END>
<BEG> convenience method to get this element a a boolean value <END>
<BEG> convenience method to get this element a a primitive double value <END>
<BEG> convenience method to get the first character of this element a a string or the first character of this array 's first element a a string <END>
<BEG> adds a member <SEG> which be a name-value pair <SEG> to self <END>
<BEG> convenience method to check if a member with the specify name be present in this object <END>
<BEG> convenience method to get the specified member a a jsonprimitive element <END>
<BEG> convenience method to get the specified member a a jsonarray <END>
<BEG> parses the specified json string into a parse tree param json json text return a parse tree of { link jsonelement } s correspond to the specify json throw jsonparseexception if the specify text be not valid json <END>
<BEG> returns the next value from the json stream a a parse tree <END>
<BEG> deprecate use { link jsonparser # parsestring } <END>
<BEG> returns the same value a primitive be immutable <END>
<BEG> check whether this primitive contain a boolean value <END>
<BEG> convenience method to get this element a a number <END>
<BEG> returns the next available { link jsonelement } on the reader <END>
<BEG> this optional { link iterator } method be not relevant for stream parsing and hence be not implement <END>
<BEG> returns the type from super class 's type parameter in { link $ gson $ types # canonicalize canonical form } <END>
<BEG> check if this type be assignable from the give type <END>
<BEG> gets type literal for the parameterized type represent by apply { code typearguments } to { code rawtype } <END>
<BEG> gets type literal for the array type whose element be all instance of { code componenttype } <END>
<BEG> configure this writer to relax it syntax rule <END>
<BEG> returns true if this writer have relax syntax rule <END>
<BEG> configure this writer to emit json that 's safe for direct inclusion in html and xml document <END>
<BEG> returns true if this writer write json that 's safe for inclusion in html and xml document <END>
<BEG> sets whether object member be serialize when their value be null <END>
<BEG> writes { code value } directly to the writer without quote or escape <END>
<BEG> ensures all buffer data be write to the underlie { link writer } and flush that writer <END>
<BEG> return description to use a valid token in an exception message about invalid unrecognized json token : call when parser find something that look like unquoted textual token since 2 10 <END>
<BEG> return description to use a valid json value in an exception message about invalid unrecognized json value : call when parser find something that do not look like a value or separator <END>
<BEG> accessor for get information about target type in form of java { link java lang class } for which coercion fail <END>
<BEG> alternative to { link # get7bitoutputescapes } when a non-standard quote character be use <END>
<BEG> accessor for access value that have be quote escaped use json quote rule use backslash-prefixed code into a char array <END>
<BEG> accessor for access value a be without json quote ecaping encode a utf-8 byte array <END>
<BEG> main factory method to use for construct { link jsonfactory } instance with different configuration : creates and return a builder for collect configuration setting ; instance create by call { code build } after all configuration set <END>
<BEG> method for enable or disable specify parser feature check { link jsonparser feature } for list of feature deprecate since 2 10 use { link jsonfactorybuilder # configure jsonfactory feature <SEG> boolean } instead <END>
<BEG> method for enable specify parser feature check { link jsonfactory feature } for list of feature deprecate since 2 10 use { link jsonfactorybuilder # configure jsonfactory feature <SEG> boolean } instead <END>
<BEG> method that allow override string use for separate root-level json value default be single space character param sep separator to use <SEG> if any ; null mean that no separator be automatically added <END>
<BEG> method that allow specify threshold beyond which all character be automatically escape without check possible custom escape setting a la { link # characterescapes } : for example <SEG> to force escaping of all non-ascii character set to 127 <SEG> or all non-latin-1 character set to 255 <END>
<BEG> internal factory method <SEG> other <END>
<BEG> factory method for construct an instance with no allocator <SEG> and with initial full segment <END>
<BEG> method that may be call for optimization purpose <SEG> to see if call to mix-in resolver may be avoid <END>
<BEG> calculate local name of an appropriate xml element <SEG> pretty much the same way a it be do by jaxb 2 1 impl for situation when we want to pretend the element be present in an incoming stream amd all we have be the type information todo : work out with jaxb guy a good way of do it <SEG> probably we could take it from an exist jaxbcontext ? <END>
<BEG> returns the text of this event if this event be of { code xmlstreamconstants characters } type <END>
<BEG> ! ! ! <END>
<BEG> deprecate since 1 2 because of misspelling <END>
<BEG> append a key <END>
<BEG> begin append a new object <END>
<BEG> append either the value < code > true < code > or the value < code > false < code > <END>
<BEG> append an object value <END>
<BEG> non-javadoc see javax xml namespace namespacecontext # getnamespaceuri java lang string <END>
<BEG> for client who want to modify the output object before write to override <END>
<BEG> simple converter that treat everything a string author < a href= mailto : dejan nighttale net > dejan bosanac < a > since 1 1 <END>
<BEG> transforms ~1 to and then ~0 to ~ <SEG> <END>
<BEG> return either the threadcontextclassloader or the cl of this very class if no tccl exists <END>
<BEG> param classname to be load param ignorebrokenclasses if { link noclassdeffounderror } should be ignore return class or { code null } if the class could not be find <END>
<BEG> produce a jsonarray of string from a row of comma delimit value <END>
<BEG> produce a jsonobject from a row of comma delimit text <SEG> use a parallel jsonarray of string to provide the name of the element <END>
<BEG> produce a comma delimit text row from a jsonarray <END>
<BEG> produce a jsonarray of jsonobjects from a comma delimit text string use a supplied jsonarray a the source of element name <END>
<BEG> produce a comma delimit text from a jsonarray of jsonobjects <END>
<BEG> produce a comma delimit text from a jsonarray of jsonobjects use a provided list of name <END>
<BEG> convert a cookie specification string into a jsonobject <END>
<BEG> convert a jsonobject into a cookie specification string <END>
<BEG> convert < code > % < code > < i > hh < i > sequence to single character <SEG> and convert plus to space <END>
<BEG> convert a cookie list into a jsonobject <END>
<BEG> convert a jsonobject into a cookie list <END>
<BEG> convert a jsonobject into an http header <END>
<BEG> convert a well-formed but not necessarily valid xml string into a jsonarray use the jsonml transform <END>
<BEG> reverse the jsonml transformation <SEG> make an xml text from a jsonobject <END>
<BEG> static factory method for { link builder } <END>
<BEG> evaluates this json pointer on the give { code document } <END>
<BEG> returns a string represent the jsonpointer path value use string representation <END>
<BEG> returns a string represent the jsonpointer path value use uri fragment identifier representation <END>
<BEG> converts the jsonobject into a property file object <END>
<BEG> author andres almiray < aalmiray user sourceforge net > <END>
<BEG> verifies if value be a valid json value <END>
<BEG> set default configuration param default default configuration setting <END>
<BEG> creates a new configuration by the provided evaluation listener to the current listener param evaluationlistener listener return a new configuration <END>
<BEG> creates a new configuration with the provided evaluation listener param evaluationlistener listener return a new configuration <END>
<BEG> returns the evaluation listener register in this configuration return the evaluation listener <END>
<BEG> creates a new configuration by add the new option to the option use in this configuration <END>
<BEG> check if this configuration contain the give option param option option to check return true if configuration contain option <END>
<BEG> creates a new configuration base on default value return a new configuration base on default <END>
<BEG> returns a new configurationbuilder return a builder <END>
<BEG> parse the provided criterion deprecated use { link filter # parse string } param criterion return a criterion <END>
<BEG> evaluate the json document at the point of need use the json parameter and associate document model which may itself originate from yet another function thus recursively invoke late binding method <END>
<BEG> evaluate the expression at the point of need for path type expression return <END>
<BEG> returns the function by name or throw invalidpathexception if function not find <END>
<BEG> return the actual value by indicate true <END>
<BEG> return the problematic json if available <END>
<BEG> returns the string representation of this jsonpath return path a string <END>
<BEG> applies this jsonpath to the provide json document <END>
<BEG> set the value this path point to in the provided jsonobject param jsonobject a json object param configuration configuration to use param < t > expect return type return the updated jsonobject or the path list to updated object if option as_path_list be set <END>
<BEG> adds a new value to the array this path point to in the provided jsonobject param jsonobject a json object param value the value to add param configuration configuration to use param < t > expect return type return the updated jsonobject or the path list to update object if option as_path_list be set <END>
<BEG> applies this jsonpath to the provide json string param json a json string param configuration configuration to use param < t > expect return type return list of object match by the give path <END>
<BEG> applies this jsonpath to the provided json file param jsonfile file to read from param configuration configuration to use param < t > expect return type return list of object match by the give path throw ioexception <END>
<BEG> applies this jsonpath to the provide json input stream param jsoninputstream input stream to read from param configuration configuration to use param < t > expect return type return list of object match by the give path throw ioexception <END>
<BEG> compiles a jsonpath param jsonpath to compile param filter filter to be apply to the filter place holder [ ? ] <END>
<BEG> creates a { link parsecontext } that can be use to parse json input <END>
<BEG> creates a { link parsecontext } that will parse a give json input <END>
<BEG> check if object be an array param obj object to check return true if obj be an array <END>
<BEG> extracts a value from an map param obj a map param key property key return the map entry or { link com jayway jsonpath spi json jsonprovider # undefined } for miss property <END>
<BEG> sets a value in an object param obj an object param key a string key param value the value to set <END>
<BEG> removes a value in an object or array param obj an array or an object param key a string key or a numerical index to remove <END>
<BEG> returns the key from the give object param obj an object return the key for an object <END>
<BEG> get the length of an array or object param obj an array or an object return the number of entry in the array or object <END>
<BEG> the only reason we define this method and require implementation of < code > comparable < code > be to prevent construct a reference without type information <END>
<BEG> encode a list into json text and write it to out <END>
<BEG> convert a list to json text <END>
<BEG> appends the specified element and return this <END>
<BEG> override natif tostirng <END>
<BEG> jsonawareex inferface param compression compression param <END>
<BEG> return to root node <END>
<BEG> add value to the current array param value to add return this <END>
<BEG> get the current object value a string if the current object be null return null <END>
<BEG> get the current value a double if the current object be null return double nan <END>
<BEG> get the current value a int if the current object be null return 0 <END>
<BEG> get the current value a boolean if the current object be null or be not a boolean return false <END>
<BEG> set current value a json object you can also skip this call <SEG> objects can be create automatically <END>
<BEG> set current value a number <END>
<BEG> access to the index position <END>
<BEG> access to last + 1 the index position <END>
<BEG> call up level time <END>
<BEG> move one level up in json tree <END>
<BEG> return the object a a json string param compression <END>
<BEG> write a key : value entry to a stream <END>
<BEG> a simple helper object to string return a value tostring or null <END>
<BEG> a simple helper cast an object to an number return a number or null <END>
<BEG> serialize object a json to an stream <END>
<BEG> begin object <END>
<BEG> end of object element <END>
<BEG> end of key in json object <END>
<BEG> end of an array element <END>
<BEG> parse input json a a mapto class mapto can be a bean since 2 0 <END>
<BEG> parse input json a a mapto class since 2 0 <END>
<BEG> reformat json input keep element order since 1 0 6 2 need to be rewrite in 2 0 <END>
<BEG> compress json input keep element order since 1 0 6 1 <END>
<BEG> parse valid rfc4627 json text into java object from the input source <END>
<BEG> check rfc4627 json syntax from input reader return if the input be valid <END>
<BEG> escape quote <SEG> \ <SEG> <SEG> \r <SEG> \n <SEG> \b <SEG> \f <SEG> \t and other control character u+0000 through u+001f <END>
<BEG> same a read in memory parsing <END>
<BEG> use to return primitive type <SEG> or string <SEG> or jsonobject or jsonarray generate by a containerfactory throw unsupportedencodingexception <END>
<BEG> use to return primitive type <SEG> or string <SEG> or jsonobject or jsonarray generate by a containerfactory <END>
<BEG> read next char or end of input <END>
<BEG> try to find a writer by cheking implemented interface param clazz class to serialize return a writer or null <END>
<BEG> associate an writer to a interface with low priority param interface interface to map param writer writer object <END>
<BEG> an alias for registerwriterinterfacelast param interface interface to map param writer writer object <END>
<BEG> associate an writer to a class param writer param cl <END>
<BEG> call when json-smart parser start an array <END>
<BEG> call when json-smart do parse a value <END>
<BEG> call when json-smart parser meet an object key <END>
<BEG> encodes a object into a json string <END>
<BEG> escapes a object into javascript format <END>
<BEG> decodes a json string into a object <END>
<BEG> sets context for inner class <END>
<BEG> sets locale for formatting <SEG> convert and selecting message <END>
<BEG> sets timezone for formatting and convert <END>
<BEG> output json string be to human-readable format <END>
<BEG> sets maximum depth for the nest depth <END>
<BEG> if this property be true <SEG> the null value 's item of bean or dynabean be ignore <END>
<BEG> sets json interpreter mode <END>
<BEG> sets default date format <END>
<BEG> sets default case style for the property name of json object <END>
<BEG> converts any java object to json recognizable java object before format <END>
<BEG> converts map <SEG> list <SEG> number <SEG> string <SEG> boolean or null to other java objects after parse <END>
<BEG> ignore this property <END>
<BEG> returns the line number where the error be find <END>
<BEG> returns the offset in line where the error be find <END>
<BEG> the typereference be use to embed a generic type <END>
<BEG> make the array map empty <END>
<BEG> ensure the array map can hold at least < var > minimumcapacity < var > item <END>
<BEG> returns the index of a key in the set <END>
<BEG> return the key at the give index in the array <END>
<BEG> return true if the array map contain no item <END>
<BEG> perform a { link # put object <SEG> object } of all key value pair in < var > array < var > param array the array whose content be to be retrieve <END>
<BEG> remove the key value mapping at the give index <END>
<BEG>  < p > this implementation compose a string by iterate over it mapping <END>
<BEG> creates a new jsonarray that contain the json representation of the give string <END>
<BEG> reads the entire input from the give reader and parse it a json <END>
<BEG> returns an unmodifiable wrapper for the specified jsonarray <END>
<BEG> appends the specified json value to the end of this array <END>
<BEG> replaces the element at the specified position in this array with the specify json value <END>
<BEG> indicates the beginning of a < code > null < code > literal in the json input <END>
<BEG> indicates the beginning of a boolean literal < code > true < code > or < code > false < code > in the json input <END>
<BEG> indicates the beginning of an array element in the json input <END>
<BEG> indicates the beginning of the name of an object member in the json input <END>
<BEG> indicates the end of an object member name in the json input <END>
<BEG> appends a new member to the end of this object <SEG> with the specify name and the specify json value <END>
<BEG> sets the value of the member with the specify name to the specify json value <END>
<BEG> removes a member with the specify name from this object <END>
<BEG> copies all member of the specified object into this object <END>
<BEG> returns the value of the member with the specify name in this object <END>
<BEG> returns the < code > int < code > value of the member with the specify name in this object <END>
<BEG> detects whether this value represent the json literal < code > true < code > <END>
<BEG> returns this json value a { link jsonobject } <SEG> assume that this value represent a json object <END>
<BEG> returns this json value a string <SEG> assume that this value represent a json string <END>
<BEG> returns this json value a a < code > boolean < code > value <SEG> assume that this value be either < code > true < code > or < code > false < code > <END>
<BEG> writes the json representation of this value to the give writer use the give formatting <END>
<BEG> returns the json string for this value use the give formatting <END>
<BEG> returns the absolute character index at which the error occur <END>
<BEG> returns the line number in which the error occur <END>
<BEG> print every value on a separate line <END>
<BEG> do not break line <SEG> but still insert whitespace between value <END>
<BEG> flushes the internal buffer but do not flush the wrapped writer <END>
<BEG> creates a new algorithm instance use sha256withrsa <END>
<BEG> getter for the id of the private key use to sign the token <END>
<BEG> splits the give token on the <END>
<BEG> asserts that payload be not null and call { link # docompress byte [ ] docompress } param payload bytes to compress return compress byte throw compressionexception if { link # docompress byte [ ] docompress } throw an ioexception <END>
<BEG> asserts the compressed byte be not null and call { link # dodecompress byte [ ] dodecompress } param compress compressed byte return decompress byte throw compressionexception if { link # dodecompress byte [ ] dodecompress } throw an ioexception <END>
<BEG> simply return < code > new { link date } < code > <END>
<BEG> assert a boolean expression <SEG> throw < code > illegalargumentexception < code > if the test result be < code > false < code > <END>
<BEG> assert that an object be < code > null < code > <END>
<BEG> assert that an object be not < code > null < code > <END>
<BEG> assert that the give string be not empty ; that be <SEG> it must not be < code > null < code > and not the empty string <END>
<BEG> assert that the give string have valid text content ; that be <SEG> it must not be < code > null < code > and must contain at least one non-whitespace character <END>
<BEG> assert that an array have no null element <END>
<BEG> attempts to load the specified class name from the current thread 's { link thread # getcontextclassloader context class loader } <SEG> then the current classloader < code > classes class getclassloader < code > <SEG> then the system application classloader < code > classloader getsystemclassloader < code > <SEG> in that order <END>
<BEG> returns the specify resource by check the current thread 's { link thread # getcontextclassloader context class loader } <SEG> then the current classloader < code > classes class getclassloader < code > <SEG> then the system application classloader < code > classloader getsystemclassloader < code > <SEG> in that order <SEG> use { link classloader # getresourceasstream string getresourceasstream name } <END>
<BEG> convert the supplied array into a list <END>
<BEG> merge the give properties instance into the give map <SEG> copy all property key-value pair over <END>
<BEG> check whether the give iterator contain the give element <END>
<BEG> check whether the give collection contain the give element instance <END>
<BEG> return < code > true < code > if any element in ' < code > candidate < code > ' be contain in ' < code > source < code > ' ; otherwise return < code > false < code > <END>
<BEG> return the first element in ' < code > candidate < code > ' that be contain in ' < code > source < code > ' <END>
<BEG> find a single value of the give type in the give collection <END>
<BEG> find a single value of one of the give type in the give collection : search the collection for a value of the first type <SEG> then search for a value of the second type <SEG> etc <END>
<BEG> determine whether the give collection only contain a single unique object <END>
<BEG> find the common element type of the give collection <SEG> if any <END>
<BEG> marshal the element from the give enumeration into an array of the give type <END>
<BEG> adapt an enumeration to an iterator <END>
<BEG> return whether the give throwable be a checked exception : that be <SEG> neither a runtimeexception nor an error <END>
<BEG> check whether the give exception be compatible with the exception declare in a throw clause <END>
<BEG> returns { code true } if the specify byte array be null or of zero length <SEG> { code false } otherwise <END>
<BEG> check whether the give array of enum constant contain a constant with the give name <END>
<BEG> case insensitive alternative to { link enum # valueof class <SEG> string } <END>
<BEG> append the give object to the give array <SEG> return a new array consisting of the input array content plus the give object <END>
<BEG> convert the give array which may be a primitive array to an object array if necessary of primitive wrapper object <END>
<BEG> determine if the give object be equal <SEG> return < code > true < code > if both be < code > null < code > or < code > false < code > if only one be < code > null < code > <END>
<BEG> return a hash code for the give object ; typically the value of < code > { link object # hashcode } < code > <END>
<BEG> return a hash code base on the content of the specified array <END>
<BEG> return the same value a < code > { link boolean # hashcode } < code > <END>
<BEG> return a string representation of an object 's overall identity <END>
<BEG> return a hex string form of an object 's identity hash code <END>
<BEG> return a content-based string representation if < code > obj < code > be not < code > null < code > ; otherwise return an empty string <END>
<BEG> return a string representation of the content of the specified array <END>
<BEG> check that the give charsequence be neither < code > null < code > nor of length 0 <END>
<BEG> check whether the give charsequence have actual text <END>
<BEG> trim lead whitespace from the give string <END>
<BEG> trim all occurences of the supplied leading character from the give string <END>
<BEG> test if the give string start with the specified prefix <SEG> ignore upper low case <END>
<BEG> test whether the give string match the give substring at the give index <END>
<BEG> count the occurrence of the substring in string s param str string to search in <END>
<BEG> replace all occurences of a substring within a string with another string <END>
<BEG> delete all occurrence of the give substring <END>
<BEG> delete any character in a give string <END>
<BEG> quote the give string with single quote <END>
<BEG> unqualify a string qualify by a separator character <END>
<BEG> capitalize a < code > string < code > <SEG> change the first letter to upper case a per { link character # touppercase char } <END>
<BEG> extract the filename extension from the give path <SEG> e g <END>
<BEG> apply the give relative path to the give path <SEG> assume standard java folder separation i e <END>
<BEG> normalize the path by suppress sequence like path and inner simple dot <END>
<BEG> compare two path after normalization of them <END>
<BEG> parse the give < code > localestring < code > value into a { link java util locale } <END>
<BEG> determine the rfc 3066 compliant language tag <SEG> a use for the http accept-language header <END>
<BEG> append the give string to the give string array <SEG> return a new array consisting of the input array content plus the give string <END>
<BEG> concatenate the give string array into one <SEG> with overlap array element include twice <END>
<BEG> merge the give string array into one <SEG> with overlap array element only include once <END>
<BEG> trim the element of the give string array <SEG> call < code > string trim < code > on each of them <END>
<BEG> remove duplicate strings from the give array <END>
<BEG> split a string at the first occurrence of the delimiter <END>
<BEG> take a string which be a delimited list and convert it to a string array <END>
<BEG> convert a csv list into an array of strings <END>
<BEG> convenience method to return a collection a a delimited e g <END>
<BEG> convenience method to return a collection a a csv string <END>
<BEG> convenience method to return a string array a a delimited e g <END>
<BEG> returns the cryptographic family name of the signature algorithm <END>
<BEG> returns the name of the jca algorithm use to compute the signature <END>
<BEG> returns { code true } if the enum instance represent an hmac signature algorithm <SEG> { code false } otherwise <END>
<BEG> returns { code true } if the enum instance represent an rsa public private key pair signature algorithm <SEG> { code false } otherwise <END>
<BEG> returns { code true } if the enum instance represent an elliptic curve signature algorithm <SEG> { code false } otherwise <END>
<BEG> looks up and return the corresponding { code signaturealgorithm } enum instance base on a case- < em > insensitive < em > name comparison <END>
<BEG> the java cryptography architecture provider context to be use for operation that directly involve the key supply by the caller <END>
<BEG> deprecate a of 0 3 2 use { link # tojson org jose4j jwk jsonwebkey outputcontrollevel } <END>
<BEG> < p > provides programmatic access to some specific reason for jwt invalidity by indicate if the give error code be one of the reason for the jwt be consider invalid <END>
<BEG> indicates if the jwt be invalid because it have expire i e <END>
<BEG> returns a list of reason the jwt be consider invalid <END>
<BEG> returns a < code > jwtcontext < code > object include the < code > jwtclaims < code > represent the jwt process up to the point of this < code > invalidjwtexception < code > be throw <END>
<BEG> require that the jwt be encrypt <SEG> which be not require by default <END>
<BEG> < p > according to < a href= http : tool ietf org html rfc7519 # section-5 2 > section 5 2 of the jwt spec < a > <SEG> when nested signing or encryption be employ with a jwt <SEG> the cty header parameter have to be present and have a value of jwt to indicate that a nested jwt be the payload of the outer jwt <END>
<BEG> < p > skip signature verification <END>
<BEG> < p > skip all claim validation <END>
<BEG> skip all the default claim validation but not those provide via { link # registervalidator validator } <END>
<BEG> set the key to be use for jws signature mac verification <END>
<BEG> set the verificationkeyresolver to use to select the key for jws signature mac verification <END>
<BEG> indicates that the jwtconsumer will not call the verificationkeyresolver for a jws use the 'none ' algorithm <END>
<BEG> set the decryptionkeyresolver to use to select the key for jwe decryption <END>
<BEG> skip the default audience validation <END>
<BEG> indicates whether or not the issuer iss claim be require and optionally what the expected value can be <END>
<BEG> indicates whether or not the issuer iss claim be require and optionally what the expected value be <END>
<BEG> require that a subject sub claim be present in the jwt <END>
<BEG> require that a subject sub claim be present in the jwt and that it value match that of the provide subject <END>
<BEG> require that a < a href= http : tool ietf org html rfc7519 # section-4 1 7 > jwt id jti claim < a > be present in the jwt <END>
<BEG> require that the jwt contain an < a href= http : tool ietf org html rfc7519 # section-4 1 4 > expiration time exp claim < a > <END>
<BEG> require that the jwt contain an < a href= http : tool ietf org html rfc7519 # section-4 1 6 > issue at time iat claim < a > <END>
<BEG> places restriction on how far from the time of evaluation the value of an < a href= http : tool ietf org html rfc7519 # section-4 1 6 > issue at time iat claim < a > can be while still accept the token a valid <END>
<BEG> custom validator implementation <SEG> which will be invoke when the { code jwtconsumer } be validate the jwt claim <END>
<BEG> set a callback jwscustomizer that provide a hook to call arbitrary method on the any jsonwebsignature prior to the jwsconsumer use it to verify the signature <END>
<BEG> set a callback jwecustomizer that provide a hook to call arbitrary method on the any jsonwebencryption prior to the jwsconsumer use it for decryption <END>
<BEG> sets the { link providercontext } for any jws operation to be do by the jwtconsumer be build <END>
<BEG> facilities explicit jwt typing by set the expected medium type value of the typ header of the innermost jwt include prepending application to to any typ value not contain a ' ' a define in < a href= http : tool ietf org html rfc7515 # section-4 1 9 > section 4 1 9 of rfc 7515 < a > <END>
<BEG> create the jwtconsumer with the option provide to the builder <END>
<BEG> gets the claim from the process jwt when available <END>
<BEG> all of the jose object that comprise the jwt <END>
<BEG> is there an aud audience claim in this claim set ? <END>
<BEG> gets the value of the claim <SEG> if present <SEG> a a string by call tostring on the value return by { link # getclaimvalue string } <END>
<BEG> gets the value of the claim a a list of strings <SEG> which assume that it be a json array of string <END>
<BEG> returns a numeric value represent the number of second from 1970-01-01t0:0:0z utc until the give utc date time return value <END>
<BEG> deprecate replace by { link # getheaders } and { link org jose4j jwx headers # getfullheaderasjsonstring } <END>
<BEG> gets the jwk json web key header parameter per http : tool ietf org html rfc7515 # section-4 1 3 and or http : tool ietf org html rfc7516 # section-4 1 5 return publicjsonwebkey representation of the jwk header throw joseexception if something go wrong process the jwk header content into a publicjsonwebkey <END>
<BEG> sets the jwk json web key header parameter per http : tool ietf org html rfc7515 # section-4 1 3 and or http : tool ietf org html rfc7516 # section-4 1 5 param jwk the publicjsonwebkey representation of the jwk that will be set a the jwk header <END>
<BEG> sets the value s of the critical crit header <SEG> define in < a href= http : tool ietf org html rfc7515 # section-4 1 11 > section 4 1 11 of rfc 7515 < a > <SEG> which indicate that those header must be understood and process by the recipient <END>
<BEG> sets the value of the critical crit header that be acceptable for the library to process <END>
<BEG> sets the { link providercontext } for this jws or jwe <SEG> which allow for a particular java cryptography architecture provider to be indicate by name to be use for various cryptographic operation <END>
<BEG> indicates whether or not to use signature verification to try and disambiguate when the normal key selection base on the jws header result in more than one key <END>
<BEG> deprecate use byteutil randombytes <END>
<BEG> param source the data to convert param off offset in array where conversion should begin param len length of data to convert param option specified option return the base64-encoded data a a string see base64codec # do_break_lines throw java io ioexception if there be an error throw nullpointerexception if source array be null throw illegalargumentexception if source array <SEG> offset <SEG> or length be invalid since 2 3 1 <END>
<BEG> base 64 <END>
<BEG> utf-8 encode decoding <END>
<BEG> transcodes the jca asn 1 der-encoded signature into the concatenated r + s format expect by ecdsa jws <END>
<BEG> creates a token from an encode token string <END>
<BEG> handles locales that can be pass to tag a instance of string or locale <END>
<BEG> determine if a url be absolute by jstl 's definition <END>
<BEG> returns a { link simplescriptcontext } which : < ul > < li > use the specified { link bindings } a the { link scriptengine # engine_scope } < li > < li > have the same global_scope bindings a the current context < li > < li > use the same reader <SEG> writer and error writer a the current context < li > < ul > param bind the binding to be associate with engine_scope return an instance of simplescriptcontext throw nullpointerexception if binding be < tt > null < tt > <END>
<BEG> executes the program store in the compiledscript object use the supplied bindings of attribute a the engine_scope of the associated scriptengine during script execution <END>
<BEG> retrieves a new instance of a scriptingengine for the specified extension of a script file <END>
<BEG> retrieves new instance the scriptingengine for a specifed mime type <END>
<BEG> retrieves a new instance of a scriptengine the specified descriptive name <END>
<BEG> retrieves an array of instance of scriptenginefactory class which be find by the discovery mechanism <END>
<BEG> associates the specifed value with the specify key in global_scope <END>
<BEG> register a extension with a scriptenginefactory <END>
<BEG> registers descriptive name with a scriptenginefactory <END>
<BEG> registers a mime type with a scriptenginefactory <END>
<BEG> sets the global_scope value to the specify binding <END>
<BEG> retrieves the file name in which the script be contain <END>
<BEG> retrieves the column number of the script where the error have occur <END>
<BEG> retrieves a string describe the cause of error <END>
<BEG> associates the specified value with the specify key in a java util map <END>
<BEG> this method be only need for java 1 4 compatibility <END>
<BEG> returns a { link method } correspond to the give java method declaration <END>
<BEG> return the result { link type # getargumentsandreturnsizes } on { link # value } memoized in { link # info } for efficiency <END>
<BEG> returns the var associate with qualifiedname <END>
<BEG> returns an ifn associate with the namespace and name <END>
<BEG> indexer implement ifn for attr access param obj - must be ipersistentmap return the value at the key or nil if not find <END>
<BEG> param init { key1 <SEG> val1 <SEG> key2 <SEG> val2 <SEG> } <END>
<BEG> returns a new instance of persistentstructmap use the give parameter <END>
<BEG> throw even checked exception without be require to declare them or catch them <END>
<BEG> return true if the type system support type redefinition for a give mode <END>
<BEG> adds the specify signed amount of second to the give date <END>
<BEG> get the hour of the time <SEG> base on a 12-hour clock <END>
<BEG> returns the parent of this resource path <END>
<BEG> close the watch service <END>
<BEG> checks all the watched directory that be be keep in a map for change since the last call to this method <END>
<BEG> keeping method for backwards-compatibility with external tooling <END>
<BEG> returns the root directory for this gosupathentry <END>
<BEG> returns the source directory for this path entry <END>
<BEG> returns a string representation of this path entry suitable for use in debug <END>
<BEG> reads a pom xml file into a gosupathentry object param modulefile the pom xml file to convert to gosupathentry return an ordered list of gosupathentries create base on the algorithm describe above <END>
<BEG> perform post compilation analysis on the give parsedelement <END>
<BEG> param key the key to check return true if the specify key be map <END>
<BEG> for compile-time assignment of stack index <END>
<BEG> return true if the descriptor be expose for script <END>
<BEG> determine if the descriptor be visible give a visibility constraint <END>
<BEG> provides an implementation of a specified interface <END>
<BEG> return the value of this lazy var <SEG> create if necessary <END>
<BEG> creates a new lockinglazyvar base on the type of the lazyvarinit pass in <END>
<BEG> clears the variable <SEG> force the next call to { link # get } to re-calculate the value <END>
<BEG> trims the capacity of this < tt > arraylist < tt > instance to be the list 's current size <END>
<BEG> returns the index of the first occurrence of the specified element in this list <SEG> or -1 if this list do not contain the element <END>
<BEG> replaces the element at the specified position in this list with the specify element <END>
<BEG> inserts the specified element at the specified position in this list <END>
<BEG> appends all of the element in the specified collection to the end of this list <SEG> in the order that they be return by the specify collection 's iterator <END>
<BEG> inserts all of the element in the specified collection into this list <SEG> start at the specified position <END>
<BEG> < p > gets the class name minus the package name from a string < p > < p > < p > the string pass in be assume to be a class name - it be not check < p > param classname the classname to get the short name for return the class name of the class without the package name or an empty string <END>
<BEG> returns a compacted and locked map represent the map pass in <END>
<BEG> { link string # startswith string } for lists <END>
<BEG> < p > returns a default value if the object pass be < code > null < code > < p > < p > < pre > objectutils defaultifnull null <SEG> null = null objectutils defaultifnull null <SEG> = objectutils defaultifnull null <SEG> zz = zz objectutils defaultifnull abc <SEG> = abc objectutils defaultifnull boolean true <SEG> = boolean true < pre > param object the < code > object < code > to test <SEG> may be < code > null < code > param defaultvalue the default value to return <SEG> may be < code > null < code > return < code > object < code > if it be not < code > null < code > <SEG> defaultvalue otherwise <END>
<BEG> < p > compares two object for equality <SEG> where either one or both object may be < code > null < code > < p > < p > < pre > objectutils equal null <SEG> null = true objectutils equal null <SEG> = false objectutils equal <SEG> null = false objectutils equal <SEG> = true objectutils equal boolean true <SEG> null = false objectutils equal boolean true <SEG> true = false objectutils equal boolean true <SEG> boolean true = true objectutils equal boolean true <SEG> boolean false = false < pre > param object1 the first object <SEG> may be < code > null < code > param object2 the second object <SEG> may be < code > null < code > return < code > true < code > if the value of both object be the same <END>
<BEG> < p > gets the tostring that would be produce by < code > object < code > if a class do not override tostring itself <END>
<BEG> return true if the give object be a pure java object array <SEG> false otherwise <END>
<BEG> null safe comparison of comparables <END>
<BEG> return the hash code for an array param array the array to compute the hash code <END>
<BEG> finds a bounding parent of any of the possible type pass in from the list of location <SEG> start at the position give <END>
<BEG> converts the specified character sequence to byte use utf-8 <END>
<BEG> converts the specify byte array to a string use utf-8 <END>
<BEG> converts the specified property file text to a properties object <END>
<BEG> returns a reader for the specify input stream <SEG> use specify encode <END>
<BEG> returns an input stream for the specified character sequence <SEG> use utf-8 encoding <END>
<BEG> copies the content of an input stream to an output stream <END>
<BEG> copies the content of a reader to a writer <END>
<BEG> recursively copy a file or directory to a directory <END>
<BEG> close and swallow exception the exception <END>
<BEG> parse the give file to create a simplexmlnode <END>
<BEG> returns the immediate child of this node <END>
<BEG> returns the textual content of this node <SEG> if any <END>
<BEG> returns the parent of this node <SEG> or null if this node be a root node <END>
<BEG> makes a deep copy of this node <SEG> include copy of all contain child <END>
<BEG> convenience method to see if an annotated node be { code bindable } <END>
<BEG> handles the bulk of the processing <SEG> mostly delegate to other method <END>
<BEG> creates a statement body similar to : < code > this firepropertychange field <SEG> field <SEG> field = value < code > param propertynode the field node for the property param fieldexpression a field expression for set the property value return the created statement <END>
<BEG> snoops through the declare class and all parent look for method < code > void addpropertychangelistener propertychangelistener < code > <SEG> < code > void removepropertychangelistener propertychangelistener < code > <SEG> and < code > void firepropertychange string <SEG> object <SEG> object < code > <END>
<BEG> creates a statement body similar to : < code > field = value < code > <END>
<BEG> snoops through the declare class and all parent look for a field of type vetoablechangesupport <END>
<BEG> this be a static access kill-switch <END>
<BEG> this be a static access auto download enabler <END>
<BEG> global flag to ignore checksum <END>
<BEG> set global flag to ignore checksum <END>
<BEG> get the class properties of the object under inspection <END>
<BEG> gets the object be inspect <END>
<BEG> get info about usual java public field incl <END>
<BEG> get info about properties java and groovy alike <END>
<BEG> the encoding a return by the underlying outputstreamwriter <END>
<BEG> resets the stream to the most recent mark <END>
<BEG> reads character into a portion of an array <END>
<BEG> skips character <END>
<BEG> returns the raw data associate with the current benchmark run <END>
<BEG> resets all the benchmark data on this object <END>
<BEG> this code be execute before the method be call <END>
<BEG> the call should be invoke separately return true <END>
<BEG> returns benchmark statistic a a list & lt ; object [ ] & gt ; <END>
<BEG> sets the value of the give variable param name the name of the variable to set param value the new value for the give variable <END>
<BEG> remove the variable with the specify name param name the name of the variable to remove <END>
<BEG> simple check for whether the binding contain a particular variable or not <END>
<BEG> non-javadoc see groovy lang metaclass # addnewinstancemethod java lang reflect method <END>
<BEG> never true for an empty range <END>
<BEG> always throw < code > indexoutofboundsexception < code > for an empty range <END>
<BEG> always return an empty list for an empty range <END>
<BEG> call to enable global use of expandometaclass within the registry <END>
<BEG> call to disable the global use of expandometaclass <END>
<BEG> checks if the meta class be initialize <END>
<BEG> non-javadoc see groovy lang groovyobject # getproperty java lang string <END>
<BEG> non-javadoc see groovy lang groovyobject # invokemethod java lang string <SEG> java lang object <END>
<BEG> registers a new bean property param property the property name param newvalue the property initial value <END>
<BEG> registers a new instance method for the give method name and closure on this metaclass param metamethod <END>
<BEG> overrides the behavior of parent getmethods method to make metaclass aware of added expando method return a list of metamethods see metaobjectprotocol # getmethods <END>
<BEG> registers a new static method for the give method name and closure on this metaclass param name the method name param callable the callable closure <END>
<BEG> return the java class enhance by this metaclass <END>
<BEG> called from expandometaclasscreationhandle in the registry if it exist to set up inheritance handle param modifiedsuperexpandos a list of modified super expandometaclass <END>
<BEG> returns a list of metabeanproperty instance add to this expandometaclass return the expandoproperties <END>
<BEG> overrides default implementation just in case invokemethod have be override by expandometaclass see groovy lang metaclassimpl # invokemethod class <SEG> object <SEG> string <SEG> object [ ] <SEG> boolean <SEG> boolean <END>
<BEG> overrides default implementation just in case getproperty method have be override by expandometaclass see metaclassimpl # getproperty class <SEG> object <SEG> string <SEG> boolean <SEG> boolean <END>
<BEG> overrides default implementation just in case getproperty method have be override by expandometaclass see metaclassimpl # getproperty object <SEG> string <END>
<BEG> overrides default implementation just in case setproperty method have be override by expandometaclass see metaclassimpl # setproperty class <SEG> object <SEG> string <SEG> object <SEG> boolean <SEG> boolean <END>
<BEG> looks up an exist metaproperty by name param name the name of the metaproperty return the metaproperty or null if it do n't exist <END>
<BEG> returns true if the metaclass have the give property param name the name of the metaproperty return true it exist a a metaproperty <END>
<BEG> checks whether a metamethod for the give name and argument exist param name the name of the metamethod param args the argument to the meta method return true if the method exist otherwise null <END>
<BEG> returns a property name equivalent for the give setter name or null if it be not a getter param settername the setter name return the property name equivalent <END>
<BEG> registers a modified expandometaclass with the creation handle param emc the emc <END>
<BEG> loads the give class node return the implementation class <END>
<BEG> check if this class loader have compatible { link compilerconfiguration } with the provided one <END>
<BEG> parses the give text into a java class capable of be run param text the text of the script class to parse param filename the file name to use a the name of the class return the main class define in the give script <END>
<BEG> get the currently use classpath <END>
<BEG> create a classcollector for a new compilation <END>
<BEG> set an entry in the class cache <END>
<BEG> remove a class from the class cache <END>
<BEG> set if the recompilation should be enable <END>
<BEG> get the currently set recompilation mode <END>
<BEG> get the time stamp of a give class <END>
<BEG> < p > returns all groovy class load by this class loader <END>
<BEG> todo get list of groovydoc tag return a list of tag <END>
<BEG> get the holder of the groovydoc return the groovydoc holder <END>
<BEG> runs the give script file name with the give command line argument param scriptfile the file name of the script to run param args the command line argument to pass in <END>
<BEG> runs the give script text with command line argument param scripttext be the text content of the script param filename be the logical file name of the script which be use to create the class name of the script param args the command line argument to pass in <END>
<BEG> runs the give script with command line argument param in the stream read the script param filename be the logical file name of the script which be use to create the class name of the script param args the command line argument to pass in <END>
<BEG> evaluates some script against the current binding and return the result param codesource throw compilationfailedexception <END>
<BEG> evaluates some script against the current binding and return the result param in the stream read the script param filename be the logical file name of the script which be use to create the class name of the script <END>
<BEG> this method can be use to ensure that no thread create by a reference manager will be active <END>
<BEG> turns a string into a regular expression pattern return the regular expression pattern <END>
<BEG> creates a new numberrange with the same < code > from < code > and < code > to < code > a this intrange but with a step size of < code > stepsize < code > <END>
<BEG> gets the 'from ' value a a primitive integer <END>
<BEG> overwrites subscript operator handling by redirect to { link # get int } <END>
<BEG> returns the element at the give index but grow the list if need <END>
<BEG> get this property from the give object <END>
<BEG> sets the property on the give object to the new value param object on which to set the property param newvalue the new value of the property throw runtimeexception if the property could not be set <END>
<BEG> set the property on the give object to the new value <END>
<BEG> this be for metaclass to patch up the object later when look for get method <END>
<BEG> gets the visibility modifier for the property a define by the getter and setter method <END>
<BEG> sets the field of this property param field <END>
<BEG> get the new metaclass return the new metaclass <END>
<BEG> determines if this event be for a change for a single instance or all instance of the class <END>
<BEG> returns the instance this event be for <END>
<BEG> get the metaclassregistry that originate this change return the source metaclassregistry <END>
<BEG> return the property of the give object throw exception if the property could not be evaluate <END>
<BEG> sets the property on the give object to the new value param object on which to set the property param newvalue the new value of the property <END>
<BEG> checks that the give parameter be valid to call this method param arguments the argument to check throw illegalargumentexception if the parameter be not valid <END>
<BEG> returns true if this this metamethod represent the same method a the argument <END>
<BEG> param method the method to compare against return true if the give method have the same name <SEG> parameter <SEG> return type and modifier but may be define on another type <END>
<BEG> return a descriptor of this method base on the return type and parameter of this method <END>
<BEG> invokes the method this object represent <END>
<BEG> gets the name for the getter for this property return the name of the property <END>
<BEG> gets the setter for the getter for this property <END>
<BEG> return the type that could not be resolve <END>
<BEG> return the type on which the field be attempt to be call <END>
<BEG> return whether the method be call in a static way <SEG> i e <END>
<BEG> for a numberrange with step size 1 <SEG> create a new numberrange with the same < code > from < code > and < code > to < code > a this numberrange but with a step size of < code > stepsize < code > <END>
<BEG> package private <END>
<BEG> a numberrange 's hashcode be base on hashcode value of the discrete item it represent <END>
<BEG> compares a { link numberrange } to another { link numberrange } use only a strict comparison of the numberrange property <END>
<BEG> checks whether a value be between the from and to value of a range param value the value of interest return true if the value be within the bound <END>
<BEG> iterates over all value and return true if one value match <END>
<BEG> throw illegalargumentexception if to and from be incompatible <SEG> mean they e g <END>
<BEG> increments by one param value the value to increment return the incremented value <END>
<BEG> convenience factory method for the most usual case <END>
<BEG> return the interceptor in use or null if no interceptor be use <END>
<BEG> param interceptor may be null to reset any interception <END>
<BEG> use the proxymetaclass for the give closure <END>
<BEG> interceptors the call to getproperty if a propertyaccessinterceptor be available param object the object to invoke the getter on param property the property name return the value of the property <END>
<BEG> interceptors the call to a property setter if a propertyaccessinterceptor be available param object the object to invoke the setter on param property the property name to set param newvalue the new value of the property <END>
<BEG> a helper method to allow the dynamic evaluation of groovy expression use this scripts binding a the variable scope param expression be the groovy script expression to evaluate <END>
<BEG> construct a tuple of degree 0 <END>
<BEG> gets the local part for this qname return local part <END>
<BEG> returns the fully qualified name of this qname return a string representation of the qname <END>
<BEG> tests this qname for equality with another object <END>
<BEG> tests if this qname match another object <END>
<BEG> returns a qname hold the value of the specify string <END>
<BEG> see groovy time baseduration # tomilliseconds change the duration into millisecond <SEG> relative to 'now ' <END>
<BEG> retrieves the default timezone for a date by use the default locale setting <END>
<BEG> get the dst offset if any for the default locale and the give date <END>
<BEG> return a duration represent the dst difference if any between two date <END>
<BEG> subtract one date from the other <END>
<BEG> methods on integer to implement 1 month <SEG> 4 year etc <END>
<BEG> a helper method which will extract the n-th generic type from a class node <END>
<BEG> a helper method which will extract the n-th generic type from the n-th parameter of a method node <END>
<BEG> finds a class node give a string represent the type <END>
<BEG> main cli interface <END>
<BEG> get the text of the groovy script at the give location <END>
<BEG> search for the script file <SEG> do n't bother if it be name precisely <END>
<BEG> hunt for the script file by call searchforgroovyscriptfile string <END>
<BEG> runs this server <END>
<BEG> defines the default < code > charset < code > use in case the buffer represent an 8-bit < code > charset < code > <END>
<BEG> gets the enforce8bit flag <SEG> in case we do not want to ever get a us-ascii encoding <END>
<BEG> has a byte order marker for utf-8 used by microsoft 's notepad and other editor <END>
<BEG> has a byte order marker for utf-16 low endian ucs-2le <SEG> ucs-4le <SEG> and ucs-16le <END>
<BEG> gets a < code > bufferedreader < code > indeed a < code > linenumberreader < code > from the < code > file < code > specify in the constructor of < code > charsettoolkit < code > use the charset discover or the default charset if an 8-bit < code > charset < code > be encounter <END>
<BEG> retrieves all the available < code > charset < code > s on the platform <SEG> among which the default < code > charset < code > <END>
<BEG> writes this config object into a string serialize representation which can later be parse back use the parse method see groovy lang writable # writeto java io writer <END>
<BEG> overrides the default getproperty implementation to create nested configobject instance on demand for non-existent key <END>
<BEG> flattens this configobject populate the result into the target map see configobject # flatten <END>
<BEG> merges the give map with this configobject override any matching configuration entry in this configobject param other the configobject to merge with return the result of the merge <END>
<BEG> converts this configobject into a the java util properties format <SEG> flatten the tree structure beforehand return a java util properties instance <END>
<BEG> converts this configobject ino the java util properties format <SEG> flatten the tree and prefix all entry with the give prefix param prefix the prefix to append before property entry return a java util properties instance <END>
<BEG> checks if a config option be set <END>
<BEG> sets the delegation target <END>
<BEG> evaluates the specified string expression and make the parameter available inside the script <SEG> return the result <END>
<BEG> evaluates the specified string expression and make the first three parameter available inside the script bound to variable name ' x ' <SEG> ' y ' <SEG> and ' z ' respectively <SEG> return the result <END>
<BEG> return the dynamically expanded property <END>
<BEG> factory method to create a new map use to store the expando property map return a newly create map implementation <END>
<BEG> checks value against factory 's type param value the node 's value param name the node 's name param type a class that may be assignable to the value 's class return returns true if type be assignable to the value 's class <SEG> false if value be null or a string <END>
<BEG> ask the node to be register <END>
<BEG> overloaded to make variable appear a bean property or via the subscript operator <END>
<BEG> return the factory map unmodifiable map <END>
<BEG> return the explicit method map unmodifiable map <END>
<BEG> return the current node be build <END>
<BEG> return the factory that build the current node <END>
<BEG> return the factory of the parent of the current node <END>
<BEG> remove the most recently add instance of the attribute delegate <END>
<BEG> add a preinstantiate delegate so it can intercept node before they be create <END>
<BEG> add a nodecompletion delegate so it can intercept node after they do with building <END>
<BEG> registers a factory for a node name <END>
<BEG> this be a hook for subclass to plugin a custom strategy for map name to factory <END>
<BEG> this be a hook for subclass to plugin a custom strategy for map name to explicit method <END>
<BEG> use { link factorybuildersupport # dispatchnodecall object <SEG> object } instead <END>
<BEG> sets the builder to be use a a proxy <END>
<BEG> assigns any exist property to the node < br > it will call attributedelegates before pass control to the factory that build the node <END>
<BEG> pushes a new context on the stack <END>
<BEG> removes the last context from the stack <END>
<BEG> a hook after the factory create the node and before attribute be set < br > it will call any registered postinstantiatedelegates <SEG> if you override this method be sure to call this impl somewhere in your code <END>
<BEG> a hook to allow node to be process once they have have all of their child apply and allow the actual node object that represent the markup element to be change < br > it will call any registered postnodecompletiondelegates <SEG> if you override this method be sure to call this impl at the end of your code <END>
<BEG> clears the context stack <END>
<BEG> a strategy method to allow derived builder to use builder-trees and switch in different kind of builder <END>
<BEG> return the stack of available context <END>
<BEG> stores the thread local state in a map that can be pass across thread return the map <END>
<BEG> switches the builder 's proxybuilder during the execution of a closure < br > this be useful to temporary change the building context to another builder without the need for a contrived setup <END>
<BEG> finds all combination of item from the give iterable aggregate of collection <END>
<BEG> transposes the give list <END>
<BEG> selects the minimum value find in an iterable of item <END>
<BEG> selects the maximum value find in an iterable <END>
<BEG> simple test harness for the gse <END>
<BEG> get a resource connection a a < code > urlconnection < code > to retrieve a script from the < code > resourceconnector < code > <END>
<BEG> get the < code > classloader < code > that will serve a the parent classloader of the { link groovyclassloader } in which script will be execute <END>
<BEG> get the class of the scriptname in question <SEG> so that you can instantiate groovy object with caching and reloading <END>
<BEG> run a script identify by name with a single argument <END>
<BEG> returns the groovyclassloader associate with this script engine instance <END>
<BEG> return a non null compiler configuration <END>
<BEG> set a compiler configuration param config - the compiler configuration throw nullpointerexception if config be null <END>
<BEG> prints a string follow by an end of line character <END>
<BEG> prints an end-of-line character if enable via addnewlines property <END>
<BEG> helper method to handle object hash for possibly null value <END>
<BEG> creates a new node with the same name <SEG> no parent <SEG> shallow clone attribute and if the value be a nodelist <SEG> a deep clone of those node <END>
<BEG> creates a new node a a child of the current node <END>
<BEG> replaces the current node with node define use builder-style notation via a closure <END>
<BEG> returns the textual representation of the current node and all it child node <END>
<BEG> returns a < code > map < code > of the attribute of the node or an empty < code > map < code > if the node do not have any attribute <END>
<BEG> provides lookup of element by non-namespaced name param key the name or shortcut key of the node s of interest return the node which match key <END>
<BEG> provides a collection of all the node in the tree use a depth-first traversal <END>
<BEG> provides a collection of all the node in the tree use a depth-first preorder traversal <END>
<BEG> calls the provided closure for all the node in the tree use a breadth-first preorder traversal <END>
<BEG> calls the provided closure for all the node in the tree use a breadth-first traversal <END>
<BEG> returns the list of any direct string node of this node <END>
<BEG> converts the text of this gpathresult to a integer object <END>
<BEG> creates a new nodelist contain the same element a the original but clone in the case of nodes <END>
<BEG> provides lookup of element by non-namespaced name <END>
<BEG> returns the text value of all of the element in the collection <END>
<BEG> returns the current name of the 'bean ' node <END>
<BEG> returns the classloader use to load a node 's class <END>
<BEG> returns true if reference can be resolve lazily <END>
<BEG> sets the name for the 'bean ' node <END>
<BEG> sets the current classnameresolver < br > it will assign defaultclassnameresolver if null < br > it accept a classnameresolver instance <SEG> a string <SEG> a closure or a map <END>
<BEG> sets the current identifierresolver < br > it will assign defaultidentifierresolver if null < br > it accept a identifierresolver instance <SEG> a string or a closure <END>
<BEG> sets the current relationnameresolver < br > it will assign defaultrelationnameresolver if null <END>
<BEG> generate next permutation algorithm from rosen p 284 return the item permute <END>
<BEG> instructs < code > proxygenerator < code > to dump generated groovy source code to standard output during construction <END>
<BEG> changes generate method to have empty implementation <END>
<BEG> creates a proxy with a delegate object <END>
<BEG> add a method and mark it a { code generated } <END>
<BEG> add an inner class that be mark a { code generated } <END>
<BEG> add method from the super class <END>
<BEG> adds method from all interface <END>
<BEG> adds method from interface and parent interface <END>
<BEG> returns true if the give method have a possibly match static method with the give name and argument <END>
<BEG> return true if we have a static accessor <END>
<BEG> returns the property name <SEG> e g <END>
<BEG> detect whether the give accessor name start with get <SEG> set or be follow by at least one character <END>
<BEG> detect whether a static property with the give name be within the class or a super class <END>
<BEG> determine if the give classnode value have the same package name <END>
<BEG> return the potentially inherited field of the classnode <END>
<BEG> return the first statement from the constructor code if it be a call to super or this <SEG> otherwise null <END>
<BEG> return the method node 's descriptor which include it return type <SEG> name and parameter type without generic <END>
<BEG> for a method node potentially represent a property <SEG> return the name of the property <END>
<BEG> gets the code for a method or constructor a a block <END>
<BEG> determine the correct modifier by look for a potential visibilityoptions annotation <END>
<BEG> ; private static final string runtime_groovydoc_prefix = groovydoc_prefix + ; private static final string value = value ; private static final pattern spaces_pattern = pattern compile \\s+ ; private final boolean groovydocenabled <SEG> runtimegroovydocenabled ; public groovydocmanager final boolean groovydocenabled <SEG> final boolean runtimegroovydocenabled { this groovydocenabled = groovydocenabled ; this runtimegroovydocenabled = runtimegroovydocenabled ; } attach doc comment to member node a meta data <END>
<BEG> check whether follow a method name of command expression <END>
<BEG> distinguish between method declaration and method call constructor declaration <END>
<BEG> distinguish between local variable declaration and method call <SEG> e g <END>
<BEG> a syntaxerrorreportable be a recognizer that can report syntax error <END>
<BEG> reference jls 14 20 3 try-with-resources http : doc oracle com javase spec jls se7 html jls-14 html param trycatchstatement the try-with-resources statement to transform return try-catch-finally statement <SEG> which contain no resource clause <END>
<BEG> see http : doc oracle com javase spec jls se9 html jls-14 html 14 20 3 1 <END>
<BEG> sets location linenumber <SEG> colnumber <SEG> lastlinenumber <SEG> lastcolumnnumber for node use standard context information <END>
<BEG> the modified implementation be base on stringutils # replace string text <SEG> string searchstring <SEG> string replacement <SEG> int max <SEG> apache commons-lang3-3 6 < p > replaces all occurrence of a string within another string < p > < p > a { code null } reference pass to this method be a no-op < p > < pre > stringutils replace null <SEG> <SEG> = null stringutils replace <SEG> <SEG> = stringutils replace any <SEG> null <SEG> = any stringutils replace any <SEG> <SEG> null = any stringutils replace any <SEG> <SEG> = any stringutils replace aba <SEG> a <SEG> null = aba stringutils replace aba <SEG> a <SEG> = b stringutils replace aba <SEG> a <SEG> z = zbz < pre > param text text to search and replace in <SEG> may be null param searchstring the string to search for <SEG> may be null param replacement the string to replace it with <SEG> may be null return the text with any replacement process <SEG> { code null } if null string input <END>
<BEG> returns a reference to the one and only registry instance <END>
<BEG> loads { link groovyrunner } instance use the { link serviceloader } facility <END>
<BEG> returns { code true } if the registry contain no runner <SEG> else { code false } <END>
<BEG> returns { code true } if a runner be register with the specify key <END>
<BEG> returns { code true } if registry contain the give runner instance <END>
<BEG> registers a runner with the specify key <END>
<BEG> removes a registered runner from the registry <END>
<BEG> clears all register runner from the registry and reset the registry so that it contain only the default set of runner <END>
<BEG> set of all key associate with registered runner <END>
<BEG> returns a collection of all registered runner <END>
<BEG> returns a set of entry for registered runner <END>
<BEG> returns a new string which be the same a the original except the first letter will be lowercase except for some special case a per javabean handling <END>
<BEG> this be the complement the behavior of the decapitalize string method <END>
<BEG> a weigher where an entry have a weight of < tt > 1 < tt > <END>
<BEG> a weigher where the value be a byte array and it weight be the number of byte <END>
<BEG> a weigher where the value be a { link iterable } and it weight be the number of element <END>
<BEG> a { code lazyinitializable } be an object that can be initialize lazily <END>
<BEG> run the script file specify by the file path param path the file since 3 0 0 <END>
<BEG> retrieves a system property <SEG> or return some default value if : < ul > < li > the property be n't find < li > < li > the property name be null or empty < li > < li > if a security manager exist and it checkpropertyaccess method do n't allow access to the specified system property < li > < ul > param name the name of the system property <END>
<BEG> retrieves an integer system property param name the name of the system property <END>
<BEG> decorate antlr ast with end line col info <SEG> and if possible the snippet of source from the start end line col for each node <END>
<BEG> to swap two child of node t < pre > t | | a -- b t down = firstnode a right = b b right = null < pre > become < pre > t | | b -- a t down = b a right = null b right = a < pre > todo - build api of basic tree mutation like this method <END>
<BEG> writes the specified character into the buffer <END>
<BEG> a default implementation of all visitor method <END>
<BEG> reads character from the underlie reader <END>
<BEG> gets the next character from the underlie reader <SEG> translate escape a require <END>
<BEG> returns true for default constructor add by the compiler <END>
<BEG> sets this node a a node add by the compiler <END>
<BEG> creates an array of classnodes use an array of class <END>
<BEG> creates a classnode use a give class <END>
<BEG> checks if the type be a generated function <SEG> i e <END>
<BEG> returns the single abstract method of a class node <SEG> if it be a sam type <SEG> or null otherwise <END>
<BEG> returns a super class or interface for a give class depend on a give target <END>
<BEG> indicates that this class have be promote to public by groovy when in fact there be no public modifier explicitly in the source code <END>
<BEG> return the field on the out class or { code null } if this be not an inner class <END>
<BEG> this method create a list of all method with this name of the current class and of all super class return the method list see # getdeclaredmethods string <END>
<BEG> return { code true } if this inner class or closure be declare inside a script body <END>
<BEG> return the classnode for the give qualified name or return null if the name do not exist in the current compilation unit ignore the class file on the classpath <END>
<BEG> appends all of the fully qualified class name in this module into the give map <END>
<BEG> this method actually do not compile a class <END>
<BEG> add a constructed class node a a placeholder to resolve outer nested class far <END>
<BEG> utility method for lazy class loading <END>
<BEG> creates an assignment expression in which the specify expression be write into the specify variable name <END>
<BEG> if strict mode be true <SEG> then when the compiler generate a cast <SEG> it will disable groovy cast and rely on a strict cast checkcast return true if strict mode be enable <END>
<BEG> if strict mode be true <SEG> then when the compiler generate a cast <SEG> it will disable groovy cast and rely on a strict cast checkcast param strict strict mode <END>
<BEG> this get the code statement of the closure <END>
<BEG> return an array of zero for implicit it or more when explicit args give parameter or null otherwise represent explicit no args <END>
<BEG> return { code true } if one or more explicit parameter be supply <END>
<BEG> this method return the left hand side of the declaration cast to the variableexpression type <END>
<BEG> this method tell you if this declaration be a multiple assignment declaration <SEG> which have the form def x <SEG> y = in groovy <END>
<BEG> this method return the method name a string if it be no dynamic calculated method name <SEG> but a constant <END>
<BEG> return be this a safe method call <SEG> i e <END>
<BEG> return true if no object expression be specify otherwise if some expression be specify for the object on which to evaluate the method then return false <END>
<BEG> return the target a method node if set <END>
<BEG> sets a method call target for a direct method call <END>
<BEG> use this method to tell if a variable be use in a closure <SEG> like in the following example : < pre > def str = 'hello ' def cl = { println str } < pre > the str variable be closure share <END>
<BEG> compares this generic type with the provided class node <END>
<BEG> return the text display of this import <END>
<BEG> return the field node on the out class or null if this be not an inner class <END>
<BEG> attempts to find astbuilder 'from code ' invocation <END>
<BEG> check whether the modifier be not an imagine modifier annotation <SEG> def <END>
<BEG> param alias the name of interest return the class node for the give alias or null if none be available <END>
<BEG> return the underlying character stream description <END>
<BEG> copies all node meta data from the other node to this one param other the other node <END>
<BEG> sets the node meta data but allow overwrite value <END>
<BEG> removes a node meta data entry <END>
<BEG> return the text display of this package definition <END>
<BEG> return the default value expression for this parameter or null if no default value be specify <END>
<BEG> return the case statement of the give index or null <END>
<BEG> does the closure have a single char-like char or character argument <END>
<BEG> does the closure have a single string argument <END>
<BEG> return true if the closureexpression have an implicit 'it ' parameter <END>
<BEG> this method be similar to { link # propx expression <SEG> expression } but will make sure that if the property be access be define inside the classnode provide a a parameter <SEG> then a getter call be generate instead of a field access <END>
<BEG> copies all < tt > candidateannotations < tt > with retention policy { link java lang annotation retentionpolicy # runtime } and { link java lang annotation retentionpolicy # class } <END>
<BEG> converts an expression into the string source <END>
<BEG> generates a wildcard generic type in order to be use for check against class node <END>
<BEG> for a give classnode <SEG> fill in the supplied map with the parameterized type it define <END>
<BEG> try to get the parameterized type from the cache <END>
<BEG> get the parameterized type by search the whole class hierarchy accord to generic class and actual receiver <END>
<BEG> clear the parameterized type cache it be useful to ide a the type be compile be continuously be edit altered <SEG> see groovy-8675 <END>
<BEG> check whether the classnode have non generic placeholder <SEG> aka not placeholder param parameterizedtype the class node return the result since 3 0 0 <END>
<BEG> check whether the classnode have generic placeholder param parameterizedtype the class node return the result since 3 0 0 <END>
<BEG> gets the actual type accord to the placeholder name <END>
<BEG> checks if two parameter array be type-compatible <END>
<BEG> used to check if a type be an int or integer <END>
<BEG> it be of a biginteger category <SEG> if the provided type be a long category or a biginteger <END>
<BEG> it be of a double category <SEG> if the provided type be a bigdecimal <SEG> a float <SEG> double <END>
<BEG> it be of a floating category <SEG> if the provided type be a a float <SEG> double <END>
<BEG> given a list of class node <SEG> return the first common supertype <END>
<BEG> determines if the source class implement an interface or subclasses the target type <END>
<BEG> non-null iff this scope correspond to a class ; a oppose to a method <SEG> if statement <SEG> block statement <SEG> etc <END>
<BEG> returns true iff this scope correspond to a class ; a oppose to a method <SEG> if statement <SEG> block statement <SEG> etc <END>
<BEG> gets a map contain the variable declare in this scope <END>
<BEG> gets a map contain the class variable reference by this scope <END>
<BEG> gets an iterator for the declared class variable <END>
<BEG> return writer controller since 2 5 0 <END>
<BEG> write some int standard operation for compare param type the token type return true if a successful std operator write <END>
<BEG> write some the bitwise operation <END>
<BEG> write shift operation <END>
<BEG> write a std compare <END>
<BEG> write the spaceship operator <SEG> type should be compare_to param type the token type return true if a successful spaceship operator write <END>
<BEG> since there be no dup4 we have to do this : dup2_x1 pop2 dup2_x1 dup2_x1 pop2 dup2_x1 <END>
<BEG> return the stack index for this variable <END>
<BEG> return be this local variable share in other scope and so must use a valueholder <END>
<BEG> this method be call for local variable share between scope <END>
<BEG> initialize this class for a methodnode <END>
<BEG> causes the state-stack to add an element and set the give scope a new current variable scope <END>
<BEG> should be call when descend into a loop that define also a scope <END>
<BEG> should be call when descend into a loop that do not define a scope <END>
<BEG> used for < code > break foo < code > inside a loop to end the execution of the marked loop <END>
<BEG> creates a new break label and a element for the state stack so pop have to be call later <END>
<BEG> because a boolean expression may not be evaluate completely it be important to keep the register clean <END>
<BEG> param name the name of the variable of interest return true if a variable be already define <END>
<BEG> creates a mop method name from a method <END>
<BEG> generates a meta object protocol method <SEG> that be use to call a non public method <SEG> or to make a call to super <END>
<BEG> duplicate top element <END>
<BEG> remove amount element from the operand stack <SEG> without use pop <END>
<BEG> swap two top level operand <END>
<BEG> replace top level element with new element of give type <END>
<BEG> load the constant on the operand stack <END>
<BEG> a utility for get information of type since 2 5 0 <END>
<BEG> loads either this object or if we 're inside a closure then load the top level owner <END>
<BEG> generates byte code for constant <END>
<BEG> delegates to the visit method use for this class <END>
<BEG> creates a getter <SEG> setter and field <END>
<BEG> check if the current runtime allow annotation usage <END>
<BEG> adds return statement to give method whenever an implicit return be detect <END>
<BEG> sets the current class node context <END>
<BEG> cache a classnode param name - the name of the class param res - the classnode for that name <END>
<BEG> extension point for custom lookup logic of find classnodes <END>
<BEG> returns the compileunit that root our ast <END>
<BEG> get the groovyclasses generate by compile <END>
<BEG> convenience routine to get the first classnode <SEG> for when you be sure there be only one <END>
<BEG> convenience routine to get the name classnode <END>
<BEG> return the ast transformation current context <END>
<BEG> adds a set of file path to the unit <END>
<BEG> returns an iterator on the unit 's sourceunits <END>
<BEG> dequeues any source unit add through addsource and reset the compiler phase to initialization <END>
<BEG> updates the phase marker on all source <END>
<BEG> returns the underlieng integer phase number <END>
<BEG> returns the compilephase for the give integer phase number <END>
<BEG> checks if the specify bytecode version string represent a jdk 1 5+ compatible bytecode version <END>
<BEG> gets the currently configure warn level <END>
<BEG> gets the currently configure source file encode <END>
<BEG> set the classpath use a list of strings param part list of string contain the classpath part <END>
<BEG> returns true if parameter metadata generation have be enable <END>
<BEG> turns parameter metadata generation on or off <END>
<BEG> sets the error tolerance <SEG> which be the number of non-fatal error per unit that should be tolerate before compilation be abort <END>
<BEG> gets the name of the base class for script <END>
<BEG> sets the bytecode compatibility level <END>
<BEG> retrieves the compiler bytecode compatibility level <END>
<BEG> whether the bytecode version have preview feature enable jep 12 return preview feature <END>
<BEG> sets whether the bytecode version have preview feature enable jep 12 <END>
<BEG> gets the joint compilation option for this configuration <END>
<BEG> returns the list of disabled global ast transformation class name <END>
<BEG> disables the specified global ast transformation <END>
<BEG> checks if invoke dynamic be enable <END>
<BEG> its always fatal <END>
<BEG> set fatal be just ignore <END>
<BEG> set this option to true if you want your import rule to be check against every class node <END>
<BEG> sets the list of token which be blacklist <END>
<BEG> an alternative way of set constant type <END>
<BEG> sets the list of class which deny method call <END>
<BEG> sets the list of class which may accept method call <END>
<BEG> adds an error to the message set <SEG> but do not cause a failure <END>
<BEG> adds a non-fatal error to the message set <SEG> which may cause a failure if the error threshold be exceed <END>
<BEG> adds an optionally-fatal error to the message set <END>
<BEG> adds a warning to the message set <END>
<BEG> return the compiler configuration use to create this error collector <END>
<BEG> returns the specified error message <SEG> or null <END>
<BEG> returns the list of error <SEG> or null if there be none <END>
<BEG> returns the specified error 's underlying exception <SEG> or null if it be n't one <END>
<BEG> causes the current phase to fail by throw a compilationfailedexception <END>
<BEG> returns true if the source can be restart ie <END>
<BEG> cleans up any cached resource use by getline <END>
<BEG> returns a uri for the file of this source <END>
<BEG> returns a new reader on the underlie source object <END>
<BEG> returns a data uri rfc 2397 contain the literal value of this source string <END>
<BEG> writes out a nicely formatted summary of the exception <END>
<BEG> writes out a nicely formatted summary of the syntax error <END>
<BEG> groovy-3339 - do nothing - so that number do n't get replace by cached constant in closure class <END>
<BEG> errors find during the compilation should be report through the errorcollector <END>
<BEG> marks the current phase complete and process any error <END>
<BEG> a synonym for < code > gotophase getphase + 1 < code > <END>
<BEG> wraps up any pending operation for the current phase and switch to the give phase <END>
<BEG> returns the concrete syntax tree produce during parse ing <END>
<BEG> a convenience routine to create a standalone sourceunit on a string with default for almost everything that be configurable <END>
<BEG> parses the source to a cst <END>
<BEG> generates an ast from the cst <END>
<BEG> returns a sampling of the source at the specified line and column <SEG> or null if it be unavailable <END>
<BEG> call { link # staticimportvisitor classnode <SEG> sourceunit } then { link # visitclass classnode } <END>
<BEG> returns a string representation of this class by call < code > getmessage < code > <END>
<BEG> returns the detail message string of this error <END>
<BEG> returns the bug text to describe this error <END>
<BEG> returns the { code class } associate with this { code classinfo } <END>
<BEG> returns the { code metaclass } for the { code class } associate with this { code classinfo } <END>
<BEG> determine whether or not the getcallingclass method will return any sensible result <END>
<BEG> get the call that be matchlevel stack frame before the call <SEG> ignore mop frame and desire exclude package <END>
<BEG> should we make the following method private ? <END>
<BEG> return the abstract method from a sam type <SEG> if it be a sam type <END>
<BEG> calculate the dimension of array param clazz the type of array return the dimension of array <END>
<BEG> get the type of array element param clazz the type of array return the type of element <END>
<BEG> get the type of array element by the dimension param clazz the type of array param dim the target dimension return the result array <END>
<BEG> get value from int [ ] use normalized index <END>
<BEG> normal closure call <END>
<BEG> bridge for a call base on a map entry <END>
<BEG> checks whether a method be a core method from java lang object <END>
<BEG> this convert a possibly negative index to a real index into the array <END>
<BEG> attempts to close the closeable return rather than throw any exception that may occur <END>
<BEG> determines if all item of this array be of the same type <END>
<BEG> start a thread with the give closure a a runnable instance <END>
<BEG> start a thread with a give name and the give closure a a runnable instance <END>
<BEG> start a daemon thread with the give closure a a runnable instance <END>
<BEG> start a daemon thread with a give name and the give closure a a runnable instance <END>
<BEG> dump the thread dump of all thread param self placeholder variable use by groovy category ; ignore for default static method return the thread dump of all thread since 3 0 0 <END>
<BEG> sleep for so many millisecond <SEG> even if interrupt <END>
<BEG> sleep for so many millisecond <SEG> use a give closure for interrupt processing <END>
<BEG> get the current time in second param self placeholder variable use by groovy category ; ignore for default static method return the difference <SEG> measure in second <SEG> between the current time and midnight <SEG> january 1 <SEG> 1970 utc <END>
<BEG> divide two numbers <END>
<BEG> subtraction of two numbers <END>
<BEG> decodes a base64 url and filename safe encode string into a byte array <END>
<BEG> calculate md5 of the charsequence instance return md5 value throw nosuchalgorithmexception if md5 algorithm not find since 2 5 0 <END>
<BEG> digest the charsequence instance param algorithm the name of the algorithm request <SEG> e g <END>
<BEG> synchronization be avoid here for performance reason since this method be call frequently from callsite location <END>
<BEG> this method be use to pull all the new method out of the local thread context with a particular name <END>
<BEG> this be so we do n't have to reorder the stack when we call this method <END>
<BEG> returns the method pointer for the give object name <END>
<BEG> according to the initial entry count <SEG> calculate the initial capacity of hash map <SEG> which be power of 2 see http : stackoverflow com question 8352378 why-does-hashmap-require-that-the-initial-capacity-be-a-power-of-two param initialentrycnt the initial entry count return the initial capacity <END>
<BEG> writes an object to a writer use groovy 's default representation for the object <END>
<BEG> a helper method to format the argument type a a comma-separated list <END>
<BEG> a helper method to return the string representation of a map with bracket boundary [ and ] <END>
<BEG> invokes the give method on the object <END>
<BEG> converts the give object into an array ; if it an array then just cast otherwise wrap it in an array <END>
<BEG> overloads the leftshift operator for writer to allow an object to be write use groovy 's default representation for the object <END>
<BEG> invokes a closure that use a formatter take care of resource handling <END>
<BEG> a helper method so that dynamic dispatch of the writer write object method will always use the more efficient writable writeto writer mechanism if the object implement the writable interface <END>
<BEG> overloads the leftshift operator to provide an append mechanism to add value to a stream <END>
<BEG> overloads the leftshift operator to add object to an objectoutputstream <END>
<BEG> pipe an inputstream into an outputstream for efficient stream copying <END>
<BEG> create an object output stream for this output stream <END>
<BEG> create a new objectoutputstream for this output stream and then pass it to the closure <END>
<BEG> create an object input stream for this input stream use the give class loader <END>
<BEG> create a new objectinputstream for this file and pas it to the closure <END>
<BEG> read a single <SEG> whole line from the give reader <END>
<BEG> reads the reader into a list of strings <SEG> with one entry for each line <END>
<BEG> read the content of this inputstream use specify charset and return it a a string <END>
<BEG> read the content of this inputstream and return it a a byte [ ] <END>
<BEG> write the byte [ ] to the output stream <END>
<BEG> creates an iterator which will traverse through the reader a line at a time <END>
<BEG> creates a reader for this input stream <END>
<BEG> creates a reader for this input stream <SEG> use the specified charset a the encoding <END>
<BEG> allows this reader to be use within the closure <SEG> ensure that it be close before this method return <END>
<BEG> allows this input stream to be use within the closure <SEG> ensure that it be flush and close before this method return <END>
<BEG> creates a writer for this stream <END>
<BEG> creates a writer for this stream use the give charset <END>
<BEG> traverse through each the specify stream read byte into a buffer and call the 2 parameter closure with this buffer and the number of byte <END>
<BEG> transforms the line from a reader with a closure and write them to a writer <END>
<BEG> filter the line from a reader and write them on the writer <SEG> accord to a closure which return true if the line should be include <END>
<BEG> filter the line from this reader <SEG> and return a writable which can be use to stream the filtered line to a destination <END>
<BEG> allows this closeable to be use within the closure <SEG> ensure that it be close once the closure have be execute and before this method return <END>
<BEG> clear the cache see # clearall <END>
<BEG> try to get the value from cache <END>
<BEG> remove all entry hold softreferences to gc-evicted object <END>
<BEG> the eldest entry should be remove when we reach the maximum cache size <END>
<BEG> makes sure the retrieved object be move to the head of the lru list <END>
<BEG> clear the cache return return the content of the cleared map <END>
<BEG> get all key associate to cache value return all key <END>
<BEG> replying on the concurrenthashmap thread-safe iteration implementation the method will remove all entry hold softreferences to gc-evicted object <END>
<BEG> retrieves the closure that be invoke by this metamethod return the closure <END>
<BEG> maps the specify < code > key < code > to the specify < code > value < code > in this table <END>
<BEG> continuation of put <SEG> call only when sync lock be hold and interference have be detect <END>
<BEG> find the entry <SEG> then 1 <END>
<BEG> return true if no meta class creation handle be set and if the original boolean meta class be use <END>
<BEG> set if the original boolean meta class be use <END>
<BEG> return true if no meta class creation handle be set and if the original integer array meta class be use <END>
<BEG> set if the system use a custom meta class creation handle <END>
<BEG> loads a class per name <END>
<BEG> helper method to define reflector class <END>
<BEG> closure responsible for create the initial value of thread-managed bean property param callable the closure responsible for create the initial value <END>
<BEG> param method the method to choose from return the method with 1 parameter which take the most general type of object e g <END>
<BEG> param list a list of metamethods param method the metamethod of interest return true if a method of the same matching prototype be find in the list <END>
<BEG> param instance array to the type array param args the argument return the type of the argument <END>
<BEG> returns a callable object for the give method name on the object <END>
<BEG> sets the meta class for an object <SEG> by delegate to the appropriate { link defaultgroovymethods } helper method <END>
<BEG> converts a string into a standard property name <END>
<BEG> returns a string detail possible solution to a miss method if no good solution can be find a empty string be return <END>
<BEG> if c be a primitive class this method return a boxed version otherwise c be return <END>
<BEG> this be a slightly modify version of the damerau levenshtein distance algorithm <END>
<BEG> this be a implementation of dl distance between two object array instead of character stream <END>
<BEG> get the nullobject reference return the null object <END>
<BEG> tries to invoke a method on null <SEG> which will always fail param name the name of the method to invoke param args - argument to the method return a npe <END>
<BEG> allows to add a string to null <END>
<BEG> fallback for null+null <END>
<BEG> type conversion method for null <END>
<BEG> a null object always coerce to false <END>
<BEG> returns the assertion 's source text after remove line break <END>
<BEG> returns the column in < tt > getnormalizedtext < tt > correspond to the give line and column in the original source text <END>
<BEG> an alias method so that a process appear similar to system out <SEG> system in <SEG> system err ; you can use process in <SEG> process out <SEG> process err in a similar fashion <END>
<BEG> wait for the process to finish during a certain amount of time <SEG> otherwise stop the process <END>
<BEG> closes all the stream associate with the process ignore any ioexceptions <END>
<BEG> gets the output and error stream from a process and read them to keep the process from block due to a full output buffer <END>
<BEG> gets the error stream from a process and read it to keep the process from block due to a full buffer <END>
<BEG> gets the output stream from a process and read it to keep the process from block due to a full output buffer <END>
<BEG> creates a new bufferedwriter a stdin for this process <SEG> pass it to the closure <SEG> and ensure the stream be flush and close after the closure return <END>
<BEG> creates a new buffered outputstream a stdin for this process <SEG> pass it to the closure <SEG> and ensure the stream be flush and close after the closure return <END>
<BEG> allows one process to asynchronously pipe data to another process <END>
<BEG> overrides the or operator to allow one process to asynchronously pipe data to another process <END>
<BEG> executes the command specify by < code > self < code > with environment define by < code > envp < code > and under the work directory < code > dir < code > <END>
<BEG> executes the command specify by the give < code > string < code > array <END>
<BEG> executes the command specify by the < code > string < code > array give in the first parameter <SEG> with the environment define by < code > envp < code > and under the work directory < code > dir < code > <END>
<BEG> executes the command specify by the give list <SEG> with the environment define by < code > envp < code > and under the work directory < code > dir < code > <END>
<BEG> invoke a method through reflection <END>
<BEG> provide the standard groovy < code > size < code > method for < code > file < code > <END>
<BEG> calculates directory size a total size of all it file <SEG> recursively <END>
<BEG> create an object output stream for this file <END>
<BEG> create a new objectoutputstream for this file and then pass it to the closure <END>
<BEG> synonym for write text allow file text = 'foo ' <END>
<BEG> synonym for write text <SEG> charset allow : < pre > myfile settext 'some text ' <SEG> charset < pre > or with some help from < code > expandometaclass < code > <SEG> you could do something like : < pre > myfile metaclass settext = { string s { code - > } delegate settext s <SEG> 'utf-8 ' } myfile text = 'some text ' < pre > param file a file param charset the charset use when write to the file param text the text to write to the file throw ioexception if an ioexception occurs <END>
<BEG> write the text to the file <END>
<BEG> append binary data to the file <END>
<BEG> write the text to the file <SEG> use the specify encoding <END>
<BEG> append the text supply by the writer at the end of the file <END>
<BEG> append the text at the end of the file <SEG> use a specify encoding <END>
<BEG> append the text supply by the writer at the end of the file <SEG> use a specify encoding <END>
<BEG> invokes the closure for each 'child ' file in this 'parent ' folder directory <END>
<BEG> invokes the closure for each subdirectory in this directory <SEG> ignore regular file <END>
<BEG> processes each descendant file in this directory and any sub-directories <END>
<BEG> invokes the closure for each file whose name file name match the give namefilter in the give directory - call the { link defaultgroovymethods # iscase java lang object <SEG> java lang object } method to determine if a match occurs <END>
<BEG> deletes a directory with all contain file and subdirectory <END>
<BEG> converts this file to a { link groovy lang writable } <END>
<BEG> converts this file to a { link groovy lang writable } or delegate to default { link defaultgroovymethods # astype java lang object <SEG> java lang class } <END>
<BEG> allows a file to return a writable implementation that can output itself to a writer stream <END>
<BEG> create a buffered reader for this file <END>
<BEG> create a buffered reader for this file <SEG> use the specified charset a the encoding <END>
<BEG> creates a new data output stream for this file <END>
<BEG> creates a new inputstream for this url and pass it into the closure <END>
<BEG> creates a buffered writer for this file <SEG> optionally append to the exist file content <END>
<BEG> helper method to create a buffered writer for a file <END>
<BEG> create a new bufferedwriter which will append to this file <END>
<BEG> create a new bufferedwriter for this file in append mode <END>
<BEG> create a new printwriter for this file <SEG> use specify charset <END>
<BEG> create a new printwriter for this file which be then pass it into the give closure <END>
<BEG> create a new printwriter with a specified charset for this file <END>
<BEG> creates a buffered input stream for this file <END>
<BEG> creates a buffered reader for this url use the give encoding <END>
<BEG> create a data input stream for this file param file a file return a datainputstream of the file throw filenotfoundexception if the file be not find <END>
<BEG> traverse through each byte of this file param self a file param closure a closure throw ioexception if an ioexception occurs <END>
<BEG> traverse through the byte of this file <SEG> bufferlen byte at a time <END>
<BEG> reads the inputstream from this url <SEG> pass a byte [ ] and a number of byte to the give closure <END>
<BEG> reads the content of the file into a byte array <END>
<BEG> transforms a charsequence represent a uri into a uri object <END>
<BEG> provides a hook for type coercion of the give object to the required type param type of object to convert the give object to param object the object to be convert return the original object or a new convert value throw throwable if the coercion fails <END>
<BEG> adds a groovy lang closure to test whether the stack trace element should be add or not <END>
<BEG> extracts the root cause of the exception <SEG> no matter how nested it be param t a throwable return the deep cause of the exception that can be find <END>
<BEG> get the root cause of an exception and sanitize it for display to the user < p > this will modify the stacktrace of the root cause exception object and return it param t a throwable return the root cause exception instance <SEG> with it stace trace modify to filter out groovy runtime class <END>
<BEG> sanitize the exception and all nest cause < p > this will modify the stacktrace of the exception instance and all it cause irreversibly param t a throwable return the root cause exception instance <SEG> with stack trace modify to filter out groovy runtime class <END>
<BEG> method use for coerce an object to a boolean value <SEG> thanks to an < code > asboolean < code > method add on type <END>
<BEG> determines whether the value object be a class object represent a subclass of java lang enum <END>
<BEG> allows conversion of array into a mutable list param array an array return the array a a list <END>
<BEG> compares the two object handle null gracefully and perform numeric type coercion if require <END>
<BEG> for this operation <SEG> consider the operand independently <END>
<BEG> determine which numbermath instance to use <SEG> give the supplied operand <END>
<BEG> this class require that the supplied enum be not fit a collection case for cast <END>
<BEG> return two name join by a dot <END>
<BEG> returns true if the node 's meaning match the specified type <END>
<BEG> returns true if the node 's meaning match any of the specify type <END>
<BEG> returns true if the node match the specified type <END>
<BEG> returns true if the node and it 's first child match the specified type <END>
<BEG> returns true if the node be completely empty no root <SEG> even <END>
<BEG> returns true if the node have any non-root element <END>
<BEG> returns true if the node be a complete expression <END>
<BEG> adds all child of the specified node to this one <END>
<BEG> formats the node a a < code > string < code > and return it <END>
<BEG> formats the node and write it to the specify < code > writer < code > <END>
<BEG> creates a new < code > reduction < code > with < code > token null < code > a it 's root <END>
<BEG> returns the specified element <SEG> or null <END>
<BEG> returns the root of the node <SEG> the token that indicate it 's type <END>
<BEG> marks the node a complete expression <END>
<BEG> sets an element in at the specified index <END>
<BEG> retrieve the line upon which the error occur <END>
<BEG> return the end line on which the error occur <END>
<BEG> writes the error to the specify < code > printstream < code > <END>
<BEG> runs the report once all initialization be complete <END>
<BEG> for everything else <END>
<BEG> prints version information to the specify printwriter <END>
<BEG> primary entry point for compile from the command line use the groovyc script <END>
<BEG> configures this loader with a stream param be stream use to read the configuration throw ioexception if reading or parse the content of the stream fails <END>
<BEG> the classpath a url [ ] from this configuration <END>
<BEG> the extra grab configuration <END>
<BEG> load a class use the name of the class <END>
<BEG> return the url of a resource <SEG> or null if it be not find <END>
<BEG> format a message base on { link messageformat } use the message from the resource bundle use the give code a a pattern and the give object a argument <END>
<BEG> this method tokenizes a string by space character <SEG> but ignores space in quoted part <SEG> that be part in `` or <END>
<BEG> tells if the give string be a valid java identifier <END>
<BEG> if the transform be associate with a single annotation <SEG> return a name suitable for display in error message <END>
<BEG> return returns the interruption check statement <END>
<BEG> takes a statement and wrap it into a block statement which first element be the interruption check statement <END>
<BEG> adds a new syntax error to the source unit and then continue <END>
<BEG> implementation method of the alias annotation processor <END>
<BEG> property invocation do on 'this ' reference be transform so that the invocation at runtime be do on the additional parameter 'self ' <END>
<BEG> this method exist to be binary compatible with 1 7 - 1 8 6 compile code <END>
<BEG> for compatibility with pre 2 5 compile class <END>
<BEG> mark a method a already process <END>
<BEG> called by helper when super transform be need <END>
<BEG> pushes a binary expression into the binary expression stack <END>
<BEG> returns the binary expression which be on the top of the stack <SEG> or null if there 's no such element <END>
<BEG> returns the current stack of enclose binary expression <END>
<BEG> pushes a method into the method stack <END>
<BEG> pops a method from the enclose method stack <END>
<BEG> pushes a switch statement into the switch statement stack <END>
<BEG> pops a switch statement from the enclose switch statement stack <END>
<BEG> pushes a method call into the method call stack <END>
<BEG> pops a method call from the enclose method call stack <END>
<BEG> given a class node <SEG> if this class node implement a trait <SEG> then generate all the appropriate code which delegate call to the trait <END>
<BEG> returns true if the specified class node be a trait <END>
<BEG> returns true if the specified class node be annotate with the { link trait } interface <END>
<BEG> indicates whether a method in a trait interface have a default implementation <END>
<BEG> reflection api to indicate whether some method be a bridge method to the default implementation of a trait <END>
<BEG> reflection api to find the method correspond to the default implementation of a trait <SEG> give a bridge method <END>
<BEG> converts a class implement some trait into a target class <END>
<BEG> returns the name of a method without the super trait specific prefix <END>
<BEG> find all trait associate with the give classnode param cnode the give classnode return the list of ordered trait classnodes <END>
<BEG> return the next element to be return by next without consume it <END>
<BEG> sets a new value for a give key <END>
<BEG> add a value to the list param value the value <END>
<BEG> return an iterator <SEG> which allow the removal of element <END>
<BEG> returns an array of non null element from the source array <END>
<BEG> opens an { link inputstream } read from the give url without cache the stream <END>
<BEG> this method be call by the ++ operator for enums <END>
<BEG> standard groovy size method for stringbuilders <END>
<BEG> overloads the left shift operator to provide an easy way to append multiple object a string representation to a stringbuilder <END>
<BEG> support the range subscript operator for stringbuilder <END>
<BEG> appends a string to this stringbuilder <END>
<BEG> this method be call by he handle to realize the bean constructor with property map <END>
<BEG> call by handle <END>
<BEG> guard to check if the argument be null <END>
<BEG> guard to check if the provide object have the same class a the provided class <END>
<BEG> callback for constant meta class update change <END>
<BEG> bootstrap method for method call from groovy compile code with indy enable <END>
<BEG> choose a method to replace the originally choose metamethod to have a more efficient call path <END>
<BEG> get wrapper class for a give class <END>
<BEG> realizes an unsharp equal for the class <END>
<BEG> replaces the type in the callsitetype parameter if more specific type give through the argument <END>
<BEG> apply a transformer a filter <END>
<BEG> returns the default import class : class name - & gt ; the relevant package name param packagenames the default import package name <SEG> e g <END>
<BEG> return < var > s < var > <SEG> convert to { link access } <END>
<BEG> pretty-prints the give descriptor <END>
<BEG> return the method descriptor jvms 4 3 3 <END>
<BEG> return e g <END>
<BEG> overrides { link filterreader # read char [ ] <SEG> int <SEG> int } <END>
<BEG> gets the version of the java virtual machine jvm jffi be run on <END>
<BEG> accept for the visitor pattern <END>
<BEG> gets the required argument at the beginning of the argument definition <END>
<BEG> how many scope should we burrow down to until we need to set the block variable value <END>
<BEG> gets the index within the scope construct that actually hold the eval 'd value of this local variable return returns an int offset into storage structure <END>
<BEG> set the argsnode param argsnode set the argument for this node <END>
<BEG> gets the type return the character which generate the back reference <END>
<BEG> get the name of this block argument return it 's name <END>
<BEG> rubymethod use by visitor <END>
<BEG> get the node that represent a block or a block variable <END>
<BEG> sets the value param value to set <END>
<BEG> return true if all element of this hash use symbol key might end up represent a kwarg <END>
<BEG> modifier and annotation can be mixed together in java signature <END>
<BEG> add other element to this list param other list which have element return this instance for method chaining <END>
<BEG> gets the first rescuenode <END>
<BEG> return the dynamic scope for this ast <END>
<BEG> the static scoping relationship that should get set first thing before interpretation of the code represent by this ast <END>
<BEG> first real ast node to be interpret return real top ast node <END>
<BEG> determine whether this be while or do while return true if you be a while <SEG> false if do while <END>
<BEG> return the set of all instance variable find during walk <END>
<BEG> classnode create a new scope and self <SEG> so do not search for ivars <END>
<BEG> preexenode ca n't appear in method <SEG> so do not search for ivars <END>
<BEG> get the expressionnode s <END>
<BEG> resolve the fully qualify name <END>
<BEG> returns the fully qualify attribute name of this enum constant <END>
<BEG> returns a fully qualify attribute name that correspond to a give enumerated type identifier <END>
<BEG> returns a list of all name in this map <END>
<BEG> returns the value in bivariable type to which the specify key be map <SEG> or { code null } if this map contain no mapping for the key <END>
<BEG> removes the mapping for a key from this map if it be present in a top level <END>
<BEG> adds a key-value pair of ruby local variable to double array <END>
<BEG> returns true when eager retrieval be require or false when eager retrieval be unnecessary <END>
<BEG> returns a manyvarsdynamicscope use to parse a script <END>
<BEG> returns a instance of a requested interface type from a previously evaluate script <END>
<BEG> reads up to < code > len < code > byte of data from the input stream into an array of byte <END>
<BEG> writes < code > len < code > bytes from the specify byte array start at offset < code > off < code > to this output stream <END>
<BEG> gets line number value from engine 's attribute map <END>
<BEG> api 's which can be use by embedders to construct ruby builtin core type <END>
<BEG> sets classloader base on system property <END>
<BEG> sets configuration parameter give by system property <END>
<BEG> sets jruby home if it be give by a jruby_home environment variable <SEG> jruby home system property <SEG> or jury home in jruby-complete jar param container scriptingcontainer to be set jruby home <END>
<BEG> tries to find load path for ruby file and or library <END>
<BEG> checks that a give name be an appropriate configuration parameter to choose ruby 1 9 mode <END>
<BEG> returns a possible base directory <END>
<BEG> returns enum type of this variable define in { link bivariable } <END>
<BEG> injects argv value to a parsed ruby script <END>
<BEG> removes this object from { link bivariablemap } <END>
<BEG> retrieves argv from ruby after the evaluation or method invocation <END>
<BEG> retrieves class variable from ruby after the evaluation <END>
<BEG> attempts to remove this variable from top self or receiver <END>
<BEG> sets a java object and it ruby type a a value of this object <END>
<BEG> retrieves a instance variable by key from ruby runtime after the evaluation <END>
<BEG> retrieves global variable eagerly from ruby right after the evaluation <END>
<BEG> does n't do anything since a transient local variable should not be retrieve from ruby <END>
<BEG> this method do n't do anything for performance reason <END>
<BEG> gets the exception return returns a rubyexception <END>
<BEG> author < a href= mailto : ola bini ki se > ola bini < a > version $ revision : 1 2 $ <END>
<BEG> it calculate a power of ten <SEG> which exponent could be out of 32-bit range <END>
<BEG> ported from openssh http : github com openssh openssh-portable blob 957fbceb0f3166e41b76fdb54075ab3b9cc84cba sshkey c # l942-l987 openssh license notice copyright c 2000 <SEG> 2001 markus friedl <END>
<BEG> author < a href= mailto : ola bini ki se > ola bini < a > <END>
<BEG> returns the { link org jruby runtime arity } of this function <END>
<BEG> calculates the absolute offset within the base memory pointer for a give offset <END>
<BEG> gets the size of the memory area <END>
<BEG> clears zero out the memory content <END>
<BEG> writes a 8 bit sign integer value to the memory area <END>
<BEG> reads an 8 bit sign integer value from the memory address <END>
<BEG> writes an 32 bit unsigned integer value to the memory address <END>
<BEG> reads a c long integer value from the memory area <END>
<BEG> reads a 32 bit float point value from the memory address <END>
<BEG> writes an 64 bit float point value to the memory area <END>
<BEG> creates a callbackinfo class for a ruby runtime param runtime the runtime to create the class for param module the module to place the class in return the newly create ruby class <END>
<BEG> gets the native return type the callback should return return the native return type <END>
<BEG> gets the ruby parameter type of the callback return an array of the parameter type <END>
<BEG> reads data from the native unix file descriptor <END>
<BEG> tests if the bytechannel be open <END>
<BEG> allocates native memory param runtime the ruby runtime param size the number of byte to allocate param clear whether the memory should be clear zeroed return a new { link allocateddirectmemoryio } <END>
<BEG> allocates native memory <SEG> align to a minimum boundary <END>
<BEG> creates a new jffi struct descriptor for a structlayout param layout the structure layout return a new struct descriptor <END>
<BEG> reads a nul-terminated string from native memory and box it up in a ruby string <END>
<BEG> gets the memory i o accessor to read write to the memory area <END>
<BEG> replaces the native memory object back this ruby memory object param memory the new memory i o object return the old memory i o object <END>
<BEG> creates a ruby string from a byte array and set the taint flag on it param runtime the ruby runtime param bytes the array to make into a ruby string <END>
<BEG> reads a byte binary string from a memory object <END>
<BEG> gets a nul terminate string from a memory object param runtime the ruby runtime param io the memory object to read the string from param offset the offset within the memory object to start read return a ruby string <END>
<BEG> gets the value of the struct member correspond to < tt > name < tt > <END>
<BEG> gets a ruby array of the name of all member of this struct <END>
<BEG> returns a { link member } descriptor for a struct field <END>
<BEG> a thread-based implementation of ruby 1 9 fiber library <END>
<BEG> helper for handle common posix situation where a negative return value from a function call indicate an error <SEG> and errno must be consult to determine how exactly the function fail <END>
<BEG> just enough configuration setting most do n't make sense in java to run the rubytests unit test <END>
<BEG> the parse method use an lexer stream and parse it to an ast node structure <END>
<BEG> socket class method for address <SEG> structure <SEG> and so on <END>
<BEG> returns < code > true < code > if the return value of { link subnetinfo # getaddresscount } include the network address and broadcast address <END>
<BEG> see org jruby runtime load library # load org jruby ruby <END>
<BEG> create the zlib module and add it to the ruby runtime <END>
<BEG> additional metadata about this method <END>
<BEG> creates a new global variable which link to the oldname global variable <END>
<BEG> produce a callconfiguration that represent what caller method must prepare for the method with this annotation <END>
<BEG> produce a callconfiguration name that represent what must be prepare around call to the method with this annotation <END>
<BEG> we override equal so that for method identity check we treat delegate wrapper the same a the original method <END>
<BEG> see nativecallmethod # setnativecall class <SEG> string <SEG> class <SEG> class [ ] <SEG> boolean <SEG> boolean <END>
<BEG> see nativecallmethod # getnativecall <END>
<BEG> a dummy implementation of dup that just return the singleton instance <END>
<BEG> dummy override of setimplementationclass that do nothing <END>
<BEG> nullmethod be always visible because it 's only use a a marker to break method lookup loop <END>
<BEG> see org jruby runtime iaccessor # getvalue <END>
<BEG> see org jruby runtime iaccessor # setvalue irubyobject <END>
<BEG> -- -- -- -- -- protected package field <SEG> method -- -- -- -- - <END>
<BEG> get variable that be live on entry to the cfg <END>
<BEG> -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- if this be a closure <SEG> introduce a global ensure block that spill into the bind the union of dirty var from all call sit that be n't protect by any other rescue or ensure block <END>
<BEG> compute meet over all paths solution for this dataflow problem on the input cfg <END>
<BEG> generate an ordered list of flow graph node in a forward or backward order depend on direction <END>
<BEG> individual analysis should override this <END>
<BEG> any required cleanup of state after apply transfer function <END>
<BEG> builds the data-flow variable or fact for a particular node <END>
<BEG> this be the variable that be be load from the scope <END>
<BEG> getlocalvar be save for location and should not be simplify so we still know it original depth offset <END>
<BEG> result and non-result call instruction be process with the same code so we provide this method to make that same code simpler <END>
<BEG> this be the variable that be be store into in this scope <END>
<BEG> have this interpretercontext fully build ? <END>
<BEG> we plan on run this in full interpreted mode <END>
<BEG> get all variable reference by this scope <END>
<BEG> set upon completion of irbuild of this irclosure <END>
<BEG> temporary local variable be immutable and always start from a low index value and increment up to a high index value per scope <END>
<BEG> abstract class that contain general logic for both ir compiler and ir interpreter param < r > type of return object by translator param < s > type of specific for translator object <END>
<BEG> has this object already be cache ? <END>
<BEG> do we know the value of this operand at compile-time ? <END>
<BEG> can we replace every use of a variable ' v ' that contain the value of this operand with the operand itself ? <END>
<BEG> the last instruction in the bb which will exit the bb <END>
<BEG> shorter label <END>
<BEG> the data that this pas be responsible for will get invalidate so that if this pas be then execute it will generate new pas data <END>
<BEG> static method only <SEG> for now <END>
<BEG> record current offset a the beginning of specified scope list of instruction <END>
<BEG> get record offset for this scropes instruction list <END>
<BEG> on an exception occur in this block which bb should we go to ? <END>
<BEG> what site object contain this callsiteid or die try <END>
<BEG> add ' b ' a a global ensure block that protect all unprotected block in this scope <END>
<BEG> build the control flow graph <END>
<BEG> this produce a linear list of basicblocks so that the linearized instruction list be in executable form <END>
<BEG> return a new instance of a label for the newly clone scope <END>
<BEG> note : evals make all this weird but our heuristic be such that we should not see the same callsite make a monocall across an eval within an eval be fine <END>
<BEG> created by enebo on 1 28 17 <END>
<BEG> internal helper to allocate a callable map to cache argument method match <END>
<BEG> because we ca n't physically associate an id with a java object <SEG> we can only use the identity hashcode here <END>
<BEG> hidden <END>
<BEG> get the associated javaclass for a proxy module <END>
<BEG> retieve a javaclass if the pass module class be a java proxy <END>
<BEG> returns the reified or proxied java class if the pass ruby module class have one <END>
<BEG> resolves a java class from a pass type parameter <END>
<BEG> contatenate two java array into a new one <END>
<BEG> the slow version for when concatenate a java array of a different type <END>
<BEG> get an instance of a jruby runtime <END>
<BEG> dispose of the runtime you initialize <END>
<BEG> convert the ruby object to a java object <END>
<BEG> returns the approximate size element in use of the cache <END>
<BEG> rb_make_metaclass param superclass return singleton-class for this singleton class <END>
<BEG> is the requested parse for an eval ? <END>
<BEG> if we be perform an eval we should pass exist scope in <END>
<BEG> this method return the appropriate first scope for the parser <END>
<BEG> get whether we be save the data content of the file <END>
<BEG> zero out coverable line a they 're encounter <END>
<BEG> called by coverline to grow it large enough to add new cover line <END>
<BEG> at end of a parse if coverage be enable we will do final processing of the primitive coverage array and make sure runtimes coverage data have be update with this new data <END>
<BEG> get the coverage array <SEG> indicate all coverable line <END>
<BEG> add a new variable to this current scope unless it be already define in the current scope <END>
<BEG> add a new name capture variable to this current scope <END>
<BEG> gets a constant back from lexical search from the cref in this scope <END>
<BEG> next outer most scope in list of scope <END>
<BEG> does the variable exist ? <END>
<BEG> register a keyword argument with this staticscope <END>
<BEG> populate a deduplicated collection of variable name in scope use the give function <END>
<BEG> convenience wrapper around { link # collectvariables intfunction <SEG> biconsumer } <END>
<BEG> get the live cref module associate with this scope <END>
<BEG> update current scoping structure to populate with proper cref scoping value <END>
<BEG> argument scopes represent scope which contain argument for zsuper <END>
<BEG> for all block or method associate with static scope this will return the signature for that signature-providing scope <END>
<BEG> this happen in when first define argsnodes or when reify a method from aot <END>
<BEG> stubbed out version of our own yydebug impl for debug if we ever find the need <END>
<BEG> returns a new instance of the jruby runtime configure a specify <END>
<BEG> tests whether globalruntime have be instantiate or not <END>
<BEG> clear the global runtime <END>
<BEG> get the thread-local runtime for the current thread <SEG> or null if unset <END>
<BEG> set the thread-local runtime to the give runtime <END>
<BEG> evaluates a script under the current scope perhaps the top-level scope and return the result generally the last value calculate <END>
<BEG> parse and execute the specified script this differs from the other method in that it accept a string-based script and par and run it a though it be load at a command-line <END>
<BEG> parse the script contain in the give input stream <SEG> use the give filename a the name of the script <SEG> and return the root node <END>
<BEG> run the specified script without any of the loop-processing wrapper code <END>
<BEG> get the caches management object <END>
<BEG> deprecate use # newinstance <END>
<BEG> retrieve the class with the give name from the object namespace <END>
<BEG> define a new module with the give name under the give module or class namespace <END>
<BEG> rb_define_global_const define a constant on the global namespace i e <END>
<BEG> fetch a constant from the global namespace i e <END>
<BEG> returns the true instance from the instance pool <END>
<BEG> deprecate internal api <SEG> to be hide <END>
<BEG> defines a readonly global variable <END>
<BEG> this be an internal encoding if actually specify via default_internal= or pass in via -e return null or encode <END>
<BEG> get the default java nio charset charset for the current default internal encoding <END>
<BEG> return the default internal encoding <SEG> if set <SEG> or utf-8 by default <END>
<BEG> java io outputstream o = rubyio getglobalvariables getservice $ stderr getoutstream ; if null ! = os { return new printstream o ; } else { return new printstream new org jruby util swallowingoutputstream ; } <END>
<BEG> prints an error with backtrace to the error stream <END>
<BEG> load the give basiclibraryservice instance <SEG> wrap it in ruby frame to ensure it be isolate from any parent scope <END>
<BEG> it be possible for loop or repeat execution to encounter the same end block multiple time <END>
<BEG> by default { link # teardown boolean } do not release the class-loader 's resource a thread might be still run access the class package even after the runtime have be tear down <END>
<BEG> tdod remove the synchronized <END>
<BEG> return the <SEG> for this ruby instance <SEG> configured implementation of profilingservice <SEG> or null <END>
<BEG> construct a nameerror that format it message with an sprintf format string <END>
<BEG> construct a nameerror with the give pre-formatted message <SEG> name <SEG> and optional original exception <END>
<BEG> construct a nomethoderror with a pre-formatted message <END>
<BEG> get_vm_state_version <END>
<BEG> inc_vm_state_version <END>
<BEG> get a new serial number for a new dynamicmethod instance return a new serial number <END>
<BEG> get a new generation number for a module or class <END>
<BEG> get the runtime-global selector pool return a selectorpool from which to getservice selector instance <END>
<BEG> get the core class runtimecache instance <SEG> for do dynamic call from core class method <END>
<BEG> add a method <SEG> so it can be print out later <END>
<BEG> mark fixnum a reopen <END>
<BEG> retrieve the invalidator for fixnum reopen <END>
<BEG> whether the float class have be reopen and modify <END>
<BEG> given a ruby string <SEG> cache a frozen <SEG> duplicated copy of it <SEG> or find an exist copy already prepare <END>
<BEG> see org jruby compiler constantizable <END>
<BEG> set the base class # new method <END>
<BEG> will invoke a name method with no argument and no block <END>
<BEG> will invoke a name method with one argument and no block with functional invocation <END>
<BEG> will invoke a name method with the supplied argument and no block with functional invocation <END>
<BEG> does this object represent nil ? <END>
<BEG> is this value a truthy value or not ? <END>
<BEG> obj_infect infects this object with trait from the argument obj <END>
<BEG> is this value freeze or not ? <END>
<BEG> if exist return the meta-class else return the type of the object <END>
<BEG> rb_singleton_class note : this method be specialize for rubyfixnum <SEG> rubysymbol <SEG> rubynil and rubyboolean will either return the exist singleton class for this object <SEG> or create a new one and return that <END>
<BEG> rb_make_metaclass will create a new meta class <SEG> insert this in the chain of class for this specific object <SEG> and return the generated meta class <END>
<BEG> does this object respond to the specify message ? <END>
<BEG> will return the runtime that this object be associate with <END>
<BEG> will return the java interface that most closely can represent this object <SEG> when work through java integration translation <END>
<BEG> rb_to_id will try to convert this object to a string use the ruby to_str if the object be n't already a string <END>
<BEG> rb_obj_as_string first convert this object into a string use the to_s method <SEG> infect it with the current taint and return it <END>
<BEG> tries to convert this object to a ruby array use the to_ary method <END>
<BEG> raw id string be not properly encode but in an iso_8859_1 form <END>
<BEG> rb_check_string_type tries to return a coerced string representation of this object <SEG> use to_str <END>
<BEG> rb_check_array_type returns the result of try to convert this object to an array with to_ary <END>
<BEG> see irubyobject # tojava <END>
<BEG> lots of mri object keep their state in non-lookupable ivars e : g range <SEG> struct <SEG> etc <END>
<BEG> rb_inspect the internal helper that ensure a rubystring instance be return so dangerous casting can be omit preferred over callmethod context <SEG> inspect <END>
<BEG> specifically polymorphic method that be mean to be override by module to specify that they be module in an easy way <END>
<BEG> compares this ruby object with another <END>
<BEG> helper method for check equality <SEG> first use java identity equality <SEG> and then call the == method <END>
<BEG> method use for hash key comparison specialize for string <SEG> symbol and fixnum will by default just call the ruby method eql ? <END>
<BEG> adds the specified object a a finalizer for this object <END>
<BEG> remove all the finalizers for this object <END>
<BEG> gets a name list of all variable in this object <END>
<BEG> checks if the variable table contain a variable of the specify name <END>
<BEG> removes the entry with the specify name from the variable table <SEG> and return the remove value <END>
<BEG> synchronize the variable table with the argument <END>
<BEG> dummy method to avoid a cast <SEG> and to avoid pollute the irubyobject interface with all the instance variable management method <END>
<BEG> rb_obj_equal will use java identity equality <END>
<BEG> rb_obj_equal just like == and equal ? <END>
<BEG> obj_respond_to respond_to ? <END>
<BEG> rb_obj_id will return the hash code of this object <END>
<BEG> rb_obj_taint call-seq : obj taint - > obj marks < i > obj < i > a taint -- -if the < code > $ safe < code > level be set appropriately <SEG> many method call which might alter the running program environment will refuse to accept tainted string <END>
<BEG> rb_obj_untaint call-seq : obj untaint = > obj removes the taint from < i > obj < i > <END>
<BEG> rb_obj_singleton_methods call-seq : obj singleton_methods all=true = > array returns an array of the name of singleton method for < i > obj < i > <END>
<BEG> rb_obj_method call-seq : obj method sym = > method looks up the name method a a receiver in < i > obj < i > <SEG> return a < code > method < code > object or raise < code > nameerror < code > <END>
<BEG> rb_any_to_a call-seq : obj to_a - > anarray returns an array representation of < i > obj < i > <END>
<BEG> rb_obj_extend call-seq : obj extend module <SEG> = > obj adds to _obj_ the instance method from each module give a a parameter <END>
<BEG> rb_obj_pattern_match call-seq : obj =~ other = > nil pattern match -- -overridden by descendent notably < code > regexp < code > and < code > string < code > to provide meaningful pattern-match semantics <END>
<BEG> invert the match operator <END>
<BEG> rb_obj_instance_variables call-seq : obj instance_variables = > array returns an array of instance variable name for the receiver <END>
<BEG> this method be just a wrapper around the ruby == method <SEG> provide so that rubyobjects can be use a key in the java hashmap object underlie rubyhash <END>
<BEG> override the object # hashcode method to make sure that the ruby hash be actually use a the hashcode for ruby object <END>
<BEG> rb_cmperr <END>
<BEG> cmp_equal cmp_eq inlined here <END>
<BEG> cmp_ge <END>
<BEG> cmp_lt <END>
<BEG> return all entry for this dir <END>
<BEG> returns an array contain all of the filename in the give directory <END>
<BEG> changes the root directory only allow by super user <END>
<BEG> executes the block once for each entry in the directory except for <END>
<BEG> returns the home directory of the current user or the name user if give <END>
<BEG> returns the next entry from this directory <END>
<BEG> moves position in this directory to the first entry <END>
<BEG> similar to getdir <SEG> but performs different check to match rmdir behavior <END>
<BEG> todo : this version be well than the hackish previous one <END>
<BEG> the intent here be to gather up any option that might have be specify in the shebang line and return them so they can be merge into the one specify on the command-line <END>
<BEG> ensure that the jvm process ' native environment will be update when env be modify <END>
<BEG> add a give bundle to jruby <END>
<BEG> true if we be only use source from stdin and not from a -e or file argument <END>
<BEG> set whether we should only look at stdin for source <END>
<BEG> whether to mask java line in the ruby backtrace <SEG> a mri do for c call <END>
<BEG> set whether to mask java line in the ruby backtrace <END>
<BEG> set whether to use the self-first jruby classloader <END>
<BEG> true if colorize backtraces be enable <END>
<BEG> set to true to enable colorized backtraces <END>
<BEG> whether to use a single global lock for require <END>
<BEG> set whether to use a single global lock for require <END>
<BEG> set whether the jit compiler should run in a background thread executor-based <END>
<BEG> get whether the jit compiler will run in a background thread <END>
<BEG> set whether to load and setup bundler on startup <END>
<BEG> whether to load and setup bundler on startup <END>
<BEG> set whether kernel # gsub should be define <END>
<BEG> get kernel # gsub be define or not <END>
<BEG> get whether uppercase package name will be honor <END>
<BEG> int_upto <END>
<BEG> int_downto <END>
<BEG> int_succ <END>
<BEG> int_chr <END>
<BEG> int_ord <END>
<BEG> int_to_i <END>
<BEG> mri : rb_int_round <END>
<BEG> integer_to_r <END>
<BEG> integer_rationalize <END>
<BEG> rb_gcdlcm <END>
<BEG> rb_int_induced_from <END>
<BEG> convenience method for object that be undumpable <END>
<BEG> match_captures <END>
<BEG> match_aref <END>
<BEG> match_size <END>
<BEG> match_offset <END>
<BEG> match_pre_match <END>
<BEG> match_post_match <END>
<BEG> match_string <END>
<BEG> returns the natural logarithm of x <END>
<BEG> returns the base 10 logarithm of x <END>
<BEG> x = mantissa 2 exponent where mantissa be in the range of [ 5 <SEG> 1 <END>
<BEG> rb_to_id return a string representation of the symbol <END>
<BEG> return an id string e g <END>
<BEG> print a string for internal debugging purpose <END>
<BEG> make an instance variable out of this symbol e g <END>
<BEG> when we know we need an entry in the symbol table because the provide name will be need to be access a a valid identifier later we can call this <END>
<BEG> retrieve an id symbol but call the handler before any new symbol be add to the symbol table <END>
<BEG> rubysymbol be create by pass in a string and byte be extract from that <END>
<BEG> short circuit for symbol key comparison <END>
<BEG> is the string this constant represent a valid constant identifier name <END>
<BEG> symbol class method <END>
<BEG> return the symbol in the symbol table if it exist <SEG> null otherwise <END>
<BEG> generic identifier symbol creation or retrieval method <END>
<BEG> generic identifier symbol creation or retrieval method that invoke a handler before store new symbol <END>
<BEG> create a symbol whose intention be to be use a a constant <END>
<BEG> get an integrated ruby java backtrace if the current gather type be normal param context param javatrace return <END>
<BEG> deprecate use { link # logcaller org jruby runtime backtrace rubystacktraceelement [ ] } <END>
<BEG> deprecate use { link # logwarning org jruby runtime backtrace rubystacktraceelement [ ] <END>
<BEG> is the current block a real yield'able block instead a null one return true if this be a valid block or false otherwise <END>
<BEG> yield to this block <SEG> usually pass to the current call <END>
<BEG> get parent capture scope <END>
<BEG> returns the n-th parent scope of this scope <END>
<BEG> variation of getvalue for depth 0 <END>
<BEG> getvalue for index 0 <SEG> depth 0 <END>
<BEG> variation of getvalue that check for null <SEG> return and set the give value presumably nil <END>
<BEG> getvalueornil for depth 0 <END>
<BEG> set value in current dynamic scope or one of it captured scope <END>
<BEG> setvalue for depth zero param value to set param offset zero-indexed value that represent where variable life <END>
<BEG> set value zero in this scope ; <END>
<BEG> set value one in this scope <END>
<BEG> find an encode give a ruby object <SEG> coerce it to a string in the process <END>
<BEG> get a java nio charset for the give encoding <SEG> or null if impossible param encode the encode return the charset <END>
<BEG> find a non-special encoding <SEG> raise argument error if it do not exist <END>
<BEG> author headius author hooligan495 changed event hook to an enum that manage a collection of event handler <END>
<BEG> update the frame with caller information and method name <SEG> so it will show up correctly in call stack <END>
<BEG> update the frame base on information from another frame <END>
<BEG> clear the frame <SEG> a when the call completes <END>
<BEG> clone this frame for use in backtraces only avoid long-lived reference to other element <END>
<BEG> return class that we be call against return the class we be call against <END>
<BEG> set the class we be call against <END>
<BEG> get the self associate with this frame return the self for the frame <END>
<BEG> set the self associate with this frame param self the new value of self <END>
<BEG> get the visibility at the time of this frame return the visibility <END>
<BEG> get the actual incoming signature for this call site <END>
<BEG> get the full signature equivalent to this call site <END>
<BEG> retrieve the variable 's value from the give object <END>
<BEG> set this variable into the give object use unsafe to ensure safe creation or growth of the variable table <END>
<BEG> set the give variable index into the specify object <END>
<BEG> whether this table have be use to allocate space for an object_id <END>
<BEG> get the object_id from a give rubybasicobject <SEG> possibly allocate space for it <END>
<BEG> get the variable accessor for the give name with intent to use it for write <END>
<BEG> retrieve the read accessor for object_id for read <END>
<BEG> retrieve the read accessor for ffi handle <END>
<BEG> retrieve the ffi ext handle for the give object <END>
<BEG> set the ffi handle for the give object <END>
<BEG> get the size of the variable table <SEG> exclude extra var object_id <SEG> etc <END>
<BEG> get a map represent all variable register in the variable table <END>
<BEG> get an array of all the know instance variable name <END>
<BEG> sync one this object 's variable with other 's - this be use to make rbclone work correctly <END>
<BEG> allocate a new variableaccessor for the name variable <END>
<BEG> retrieve the lazy accessor variableaccessorfield for object_id <END>
<BEG> retrieve the lazy accessor variableaccessorfield for ffi handle <END>
<BEG> try to locate an extension service in the current classloader resource <END>
<BEG> load serialize ir from the class file request <END>
<BEG> check if the give constantcache be non-null and valid <SEG> give the target module <END>
<BEG> create a new constant representation for this object <SEG> conform to the give concrete type <END>
<BEG> begin profile a new method <SEG> aggregate the current time diff in the previous method 's profile slot <END>
<BEG> fall back to previously profile method after current method have return <END>
<BEG> clear the gathered profiling invocation data <END>
<BEG> compute the profiling result from gather data <END>
<BEG> pregenerate a number of scope shape to the path give <END>
<BEG> get value from current scope or one of it captured scope <END>
<BEG> make a large dynamic scope if the static scope grow <END>
<BEG> fibers must use the same recursion guard a their parent thread <END>
<BEG> check if a scope be present on the call stack <END>
<BEG> render the current backtrace a a string to the give stringbuilder <END>
<BEG> create an array with backtrace information for kernel # caller param level param length return an array with the backtrace <END>
<BEG> create an array contain thread : :backtrace : :location object for the requested caller trace level and length <END>
<BEG> return a single rubystacktraceelement represent the near ruby stack trace element <END>
<BEG> is this thread actively trace at this moment <END>
<BEG> set whether we be actively trace or not on this thread <END>
<BEG> return a binding represent the current call 's state return the current binding <END>
<BEG> return a binding represent the current call 's state but with a specify self param self the self object to use return the current binding <SEG> use the specify self <END>
<BEG> return a binding represent the current call 's state but with the specify visibility and self <END>
<BEG> return a binding represent the current call 's state but with the specified visibility <SEG> scope <SEG> and self <END>
<BEG> get the profile collection for this thread threadcontext <END>
<BEG> this method will split a string and call a visitor for each segment between the split pattern <END>
<BEG> utility method to generate the command-line output string for help <SEG> extend option <SEG> property <SEG> version <SEG> and copyright string <END>
<BEG> construct the backing store map for this weakvaluedmap <END>
<BEG> converts supply bytelist into a double <END>
<BEG> return the element with the give key <END>
<BEG> rb_is_class_id and is_class_id <END>
<BEG> rb_is_instance_id and is_instance_id <END>
<BEG> rb_is_global_id and is_global_id <END>
<BEG> rb_is_local_id and is_local_id <END>
<BEG> we store ir special variable e g <END>
<BEG> check the syntax of a ruby variable <SEG> include that it 's long than zero character <SEG> and start with either an or a capital letter <END>
<BEG> unwrap all filter stream between the give stream and it actual unfiltered stream <END>
<BEG> unwrap the give stream to it first non-filteroutputstream <END>
<BEG> get a selector from the pool or create a new one <END>
<BEG> put a selector back into the pool <END>
<BEG> clean up a pool <END>
<BEG> this class get specially load directly in the jrubyclassloader so that we can unregister all jdbc driver that be load registered <END>
<BEG> deprecate prefer use { link # getlogger java lang class } if possible <END>
<BEG> message pattern { } substitution <END>
<BEG> returns the environment a a hash of ruby string <END>
<BEG> returns java system property a a map < rubystring <SEG> rubystring > <END>
<BEG> see pack # unpackwithblock threadcontext <SEG> ruby <SEG> bytelist <SEG> bytelist <SEG> block param context param encode param formatstring return unpacked array <END>
<BEG> decodes < i > str < i > which may contain binary data accord to the format string <SEG> return an array of each value extract <END>
<BEG> rb_uv_to_utf8 <END>
<BEG> same a pack but default taint of output to false <END>
<BEG> encodes a string with the quoted printable <SEG> mime encode see rfc2045 <END>
<BEG> perl 's hash implementation <END>
<BEG> this regexp have an explicit encoding flag or 'nesu ' letter associate with it <END>
<BEG> whether the kcode associate with this regexp be implicit aka default or be specify explicitly via 'nesu ' syntax postscript or flag to regexp new <END>
<BEG> calculate the encoding base on kcode option set via 'nesu ' <END>
<BEG> this int value can be use by compiler or any place where we want an integer representation of the state of this object <END>
<BEG> this int value be mean to only be use when deal directly with the joni regular expression library <END>
<BEG> heuristic test if we should look close at the value param s the non-null input string return < code > true < code > if the value be suspicious <SEG> < code > false < code > otherwise <END>
<BEG> safe parsing of a string into a double param s the input string <SEG> can be null return the double value <END>
<BEG> safe way of get the double value < br > prevents bigdecimal from call double parsedouble param number return the double value <END>
<BEG> safe way of parse a double value from a string param s the input string return the double value <END>
<BEG> an extension over < code > boolean getboolean < code > method <END>
<BEG> an extension over < code > system getproperty < code > method that additionally produce an int value <END>
<BEG> returns < code > true < code > if the access to the system property be restrict i e <SEG> when system getproperty throw securityexception <END>
<BEG> ports date_zone_to_diff from ext date date_parse c in mri 2 3 1 under bsdl <END>
<BEG> return the class or package where the callable should be locate <SEG> usually specify on the lhs of the ' : : ' operator <END>
<BEG> return kotlin name of the callable <SEG> the one which be declare in the source code jvmname do n't change it <END>
<BEG> get maximum i such that < tt > start < = i < = end < tt > and < tt > s substring start <SEG> i < tt > fit jvm utf string encode limit <END>
<BEG> get a copy of the super block 's local without any trail top type <END>
<BEG> returns result expression node just after open bracket <END>
<BEG> sets result expression <SEG> and set it parent to this node <END>
<BEG> returns loop list <END>
<BEG> sets loop list throw illegalargumentexception if loop be { code null } <END>
<BEG> adds a child loop node <SEG> and set it parent to this node <END>
<BEG> returns position of 'if ' keyword <SEG> -1 if not present <END>
<BEG> sets position of 'if ' keyword <END>
<BEG> returns filter leave paren position <SEG> or -1 if no filter <END>
<BEG> throws an exception on attempt to set the loop body <END>
<BEG> returns the element list return the element list <END>
<BEG> sets the element list <SEG> and set each element 's parent to this node <END>
<BEG> adds an element to the list <SEG> and set it parent to this node <END>
<BEG> returns the number of element in this { code array } literal <SEG> include empty element <END>
<BEG> returns destructuring length <END>
<BEG> marks this node a be a destructuring form - that be <SEG> appear in a context such a { code for [ a <SEG> b ] in } where it 's the target of a destructuring assignment <END>
<BEG> returns true if this node be in a destructuring position : a function parameter <SEG> the target of a variable initializer <SEG> the iterator of a for in loop <SEG> etc <END>
<BEG> returns comment set return comment set <SEG> sort by start position <END>
<BEG> add a comment to the comment set <END>
<BEG> visits the comment node in the order they appear in the source code <END>
<BEG> a debug-printer that include comment at the end <END>
<BEG> returns the intended label of this break statement return the break label <END>
<BEG> sets the intended label of this break statement <SEG> e g <END>
<BEG> returns the statement to break to return the break target <END>
<BEG> sets the statement to break to <END>
<BEG> returns catch variable node return catch variable <END>
<BEG> sets catch variable node <SEG> and set it parent to this node <END>
<BEG> returns catch body <END>
<BEG> sets the comment style param type the comment style <SEG> a { link org mozilla javascript token commenttype } <END>
<BEG> set the comment value with the new commentstring <END>
<BEG> returns test expression <END>
<BEG> sets test expression <SEG> and set it parent <END>
<BEG> sets expression to evaluate if test be true <SEG> and set it parent to this node <END>
<BEG> returns position of ? <END>
<BEG> returns position of : token <END>
<BEG> sets position of : token param colonposition position of : token <END>
<BEG> returns continue target <END>
<BEG> returns source position of while keyword <END>
<BEG> returns the object on which the element be be fetch <END>
<BEG> sets leave bracket position <END>
<BEG> returns right bracket position <SEG> -1 if miss <END>
<BEG> sets right bracket position <SEG> -1 if not present <END>
<BEG> returns loop iterator expression <END>
<BEG> sets loop iterator expression : the part before the in or of keyword <END>
<BEG> returns object be iterate over <END>
<BEG> sets position of in or of keyword param inposition position of in or of keyword <SEG> or -1 if not present e g <END>
<BEG> sets position of each keyword param eachposition position of each keyword <SEG> or -1 if not present <END>
<BEG> returns loop initializer variable declaration list <END>
<BEG> sets node evaluate to the function to call <SEG> and set it parent to this node <END>
<BEG> returns function argument list return function argument list <SEG> or an empty immutable list if there be no argument <END>
<BEG> sets function argument list param argument function argument list <END>
<BEG> returns function name return function name <SEG> { code null } for anonymous function <END>
<BEG> returns the function name a a string return the function name <SEG> { code } if anonymous <END>
<BEG> returns the function parameter list return the function parameter list <END>
<BEG> sets the function parameter list <SEG> and set the parent for each element of the list <END>
<BEG> returns true if the specify { link astnode } node be a parameter of this function node <END>
<BEG> returns whether this be a 1 8 function closure <END>
<BEG> return true if this function require an ecma-262 activation object <END>
<BEG> returns the function type statement <SEG> expr <SEG> statement expr <END>
<BEG> returns if condition <END>
<BEG> sets statement to execute if condition be true throw illegalargumentexception if thenpart be { code null } <END>
<BEG> returns statement to execute if condition be false <END>
<BEG> sets statement to execute if condition be false param elsepart statement to execute if condition be false <END>
<BEG> returns position of else keyword <SEG> or -1 <END>
<BEG> jumps be only use directly during code generation <SEG> and do not support this interface <END>
<BEG> sets the label text throw illegalargumentexception if name be { code null } or the empty string <END>
<BEG> sets label list <SEG> set the parent of each label in the list <END>
<BEG> adds a label and set it parent to this node <END>
<BEG> returns label with specify name from the label list for this labeled statement <END>
<BEG> sets variable list <END>
<BEG> returns body statement or expression <END>
<BEG> sets the node 's identifier throw illegalargumentexception if identifier be null <END>
<BEG> returns the { link scope } in which this { code name } be defined <END>
<BEG> return true if this node be know to be define a a symbol in a lexical scope other than the top-level global scope <END>
<BEG> returns initializer object <SEG> if any <END>
<BEG> sets initializer object <END>
<BEG> sets the node 's value throw illegalargumentexception } if value be { code null } <END>
<BEG> sets the node 's { code double } value <END>
<BEG> sets the element list <SEG> and update the parent of each element <END>
<BEG> returns the expression between the parens <END>
<BEG> returns regexp flag <SEG> { code null } or if no flag specify <END>
<BEG> sets regexp flag <END>
<BEG> returns return value <SEG> { code null } if return value be void <END>
<BEG> return a list of the scope whose parent be this scope <END>
<BEG> used by the parser ; not intend for typical use <END>
<BEG> returns current script or function scope <END>
<BEG> creates a new scope node <SEG> move symbol table information from scope to the new node <SEG> and make scope a nested scope contain by the new node <END>
<BEG> copies all symbol from source scope to dest scope <END>
<BEG> returns the scope in which this name be define param name the symbol to look up return this { link scope } <SEG> one of it parent scope <SEG> or { code null } if the name be not define any this scope chain <END>
<BEG> looks up a symbol in this scope <END>
<BEG> enters a symbol into this scope <END>
<BEG> returns the symbol table for this scope <END>
<BEG> returns a copy of the child list <SEG> with each child cast to an { link astnode } <END>
<BEG> returns the uri <SEG> path or descriptive text indicate the origin of this script 's source code <END>
<BEG> returns a canonical version of the source for this script or function <SEG> for use in implement the { code object tosource } method of javascript object <END>
<BEG> sets base start line number for this script or function <END>
<BEG> called by irfactory to add a regexp to the regexp table <END>
<BEG> assign every symbol a unique integer index <END>
<BEG> returns the character use a the delimiter for this string <END>
<BEG> returns statement list <SEG> which may be { code null } <END>
<BEG> adds a statement to the end of the statement list <END>
<BEG> returns case statement list <END>
<BEG> sets case statement list <SEG> and set the parent of each child case to this node <END>
<BEG> adds a switch case statement to the end of the list <END>
<BEG> returns the scope in which this symbol be enter <END>
<BEG> sets try block <END>
<BEG> add a catch-clause to the end of the list <SEG> and set it parent to this node <END>
<BEG> returns position of { code finally } keyword <SEG> if present <SEG> or -1 <END>
<BEG> sets operator & ndash ; same a { link # settype } <SEG> but throw an exception if the operator be invalid throw illegalargumentexception if operator be not a valid token code <END>
<BEG> sets the operand <SEG> and set it parent to be this node <END>
<BEG> sets whether the operator be postfix <END>
<BEG> sets variable list throw illegalargumentexception if variable list be { code null } <END>
<BEG> adds a variable initializer node to the child list <END>
<BEG> sets the node type and return this node <END>
<BEG> returns true if this be a { code var } not { code const } or { code let } declaration <END>
<BEG> returns true if this be a { link token # const } declaration <END>
<BEG> returns true if this node represent a statement <END>
<BEG> set or unset the statement flag <END>
<BEG> sets the statement and set it parent link throw illegalargumentexception } if statement be { code null } <END>
<BEG> returns right paren offset <END>
<BEG> returns leave bracket position <SEG> or -1 if miss <END>
<BEG> returns whether this be part of an xml attribute value <END>
<BEG> returns fragment list - a list of expression node <END>
<BEG> sets fragment list <SEG> remove any exist fragment first <END>
<BEG> returns the object on which the xml member-ref expression be be evaluate <END>
<BEG> returns position of { code } -token <SEG> or -1 if this be not an attribute-access expression <END>
<BEG> sets position of { code } -token <SEG> or -1 <END>
<BEG> returns position of { code : : } token <SEG> or -1 if not present <END>
<BEG> sets the string for this xml component <END>
<BEG> returns the xml string for this component <END>
<BEG> search for classcache object in the give scope <END>
<BEG> associate classcache object with the give top-level scope <END>
<BEG> empty cache of generate java class and java reflection information <END>
<BEG> check if generate java class and java reflection information be cache <END>
<BEG> return a map from class to associated javamembers object <END>
<BEG> internal engine method to return serial number for generated class to ensure name uniqueness <END>
<BEG> returns true if this script have a base uri and have a source uri that be contain within that base uri <END>
<BEG> returns the internal concurrency level utilize by cache in this jvm <END>
<BEG> returns the reader return the source text of the module <END>
<BEG> returns the object represent the security domain for the module 's source <END>
<BEG> returns the uri of the module source text <END>
<BEG> override to determine whether accord to the validator <SEG> the cached module script need revalidation <END>
<BEG> returns the content type without charset declaration of the mime type <END>
<BEG> can be override in subclass to customize the url connection opening process <END>
<BEG> calling this method establish a module a be the main module of the program to which this require instance belongs <END>
<BEG> sets the script that should execute in every module 's scope after the module 's own script have execute <END>
<BEG> specify whether or not source information should be generate <END>
<BEG> turn on or off generation of code with callback to track the count of executed instruction <END>
<BEG> puts the parser in ide mode <END>
<BEG> mozilla source use the c preprocessor <END>
<BEG> returns a { code compilerenvirons } suitable for use rhino in an ide environment <END>
<BEG> set continuation object <END>
<BEG> return internal continuation state <END>
<BEG> store an arbitrary object that application can use to associate their state with the continuation <END>
<BEG> return arbitrary application state <END>
<BEG> retrieve the delegee <END>
<BEG> see org mozilla javascript symbolscriptable # put symbol <SEG> scriptable <SEG> object <END>
<BEG> gets the message correspond to the error <END>
<BEG> get maximum id findinstanceidinfo can generate <END>
<BEG> map name to id of instance property <END>
<BEG> set or delete id value <END>
<BEG> utility method to construct type error to indicate incompatible call when convert script thisobj to a particular type be not possible <END>
<BEG> add < i > listener < i > to < i > bag < i > of listener <END>
<BEG> get listener at < i > index < i > position in < i > bag < i > or null if < i > index < i > equal to number of listener in < i > bag < i > <END>
<BEG> get encode source string <END>
<BEG> get integer value assign with key <END>
<BEG> get the name of the class for main method implementation <END>
<BEG> get the compiler environment the compiler use <END>
<BEG> get the interface that the generated target will implement <END>
<BEG> gets a java-compatible informative name for the the scriptorfnnode <END>
<BEG> get the class of the top-most stack element represent a script <END>
<BEG> render stack element in mozilla firefox style : < code > functionname filename : linenumber < code > param sb the stringbuilder to append to <END>
<BEG> render stack element in v8 style : < code > at functionname filename : linenumber : columnnumber < code > or : < code > at filename : linenumber : columnnumber < code > param sb the stringbuilder to append to <END>
<BEG> look up the top-most element in the current stack represent a script and return it protection domain <END>
<BEG> adds a qualified name to the list of object to be exclude from serialization <END>
<BEG> returns true if the name be exclude from serialization <END>
<BEG> removes a name from the list of name to exclude <END>
<BEG> adds the name of the standard object and their prototype to the list of excluded name <END>
<BEG> before insert a new item in the map <SEG> check and see if we need to expand from the embed map to a hashmap that be more robust against large number of hash collision <END>
<BEG> tells the debugger to break at the next opportunity <END>
<BEG> switches context to the stack frame with the give index <END>
<BEG> sets whether the debugger should break on exception <END>
<BEG> sets whether the debugger should break on function enter <END>
<BEG> attaches the debugger to the give contextfactory <END>
<BEG> returns the functionsource object for the function with the give name <END>
<BEG> resumes execution of script <END>
<BEG> returns the debugger window { link jframe } <END>
<BEG> sets the scope to be use for script evaluation <END>
<BEG> frees any resource hold by the debugger <END>
<BEG> entry point for embedded application <END>
<BEG> deprecate the method be only present for compatibility and should not be call <END>
<BEG> returns the menubar of this debugger frame <END>
<BEG> sets the { link runnable } that will be run when the exit menu item be choose <END>
<BEG> returns the debugger console component <END>
<BEG> records a new internal frame <END>
<BEG> shows the line at which execution in the give stack frame just stop <END>
<BEG> update the source text for < code > sourceinfo < code > <END>
<BEG> calls { link jsplitpane # setresizeweight } via reflection <END>
<BEG> called when the source text for a script have be update <END>
<BEG> processes the next gui event <END>
<BEG> returns the tree that be be share between the model <END>
<BEG> invokes firetabledatachanged after all the pending event have be process <END>
<BEG> set object value of the key <END>
<BEG> return < code > false < code > if result of java method <SEG> which be instance of < code > string < code > <SEG> < code > number < code > <SEG> < code > boolean < code > and < code > character < code > <SEG> should be use directly a javascript primitive type <END>
<BEG> custom < tt > + < tt > operator <END>
<BEG> todo : need encapsulation <END>
<BEG> todo : rename this <SEG> at the very least <END>
<BEG> return the last added element <END>
<BEG> todo : too general ; this should be split into overloaded method <END>
<BEG> todo will probably end up unnecessary a we move thing around <END>
<BEG> if list be empty <SEG> return undefined <SEG> if element have different parent return undefined <SEG> if they all have the same parent <SEG> return that parent <END>
<BEG> force all bit of the hash to avalanche <END>
<BEG> hashcode algorithm be drive by the requirement impose by primitive equality semantics <SEG> namely that equal object have equal hashcodes <END>
<BEG> just throw an exception <END>
<BEG> converts this buffer 's sub-region into a nio buffer <END>
<BEG> returns the { code position } of this buffer <END>
<BEG> returns { code true } if and only if { code available } be great than { code 0 } <END>
<BEG> gets an unsigned 32-bit integer at the current { code position } and increase the { code position } by { code 4 } in this buffer <END>
<BEG> transfers this buffer 's data to a newly create buffer start at the current { code position } and increase the { code position } by the number of the transferred byte = { code length } <END>
<BEG> returns a new slice of this buffer 's sub-region starting at the current { code position } and increase the { code position } by the size of the new slice = { code length } <END>
<BEG> transfers this buffer 's data to the specify destination start at the current { code position } and increase the { code position } by the number of the transferred byte = { code length } <END>
<BEG> transfers this buffer 's data to the specify destination start at the current { code position } until the destination 's position reach it limit <SEG> and increase the { code position } by the number of the transfer byte <END>
<BEG> dumps the stats to the print stream in a json format <END>
<BEG> debug be never enable <END>
<BEG> delegates to the < code > iserrorenabled < code > method of the wrapped < code > org slf4j logger < code > instance <END>
<BEG> converts the first input parameter to string and then delegate to the debug method of the wrapped < code > org slf4j logger < code > instance <END>
<BEG> converts the input parameter to string and then delegate to the wrap < code > org slf4j logger < code > instance <END>
<BEG> converts the first input parameter to string and then delegate to the wrap < code > org slf4j logger < code > instance <END>
<BEG> call the < code > doappend < code > method on all attach appenders <END>
<BEG> returns the syslog equivalent of this priority a an integer <END>
<BEG> returns { code true } if this level have a high or equal level than the level pass a argument <SEG> { code false } otherwise <END>
<BEG> returns all possible priority a an array of level object in descend order <END>
<BEG> param val the value of the priority <END>
<BEG> read configuration option from configuration file <END>
<BEG> read configuration option from < code > property < code > <END>
<BEG> read configuration option from url < code > configurl < code > <END>
<BEG> like { link # configureandwatch string <SEG> long } except that the default delay a define by filewatchdog default_delay be use <END>
<BEG> read the configuration file < code > configfilename < code > if it exist <END>
<BEG> return this event 's throwable 's string [ ] representaion <END>
<BEG> close this appender instance <END>
<BEG> the writerappender require a layout <END>
<BEG> logs a message with < code > org apache avalon framework logger logger debug < code > <END>
<BEG> is log to < code > org apache avalon framework logger logger fatalerror < code > enable ? <END>
<BEG> logs a message with < code > java util log level fine < code > <END>
<BEG> return the native logger instance we be use <END>
<BEG> check whether the log4j logger use be enable for < code > error < code > priority <END>
<BEG> return an array contain the name of all currently define configuration attribute <END>
<BEG> < p > construct if necessary and return a < code > log < code > instance <SEG> use the factory 's current set of configuration attribute < p > < p > < strong > note < strong > - depending upon the implementation of the < code > logfactory < code > you be use <SEG> the < code > log < code > instance you be return may or may not be local to the current application <SEG> and may or may not be return again on a subsequent call with the same name argument < p > param name logical name of the < code > log < code > instance to be return the meaning of this name be only know to the underlie logging implementation that be be wrap exception logconfigurationexception if a suitable < code > log < code > instance can not be return <END>
<BEG> release any internal reference to previously create { link org apache common log log } instance return by this factory <END>
<BEG> set the configuration attribute with the specify name <END>
<BEG> return the fully qualified java classname of the { link log } implementation we will be use <END>
<BEG> is < em > jdk 1 3 with lumberjack < em > log available ? <END>
<BEG> checks whether the supplied throwable be one that need to be re-thrown and ignore all others <END>
<BEG> construct if necessary and return a < code > logfactory < code > instance <SEG> use the following ordered lookup procedure to determine the name of the implementation class to be load <END>
<BEG> convenience method to return a name logger <SEG> without the application have to care about factory <END>
<BEG> release any internal reference to previously create { link logfactory } instance that have be associate with the specified class loader if any <SEG> after call the instance method < code > release < code > on each of them <END>
<BEG> release any internal reference to previously create { link logfactory } instance <SEG> after call the instance method < code > release < code > on each of them <END>
<BEG> return the thread context class loader if available ; otherwise return null <END>
<BEG> indicates true if the user have enable internal logging <END>
<BEG> returns a string that uniquely identify the specified object <SEG> include it class <END>
<BEG> set the log implementation log implementation factory by class <END>
<BEG> returns a { link string } array contain the name of all log know to me <END>
<BEG> attempts to create a { link locale } base on the { code org jboss log locale } system property <END>
<BEG> returns the value for the key or { code null } if no value be find <END>
<BEG> clears the message diagnostics context <END>
<BEG> get a message bundle of the give type <END>
<BEG> retrieves the current value set for the nested diagnostics context <END>
<BEG> the current depth of the nested diagnostics context <END>
<BEG> peeks at the top value from the stack and return it <END>
<BEG> pushes a value to the nested diagnostics context stack <END>
<BEG> sets maximum depth of the stack remove any entry below the maximum depth <END>
<BEG> simple log method <END>
<BEG> get the logger plugin delegate return the delegate <END>
<BEG> issue a log msg with a level of trace <END>
<BEG> issue a log msg and throwable with a level of trace and a specific logger class name <END>
<BEG> issue a log message with parameter and a throwable with a level of trace <END>
<BEG> issue a format log message with a level of trace <END>
<BEG> issue a log message with parameter with a level of debug <END>
<BEG> get a logger instance with the give name use the give resource bundle if support by the underlying framework <END>
<BEG> generates the conversion pattern <END>
<BEG> get new format string <END>
<BEG> gets a name logger param name the name of the logger return the name logger <END>
<BEG> logs event with a level of all <END>
<BEG> this method should be consider internal <END>
<BEG> gets the standard level value a an enum <END>
<BEG> compares this level against the level pass a argument and return true if this level be in between the give level <END>
<BEG> compares this level against the level pass a an argument and return true if this level be the same or be less specific <END>
<BEG> retrieves an exist level or creates on if it do n't previously exist <END>
<BEG> return the level associate with the name or null if the level can not be find <END>
<BEG> shutdown the logging system if the logging system support it <END>
<BEG> returns a formatter logger use the fully qualified name of the class a the logger name <END>
<BEG> returns a logger use the fully qualified name of the class a the logger name <END>
<BEG> tests existence of the give marker <END>
<BEG> retrieves a marker or create a marker that have no parent <END>
<BEG> retrieves or create a marker with the specified parent <END>
<BEG> non-javadoc see org apache log log4j message messagefactory # newmessage java lang object <END>
<BEG> non-javadoc see org apache log log4j message messagefactory # newentrymessage org apache log log4j message message <END>
<BEG> non-javadoc see org apache log log4j message flowmessagefactory # newexitmessage java lang object <SEG> org apache log log4j message entrymessage <END>
<BEG> returns the formatted message after look up the format in the resource bundle <END>
<BEG> gets the resource bundle base name if set <END>
<BEG> gets the resource bundle if set <END>
<BEG> returns the data element a if they be parameter on the logging event <END>
<BEG> adds an item to the data map <END>
<BEG> adds all the element from the specify map <END>
<BEG> formats the structured data a described in < a href= http : tool ietf org html rfc5424 > rfc 5424 < a > <END>
<BEG> formats this message a an xml fragment string into the give builder <END>
<BEG> param format an array of strings that provide extra information about how to format the message <END>
<BEG> constructs a new instance base on an exist map <END>
<BEG> default implementation do nothing <END>
<BEG> allows subclasses to change a candidate key to an actual key <END>
<BEG> returns the formatted message <END>
<BEG> return the throwable pass to the message <END>
<BEG> creates { link org apache log log4j message stringformattedmessage } instance <END>
<BEG> returns the object format use it tostring method <END>
<BEG> gets the message if it be a throwable <END>
<BEG> counts the number of unescaped placeholder in the give messagepattern <END>
<BEG> this method perform a deep tostring of the give object <END>
<BEG> this method return the same a if object tostring would not have be override in obj <END>
<BEG> creates { link simplemessage } instance contain the format parameterized message string <END>
<BEG> invokes { link clearable # clear } when possible <END>
<BEG> returns the formatted object message <END>
<BEG> this message have exactly one parameter the object <SEG> so always return one <END>
<BEG> this message do not have any parameter <SEG> so this method return the specified array <END>
<BEG> creates an id use another id to supply default value <END>
<BEG> indicates if the id be reserve <END>
<BEG> returns the supported format <END>
<BEG> formats the structured data a described in rfc 5424 <END>
<BEG> returns the threaddump in printable format <END>
<BEG> returns an array with a single element <SEG> a map contain the threadinformation a the key <END>
<BEG> creates a threaddumpmessageproxy that can be serialize <END>
<BEG> logs a throwable that have be catch with location information <END>
<BEG> logs exit from a method with the result and location information <END>
<BEG> returns the depth of nested log call in the current thread : zero if no log call have be make <SEG> one if a single logging call without nested logging call have be make <SEG> or more depend on the level of nest <END>
<BEG> logs a throwable to be throw <END>
<BEG> construct a trace log event <END>
<BEG> construct a log event <END>
<BEG> gets or create the concurrentmap of name logger for a give loggercontext <END>
<BEG> initializes static variable base on system property <END>
<BEG> non-javadoc see org apache log log4j threadcontext contextstack # getimmutablestackornull <END>
<BEG> detects if a logger with the specify name and messagefactory exists <END>
<BEG> detects if a logger with the specify name and messagefactory type exists <END>
<BEG> freezes this context stack so it become immutable : all mutator method will throw an exception from now on <END>
<BEG> returns whether this context stack be frozen <END>
<BEG> returns the log4j api version support by the implementation <END>
<BEG> gets the priority natural ordering of this provider <END>
<BEG> gets the class name of the { link org apache log log4j spi loggercontextfactory } implementation of this provider <END>
<BEG> method to convert custom levels into a standardlevel for conversion to other system <END>
<BEG> return the log level for which the listener should receive event <END>
<BEG> writes status message to the console <END>
<BEG> adds package name filter to exclude <END>
<BEG> returns the stacktraceelement for the method that create the event <END>
<BEG> returns the logging level for the event <END>
<BEG> returns a thread safe iterable for the statuslistener <END>
<BEG> clears the list of status event and listener <END>
<BEG> returns a list of all event a statusdata object <END>
<BEG> converts a digit into an upper-case hexadecimal character or the null character if invalid <END>
<BEG> converts an array of lambda expression into an array of their evaluation result <END>
<BEG> returns the result of evaluate the specify function <END>
<BEG> returns a message <SEG> either the value supply by the specified function <SEG> or a new message create by the specified factory <END>
<BEG> determines if a name class can be load or not <END>
<BEG> logs the give message <END>
<BEG> sets the underlie outputstream where exception be print to <END>
<BEG> loads and close the give property input stream <END>
<BEG> returns { code true } if the specified property be define <SEG> regardless of it value it may not have a value <END>
<BEG> gets the named property a a boolean value <END>
<BEG> retrieves a property that may be prefix by more than one string <END>
<BEG> gets the named property a a double <END>
<BEG> return the system property or an empty properties object if an error occurs <END>
<BEG> extracts property that start with or be equal to the specific prefix and return them in a new properties object with the prefix remove <END>
<BEG> partitions a property map base on common key prefix up to the first period <END>
<BEG> returns true if system property tell u we be run on windows <END>
<BEG> loads an individual provider implementation <END>
<BEG> param classloader null can be use to mark the bootstrap class loader <END>
<BEG> deprecate use { link # loadprovider java net url <SEG> classloader } instead <END>
<BEG> lazily initialize the providerutil singleton <END>
<BEG> returns a double quote string <END>
<BEG> checks if a string be not blank <END>
<BEG> < p > checks if a charsequence be not empty and not null <END>
<BEG> < p > joins the element of the provide { code iterable } into a single string contain the provided element < p > < p > no delimiter be add before or after the list <END>
<BEG> < p > gets the leftmost { code len } character of a string < p > < p > if { code len } character be not available <SEG> or the string be { code null } <SEG> the string will be return without an exception <END>
<BEG> returns a quote string <END>
<BEG> < p > removes control character char & lt ; = 32 from both end of this string return { code null } if the string be empty after the trim or if it be { code null } <END>
<BEG> shorthand for { code str touppercase locale root ; } param str the string to upper case <END>
<BEG> returns a { code stringbuilder } contain the text representation of the specify primitive value <END>
<BEG> converts this duration to the total length in millisecond <END>
<BEG> non-javadoc see org apache log log4j core appender roll action pathcondition # accept java nio file path <SEG> java nio file path <SEG> java nio file attribute basicfileattributes <END>
<BEG> non-javadoc see org apache log log4j core appender roll action pathcondition # beforefiletreewalk <END>
<BEG> returns whether this sorter sort recent file first <END>
<BEG> creates and return { link asyncqueuefullpolicy } instance base on user-specified system property <END>
<BEG> non-javadoc see org apache log log4j core config configuration # getcustomlevels <END>
<BEG> returns a list of the { code customlevelconfig } object created during configuration <END>
<BEG> returns this node 's object cast to the give class <END>
<BEG> determines if this node 's object be an instance of the give class <END>
<BEG> returns all category of plugins in this cache <END>
<BEG> gets or create a category of plugins <END>
<BEG> loads and merges all the log4j plugin cache file specify <END>
<BEG> finds all relevant { link constraintvalidator } object from an array of annotation <END>
<BEG> writes the specify data to the specify destination <END>
<BEG> creates a builder for a custom scriptpatternselector <END>
<BEG> copies character from the stringbuilder into the charbuffer <SEG> start at the specified offset and end when either all character have be copy or when the charbuffer be full <END>
<BEG> determine if this enumeration match the specify name ignore case <END>
<BEG> clears the secret field in this object but still allow it to operate normally <END>
<BEG> finds start of millisecond field in formatted time <END>
<BEG> format a logging event <END>
<BEG> adjust the content of the buffer base on the specify length and alignment <END>
<BEG> returns a string suitable for debug <END>
<BEG> returns a map with the subcommands { linkplain # addsubcommand string <SEG> object register } on this instance <END>
<BEG> returns the command that this be a subcommand of <SEG> or { code null } if this be a top-level command <END>
<BEG> sets whether option for single-value field can be specify multiple time on the command line without a { link overwrittenoptionexception } be thrown <END>
<BEG> returns whether the end user may specify argument on the command line that be not match to any option or parameter field <END>
<BEG> sets whether the end user may specify unmatched argument on the command line without a { link unmatchedargumentexception } be thrown <END>
<BEG> returns the list of unmatched command line argument <SEG> if any <END>
<BEG> < p > convenience method that initialize the specify annotated object from the specify command line argument <END>
<BEG> prints a usage help message for the annotated command class to the specify { code printstream } <END>
<BEG> prints version information from the { link command # version } annotation to the specify { code printstream } <END>
<BEG> convenience method to allow command line application author to avoid some boilerplate code in their application <END>
<BEG> returns the string that separate option name from option value when parse command line option <END>
<BEG> sets the string the parser use to separate option name from option value to the specify value <END>
<BEG> returns the command name also call program name display in the usage help synopsis <END>
<BEG> sets the command name also call program name display in the usage help synopsis to the specify value <END>
<BEG> < p > returns the length of the specified array <END>
<BEG> checks if an object have empty semantics <END>
<BEG> checks a value for emptiness and throw an illegalargumentexception if it 's empty <END>
<BEG> returns { code true } if { code s } be { code true } case-insensitive <SEG> { code false } if { code s } be { code false } case-insensitive <SEG> and { code defaultvalue } if { code s } be anything else include null or empty <END>
<BEG> closes an autocloseable or ignores if { code null } <END>
<BEG> returns the value of a private long field that be update by a background thread once every millisecond <END>
<BEG> removes all the element from the buffer and return them <END>
<BEG> determines if the buffer contain element <END>
<BEG> < p > compares two object for equality < p > param obj the object to compare to return { code true } if equal <END>
<BEG> < p > gets a debugging string version of this formatter < p > return a debugging string <END>
<BEG> non-javadoc see org apache common lang3 time dateparser # getpattern <END>
<BEG> < p > compare another object for equality with this object < p > param obj the object to compare to return < code > true < code > if equal to this instance <END>
<BEG> < p > get a string version of this formatter < p > return a debugging string <END>
<BEG> non-javadoc see org apache common lang3 time dateparser # parseobject java lang string <END>
<BEG> non-javadoc see org apache common lang3 time dateparser # parseobject java lang string <SEG> java text parseposition <END>
<BEG> < p > gets a formatter instance use the default pattern in the default timezone and locale < p > return a date time formatter <END>
<BEG> < p > gets a formatter instance use the specified pattern <SEG> time zone and locale < p > param pattern { link java text simpledateformat } compatible pattern <SEG> non-null param timezone the time zone <SEG> null mean use the default timezone param locale the locale <SEG> null mean use the default locale return a pattern base date time formatter throw illegalargumentexception if pattern be invalid or < code > null < code > <END>
<BEG> < p > gets a date time format for the specified style and locale < p > param datestyle date style : full <SEG> long <SEG> medium <SEG> or short <SEG> null indicate no date in format param timestyle time style : full <SEG> long <SEG> medium <SEG> or short <SEG> null indicate no time in format param locale the non-null locale of the desired format return a localized standard date time format throw illegalargumentexception if the locale have no date time pattern define <END>
<BEG> closes the specified { code context } <END>
<BEG> closes the specified { code context } <SEG> ignore any exception throw by the close operation <END>
<BEG> quote text content use json standard quoting <SEG> and append result to a supply { link stringbuilder } <END>
<BEG> creates a new daemon thread factory <END>
<BEG> returns true if there be more element to return from the array <END>
<BEG> gets the array that this iterator be iterate over <END>
<BEG> gets the start index to loop from <END>
<BEG> resets the iterator back to the start index <END>
<BEG> creates a pattern string for { code separator } surround by whitespace <END>
<BEG> indicates whether or not a { link member } be both public and be contain in a public class <END>
<BEG> makes a { link member } { link accessibleobject # isaccessible accessible } if the member be not public <END>
<BEG> makes a { link field } { link accessibleobject # isaccessible accessible } if it be not public or if it be final <END>
<BEG> gets the value of a static { link field } <SEG> make it accessible if require <END>
<BEG> constructs a new { code t } object use the default constructor of it class <END>
<BEG> extracts the strings from a set that start with a give prefix <END>
<BEG> encodes the specified char sequence by cast each character to a byte <END>
<BEG> implementation note : this be the fast path <END>
<BEG> returns the deep cause of the give { code throwable } <END>
<BEG> converts a throwable stack trace into a list of strings <END>
<BEG> gets all declare field for the give class include superclass <END>
<BEG> indicates if two { link type } s be assignment compatible <END>
<BEG> resets all file monitor to their current last modified time <END>
<BEG> after serialization <SEG> the logger instance do not know it loggercontext <END>
<BEG> this method should be call only if { link # successfulextraction throwable } return true <END>
<BEG> child thread should get a copy of the parent 's hashmap <END>
<BEG> get the position of the separator character <SEG> if any <SEG> start at position 'fromindex ' <END>
<BEG> is the eventobject pass a parameter discardable ? <END>
<BEG> returns the number of element currently in the blocking queue <END>
<BEG> the remain capacity available in the blocking queue <END>
<BEG> this implementation do not allow duplicate installation of onconsolestatuslistener param listener <END>
<BEG> checks whether the input match the regular expression <END>
<BEG> if true <SEG> this appender will output to a stream which param withjansi since 1 0 5 <END>
<BEG> given a key <SEG> return the corresponding property value <END>
<BEG> clear the internal objectmap and all property <END>
<BEG> the context name can be set only if it be not already set <SEG> or if the current name be the default context name <SEG> namely default <SEG> or if the current name and the old name be the same <END>
<BEG> gets the life cycle manager for this context <END>
<BEG> instantiates an a data source and bind it to jndi most of the required parameter be place in the ec substitutionproperties <END>
<BEG> learn relevant information about this connection source <END>
<BEG> does this connection support the jdbc connection getgeneratedkeys method ? <END>
<BEG> does this connection support batch update ? <END>
<BEG> set the charset to use when convert the string return by the layout into byte <END>
<BEG> sets the immediateflush option <END>
<BEG> this method allow rollingpolicy implementation to be aware of their containing appender <END>
<BEG> the < b > file < b > property take a string value which should be the name of the file to append to <END>
<BEG> this method be use by derived class to obtain the raw file property <END>
<BEG> if the value of < b > file < b > be not < code > null < code > <SEG> then { link # openfile } be call with the value of < b > file < b > and < b > append < b > property <END>
<BEG> < p > sets and < i > open < i > the file where the log output will go <END>
<BEG> see # setprudent boolean return true if in prudent mode <END>
<BEG> clears the buffer and reset all attribute <END>
<BEG> add an < code > event < code > a the last event in the buffer <END>
<BEG> get the < i > i < i > th old event currently in the buffer <END>
<BEG> get the old first element in the buffer <END>
<BEG> the duration to wait before shut down the current logback context <END>
<BEG> parses the pattern and create the converter link list <END>
<BEG> returns a map where the default converter map be merge with the map contain in the context <END>
<BEG> returns the content type output by this layout <SEG> i e text html <END>
<BEG> instantiates an evaluator of the give class and set it name <END>
<BEG> once the child element be also parse <SEG> now be the time to activate the evaluator option <END>
<BEG> now property definer be initialize by all property and we can put property value to context <END>
<BEG> once the child element be also parse <SEG> now be the time to activate the shutdown hook option <END>
<BEG> always trim trail space from the body text <END>
<BEG> register the current event list in currently in the interpreter a a safe configuration point <END>
<BEG> return a copy of the current event list in the player <END>
<BEG> add a property to the property of this execution context <END>
<BEG> deprecate replace by { link # getinterpretationcontext } <END>
<BEG> return the list of applicable pattern for this <END>
<BEG> returns true if the class of the object ' o ' pass a parameter be not mark with the noautostart annotation <END>
<BEG> add a new rule <SEG> i e <END>
<BEG> returned bean description be hold in a cache <END>
<BEG> param clazz to create a { link beandescription } for <END>
<BEG> param method to check if it be an 'adder ' method <END>
<BEG> param method to get the associated property name for <END>
<BEG> converts the give string into low camel case form <END>
<BEG> registers a component with this manager <END>
<BEG> gets the default { link socketfactory } for the platform <END>
<BEG> the < b > remotehost < b > property take the name of of the host where a corresponding server be run <END>
<BEG> the < b > port < b > property take a positive integer represent the port where the server be wait for connection <END>
<BEG> the < b > reconnectiondelay < b > property take a positive { link duration } value represent the time to wait between each fail connection attempt to the server <END>
<BEG> the < b > eventdelaylimit < b > take a non-negative integer represent the number of millisecond to allow the appender to block if the underlie blockingqueue be full <END>
<BEG> sets the timeout that control how long we 'll wait for the remote peer to accept our connection attempt <END>
<BEG> loops until the desired connection be establish and return the resulting connector <END>
<BEG> creates a new { link ch qos logback core net autoflushingobjectwriter } instance <END>
<BEG> gets the factory use to create { link serversocket } object <END>
<BEG> gets the event queue size use for each client connection <END>
<BEG> gets the jsse provider name for the key manager factory <END>
<BEG> sets the location of the key store resource <END>
<BEG> gets the type of key store to load <END>
<BEG> gets the password to use to access the key store <END>
<BEG> creates a new { link securerandom } generator use the receiver 's configuration <END>
<BEG> gets the secure random generator algorithm name <END>
<BEG> gets the secure random generator configuration <END>
<BEG> configures ssl parameter on an { link sslconfigurable } <END>
<BEG> gets the jsse secure transport protocol to include <END>
<BEG> sets a flag indicate whether client authentication be require <END>
<BEG> returns the integer value correspond to the name syslog facility <END>
<BEG> the < b > sysloghost < b > option be the name of the the syslog host where log output should go <END>
<BEG> the < b > facility < b > option must be set one of the string kern <SEG> user <SEG> mail <SEG> daemon <SEG> auth <SEG> syslog <SEG> lpr <SEG> news <SEG> uucp <SEG> cron <SEG> authpriv <SEG> ftp <SEG> ntp <SEG> audit <SEG> alert <SEG> clock <SEG> local0 <SEG> local1 <SEG> local2 <SEG> local3 <SEG> local4 <SEG> local5 <SEG> local6 <SEG> local7 <END>
<BEG> the < b > suffixpattern < b > option specify the format of the non-standardized part of the message send to the syslog server <END>
<BEG> returns the charset use to encode string message into byte sequence when write to syslog <END>
<BEG> the underlying output stream use by this appender <END>
<BEG> checks that require parameter be set and if everything be in order <SEG> activate this appender <END>
<BEG> start converter in the chain of converter <END>
<BEG> components that depend on option pass during configuration can override this method in order to make appropriate use of those option <END>
<BEG> return the first option pass to this component <END>
<BEG> this method be use to parse a string such a 5 <SEG> 7 <SEG> 5 7 or -5 7 into a formatinfo <END>
<BEG> print the pattern string a a header in log file param outputpatternasheader since 1 0 3 <END>
<BEG> fast space pad method <END>
<BEG> the path for the file to search for <END>
<BEG> returns true if the file specify by { link # setpath string path } property exists <END>
<BEG> the resource to search for on the class path <END>
<BEG> returns the string true if the { link # setresource string resource } specify by the user be available on the class path <SEG> false otherwise <END>
<BEG> return the set of file match the stemregex a find in 'directory ' <END>
<BEG> given date <SEG> convert this instance to a regular expression <END>
<BEG> this method assume that both file a and b exists <END>
<BEG> attempts to determine whether both file be on different volume <END>
<BEG> implemented by delegate most of the rollover work to a rolling policy <END>
<BEG> this setter be intend to be invoke by siftaction <END>
<BEG>  < p > note that this method be synchronize < p > param key  return  <END>
<BEG>  < p > note that this method be atomic <SEG> i e <END>
<BEG> mark component identify by 'key ' a have reach it end-of-life <END>
<BEG> clear and detach component which be stale <END>
<BEG> get all attached appenders a an enumeration <END>
<BEG> returns < code > true < code > if the specify appender be in the list of attached appenders <SEG> < code > false < code > otherwise <END>
<BEG> remove and processpriortoremoval all previously attach appenders <END>
<BEG> remove the appender pass a parameter form the list of attached appenders <END>
<BEG> remove the appender with the name pass a parameter form the list of appenders <END>
<BEG> the declared origin of status message <END>
<BEG> add a filter to end of the filter list <END>
<BEG> clear the filter chain <END>
<BEG> loop through the filter in the list <END>
<BEG> invoking the start method can cause the instance to print status message create less than value of retrospectivethresold <END>
<BEG> returns true if the statusmanager associate with the context pass a parameter have one or more statuslistener instance register <END>
<BEG> return the time of last reset <END>
<BEG> closes a closeable while suppress any { code ioexception } that occur <END>
<BEG> closes a server socket while suppress any { code ioexception } that occur <END>
<BEG> add the local host 's name a a property <END>
<BEG> return an array of type e [ ] <END>
<BEG> creates an executor service suitable for use by logback component <END>
<BEG> shuts down an executor service <END>
<BEG> creates the parent directory of a file <END>
<BEG> attempt to find a resource by use the classloader that load this class <SEG> namely loader class <END>
<BEG> get the thread context loader which be a jdk 1 2 feature <END>
<BEG> returns the class loader of clazz in an access privilege section <END>
<BEG> return the class loader which load the class pass a argument <END>
<BEG> converts a string describe the location of a resource into a url object <END>
<BEG> see http : logback qos ch manual configuration html # variablesubstitution <END>
<BEG> very similar to < code > system getproperty < code > except that the { link securityexception } be absorbed <END>
<BEG> lookup a key from the environment <END>
<BEG> very similar to { link system # getproperties } except that the { link securityexception } be absorbed <END>
<BEG> return a string [ ] of size two <END>
<BEG> if < code > value < code > be true <SEG> then < code > true < code > be return <END>
<BEG> print the content of the context statuses <SEG> but only if they contain error <END>
<BEG> print context 's status data with a timestamp high than the threshold <END>
<BEG> retains all value in the subject collection that be match by at least one of a collection of regular expression <END>
<BEG> sets the value to match in the ndc value of the loggingevent <END>
<BEG> set to true if configure value must exactly match the mdc value of the loggingevent <END>
<BEG> returns the true if an exact match will be check for <END>
<BEG> returns true if a key to match have be configure <END>
<BEG> this method be mainly use with expression evaluators <END>
<BEG> manufacture a { link basicmarker } instance by name <END>
<BEG> does the name mark already exist ? <END>
<BEG> returns the key in the mdc a a { link set } of { link string } s the returned value can be null <END>
<BEG> performs a two argument substitution for the 'messagepattern ' pass a parameter <END>
<BEG> same principle a the { link # format string <SEG> object } and { link # format string <SEG> object <SEG> object } method except that any number of argument can be pass in an array <END>
<BEG> helper method to determine if an { link object } array contain a { link throwable } a last element param argarray the argument off which we want to know if it contain a { link throwable } a last element return if the last { link object } in argarray be a { link throwable } this method will return it <SEG> otherwise it return null <END>
<BEG> a nop implementation <END>
<BEG> return the delegate logger instance if set <END>
<BEG> typically call after the { link org slf4j loggerfactory } initialization phase be complete <END>
<BEG> returns the name of the class which call the invoking method <END>
<BEG> close the handler by flush all writer <END>
<BEG> param outcome the outcome of the returned instance param featuredata an even number of element correspond to name value pair use to create feature return a single instance with the provide outcome and feature correspond to the featuredata provide <END>
<BEG> param datum new item to add to the running average <END>
<BEG> param datum item to remove to the running average throw illegalstateexception if count be 0 <END>
<BEG> param delta amount by which to change a datum in the running average throw illegalstateexception if count be 0 <END>
<BEG> param thing to rescore param originalscore current score for item return same originalscore a new score <SEG> always <END>
<BEG> converts the object to a one-line string representation param obj the object to convert return the string representation of the object <END>
<BEG> ignores count the performance metric until leadtimeisfinished the caller should enough time for the jit to warm up <END>
<BEG> returns an enumeration describe the available option <END>
<BEG> gets the current setting of the associator return an array of string suitable for pass to setoptions <END>
<BEG> returns the tip text for this property return tip text for this property suitable for display in the explorer experimenter gui <END>
<BEG> get whether capability check be turn off <END>
<BEG> returns the revision string <END>
<BEG> run the associator with the give commandline option param associator the associator to run param option the commandline option <END>
<BEG> perform any setup stuff that might need to happen before commandline execution <END>
<BEG> compare this rule to the supply rule <END>
<BEG> get a string describe the scheme that produce these rule <END>
<BEG> return the current result return the currently store result see # tosummarystring <END>
<BEG> a test method for this class <END>
<BEG> equals <END>
<BEG> non-javadoc see weka association associationrule # getpremise <END>
<BEG> non-javadoc see weka association associationrule # getnamedmetricvalue java lang string <END>
<BEG> get a textual description of this rule <END>
<BEG> set the wrapped < code > associationrules < code > object to use <END>
<BEG> returns a string describe this associator return a description of the associator suitable for display in the explorer experimenter gui <END>
<BEG> gets the current setting of the associator <END>
<BEG> gets the filter use <END>
<BEG> sets the class index param value the class index <END>
<BEG> gets the class index return the index of the class attribute <END>
<BEG> gets the filter specification string <SEG> which contain the class name of the filter and any option to the filter return the filter string <END>
<BEG> gets the list of mine association rule <END>
<BEG> gets a list of the name of the metric output for each rule <END>
<BEG> returns true if this associationrulesproducer can actually produce rule <END>
<BEG> main method for run this class <END>
<BEG> get the singleton item in the data param source the source of the data either instances or an arffloader <END>
<BEG> reset all option to their default value <END>
<BEG> set the index of the attribute value to consider a positive for binary attribute in normal dense instance <END>
<BEG> set the desired number of rule to find <END>
<BEG> get the number of rule to find <END>
<BEG> set the maximum number of item to include in large item set <END>
<BEG> gets the maximum number of item to be include in large item set <END>
<BEG> get the metric type to use <END>
<BEG> set the comma separate list of item that transaction must contain in order to be consider for large item set and rule <END>
<BEG> set the comma separate list of item that rule must contain in order to be output <END>
<BEG> set whether to use or rather than and when consider must contain list <END>
<BEG> gets whether or be to be use rather than and when consider must contain list <END>
<BEG> returns the tip text for this property return tip text for this property suitable for display <SEG> in the explorer experimenter gui <END>
<BEG> if true then turn off the iterative support reduction method of find x rule that meet the minimum support and metric threshold and just return all the rule that meet the low bound on minimum support and the minimum metric <END>
<BEG> get whether all rule meet the low bound on min support and the minimum metric threshold be to be find <END>
<BEG> set how often to report some progress when the data be be read incrementally off of the disk rather than load into memory <END>
<BEG> compares two item set param itemset an item set return true if the the item set be equal <SEG> false otherwise <END>
<BEG> get the value index for this item <END>
<BEG> get this item 's value a a string <END>
<BEG> a string representation of this item <SEG> i e <END>
<BEG> set the base associator <END>
<BEG> provides a chance for a attribute evaluator to do any special post processing of the select attribute set <END>
<BEG> tells the evaluator that the attribute selection process be complete <END>
<BEG> creates copy of the current search scheme <END>
<BEG> return the number of attribute select from the most recent run of attribute selection return the number of attribute select <END>
<BEG> get the final select set of attribute <END>
<BEG> get the final ranking of the attribute <END>
<BEG> set the attribute subset evaluator param evaluator the evaluator to use <END>
<BEG> set the search method param search the search method to use <END>
<BEG> set the number of fold for cross validation param fold the number of fold <END>
<BEG> produce a ranking if possible with the set search and evaluator param r true if a ranking be to be produce <END>
<BEG> do a cross validation param x true if a cross validation be to be perform <END>
<BEG> set the seed for use in cross validation param s the seed <END>
<BEG> get a description of the attribute selection return a string describe the result of attribute selection <END>
<BEG> reduce the dimensionality of a set of instance to include only those attribute choose by the last run of attribute selection <END>
<BEG> reduce the dimensionality of a single instance to include only those attribute choose by the last run of attribute selection <END>
<BEG> return a string summarize the result of repeated attribute selection run on split of a dataset <END>
<BEG> select attribute for a split of the data <END>
<BEG> set the maximum size of the evaluated subset cache hashtable <END>
<BEG> return the maximum size of the evaluated subset cache express a a multiplier for the number of attribute in a data set <END>
<BEG> returns a list of attribute and or attribute range a a string return a list of attribute and or attribute range <END>
<BEG> set the numnber of non-improving node to consider before terminate search <END>
<BEG> get the search direction return the direction of the search <END>
<BEG> return a description of the search a a string return a description of the search <END>
<BEG> searches the attribute subset space by best first search param aseval the attribute evaluator to guide the search param data the training instance <END>
<BEG> convert a bitset into a list of attribute index param group the bitset to convert return an array of attribute index <END>
<BEG> returns a string describe this attribute evaluator return a description of the evaluator suitable for display in the explorer experimenter gui <END>
<BEG> return a string to describe the option <END>
<BEG> set whether to pre-compute the full correlation matrix at the outset <SEG> rather than compute individual correlation lazily a need during the search <END>
<BEG> include locally predictive attribute param b true or false <END>
<BEG> return true if include locally predictive attribute return true if locally predictive attribute be to be use <END>
<BEG> treat miss a a separate value param b true or false <END>
<BEG> return true be miss be treat a a separate value return true if miss be to be treat a a separate value <END>
<BEG> set whether to output debug info param d true if debug info be to be output <END>
<BEG> set whether to output debug info return true if debug info be to be output <END>
<BEG> returns a string describe this attribute evaluator <END>
<BEG> set whether to evaluate the merit of an attribute base on the impact of leave it out from the full set instead of consider it worth in isolation param l true if each attribute should be evaluate by measure the impact of leave it out from the full set <END>
<BEG> get whether to evaluate the merit of an attribute base on the impact of leave it out from the full set instead of consider it worth in isolation return true if each attribute should be evaluate by measure the impact of leave it out from the full set <END>
<BEG> tip text for this property <END>
<BEG> set the number of attribute to evaluate in parallel param n the number of attribute to evaluate in parallel <END>
<BEG> get the number of attribute to evaluate in parallel return the number of attribute to evaluate in parallel <END>
<BEG> evaluates an individual attribute by measure the amount of information gain about the class give the attribute <END>
<BEG> set whether to output per-value correlation for nominal attribute param d true if detail per-value correlation be to be output for nominal attribute <END>
<BEG> get whether to output per-value correlation for nominal attribute return true if detail per-value correlation be to be output for nominal attribute <END>
<BEG> evaluates an individual attribute by measure the correlation pearson 's between it and the class <END>
<BEG> describe the attribute evaluator return a description of the attribute evaluator a a string <END>
<BEG> initializes an information gain attribute evaluator <END>
<BEG> get whether miss value be be distribute or not return true if miss value be be distribute <END>
<BEG> return a description of the evaluator return description a a string <END>
<BEG> get whether to search backwards return true if the search will proceed backwards <END>
<BEG> set the threshold by which the attributeselection module can discard attribute <END>
<BEG> returns the threshold so that the attributeselection module can discard attribute from the ranking <END>
<BEG> specify the number of attribute to select from the ranked list if generate a ranking <END>
<BEG> gets the number of attribute to be retain <END>
<BEG> gets the calculated number of attribute to retain <END>
<BEG> records whether the user have request a ranked list of attribute <END>
<BEG> set whether attribute should continue to be add during a forward search as long a merit do not decrease param c true if atts should continue to be atted <END>
<BEG> set whether to output debug info to the console param d true if dubugging info be to be output <END>
<BEG> get whether to output debug info to the console return true if dubugging info be to be output <END>
<BEG> convert the array of start attribute to a string <END>
<BEG> get whether numeric attribute be just be binarized <END>
<BEG> reset option to their default value <END>
<BEG> returns a string for this option suitable for display in the gui a a tip text return a string describe this option <END>
<BEG> set the random number seed for cross validation param seed the seed to use <END>
<BEG> get the random number seed return an < code > int < code > value <END>
<BEG> get the minimum bucket size use by oner return the minimum bucket size use <END>
<BEG> returns true if the training data be to be use for evaluation return true if training data be to be use for evaluation <END>
<BEG> returns a description of this attribute transformer return a string describing this attribute transformer <END>
<BEG> main method for test this class param argv should contain the command line argument to the evaluator transformer see attributeselection <END>
<BEG> set the number of near neighbour param n the number of near neighbour <END>
<BEG> get the number of near neighbour return the number of near neighbour <END>
<BEG> get the seed use for randomly sample instance <END>
<BEG> set the near neighbour weight method param b true near neighbour be to be weight by distance <END>
<BEG> return a description of the relieff attribute evaluator <END>
<BEG> evaluates an individual attribute use relieff 's instance base approach <END>
<BEG> adds the statistic encapsulate in the supplied evaluation object into this one <END>
<BEG> generates the classifier <END>
<BEG> calculates the class membership probability for the give test instance <END>
<BEG> the stem algorithm to use <SEG> null mean no stem at all i e <SEG> the nullstemmer be use <END>
<BEG> set whether to convert all token to lowercase param l true if all token be to be convert to lowercase <END>
<BEG> set how often to prune the dictionary param p how often to prune <END>
<BEG> get how often to prune the dictionary return how often to prune the dictionary <END>
<BEG> set the minimum word frequency <END>
<BEG> set whether to normalize the length of each document param norm true if document length be to be normalize <END>
<BEG> get whether to normalize the length of each document return true if document length be to be normalize <END>
<BEG> get the instance 's norm <END>
<BEG> set the norm of the instance param newnorm the norm to wich the instance must be set <END>
<BEG> get the l norm use <END>
<BEG> set the l-norm to use param newlnorm the l-norm <END>
<BEG> updates the classifier with information from one training instance <END>
<BEG> create ad tree from set of instance param instance data set return adnode represent an adtree <END>
<BEG> print be use for debug only and show the adtree in ascii graphic <END>
<BEG> for test only param argv the commandline option <END>
<BEG> init define a minimal bayes net with no arcs param nnodes number of node in the bayes net param nvalues number of value each of the node can take throw exception if something go wrong <END>
<BEG> generaterandomdistributions generate discrete conditional distribution table for all node of a bayes network once a network structure have be determine <END>
<BEG> generateinstances generate random instance sample from the distribution represent by the bayes network structure <END>
<BEG> throw exception if there 's a cycle in the graph <END>
<BEG> returns either the net if bif format or the generated instance return either the net or the generated instance <END>
<BEG> returns an enumeration describe the available option return an enumeration of all the available option <END>
<BEG> print all the option to stdout <END>
<BEG> main method param args the commandline parameter <END>
<BEG> this will return a string describe the classifier <END>
<BEG> processfile read a bifxml file and initialize a bayes net param sfile name of the file to parse return the bifreader throw exception if processing fails <END>
<BEG> count nr of arcs miss from other network compare to current network note that an arc be not 'missing ' if it be reverse <END>
<BEG> calculate the divergence between the probability distribution represent by this network and that of another <SEG> that be <SEG> \sum_ { x\in x } p x log p x q x where x be the set of value the node in the network can take <SEG> p x the probability of this network for configuration x q x the probability of the other network for configuration x param other network to compare with return divergence between this and other bayes network <END>
<BEG> count nr of reversed arc from other network compare to current network param other network to compare with return nr of miss arc <END>
<BEG> loads the file specify a first parameter and print it to stdout <END>
<BEG> assuming a network structure be define and we want to learn from data <SEG> the data set must be put if correct order first and possibly discretized miss value fill in before proceed to cpt learning <END>
<BEG> return index of node with give name <SEG> or -1 if no such node exists param snodename name of the node to get index for <END>
<BEG> return index of node with give name <END>
<BEG> delete node from the network <SEG> update instance <SEG> parentsets <SEG> distribution conditional distribution be condense by take the value for the target node to be it first value <END>
<BEG> delete node with index in selection from the network <SEG> update instance <SEG> parentsets <SEG> distribution conditional distribution be condense by take the value for the target node to be it first value <END>
<BEG> xml helper function for select element under a node with a give name param item xmlnode to select item from param selement name of the element to return <END>
<BEG> xml helper function that return definition element from a xmlbif document for a node with a give name <END>
<BEG> apply paste operation with xmlbif fragment <END>
<BEG> add arc between two node distributions be update by duplication for every value of the parent node <END>
<BEG> add arc between parent node and each of the node in a give list <END>
<BEG> delete arc between two node <END>
<BEG> specify distribution of a node param sname name of the node to specify distribution for param p matrix represent distribution with p [ i ] [ j ] = p node = j | parent configuration = i throw exception if parent or child can not be find in network <END>
<BEG> return distribution of a node in matrix form with matrix represent distribution with p [ i ] [ j ] = p node = j | parent configuration = i param sname name of the node to get distribution from <END>
<BEG> return array of value of a node param sname name of the node to get value from <END>
<BEG> return value of a node param ntargetnode index of the node to get value from param ivalue index of the value <END>
<BEG> change the name of a node param ntargetnode index of the node to set name for param sname new name to assign <END>
<BEG> change the name of a value of a node param ntargetnode index of the node to set name for param svalue current name of the value param snewvalue new name of the value <END>
<BEG> add node value to a node <END>
<BEG> set position of node param inode index of node to set position for param nx x position of new position param ny y position of new position <END>
<BEG> set position of node <END>
<BEG> get x position of a node param inode index of node of interest <END>
<BEG> align set of node with the left most node in the list param node list of index of node to align <END>
<BEG> center set of node half way between leave and right most node in the list param node list of index of node to center <END>
<BEG> replace attribute with specify name and value param ntargetnode index of node the replace specification for param sname new name of the node param value array of value of the node <END>
<BEG> set marginal distibution for a node param inode index of node to set marginal distribution for param fmarginp marginal distribution <END>
<BEG> return list of child of a node param ntargetnode index of node of interest <END>
<BEG> return fragment of network in xmlbif format param node array of index of node that should be in the fragment <END>
<BEG> return whether there be something on the undo stack that can be perform <END>
<BEG> return true when current state differs from the state the network be last saved <END>
<BEG> indicate the network state be save <END>
<BEG> get message represent the last action perform on the network <END>
<BEG> add undo action to the undo stack <END>
<BEG> remove all action from the undo stack <END>
<BEG> updates the classifier with the give instance <END>
<BEG> initcpts reserve space for cpts and set all count to zero param bayesnet the bayes net to use throw exception always throw an exception <SEG> since subclass need to be use <END>
<BEG> set prior use in probability table estimation param falpha represent prior <END>
<BEG> get prior use in probability table estimation return prior <END>
<BEG> return a string to describe the alpha option <END>
<BEG> returns whether k2 prior be used return true if k2 prior be use <END>
<BEG> initcpts reserve space for cpts and set all count to zero param bayesnet the bayes net to use throw exception if something go wrong <END>
<BEG> get the menu bar for this application <END>
<BEG> this method set the node size that be appropriate consider the maximum label size that be present <END>
<BEG> sets the preferred size for m_graphpanel graphpanel to the minimum size that be neccessary to display the graph <END>
<BEG> this method be an implementation for layoutcompleteeventlistener class <END>
<BEG> bif reader < br > reads a graph description in xmlbif03 from an file with name sfilename <END>
<BEG> read arff file from file sfilename and start new bayesian network with node represent attribute in data set <END>
<BEG> apply graph layout algorithm to bayesian network <END>
<BEG> add arc with node ichild a child <END>
<BEG> deletes arc <END>
<BEG> rename node with index ntargetnode <END>
<BEG> rename value with name svaleu of a node with index ntargetnode <END>
<BEG> add a value to currently select node <END>
<BEG> remove value with name svalue from the node with index ntargetnode <END>
<BEG> edits cpt of node with index ntargetnode <END>
<BEG> calculate separator set in clique tree param order : maximum cardinality ordering of the graph param clique : set of clique return set of separator set <END>
<BEG> get clique in a decomposable graph represent by an adjacency matrix param order : maximum cardinality ordering of the graph param badjacencymatrix : decomposable graph return set of clique <END>
<BEG> calculate maximum cardinality ordering ; start with first node add node that have most neighbor already order till all node be in the ordering this implementation do not assume the graph be connect param badjacencymatrix : n by n matrix with adjacency in graph of n node return maximum cardinality order <END>
<BEG> return index parent of parent specify by index param iparent index of parent return index of parent <END>
<BEG> set index parent of parent specify by index param iparent index of parent param nnode index of the node that become parent <END>
<BEG> return number of parent return number of parent <END>
<BEG> return cardinality of parent return the cardinality <END>
<BEG> return cardinality of parent after recalculation return the cardinality <END>
<BEG> add parent to parent set at specific location and update internals specifically the cardinality of the parent set param nparent parent to add param iparent location to add parent in parent set param _instances use for update the internals <END>
<BEG> delete node from parent set param nparent node number of the parent to delete param _instances data set return location of the parent in the parent set <END>
<BEG> delete last add parent from parent set and update internals specifically the cardinality of the parent set param _instances use for update the internals <END>
<BEG> copy make current parent set equal to other parent set param other : parent set to make a copy from <END>
<BEG> return the number of attribute return the number of attribute <END>
<BEG> set the cardinality param nmaxcardinality the max cardinality <END>
<BEG> return the max cardinality return the max cardinality <END>
<BEG> calc undirected graph a-b iff d a <SEG> s <SEG> b for all s <END>
<BEG> determine index of node that make next candidate separating set adjacent to inode1 and inode2 <SEG> but not inode2 itself param x index of current node param inode1 first node param inode2 second node must be large than inode1 param edge skeleton so far return int index of next node adjacent to inode1 after x <END>
<BEG> this will return a string describe the search algorithm <END>
<BEG> for test the class param argv the commandline parameter <END>
<BEG> get name of network in bif file to read structure from return bif file name <END>
<BEG> copyparentsets copy parent set of source to dest bayesnet param d destination network param source source network <END>
<BEG> return descendant population size <END>
<BEG> param busecrossover set whether cross-over be use <END>
<BEG> param busetournamentselection set whether tournament selection or maximum sub-population should be use <END>
<BEG> param idescendantpopulationsize set descendant population size <END>
<BEG> return random number seed <END>
<BEG> sets the random number seed param nseed the number of the seed to set <END>
<BEG> return a string to describe the population size option <END>
<BEG> return a string to describe the descendant population size option <END>
<BEG> search determine the network structure graph of the network with the k2 algorithm <SEG> restrict by it initial structure which can be an empty graph <SEG> or a naive bayes graph <END>
<BEG> sets the max number of parent param nmaxnrofparents the max number of parent <END>
<BEG> gets whether to init a naive bayes return whether to init a naive bayes <END>
<BEG> set random order flag param brandomorder the random order flag <END>
<BEG> get random order flag return the random order flag <END>
<BEG> param bayesnet param instance <END>
<BEG> returns the number of run return number of run <END>
<BEG> param bayesnet the bayes net to use param instance the data to use throw exception if something go wrong <END>
<BEG> check whether the operation be not in the tabu list param ooperation operation to be checked return true if operation be not in the tabu list <END>
<BEG> sets the number of look-ahead step param nnroflookaheadsteps the number of look-ahead step <END>
<BEG> sets the number of good operation param nnrofgoodoperations the number of good operation <END>
<BEG> return a string to describe the number of look ahead steps option <END>
<BEG> return a string to describe the number of good operations option <END>
<BEG> print be use for debug only <SEG> call from adnode param stab amount of space <END>
<BEG> set the classifier be analyse param newclassifier the classifier to use <END>
<BEG> gets the name of the classifier be analyse return the classifier be analyse <END>
<BEG> sets debug mode param debug true if debug output should be print <END>
<BEG> sets the random number seed param seed the random number seed <END>
<BEG> gets the random number seed return the random number seed <END>
<BEG> sets the maximum number of boost iteration param trainiterations the number of boost iteration <END>
<BEG> sets the name of the data file use for the decomposition param datafilename the data file to use <END>
<BEG> get the name of the data file use for the decomposition return the name of the data file <END>
<BEG> get the index start from 1 of the attribute use a the class <END>
<BEG> sets index of attribute to discretize on param classindex the index start from 1 of the class attribute <END>
<BEG> get the calculated bias square return the bias square <END>
<BEG> get the calculated variance return the variance <END>
<BEG> returns description of the bias-variance decomposition result <END>
<BEG> sets the optionhandler 's option use the give list <END>
<BEG> sets the number of time an instance be classify param classifyiterations number of time an instance be classify <END>
<BEG> gets the number of time an instance be classified return the maximum number of time an instance be classify <END>
<BEG> get the calculated bias accord to the webb definition return the bias <END>
<BEG> get the calculated variance accord to the kohavi and wolpert definition return the variance <END>
<BEG> get the calculated variance accord to the webb definition return the variance accord to webb <END>
<BEG> set the training size <END>
<BEG> set the proportion of instance that be common between two train set use to train a classifier <END>
<BEG> get the proportion of instance that be common between two train set <END>
<BEG> accepts an array of ints and randomise the value in the array <SEG> use the random seed <END>
<BEG> gets the dataset to use for test <SEG> can be null <END>
<BEG> same a size return the number of column <END>
<BEG> calculates the expected misclassification cost for each possible class value <SEG> give class probability estimate <END>
<BEG> normalizes the matrix so that the diagonal contains zero <END>
<BEG> set the value of a particular cell in the matrix param rowindex the row param columnindex the column param value the value to set <END>
<BEG> return the content of a particular cell <END>
<BEG> set the value of a cell a a double param rowindex the row param columnindex the column param value the value double to set <END>
<BEG> gets a list of freshly instantiate concrete implementation of available plugin metric or null if there be no plugin metric available return a list of plugin metric or null if there be no plugin metric <END>
<BEG> set the base evaluation object to use <END>
<BEG> true if the optimum value of the name metric be a maximum value ; false if the optimim value be a minimum value <END>
<BEG> makes a copy of this confusionmatrix after apply the supplied costmatrix to the cell <END>
<BEG> includes a prediction in the confusion matrix <END>
<BEG> gets the performance with respect to one of the class a a twoclassstats object <END>
<BEG> gets the number of correct classification that be <SEG> for which a correct prediction be make <END>
<BEG> gets the number of prediction that be make actually the sum of the weight of prediction where the class value be know <END>
<BEG> outputs the performance statistic a a classification confusion matrix <END>
<BEG> calculates the performance stats for the default class and return result a a set of instances <END>
<BEG> calculates the cumulative margin distribution for the set of prediction <SEG> return the result a a set of instances <END>
<BEG> gets the predicted probability return the predicted probability <END>
<BEG> gets the weight assign to this prediction <END>
<BEG> calculates the prediction margin <END>
<BEG> sets the prediction interval for this prediction <END>
<BEG> sets whether to output the class distribution or not <END>
<BEG> returns the default number of digit to output after the decimal point <END>
<BEG> sets the number of digit to output after the decimal point <END>
<BEG> sets the output file to write to <END>
<BEG> sets whether to the regular output be suppress in case the output be store in a file <END>
<BEG> performs basic check <END>
<BEG> returns whether regular output be generate or not <END>
<BEG> if an output file be define <SEG> then the string get add to the file buffer <SEG> otherwise to the actual buffer <END>
<BEG> performs check whether everything be correctly setup for the header <END>
<BEG> preprocesses an input instance <END>
<BEG> prints the header <SEG> classification and footer to the buffer <END>
<BEG> returns a string describe the output generator <END>
<BEG> returns a short display text <SEG> to be use in comboboxes <END>
<BEG> gets the current option setting for the optionhandler <END>
<BEG> returns whether tab be use a separator <END>
<BEG> performs the actual printing of the header <END>
<BEG> builds a string list the attribute value in a specified range of index <SEG> separate by comma and enclose in bracket <END>
<BEG> returns the adjust r-squared value for a linear regression model <END>
<BEG> returns the f-statistic for a linear regression model <END>
<BEG> returns an array of the t-statistic of each coefficient in a multiple linear regression model <END>
<BEG> calculates the n point precision result <SEG> which be the precision average over n evenly space w r t recall sample of the curve <END>
<BEG> calculates the area under the precision-recall curve auprc <END>
<BEG> calculates the area under the roc curve a the wilcoxon-mann-whitney statistic <END>
<BEG> sets the number of positive instance predict a positive <END>
<BEG> calculate the true positive rate <END>
<BEG> calculate the precision <END>
<BEG> generates a < code > confusionmatrix < code > represent the current two-class statistic <SEG> use class name negative and positive <END>
<BEG> gets how the training data will be transform <END>
<BEG> sets whether conjugate gradient descent be use <END>
<BEG> gets whether to use conjugate gradient descent rather than bfgs update <END>
<BEG> sets the ridge in the log-likelihood <END>
<BEG> returns the coefficient for this logistic model <END>
<BEG> aggregate an object with this one param toaggregate the object to aggregate return the result of aggregation throw exception if the supplied object ca n't be aggregate for some reason <END>
<BEG> produce a pmml representation of this logistic model param train the training data that be use to construct the model return a string contain the pmml representation <END>
<BEG> return the flag for have the learn rate decay <END>
<BEG> this set the network up to be able to reset itself with the current setting and the learning rate at half of what it be currently <END>
<BEG> return the flag for reset the network <END>
<BEG> param c true if the class should be normalize the class will only ever be normalize if it be numeric <END>
<BEG> return the flag for normalize a numeric class <END>
<BEG> return the flag for normalize attribute <END>
<BEG> param f true if a nominaltobinary filter should be use on the data <END>
<BEG> return the flag for nominal to binary filter use <END>
<BEG> this seed the random number generator <SEG> that be use when a random number be need for the network <END>
<BEG> return the threshold use for validation testing <END>
<BEG> the learn rate can be set use this command <END>
<BEG> return the learning rate for the node <END>
<BEG> the momentum can be set use this command <END>
<BEG> this will set whether the network be automatically build or if it be leave up to the user <END>
<BEG> return the auto build state <END>
<BEG> this will set what the hidden layer be make up of when auto build be enable <END>
<BEG> this will set whether a gui be bring up to allow interaction by the user with the neural network during training <END>
<BEG> return the true if should show gui <END>
<BEG> this will set the size of the validation set <END>
<BEG> set the number of train epoch to perform <END>
<BEG> a function use to stop the code that call buildclassifier from continue on before the user have finish the decision tree <END>
<BEG> initializes an iterative classifier <END>
<BEG> signal end of iterating <SEG> useful for any house-keeping cleanup exception exception if cleanup fails <END>
<BEG> tool tip text for resume property return the tool tip text for the finalize property <END>
<BEG> if call with argument true <SEG> then the next time do be call the model be effectively frozen and no further iteration can be perform param resume true if the model be to be finalize after perform iteration <END>
<BEG> returns true if the model be to be finalize or have be finalize after train <END>
<BEG> return a string to describe the hidden layer in the network <END>
<BEG> this function calculate what the output value should be <END>
<BEG> this function will calculate what the change in weight should be and also update them <END>
<BEG> return the identity string of this unit <END>
<BEG> param t the new type of this unit <END>
<BEG> call this to get the weight value on a particular connection <END>
<BEG> use this to get easy access to the input <END>
<BEG> use this to get easy access to the input number <END>
<BEG> return the x coord <END>
<BEG> param x the new value for it 's x po <END>
<BEG> call this function to determine if the point at x <SEG> y be on the unit <END>
<BEG> call this function to draw the node <END>
<BEG> call this function to draw the node highlight <END>
<BEG> this will connect the specified unit to be an input to this unit <END>
<BEG> this will allocate more space for input connection information if the array for this have be fill up <END>
<BEG> allocates more space for output connection information if the array have be fill up <END>
<BEG> this will disconnect the input with the specific connection number from this node only on this end however <END>
<BEG> changes the connection value information for one of the connection <END>
<BEG> this function will remove all output to this unit <END>
<BEG> connects two unit together <END>
<BEG> disconnects two unit <END>
<BEG> set how this node should operate note that the neural method have no internal state <SEG> so the same object can be use by any number of node <END>
<BEG> call this to get the output value of this unit <END>
<BEG> call this to reset the value and error for this unit <SEG> ready for the next run <END>
<BEG> call this to have the connection restore from the save weight <END>
<BEG> call this function to get the chnage in weight array <END>
<BEG> call this function to update the weight value at this unit <END>
<BEG> set the epsilon threshold on the error for epsilon insensitive and huber loss function param e the value of epsilon to use <END>
<BEG> get the epsilon threshold on the error for epsilon insensitive and huber loss function return the value of epsilon to use <END>
<BEG> set the value of lambda to use param lambda the value of lambda to use <END>
<BEG> get the current value of lambda return the current value of lambda <END>
<BEG> set the learning rate <END>
<BEG> get current number of epochs return the current number of epoch <END>
<BEG> turn global replacement of miss value off on <END>
<BEG> get whether global replacement of miss value have be disable <END>
<BEG> method for build the classifier <END>
<BEG> computes the distribution for a give instance param inst the instance for which distribution be compute return the distribution throw exception if the distribution ca n't be compute successfully <END>
<BEG> prints out the classifier <END>
<BEG> call to complete the aggregation process <END>
<BEG> set the minimum absolute magnitude for model coefficient <END>
<BEG> set whether to fit a logistic regression itself train use sgd to the output of the svm if an svm be be learn <END>
<BEG> return the size of the dictionary minus any low frequency term that be below the threshold but have n't be prune yet <END>
<BEG> set whether to output additional statistic such a std <END>
<BEG> returns true if a usable attribute be find <END>
<BEG> returns the index of the attribute use in the regression <END>
<BEG> main method for test this class param argv option <END>
<BEG> main method for test this class param argv commandline option <END>
<BEG> returns a description of the logistic model attribute coefficient <END>
<BEG> returns an enumeration of the additional measure name return an enumeration of the measure name <END>
<BEG> turns off check for miss value <SEG> etc <END>
<BEG> returns the bias of each binary smo <END>
<BEG> returns the number of value of the class attribute <END>
<BEG> disables or enable the check which could be time-consuming <END>
<BEG> set the kernel to use param value the kernel to use <END>
<BEG> get the value of c return value of c <END>
<BEG> set the value of c param v value to assign to c <END>
<BEG> get the value of tolerance parameter <END>
<BEG> classifies the give instance use the linear regression function <END>
<BEG> set the learning algorithm param regoptimizer the learning algorithm <END>
<BEG> returns an enumeration of the measure name <END>
<BEG> number of kernel evaluation use in learing return the number of kernel evaluation <END>
<BEG> number of kernel cache hit use during learing return the number of kernel cache hit <END>
<BEG> returns the number of cache hit on dot product <END>
<BEG> frees the cache use by the kernel <END>
<BEG> sets the size of the cache to use a prime number param value the size of the cache <END>
<BEG> set the option the user supply for the kernel param option option that be supply for the kernel <END>
<BEG> return the option the user supply for the kernel return the user supply option for the kernel <END>
<BEG> sets the exponent value must be different from 1 0 <END>
<BEG> sets the file hold the kernel matrix param f the file hold the matrix <END>
<BEG> set the kernel matrix <END>
<BEG> return a string representation for the kernel return a string representaiton of the kernel <END>
<BEG> returns the number of kernel evaluation perform <END>
<BEG> returns the number of dot product cache hit <END>
<BEG> compute the factor for curve-fitting see equation 13 in paper param omega the omega to use param sigma the sigma to use return the factor for curve-fitting <END>
<BEG> flag to indicate whether the model be build yet return true if the model be build <END>
<BEG> initialize the algorithm param data the data to work with throw exception if m_svm be null <END>
<BEG> compute the value of the objective function <END>
<BEG> learn svm parameter from data <END>
<BEG> svmoutput of an instance in the training set <SEG> m_data this use the cache <SEG> unlike svmoutput instance param index index of the training instance in m_data return the svm output throw exception if something go wrong <END>
<BEG> param inst return throw exception <END>
<BEG> get the value of epsilon parameter of the epsilon insensitive loss function <END>
<BEG> examineexample method from pseudocode <END>
<BEG> returns the tip text for this property return a description suitable for display in the explorer experimenter gui <END>
<BEG> return the current tolerance return the tolerance <END>
<BEG> set the tolerance param d the new tolerance <END>
<BEG> whether variant 1 be use return true if variant 1 be use <END>
<BEG> sets whether to use variant 1 param b if true then variant 1 be use <END>
<BEG> m_i0a delete i ; m_i0b delete i ; m_i1 delete i ; m_i2 delete i ; m_i3 delete i ; <END>
<BEG> update boundary blow and bhi and correspond index param i2 index of vector param f2 error of vector i2 <END>
<BEG> use variant 2 of shevade 's et al s paper throw exception if something go wrong <END>
<BEG> checks whether an element be in the set <END>
<BEG> inserts an element into the set <END>
<BEG> sets the method use to for prune <END>
<BEG> gets the method use for prune <END>
<BEG> set the size of the internal cache for intermediate result <END>
<BEG> gets the size of the internal cache return the cache size <END>
<BEG> returns the length of the subsequence return the length <END>
<BEG> sets the maximum length of the subsequence <END>
<BEG> returns the maximum length of the subsequence return the maximum length <END>
<BEG> sets the lambda constant use in the string kernel param value the lambda value to use <END>
<BEG> computes the result of the kernel function for two instance <END>
<BEG> evaluate the unnormalized kernel between s and t see [ 1 ] for detail about the unnormalized ssk <END>
<BEG> recursion-ending function that be call at the end of each recursion branch <END>
<BEG> the default number of iteration to perform <END>
<BEG> stump method for build the classifier <END>
<BEG> sets the number of bag iteration <END>
<BEG> gets the number of bag iteration return the maximum number of bag iteration <END>
<BEG> stores the specify value in the cahce table for easy retrieval <END>
<BEG> returns the value in the cache map by the specify key param key the key use to retrieve the table entry <END>
<BEG> calculates the probability of the indexed nominal attribute of the test instance transform into the indexed nominal attribute of the training instance <END>
<BEG> set the blending factor param factor the level of blend to use <END>
<BEG> select only instance with weight that contribute to the specify quantile of the weight distribution param data the input instance param quantile the specify quantile eg 0 9 to select 90 % of the weight mass return the select instance <END>
<BEG> set weight threshold param threshold the percentage of weight mass use for training <END>
<BEG> get the degree of weight thresholding return the percentage of weight mass use for training <END>
<BEG> set resampling mode param r true if resampling should be do <END>
<BEG> method use to build the classifier <END>
<BEG> set the shrinkage parameter param l the shrinkage rate <END>
<BEG> get the shrinkage rate <END>
<BEG> perform another iteration <END>
<BEG> clean up <END>
<BEG> return the number of iteration base classifier complete return the number of iteration same a number of base classifier model <END>
<BEG> returns textual description of the classifier <END>
<BEG> sets the attribute evaluator param evaluator the evaluator with all option set <END>
<BEG> gets the attribute evaluator use return the attribute evaluator <END>
<BEG> gets the search method use return the search method <END>
<BEG> build the classifier on the dimensionally reduce data <END>
<BEG> tool tip text for this property return the tool tip for this property <END>
<BEG> returns true if the base classifier implement batchpredictor and be able to generate batch prediction efficiently return true if the base classifier can generate batch prediction efficiently <END>
<BEG> returns graph describe the classifier if possible <END>
<BEG> output a representation of this classifier return a representation of this classifier <END>
<BEG> additional measure -- - number of attribute select return the number of attribute select <END>
<BEG> additional measure -- - time take millisecond to select the attribute return the time take to select attribute <END>
<BEG> additional measure -- - time take millisecond to select attribute and build the classifier return the total time select attribute + build classifier <END>
<BEG> gets the size of each bag <SEG> a a percentage of the training set size <END>
<BEG> set whether copy of instance be represent use weight rather than explicitly <END>
<BEG> set whether the out of bag prediction be store <END>
<BEG> set whether to print the individual ensemble classifier in the output param print true if the individual classifier be to be print <END>
<BEG> get whether to print the individual ensemble classifier in the output return true if the individual classifier be to be print <END>
<BEG> gets the out of bag error that be calculate a the classifier be build <END>
<BEG> returns the distribution for an instance <END>
<BEG> return whether this classifier configuration yield more efficient batch prediction return the base classifier 's flag indicate whether it can do batch prediction efficiently <END>
<BEG> return a description of the classifier suitable for display in the explorer experimenter gui <END>
<BEG> returns the directory that will be search for cost file when load on demand <END>
<BEG> gets the misclassification cost matrix <END>
<BEG> convert distribution use minimum expect cost approach <END>
<BEG> batch score method <END>
<BEG> builds the classifier to generate a partition <END>
<BEG> computes an array that have a value for each element in the partition <END>
<BEG> performs one iteration <END>
<BEG> signal end of iterating <SEG> useful for any house-keeping cleanup if the base classifier support this <END>
<BEG> use this method to determine whether classifier check whether class attribute have be modify by filter <END>
<BEG> sets up the filter and run check <END>
<BEG> system err println filteredclassifier : : + m_filter getclass getname + in : + instance ; <END>
<BEG> classifies a give instance after filter <END>
<BEG> set the evaluation metric to use param metric the metric to use <END>
<BEG> set the class value index to use param i the class value index to use <END>
<BEG> get the class value index to use return the class value index to use <END>
<BEG> returns the best number of iteration return the best number of iteration <END>
<BEG> returns the measure for the best model return the number of leaf <END>
<BEG> set the z max threshold on the response param zmax the threshold to use <END>
<BEG> builds the boost classifier param data the data to train the classifier with throw exception if building fails <SEG> e g <SEG> ca n't handle data <END>
<BEG> perform another iteration of boost <END>
<BEG> returns the array of classifier that have be build <END>
<BEG> performs efficient batch prediction return true <SEG> a logitboost can perform efficient batch prediction <END>
<BEG> applies model to an instance to get class probability <END>
<BEG> returns the boosted model a java source code <END>
<BEG> sets the list of possible classifers to choose from <END>
<BEG> gets a single classifier from the set of available classifier <END>
<BEG> gets the classifier specification string <SEG> which contain the class name of the classifier and any option to the classifier param index the index of the classifier string to retrieve <SEG> start from 0 <END>
<BEG> sets the seed for random number generation <END>
<BEG> get the index of the classifier that be determine a best during cross-validation <END>
<BEG> buildclassifier select a classifier from the set of classifier by minimise error on the training data <END>
<BEG> computes an array that indicate leaf membership <END>
<BEG> gets the number of bin numeric attribute will be divide into return the number of bin <END>
<BEG> gets whether empty bin be delete <END>
<BEG> sets whether to delete empty bin <END>
<BEG> gets whether to min <END>
<BEG> set the estimator param newestimator the estimator to use <END>
<BEG> string describe option for set meta classifier return the string describe the option <END>
<BEG> gets the number of fold for the cross-validation <END>
<BEG> adds meta classifier param classifier the classifier with all option set <END>
<BEG> gets the meta classifier <END>
<BEG> determines the format of the level-1 data <END>
<BEG> makes a level-1 instance from the give instance <END>
<BEG> makes a set of level-1 instance from the give instance <END>
<BEG> set whether to trim white space from each end of name before match <END>
<BEG> set whether to suppress output the report of model to input mapping <END>
<BEG> get the path use for load a model <END>
<BEG> set the test structure if know in advance that we be likely to see <END>
<BEG> set the structure of the data use to create the model <END>
<BEG> build the classifier param data the training data to be use for generate the bag classifier <END>
<BEG> sets the fully build model to use <SEG> if one do n't want to load a model from a file or already deserialized a model from somewhere else <END>
<BEG> gets the currently load model can be null <END>
<BEG> load the serialized model if necessary <SEG> throw an exception if the derserialization fails <END>
<BEG> runs the classifier with the give option param args the commandline option <END>
<BEG> set the number of execution slot thread to use for build the member of the ensemble <END>
<BEG> does the actual construction of the ensemble throw exception if something go wrong during the training process <END>
<BEG> stump method for build the classifier param data the training data to be use for generate the ensemble exception exception if the classifier could not be build successfully <END>
<BEG> start the pool of execution thread <END>
<BEG> read the list of parameter <END>
<BEG> return a textual description of this general regression <END>
<BEG> format and print the ppmatrix to the supply stringbuffer <END>
<BEG> format and print the parameter matrix to the supply stringbuffer <END>
<BEG> set the version of pmml use for this model <END>
<BEG> set the name of the application if specify that create this model param doc the document encapsulate the pmml <END>
<BEG> get the data dictionary <END>
<BEG> get the mining schema for this model <END>
<BEG> get the name of the application that create this model return the name of the create application or null if not specify in the pmml <END>
<BEG> throw an exception - pmml model be pre-built <END>
<BEG> signal that a scoring run have be complete <END>
<BEG> get a textual description of the mapping between mine schema field and incoming data field <END>
<BEG> get a textual description of this supportvectormachinemodel return a description of this supportvectormachinemodel a a string <END>
<BEG> calculates a hash code return the hash code a an integer <END>
<BEG> prints the hash code <END>
<BEG> returns an enumeration describe the available option valid option be : < p > -f number < br > the number of fold for reduced error pruning <END>
<BEG> sets the number of fold to use param fold the number of fold <END>
<BEG> sets the minimum total weight of the instance in a rule param m the minimum total weight of the instance in a rule <END>
<BEG> gets the minimum total weight of the instance in a rule return the minimum total weight of the instance in a rule <END>
<BEG> sets the seed value to use in randomize the data param s the new seed value <END>
<BEG> gets the current seed value to use in randomize the data return the seed value <END>
<BEG> sets the number of optimization run param run the number of optimization run <END>
<BEG> gets the the number of optimization run return the number of optimization run <END>
<BEG> gets whether to check for error rate be in stop criterion return true if check for error rate be in stop criterion <END>
<BEG> gets whether pruning be perform return true if pruning be perform <END>
<BEG> get the statistic of the ruleset in the give position param pos the position of the stats <SEG> assume correct return the statistic of the ruleset in the give position <END>
<BEG> prints the all the rule of the rule learner <END>
<BEG> main method for test this class param argv the commandline option <END>
<BEG> computes estimate error for leaf <END>
<BEG> cleanup in order to save memory <END>
<BEG> method for choose a subset to expand <END>
<BEG> choose last index ie <END>
<BEG> method just exist to make program easy to read <END>
<BEG> returns the class distribution for an instance <END>
<BEG> set the number of all condition that could appear in a rule in this rulestats object <SEG> if the number set be small than 0 typically -1 <SEG> then it calcualtes base on the data store param total the set number <END>
<BEG> set the data of the stats <SEG> overwrite the old one if any param data the data to be set <END>
<BEG> get the size of the ruleset in the stats return the size of ruleset <END>
<BEG> get the data after filter the give rule param index the index of the rule return the data cover and uncover by the rule <END>
<BEG> get the class distribution predict by the rule in give position param index the position index of the rule return the class distribution <END>
<BEG> set the weight of theory in mdl calcualtion param weight the weight to be set <END>
<BEG> compute the number of all possible condition that could appear in a rule of a give data <END>
<BEG> filter the data accord to the ruleset and compute the basic stats : coverage uncoverage <SEG> true false positive negative of each rule <END>
<BEG> count data from the position index in the ruleset assume that give data be not cover by the rule in position 0 index-1 <SEG> and the statistic of these rule be provide < br > this procedure be typically useful when a temporary object of rulestats be construct in order to efficiently calculate the relative dl of rule in position index <SEG> thus all other stuff be not need <END>
<BEG> subset description length : < br > s t <SEG> k <SEG> p = -k log2 p - n-k log2 1-p details see quilan : mdl and categorical theory continued <SEG> ml95 param t the number of element in a known set param k the number of element in a subset param p the expected proportion of subset know by recipient return the subset description length <END>
<BEG> compute the minimal data description length of the ruleset if the rule in the give position be delete < br > the min_data_dl_if_deleted = data_dl_if_deleted - potential param index the index of the rule in question param expfprate expect fp fp+fn <SEG> use in datadl calculation param checkerr whether check if error rate > = 0 5 return the mindatadl <END>
<BEG> the description length dl of the ruleset relative to if the rule in the give position be delete <SEG> which be obtain by : < br > mdl if the rule exist - mdl if the rule do not exist < br > note the minimal possible dl of the ruleset be calculate i e <END>
<BEG> remove the last rule in the ruleset as well a it 's stats <END>
<BEG> stratify the give data into the give number of bag base on the class value <END>
<BEG> compute the combined dl of the ruleset in this class <SEG> i e <END>
<BEG> patition the data into 2 <SEG> first of which have numfolds-1 numfolds of the data and the second have 1 numfolds of the data param data the give data param numfolds the give number of fold return the patitioned instance <END>
<BEG> returns the value a string out of the give distribution param c the attribute to get the value for param dist the distribution to extract the value return the value <END>
<BEG> prints a class distribution <END>
<BEG> finds best split for nominal attribute and return value <END>
<BEG> finds best split for nominal attribute and nominal class and return value <END>
<BEG> computes variance for subset <END>
<BEG> returns the subset an instance fall into <END>
<BEG> set the minimum fraction of weight require down at least two branch for info gain split param m the minimum fraction of weight <END>
<BEG> get the minimum fraction of weight require down at least two branch for info gain split return the minimum fraction of weight <END>
<BEG> set the number of instance or total weight of instance a leaf should observe between split attempt param grace the grace period <END>
<BEG> get the number of instance or total weight of instance a leaf should observe between split attempt return the grace period <END>
<BEG> set the threshold below which a split will be force to break tie param ht the threshold <END>
<BEG> get the threshold below which a split will be force to break tie return the threshold <END>
<BEG> set the allowable error in a split decision <END>
<BEG> set the split criterion to use either gini or info gain <END>
<BEG> get the leaf prediction strategy to use majority class <SEG> naive bayes or naive bayes adaptive return the strategy to use <END>
<BEG> get the number of instance weight a leaf should observe before allow naive bayes to make prediction return the number weight of instance <END>
<BEG> returns a list of split candidate param splitmetric the split metric to use return a list of split candidate <END>
<BEG> number of child node return the number of child node <END>
<BEG> add a child param branch the branch for the child param child the child itself <END>
<BEG> sets reference to train data to null <END>
<BEG> returns index of attribute for which split be generate <END>
<BEG> returns the split point numeric attribute only <END>
<BEG> returns c4 5-type gain ratio for the generated split <END>
<BEG> sets split point to greatest value in give data small or equal to old split point <END>
<BEG> returns a newly create tree <END>
<BEG> computes error of tree on training data <END>
<BEG> allows to clone a model shallow copy <END>
<BEG> checks if generate model be valid <END>
<BEG> returns the distribution of class value induce by the model <END>
<BEG> sets distribution associate with model <END>
<BEG> sets the distribution associate with model <END>
<BEG> prunes a tree use c4 5 's pruning procedure <END>
<BEG> returns number of non-empty bag of distribution <END>
<BEG> returns number of class actually occur in distribution <END>
<BEG> returns number of class actually occur in give bag <END>
<BEG> adds count to give bag <END>
<BEG> checks if at least two bag contain a minimum number of instance <END>
<BEG> sets all count to zero <END>
<BEG> returns class with high frequency over all bag <END>
<BEG> returns number of bag <END>
<BEG> returns perclass maxclass <END>
<BEG> returns perclassperbag index <SEG> maxclass index <END>
<BEG> returns perbag index -numcorrect index <END>
<BEG> returns number of possibly fractional instance of give class in give bag <END>
<BEG> returns relative frequency of class over all bag with laplace correction <END>
<BEG> returns relative frequency of class for give bag <END>
<BEG> subtracts the give distribution from this one <END>
<BEG> computes entropy of distribution before split <END>
<BEG> computes entropy after split without consider the class value <END>
<BEG> computes entropy of test distribution with respect to training distribution <END>
<BEG> print the model at the leaf return textual description of the leaf model <END>
<BEG> build the no-split node param instance an < code > instances < code > value exception exception if an error occurs <END>
<BEG> return the error make by the naive bayes model at this node return the number of error make <END>
<BEG> return the discretizer use at this node return a < code > discretize < code > value <END>
<BEG> get the naive bayes model at this node return a < code > naivebayesupdateable < code > value <END>
<BEG> always return 0 because only there be only one subset <END>
<BEG> returns a string contain java source code equivalent to the test make at this node <END>
<BEG> return the probability for a class value param classindex the index of the class value param instance the instance to generate a probability for param thesubset the subset to consider return a probability exception exception if an error occurs <END>
<BEG> computes result of split criterion for give training and test distribution <END>
<BEG> returns the number of rule same a number of leaf return the number of rule <END>
<BEG> check whether instance data be to be save <END>
<BEG> method to unprune a logistic model tree <END>
<BEG> updates the numincorrecttree field for all node <END>
<BEG> return a list of all inner node in the tree return the list of node <END>
<BEG> fills a list with all inner node in the tree param nodelist the list to be fill <END>
<BEG> returns true if the logistic regression model at this node have change compare to the one at the parent node <END>
<BEG> returns a string describe the number of logitboost iteration perform at this node <SEG> the total number of logitboost iteration perform include iteration at high level in the tree <SEG> and the number of training example at this node <END>
<BEG> help method for print tree structure <END>
<BEG> assigns unique ids to all node in the tree <END>
<BEG> assigns number to the logistic regression model at the leaf of the tree <END>
<BEG> returns a string describe the logistic regression function at the node <END>
<BEG> returns graph describe the tree <END>
<BEG> returns the misclassification error of the current model on a set of instance <END>
<BEG> helper function to find the minimum in an array of error value <END>
<BEG> helper function to initialize m_regressions <END>
<BEG> converts train data to numeric version <END>
<BEG> computes the logitboost response variable from y p value actual estimate class probability <END>
<BEG> computes the logitboost response for an array of y p value actual estimate class probability <END>
<BEG> computes the p-values probability for the class from the f-values of the logistic model <END>
<BEG> computes the y-values actual class probability for a set of instance <END>
<BEG> computes the f-values for a single instance <END>
<BEG> computes the f-values for a set of instance <END>
<BEG> computes the p-values probability for the different class from the f-values for a set of instance <END>
<BEG> returns the negative loglikelihood of the y-values actual class probability give the p-values current probability estimate <END>
<BEG> returns an array of the index of the attribute use in the logistic model <END>
<BEG> the number of logitboost iteration perform = the number of simple regression function fit <END>
<BEG> sets the parameter maxiterations <END>
<BEG> sets the option heuristicstop <END>
<BEG> returns an array hold the coefficient of the logistic model <END>
<BEG> method not in use <END>
<BEG> checks if there be at least 2 subset that contain > = minnuminstances <END>
<BEG> returns name of split attribute leave side of condition <END>
<BEG> returns the number of leaf in the tree return the number of leaf in the tree <END>
<BEG> resets the object of split information param low the index of the first instance param high the index of the last instance param attr the attribute <END>
<BEG> returns the position of the split in the sorted value <END>
<BEG> use unpruned tree rule param unpruned true if unpruned tree rule be to be generate <END>
<BEG> get whether unpruned tree rule be be generate return true if unpruned tree rule be to be generate <END>
<BEG> generate rule decision list rather than a tree param u true if rule be to be generate <END>
<BEG> get whether rule be be generate rather than a tree return true if rule be to be generate <END>
<BEG> use unsmoothed prediction param s true if unsmoothed prediction be to be use <END>
<BEG> get whether or not smooth be be use return true if unsmoothed prediction be to be use <END>
<BEG> set the minimum number of instance to allow at a leaf node param minnum the minimum number of instance <END>
<BEG> get the minimum number of instance to allow at a leaf node return a < code > double < code > value <END>
<BEG> returns a description of the classifier return a description of the classifier a a string <END>
<BEG> return the number of rule return the number of rule same a # linear model & # leave in the tree <END>
<BEG> predicts the class of the supplied instance use the linear model <END>
<BEG> return the number of parameter coefficient in the linear model return the number of parameter <END>
<BEG> return the array of coefficient return the coefficient <END>
<BEG> returns a textual description of this linear model return string contain a description of this linear model <END>
<BEG> classify an instance use this node <END>
<BEG> sets the leaf ' number param leafcounter the number of leaf count return the number of the total leaf under the node <END>
<BEG> print the linear model at this node return the linear model at this node <END>
<BEG> print all leaf model return the leaf model <END>
<BEG> recursively build a textual description of the tree param level the level of this node return string describe the tree <END>
<BEG> traverses the tree and installs linear model at each node <END>
<BEG> find the leaf with great coverage param maxcoverage the great coverage find so far param bestleaf the leaf with the great coverage <END>
<BEG> get the index of the splitting attribute for this node return the index of the splitting attribute <END>
<BEG> get the number of linear model in the tree return the number of linear model <END>
<BEG> return true if this node be a leaf return true if this node be a leaf <END>
<BEG> get the root mean square error at this node return the root mean square error <END>
<BEG> return the number of instance that reach this node <END>
<BEG> assigns a unique identifier to each node in the tree param lastid last id number use return id after process child node <END>
<BEG> assign a unique identifier to each node in the tree and then call graphtree param text a < code > stringbuffer < code > value <END>
<BEG> return a dotty style string describe the tree param text a < code > stringbuffer < code > value <END>
<BEG> converts the stats to a string return the convert string <END>
<BEG> return a dot style string describe the tree <END>
<BEG> get whether instance data be be save <END>
<BEG> returns the tip text for the number of iteration <END>
<BEG> get the number of feature use in random selection <END>
<BEG> set the number of feature to use in random selection <END>
<BEG> set whether to compute and output attribute importance score param computeattributeimportance true to compute attribute importance score <END>
<BEG> get whether to compute and output attribute importance score return true if compute attribute importance score <END>
<BEG> main method for this class <END>
<BEG> get the array of impurity decrease gain sum return the array of impurity decrease gain sum <END>
<BEG> set whether to compute store impurity decrease for variable importance in randomforest param computeimpuritydecreases true to compute and store impurity decrease value for split attribute <END>
<BEG> get whether to compute store impurity decrease for variable importance in randomforest return true to compute and store impurity decrease value for split attribute <END>
<BEG> get the maximum depth of trh tree <SEG> 0 for unlimited <END>
<BEG> get whether to break tie randomly <END>
<BEG> gets option from this classifier <END>
<BEG> gets the next unique node id <END>
<BEG> reset the counter for the node <END>
<BEG> creates copy of the current clusterer <END>
<BEG> run the clusterer instance with the give option <END>
<BEG> returns a string describe this clusterer <END>
<BEG> uses t1 distance to assign canopy to the supply instance <END>
<BEG> adjust the final number of canopy to match the user-requested number if possible param densities the density of each of the canopy <END>
<BEG> initialize the distance function i e set min max value for numeric attribute with the supplied instance <END>
<BEG> set a ready-to-use miss value replacement filter param missingreplacer the miss value replacement filter to use <END>
<BEG> get the canopy cluster center <END>
<BEG> set the canopy to use replaces any learn by this clusterer already param canopy the canopy to use <END>
<BEG> get the actual value of t2 which may be different from the initial value if the heuristic be use return the actual value of t2 <END>
<BEG> set the t1 distance <END>
<BEG> set the how often to prune low density canopy during train param p how often every p instance to prune low density canopy <END>
<BEG> set the minimum t2-based density below which a canopy will be prune during periodic pruning <END>
<BEG> set the maximum number of candidate canopy to retain in memory during training <END>
<BEG> gets whether miss value be to be replace <END>
<BEG> return a textual description of this clusterer param header true if the header should be print return a string describe the result of the clustering <END>
<BEG> return an array of cluster assignment correspond to the most recent set of instance cluster <END>
<BEG> return the array order by cluster number of minimum error class to cluster mapping return an array of class to cluster mapping <END>
<BEG> return the log likelihood correspond to the most recent set of instance cluster <END>
<BEG> return the global info if it exist for the supplied clusterer param clusterer the clusterer to get the global info for return the global info synopsis for the clusterer throw exception if there be a problem reflect on the clusterer <END>
<BEG> builds the clusterer <END>
<BEG> classifies a give instance <END>
<BEG> determine the number of cluster if necessary see # m_numberofclusters see # m_numberofclustersdetermined <END>
<BEG> adds an instance to the cobweb tree <END>
<BEG> get the acuity value return the acuity <END>
<BEG> set the cutoff param c the cutof <END>
<BEG> returns the type of graph this class represent return drawable tree <END>
<BEG> generates the graph string of the cobweb tree return a < code > string < code > value throw exception if an error occurs <END>
<BEG> returns the number of run of k-means to perform <END>
<BEG> set the number of fold to use when cross-validating to find the best number of cluster <END>
<BEG> set the minimum improvement in cross-validated log likelihood require to consider increase the number of cluster when cross-validating to find the best number of cluster param min the minimum improvement in log likelihood <END>
<BEG> get the minimum improvement in cross-validated log likelihood require to consider increase the number of cluster when cross-validating to find the best number of cluster return the minimum improvement in log likelihood <END>
<BEG> set the minimum improvement in log likelihood necessary to perform another iteration of the e and m step <END>
<BEG> get the degree of parallelism to use <END>
<BEG> set whether to display model output in the old <SEG> original format <END>
<BEG> set the minimum value for standard deviation when calculate normal density <END>
<BEG> get the minimum allowable standard deviation <END>
<BEG> get the maximum number of cluster to consider when cross-validating return the maximum number of cluster to consider <END>
<BEG> set the maximum number of iteration to perform param i the number of iteration throw exception if i be less than 1 <END>
<BEG> get the maximum number of iteration return the number of iteration <END>
<BEG> set debug mode - verbose output param v true for verbose output <END>
<BEG> get debug mode return true if debug mode be set <END>
<BEG> reset to default option <END>
<BEG> return the normal distribution for the cluster model return a < code > double [ ] [ ] [ ] < code > value <END>
<BEG> return the prior for the cluster return a < code > double [ ] < code > value <END>
<BEG> generates a clusterer <END>
<BEG> launch e step task param inst the instance to be cluster return the log likelihood from this e step throw exception if a problem occurs <END>
<BEG> launch the m step task param inst the instance to be cluster throw exception if a problem occurs <END>
<BEG> set the number of cluster to generate <END>
<BEG> initializes the value with random number between 0 and 1 <END>
<BEG> sets an element of the matrix to the give value <END>
<BEG> gets the element of the vector and return them a double array <END>
<BEG> returns the sum of this vector with another <END>
<BEG> returns the inner or dot product of two vector param b the multiplication matrix return the double represent the dot product <END>
<BEG> computes the scalar product of this vector with a scalar param s the scalar <END>
<BEG> norms this vector to length 1 0 <END>
<BEG> generates and return the javadoc for the specified start end tag pair <END>
<BEG> parses the give commandline parameter and generate the javadoc <END>
<BEG> return the type of attribute that be locate return the type of attribute <END>
<BEG> return the index that be allow to check for the attribute type return the index that be check for the attribute type <END>
<BEG> return the underlying data return the underlying instances object <END>
<BEG> return actual index in the instances object <END>
<BEG> returns the index of the attributelocator object <END>
<BEG> updates the counter for one more observed distinct value <END>
<BEG> copies the instance but fill up it value base on the give array of double <END>
<BEG> set slient mode <SEG> i e <SEG> no output at all to stdout param value whether silent mode be active or not <END>
<BEG> get whether silent mode be turn on return true if silent mode be on <END>
<BEG> print the give message to stdout <SEG> if not silent mode param msg the text to print to stdout <END>
<BEG> print the give message + lf to stdout <SEG> if not silent mode param msg the message to println to stdout <END>
<BEG> set the object to work on param value the object to use <END>
<BEG> get the object use in the test <END>
<BEG> return the success of the test return true if the test be successful <END>
<BEG> runs some diagnostic test on the object <END>
<BEG> sets the user-supplied option create a copy param value the user-supplied option to use <END>
<BEG> gets the current user-supplied option create a copy return the user-supplied option <END>
<BEG> prints the give option to a string <END>
<BEG> runs some diagnostic test on an optionhandler object <END>
<BEG> extracts the package name from the clean classname <END>
<BEG> initialize the cache for the classnames <END>
<BEG> return the list of classnames associate with this class and package <SEG> if available <SEG> otherwise null <END>
<BEG> clear the cache for class classnames query <END>
<BEG> add url to classpath param u url throw ioexception if something go wrong when add a url <END>
<BEG> computes the entropy of the give array <END>
<BEG> computes conditional entropy of the row give the column <END>
<BEG> computes gain ratio for contingency table split on row <END>
<BEG> returns negative base 2 logarithm of multiple hypergeometric probability for a contingency table <END>
<BEG> calculates the symmetrical uncertainty for base 2 <END>
<BEG> help method for compute entropy <END>
<BEG> get the file specify a the source return the source file <END>
<BEG> set the source file param file the source file exception ioexception if an error occurs <END>
<BEG> resets the loader ready to read a new data set throw ioexception if something go wrong <END>
<BEG> resets the loader object and set the source of the data set to be the supply file object <END>
<BEG> tip text suitable for display int the gui return a description of this property a a string <END>
<BEG> set whether to use relative rather than absolute paths param rp true if relative path be to be use <END>
<BEG> gets whether relative path be to be use return true if relative path be to be use <END>
<BEG> gets all the file extension use for this type of file return the file extension <END>
<BEG> sets ihe file extension <END>
<BEG> default implementation set retrieval mode to none exception never <END>
<BEG> reset the option <END>
<BEG> gets instance that should be store <END>
<BEG> sets the strcuture of the instance for the first step of incremental saving <END>
<BEG> set whether to retain the value of string attribute in memory in the header when reading incrementally <END>
<BEG> get the file extension use for arff file return the file extension <END>
<BEG> resets the loader ready to read a new data set or the same data set again <END>
<BEG> set the url to load from param url the url to load from throw ioexception if the url ca n't be set <END>
<BEG> set the maximum number of decimal place to print param maxdecimal the maximum number of decimal place to print <END>
<BEG> get the maximum number of decimal place to print return the maximum number of decimal place to print <END>
<BEG> gets whether the output data be compressed <END>
<BEG> sets whether to compress the output <END>
<BEG> writes a batch of instance throw ioexception throw ioexception if save in batch mode be not possible <END>
<BEG> read the data set incrementally -- -get the next instance in the data set or return null if there be no more instance to get <END>
<BEG> return a vector with the classnames of all the file loader <END>
<BEG> try to determine the loader to use for this kind of file <SEG> return null if none can be find <END>
<BEG> return a vector with the classnames of all the url file loader <END>
<BEG> try to determine the url loader to use for this kind of file <SEG> return null if none can be find <END>
<BEG> get whether there be no header row in the data <END>
<BEG> returns the current placeholder for miss value <END>
<BEG> sets the placeholder for miss value <END>
<BEG> returns the current attribute range to be force to type string <END>
<BEG> sets the attribute range to be force to type string <END>
<BEG> gets the attribute range to be force to type numeric return the range <END>
<BEG> sets the attribute range to be force to type numeric param value the range <END>
<BEG> get the character s to use recognize a string enclosures return the character to use a string enclosure <END>
<BEG> set the character s to use recognize a string enclosures param enclosure the character to use a string enclosure <END>
<BEG> returns the character use a column separator <END>
<BEG> get the buffer size to use - i e <END>
<BEG> set whether to not write the header row param b true if no header row be to be write <END>
<BEG> gets meta data for the database connection object <END>
<BEG> dewtermines if the current query retrieve a result set or update a table return the update count -1 if the query retrieve a result set <END>
<BEG> initializes a new databaseconnection object <SEG> either default one or from custom prop file <END>
<BEG> set whether to truncate i e <END>
<BEG> en dis-ables the automatic generation of a primary key <END>
<BEG> en dis-ables that the relation name be use for the name of the table default enable <END>
<BEG> sets the database url <END>
<BEG> sets the custom property file to use <END>
<BEG> the tip text for this property <END>
<BEG> get whether to save the dictionary a a binary serialized dictionary <SEG> rather than a plain text one return true if the dictionary be to be save a binary rather than plain text <END>
<BEG> gets the rate at which the dictionary be periodically prune <SEG> a a percentage of the dataset size <END>
<BEG> get whether to keep the dictionary sort alphabetically or not return true to keep the dictionary sort <END>
<BEG> gets all the file extension use for this type of file <END>
<BEG> resets the loader ready to read a new data set <END>
<BEG> get the index of the class attribute <END>
<BEG> writes a batch of instance <END>
<BEG> saves an instance incrementally <END>
<BEG> returns whether double or single precision be use <END>
<BEG> sets whether to use tabs instead of blank <END>
<BEG> returns whether tab be use instead of blank <END>
<BEG> gets the set return the current setting <END>
<BEG> set the character set to use when read text file an empty string indicate that the default character set will be use <END>
<BEG> sets whether to print some debug information <END>
<BEG> sets whether the filename will be store a an extra attribute <END>
<BEG> returns a description of the file type <SEG> actually it 's directory <END>
<BEG> return the start year of the copyright return the start year <END>
<BEG> return the end year of the copyright i e <SEG> current year return the end current year <END>
<BEG> return the entity own the copyright return the owner <END>
<BEG> return the address of the owner return the address <END>
<BEG> only for test param args ignore <END>
<BEG> return a new log instance param filename the name of the log param size the size of the file in byte param numfiles the number of file for rotate return the log instance <END>
<BEG> set whether the logging be enable or not param value if true logging will be enable <END>
<BEG> return whether the logging be enabled return true if the logging be enable <END>
<BEG> return a new instance of a clock return a new instance of a clock <END>
<BEG> return the instance of the clock that be internally used return the clock that 's be use <END>
<BEG> stop the clock and print the message associate with the time <SEG> but only if the logging be enable <END>
<BEG> return a default debug random object <SEG> with no particular seed and debugging enable <END>
<BEG> return a debug random object with the specify seed and debugging enable <END>
<BEG> return a default timestamp for the current date time return a new timestamp <END>
<BEG> return the system temp directory return the temp directory <END>
<BEG> return the home directory of the user return the user 's home directory <END>
<BEG> return the current work directory of the user return the user 's current work directory <END>
<BEG> get the id of this set of default return the id of this set of default <END>
<BEG> set the id for this set of default param id the id to use <END>
<BEG> get the map of default setting return the map of default setting <END>
<BEG> add the supplied default to this one <END>
<BEG> pure <END>
<BEG> returns the description of one instance without weight append <END>
<BEG> get the average document length to use when normalize return the average document length <END>
<BEG> set whether to keep the dictionary sort alphabetically a it be build <END>
<BEG> gets whether output instance contain 0 or 1 indicating word presence <SEG> or word count <END>
<BEG> sets which attribute be to be process <END>
<BEG> gets whether the supplied column be to be process or skip <END>
<BEG> gets the number of word per class if there be a class attribute assign to attempt to keep <END>
<BEG> gets the rate number of instance at which the dictionary be periodically prune <END>
<BEG> sets the rate number of instance at which the dictionary be periodically prune param newperiodicpruning the rate at which the dictionary be periodically prune <END>
<BEG> get the attribute name prefix <END>
<BEG> sets whether if the word frequencies in a document should be transform into : < br > fij log num of docs num of docs with word i < br > where fij be the frequency of word i in document instance j <END>
<BEG> get whether word frequency for a document should be normalized return true if word frequency should be normalize <END>
<BEG> set whether word frequency for a document should be normalize param n true if word frequency should be normalize <END>
<BEG> gets the currently set input format return the current input format <END>
<BEG> returns true if this dictionarybuilder be ready to vectorize incoming instance return true if we can vectorize incoming instance <END>
<BEG> get the output format return the output format throw exception if there be no input format set and or the dictionary have not be construct yet <END>
<BEG> process an instance by tokenizing string attribute and update the dictionary <END>
<BEG> prunes the dictionary of low frequency term <END>
<BEG> clear the dictionary s <END>
<BEG> performs final pruning and consolidation accord to the number of word to keep property <END>
<BEG> load a dictionary from a file param toload the file to load from param plaintext true if the dictionary be in text format throw ioexception if a problem occurs <END>
<BEG> load a binary dictionary from an input stream param be the input stream to read from throw ioexception if a problem occurs <END>
<BEG> save the dictionary in textual format param writer the writer to write to throw ioexception if a problem occurs <END>
<BEG> save the dictionary in binary form param o the output stream to write to throw ioexception if a problem occurs <END>
<BEG> set the fully qualify enum class name param enumclass the fully qualified name of the enum class <END>
<BEG> set the select wrap enum value a obtain by call tostring on the enum value param selectedenumvalue the enum value to wrap <END>
<BEG> get the select wrap enum value a obtain by call tostring on the enum value return the enum value to wrap <END>
<BEG> helper method to recover an enum value give the fully qualified name of the enum and the value in question a string param enumclass a string contain the fully qualified name of the enum class param enumvalue a string contain the value of the enum to find return the enum value a an object throw exception if a problem occurs <END>
<BEG> get the singleton system-wide visible to every class in the running vm set of environment variable <END>
<BEG> substitute a variable name for their value in the give string <END>
<BEG> add a a variable to the internal map of this property object and to the global system-wide environment ; param key the name of the variable param value it value <END>
<BEG> remove a name variable from the map <END>
<BEG> does post processing of the distance if necessary return by distance distance instance first <SEG> instance second <SEG> double cutoffvalue <END>
<BEG> returns the squared difference of two value of an attribute <END>
<BEG> returns value in the middle of the two parameter value <END>
<BEG> evaluates the java macro on the give argument param node the argument to the java macro retun an ast abstract syntax tree node <END>
<BEG> whether the macro be contain in one of the combined declaration <END>
<BEG> whether the macro be declare <END>
<BEG> ' < code > + < code > ' plus operator <END>
<BEG> ' < code > < code > ' time operator <END>
<BEG> ' < code > + < code > ' unary plus operator <END>
<BEG> ' < code > ! < code > ' or ' < code > not < code > ' logical not operator <END>
<BEG> whether the variable be declare param name name of the variable be queried return whether the variable be declare <END>
<BEG> tries to fetch a declared variable param name name of the variable to be fetch return an ast abstrac syntax tree node represent the variable <END>
<BEG> returns an object to initialize the declared variable return an object to initialize the declared variable <END>
<BEG> whether the give macro be declare param name name of the macro return whether the give macro be declare <END>
<BEG> evaluates the 'ismissing ' macro param params the argument for the macro return an ast node represent the ismissing function <END>
<BEG> sets the instance at index i of the supplied dataset to be the current instance param i the index of the instance to be set throw unsupportedoperationexception if the full dataset have not be retain in memory <END>
<BEG> whether a miss value have be evaluate during computation < p > will be reset when the { link # setinstance int } or { link # setinstance instance } method be call <END>
<BEG> returns whether the variable be declare param name name of the variable return whether it have be declare <END>
<BEG> tries to fetch a variable of an instance value < p > the same invariant of { link variabledeclarations } applies here too <END>
<BEG> sets the corresponding stats object param stats the stats object whose field should be expose <END>
<BEG> returns whether the stats field be use in the program < p > must be one of the exposed variable < p > this be only meaningful after compilation <END>
<BEG> tries to fetch a stats field < p > the same invariant of { link variabledeclaration } apply here too <END>
<BEG> returns an enumeration of this vector <END>
<BEG> returns an enumeration of this vector <SEG> skip the element with the give index <END>
<BEG> removes all component from this vector and set it size to zero <END>
<BEG> appends all element of the supplied vector to this vector <END>
<BEG> sets the vector 's capacity to the give value <END>
<BEG> swaps two element in the vector <END>
<BEG> set the file path param path the path to set <END>
<BEG> get the file path return the path to set <END>
<BEG> get the file wrap in this instance return the file object <END>
<BEG> set the capabilities handler to generate the data for <END>
<BEG> return the current set capabilitieshandler to generate the dataset for <SEG> can be null <END>
<BEG> return the current filename for the dataset to base the capability on <END>
<BEG> set the class index <SEG> -1 for none <SEG> first and last be also valid <END>
<BEG> whether the give capability be enable <END>
<BEG> whether the give not to have capability be enable <END>
<BEG> the capability to search for <END>
<BEG> uses the give capabilities for the search <END>
<BEG> the not to have capability to search for <END>
<BEG> uses the give not to have capabilities for the search <END>
<BEG> return the match from the last find call <END>
<BEG> executes the location of class with parameter from the commandline <END>
<BEG> set the font name param fontname the name of the font <END>
<BEG> get the font name return the font name <END>
<BEG> set the font style see constant in font class param style the style of the font <END>
<BEG> get the font style see constant in font class return the style of the font <END>
<BEG> set the font size param size the size <END>
<BEG> turns a json object <SEG> if possible <SEG> into an instances object only header <END>
<BEG> set the classname of the class to generate the javadoc for param value the new classname <END>
<BEG> run the javadoc producer with the give commandline option param option the commandline option <END>
<BEG> performs the actual logging <END>
<BEG> solve a x = b param b a matrix with as many row a a and any number of column <END>
<BEG> set some element to a value param i0 the index of the first element param i1 the index of the second element param s the value <END>
<BEG> set some element use a 2-d array param i0 the index of the first element param i1 the index of the second element param j0 the index of the start element in the 2-d array param v the value <END>
<BEG> set some element use a doublevector <END>
<BEG> returns a copy of the doublevector usng a double array <END>
<BEG> sorts the array in place with index return <END>
<BEG> sorts the array in place with index change param xi first index param xj last index param index array that store all index <END>
<BEG> sets the size of the vector param m the size <END>
<BEG> adds a value to an element param i the index of the element param s the value <END>
<BEG> adds an element into the vector param x the value of the new element <END>
<BEG> returns the squared vector <END>
<BEG> returns the square-root of all the element in the vector <END>
<BEG> makes a deep copy of the vector <END>
<BEG> clones the doublevector object <END>
<BEG> returns the inner product of two doublevectors param v the second doublevector return the product <END>
<BEG> returns the sign of all element in term of -1 <SEG> 0 and +1 <END>
<BEG> returns the sum of all element in the vector <END>
<BEG> returns the squared sum of all element in the vector <END>
<BEG> adds a value to all the element param x the value <END>
<BEG> adds another vector element by element param v the second vector <END>
<BEG> adds another vector in place element by element param v the second vector <END>
<BEG> subtracts a value param x the value <END>
<BEG> subtracts another doublevector element by element in place param v the second doublevector <END>
<BEG> multiplies a scalar param s scalar return s v <END>
<BEG> multiply a vector by a scalar in place <SEG> u = s u param s scalar return replace u by s u <END>
<BEG> divided by another doublevector element by element param v the second doublevector <END>
<BEG> divided by another doublevector element by element in place param v the second doublevector <END>
<BEG> checks if it be an empty vector <END>
<BEG> returns a vector that store the cumulate value of the original vector <END>
<BEG> cumulates the original vector in place <END>
<BEG> returns true if vector not sort <END>
<BEG> swaps the value store at i and j param i the index i param j the index j <END>
<BEG> returns the maximum value of all element <END>
<BEG> applies a method to the vector param classname the class name param method the method <END>
<BEG> convert the doublevecor to a string param digits the number of digit after decimal point param trail true if trailing zero be to be show <END>
<BEG> return the eigenvector matrix return v <END>
<BEG> sets the value of element from an int array <END>
<BEG> generates an intvector that store all integer inclusively between two integer <END>
<BEG> sets the capacity of the vector param capacity the new capacity of the vector <END>
<BEG> returns a subvector a index by an intvector <END>
<BEG> shifts an element to another position <END>
<BEG> convert the intvecor to a string param digits number of digit to be show param trailing true if trailing zero be to be show <END>
<BEG> return low triangular factor return l <END>
<BEG> return pivot permutation vector return piv <END>
<BEG> return pivot permutation vector a a one-dimensional double array return double piv <END>
<BEG> determinant return det a exception illegalargumentexception matrix must be square <END>
<BEG> sqrt a^2 + b^2 without under overflow <END>
<BEG> returns the square of a value param x return the square <END>
<BEG> returns the cumulative probability of the chi-squared distribution param x the quantile <END>
<BEG> returns the cumulative probability of the noncentral chi-squared distribution <END>
<BEG> returns the cumulative probability of a set of noncentral chi-squared distribution <END>
<BEG> returns the log-density of a set of noncentral chi-squared distribution <END>
<BEG> generates a sample of a chi-square distribution <END>
<BEG> is the matrix full rank ? <END>
<BEG> return the householder vector return lower trapezoidal matrix whose column define the reflection <END>
<BEG> return the upper triangular factor return r <END>
<BEG> generate and return the economy-sized orthogonal factor return q <END>
<BEG> least square solution of a x = b param b a matrix with as many row a a and any number of column <END>
<BEG> establish the home directory for the store throw ioexception if a problem occurs <END>
<BEG> lock the store throw ioexception if a problem occurs <END>
<BEG> unlocks the metastore <END>
<BEG> returns a string describe this near neighbour search algorithm <END>
<BEG> builds the balltree on the supplied set of instance point supply with setinstances instances method and reference by the m_instances field <END>
<BEG> returns k near instance in the current neighbourhood to the supply instance <END>
<BEG> returns the distance of the k near neighbour <END>
<BEG> adds one instance to the balltree <END>
<BEG> adds the give instance 's info <END>
<BEG> returns an enumeration of the additional measure name <END>
<BEG> returns true if the node be a leaf node if both it left and right child be null <END>
<BEG> sets the the start and end index of the portion of the master index array that be assign to this node <END>
<BEG> sets the pivot centre of this node ball <END>
<BEG> returns the pivot centre of the node 's ball <END>
<BEG> sets the radius of the node 's ball <END>
<BEG> returns the number of instance in the hyper-spherical region of this node <END>
<BEG> calculates the centroid pivot of a node <END>
<BEG> checks whether if this ball splitter be correctly intialized or not i e <END>
<BEG> sets the training instance on which the tree be or be to be build <END>
<BEG> sets the master index array contain index of the training instance <END>
<BEG> returns the maximum relative radius of a leaf node <END>
<BEG> gets whether if a parent ball should completely enclose it two child ball <END>
<BEG> sets the master index array that point to instance in m_instances <SEG> so that only this array be manipulate <SEG> and m_instances be leave untouched <END>
<BEG> returns the number of node internal + leaf in the built tree <END>
<BEG> calculates the centroid pivot of a node base on it two child node <END>
<BEG> calculates the radius of a node base on it two child node <END>
<BEG> splits a ball into two <END>
<BEG> partitions the instance around a pivot <END>
<BEG> implements computation of the kth-smallest element accord to manber 's introduction to algorithms <END>
<BEG> returns the wide dimension <END>
<BEG> whether we be normalize the widths range of the dimension attribute or not <END>
<BEG> builds a ball tree middle out <END>
<BEG> returns an anchor point which be furthest from the mean point for a give set of point instance the anchor instance be choose from the give set of point <END>
<BEG> returns a random anchor point instance from a give set of point instance <END>
<BEG> calculates the centroid pivot of a node base on it two child node if merge two node <END>
<BEG> calculates the centroid pivot of a node base on the list of point that it contain tbe two list of it child be provide <END>
<BEG> calculates the radius of a node base on it two child node if merge two node <END>
<BEG> gets whether if the initial anchor be choose randomly <END>
<BEG> gets the current setting of this balltree middleoutconstructor <END>
<BEG> for print index in some give portion of the master index array <END>
<BEG> returns the ballsplitter algorithm set that would be use by the topdown balltree constructor <END>
<BEG> sets the ball split algorithm to be use by the topdown constructor <END>
<BEG> finds the scale level of a give value <END>
<BEG> creates a new internal node for a give instance point p param idx the index of the instance the node represent <END>
<BEG> creates a new leaf node for a give instance point p param idx the index of the instance this leaf node represent <END>
<BEG> builds the tree on the give set of instance <END>
<BEG> replaces the current top max value in the heap with the new one <END>
<BEG> returns a cover set for a give level scale <END>
<BEG> swap two node in a cover set <END>
<BEG> half-sorts a cover set <SEG> so that nod near to the query be at the front <END>
<BEG> performs k-nn serach for a single give query test instance <END>
<BEG> returns k-nns of a give target instance <SEG> from among the previously supply training instance supply through setinstances method p s <END>
<BEG> returns the nn instance of a give target instance <SEG> from among the previously supply training instance <END>
<BEG> returns the distance of the k -nn s find early by knearestneighbours nearestneighbour <END>
<BEG> checks if there be any instance with miss value <END>
<BEG> sets the distance function to use for near neighbour search <END>
<BEG> returns the base in use for expansion constant <END>
<BEG> prints a cover tree start from the give node <END>
<BEG> method for test the class from command line <END>
<BEG> replace all element in the stack with the element of another give stack <END>
<BEG> pushes the give element to the stack <END>
<BEG> gets the search method use <END>
<BEG> gets the search method specification string <SEG> which contain the class name of the search method and any option to the search method return the search method string <END>
<BEG> updates the instance info in the underlying search method <SEG> once the instance have be filter <END>
<BEG> builds the kdtree on the supplied set of instance point <END>
<BEG> returns the k near neighbour of the supplied instance <END>
<BEG> returns the distance to the knearest or 1 near neighbour currently find with either the knearestneighbours or the nearestneighbour method <END>
<BEG> recursively add an instance to the tree start from the supplied kdtreenode <END>
<BEG> checks if there be any miss value in the give instance <END>
<BEG> returns the wide dimension attribute in a kdtreenode widest after normalize <END>
<BEG> returns the distance between a point and an hyperrectangle <END>
<BEG> finds the close point in the hyper rectangle to a give point <END>
<BEG> sets the minimum relative box width <END>
<BEG> sets the maximum number of instance in a leaf <END>
<BEG> sets the flag for normalize the width of a kdtree node by the width of the dimension in the universe <END>
<BEG> return the distance function currently in use <END>
<BEG> returns the splitting method currently in use to split the node of the kdtree <END>
<BEG> sets the splitting method to use to split the node of the kdtree <END>
<BEG> gets the splitting dimension <END>
<BEG> checks if node be a leaf <END>
<BEG> checks whether an object of this class have be correctly initialize <END>
<BEG> sets whether if a nodes region be normalize or not <END>
<BEG> gets whether if identical instance be skip from the neighbourhood <END>
<BEG> sets the instance comprise the current neighbourhood <END>
<BEG> updates the linearnnsearch to cater for the new add instance <END>
<BEG> signals start of the near neighbour search <END>
<BEG> increments the point count number of datapoints look at <END>
<BEG> increments the coordinate count number of coordinate attribute look at <END>
<BEG> add the give number to the point count <END>
<BEG> returns the total number of point visit <END>
<BEG> returns the mean of point visit <END>
<BEG> returns the total sum of coords per point <END>
<BEG> increments the leaf count <END>
<BEG> increments the internal node count <END>
<BEG> returns the mean of number of leaf visit <END>
<BEG> adds all method from the supplied class to the supplied list of method <END>
<BEG> gets a list of option for the supplied class <END>
<BEG> get the setting of the supplied object <END>
<BEG> construct a string contain the class name of an optionhandler and it option setting param handler the optionhandler to construct an option string for return a string contain the name of the handler class and it option <END>
<BEG> construct an instance of an option handler from a string specify it class name and option value param optionvalue a string contain the class of the option handler follow by it option return an instantiated option handle object throw exception if a problem occurs <END>
<BEG> removes an option from a give list of string that specifies option <END>
<BEG> returns the option 's number of argument <END>
<BEG> set whether to add the valid option be prolog param value true if the prolog be to be add <END>
<BEG> whether valid option be prolog be include in the javadoc return true if the prolog be print <END>
<BEG> set the package manager for this package param p the package manager to use <END>
<BEG> convenience method to return the name of this package <END>
<BEG> get the list of package that this package depend on <END>
<BEG> gets a list of installed package that this package depend on that be currently incompatible with this package <END>
<BEG> returns true if this package be already installed return true if this package be instal <END>
<BEG> get package information on the name installed package <END>
<BEG> checks to see if the package home exists and create it if necessary <END>
<BEG> get all package that the system know about i e <END>
<BEG> get a list of package that be not currently instal <END>
<BEG> load the serialize installed package cache file return a list of installed package load from the cache file throw exception if a problem occurs <END>
<BEG> get the source package <END>
<BEG> get the target package constraint <END>
<BEG> set the package that this constraint apply to <END>
<BEG> returns a versioncomparison equivalent to the supply string operator <END>
<BEG> parses a version number and return major <SEG> minor and revision number in an array of integer <END>
<BEG> check the target package against the constraint embody in this packageconstraint <END>
<BEG> get the low bound of this range return the low bound <END>
<BEG> get the low comparison return the low comparison <END>
<BEG> add the supplied list of fully qualified class name to the disabled list param classnames a list of class name to add <END>
<BEG> add the supply fully qualified class name to the list of disabled plugins param classname the fully qualified name of a class to add <END>
<BEG> get the number of resource available under a give resource group id <END>
<BEG> get a set of name of plugins that implement the supplied interface <END>
<BEG> get a sorted list of name of plugins that implement the supplied interface <END>
<BEG> remove plugins of a specific type <END>
<BEG> checks if a name plugin exists in the map of registered plugins param interfacetype the fully qualified interface name of the plugin type param name the name short description of the plugin to get return true if the name plugin exists <END>
<BEG> get an instance of a concrete implementation of a plugin type param interfacetype the fully qualified interface name of the plugin type param name the name short description of the plugin to get return the concrete plugin or null if the plugin be disabled throw exception if the plugin ca n't be find or instantiate <END>
<BEG> get the result of evaluate the expression for continuous optype <END>
<BEG> static factory method for create non-sparse or sparse array type a need <END>
<BEG> returns the index of the value store at the give position param position the position return the index of the value store at the give position <END>
<BEG> gets the value at index from the array <END>
<BEG> gets the value at index from the array param index the index of the value to get <END>
<BEG> gets the value at index from the array a a string <END>
<BEG> set the structure of the parameter that be expect a input by this function <END>
<BEG> returns an array of the name of the parameter expect a input by this function return an array of the parameter name <END>
<BEG> get the result of apply this function <END>
<BEG> get the result of evaluate the expression <END>
<BEG> returns an array of the name of the parameter expect a input by this function <END>
<BEG> get this derived field a an attribute <END>
<BEG> get the derived field value for the give incoming vector of value <END>
<BEG> set the field definition for this expression to use param fielddefs the field definition to use throw exception if there be a problem set the field definition <END>
<BEG> return the name attribute from the list of reference field <END>
<BEG> get the optype of the result of apply this expression <END>
<BEG> gets the rest of the content model <END>
<BEG> create an instance of { link jaxbelement } { code < } { link list } { code < } { link double } { code > } { code > } } <END>
<BEG> convert an < code > instance < code > to an array of value that match the format of the mining schema <END>
<BEG> set the instances that represent the mining schema <END>
<BEG> get the usage type of this field <END>
<BEG> return a textual representation of this miningfield <END>
<BEG> set the index of this field in the mining schema instances param index the index of the attribute in the mining schema instances that this field represent <END>
<BEG> get the outlier treatment method use for this field <END>
<BEG> get the miss value treatment method for this field <END>
<BEG> apply the outlier treatment method for this field <END>
<BEG> get the prior probability for the supplied value <END>
<BEG> get the default value numeric target return the default value throw exception if there be no targetvalue define <END>
<BEG> get the value discrete case only for this target <END>
<BEG> return this field a an attribute <END>
<BEG> for test only param args the commandline option - ignore throw exception if something go wrong <END>
<BEG> gets queue 's size <END>
<BEG> returns a sorted list of n distinct integer that be randomly choose from 0 <SEG> 1 <SEG> <SEG> n - 1 <END>
<BEG> draws a sorted list of n distinct integer from 0 <SEG> 1 <SEG> <SEG> n - 1 base on the simple algorithm a in < p > j s <END>
<BEG> draws a sorted list of n distinct integer from 0 <SEG> 1 <SEG> <SEG> n - 1 base on drawsparsesample follow by radix sort <END>
<BEG> sorts the give array of non-negative integer in ascend order use lsd radix sort <END>
<BEG> generate a value of a variate follow standard exponential distribution use simple inverse method < p > variates relate to standard exponential can be generate use simple transformation <END>
<BEG> generate a value of a variate follow standard erlang distribution <END>
<BEG> sets whether the range sense be invert <SEG> i e <END>
<BEG> sets the flag array <END>
<BEG> translates a single string selection into it 's internal 0-based equivalent <END>
<BEG> determines if a string represent a valid index or simple range <END>
<BEG> checks whether there be any instance weight other than 1 0 set <END>
<BEG> resamples the dataset use { link instances # resamplewithweights random } if there be any instance weight other than 1 0 set <END>
<BEG> reads property that inherit from three location <END>
<BEG> return the currently use groovy classloader <END>
<BEG> return whether the groovy class be present or not <SEG> i e <END>
<BEG> read or create the serialversionuid for the give class <END>
<BEG> get a weka package classloader aware { code objectinputstream } instance for read object from the supply input stream param stream the stream to wrap return an { code objectinputstream } instance that be aware of of weka package classloaders throw ioexception if a problem occurs <END>
<BEG> outputs information about a class on the commandline <SEG> take class name a argument <END>
<BEG> checks to see whether this object be equal to another <END>
<BEG> load the setting with id m_id from store m_storename <END>
<BEG> get the id use for these setting return the id use <END>
<BEG> get the store name for these setting return the store name <END>
<BEG> applies a set of default setting <END>
<BEG> get a list of setting ids return a list of the setting ids manage by this setting instance <END>
<BEG> set a value for a setting <END>
<BEG> returns true if there be setting available for a give id param settingsid the id to check return true if there be setting available for that id <END>
<BEG> returns true if a give setting have a value param settingsid the id of the setting group param propname the actual setting to check for return true if the setting have a value <END>
<BEG> convert a set value store in a string to type t param propval the value of the setting a a string param defaultval the default value for the setting of type t param < t > the type of the set return the setting a an instance of type t <END>
<BEG> pure non_null <END>
<BEG> returns natural logarithm of factorial use gamma function <END>
<BEG> returns base 2 logarithm of binomial coefficient use gamma function <END>
<BEG> computes standard error for observed value of a binomial random variable <END>
<BEG> returns chi-squared probability for give value and degree of freedom <END>
<BEG> returns the error function of the normal distribution <END>
<BEG> returns the gamma function of the argument <END>
<BEG> returns the gamma function compute by stirling 's formula <END>
<BEG> runs the stemmer with the give option param args the option <END>
<BEG> returns the word a it be <END>
<BEG> return an enumeration over all currently store stemmer name <END>
<BEG> return the name of the current stemmer <SEG> null if none be set <END>
<BEG> list all the option on the command line param stemmer the stemmer to list the parameter for return the option string <END>
<BEG> sets the file contain the stopwords <SEG> null or a directory unset the stopwords <END>
<BEG> return the file use for obtain the stopwords <SEG> if the file represent a directory then the default one be use <END>
<BEG> resets the scheme and the initialized state <END>
<BEG> performs intialization of the scheme <END>
<BEG> returns true if the give string be a stop word <END>
<BEG> for print the system info to stdout <END>
<BEG> return the select tag in string representation return the select tag a string <END>
<BEG> split the author on the and and return a vector with the name return the author in an array <END>
<BEG> return the unique id either the one use in create this instance or the automatically generated one return the id for this information <END>
<BEG> set the value for the give field <SEG> overwrite any previously exist one <END>
<BEG> return the value associate with the give field <SEG> or empty if field be not currently store <END>
<BEG> return true if the field be store and have a value different from the empty string <END>
<BEG> return an enumeration over all the stored field return all currently store field <END>
<BEG> return true if there be further technical information store in this return true if there be further technical information available <END>
<BEG> return an enumeration of all the additional technical information if there be any return an enumeration over all additional technical information <END>
<BEG> add the give information to the list of additional technical information param value the information to add <END>
<BEG> add the give printstream to the list of stream <END>
<BEG> return the specify printstream from the list <END>
<BEG> flush all the printstreams <END>
<BEG> print the give int to the stream <END>
<BEG> print the give char array to the stream <END>
<BEG> print a new line to the stream <END>
<BEG> writes < code > len < code > bytes from the specify byte array start at offset < code > off < code > to this stream <END>
<BEG> writes the specified byte to this stream <END>
<BEG> a convenience method to write a formatted string to this output stream use the specify format string and argument <END>
<BEG> appends the specified character sequence to this output stream <END>
<BEG> return only the classname and the number of stream <END>
<BEG> return whether there be more element still return true if there be still more element <END>
<BEG> runs the tokenizer with the give option and string to tokenize <END>
<BEG> returns an enumeration of all the available option return an enumeration of all available option <END>
<BEG> get the value of delimiters not backquoted <END>
<BEG> gets the max n of the ngram <END>
<BEG> sets the min size of the ngram <END>
<BEG> returns the next element of this enumeration if this enumeration object have at least one more element to provide <END>
<BEG> check whether the give prefix be store in the trie param prefix the prefix to check return true if the prefix be part of the trie <END>
<BEG> whether the give version string be equal to this version param o the version-string to compare to return true if the version-string be equal to it own <END>
<BEG> check whether this version be old than the one from the give version string param o the version-string to compare with return true if this version be old than the give one <END>
<BEG> return the current version a string return the current version <END>
<BEG> return an instantiated instance of the supplied class name <END>
<BEG> return the path to the weka jar file if find on the classpath <END>
<BEG> get the entry in the weka class loader i e <END>
<BEG> get a set of all class contain in all top-level jar file from weka package <END>
<BEG> removes the named package classloader from those manage by this class <END>
<BEG> attempts to locate a classloader for the name class <END>
<BEG> find a name resource <END>
<BEG> get the classloader that cover the jar that contain the name resource <END>
<BEG> try to find a class from the classloader for the name package <END>
<BEG> check to see if the name class exist in this classloader param classname the name of the class to check for return true if the class exist in this classloader <END>
<BEG> inject all class from the supply input stream into the root classloader <END>
<BEG> checks each classloader to make sure that their dependency be available i e <END>
<BEG> initializes the classloader from the package directory <END>
<BEG> add a package dependency to this classloader param packagename the name of the package to add a a dependency <END>
<BEG> checks for native library and any native library loader class <SEG> a specify by the presence of nativelibs and injectloader entry in the package 's description prop file respectively <END>
<BEG> returns true if a name native library be already present in $ weka_home native param libname the name of the library to check return true if the library be already present in $ weka_home native <END>
<BEG> find an enumeration of resource match the supply name <END>
<BEG> returns true if this classloader be cover the name third-party class param classname the third-party classname to check for return true if this classloader be cover the name third-party class <END>
<BEG> returns a class object if this classloader cover the name globally visible class i e <END>
<BEG> returns a url a resource if this classloader cover the name globally visible resource i e <END>
<BEG> return an enumeration of urls if this classloader cover the name globally visible resource <SEG> or null otherwise <END>
<BEG> try to clear classloader file lock under windows <END>
<BEG> string representation of this classloader return the string representation of this classloader <END>
<BEG> return the name of the package that this classloader load class for return return the name of the package that this classloader load class for <END>
<BEG> check the integrity of this classloader typically do for each classloader after all package have be load by the package manager <END>
<BEG> set any system property specify in the metadata for this package param toload the package in question param progress for print progress debug info <END>
<BEG> main method for use the package manager from the command line param args command line argument <END>
<BEG> add the specified method for the give class to it internal list <END>
<BEG> check whether a method be store for the give property param displayname the display name of the property to check for a method return whether a method be currently store see # m_methods <END>
<BEG> return an enumeration of the stored display name and class of property to ignore < br > < b > note : < b > string and class objects be mix in this enumeration <SEG> depend whether it be a global property to ignore or just one for a certain class ! <END>
<BEG> remove the give display name from the ignore list <END>
<BEG> check whether the give display name be an ignored property param displayname the property to check whether it be on the ignore list return whether the property be in the ignored list see # m_ignored <END>
<BEG> check whether koml be present return return < code > true < code > if koml be present throw exception if koml be not present <END>
<BEG> check whether the give filename end with koml param filename the filename to check return whether it be a koml file or not see koml # file_extension <END>
<BEG> exchange an old uid for a new one <END>
<BEG> return whether a validate parser be use <END>
<BEG> set whether to use a validate parser or not < br > note : this do clear the current dom document ! <END>
<BEG> set the doctype-string to use in the xml output <END>
<BEG> return the current doctype <SEG> can be < code > null < code > <END>
<BEG> set the root node to use in the xml output <END>
<BEG> parse the give xml string can be xml or a filename and return a dom document <END>
<BEG> parse the give file and return a dom document <END>
<BEG> returns the node that the give xpath expression will find in the document <END>
<BEG> returns the node represent by the xpath expression <END>
<BEG> print the current dom document to standard out <END>
<BEG> set whether to suppress warn message or not param suppress true to suppress warning <END>
<BEG> use for debug purpose <SEG> i e <END>
<BEG> generates internally a new xml document and clear also the ignorelist and the mapping for the read write-methods throw exception if something go wrong <END>
<BEG> return either < code > val_yes < code > or < code > val_no < code > depend on the value of < code > b < code > param b the boolean to turn into a string return the value in string representation <END>
<BEG> turn the give string into a boolean <SEG> if a positive number be give <SEG> then zero be consider false <SEG> every other number true ; the empty string be also consider be false param s the string to turn into a boolean return the string a boolean <END>
<BEG> check whether the innermost class be a primitive class handle multi-dimensional array param c the array class to inspect return whether the array consist of primitive element <END>
<BEG> enables derive class to add other property to the dom tree <SEG> e g <END>
<BEG> extract all accesible property from the give object param o the object to turn into an xml representation return the generated dom document throw exception if xml generation fails <END>
<BEG> build the primitive from the give dom node <END>
<BEG> additional pre-processing can happen in derived class before the actual reading from xml work on the raw xml <END>
<BEG> additional post-processing can happen in derived class after read from xml <END>
<BEG> return the give dom document a an instance of the specified class param document the parsed dom document represent the object return the xml a object throw exception if object instantiation fails <END>
<BEG> return the handler for read method return the methodhandler for read method <END>
<BEG> add read and write method for the give class <SEG> i e <SEG> read & ; lt ; name & gt ; and write & lt ; name & gt ; name be prefix by read and write param handler the handler class that contain the read and write method param cls the class to register the read and write method for param name the suffix of the read and write method <END>
<BEG> return the read and write method handler a string return the read write method handler a string <END>
<BEG> return the default number of example return the default number of example <END>
<BEG> sets the number of example <SEG> give by option <END>
<BEG> return the default function return the default function <END>
<BEG> gets the function for generate the data <END>
<BEG> return the default for balance the class return the default for balance the class <END>
<BEG> gets whether the class be balance <END>
<BEG> return the default perturbation fraction return the default perturbation fraction <END>
<BEG> gets the perturbation fraction <END>
<BEG> return if single mode be set for the give data generator mode depend on option setting and or generator type <END>
<BEG> generates a comment string that documentates the data generator <END>
<BEG> return the default noise percentage return the default noise percentage <END>
<BEG> gets the noise percentage <END>
<BEG> sets the number of attribute the dataset should have <END>
<BEG> gets the minimum number of test in rule <END>
<BEG> gets the array that define which of the attribute be see to be irrelevant <END>
<BEG> generate an example of the dataset dataset <END>
<BEG> gets the amplitude multiplier <END>
<BEG> sets the upper and low boundary for the range of x param fromto the string contain the upper and low boundary for the range of x <SEG> separate by <END>
<BEG> gets the upper and low boundary for the range of x return the string contain the upper and low boundary for the range of x <SEG> separate by <END>
<BEG> sets the low boundary for the range of x param value the low boundary <END>
<BEG> gets the low boundary for the range of x return the low boundary for the range of x <END>
<BEG> return the default gaussian noise rate return the default gaussian noise rate <END>
<BEG> gets the gaussian noise rate <END>
<BEG> return the default variance of the noise rate return the default variance of the noise rate <END>
<BEG> sets the noise variance param value the noise variance <END>
<BEG> set the parent datagenerator this cluster belong to param parent the parent datagenerator <END>
<BEG> return a string representation of the cluster return the cluster definition a string <END>
<BEG> sets the upper and low boundary for instance per cluster <END>
<BEG> return the default min number of instance return the default min number of instance <END>
<BEG> gets the low boundary for instance per cluster <END>
<BEG> sets the upper and low boundary for the radius of the cluster <END>
<BEG> return the default distance multiplier return the default distance multiplier <END>
<BEG> sets the distance multiplier <END>
<BEG> return the default input order return the default input order <END>
<BEG> sets the input order <END>
<BEG> gets the ordered flag option o <END>
<BEG> compiles documentation about the data generation after the generation process return string with additional information about generate dataset throw exception no input structure have be define <END>
<BEG> compiles documentation about the data generation before the generation process return string with additional information <END>
<BEG> set the default value throw exception if setting of default fails <END>
<BEG> make a string from the attribues list <END>
<BEG> return the default attribute index range return the default attribute index range <END>
<BEG> return the default cluster type return the default cluster type <END>
<BEG> return the default cluster sub type return the default cluster sub type <END>
<BEG> sets the cluster sub type <END>
<BEG> check <SEG> whether cluster type be random return true if cluster type be random <END>
<BEG> check <SEG> whether cluster sub type be continuous return true if cluster sub type be continuous <END>
<BEG> get a string with the upper and low boundary for the number of instance for this cluster <END>
<BEG> sets the real number of instance for this cluster <END>
<BEG> return the default value list return the default value list <END>
<BEG> sets the range for each attribute <END>
<BEG> sets the class flag <SEG> if class flag be set <SEG> the cluster be list a class atrribute in an extra attribute <END>
<BEG> sets which attribute be boolean <END>
<BEG> return the range of nominal attribute return the range of nominal attribute <END>
<BEG> check if attribute type be not contradict return empty string if no problem <SEG> otherwise error message <END>
<BEG> constructs the instances object represent the format of the generate data <END>
<BEG> sets the relation name the dataset should have <END>
<BEG> sets the format of the dataset that be to be generate <END>
<BEG> gets the random generator <END>
<BEG> remove all entry from the option blacklist <END>
<BEG> check <SEG> whether the give option be in the blacklist of option not to be output by makeoptionstring param option the option to check return true if the option be on the blacklist see # makeoptionstring datagenerator <END>
<BEG> gets the prologue string <END>
<BEG> returns the test represent by a string in prolog notation <END>
<BEG> compares the test with the test that be give a parameter <END>
<BEG> get a probability estimator for a value param give the new value that data be conditional upon return the estimator for the supplied value give the condition <END>
<BEG> display a representation of this estimator <END>
<BEG> gets the number of symbol this estimator operate with return the number of estimator symbol <END>
<BEG> get the sum of all the count return the total sum of count <END>
<BEG> find the minimum distance between value param inst sort instance <SEG> sort param attrindex index of the attribute <SEG> they be sort after return the minimal distance <END>
<BEG> find the minimum and the maximum of the attribute and return it in the last parameter param inst instance use to build the estimator param attrindex index of the attribute param minmax the array to return minimum and maximum in return number of not miss value exception exception if parameter minmax be n't initialize properly <END>
<BEG> return the number of kernel in this kernel estimator return the number of kernel <END>
<BEG> return the precision of this kernel estimator <END>
<BEG> return the standard deviation of this kernel estimator <END>
<BEG> add a new data value to the current estimator <END>
<BEG> compute the parameter of the distribution <END>
<BEG> triggers construction of estimator base on current data and then initialize the statistic <END>
<BEG> sets whether only weight should be udpated <END>
<BEG> param usenormalizedentropy whether to use normalized entropy <END>
<BEG> selects the number of component use leave-one-out bootstrap <SEG> estimate loglikelihood <END>
<BEG> calculates entrpy for give model and data <END>
<BEG> selects the number of component use normalized entropy <END>
<BEG> updates the model base on the current data <END>
<BEG> returns the natural logarithm of the density estimate at the give point <END>
<BEG> adds a value to the density estimator <END>
<BEG> scans through the key field name of the result producer to find the index of the key field to average over <END>
<BEG> simulates a run to collect the key the sub-resultproducer could generate <END>
<BEG> compares a key to a template to see whether they match <END>
<BEG> checks whether any duplicate result with respect to a key template be receive <END>
<BEG> checks that the key for a run only differ in one key field <END>
<BEG> returns an enumeration of any additional measure name that might be in the result producer return an enumeration of the measure name <END>
<BEG> returns an enumeration of any additional measure name that might be in the classifier return an enumeration of the measure name <END>
<BEG> gets the data type of each of the result column produce for a single run <END>
<BEG> gets the name of each of the result column produce for a single run <END>
<BEG> return true if the prediction and target column must be output <END>
<BEG> returns whether the size determination train test classifer be skip <END>
<BEG> updates the option that the current classifier be use <END>
<BEG> gets the raw output from the classifier return the raw output from th<SEG>0e classifier <END>
<BEG> gets a double represent the current date and time <END>
<BEG> gets the key for a specified run number <END>
<BEG> determines the table name that result will be insert into <END>
<BEG> executes a database query to fill the key cache param rp the resultproducer the key belongs to param key the key throw exception if an error occurs <END>
<BEG> get whether the class column be to be remove <END>
<BEG> sets whether the first attribute be treat a the class for all datasets involve in the experiment <END>
<BEG> gets whether the custom property iterator should be use <END>
<BEG> sets the array of value to set the custom property to <END>
<BEG> gets the number of custom iterator value that have be define for the experiment <END>
<BEG> gets a specified value from the custom property iterator array <END>
<BEG> when an experiment be run <SEG> this return the current run number <END>
<BEG> when an experiment be run <SEG> this return the index of the current custom property value <END>
<BEG> returns true if there be more iteration to carry out in the experiment <END>
<BEG> carries out the next iteration of the experiment <END>
<BEG> increments iteration counter appropriately <END>
<BEG> gets the result listener where result will be send <END>
<BEG> writes the experiment to disk <END>
<BEG> sets the object to send result of each run to <END>
<BEG> prepare to generate result <END>
<BEG> set to true if dataset be to be randomize <END>
<BEG> set to true if raw split evaluator output be to be save <END>
<BEG> returns the currently set directory for the test set <END>
<BEG> sets the directory to use for the test set <END>
<BEG> returns the currently set regular expression to use on the relation name <END>
<BEG> sets the regular expression to use on the relation name <END>
<BEG> gets a text descrption of the result producer <END>
<BEG> return a string that be display a tooltip on the perform test button in the experimenter return the string for the tool tip <END>
<BEG> sets the degree of freedom if calibration be require <END>
<BEG> adds an array of observed pair of value <END>
<BEG> returns statistic on the paired comparison <END>
<BEG> returns a string descriptive of the key column value for the datasets param template the template return a value of type 'string ' <END>
<BEG> gets the instance that produce the output <END>
<BEG> separates the instance into resultsets and by dataset run <END>
<BEG> clear the content and fill the column and row name accord to the give sorting <END>
<BEG> gets the index of the the datasets that be display if < code > null < code > then all be display <END>
<BEG> sets the indicies of the datasets to display < code > null < code > mean all <END>
<BEG> returns the name of the column to sort on <END>
<BEG> retrieves all the setting from the give tester param tester the tester to get the setting from <END>
<BEG> set to true if dataset be to be randomize param d true if dataset be to be randomize <END>
<BEG> takes a task object and queue it for execution param t the task object to execute return an identifier for the task that can be use when query task status <END>
<BEG> returns true if sub experiment be to be create on the basis of data set <END>
<BEG> set whether sub experiment be to be create on the basis of data set <END>
<BEG> returns true if sub experiment be to be create on the basis of property <END>
<BEG> set whether sub experiment be to be create on the basis of property <END>
<BEG> add an object to the list of those interested in recieving update information from the remoteexperiment param r a listener <END>
<BEG> get the base experiment use by this remote experiment return the base experiment <END>
<BEG> prepares a remote experiment for run <SEG> create sub experiment throw exception if an error occurs <END>
<BEG> increment the overall number of failure and the number of failure for a particular host param hostnum the index of the host to increment failure count <END>
<BEG> push an experiment back on the queue of wait experiment param expnum the index of the experiment to push onto the queue <END>
<BEG> pushes a host back onto the queue of available host and attempt to launch a wait experiment if any <END>
<BEG> add a host name to the list of remote host param hostname the host name to add to the list <END>
<BEG> get the list of remote host name return the list of remote host name <END>
<BEG> set the list of remote host name param list the list of remote host name <END>
<BEG> overides runexperiment in experiment <END>
<BEG> get the experiment for this sub task return this sub task 's experiment <END>
<BEG> run the experiment <END>
<BEG> return the default width for the row name <END>
<BEG> set the execution status of this task <END>
<BEG> set the returnable result for this task param taskresult the new returnable result for the task <END>
<BEG> get the returnable result of this task <END>
<BEG> returns true if the output format be immediately available after the input format have be set and not only after all the data have be see see batchfinished <END>
<BEG> removewithvalues may return false from input thus not make an instance available immediately even after the first batch have be complete due to match a value that the user want to remove <END>
<BEG> returns whether to allow the determineoutputformat instances method access to the full dataset rather than just the header <END>
<BEG> reset the filter <SEG> i e <SEG> m_newbatch to true and m_firstbatchdone to false <END>
<BEG> in case the output format can not be return immediately <SEG> this method be call before the actual processing of the instance <END>
<BEG> need to override this to deal with inputmappedclassifier case <END>
<BEG> gets the file point to a serialize <SEG> train classifier <END>
<BEG> get whether the classifiction of the classifier be output <END>
<BEG> get whether the old class attribute be remove <END>
<BEG> run the filter with the give argument <END>
<BEG> set whether numeric attribute be be exclude from the transformation param e true if numeric attribute be to be exclude <END>
<BEG> set whether nominal attribute be to be exclude from the transformation param e true if nominal attribute be to be exclude <END>
<BEG> if true <SEG> when generate attribute <SEG> spread weight of old attribute across new attribute <END>
<BEG> set the minimum number of value a nominal attribute must have in order to be transform <END>
<BEG> convert an input instance param current the input instance to convert return a transformed instance throw exception if a problem occurs <END>
<BEG> get the naive bayes estimator in use return the naive bayes estimator <END>
<BEG> get the remove filter in use return <END>
<BEG> set randomization seed param seed the set seed <END>
<BEG> get the wanted class order return class order <END>
<BEG> get the class distribution of the sorted class value <END>
<BEG> return the original internal class value give the randomized class value <SEG> i e <END>
<BEG> set which attribute be to be act on or not <SEG> if invert be true param rangelist a string represent the list of attribute <END>
<BEG> get whether the supplied attribute be to be act on or all other attribute <END>
<BEG> get whether short identifier be to be output <END>
<BEG> set whether to output short identifier for merge value <END>
<BEG> compute factor for bonferroni correction <END>
<BEG> merges value and return list of subset indicator for the value <END>
<BEG> if true <SEG> when generate binary attribute <SEG> spread weight of old attribute across new attribute <END>
<BEG> gets if binary attribute be to be treat a nominal one <END>
<BEG> gets if all nominal value be turn into new attribute <SEG> not only if there be more than 2 <END>
<BEG> returns a description of this option suitable for display a a tip text in the gui <END>
<BEG> set the generator for use in filter param newpartitiongenerator the generator to use <END>
<BEG> get the generator use by this filter return the generator use <END>
<BEG> gets the bias towards a uniform class <END>
<BEG> gets the subsample size a a percentage of the original set <END>
<BEG> sets whether instance be draw with or with out replacement <END>
<BEG> gets whether selection be invert only if instance be draw wihtout replacement <END>
<BEG> sets whether the selection be invert only if instance be draw wihtout replacement <END>
<BEG> creates a subsample of the current set of input instance <END>
<BEG> returns true if instance weight will be adjust to maintain total weight per class <END>
<BEG> sets the value for the distribution spread param spread the new distribution spread <END>
<BEG> gets the value for the distribution spread return the distribution spread <END>
<BEG> sets the value for the max count param maxcount the new max count <END>
<BEG> gets the value for the max count return the max count <END>
<BEG> gets if selection be to be invert <END>
<BEG> gets the fold which be select <END>
<BEG> selects a fold <END>
<BEG> sets the random number seed for shuffle the dataset <END>
<BEG> gets the number of instance forward to translate value between <END>
<BEG> get the current range selection return a string contain a comma separated list of range <END>
<BEG> clears any instance from the history queue <END>
<BEG> test the data whether the filter can actually handle it <END>
<BEG> filter all attribute that should be ignore <END>
<BEG> signify that this batch of input to the filter be finish <END>
<BEG> convert a single instance over <END>
<BEG> gets range of attribute to be ignore <END>
<BEG> set the expression to apply param expr a mathematical expression to apply <END>
<BEG> gets the size of noise data a a percentage of the original set <END>
<BEG> clear the list of attribute specification <END>
<BEG> add an attribute spec to the list param spec the attribute spec to add <END>
<BEG> set the list of attribute spec to use to create the new attribute <END>
<BEG> add the new attribute value to an instance param instance the instance to process <END>
<BEG> create and set the output format <END>
<BEG> get the bean descriptor for this bean return a < code > beandescriptor < code > value <END>
<BEG> gets whether the label be sort or not <END>
<BEG> main method for test and run this class <END>
<BEG> sets which attribute be to be use for interquartile calculation and outlier extreme value detection only numeric attribute among the selection will be use <END>
<BEG> gets the index of the attribute convert <END>
<BEG> get the date format use in output <END>
<BEG> return the class index <END>
<BEG> process the give instance may change the provided instance and return the modified version <END>
<BEG> filter all attribute that should be ignore param data the data to filter return the filtered data throw exception if filtering fails <END>
<BEG> converts log back to density value <END>
<BEG> gets whether the supplied column be to be work on or the others <END>
<BEG> sets whether select column should be work on or all the others apart from these <END>
<BEG> set an input stream to load a binary serialize dictionary from <SEG> rather than source it from a file param source the input stream to read the dictionary from <END>
<BEG> set an input reader to load a textual dictionary from <SEG> rather than source it from a file param source the input reader to read the dictionary from <END>
<BEG> get the dictionary file to read from return the dictionary file to read from <END>
<BEG> gets whether if the word frequencies for a document instance should be normalize or not <END>
<BEG> get the range contain the indicator value <END>
<BEG> sets if the new attribute be to be numeric <END>
<BEG> check if new attribute be to be numeric <END>
<BEG> set the expression to apply param expr a mathematical expression to apply throw exception if the input format be set and there be a problem with the expression <END>
<BEG> gets the minimum frequency <END>
<BEG> get the label for the new merged class <END>
<BEG> sets label of the merged class <END>
<BEG> get the range of the merge value use <END>
<BEG> returns the calculated minimum value for the attribute in the data <END>
<BEG> get the minimum default <END>
<BEG> set the naximum default <END>
<BEG> get the close to default <END>
<BEG> gets the selection of the column <SEG> e g <SEG> first-last or first-3<SEG>5-last return the select index <END>
<BEG> gets whether the class be include in the cleaning process or always skip <END>
<BEG> sets whether the class can be clean <SEG> too <END>
<BEG> get the number of decimal to round to <END>
<BEG> runs the filter from commandline <SEG> use -h to see all option <END>
<BEG> sets which attribute be to be transform to binary <END>
<BEG> get the class contain the transformation method <END>
<BEG> set the transformation method <END>
<BEG> parses a list of option for this object <END>
<BEG> check whether the dimension of filter and range fit together <END>
<BEG> gets the current number of attribute dimensionality to which the data will be reduce to <END>
<BEG> sets the percent the attribute dimension of the data should be reduce to param newpercent the percentage of attribute <END>
<BEG> gets the percent the attribute dimension of the data will be reduce to return the percentage of attribute <END>
<BEG> sets the random seed of the random number generator param seed the random seed value <END>
<BEG> sets the distribution to use for calculate the random matrix param newdstr the distribution to use <END>
<BEG> returns the current distribution that 'll be use for calculate the random matrix return the current distribution <END>
<BEG> gets the current setting for use replacemissingvalues filter return true if the replace miss value filter be use <END>
<BEG> calculates a weighted distribution param weight the weight to use return <END>
<BEG> get the number of attribute & lt ; 1 percentage <SEG> & gt ; = 1 absolute number <END>
<BEG> set whether to invert the selection - i e <END>
<BEG> sets the regular expression to match the attribute name against <END>
<BEG> sets the maximum variance attribute be allow to have before they be delete by the filter <END>
<BEG> sets the regular expression that the attribute name must match <END>
<BEG> returns the current regular expression for <END>
<BEG> returns the regular expression to replace match attribute name with <END>
<BEG> sets whether to replace all occurrence or just the first one <END>
<BEG> returns whether all occurrence be replace or just the first one <END>
<BEG> sets whether to invert the selection of the attribute <END>
<BEG> whether to set all attribute weight to one in output data <END>
<BEG> set the list of attribute to consider for replace miss value param range the list of attribute to consider <END>
<BEG> get the list of attribute to consider for replace miss value return the list of attribute to consider <END>
<BEG> get the nominal string replacement value return the nominal string replacement value <END>
<BEG> get the numeric replacement value return the numeric replacement value <END>
<BEG> set the numeric replacement value param numericconstant the numeric replacement value <END>
<BEG> set the date format to use for parse the date replacement constant param dateformat the date format to use <END>
<BEG> get the date format to use for parse the date replacement constant return the date format to use <END>
<BEG> get the range of index of the attribute use <END>
<BEG> sets range of index of the attribute use <END>
<BEG> set whether miss value should be treat in the same way a zero param m true if miss value be to be treat the same a zero <END>
<BEG> gets how many value be retain return how many value be retain <END>
<BEG> sets how many value be retain param numvalues the number of value to retain <END>
<BEG> gets whether to use value with least or most instance return true if value with least instance be retain <END>
<BEG> sets whether to use value with least or most instance param leastvalues whether value with least or most instance be retain <END>
<BEG> set whether select value should be remove or keep <END>
<BEG> returns true if selection attribute be nominal <END>
<BEG> modifies the header of the instances and return the format w o any instance param instanceinfo the instance structure to modify return the new structure w o instance ! <END>
<BEG> sets the attribute on which misclassifications be base <END>
<BEG> sets the number of cross-validation fold to use - & lt ; 2 mean no cross-validation <END>
<BEG> gets the number of cross-validation fold use by the filter <END>
<BEG> sets the threshold for the max error when predict a numeric class <END>
<BEG> sets the maximum number of cleanse iteration to perform - & lt ; 1 mean go until fully cleanse param iteration the maximum number of iteration <END>
<BEG> gets the maximum number of cleanse iteration perform return the maximum number of iteration <END>
<BEG> set whether selection be invert <END>
<BEG> gets the percentage of instance to select <END>
<BEG> gets range of instance select <END>
<BEG> sets the range of instance to be select <END>
<BEG> get the split point use for numeric selection return the numeric split point <END>
<BEG> gets whether miss value be count a a match <END>
<BEG> set which nominal label be to be include in the selection <END>
<BEG> set whether to apply the filter to instance that arrive once the first training batch have be see <END>
<BEG> set which value of a nominal attribute be to be use for selection <END>
<BEG> decides whether the current instance get retain in the reservoir <END>
<BEG> subsetbyexpression may return false from input thus not make an instance available immediately even after the first batch have be complete if the user have opt to apply the filter to instance after the first batch rather than just pass them through <END>
<BEG> get the { code perspectivemanager } in use by this application return the { code perspective manager } <END>
<BEG> hide the perspective toolbar <END>
<BEG> popup a dialog display the supplied exception param cause the exception to show <END>
<BEG> force a re-validation and repaint of the application <END>
<BEG> subclasses should override this to free any additional resource e g <SEG> jframes and thread when the perspective be no longer need <END>
<BEG> returns true if the perspective be usable at this time <END>
<BEG> set active status of this perspective <END>
<BEG> set whether this perspective be load - i e <END>
<BEG> set the main application <END>
<BEG> get the main application that this perspective belongs to return the main application that this perspective belongs to <END>
<BEG> get the tool tip text for this perspective return the tool tip text for this perspective <END>
<BEG> get an ordered list of menu to appear in the main menu bar <END>
<BEG> returns the perspective 's title return the title of the perspective <END>
<BEG> any member variable be initialize here <END>
<BEG> can only reset the changed state to false param change if false <SEG> reset the changed state <END>
<BEG> return whether the content of the panel be change return true if the content be change <END>
<BEG> return whether the model be read-only return true if model be read-only <END>
<BEG> allows set the weight of the instance at the select row <END>
<BEG> add an instance at the end of the dataset <END>
<BEG> clear the search <SEG> i e <END>
<BEG> calculate the optimal column width for the current column <END>
<BEG> calculate the optimal column width for all column <END>
<BEG> invoked when a mouse button have be press on a component param e the mouse event <END>
<BEG> invoked when the target of the listener have change it state <END>
<BEG> adds a changelistener to the panel param l the listener to add <END>
<BEG> sort the table over the give column <SEG> either ascend or descend param columnindex the column to sort over param ascend ascend if true <SEG> otherwise descend <END>
<BEG> add a listener to the list that be notify each time a change to data model occurs param l the listener to add <END>
<BEG> remove a listener from the list that be notify each time a change to the data model occur param l the listener to remove <END>
<BEG> return the search string <SEG> can be null if no search string be set return the current search string <END>
<BEG> set the select column param index the column to select <END>
<BEG> creates all the component in the frame <END>
<BEG> position the window at the center of the screen <END>
<BEG> return the main panel return the main panel <END>
<BEG> validates and repaint the frame <END>
<BEG> invoke when a window be activate param e the window event <END>
<BEG> show the frame and it try to load all the arff file that be provide a argument <END>
<BEG> sets the instance who 's attribute name will be display <END>
<BEG> set the select attribute in the widget <END>
<BEG> get the table model in use or null if no instance have be set yet <END>
<BEG> sets the instance for use param newins a set of instances <END>
<BEG> returns the class selection combo box if the parent component want to place it in itself or in some component other than this component <END>
<BEG> get the color class index for the plot return an < code > int < code > value <END>
<BEG> set the color class index for the plot param ci an < code > int < code > value <END>
<BEG> tells the panel which attribute to visualize <END>
<BEG> recalculates the barplot or histogram to display <SEG> require usually when the attribute be change or the component be resize <END>
<BEG> main method to test this class from command line param args the arff file and the index of the attribute to use <END>
<BEG> set the visual for this data source param newvisual a < code > beanvisual < code > value <END>
<BEG> get the visual be use by this data source <END>
<BEG> use the default image for a data source <END>
<BEG> set a log for this bean param logger a < code > weka gui logger < code > value <END>
<BEG> get the event set descriptor for this bean return an < code > eventsetdescriptor [ ] < code > value <END>
<BEG> add a listener param dsl a < code > datasourcelistener < code > value <END>
<BEG> add an instance listener param dsl a < code > instancelistener < code > value <END>
<BEG> set a bean context for this bean param bc a < code > beancontext < code > value <END>
<BEG> return the bean context if any that this bean be embed in return a < code > beancontext < code > value <END>
<BEG> get the event set descriptor pertinent to data source return an < code > eventsetdescriptor [ ] < code > value <END>
<BEG> utility method that split the supplied instances out to a list of instances <SEG> where each instances object contain just the instance of one nominal class value <END>
<BEG> gets a short list of additional option if any <SEG> suitable for display in a tip text <SEG> in html form <END>
<BEG> get the index of a name attribute in a set of instances <END>
<BEG> add a training set listener param tsl a < code > trainingsetlistener < code > value <END>
<BEG> returns event set descriptor for this type of bean return an < code > eventsetdescriptor [ ] < code > value <END>
<BEG> accept and process an instance event param e an < code > instanceevent < code > value <END>
<BEG> use the default visual representation <END>
<BEG> get the custom descriptive name for this bean if one have be set return the custom name or the default name <END>
<BEG> returns true if <SEG> at this time <SEG> the object will accept a connection via the name event param eventname the name of the event return true if the object will accept a connection <END>
<BEG> notify this object that it have be register a a listener with a source for recieving event describe by the name event this object be responsible for record this fact <END>
<BEG> set the classifier object to be edit param object an < code > object < code > value <END>
<BEG> return the coloring index for the attribute summary plot return an < code > int < code > value <END>
<BEG> set the width of the grid of plot param gw the width of the grid <END>
<BEG> set the maximum number of plot to display param mp the number of plot to display <END>
<BEG> set whether the appearance of this bean should be design or application param design true if bean should appear in design mode <END>
<BEG> return an enumeration of action that the user can ask this bean to perform return an < code > enumeration < code > value <END>
<BEG> set instance for this bean <END>
<BEG> returns true if this perspective accept instance return true if this perspective can accept instance <END>
<BEG> get the tool tip text for this perspective <END>
<BEG> set a reference to the main knowledgeflow perspective - i e <END>
<BEG> perform a name user request param request a string contain the name of the request to perform exception illegalargumentexception if request be not support <END>
<BEG> set the model performance chart object to customize param object the model performance chart to customize <END>
<BEG> set the parent window of this dialog param parent the parent window <END>
<BEG> gets call if the use close the dialog via the close widget on the window - be treat a cancel <SEG> so restore the imagesaver to it previous state <END>
<BEG> set a listener interested in whether we 've modify the imagesaver that we 're customize param l the listener <END>
<BEG> get the encapsulated association rule <END>
<BEG> set the classifier param classifier the classifier <END>
<BEG> set the test set param tse the test set <END>
<BEG> get the test set return the test set <END>
<BEG> get the maximum run number return the maximum run number <END>
<BEG> get the maximum set number ie the total number of training and test set in the series <END>
<BEG> get whether the set of instance be a test or a training set return 0 for test set <SEG> > 0 fro training set <END>
<BEG> add the supplied collection of connection to the end of the list <END>
<BEG> returns a vector of beaninstances that can be consider a input or the left-hand side of a sub-flow param subset the sub-flow to examine return a vector of input to the sub-flow <END>
<BEG> remove the list of connection at the supplied index param tab the index of the list to remove correspods to a tab in the knowledge flow ui param tab the index of the list of connection to remove <END>
<BEG> remove all connection for a bean <END>
<BEG> make this connection invisible on the display param hidden true to make the connection invisible <END>
<BEG> returns true if this connection be invisible return true if connection be invisible <END>
<BEG> returns the name of the event for this conncetion return the name of the event for this connection <END>
<BEG> returns the event set descriptor for the event generate by the source for this connection return an < code > eventsetdescriptor < code > value <END>
<BEG> sets up just a single collection of bean instance in the first element of the list <END>
<BEG> return the list of displayed bean param tab varargs parameter specify the index of the collection of bean to return - if omit then the first i e <END>
<BEG> remove the vector of bean instance from the supplied index in the list of collection <END>
<BEG> renders the textual label for the bean <END>
<BEG> returns a list of start point if any in the indexed flow param tab varargs integer index of the flow to search for start point <END>
<BEG> search for a name bean in the indexed flow param beanname the name of the bean to look for param tab varargs integer index of the flow to search in return a matching beaninstance or null if no match be find <END>
<BEG> looks for a bean if any whose bound contain the supplied point param p a point return a bean that contain the supplied point or null if no bean contain the point <END>
<BEG> remove this bean from the list of bean and from the contain component param container the < code > jcomponent < code > that hold the bean <END>
<BEG> adds this bean to the global list of bean and to the supplied container <END>
<BEG> gets the bean encapsulate in this instance return an < code > object < code > value <END>
<BEG> set the x and y coordinate of this bean param newx the x coordinate param newy the y coordinate <END>
<BEG> sets the x coordinate of this bean param newx an < code > int < code > value <END>
<BEG> loads knowledgeflow property and any plugins add jar to the classpath <END>
<BEG> get the data point return a < code > double [ ] < code > value <END>
<BEG> set the data point param dp a < code > double [ ] < code > value <END>
<BEG> set the reset flag param reset a < code > boolean < code > value <END>
<BEG> returns the event set descriptor return an < code > eventsetdescriptor [ ] < code > value <END>
<BEG> set the bean to be edit param object an < code > object < code > value <END>
<BEG> non-javadoc see weka gui bean customizerclosinglistener # customizerclosing <END>
<BEG> set the evaluation metric to output a a comma-separated list <END>
<BEG> set whether the point size on classification error plot should be proportional to the prediction margin <END>
<BEG> get the number of execution slot to use <END>
<BEG> return an enumeration of user activate request for this bean return an < code > enumeration < code > value <END>
<BEG> perform the name request param request the request to perform exception illegalargumentexception if an error occurs <END>
<BEG> returns true <SEG> if at the current time <SEG> the name event could be generate <END>
<BEG> accept a threshold data event and set up the visualization <END>
<BEG> get the list of event process in headless mode <END>
<BEG> get the structure of the output encapsulate in the name event <END>
<BEG> accept a training set param e a < code > trainingsetevent < code > value <END>
<BEG> set the number of fold for the cross validation param numfolds an < code > int < code > value <END>
<BEG> get the currently set number of fold return an < code > int < code > value <END>
<BEG> returns true if the order of the incoming instance be to be preserve under cross-validation no randomization or stratification be do in this case <END>
<BEG> sets whether the order of the incoming instance be to be preserve under cross-validation no randomization or stratification be do in this case <END>
<BEG> return an enumeration of user request return an < code > enumeration < code > value <END>
<BEG> set the object to be edit param object a crossvalidationfoldmaker object <END>
<BEG> set the name of the attribute for the x-axis in offscreen plot <END>
<BEG> get the name of the attribute for the x-axis in offscreen plot return the name of the xaxis <END>
<BEG> set the width in pixel of the offscreen image to generate <END>
<BEG> get the height in pixel of the offscreen image to generate return the height in pixel <END>
<BEG> get the name of the renderer to use for offscreen chart render operation return the name of the renderer to use <END>
<BEG> set the text to display in the editable combo box <END>
<BEG> return the text from the combo box <END>
<BEG> set the environment variable to display in the drop down list <END>
<BEG> main method for test this class param args command line args ignore <END>
<BEG> resets the list of choosable file filter <END>
<BEG> set the filter bean to be edit param object a filter bean <END>
<BEG> set the expression in internal format param expressionstring the expression to use in internal format <END>
<BEG> get the current expression in internal format return the current expression in internal format <END>
<BEG> set the name of the connected step to send true instance to param truestep the name of the step to send true instance to <END>
<BEG> get the name of the connected step to send true instance to return the name of the step to send true instance to <END>
<BEG> initialize with respect to the incoming instance format param data the incoming instance format <END>
<BEG> load a binary serialize knowledgeflow param filename the name of the file to load from throw exception if something go wrong <END>
<BEG> set the vector hold the flow s to run param bean the vector hold the flow to run <END>
<BEG> set whether to launch startable bean one after the other or all in parallel <END>
<BEG> gets whether startable bean will be launch sequentially or all in parallel <END>
<BEG> launch all load knowledgeflow throw exception if something go wrong during execution <END>
<BEG> return the dot string for the graph return a < code > string < code > value <END>
<BEG> return the graph title return a < code > string < code > value <END>
<BEG> popup a result list from which the user can select a graph to view <END>
<BEG> get the encapsulated image return the encapsulated image <END>
<BEG> set the filename to save to param filename the filename to save to <END>
<BEG> get the filename to save to return the filename to save to <END>
<BEG> accept and process an imageevent param imagee the imageevent to process <END>
<BEG> set the imagesaver object to customize <END>
<BEG> popup the window to display the image in <END>
<BEG> set how often progress be report to the status bar <END>
<BEG> return a tip text string for this property return a string for the tip text <END>
<BEG> set whether to output per-class information retrieval statistic nominal class only <END>
<BEG> get whether per-class information retrieval stats be to be output <END>
<BEG> set the current instance for this event param i an < code > instance < code > value <END>
<BEG> get the instance structure may be null if this be not a new_batch event return an < code > instances < code > value <END>
<BEG> accept an instance to add to the batch <END>
<BEG> notify this object that it have be register a a listener with a source with respect to the name event param eventname the event param source the source with which this object have be register a a listener <END>
<BEG> notify this object that it have be deregistered a a listener with a source with respect to the supplied event name param eventname the event param source the source with which this object have be register a a listener <END>
<BEG> set the key specification in internal format - k11 <SEG> k12 <SEG> <SEG> k1nkey_spec_separatork21 <SEG> k22 <SEG> <SEG> k2n param ks the key specification <END>
<BEG> get the key specification in internal format - k11 <SEG> k12 <SEG> <SEG> k1nkey_spec_separatork21 <SEG> k22 <SEG> <SEG> k2n return the key specification <END>
<BEG> adds an instance to the first input 's buffer param inst the instance to add <END>
<BEG> clear remain instance in the buffer <END>
<BEG> add a data source listener param dsl the data source listener to add <END>
<BEG> add an instance listener param dsl the instance listener to add <END>
<BEG> returns true if the name connection can be make at this time param eventname the name of the connection return true if the connection be allow <END>
<BEG> handles cleanup when an upstream step disconnect param eventname the event type of the connection param source the source step <END>
<BEG> get the incoming instance structure from the first upstream step if possible return the incoming instance structure of the first upstream step <END>
<BEG> get the first input step return the first input step <END>
<BEG> get the first input structure return the first incoming instance structure or null if unavailable <END>
<BEG> get the output instance structure give an input event type param eventname the name of the input event type return the output instance structure or null <END>
<BEG> static method that can be call from a run program to launch the knowledgeflow <END>
<BEG> shows the splash screen <SEG> launch the application and then dispose the splash screen <END>
<BEG> set the loader to be customize param object a weka gui bean loader <END>
<BEG> clear the status area <END>
<BEG> the jtable use for the status message in case client want to attach listener etc <END>
<BEG> return all the bean in the sub flow return a vector of all the bean in the sub flow <END>
<BEG> return all the bean in the input return a vector of all the bean in the input <END>
<BEG> return the vector contain the original coordinate instance of class point for the input return the contain the coord points of the original input <END>
<BEG> set the vector contain the original coordinate instance of class point for the input param value the vector contain the point of the coords of the original input <END>
<BEG> move coords of all input and output of this meta bean to the coords of the supplied beaninstance <END>
<BEG> returns true <SEG> if at the current time <SEG> the event describe by the supplied event descriptor could be generate <END>
<BEG> stop all encapsulate bean <END>
<BEG> return an enumeration of request that can be make by the user return an < code > enumeration < code > value <END>
<BEG> return a list of input bean capable of receive the supplied event param esd the event in question return a vector of bean capable of handle the event <END>
<BEG> display a threshold curve <END>
<BEG> display a scheme error plot <END>
<BEG> set the text to display param notetext the text to display in the note <END>
<BEG> get the note text return the note text <END>
<BEG> set the font size adjustment param adjust the font size adjustment <END>
<BEG> decrease the font size by one <END>
<BEG> return a tip text suitable for display in a gui return a < code > string < code > value <END>
<BEG> set whether to append predicted probability rather than class value for discrete class data set param ap a < code > boolean < code > value <END>
<BEG> accept and save a batch train clusterer <END>
<BEG> accept and save an incrementally train classifier <END>
<BEG> save a model in binary form <END>
<BEG> save a model in koml deep object serialize xml form <END>
<BEG> get the directory that the model s will be save into return the directory to save to <END>
<BEG> set the directory that the model s will be save into <END>
<BEG> set whether the relation name of the training data use to create the model should be include a part of the filename for the serialized model <END>
<BEG> get whether the relation name of the training data use to create the model be to be include in the filename of the serialized model <END>
<BEG> get the prefix to prepend to the model file name <END>
<BEG> set how often to save incremental model <END>
<BEG> get the file format to use for save <END>
<BEG> validate the file format <END>
<BEG> set the model saver to be customize param object a weka gui bean serializedmodelsaver <END>
<BEG> returns a new insets instance where the top and leave be 1 <SEG> the bottom and right field be the border width + 1 <END>
<BEG> reinitializes the < code > inset < code > parameter with this shadowborder 's current insets <END>
<BEG> this implementation always return true <END>
<BEG> paints the drop shadow border around the give component <END>
<BEG> help information suitable for display in the gui <END>
<BEG> performs the merge stage of the merge sort by open all temp file and interleave the instance <END>
<BEG> sorts the in-memory buffer param write whether to write the sorted buffer to a temp file throw exception if a problem occurs <END>
<BEG> set the size of the in-memory buffer param buffsize the size of the in-memory buffer <END>
<BEG> set the directory to use for temporary file during incremental operation param tempdir the temp dir to use <END>
<BEG> get the directory to use for temporary file during incremental operation return the temp dir to use <END>
<BEG> set the sort rule to use param sortdetails the sort rule in internal string representation <END>
<BEG> get the sort rule to use return the sort rule in internal string representation <END>
<BEG> remove a datasource listener param dsl the datasource listener to remove <END>
<BEG> stops the step and upstream one and then print an error message and optional exception message param error the error message to print param ex the optional exception <END>
<BEG> handle a closing event under an ok condition <END>
<BEG> initialize widget with value from sorter <END>
<BEG> the modify listener interested in any chages we might make <END>
<BEG> main method for test this class param args command line argument <END>
<BEG> set the sampling period in millisecond to compute througput over param period the sampling period in millisecond <END>
<BEG> register a throughput measurement start point <END>
<BEG> get the average instance per second return the average instance per second process <END>
<BEG> register the end of measurement <END>
<BEG> set the frequency for print x label value param freq an < code > int < code > value <END>
<BEG> get the frequency by which x axis value be print return an < code > int < code > value <END>
<BEG> set how often in x axis point to refresh the display param freq an < code > int < code > value <END>
<BEG> get the refresh frequency return an < code > int < code > value <END>
<BEG> set how many pixel to shift the plot by every time a point be plot param width the number of pixel to shift the plot by <END>
<BEG> get how many pixel to shift the plot by every time a point be plot return the number of pixel to shift the plot by <END>
<BEG> popup the chart panel <END>
<BEG> update the plot param datapoint contain y value to plot <END>
<BEG> accept a data point encapsulate in a chart event to plot param e a < code > chartevent < code > value <END>
<BEG> set the stripchart object to be customize param object a stripchart <END>
<BEG> set internally encode list of match rule param detail the list of match rule <END>
<BEG> get the internally encoded list of match rule return the match rule <END>
<BEG> set whether instance that do not match any of the rule should be consume rather than output with a miss value set for the new attribute <END>
<BEG> make the output instance structure param inputstructure the incoming instance structure throw exception if a problem occurs <END>
<BEG> accept and process an instance event param e the instance event to process <END>
<BEG> set the substringlabeler to edit param o the subtringlabeler to edit <END>
<BEG> set whether to create a nominal binary attribute in the case when the user have not supply an explicit label to use for each rule <END>
<BEG> get the output structure return the structure of the output instance <END>
<BEG> set the name to use for the new attribute that be add param newname the name to use <END>
<BEG> get the name to use for the new attribute that be added return the name to use <END>
<BEG> make an output instance give an input one param inputi the input instance to process return the output instance with substring replace <END>
<BEG> handles construct a popup menu with visualization option <END>
<BEG> accept a data set for display a text param e a < code > datasetevent < code > value <END>
<BEG> accept some text param e a < code > textevent < code > value <END>
<BEG> popup a component to display the select text <END>
<BEG> stop any action <END>
<BEG> get the percentage of the data that will be in the training portion of the split return an < code > int < code > value <END>
<BEG> the name of this off screen renderer return the name of this off screen renderer <END>
<BEG> gets a short list of additional option if any <SEG> suitable for display in a tip text <SEG> in html form return additional option description in simple html form <END>
<BEG> set the number of point to uniformly sample from a region fix dimension <END>
<BEG> get the number of point to sample from a region fix dimension <END>
<BEG> set the base for compute the number of sample to obtain from each generator <END>
<BEG> get the base use for compute the number of sample to obtain from each generator return a < code > double < code > value <END>
<BEG> stop the plotting thread <END>
<BEG> set up the bound of our graphic base by find the small reasonable area in the instance space to surround our data point <END>
<BEG> start the plotting thread exception exception if an error occurs <END>
<BEG> render the training point on-screen <END>
<BEG> adds a training instance to the visualization dataset <END>
<BEG> register a listener to be notify when plot completes param newlistener the listener to add <END>
<BEG> set the x attribute index param xatt index of the attribute to use on the x axis exception exception if an error occurs <END>
<BEG> set a vector of color object for the class param color a < code > fastvector < code > value <END>
<BEG> returns true if training data be to be superimpose return a < code > boolean < code > value <END>
<BEG> get the current vector of color object use for the class return a < code > fastvector < code > value <END>
<BEG> quickly replot the display use cached probability estimate <END>
<BEG> gets the minimum x-coordinate bound <SEG> in training-instance unit not mouse coordinate <END>
<BEG> main method for test this class param args a < code > string [ ] < code > value <END>
<BEG> set a list of host name of machine to distribute processing to param remhosts a vector of host name strings <END>
<BEG> push a host back onto the list of available host and launch a wait task if any <END>
<BEG> set a classifier to use param newclassifier the classifier to use exception exception if an error occurs <END>
<BEG> set the training instance param inst the instance to use <END>
<BEG> initialize the generator use the supplied instance param inputinstances the instance to use a the basis of the kernel throw exception if an error occurs <END>
<BEG> set which dimension to use when compute a weight for the next instance to generate param dims an array of booleans indicate which dimension to use <END>
<BEG> set the value for the weighting dimension to be use when compute the weight for the next instance to be generate param vals an array of double contain the value of the weighting dimension correspond to the entry that be set to true throw setweightingdimensions <END>
<BEG> set the kernel bandwidth number of near neighbour to cover param kb an < code > int < code > value <END>
<BEG> initializes a new random number generator use the supplied seed <END>
<BEG> set the row number for this sub task param rn the row number <END>
<BEG> set the width of the visualization param pw the width <END>
<BEG> set the density estimator to use param dg the density estimator <END>
<BEG> set the training data param i the training data <END>
<BEG> set the minimum and maximum value of the x axis fix dimension param minx a < code > double < code > value param maxx a < code > double < code > value <END>
<BEG> set the x axis fix dimension param xatt an < code > int < code > value <END>
<BEG> store the classifier 's distribution for a particular pixel in the visualization param index the pixel param distribution the probability distribution from the classifier <END>
<BEG> return the probability distribution for this row in the visualization return the probability distribution <END>
<BEG> set the progress for this row so far param pc a percent complete value <END>
<BEG> return the progress for this row return a percent complete value <END>
<BEG> open the url in a browser <END>
<BEG> generates a label with a clickable link <END>
<BEG> set the model - must be an instance of checkboxlistmodel param model the model to use throw illegalargumentexception if the model be not an instance of checkboxlistmodel see checkboxlistmodel <END>
<BEG> constructs a checkboxlistmodel from a vector and then applies setmodel to it <END>
<BEG> set a bold look for the tab param bold true for bold <END>
<BEG> enable disable the close widget param enable <END>
<BEG> set the current color param value the current color <END>
<BEG> we paint our current color into the supplied bounding box return true a we be paintable <END>
<BEG> paint our current color into the supplied bounding box param gfx the graphic object to use param box the bounding box <END>
<BEG> do n't really need this return some arbitrary string <END>
<BEG> not representable a a string return null <END>
<BEG> returns our jcolorchooser object return our jcolorchooser object <END>
<BEG> we use jcolorchooser <SEG> so return true return true <END>
<BEG> set the capability that the saver must have <END>
<BEG> return the capability filter for the saver <SEG> can be null if all be list <END>
<BEG> pops a custom file chooser dialog with a custom approve button <END>
<BEG> get the master threshold plot data return the master threshold data <END>
<BEG> some object can be represent a text <SEG> but a cost matrix can not <END>
<BEG> returns url from dialog return url string <END>
<BEG> returns the debug flag return true if debugging should be enable <END>
<BEG> returns which of ok or cancel be click from dialog return either joptionpane ok_option or joptionpane closed_option <END>
<BEG> display the database connection dialog param url initial text for url field param uname initial text for username field param debug whether to display the debug checkbox <END>
<BEG> prints the page <END>
<BEG> prints the document in the jtextpane <END>
<BEG> shows a print view <END>
<BEG> sets the document and the accord content type <END>
<BEG> sets whether to scale the width to fit <END>
<BEG> returns whether the width be to be scale <END>
<BEG> paints the background of the implied empty row when the table model be insufficient to fill all the visible area available to u <END>
<BEG> returns the appropriate background color for the give row <END>
<BEG> hook method for clean up the interface after a switch <END>
<BEG> just return the name of the panel <END>
<BEG> tells the panel to act on a new experiment <END>
<BEG> handle action when button get press <END>
<BEG> enable object to listen for change to the check box param al an actionlistener <END>
<BEG> tests out the panel from the command line <END>
<BEG> gets call if we be run in a { code guiapplication } <END>
<BEG> tests out the experiment environment <END>
<BEG> return the value for the specified property <SEG> if non-existent then the default value <END>
<BEG> return the class name of the default setup panel <END>
<BEG> whether classification or regression be use <END>
<BEG> return the training percentage in case of split <END>
<BEG> whether relative path be use by default <END>
<BEG> return the display name of the preferred tester algorithm <END>
<BEG> the comma-separated list of attribute name that identify a row <END>
<BEG> return the default sort empty string mean none <END>
<BEG> return whether stddevs be show by default <END>
<BEG> return whether the average be show by default <END>
<BEG> whether the filter classnames in the dataset name be remove by default <END>
<BEG> returns true if the editor be currently in an active status -- -that be the array be active and able to be edit <END>
<BEG> sets the experiment which will have the custom property edit <END>
<BEG> gets the user to select a property of the current resultproducer <END>
<BEG> add a listener interested in kowing about editor status change param newa an listener to add <END>
<BEG> sets the matrix to use a initial select output format <END>
<BEG> set the class of the chosen result matrix <END>
<BEG> the result from the last display of the dialog <SEG> the same be return from < code > showdialog < code > <END>
<BEG> tells the panel to use a new experiment <END>
<BEG> sets the pointer to the result panel <END>
<BEG> sets the experiment the panel operate on <END>
<BEG> controls start and stop the experiment <END>
<BEG> terminates this panel <SEG> which mean <SEG> in the case of this panel <SEG> that it set all reference to associate jframe object to null <END>
<BEG> gets the currently configure experiment <END>
<BEG> initializes the member variable <END>
<BEG> returns an enumeration of all the available option <END>
<BEG> sets the instance that be the basis for the plot instance <END>
<BEG> default implementation only ensure that a dataset have be set <END>
<BEG> performs check <SEG> set up the structure for the plot instance <END>
<BEG> for free up memory <END>
<BEG> sets the explorer to use a parent frame use for send notification about change in the data param parent the parent frame <END>
<BEG> return the parent explorer frame return the parent <END>
<BEG> returns the title for the tab in the explorer return the title of this tab <END>
<BEG> get the vector of plot shape see weka gui visualize plot2d <END>
<BEG> set the vector of plot shape to use ; param plotshapes <END>
<BEG> sets the 0-based class index <END>
<BEG> sets whether the instance be save for visualization or only evaluation of the prediction be to happen <END>
<BEG> set whether the point size should be proportional to the prediction margin classification only <END>
<BEG> tells the panel to use a new set of instance <END>
<BEG> pops up a treevisualizer for the classifier from the currently select item in the result list <END>
<BEG> returns the cluster evaluation object in use <END>
<BEG> sets the logger to receive informational message param value the logger that will now get info message <END>
<BEG> return the generated instance <SEG> null if the process be cancel <END>
<BEG> set the generator to use initially param value the data generator to use <END>
<BEG> return the currently select datagenerator return the current data generator <END>
<BEG> generate the instance <SEG> return true if successful param storeoutput whether to store output a string return true if successful see # getinstances <END>
<BEG> return the instance of the preprocesspanel be use in this instance of the explorer return the panel <END>
<BEG> return the tabbed pane of the explorer return the tabbed pane <END>
<BEG> add the listener to the list of object that listen for change of the capabilitiesfilter param l the listener to add see # m_capabilitiesfilterchangelisteners <END>
<BEG> notifies all the listener of a change param filter the affected filter <END>
<BEG> return if the goes in the explorer will be initialize base on the data that be load into the explorer <END>
<BEG> return the default classifier test mode for the classify panel <END>
<BEG> return the default number of fold of the cv in the classify panel <END>
<BEG> return the default classifier test mode for the classify panel 0-99 <END>
<BEG> return whether the built model be output <END>
<BEG> return whether the model build for the training set be output return true if the model build for the training set be output <END>
<BEG> return whether the confusion matrix for the classifier be output <END>
<BEG> return the string with the additional index to output alongside the prediction <END>
<BEG> return whether the prediction of the classifier be collect for calculate performance statistic such a auroc <END>
<BEG> return the default random seed value for the classifier for the classify panel <END>
<BEG> return whether the order be preserve in case of the percentage split in the classify tab <END>
<BEG> return whether the source of a sourcable classifier be output in the classify tab <END>
<BEG> return the default classname for a sourcable classifier in the classify tab <END>
<BEG> returns the minimum size in pixel for plot of plot classifier error of numeric attribute <END>
<BEG> return whether the cluster be store for visualization purpose in the cluster panel <END>
<BEG> return the default attribute selection test mode for the attribute selection panel <END>
<BEG> return the default number of fold of the cv in the attribute selection panel <END>
<BEG> return the default random seed value in the attribute selection panel <END>
<BEG> default setting for the scatter plot return default setting <END>
<BEG> returns a representation of the current property value a java source <END>
<BEG> gets the custom editor component <END>
<BEG> paints a representation of the current object <END>
<BEG> initialize the gui with setting from the filter be edit <END>
<BEG> tell this customizer not to show it own ok and cancel button <END>
<BEG> actions to perform when the user have close the dialog with the ok button <END>
<BEG> sets whether the user can change the class in the dialog <END>
<BEG> returns the backup object may be null if there be no backup <END>
<BEG> called when the class of object be edit change <END>
<BEG> sets whether the editor be enable <SEG> mean that the current value will be paint <END>
<BEG> sets the class of value that can be edit <END>
<BEG> sets the current object to be the default <SEG> take a the first item in the chooser <END>
<BEG> true if the cancel button be use to close the editor <END>
<BEG> creates a button that when click will enable the user to change the class of the object be edit <END>
<BEG> create a classname from the give path <END>
<BEG> returns a popup menu that allow the user to change the class of object <END>
<BEG> returns the current capabilities filter <SEG> can be null <END>
<BEG> removes the current capabilities filter <END>
<BEG> makes a copy of an object use serialization if the give object be not an option handler <END>
<BEG> get the global output property return the global output property <END>
<BEG> regenerate the global output property <END>
<BEG> if false <SEG> the locating of a props-file of the utils-class be use <SEG> otherwise it 's try to load the specify file param value if true the specify file will be load not via the utils-class see utils # readproperties string see # loadinputproperties <END>
<BEG> return true <SEG> if a file be load and not the utils class use for locate the prop file <END>
<BEG> return the input property object template contain the package return the input property the template <END>
<BEG> return the output property object structure like the template <SEG> but fill with class instead of package return the output property fill with class <END>
<BEG> get whether the dynamic approach should be use or not return true if the dynamic approach be to be use <END>
<BEG> generate the props-file for the genericobjecteditor and store it only if the the param < code > store < code > be true <END>
<BEG> for generate prop file : < ul > < li > no parameter : see default constructor < li > < li > 1 parameter i e <SEG> filename : see default constructor + setoutputfilename string < li > < li > 2 parameter i e <SEG> filename : see constructor with string argument + setoutputfilename string < li > < ul > param args the commandline argument throw exception if something go wrong see # genericpropertiescreator see # genericpropertiescreator string see # setoutputfilename string <END>
<BEG> this method parse the string or the inputstream that we pass in through the constructor and build up the m_nodes and m_edges vector exception exception if both the instring and instream be null <SEG> i e <END>
<BEG> this method parse the string or the inputstream that we pass in through the constructor and build up the m_nodes and m_edges vector return - return the name of the graph <END>
<BEG> returns true if pass in argument be an instance of graphnode and be equal to this node <END>
<BEG> this method lay out the graph by call the layoutengine 's layoutgraph method <END>
<BEG> dot reader < br > reads a graph description in dot format from a string <END>
<BEG> main method to load a text file with the description of a graph from the command line <END>
<BEG> this method make the gui extra control panel m_controlspanel <END>
<BEG> give access to set of graph node <END>
<BEG> this method return a handle to the extra control panel <SEG> so that the visualize class can add it to some of it 's own gui panel <END>
<BEG> returns a handle to the progressbar of this layoutengine <END>
<BEG> method to add a layoutcompleteeventlistener param l - listener to receive the layoutcompleteevent by this class <END>
<BEG> method to remove a layoutcompleteeventlistener <END>
<BEG> system out println before ; for int i=0 ; i < m_nodes size ; i++ { graphnode n = graphnode m_nodes get i ; system out println n : +n id+ <SEG> +i ; } system out println orignodessize : +orignodessize ; <END>
<BEG> this method make the graphmatrix interconnection matrix for the graph give by m_nodes and m_edges vector <END>
<BEG> this method make a proper hierarchy of the graph by first remove cycle <SEG> then assign level to the node and then remove gap by add dummy vertex <END>
<BEG> computes the number of edge crossing in the whole graph takes a an argument level of node <END>
<BEG> this method assign a vertical level to each node <END>
<BEG> see sugiyama et al <END>
<BEG> prints out the interconnection matrix at each level <END>
<BEG> copies one matrix of type int [ ] [ ] to another <END>
<BEG> if maxstringwidth==0 { int strwidth ; for int i=0 ; i < m_nodes size ; i++ { strwidth = m_fm stringwidth graphnode m_nodes get i lbl ; if strwidth > maxstringwidth maxstringwidth=strwidth ; } if m_nodesize < maxstringwidth { m_nodesize = maxstringwidth+4 ; m_nodearea = m_nodesize+8 ; } } <END>
<BEG> this method lay out the vertex horizontally <SEG> in each level <END>
<BEG> set the seperator between level <END>
<BEG> build a tree from the give property with the give delimitor param p the give property param delim the give delimitor <END>
<BEG> add the give item of property to the tree param property the give item <END>
<BEG> tokenize the give string base on the seperator and put the token into an array of string param rawstring the give string return an array of string <END>
<BEG> whether the hierarchypropertyparser contain the give string param string the give string return whether contains <END>
<BEG> helper function to search for the give target string in a give vector in which the element ' value may hopefully be equal to the target <END>
<BEG> go to a certain node of the tree accord to the specify path note that the path must be absolute path from the root <END>
<BEG> go to a certain node of the tree down from the current node accord to the specify relative path <END>
<BEG> go to the root of the tree <END>
<BEG> go to the parent from the current position in the tree if the current position be the root <SEG> it stay there and do not move <END>
<BEG> go to one child node from the current position in the tree accord to the give value < br > if the child node with the give value can not be find it return false <SEG> true otherwise <END>
<BEG> go to one child node from the current position in the tree accord to the give position < br > param pos the position of the give child exception exception if the position be out of range or leaf be reach <END>
<BEG> the value in the child node <END>
<BEG> whether the current position be a leaf return whether the current position be a leaf <END>
<BEG> get the value of current node return value level <END>
<BEG> the context of the current node <SEG> i e <END>
<BEG> the full value of the current node <SEG> i e <END>
<BEG> tests out the parser <END>
<BEG> calculates the optimal width for the column of the give table <END>
<BEG> setup the panel use the supplied setting param settings the setting to use <END>
<BEG> set the instance to visualize param instance the instance the instance to visualize <END>
<BEG> set the instance to visualize param instance the instance to visualize param setting the setting to use <END>
<BEG> returns true if this perspective be ok with be an active perspective - i e <END>
<BEG> get the setting object for the application return the setting object the setting object <END>
<BEG> set the main knowledge flow perspective <END>
<BEG> set the step that own this viewer <END>
<BEG> adds a button to the bottom of the window <END>
<BEG> called when the close button be press <END>
<BEG> get default setting for the viewer <END>
<BEG> adds the primary editor panel to the layout param borderlayoutpos the position in a { code borderlayout } in which to add the primary editor panel <END>
<BEG> add the secondary editor panel param borderlayoutpos the position in a { code borderlayout } in which to add the secondary editor panel <END>
<BEG> get a child node param index the index of the node to get param filterisactive true if the visible filter be active return a child node <END>
<BEG> get the number of child node param filterisactive true if the visible filter be active alters the count accord to visibility return the number of child node <END>
<BEG> returns true if this node be visible return true if this node be visible <END>
<BEG> activate deactivate the visibility filter param newvalue true if the visibility filter should be active <END>
<BEG> return true if the visibility filter be active return true if the visibility filter be active <END>
<BEG> configure mouse listener <END>
<BEG> configure mouse motion listener <END>
<BEG> render the label for each step in the layout param gx the graphic context to use <END>
<BEG> render the connection between step param gx the graphic object to use <END>
<BEG> popup a contextual menu on the canvas that provide option for cut <SEG> paste <SEG> delete select step etc <END>
<BEG> initiate the process of add a note to the canvas <END>
<BEG> snaps select step to the grid <END>
<BEG> get the default setting for this perspective or null if there be none return the default setting for this perspective <SEG> or null if the perspective do not have any setting <END>
<BEG> called when the user alters setting <END>
<BEG> set instance if this perspective can use them param instance the instance <END>
<BEG> set whether the note should appear highlight i e <END>
<BEG> set the instance to use param instance the instance instance to use <END>
<BEG> initialize the viewer - layout widget etc <END>
<BEG> get the offscreen renderer and option from the step be edit <END>
<BEG> initialize layout the viewer throw wekaexception if a problem occurs <END>
<BEG> called when there be an update to render of the current image <END>
<BEG> called when a row of the image be plot have be complete param row the index of the row that be complete <END>
<BEG> called when the viewer 's window be close <END>
<BEG> set the step be edit param step the step to edit <END>
<BEG> populate the class combo box use the supplied instance structure param incomingstructure the instance structure to use <END>
<BEG> initialize with data from the step <END>
<BEG> set the enabled state of the up and down button base on the currently select row in the table <END>
<BEG> called when the user change to the data tab <END>
<BEG> get default setting for this viewer return the default setting of this viewer <END>
<BEG> get the name of the offscreen renderer and option from the step be edit <END>
<BEG> layout the editor dialog <END>
<BEG> initialize the viewer and the layout throw wekaexception if a problem occurs <END>
<BEG> layout the custom part of the editor <END>
<BEG> initialize the step editor dialog <END>
<BEG> sets up the editor for deal with file-based loader param wrappedstep the { code weka core converter loader } wrap by the loader step <END>
<BEG> layout the note editor <END>
<BEG> setup for edit file-based saver param wrappedstep the step to edit <END>
<BEG> setup for other type of saver <END>
<BEG> apply any change to the setting param settings the setting object that might or might not have be <END>
<BEG> sets the step to edit and configure the dialog param step the step to edit <END>
<BEG> handle the ok button <END>
<BEG> apply setting from the supplied setting object param setting the setting object that might or might not have be <END>
<BEG> get the default setting of this viewer return the default setting <END>
<BEG> accept a new text result and add it to the result list param name the name of the result param text the text of the result <END>
<BEG> gets the category that the supplied step belongs to <END>
<BEG> get tool tip text for the step close to the mouse location in the { code steptree } <END>
<BEG> turn on or off tool tip text popups for the step in the tree param show true if tool tip text popups be to be show <END>
<BEG> get the global info tool tip text index return the global info tool tip text index <END>
<BEG> set whether to show tip text or not param show true to show tip text <END>
<BEG> get the tool tip for this leaf return the tool tip <END>
<BEG> returns the leaf label return the leaf label <END>
<BEG> gets the icon for this bean return the icon for this bean <END>
<BEG> returns true if this leaf represent a wrapped weka algorithm i e <END>
<BEG> instantiate the step at this leaf and return it wrap in a stepvisual return a stepvisual instance wrap a copy of the step at this leaf throw exception if a problem occurs <END>
<BEG> gets the icon for the supplied { code step } <END>
<BEG> scale the supplied icon by the give factor param icon the icon to scale param factor the factor to scale by return the scaled icon <END>
<BEG> convenience method for get the name of the step that this visual wrap return the name of the step <END>
<BEG> set the x coordinate of this step on the graphical layout param x the x coordinate of this step <END>
<BEG> get the step manager for this visual return the step manager <END>
<BEG> set the step manager for this visual param manager the step manager to wrap <END>
<BEG> get a set of fully qualify name of interactive viewer that the wrapped step provide <END>
<BEG> returns the coordinate of the close connector point to the supply point <END>
<BEG> returns true if the step label be to be display <END>
<BEG> get the total number of kf templates available return the total number both builtin and plugin kf templates available <END>
<BEG> get description for the built-in knowledge flow templates return description for the built-in template <END>
<BEG> get the flow for the supplied description param flowdescription the description of the template flow to get return the template flow throw wekaexception if the template do not exist <END>
<BEG> get the built-in template flow correspond to the description param flowdescription the description of the template flow to get return the flow throw ioexception if an io error occur throw wekaexception if a problem occurs <END>
<BEG> get the main perspective that own this layout return the main perspective <END>
<BEG> get the environment variable be use by this layout return the environment variable be use by this layout <END>
<BEG> set the edited status of this flow param edit true if the flow have be alter <END>
<BEG> called when the caret position be updated <END>
<BEG> get a list of fully qualified class name of available look and feel return a list of look and feel class name that be available on this platform <END>
<BEG> set the look and feel from load setting param appid the id of the application to load setting for param lookandfeelkey the key to look up the look and feel in the setting throw ioexception if a problem occur when loading setting <END>
<BEG> apply setting to the log panel param setting setting to apply <END>
<BEG> initialize the log panel <END>
<BEG> notify all perspective of a change to the application setting <END>
<BEG> set whether the perspective toolbar should always be hidden <END>
<BEG> applications can call this to allow access to the setting editor from the program menu in addition to the toolbar widget that pop up the setting editor param settings the setting object for the application <END>
<BEG> popup the setting editor dialog param settings the setting to edit <END>
<BEG> creates a button on the toolbar for each visible perspective <END>
<BEG> set the active perspective param theindex the index of the perspective to make the active one <END>
<BEG> get a list of all loaded perspective <END>
<BEG> loads perspective and initialize the cache <END>
<BEG> initializes the visible perspective <END>
<BEG> get the panel that contain the perspective toolbar return the panel that contain the perspecitves toolbar <END>
<BEG> disable the tab button for each visible perspective <END>
<BEG> enable disable a perspective 's button tab param perspectiveid the id of the perspective to enable disable param enable true or false to enable or disable <END>
<BEG> tell the perspective manager to show the menu bar param toplevelancestor the own application 's frame <END>
<BEG> we need to extend the dispose method so that the member variable be set to null and the corresponding object can be garbage collect <END>
<BEG> creates the default style of panel for editor that do not supply their own <END>
<BEG> displays the property edit dialog for the panel <END>
<BEG> gets the path of property node to the select property <END>
<BEG> creates the property tree below the current node <END>
<BEG> set whether to use environment property editor for string and file property param u true to use environment property editor <END>
<BEG> get whether to use environment property editor for string and file property return true to use environment property editor <END>
<BEG> return the panel contain global info and help for the object be edit <END>
<BEG> updates the property sheet panel with a change property and also pass the event along <END>
<BEG> sets a new target object for customisation <END>
<BEG> open the help dialog <END>
<BEG> open the help dialog for the capability <END>
<BEG> gets the number of editable property for the current target <END>
<BEG> returns true if the object be edit have a customizer return true if the object be edit have a customizer <END>
<BEG> set a listener for deletion from the list param listener the listener to set <END>
<BEG> adds a new result to the result list <END>
<BEG> remove the entry at the specified index in the list param selectedi the entry to remove <END>
<BEG> remove the specified entry from the list param entries the entry to remove <END>
<BEG> adds an object to the result list <END>
<BEG> get the name object from the list param name the name of the item to retrieve the stored object for return the object or null if there be no object at this index <END>
<BEG> gets the object associate with the currently select item in the list <END>
<BEG> gets the name buffer return the buffer or null if there be no item in the list <END>
<BEG> gets the name of theitem in the list at the specified index return the name of item or null if there be no item at that index <END>
<BEG> sets the single-click display to view the name result <END>
<BEG> set the selected list entry <END>
<BEG> opens the name result in a separate frame <END>
<BEG> tells any component currently display the name result that the content of the result text in the stringbuffer have be update <END>
<BEG> set whether the result history list should handle right click or whether the parent object will handle them <END>
<BEG> returns the script that trigger the event <END>
<BEG> returns whether additional information be available <END>
<BEG> returns the additional information <END>
<BEG> returns the scripting panel that trigger the event <END>
<BEG> returns an icon to be use in a frame <END>
<BEG> returns the title without the filename <END>
<BEG> displays the panel in a frame <END>
<BEG> runs the script from commandline <END>
<BEG> copies the file directory recursively <END>
<BEG> sets up the document accord to the property <END>
<BEG> sets the font of the specify attribute <END>
<BEG> associates a keyword with a particular formatting style <END>
<BEG> removes an association between a keyword with a particular formatting style <END>
<BEG> determine how many line have be change <SEG> then apply highlight to each line <END>
<BEG> highlight line when a multi line comment be still 'open ' ie <END>
<BEG> highlight comment line to match end delimiter <END>
<BEG> highlight line to start or end delimiter <END>
<BEG> we have find a start delimiter and be still search for the end delimiter <END>
<BEG> sets whether we 're currently within a multi-line comment or not <END>
<BEG> parse the line for token to highlight <END>
<BEG> escapes the quote delimiter <END>
<BEG> set the current font size affect all built-in style <END>
<BEG> sets the character to use for escape a quote character <END>
<BEG> returns the character for escape a quote delimiter <END>
<BEG> sets the string that be the start of a single-line comment <END>
<BEG> sets the string that be the start of a block <END>
<BEG> sets whether match block end be insert or not <END>
<BEG> sets whether to enable multi-line comment <END>
<BEG> gets the current value a text <END>
<BEG> gets the list of tag that can be select from <END>
<BEG> returns true if the object be a command with the same name <END>
<BEG> returns the help string no indentation <END>
<BEG> executes the command with the give parameter <END>
<BEG> sets the value of the date format to be edit <END>
<BEG> gets the date format that be be edit <END>
<BEG> sets the date format string <END>
<BEG> gets a gui component with which the user can edit the date format <END>
<BEG> paints the image on the window <END>
<BEG> open 's a splash window use the specify image <END>
<BEG> closes the splash window <END>
<BEG> set the parameter back to standard <END>
<BEG> remove the give listener from the list of listener <END>
<BEG> whether an exception happen and be store return whether an exception happen <END>
<BEG> return the history model <END>
<BEG> be true in case the exception be not null <SEG> i e <END>
<BEG> whether a resultset be produce <SEG> e g <END>
<BEG> return the resultset that be produce <SEG> can be null in case the query fail <END>
<BEG> return the database url that produce the table model <END>
<BEG> return the user that produce the table model <END>
<BEG> set the state of the button accord to the selection state of the jlist <END>
<BEG> this method get call when the connection be either establish or disconnect <END>
<BEG> set the query in the textarea <END>
<BEG> return the currently display query <END>
<BEG> return the current value for the maximum number of row <END>
<BEG> return the currently set querypanel <SEG> can be null return the current querypanel <SEG> possibly null <END>
<BEG> set the querypanel to use for display the query param panel the panel use for display the query <END>
<BEG> copy the query of the current tab into the querypanel <END>
<BEG> add the give listener to the list of listener param l the listener to add to the list <END>
<BEG> remove the give listener from the list of listener param l the listener to remove <END>
<BEG> free up the memory <END>
<BEG> add a listener to the list that be notify each time a change to data model occurs <END>
<BEG> check whether the value of the cell be null <END>
<BEG> remove a listener from the list that be notify each time a change to the data model occurs <END>
<BEG> return the filename of the history file <END>
<BEG> obtain the size of the panel and save it in the history <END>
<BEG> start the sql-viewer interface <END>
<BEG> display the dialog if true <END>
<BEG> returns whether sparse data be generate <END>
<BEG> gets a string contain current date and time <END>
<BEG> sends the supplied message to the log area <END>
<BEG> this loop will work by start at the first node and systematically go through all their child from leave to right but first it will do a quick pas to find out the number of level there be <END>
<BEG> this will build a node structure from the dotty format pass <END>
<BEG> fits the tree to the current screen size <END>
<BEG> performs the action associate with the itemevent <END>
<BEG> determines what action the user want to perform <END>
<BEG> performs the final stage of what the user want to perform <END>
<BEG> updates the screen content <END>
<BEG> apply setting param settings the setting to apply param ownerid the id of owner perspective <SEG> panel <END>
<BEG> add a listener to the list of thing listen to this panel param a the listener to notify when attribute bar be click on <END>
<BEG> sets a list of colour to use for colour data point param cols a list of java awt color <END>
<BEG> this set the instance to be draw into the attribute panel param ins the instance <END>
<BEG> show which bar be the current x attribute <END>
<BEG> return the extension incl <END>
<BEG> set the background color to use in create the bmp <END>
<BEG> adds a component that will need to be repaint if the user change the colour of a label <END>
<BEG> add an action listener that will be notify if the user change the colour of a label param a an < code > actionlistener < code > value <END>
<BEG> sets the legend to be for a nominal variable <END>
<BEG> renders the legend for a nominal colouring attribute param gx the graphic context <END>
<BEG> initializes member variable <END>
<BEG> a hook method after initialize and initgui have be call <END>
<BEG> returns the currently display info text <END>
<BEG> sets the underlie data <END>
<BEG> further initialization can take place here <END>
<BEG> set the component to print to an output format param c the component to print <END>
<BEG> return the component that be store in the output format return the component to print <END>
<BEG> set the file to store the output in param f the file to store the output in <END>
<BEG> return the file be use for store the output return the file to store the output in <END>
<BEG> whether scaling be enable or ignore return true if scaling be enable <END>
<BEG> set whether to enable scale param enable whether scaling be enable <END>
<BEG> return the scale factor for the x-axis return the scale scale factor for the x-axis <END>
<BEG> whether custom dimension be to use for the size of the image return true if custom dimension be use <END>
<BEG> set whether to use custom dimension for the image param value whether custom dimension be use <END>
<BEG> set the custom width to use param value the width to use see # m_usecustomdimensions <END>
<BEG> get the custom width currently use return the custom width currently use see # m_usecustomdimensions <END>
<BEG> output the give component with the give writer in the specify file <END>
<BEG> return the quality the jpeg will be store in <END>
<BEG> set the quality the jpeg be save in <END>
<BEG> set the list of plot to generate legend entry for param pl a list of plot <END>
<BEG> main method for test this class param args a list of arff file <END>
<BEG> initializes internal data field <SEG> i e <END>
<BEG> sets up the ui 's attribute list <END>
<BEG> calculates the percentage to resample <END>
<BEG> set the point size for the plot param pointsize the point size to use <END>
<BEG> set the background colour for the cell in the matrix param c the background colour <END>
<BEG> param setting param ownerid <END>
<BEG> update the display <END>
<BEG> adds an instance number attribute to the plottable instance <SEG> <END>
<BEG> returns the instance for this plot return the instance for this plot <END>
<BEG> set the name of this plot param name the name for this plot <END>
<BEG> set the plot name for use in a tool tip text <END>
<BEG> get the shape type for the plot data return the shape type for the plot data <END>
<BEG> set the shape size for the plot data param ss an array of integer specify the size of data point <END>
<BEG> set a custom colour to use for this plot <END>
<BEG> set the x index of the data <END>
<BEG> set the y index of the data param y the y index <END>
<BEG> get the currently set x index of the data return the current x index <END>
<BEG> finalizes output file <END>
<BEG> add the ps font name to replace and it replacement in the replacement hashtable param replace the ps font name to replace param with the ps font name to replace the font with <END>
<BEG> draw a filled rectangle with the background color <END>
<BEG> draw an outlined rectangle with 3d effect in current pen color <END>
<BEG> simply call drawstring string <SEG> int <SEG> int see # drawstring string <SEG> int <SEG> int <END>
<BEG> draw a line in current pen color <END>
<BEG> draw an oval outline in current pen color <END>
<BEG> draw text in current pen color <END>
<BEG> this return the full current draw area return full draw area <END>
<BEG> set current pen color <END>
<BEG> return the gui component this print dialog be part of <END>
<BEG> return the jcomponentwriter associate with the give name <SEG> be < code > null < code > if not find <END>
<BEG> set the title for the save dialog <END>
<BEG> set the scale factor <END>
<BEG> set the string with roc area param str roc area string to add to border <END>
<BEG> this extract the roc area string return roc area string <END>
<BEG> return the instance that lie in the shape <END>
<BEG> return the x axis attribute <END>
<BEG> parses a string contain either a name colour or r <SEG> g <SEG> b value <END>
<BEG> initializes the accessory panel <END>
<BEG> tells the panel that a new task have be start <END>
<BEG> tells the panel that a task have complete <END>
<BEG> get the main perspective of this application <END>
<BEG> notify filter capability listener of change param filter the capabilities object relate to filter <END>
<BEG> get a description of this execution environment return a description of this execution environemtn <END>
<BEG> get whether this execution environment be headless return true if this execution environment be headless <END>
<BEG> set whether this execution environment be headless param headless true if the execution environment be headless <END>
<BEG> get environment variable for this execution environment return the environment variable for this execution environment <END>
<BEG> get the log in use return the log in use <END>
<BEG> get the log level in use return the log level in use <END>
<BEG> set the log level to use param level the log level to use <END>
<BEG> the main point at which to request stop processing of a flow <END>
<BEG> gets a new instance of the default flow executor suitable for use with this execution environment return a new instance of the default flow executor suitable for use with this execution environment <END>
<BEG> get the executor that will actually be responsible for run the flow <END>
<BEG> get default setting for the base execution environment return the default setting <END>
<BEG> do the notification now throw exception if a problem occurs <END>
<BEG> set an exception <SEG> in the case that an error occur during the processing do by a steptask param error <END>
<BEG> get the exception generate during processing of a steptask <SEG> or null if the task complete successfully <END>
<BEG> set the result generate by the steptask param result the result generate by the steptask <END>
<BEG> get the result generate by the steptask return the result generate by the steptask <END>
<BEG> add a non-incremental data object to the result param data the data to add <END>
<BEG> add all the result from the supply map to this environment 's result param otherresults the result to add <END>
<BEG> returns true if the result contain data of a particular connection type param connname the name of the connection to check for data return true if the result contain data of the supplied connection type <END>
<BEG> get a map of all the result data object return a map of all result data <END>
<BEG> get the step property for a named step param stepname the name of the step to get property for return a map of property for the named step <END>
<BEG> add the supplied map of step property <END>
<BEG> add an enum to the json param propname the name to associate the enum with param ee the enum to add param json the current { code jsonnode } to add to <END>
<BEG> read an enum from the current json node param enumnode the { code jsonnode } to read from return the enum object throw wekaexception if a problem occurs <END>
<BEG> read a { code step } from the supplied json node param stepnode the { code jsonnode } to read from param flow the { code flow } to add the read step to throw wekaexception if a problem occurs <END>
<BEG> serializes the supplied flow to json and write out use the supplied writer param flow the { code flow } to serialize param writer the { code writer } to write to throw wekaexception if a problem occurs <END>
<BEG> utility routine to serialize a supplied flow to a json string param flow the flow to serialize return a string contain the flow in json form throw wekaexception if a problem occurs <END>
<BEG> get the flow file extension of the file format handle by this flow loader return the file extension <END>
<BEG> deserialize a legacy flow from the supply input stream param be the input stream to load from return the legacy flow translate to a new { code flow } object throw wekaexception if a problem occurs <END>
<BEG> deserialize a legacy flow from the supplied reader param r the reader to load from return the legacy flow translate to a new { code flow } object throw wekaexception if a problem occurs <END>
<BEG> makes a new { code flow } by translate the legacy bean and connection to the new step implementation param name the name to use for the flow return a { code flow } object throw wekaexception if a problem occurs <END>
<BEG> handles a legacy { beaninstance } step component param bean the bean instance to process return a configured { code stepmanagerimpl } that be the equivalent of the legacy bean throw wekaexception if a problem occurs <END>
<BEG> attempts to find a matching { code step } implementation for a supplied legacy class name param legacyfullyqualified the fully qualified class name of the legacy bean to find a match for return an instantiated { code step } that be equivalent to the legacy one throw wekaexception if a match ca n't be find <END>
<BEG> load the legacy flow use the supplied reader param r the reader to load from throw wekaexception if a problem occurs <END>
<BEG> string representation return the string representation of this log level <END>
<BEG> log a warning param message the message to log <END>
<BEG> log an error param message the message to log param cause the cause of the error <END>
<BEG> log a message at the supplied level param message the message to log param messagelevel the level to log at param cause an optional exception for error level message <END>
<BEG> find a step in the flow param stepname the name of the step to find param stepclass the class of the step to find return the named step throw wekaexception if the name step be not in the flow or the found step be not of the supplied class <END>
<BEG> inject stream data into the target step in the flow param toinject a stream { code data } object to inject param target the target step to inject to param lastdata true if this be the last piece of data in the stream throw wekaexception if a problem occurs <END>
<BEG> get the step manage by this manager return the step manage by this manager <END>
<BEG> set the step manage by this manager param step the step to manage <END>
<BEG> set whether the managed step be resource cpu memory intensive or not param resourceintensive true if the managed step be resource intensive <END>
<BEG> get whether the managed step be resource cpu memory intensive or not return true if the step be resource intensive <END>
<BEG> set whether the managed step must run single-threaded <END>
<BEG> set a property for this step param name the name of the property param value the value of the property <END>
<BEG> get a name property for this step <END>
<BEG> get the execution environment the manage step be run in return the execution environment <END>
<BEG> get the current knowledge flow setting return the current knowledge flow setting throw illegalstateexception if there be no execution environment available <END>
<BEG> initialize the step be manage return true if the initialization be successful <END>
<BEG> return true if a stop have be request by the runtime environment return true if a stop have be request <END>
<BEG> set the status of the stop request flag param stoprequested true if a stop have be request <END>
<BEG> finished all processing <END>
<BEG> finished processing due to a stop be request <END>
<BEG> returns true if this data object mark the end of an incremental stream <END>
<BEG> clients can use this to record a start point for stream throughput measure <END>
<BEG> clients can use this to indicate that throughput measuring be finish i e <END>
<BEG> disconnect the supplied step under the associated connection type from both the incoming and outgoing connection for the step manage by this manager <END>
<BEG> clear all connection to from the step manage by this manager <END>
<BEG> add an incoming connection comprising of the type of connection and associated step component to this step of the specify type param connectionname the name of the type of connection to add param step the source step component that be connect with give connection type <END>
<BEG> get the map of downstream outgo connection connect step return the map of downstream connect step <END>
<BEG> clear all register stepoutputlisteners <END>
<BEG> pass any stepoutputlisteners the supply data object param data the data to pass on <END>
<BEG> output one or more data object to all relevant step <END>
<BEG> start the managed step processing <END>
<BEG> stop the managed step 's processing <END>
<BEG> used by the render routine in layoutpanel to ensure that connection downstream from a delete connection get render in grey rather than red <END>
<BEG> get the number of incoming connection to the managed step return the number of incoming connection <END>
<BEG> get the number of incoming connection to the managed step of a give type param connectionname the name of the connection type return the number of incoming connection of this type <END>
<BEG> log a warning message param message the message to log <END>
<BEG> output a status message to the status area of the log param message the message to output <END>
<BEG> returns a reference to the step be manage if it have one or more outgoing con_info connection <END>
<BEG> finds a named step in the current flow <END>
<BEG> gets a prefix for the step manage by this manager <END>
<BEG> replaces the primary payload of the supply data object with a serialized copy of itself param data the data object for which to make a copy of the primary payload throw wekaexception if a problem occurs <END>
<BEG> return true if the supplied connection name be an incremental connection <END>
<BEG> get the class of weka algorithm wrap by this wrapper return the wrapped algorithm class <END>
<BEG> get the evaluator wrap by this step return the attribute or subset evaluator wrap by this step <END>
<BEG> set the evaluator to wrap just call setwrappedalgorithm param eval the evaluator to use <END>
<BEG> get whether to output separate result for each fold of a cross-validation <SEG> rather than average over fold <END>
<BEG> initialize at the start of a run throw wekaexception if there be an illegal configuration i e <END>
<BEG> output data to outgo text connection param text the text to output param setnum the fold set number that this text be associate with throw wekaexception if a problem occurs <END>
<BEG> get incoming connection accept give the current state of the step return a list of acceptable incoming connection <END>
<BEG> get a list of output connection that can be produce give the current state of the step return a list of output connection <END>
<BEG> get the class name of the custom editor for this step return the class name of the custom editor for this step <END>
<BEG> get a list of outgo connection from this step <END>
<BEG> get the class of the algorithm wrap by this wrapper step assearch in this case <END>
<BEG> set the search strategy wrap by this step call setwrappedalgorithm param searchstrategy the search strategy to wrap <END>
<BEG> get the search strategy wrap by this step return <END>
<BEG> get a list of outgo connection type that this step can produce at this time <END>
<BEG> get the datasets see so far return a list of datasets <END>
<BEG> attempt to get default about information for this step by grab the tooltip from the kfstep annotation <END>
<BEG> get whether this step must run single thread <END>
<BEG> an alternative to getstepinteractiveviewers that return a map of instantiated stepinteractiveviewer object <END>
<BEG> get the name index of the x axis attribute return the name index of the x axis attribute <END>
<BEG> get the base for sample return the base to use <END>
<BEG> get the number of location sample per pixel return the number of sample to use <END>
<BEG> get the kernel bandwidth return the bandwidth <END>
<BEG> get the image width in pixel return the width to use <END>
<BEG> get a list of incoming connection type that this step can accept <END>
<BEG> get the complete image return a map of complete image <END>
<BEG> set a listener to receive render updates param l the { code renderingupdatelistener } to add <END>
<BEG> set the data to be output by this { code datagrid } in textual arff format <END>
<BEG> get the data to be output by this { code datagrid } in textual arff format return the data to be output in textual arff format <END>
<BEG> start processing throw wekaexception if a problem occurs <END>
<BEG> get the static command to be execute return the static command to be execute <END>
<BEG> set the static command to be execute param cmd the static command to be execute <END>
<BEG> get the name of the attribute in the incoming instance structure that contain the command to execute return the name of the attribute contain the command to execute <END>
<BEG> set the name of the attribute in the incoming instance structure that contain the command to execute param cmdfield the name of the attribute contain the command to execute <END>
<BEG> set the name of the attribute in the incoming instance structure that contain the argument to the command to execute param argsfield the name of the attribute contain the command 's argument <END>
<BEG> get the name of the attribute in the incoming instance structure that containst the work directory for the command to execute return the name of the attribute contain the command 's work directory <END>
<BEG> set the name of the attribute in the incoming instance structure that containst the work directory for the command to execute param workingdirfield the name of the attribute contain the command 's work directory <END>
<BEG> start processing if operating a a start point in a flow throw wekaexception if a problem occurs <END>
<BEG> construct a processbuilder instance for execute a static command return a processbuilder instance throw exception if a problem occurs <END>
<BEG> process an incoming data object param data the payload to process throw wekaexception if a problem occurs <END>
<BEG> check the incoming instance structure with respect to the attribute name specify by the user for the command <SEG> args and work directory <END>
<BEG> process incoming data param data the data to process throw wekaexception <END>
<BEG> set the data to output from this step param instance <END>
<BEG> initialize the step throw wekaexception if the data to output have not be set yet <END>
<BEG> initiate routing and processing for a particular data object param data the data object to process throw wekaexception if a problem occurs <END>
<BEG> retrieve the primary result correspond to a give set number param index the set number of the result to get return the primary result <END>
<BEG> return true if there be no further processing to be do return true if processing be do <END>
<BEG> create a indexed store with a give name param name the name of the store to create <END>
<BEG> gets an indexed value from a name store param storename the name of the store to retrieve from param index the index of the value to get param < t > the type of the value return the requested value or null if either the store do not exist or the value do not exist in the store <END>
<BEG> get a list of acceptable incoming connection type return a list of acceptable incoming connection type <END>
<BEG> get the path to the icon for this wrapped algorithm return the path to the icon <END>
<BEG> get the default icon at the package level for this type of wrapped algorithm - e g <END>
<BEG> get a list of acceptable incoming connection type at this point in time return a list of legal incoming connection type to accept <END>
<BEG> get currently generatable outgo connection type return a list of outgo connection type <END>
<BEG> set whether this { code steptask } be resource intensive cpu memory or not <END>
<BEG> set whether this { code steptask } must run single thread - i e <END>
<BEG> get the callback notifier delegate to use <END>
<BEG> get the loghandler to use for log return the loghandler <END>
<BEG> notifies the registered callback if any throw exception if a problem occurs <END>
<BEG> get the result of execution return the result of execution <END>
<BEG> set the path to the attachment <END>
<BEG> is this a http https url ? <END>
<BEG> get the base directory use for resolve relative resource location <END>
<BEG> given the flavor that match <SEG> return the appropriate type of object <END>
<BEG> convert the give string into byte in the specified charset <SEG> and write the byte out a an astring param s string to write out param charset the charset return this exception unsupportedencodingexception for bad charset <END>
<BEG> convert the give string into byte in the specified charset <SEG> and write the byte out a an nstring param s string to write out param charset the charset return this exception unsupportedencodingexception for bad charset since javamail 1 5 1 <END>
<BEG> return the protocol 's outputstream return the output stream <END>
<BEG> xxx - really should peek ahead in the buffer to see if there 's a complete response available <SEG> but if there be n't who 's go to read more data into the buffer until there be ? <END>
<BEG> does the server support utf-8 ? <END>
<BEG> is protocol trace enable ? <END>
<BEG> skip past any space <END>
<BEG> read a response from the inputstream <END>
<BEG> watch the folder for new message and other event use the imap idle command <END>
<BEG> request that the specified folder abort an idle command <END>
<BEG> open this folder in the give mode <SEG> with the give resynchronization data <END>
<BEG> create a new imapmessage object to represent the give message number <END>
<BEG> need to override folder method to throw folderclosedexception instead of illegalstateexception if not really close <END>
<BEG> servers that support the uidplus extension < a href= http : www ietf org rfc rfc4315 txt > rfc 4315 < a > may indicate that this folder do not support persistent uids ; that be <SEG> uidvalidity will be different each time the folder be open <END>
<BEG> like { link # idle } <SEG> but if < code > once < code > be true <SEG> abort the idle command after the first notification <SEG> to allow the caller to process any notification synchronously <END>
<BEG> read a response from the server while we 're in the idle state <END>
<BEG> send the done command that abort the idle ; use by idlemanager <END>
<BEG> send the done command that abort the idle and wait for the response ; use by idlemanager <END>
<BEG> use the imap status command to get the indicated item <END>
<BEG> check whether we have a protocol object <SEG> not whether we 're open <SEG> to allow use of the exsting protocol object in the open method before the state be change to open <END>
<BEG> get the message size a a long <END>
<BEG> create an imapprotocol object connect to the host and port <END>
<BEG> return the connection pool logger <END>
<BEG> throw a searchexception if the search expression be too complex ? <END>
<BEG> send the imap id command if support by the server and return the result from the server <END>
<BEG> return the first fetch response item of the give class for the give message number <END>
<BEG> return a map of the extension item find in this fetch response <END>
<BEG> return the imap url in the referral <END>
<BEG> convert an array of integer into an array of messagesets param msgs the message return array of messageset object <END>
<BEG> convert an array of messagesets into an imap sequence range param msgsets the messagesets return imap sequence string <END>
<BEG> get the value for the status item <END>
<BEG> count the total number of element in a uidset return the number of element <END>
<BEG> parse a string in imap uid range format <END>
<BEG> make the resyncdata uidset available to imapprotocol <SEG> which be in a different package <END>
<BEG> close the folder when we 're finalize <END>
<BEG> update the size of the readable file after write to the file <END>
<BEG> accumulates log record which will be use to produce the final output <END>
<BEG> used to choose the collected logrecord <END>
<BEG> formats the message from the thrown property of the log record <END>
<BEG> formats the level property of the give log record <END>
<BEG> formats the source from the give log record <END>
<BEG> thread getid be define a long and logrecord getthreadid be define a int <END>
<BEG> formats the thrown property of a logrecord a an error message <END>
<BEG> determines if a stack frame should be ignore a the cause of an error <END>
<BEG> determines if this filter will accept log record for this instant in time <END>
<BEG> check that the current context be trust to modify the logging configuration <END>
<BEG> determines if access to the { code java util logging logmanager } class be restrict by the class loader <END>
<BEG> gets the local host name from the give service <END>
<BEG> used to parse an iso-8601 duration format of { code pndtnhnmn ns } <END>
<BEG> returns a comparator that impose the reverse ordering of the specify { link comparator } <END>
<BEG> determines if the give class name identify a utility class <END>
<BEG> determines if the give class name be a reflection class name responsible for invoke method and or constructor <END>
<BEG> a callback method for when this object be about to be place into commission <END>
<BEG> close can require permission so just trigger a push <END>
<BEG> get the log level specify which message will be log by this < tt > handler < tt > <END>
<BEG> retrieves the errormanager for this handler <END>
<BEG> get the current < tt > filter < tt > for this < tt > handler < tt > <END>
<BEG> set a < tt > filter < tt > to control output on this < tt > handler < tt > <END>
<BEG> return the character encode for this < tt > handler < tt > <END>
<BEG> identifies a single throwable that best describe the give throwable and the entire { linkplain throwable # getcause cause } chain <END>
<BEG> { link # apply java lang throwable reduces } each throwable chain argument then compare each throwable result <END>
<BEG> determines if the give object be also a comparator and it impose the same ordering a this comparator <END>
<BEG> determines if the give throwable instance be normal occurrence <END>
<BEG> the timeout use for the connection attempt <END>
<BEG> create a maillogger that use a logger with the specify name and prefix <END>
<BEG> create a maillogger use the specified class ' package name a the logger name and the specify prefix <END>
<BEG> create a maillogger that use a logger whose name be compose of this maillogger 's name plus the specified sub-name <SEG> separate by a dot <END>
<BEG> log the message at the specified level <END>
<BEG> log the message at the specified level use a format string <END>
<BEG> param keymanagers the keymanagers to set throw generalsecurityexception for security error <END>
<BEG> the exception that cause the failure <END>
<BEG> kludge for android <SEG> which have this illegal non-java compatible method <END>
<BEG> the main parsing function <END>
<BEG> parse content in block into inline child <SEG> use reference map to resolve reference <END>
<BEG> attempt to parse a link label <SEG> return number of character parse <END>
<BEG> visit the child node <END>
<BEG> return whether this list be tight or loose see < a href= http : spec commonmark org 0 28 # tight > commonmark spec for tight list < a > <END>
<BEG> transforms an input string into html use the give configuration <END>
<BEG> param typeparameter return if find in < i > provider < i > <SEG> will return a < i > provide & lt ; typeparameter & gt ; < i > <END>
<BEG> create a constant compatible with instance order and number of parameter <END>
<BEG> get the value part of the derivative structure <END>
<BEG>  exception dimensionmismatchexception if number of free parameter or order do not match since 3 2 <END>
<BEG> compute a < sup > x < sup > where a be a double and x a { link derivativestructure } param a number to exponentiate param x power to apply return a < sup > x < sup > since 3 3 <END>
<BEG> base 10 logarithm <END>
<BEG> convert radians to degree <SEG> with error of less than 0 5 ulp return instance convert into degree <END>
<BEG> get a hashcode for the derivative structure <END>
<BEG> get the derivation order for a specific index in the array <END>
<BEG> get the array size require for hold partial derivative data <END>
<BEG> evaluate taylor expansion of a derivative structure <END>
<BEG> check rule set compatibility <END>
<BEG> factory method create a constant <END>
<BEG> factory method create an independent variable <END>
<BEG> add in place <END>
<BEG> compute a < sup > x < sup > where a be a double and x a { link sparsegradient } param a number to exponentiate param x power to apply return a < sup > x < sup > <END>
<BEG>  deprecate a of 3 1 <SEG> replace by { link # value derivativestructure } <END>
<BEG> return the low bound <END>
<BEG> returns an estimate of the integral of { code f x w x } <SEG> where { code w } be a weight function that depend on the actual flavor of the gauss integration scheme <END>
<BEG> return the order of the integration rule the number of integration point <END>
<BEG> gets the weight of the integration point at the give index <END>
<BEG> creates a gauss-legendre integrator of the give order <END>
<BEG> indicates whether a point be within the interpolation range <END>
<BEG> param x x-coordinate <END>
<BEG> a [ ] and c [ ] be define in the general formula of newton form : p x = a [ 0 ] + a [ 1 ] x-c [ 0 ] + a [ 2 ] x-c [ 0 ] x-c [ 1 ] + + a [ n ] x-c [ 0 ] x-c [ 1 ] x-c [ n-1 ] <END>
<BEG> interpolate value and first derivative at a specified abscissa <END>
<BEG> param point interpolation point <END>
<BEG>  throw outofrangeexception if any of the variable be outside it interpolation range <END>
<BEG> uses horner 's method to evaluate the polynomial with the give coefficient at the argument <END>
<BEG>  since 3 1 throw nodataexception if { code coefficient } be empty <END>
<BEG> negate the instance <END>
<BEG> returns the coefficient of the derivative of the polynomial with the give coefficient <END>
<BEG> returns the derivative a a { link polynomialfunction } <END>
<BEG> evaluate the lagrange polynomial use < a href= http : mathworld wolfram com nevillesalgorithm html > neville 's algorithm < a > <END>
<BEG> calculate the coefficient of lagrange polynomial from the interpolation data <END>
<BEG> evaluate the newton polynomial use nested multiplication <END>
<BEG> calculate the normal polynomial coefficient give the newton form <END>
<BEG> compute the value for the function <END>
<BEG> get the derivative of the polynomial spline function <END>
<BEG> create a hermite polynomial <END>
<BEG> compute the objective function value <END>
<BEG> return the low end of the search interval <END>
<BEG> return the initial guess <END>
<BEG> returns the conjugate of this complex number <END>
<BEG> returns a { code complex } whose value be { code this divisor } <END>
<BEG> test for equality with another object <END>
<BEG> access the imaginary part <END>
<BEG> checks whether either the real or imaginary part of this complex number take an infinite value either { code double positive_infinity } or { code double negative_infinity } and neither part be { code nan } <END>
<BEG> compute the < a href= http : mathworld wolfram com inversecosine html target= _top > inverse cosine < a > of this complex number <END>
<BEG> compute the < a href= http : mathworld wolfram com cosine html target= _top > cosine < a > of this complex number <END>
<BEG> returns of value of this complex number raise to the power of { code x } <END>
<BEG> compute the < a href= http : mathworld wolfram com squareroot html target= _top > square root < a > of < code > 1 - this < sup > 2 < sup > < code > for this complex number <END>
<BEG> computes the n-th root of this complex number <END>
<BEG> creates a complex number from the give polar representation <END>
<BEG> convert an array of primitive double to an array of { code complex } object <END>
<BEG> checks whether the instance be a unit quaternion within a give tolerance <END>
<BEG> returns the polar form of the quaternion <END>
<BEG> gets the first component of the quaternion scalar part <END>
<BEG> gets the second component of the quaternion first component of the vector part <END>
<BEG> gets the scalar part of the quaternion <END>
<BEG> < p > computes the { code n } -th root of unity <END>
<BEG> returns the number of root of unity currently store <END>
<BEG> get the number of radix digit of the { link dfp } instance build by this factory <END>
<BEG> get the ieee 854 status flag <END>
<BEG> sets some bit in the ieee 854 status flag <SEG> without change the already set bit <END>
<BEG> makes a { link dfp } with a value of 0 <END>
<BEG> create an instance from a byte value <END>
<BEG> get the constant 0 <END>
<BEG> get the constant & radic ; 2 <END>
<BEG> get the constant & radic ; 2 split in two piece <END>
<BEG> get the constant & pi ; <END>
<BEG> get the constant & pi ; split in two piece <END>
<BEG> get the constant e split in two piece <END>
<BEG> get the constant ln 2 <END>
<BEG> get the constant ln 2 split in two piece <END>
<BEG> compute exp a <END>
<BEG> breaks a string representation up into two dfp 's <END>
<BEG> splits a { link dfp } into 2 { link dfp } 's such that their sum be equal to the input { link dfp } <END>
<BEG> multiply two number that be split in to two piece that be mean to be add together <END>
<BEG> raise a split base to the a power <END>
<BEG> raises base to the power a by successive squaring <END>
<BEG> computes e to the give power <END>
<BEG> now we want to compute x = a-1 a+1 but this be prone to loss of precision <END>
<BEG> computes sin a used when 0 < a < pi 4 <END>
<BEG>  the default implementation use the identity < p > { code p x0 < x < = x1 = p x < = x1 - p x < = x0 } < p > <END>
<BEG>  the default implementation return < ul > < li > { link # getsupportlowerbound } for { code p = 0 } <SEG> < li > < li > { link # getsupportupperbound } for { code p = 1 } <SEG> and < li > < li > { link # solveinversecumulativeprobability double <SEG> int <SEG> int } for { code 0 < p < 1 } < li > < ul > <END>
<BEG>  the default implementation use the < a href= http : en wikipedia org wiki inverse_transform_sampling > inversion method < a > <END>
<BEG> for a random variable { code x } whose value be distribute accord to this distribution <SEG> this method return { code log p x = x } <SEG> where { code log } be the natural logarithm <END>
<BEG>  the default implementation use the identity < p > { code p x0 < x < = x1 = p x < = x1 - p x < = x0 } < p > deprecate as of 3 1 to be remove in 4 0 <END>
<BEG> implementation notes -- -- -- -- -- -- -- -- -- -- where applicable <SEG> use be make of the one-sided chebyshev inequality to bracket the root <END>
<BEG> returns the solver absolute accuracy for inverse cumulative computation <END>
<BEG>  the default implementation use the < a href= http : en wikipedia org wiki inverse_transform_sampling > inversion method <END>
<BEG> access the first shape parameter <SEG> { code alpha } <END>
<BEG>  for first shape parameter { code alpha } and second shape parameter { code beta } <SEG> the mean be { code alpha alpha + beta } <END>
<BEG>  for first shape parameter { code alpha } and second shape parameter { code beta } <SEG> the variance be { code alpha beta [ alpha + beta ^2 alpha + beta + 1 ] } <END>
<BEG>  the low bound of the support be always 0 no matter the parameter <END>
<BEG>  the support of this distribution be connect <END>
<BEG>  for { code n } trial and probability parameter { code p } <SEG> the mean be { code n p } <END>
<BEG>  for { code n } trial and probability parameter { code p } <SEG> the variance be { code n p 1 - p } <END>
<BEG>  the low bound of the support be always 0 except for the probability parameter { code p = 1 } <END>
<BEG> access the scale parameter <END>
<BEG>  the mean be always undefined no matter the parameter <END>
<BEG>  the low bound of the support be always negative infinity no matter the parameter <END>
<BEG> access the number of degree of freedom <END>
<BEG>  return { code 2 k } <SEG> where { code k } be the number of degree of freedom <END>
<BEG>  the upper bound of the support be always positive infinity no matter the degree of freedom <END>
<BEG> override with no-op there be no generator <END>
<BEG> reseed the random generator use to generate sample <END>
<BEG> < p > for a random variable { code x } whose value be distribute accord to this distribution <SEG> this method return { code p x = x } <END>
<BEG> generate a random value sample from this distribution <END>
<BEG> generate a random sample from the distribution <END>
<BEG>  return { code sum singleton [ i ] probability [ i ] } <END>
<BEG>  return { code sum singleton [ i ] - mean ^ 2 probability [ i ] } <END>
<BEG>  returns the low value with non-zero probability <END>
<BEG> for a random variable { code x } whose value be distribute accord to this distribution <SEG> this method return { code p x = x } <END>
<BEG>  for mean parameter { code k } <SEG> the mean be { code k } <END>
<BEG>  the implementation of this method be base on < ul > < li > < a href= http : mathworld wolfram com f-distribution html > f-distribution < a > <SEG> equation 4 <END>
<BEG> access the numerator degree of freedom <END>
<BEG>  for denominator degree of freedom parameter { code b } <SEG> the mean be < ul > < li > if { code b > 2 } then { code b b - 2 } <SEG> < li > < li > else undefined { code double nan } <END>
<BEG>  for numerator degree of freedom parameter { code a } and denominator degree of freedom parameter { code b } <SEG> the variance be < ul > < li > if { code b > 4 } then { code [ 2 b^2 a + b - 2 ] [ a b - 2 ^2 b - 4 ] } <SEG> < li > < li > else undefined { code double nan } <END>
<BEG> use by { link # getnumericalvariance } return the variance of this distribution <END>
<BEG> gets the log likelihood of the data under the fitted model <END>
<BEG> the present method must return the value of 1 x a - x -- -- -- -- -- - exp -- - x gamma a b b where a be the shape parameter <SEG> and b the scale parameter <END>
<BEG> see the comment in { link # density double } for computation detail <END>
<BEG> < p > this implementation use the following algorithm : < p > < p > for 0 < shape < 1 : < br > ahrens <SEG> j h and dieter <SEG> u <SEG> < i > computer method for sample from gamma <SEG> beta <SEG> poisson and binomial distribution < i > computing <SEG> 12 <SEG> 223-246 <SEG> 1974 < p > < p > for shape > = 1 : < br > marsaglia and tsang <SEG> < i > a simple method for generating gamma variables < i > acm transactions on mathematical software <SEG> volume 26 issue 3 <SEG> september <SEG> 2000 < p > return random value sample from the gamma shape <SEG> scale distribution <END>
<BEG>  for probability parameter { code p } <SEG> the mean be { code 1 - p p } <END>
<BEG>  for probability parameter { code p } <SEG> the variance be { code 1 - p p p } <END>
<BEG>  the low bound of the support be always 0 <END>
<BEG> access the population size <END>
<BEG>  for population size { code n } <SEG> number of success { code m } <SEG> and sample size { code n } <SEG> the low bound of the support be { code max 0 <SEG> n + m - n } <END>
<BEG> calculates { code p d_n < d } use method describe in [ 1 ] with quick decision for extreme value give in [ 2 ] see above <END>
<BEG>  < p > from wikipedia : the probability density function of the l & eacute ; vy distribution over the domain be < p > < pre > f x ; & mu ; <SEG> c = & radic ; c 2 & pi ; e < sup > -c 2 x - & mu ; < sup > x - & mu ; < sup > 3 2 < sup > < pre > < p > for this distribution <SEG> { code x } <SEG> this method return { code p x < x } <END>
<BEG>  see documentation of { link # density double } for computation detail <END>
<BEG>  < p > from wikipedia : the cumulative distribution function be < p > < pre > f x ; u <SEG> c = erfc & radic ; c 2 x - u < pre > <END>
<BEG> get the scale parameter of the distribution <END>
<BEG>  for scale { code m } <SEG> and shape { code s } of this distribution <SEG> the pdf be give by < ul > < li > { code 0 } if { code x < = 0 } <SEG> < li > < li > { code exp -0 5 ln x - m s ^2 s sqrt 2 pi x } otherwise < li > < ul > <END>
<BEG>  for scale { code m } <SEG> and shape { code s } of this distribution <SEG> the cdf be give by < ul > < li > { code 0 } if { code x < = 0 } <SEG> < li > < li > { code 0 } if { code ln x - m < 0 } and { code m - ln x > 40 s } <SEG> a in these case the actual value be within { code double min_value } of 0 <SEG> < li > { code 1 } if { code ln x - m > = 0 } and { code ln x - m > 40 s } <SEG> a in these case the actual value be within { code double min_value } of 1 <SEG> < li > < li > { code 0 5 + 0 5 erf ln x - m s sqrt 2 } otherwise < li > < ul > <END>
<BEG>  for scale { code m } and shape { code s } <SEG> the mean be { code exp m + s^2 2 } <END>
<BEG>  for scale { code m } and shape { code s } <SEG> the variance be { code exp s^2 - 1 exp 2 m + s^2 } <END>
<BEG> gets the distribution that make up the mixture model <END>
<BEG>  < p > for scale { code k } <SEG> and shape { code α } of this distribution <SEG> the pdf be give by < ul > < li > { code 0 } if { code x < k } <SEG> < li > < li > { code α k^α x^ α + 1 } otherwise < li > < ul > <END>
<BEG>  < p > for scale { code k } <SEG> and shape { code α } of this distribution <SEG> the cdf be give by < ul > < li > { code 0 } if { code x < k } <SEG> < li > < li > { code 1 - k x ^α } otherwise < li > < ul > <END>
<BEG>  < p > for scale { code k } and shape { code α } <SEG> the mean be give by < ul > < li > { code ∞ } if { code α < = 1 } <SEG> < li > < li > { code α k α - 1 } otherwise < li > < ul > <END>
<BEG>  < p > for scale { code k } and shape { code α } <SEG> the variance be give by < ul > < li > { code ∞ } if { code 1 < α < = 2 } <SEG> < li > < li > { code k^2 α α - 1 ^2 α - 2 } otherwise < li > < ul > <END>
<BEG>  < p > the low bound of the support be equal to the scale parameter { code k } <END>
<BEG>  for number of success { code r } and probability of success { code p } <SEG> the mean be { code r 1 - p p } <END>
<BEG> calculates the poisson distribution function use a normal approximation <END>
<BEG>  < p > < strong > algorithm description < strong > : < ul > < li > for small mean <SEG> use simulation of a poisson process use uniform deviate <SEG> a describe < a href= http : mathaa epfl ch cours pmmi2001 interactive rng7 htm > here < a > <END>
<BEG> a part of the deviance portion of the saddle point approximation <END>
<BEG> compute the logarithm of the pmf for a binomial distribution use the saddle point expansion <END>
<BEG> access the degree of freedom <END>
<BEG>  for degree of freedom parameter { code df } <SEG> the variance be < ul > < li > if { code df > 2 } then { code df df - 2 } <SEG> < li > < li > if { code 1 < df < = 2 } then positive infinity { code double positive_infinity } <SEG> < li > < li > else undefined { code double nan } < li > < ul > <END>
<BEG> returns the mode { code c } of this distribution <END>
<BEG>  for low limit { code a } <SEG> upper limit { code b } and mode { code c } <SEG> the cdf be give by < ul > < li > { code 0 } if { code x < a } <SEG> < li > < li > { code x - a ^2 [ b - a c - a ] } if { code a < = x < c } <SEG> < li > < li > { code c - a b - a } if { code x = c } <SEG> < li > < li > { code 1 - b - x ^2 [ b - a b - c ] } if { code c < x < = b } <SEG> < li > < li > { code 1 } if { code x > b } < li > < ul > <END>
<BEG>  for low limit { code a } <SEG> upper limit { code b } <SEG> and mode { code c } <SEG> the mean be { code a + b + c 3 } <END>
<BEG>  for low limit { code a } <SEG> upper limit { code b } <SEG> and mode { code c } <SEG> the variance be { code a^2 + b^2 + c^2 - a b - a c - b c 18 } <END>
<BEG>  the low bound of the support be equal to the low limit parameter { code a } of the distribution <END>
<BEG>  for low bound { code low } and upper bound { code upper } <SEG> and { code n = upper - low + 1 } <SEG> the variance be { code n^2 - 1 12 } <END>
<BEG>  the low bound of the support be equal to the low bound parameter of the distribution <END>
<BEG>  the mean be { code scale gamma 1 + 1 shape } <SEG> where { code gamma } be the gamma-function <END>
<BEG> get the number of element e g <END>
<BEG> get the exponent characterize the distribution <END>
<BEG>  the upper bound of the support be the number of element <END>
<BEG> return an array contain the wrong dimension <END>
<BEG> param index dimension index <END>
<BEG> get the low end of the interval <END>
<BEG> get the value at the low end of the interval <END>
<BEG> return the order direction <END>
<BEG> return { code true } if the maximum be include in the allowed range <END>
<BEG> transform a multidimensional array into a one-dimensional list <END>
<BEG> sets the context key <SEG> value pair <END>
<BEG> gets the value associate to the give context key <END>
<BEG> gets all the key store in the exception return the set of key <END>
<BEG> gets the message in the default locale <END>
<BEG> returns the dimension of the state estimation vector <END>
<BEG> returns the dimension of the measurement vector <END>
<BEG> returns the current state estimation vector <END>
<BEG> returns a copy of the current state estimation vector <END>
<BEG> returns the current error covariance matrix <END>
<BEG> predict the internal state estimation one time step ahead <END>
<BEG> fits a curve <END>
<BEG> creates an optimizer set up to fit the appropriate curve <END>
<BEG> configure the start point initial guess <END>
<BEG> get the matrix decomposition algorithm use to solve the normal equation <END>
<BEG> construct a { link leastsquaresproblem } from the data in this builder <END>
<BEG> configure the max evaluation <END>
<BEG> configure the weight matrix <END>
<BEG> view a convergence checker specify for a { link pointvectorvaluepair } a one specify for an { link evaluation } <END>
<BEG> param newinitialstepboundfactor positive input variable use in determine the initial step bound <END>
<BEG> param newcostrelativetolerance desired relative error in the sum of square <END>
<BEG> gets the value of a tuning parameter <END>
<BEG> modify the numerator format <END>
<BEG> < p > adds the value of this fraction to the pass { link biginteger } <SEG> return the result in reduced form <END>
<BEG> < p > adds the value of this fraction to another <SEG> return the result in reduced form <END>
<BEG> < p > gets the fraction a a < code > bigdecimal < code > follow the pass rounding mode <END>
<BEG> < p > compares this object to another base on size <END>
<BEG> < p > divide the value of this fraction by the pass { code biginteger } <SEG> ie { code this 1 bg } <SEG> return the result in reduced form <END>
<BEG> < p > test for the equality of two fraction <END>
<BEG> < p > multiplies the value of this fraction by the pass < code > biginteger < code > <SEG> return the result in reduced form <END>
<BEG> < p > gets the fraction percentage a a { code double } <END>
<BEG> < p > returns a { code bigfraction } whose value be { code this < sup > exponent < sup > } <SEG> return the result in reduced form <END>
<BEG> < p > returns a < code > bigfraction < code > whose value be < tt > this < sup > exponent < sup > < tt > <SEG> return the result in reduced form <END>
<BEG> < p > return the multiplicative inverse of this fraction <END>
<BEG> < p > reduce this < code > bigfraction < code > to it low term <END>
<BEG> < p > subtracts the value of an { link biginteger } from the value of this { code bigfraction } <SEG> return the result in reduced form <END>
<BEG> < p > subtracts the value of another fraction from the value of this one <SEG> return the result in reduced form <END>
<BEG> returns the immutable inner representation of the chromosome <END>
<BEG> returns a representation of a random binary array of length < code > length < code > <END>
<BEG> mutate the give chromosome <END>
<BEG> returns whether the start index be choose randomly or set to zero <END>
<BEG> start the population for the next generation <END>
<BEG> access the elitism rate <END>
<BEG> determine whether or not the maximum allow time have pass <END>
<BEG> determine whether or not the give number of generation have pass <END>
<BEG> returns the crossover rate <END>
<BEG> returns the number of generation evolve to reach { link stoppingcondition } in the last run <END>
<BEG> returns the number of crossover point use by this { link crossoverpolicy } <END>
<BEG>  throw mathillegalargumentexception if < code > original < code > be not a { link randomkey } instance <END>
<BEG> select two chromosome from the population <END>
<BEG> gets the arity number of chromosome draw to the tournament <END>
<BEG> returns the mixing ratio use by this { link crossoverpolicy } <END>
<BEG> get the support point use to define the ball <END>
<BEG> get the number of support point use to define the ball <END>
<BEG> check if a point be within the ball or at boundary <END>
<BEG> check if a point be within an enlarged ball or at boundary <END>
<BEG>  < p > as the 1-dimension euclidean space do not have proper sub-spaces <SEG> this method always throw a { link nosubspaceexception } < p > return nothing throw nosubspaceexception in all case <END>
<BEG> check a point with respect to the interval <END>
<BEG> get the low value belong to the instance <END>
<BEG>  < p > the iterator return the limit value of sub-interval in ascend order <END>
<BEG> build a region cover the whole hyperplane <END>
<BEG> get the hyperplane location on the real line <END>
<BEG> returns the default 1d vector format for the give locale <END>
<BEG> get the first coordinate of the vectorial part of the quaternion <END>
<BEG> get the vector coordinate a a dimension 3 array <END>
<BEG> get the l < sub > 1 < sub > norm for the vector <END>
<BEG> get the square of the norm for the vector <END>
<BEG> get the l < sub > & infin ; < sub > norm for the vector <END>
<BEG> get a normalized vector align with the instance <END>
<BEG> get a vector orthogonal to the instance <END>
<BEG> compute the dot-product of the instance and another vector <END>
<BEG> compute the distance between the instance and another vector accord to the l < sub > 1 < sub > norm <END>
<BEG> compute the distance between the instance and another vector accord to the l < sub > & infin ; < sub > norm <END>
<BEG> compute the square of the distance between the instance and another vector <END>
<BEG> get the tolerance below which point be consider identical <END>
<BEG> get a line with reversed direction <END>
<BEG> get the line point closest to the origin <END>
<BEG> get the abscissa of a point with respect to the line <END>
<BEG> get one point from the line <END>
<BEG>  see # getabscissa vector3d <END>
<BEG>  see # pointat double <END>
<BEG> check if the instance be similar to another line <END>
<BEG> get the origin point of the plane frame <END>
<BEG> get the plane first canonical vector <END>
<BEG> revert the plane <END>
<BEG> transform a 3d space point into an in-plane point <END>
<BEG> transform an in-plane point into a 3d space point <END>
<BEG> get the offset orient distance of a parallel plane <END>
<BEG> get the offset orient distance of a point <END>
<BEG> check if the instance have the same orientation a another hyperplane <END>
<BEG> get the axis of the first rotation <END>
<BEG> get the start point of the segment <END>
<BEG> get the line contain the segment <END>
<BEG> get the cartesian coordinate <END>
<BEG> get the azimuthal angle in x-y plane <END>
<BEG> get the polar co-latitude angle <END>
<BEG> parses a string to produce a { link vector3d } object <END>
<BEG> returns if collinear point on the hull will be add a hull vertex <END>
<BEG> correct the orientation of the loop contain in the tree <END>
<BEG> get the part of the node cut sub-hyperplane that belong to the boundary and have the outside of the region on the plus side of it underlying hyperplane <END>
<BEG> get the sub-hyperplanes that be use to split the boundary part <END>
<BEG> get the original point <END>
<BEG> offset of the point with respect to the boundary it be project on <END>
<BEG> get the node that be use to split the outside touching part <END>
<BEG> add node if they be not already know <END>
<BEG> get the node whose element be not small than the reference object <END>
<BEG> compares this ordered t-uple with the specify object <END>
<BEG> get the component array <END>
<BEG> get the low angular bound of the arc <END>
<BEG> get the angular size of the arc <END>
<BEG>  < p > the iterator return the limit angle pair of sub-arcs in trigonometric order <END>
<BEG> compute the relative position of the instance with respect to an arc <END>
<BEG> split the instance in two part by an arc <END>
<BEG> get the corresponding normalized vector in the 2d euclidean space <END>
<BEG> compute the distance angular separation between two point <END>
<BEG> get a circle point from it phase around the circle <END>
<BEG> get start vertex <END>
<BEG> get the circle support this edge <END>
<BEG> connect the instance with a following edge <END>
<BEG> get the point strictly inside convex cell <END>
<BEG> get the boundary loop of the polygon <END>
<BEG> set incoming edge <END>
<BEG> get outgoing edge <END>
<BEG> get the format separator between component <END>
<BEG> parses a string to produce an array of coordinate <END>
<BEG> computes a hashcode for the matrix <END>
<BEG> check if a row index be valid <END>
<BEG> check if a matrix be addition compatible with the instance <END>
<BEG> get a reference to the underlie data array <END>
<BEG> returns { code this } minus { code m } <END>
<BEG> compute the dot product <END>
<BEG> find the orthogonal projection of this vector onto another vector <END>
<BEG> set a set of consecutive element <END>
<BEG> check if instance dimension be equal to some expect value <END>
<BEG> visits but do not alter all entry of this vector in default order increase index <END>
<BEG> visits but do not alter all entry of this vector in optimized order <END>
<BEG> visits and possibly alters all entry of this vector in optimized order <END>
<BEG> test for the equality of two vector <END>
<BEG> check whether any coordinate of this vector be infinite and none be { code nan } <END>
<BEG>  all { code nan } value have the same hash code <END>
<BEG>  in this implementation <SEG> the optimized order be the default order <END>
<BEG> returns the matrix u of the transform <END>
<BEG> returns the bi-diagonal matrix b of the transform <END>
<BEG> get the householder vector of the transform <END>
<BEG> get the main diagonal element of the matrix b of the transform <END>
<BEG> check if the matrix be transform to upper bi-diagonal <END>
<BEG> sets the entry in row number < code > row < code > a a row matrix <END>
<BEG> sets the entry in column number { code column } a a column matrix <END>
<BEG> convert a data array from raw layout to block layout <END>
<BEG> create a data array in block layout <END>
<BEG> returns the transpose of the matrix l of the decomposition <END>
<BEG> return the determinant of the matrix return determinant of the matrix <END>
<BEG> returns { code true } if positive-definiteness should be check for both matrix and preconditioner <END>
<BEG>  this implementation throw an { link mathunsupportedoperationexception } if no residual vector { code r } be provide at construction time <END>
<BEG>  this implementation return { code true } if a non- { code null } value be specify for the residual vector { code r } at construction time <END>
<BEG> computes the inverse of this diagonal matrix <END>
<BEG> returns whether this diagonal matrix be singular <SEG> i e <END>
<BEG> gets the matrix v of the decomposition <END>
<BEG> gets the block diagonal matrix d of the decomposition <END>
<BEG> returns whether the calculated eigen value be complex or real <END>
<BEG> returns the real part of the i < sup > th < sup > eigenvalue of the original matrix <END>
<BEG> returns the p row permutation matrix <END>
<BEG> returns the pivot permutation vector <END>
<BEG> returns the iteration manager attach to this solver <END>
<BEG> returns the square root of { code this } diagonal operator <END>
<BEG> returns a { link realmatrix } with specified dimension <END>
<BEG> returns < code > dimension x dimension < code > identity matrix <END>
<BEG> returns a diagonal matrix with specified element <END>
<BEG> creates a { link realvector } use the data from the input array <END>
<BEG> create a row { link realmatrix } use the data from the input array <END>
<BEG> check if matrix be addition compatible <END>
<BEG> check if matrix be subtraction compatible param leave left hand side matrix <END>
<BEG> convert a { link fieldmatrix } { link fraction } matrix to a { link realmatrix } <END>
<BEG> subtract { code m } from this matrix <END>
<BEG> determine if this value be within epsilon of zero <END>
<BEG> optimized method to add two openmaprealvectors <END>
<BEG> optimized method to append a openmaprealvector <END>
<BEG> optimized method to compute distance <END>
<BEG> distance between two vector <END>
<BEG>  implementation note : this work on exact value <SEG> and a a result it be possible for { code a subtract b } to be the zero vector <SEG> while { code a hashcode ! = b hashcode } <END>
<BEG>  implementation note : this perform an exact comparison <SEG> and a a result it be possible for { code a subtract b } } to be the zero vector <SEG> while { code a equal b == false } <END>
<BEG> return the percentage of none zero element a a decimal percent <END>
<BEG> decompose matrix <END>
<BEG> perform householder reflection for a minor a minor <SEG> minor of a <END>
<BEG> returns the result of multiply the transpose of { code this } operator by the vector { code x } optional operation <END>
<BEG> returns { code true } if this operator support { link # operatetranspose realvector } <END>
<BEG> get the format separator between row of the matrix <END>
<BEG> get the root of the covariance matrix <END>
<BEG> get the rank of the symmetric positive semidefinite matrix <END>
<BEG> returns the pivot matrix <SEG> p <SEG> use in the qr decomposition of matrix a such that ap = qr <END>
<BEG> return the effective numerical matrix rank <END>
<BEG> returns the quasi-triangular schur matrix t of the transform <END>
<BEG>  exception nullargumentexception if d be null <END>
<BEG> optimized method to compute out product when both vector be sparse <END>
<BEG> optimized method to compute { code this } minus { code v } <END>
<BEG> get the point choose to be the center of this cluster <END>
<BEG> returns the { link distancemeasure } instance use by this clusterer <END>
<BEG> calculates the distance between two { link clusterable } instance with the configured { link distancemeasure } <END>
<BEG> returns the maximum radius of the neighborhood to be consider <END>
<BEG> returns the minimum number of point need for a cluster <END>
<BEG> returns whether the first evaluation score be consider to be good than the second one by this evaluator <END>
<BEG> computes the centroid for a cluster <END>
<BEG> returns the maximum number of iteration this instance will use <END>
<BEG> returns the random generator this instance will use <END>
<BEG> returns the { code nxk } membership matrix <SEG> where { code n } be the number of data point and { code k } the number of cluster <END>
<BEG> returns an unmodifiable list of the data point use in the last call to { link # cluster collection } <END>
<BEG> performs a deep copy of this instance <END>
<BEG> creates a list of the neuron <SEG> sort in a custom order <END>
<BEG> creates a neuron and assign it a unique identifier <END>
<BEG> retrieves the neuron with the give unique { code id } <END>
<BEG> retrieves the number of call to the { link # compareandsetfeatures double [ ] <SEG> double [ ] compareandsetfeatures } method <END>
<BEG> retrieves the number of successful call to the { link # compareandsetfeatures double [ ] <SEG> double [ ] compareandsetfeatures } method <END>
<BEG> retrieves the feature set from the neuron at location { code i } in the map <END>
<BEG> retrieves the number of call to the { link # update network <SEG> double [ ] update } method <END>
<BEG> computes < code > a e < sup > -numcall b < sup > < code > <END>
<BEG> gets the number of neuron in each row of this map <END>
<BEG> get the field to which state vector element belong <END>
<BEG> get the differential equation to integrate <END>
<BEG> get the evaluation counter <END>
<BEG> check if a reset occur while last step be accept <END>
<BEG> getcurrent step start <END>
<BEG> set the last state flag <END>
<BEG> check if this step be the last one <END>
<BEG> check if a parameter be support and throw an illegalargumentexception if not <END>
<BEG> get the initial integration time <END>
<BEG> extract equation data from a complete state or derivative array <END>
<BEG> get the maximal time interval between event handler check <END>
<BEG> get the convergence threshold for event localization <END>
<BEG> get the upper limit in the iteration count for event localization <END>
<BEG> get the occurrence time of the event trigger in the current step <END>
<BEG> check if the integration should be stop at the end of the current step <END>
<BEG> let the event handler reset the state if it want <END>
<BEG> get an equation mapper for the primary equation set <END>
<BEG> set current time <END>
<BEG> get primary part of the current state <END>
<BEG> get primary part of the current state derivative <END>
<BEG> map a state to a complete flat array <END>
<BEG> map a state derivative to a complete flat array <END>
<BEG> get the mapper for the set of equation <END>
<BEG> add a set of secondary equation to be integrate along with the primary set <END>
<BEG> get main state at time <END>
<BEG> get derivative of the main state at time <END>
<BEG> add a parameter jacobian provider <END>
<BEG> get the starter integrator <END>
<BEG> get the safety factor for stepsize control <END>
<BEG> get the number of step of the multistep method exclude the one be compute <END>
<BEG> get the number of step of the method exclude the one be compute <END>
<BEG> reset internal state to dummy value <END>
<BEG> get the minimal step <END>
<BEG> compute the interpolation coefficient for dense output <END>
<BEG> estimate interpolation error <END>
<BEG> get parameter step <END>
<BEG> get the previous global grid point state <END>
<BEG> restrict step range to a limited part of the global step <END>
<BEG> get the current soft grid point time <END>
<BEG> finalize the step <END>
<BEG> really finalize the step <END>
<BEG> returns a value indicate whether the first point should be pass to the underlie fixed step size step handler <END>
<BEG> return the relative threshold <END>
<BEG> gets the maximal number of function evaluation <END>
<BEG> gets the number of evaluation of the objective function <END>
<BEG> gets the number of iteration perform by the algorithm <END>
<BEG> increment the evaluation count <END>
<BEG> gets the coefficient of the constraint leave hand side <END>
<BEG> gets the relationship between left and right hand side <END>
<BEG> gets the set of linear constraint <END>
<BEG> return { code true } if the variable be restrict to non-negative value <END>
<BEG> indicates whether all the variable must be restrict to non-negative value <END>
<BEG> get the -1 time the sum of all coefficient in the give array <END>
<BEG> checks whether the give column be basic <END>
<BEG> returns the variable that be basic in this row <END>
<BEG> removes the phase 1 objective function <SEG> positive cost non-artificial variable <SEG> and the non-basic artificial variable from this tableau <END>
<BEG> perform the row operation of the simplex algorithm with the select pivot column and row <END>
<BEG> subtracts a multiple of one row from another <END>
<BEG> get the offset of the first slack variable <END>
<BEG> get the original number of decision variable <END>
<BEG> set the simplex tableau use during the optimization once a feasible solution have be find <END>
<BEG> returns if the found solution be optimal <END>
<BEG> factory method that create instance of this class that represent a virtually unlimited number of evaluation <END>
<BEG> maps an array from unbounded to bound <END>
<BEG> computes the underlie function value from an unbounded point <END>
<BEG> store a new point at location { code index } <END>
<BEG> return history of sigma value <END>
<BEG> get a chi-square-like value assume the n residual follow n distinct normal distribution center on 0 and whose variance be the reciprocal of the weight <END>
<BEG> gets the square-root of the weight matrix <END>
<BEG> gets a reference to the value of the objective function <END>
<BEG> gets the upper bound <END>
<BEG> factory method that create instance of this class that represent unbounded range <END>
<BEG> return a point in the middle of the bracket <END>
<BEG> gets all the optimum find during the last call to { code optimize } <END>
<BEG> get all the optimum find during the last call to { link # optimize int <SEG> multivariatefunction <SEG> goaltype <SEG> double [ ] optimize } <END>
<BEG> get all the optimum find during the last call to { link # optimize int <SEG> multivariatevectorfunction <SEG> double [ ] <SEG> double [ ] <SEG> double [ ] optimize } <END>
<BEG> gets the weight matrix of the observation <END>
<BEG> gets the observed value to be match by the objective vector function <END>
<BEG> return a reference to the { link # target array } <END>
<BEG> method which a subclass < em > must < em > override whenever it internal state depend on the { link optimizationdata input } parse by this base class <END>
<BEG> increment the iteration counter by 1 <END>
<BEG> factorization use pollard 's rho algorithm <END>
<BEG> implementation of the pollard 's rho factorization algorithm <END>
<BEG> primality test : tell if the argument be a provable prime or not <END>
<BEG> prime factor decomposition param n number to factorize : must be & ge ; 2 return list of prime factor of n throw mathillegalargumentexception if n & lt ; 2 <END>
<BEG> extract small factor <END>
<BEG> miller-rabin probabilistic primality test for int type <SEG> use in such a way that a result be always guarantee <END>
<BEG> clears the cache use by the default implementation of { link # nextgaussian } <END>
<BEG> generates random byte and place them into a user-supplied byte array <END>
<BEG> returns the next pseudorandom <SEG> uniformly distribute { code int } value from this random number generator 's sequence <END>
<BEG> returns a pseudorandom <SEG> uniformly distribute { code int } value between 0 inclusive and the specify value exclusive <SEG> draw from this random number generator 's sequence <END>
<BEG> returns the next pseudorandom <SEG> uniformly distribute { code float } value between { code 0 0 } and { code 1 0 } from this random number generator 's sequence <END>
<BEG> returns the next pseudorandom <SEG> gaussian normally distribute { code double } value with mean { code 0 0 } and standard deviation { code 1 0 } from this random number generator 's sequence <END>
<BEG> reinitialize the generator a if just build with the give int array seed <END>
<BEG>  < p > this default implementation be copy from apache harmony java util random r929253 < p > < p > implementation note : < ul > < li > if n be a power of 2 <SEG> this method return { code int n long next 31 > > 31 } < li > < li > if n be not a power of 2 <SEG> what be return be { code next 31 % n } with { code next 31 } value reject i e <END>
<BEG> generates random byte and place them into a user-supplied array <END>
<BEG> get the underlie normalized component generator <END>
<BEG> computes the empirical distribution from the provided array of number <END>
<BEG> computes the empirical distribution from the input file <END>
<BEG> generates a random value from this distribution <END>
<BEG> returns a { link statisticalsummary } describe this distribution <END>
<BEG> returns a list of { link summarystatistics } instance contain statistic describe the value in each of the bin <END>
<BEG> < p > returns a fresh copy of the array of upper bound for the bin <END>
<BEG> < p > returns a fresh copy of the array of upper bound of the subintervals of [ 0<SEG>1 ] use in generate data from the empirical distribution <END>
<BEG> property indicate whether or not the distribution have be load <END>
<BEG> the within-bin smoothing kernel <END>
<BEG> performs scramble of digit { code d_j } accord to the formula : < pre > weight_i d_j mod base < pre > implementations can override this method to do a different scrambling <END>
<BEG> skip to the i-th point in the halton sequence <END>
<BEG> returns the index i of the next point in the halton sequence that will be return by call { link # nextvector } <END>
<BEG> factory method to create a < code > random < code > use the supplied < code > randomgenerator < code > <END>
<BEG>  < p > < strong > algorithm description : < strong > hex string be generate use a 2-step process <END>
<BEG>  < p > < strong > algorithm description < strong > : < ul > < li > for small mean <SEG> use simulation of a poisson process use uniform deviate <SEG> a describe < a href= http : irmi epfl ch cmos pmmi interactive rng7 htm > here < a > the poisson process and hence value return be bound by 1000 mean < li > < li > for large mean <SEG> use the rejection algorithm describe in < br > devroye <SEG> luc <END>
<BEG>  < p > < strong > algorithm description < strong > : uses the algorithm sa ahrens from p 876 in : [ 1 ] : ahrens <SEG> j h and dieter <SEG> u <END>
<BEG> < p > generates a random value from the { link org apache common math3 distribution gammadistribution gamma distribution } < p > < p > this implementation use the following algorithm : < p > < p > for 0 < shape < 1 : < br > ahrens <SEG> j h and dieter <SEG> u <SEG> < i > computer method for sample from gamma <SEG> beta <SEG> poisson and binomial distribution < i > computing <SEG> 12 <SEG> 223-246 <SEG> 1974 < p > < p > for shape > = 1 : < br > marsaglia and tsang <SEG> < i > a simple method for generating gamma variables < i > acm transactions on mathematical software <SEG> volume 26 issue 3 <SEG> september <SEG> 2000 < p > param shape the median of the gamma distribution param scale the scale parameter of the gamma distribution return random value sample from the gamma shape <SEG> scale distribution throw notstrictlypositiveexception if { code shape < = 0 } or { code scale < = 0 } <END>
<BEG>  this method call { link matharrays # shuffle int [ ] <SEG> randomgenerator matharrays shuffle } in order to create a random shuffle of the set of natural number { code { 0 <SEG> 1 <SEG> <SEG> n - 1 } } <END>
<BEG>  this method call { link # nextpermutation int <SEG> int nextpermutation c size <SEG> k } in order to sample the collection <END>
<BEG> reseeds the random number generator with the supplied seed <END>
<BEG> reseeds the secure random number generator with the current time in millisecond <END>
<BEG> reseeds the secure random number generator with the supplied seed <END>
<BEG> sets the prng algorithm for the underlying securerandom instance use the security provider api <END>
<BEG> creates a { link randomdatagenerator } instance that wrap a { link random } instance <END>
<BEG> generate a random scalar with zero location and unit scale <END>
<BEG> generate an uncorrelated random vector <END>
<BEG> returns the first bessel function <SEG> \ j_ { order } x \ <END>
<BEG> calculates bessel function \ j_ { n+alpha } x \ for non-negative argument x <SEG> and non-negative order n + alpha <END>
<BEG> returns the difference between erf x1 and erf x2 <END>
<BEG> returns the inverse erfc <END>
<BEG> computes the trigamma function of x <END>
<BEG> returns the value of 1 & gamma ; 1 + x - 1 for -0 & # 46 ; 5 & le ; x & le ; 1 & # 46 ; 5 <END>
<BEG> returns the value of γ x <END>
<BEG> get the n-dimensional point in integer space <END>
<BEG> returns the covariance matrix return covariance matrix <END>
<BEG> returns the number of observation length of covariate vector return number of observation <END>
<BEG> returns the correlation matrix <END>
<BEG> computes the kendall 's tau rank correlation matrix for the column of the input matrix <END>
<BEG> computes the correlation matrix for the column of the input matrix <SEG> use { link # correlation double [ ] <SEG> double [ ] } <END>
<BEG> computes the pearson 's product-moment correlation coefficient between two array <END>
<BEG> derives a correlation matrix from a covariance matrix <END>
<BEG> returns a { link pearsonscorrelation } instance construct from the rank input data <END>
<BEG> computes the spearman 's rank correlation coefficient between the two array <END>
<BEG> update the covariance estimation with a pair of variable x <SEG> y <END>
<BEG> appends another bivariate covariance calculation to this <END>
<BEG> appends { code sc } to this <SEG> effectively aggregate the computation in { code sc } with this <END>
<BEG>  throw numberistoosmallexception if the number of observation in a cell be & lt ; 2 <END>
<BEG> return the covariance matrix a two-dimensional array <END>
<BEG> this default implementation call { link # clear } <SEG> then invoke { link # increment } in a loop over the the input array <SEG> and then use { link # getresult } to compute the return value <END>
<BEG> this default implementation just call { link # increment } in a loop over the input array <END>
<BEG> this default implementation just call { link # increment } in a loop over the specified portion of the input array <END>
<BEG> returns true iff < code > object < code > be an < code > abstractstorelessunivariatestatistic < code > return the same value a this for < code > getresult < code > and < code > getn < code > param object object to test equality against <END>
<BEG> returns hash code base on getresult and getn return hash code <END>
<BEG> returns the sum of the log of all the aggregate data <END>
<BEG> returns the geometric mean of all the aggregate data <END>
<BEG> returns a statistic relate to the second central moment <END>
<BEG> return a { link statisticalsummaryvalues } instance report current aggregate statistic <END>
<BEG> creates and return a { code summarystatistics } whose data will be aggregate with those of this { code aggregatesummarystatistics } <END>
<BEG> replaces the most recently store value with the give value <END>
<BEG> returns the < a href= http : www xycoon com arithmetic_mean htm > arithmetic mean < a > of the available value return the mean or double nan if no value have be add <END>
<BEG> returns the < a href= http : www xycoon com geometric_mean htm > geometric mean < a > of the available value <END>
<BEG> returns the sample variance of the available value <END>
<BEG> returns the < a href= http : en wikibooks org wiki statistics summary variance > population variance < a > of the available value <END>
<BEG> returns the quadratic mean <SEG> a k a <END>
<BEG> returns the skewness of the available value <END>
<BEG> returns the number of available value return the number of available value <END>
<BEG> returns the sum of the value that have be add to univariate <END>
<BEG> returns the sum of the square of the available value <END>
<BEG> returns the maximum number of value that can be store in the dataset <SEG> or infinite_window -1 if there be no limit <END>
<BEG> windowsize control the number of value that contribute to the report statistic <END>
<BEG> returns the current set of value in an array of double primitive <SEG> sort in ascend order <END>
<BEG> returns an estimate for the pth percentile of the stored value <END>
<BEG> generates a text report display univariate statistic from value that have be add <END>
<BEG> apply the give statistic to the data associate with this set of statistic <END>
<BEG> < p > sets the implementation for the mean < p > param meanimpl the univariatestatistic instance to use for compute the mean since 1 2 <END>
<BEG> returns the currently configure geometric mean implementation <END>
<BEG> < p > sets the implementation for the sum of square < p > param sumsqimpl the univariatestatistic instance to use for compute the sum of square since 1 2 <END>
<BEG> returns a copy of this descriptivestatistics instance with the same internal state <END>
<BEG> copies source to dest <END>
<BEG> < p > sets the implementation for the sum of log < p > < p > this method must be activate before any data have be add - i e <SEG> before { link # increment double increment } have be use to add data ; otherwise an illegalstateexception will be throw < p > param sumlogimpl the storelessunivariatestatistic instance to use for compute the log sum throw mathillegalstateexception if data have already be add i e if n > 0 <END>
<BEG> returns the currently configure sum of logs implementation return the storelessunivariatestatistic implement the log sum <END>
<BEG> sets the variance direction param variancedirection the direction of the semivariance <END>
<BEG> get the covariance matrix <END>
<BEG> get the mean vector <END>
<BEG> add an n-tuple to the data param value the n-tuple to add throw dimensionmismatchexception if the length of the array do not match the one use at construction <END>
<BEG> returns an array whose i < sup > th < sup > entry be the sum of the i < sup > th < sup > entry of the array that have be add use { link # addvalue double [ ] } return the array of component sum <END>
<BEG> returns the covariance matrix of the value that have be add <END>
<BEG> returns true iff < code > object < code > be a < code > multivariatesummarystatistics < code > instance and all statistic have the same value a this <END>
<BEG> returns the currently configure sum implementation return the storelessunivariatestatistic implement the sum <END>
<BEG> < p > sets the implementation for the sum < p > < p > this method must be activate before any data have be add - i e <SEG> before { link # addvalue double [ ] addvalue } have be use to add data ; otherwise an illegalstateexception will be throw < p > param sumimpl the storelessunivariatestatistic instance to use for compute the sum throw dimensionmismatchexception if the array dimension do not match the one use at construction throw mathillegalstateexception if data have already be add i e if n > 0 <END>
<BEG> returns the currently configure sum of square implementation return the storelessunivariatestatistic implement the sum of square <END>
<BEG> < p > sets the implementation for the sum of square < p > < p > this method must be activate before any data have be add - i e <SEG> before { link # addvalue double [ ] addvalue } have be use to add data ; otherwise an illegalstateexception will be throw < p > param sumsqimpl the storelessunivariatestatistic instance to use for compute the sum of square throw dimensionmismatchexception if the array dimension do not match the one use at construction throw mathillegalstateexception if data have already be add i e if n > 0 <END>
<BEG> < p > sets the implementation for the sum of log < p > < p > this method must be activate before any data have be add - i e <SEG> before { link # addvalue double [ ] addvalue } have be use to add data ; otherwise an illegalstateexception will be throw < p > param sumlogimpl the storelessunivariatestatistic instance to use for compute the log sum throw dimensionmismatchexception if the array dimension do not match the one use at construction throw mathillegalstateexception if data have already be add i e if n > 0 <END>
<BEG> returns the currently configure geometric mean implementation return the storelessunivariatestatistic implement the geometric mean <END>
<BEG> < p > sets the implementation for the geometric mean < p > < p > this method must be activate before any data have be add - i e <SEG> before { link # addvalue double [ ] addvalue } have be use to add data ; otherwise an illegalstateexception will be throw < p > param geomeanimpl the storelessunivariatestatistic instance to use for compute the geometric mean throw dimensionmismatchexception if the array dimension do not match the one use at construction throw mathillegalstateexception if data have already be add i e if n > 0 <END>
<BEG> returns true iff { code o } be a { code psquarepercentile } return the same value a this for { code getresult } and { code getn } and also have equal marker param o object to compare return true if { code o } be a { code psquarepercentile } with equivalent internal state <END>
<BEG> the weighted sum of the entry in the specified portion of the input array <SEG> or 0 if the designated subarray be empty <END>
<BEG> adds 1 to the frequency count for v < p > if other object have already be add to this frequency <SEG> v must be comparable to those that have already be add <END>
<BEG> increments the frequency count for v < p > if other object have already be add to this frequency <SEG> v must be comparable to those that have already be add <END>
<BEG> returns an iterator over the set of value that have be add <END>
<BEG> return an iterator over the set of key and value that have be add <END>
<BEG> returns the number of value equal to v returns 0 if the value be not comparable <END>
<BEG> returns the cumulative frequency of value less than or equal to v < p > returns 0 if v be not comparable to the value set < p > param v the value to lookup <END>
<BEG> returns the cumulative percentage of value less than or equal to v a a proportion between 0 and 1 <END>
<BEG> returns the mode value s in comparator order <END>
<BEG> merge another frequency object 's count into this instance <END>
<BEG> merge a { link collection } of { link frequency } object into this instance <END>
<BEG> computes the < i > p-value < i > <SEG> or < i > observe significance level < i > <SEG> of a one-sample < a href= http : en wikipedia org wiki kolmogorov-smirnov_test > kolmogorov-smirnov test < a > evaluate the null hypothesis that { code data } conforms to { code distribution } <END>
<BEG> computes the one-sample kolmogorov-smirnov test statistic <SEG> \ d_n=\sup_x |f_n x -f x |\ where \ f\ be the distribution cdf function associate with { code distribution } <SEG> \ n\ be the length of { code data } and \ f_n\ be the empirical distribution that put mass \ 1 n\ at each of the value in { code data } <END>
<BEG> computes the two-sample kolmogorov-smirnov test statistic <SEG> \ d_ { n <SEG> m } =\sup_x |f_n x -f_m x |\ where \ n\ be the length of { code x } <SEG> \ m\ be the length of { code y } <SEG> \ f_n\ be the empirical distribution that put mass \ 1 n\ at each of the value in { code x } and \ f_m\ be the empirical distribution of the { code y } value <END>
<BEG> performs a < a href= http : en wikipedia org wiki kolmogorov-smirnov_test > kolmogorov-smirnov test < a > evaluate the null hypothesis that { code data } conforms to { code distribution } <END>
<BEG> estimates the < i > p-value < i > of a two-sample < a href= http : en wikipedia org wiki kolmogorov-smirnov_test > kolmogorov-smirnov test < a > evaluate the null hypothesis that { code x } and { code y } be sample draw from the same probability distribution <END>
<BEG> calculates { code p d_n < d } <END>
<BEG> computes the pelz-good approximation for \ p d_n < d \ a describe in [ 2 ] in the class javadoc <END>
<BEG> computes \ p d_ { n <SEG> m } > d \ if { code strict } be { code true } ; otherwise \ p d_ { n <SEG> m } \ge d \ <SEG> where \ d_ { n <SEG> m } \ be the 2-sample kolmogorov-smirnov statistic <END>
<BEG> uses the kolmogorov-smirnov distribution to approximate \ p d_ { n <SEG> m } > d \ where \ d_ { n <SEG> m } \ be the 2-sample kolmogorov-smirnov statistic <END>
<BEG> fills a boolean array randomly with a fixed number of { code true } value <END>
<BEG> see org apache common math3 stat inference onewayanova # anovafvalue collection since 1 2 <END>
<BEG> computes approximate degree of freedom for 2-sample t-test <END>
<BEG> verifies that parameter satisfy precondition <END>
<BEG> param nointercept true mean the model be to be estimate without an intercept term since 2 2 <END>
<BEG> < p > loads model x and y sample data from a flat input array <SEG> override any previous sample <END>
<BEG> loads new y sample data <SEG> override any previous data <END>
<BEG> < p > loads new x sample data <SEG> override any previous data <END>
<BEG> validates sample data <END>
<BEG> validates that the x data and covariance matrix have the same number of row and that the covariance matrix be square <END>
<BEG> estimates the standard error of the regression <END>
<BEG> < p > calculates the variance of the error term < p > uses the formula < pre > var u = u & middot ; u n - k < pre > where n and k be the row and column dimension of the design matrix x <END>
<BEG> calculates the residual of multiple linear regression in matrix notation <END>
<BEG> replace sample data <SEG> override any previous sample <END>
<BEG> add the covariance data <END>
<BEG> calculates beta by gls <END>
<BEG> calculates the variance on the beta <END>
<BEG> calculates the estimated variance of the error term use the formula < pre > var u = tr u ' omega^-1 u n-k < pre > where n and k be the row and column dimension of the design matrix x <END>
<BEG> a getter method which determine whether a constant be include <END>
<BEG> gets the number of observation add to the regression model <END>
<BEG> adds multiple observation to the model <END>
<BEG> as the name suggest <SEG> clear wipe the internals and reorder everything in the canonical order <END>
<BEG> in the original algorithm only the partial correlation of the regressors be return to the user <END>
<BEG> gets the diagonal of the hat matrix also know a the leverage matrix <END>
<BEG> gets the order of the regressors <SEG> useful if some type of reordering have be call <END>
<BEG> conducts a regression on the data in the model <SEG> use a subset of regressors <END>
<BEG> loads model x and y sample data <SEG> override any previous sample <END>
<BEG> < p > compute the hat matrix <END>
<BEG> returns the r-squared statistic <SEG> define by the formula < pre > r < sup > 2 < sup > = 1 - ssr ssto < pre > where ssr be the { link # calculateresidualsumofsquares sum of squared residual } and ssto be the { link # calculatetotalsumofsquares total sum of square } < p > if there be no variance in y <SEG> i e <SEG> ssto = 0 <SEG> nan be return < p > return r-square statistic throw nullpointerexception if the sample have not be set throw org apache common math3 linear singularmatrixexception if the design matrix be singular since 2 2 <END>
<BEG> < p > returns the adjusted r-squared statistic <SEG> define by the formula < pre > r < sup > 2 < sup > < sub > adj < sub > = 1 - [ ssr n - 1 ] [ ssto n - p ] < pre > where ssr be the { link # calculateresidualsumofsquares sum of squared residual } <SEG> ssto be the { link # calculatetotalsumofsquares total sum of square } <SEG> n be the number of observation and p be the number of parameter estimate include the intercept < p > < p > if the regression be estimate without an intercept term <SEG> what be return be < pre > < code > 1 - 1 - { link # calculatersquared } n n - p < code > < pre > < p > < p > if there be no variance in y <SEG> i e <SEG> ssto = 0 <SEG> nan be return < p > return adjust r-squared statistic throw nullpointerexception if the sample have not be set throw org apache common math3 linear singularmatrixexception if the design matrix be singular see # isnointercept since 2 2 <END>
<BEG> calculates the regression coefficient use ols <END>
<BEG> < p > returns the parameter estimate for the regressor at the give index < p > < p > a redundant regressor will have it redundancy flag set <SEG> as well a a parameter estimate equal to { code double nan } < p > param index index <END>
<BEG> < p > returns a copy of the regression parameter estimate < p > < p > the parameter estimate be return in the natural order of the data < p > < p > a redundant regressor will have it redundancy flag set <SEG> a will a parameter estimate equal to { code double nan } < p > return array of parameter estimate <SEG> null if no estimation occur <END>
<BEG> < p > returns the < a href= http : www xycoon com standerrorb 1 htm > standard error of the parameter estimate < a > <SEG> usually denote s b < sub > i < sub > < p > < p > if there be problem with an ill condition design matrix then the regressor which be redundant will be assign < code > double nan < code > <END>
<BEG> < p > returns the covariance between regression parameter i and j < p > < p > if there be problem with an ill condition design matrix then the covariance which involve redundant column will be assign { code double nan } <END>
<BEG> < p > returns the sum of squared deviation of the y value about their mean < p > < p > this be define a ssto < a href= http : www xycoon com sumofsquares htm > here < a > < p > < p > if { code n < 2 } <SEG> this return { code double nan } < p > return sum of squared deviation of y value <END>
<BEG> < p > returns the < a href= http : www xycoon com sumofsquares htm > sum of squared error < a > sse associate with the regression model < p > < p > the return value be constrain to be non-negative - i e <SEG> if due to round error the computational formula return a negative result <SEG> 0 be return < p > < p > < strong > preconditions < strong > : < ul > < li > numberofparameters data pair must have be add before invoke this method <END>
<BEG> < p > returns the sum of squared error divide by the degree of freedom <SEG> usually abbreviate mse < p > < p > if there be few than < strong > numberofparameters + 1 < strong > data pair in the model <SEG> or if there be no variation in < code > x < code > <SEG> this return < code > double nan < code > < p > return sum of squared deviation of y value <END>
<BEG> < p > returns the adjusted r-squared statistic <SEG> define by the formula < pre > r < sup > 2 < sup > < sub > adj < sub > = 1 - [ ssr n - 1 ] [ ssto n - p ] < pre > where ssr be the sum of squared residual } <SEG> ssto be the total sum of square } <SEG> n be the number of observation and p be the number of parameter estimate include the intercept < p > < p > if the regression be estimate without an intercept term <SEG> what be return be < pre > < code > 1 - 1 - { link # getrsquared } n n - p < code > < pre > < p > return adjust r-squared statistic <END>
<BEG> appends data from another regression calculation to this one <END>
<BEG> adds the observation represent by the element in < code > data < code > <END>
<BEG> adds one observation to the regression model <END>
<BEG> adds a series of observation to the regression model <END>
<BEG> removes observation represent by the element in < code > data < code > <END>
<BEG> returns the < a href= http : www xycoon com sumofsquares htm > sum of squared error < a > sse associate with the regression model <END>
<BEG> returns the sum of squared deviation of the y value about their mean <END>
<BEG> returns the sum of crossproducts <SEG> x < sub > i < sub > y < sub > i < sub > <END>
<BEG> returns the sum of squared error divide by the degree of freedom <SEG> usually abbreviate mse <END>
<BEG> returns < a href= http : mathworld wolfram com correlationcoefficient html > pearson 's product moment correlation coefficient < a > <SEG> usually denote r < p > < strong > preconditions < strong > : < ul > < li > at least two observation with at least two different x value must have be add before invoke this method <END>
<BEG> returns the < a href= http : www xycoon com coefficient1 htm > coefficient of determination < a > <SEG> usually denote r-square <END>
<BEG> returns the < a href= http : www xycoon com standarderrorb0 htm > standard error of the intercept estimate < a > <SEG> usually denote s b0 <END>
<BEG> returns the half-width of a 100-100 alpha % confidence interval for the slope estimate <END>
<BEG> performs a regression on data present in buffer include only regressors index in variablestoinclude and output a regressionresults object param variablestoinclude an array of index of regressors to include return regressionresults act a a container of regression output throw mathillegalargumentexception if the variablestoinclude array be null or zero length throw outofrangeexception if a request variable be not present in model <END>
<BEG> returns the sum of the square of the entry in the input array <SEG> or < code > double nan < code > if the array be empty <END>
<BEG> returns the sum of the natural log of the entry in the input array <SEG> or < code > double nan < code > if the array be empty <END>
<BEG> returns the variance of the entry in the input array <SEG> use the precomputed mean value <END>
<BEG> returns the < a href= http : en wikibooks org wiki statistics summary variance > population variance < a > of the entry in the input array <SEG> or < code > double nan < code > if the array be empty <END>
<BEG> returns the < a href= http : en wikibooks org wiki statistics summary variance > population variance < a > of the entry in the input array <SEG> use the precomputed mean value <END>
<BEG> returns an estimate of the < code > p < code > th percentile of the value in the < code > value < code > array <END>
<BEG> returns the sum of the signed difference between correspond element of the input array -- i e <SEG> sum sample1 [ i ] - sample2 [ i ] <END>
<BEG> returns the mean of the signed difference between correspond element of the input array -- i e <SEG> sum sample1 [ i ] - sample2 [ i ] sample1 length <END>
<BEG> normalize standardize the sample <SEG> so it be have a mean of 0 and a standard deviation of 1 <END>
<BEG>  throw mathillegalargumentexception if the length of the data array be not a power of two plus one <END>
<BEG> returns the forward <SEG> inverse transform of the specified real data set <END>
<BEG> performs a multi-dimensional fourier transform on a give array <END>
<BEG>  throw mathillegalargumentexception if the length of the data array be not a power of two <END>
<BEG> returns the forward transform of the specified integer data set the integer transform can not be invert directly <SEG> due to a scaling factor which may lead to double result <END>
<BEG> the fht fast hadamard transformation which use only subtraction and addition <END>
<BEG> returns the forward transform of the specified integer data set <END>
<BEG> perform the fst algorithm include inverse <END>
<BEG> builds a new two dimensional array of { code double } fill with the real and imaginary part of the specify { link complex } number <END>
<BEG> add two integer <SEG> check for overflow <END>
<BEG> computes the great common divisor of the absolute value of two number <SEG> use a modified version of the binary gcd method <END>
<BEG> < p > gets the great common divisor of the absolute value of two number <SEG> use the binary gcd method which avoid division and modulo operation <END>
<BEG> < p > returns the least common multiple of the absolute value of two number <SEG> use the formula { code lcm a <SEG> b = a gcd a <SEG> b b } <END>
<BEG> raise a biginteger to an int power <END>
<BEG> sets the rounding mode for decimal division <END>
<BEG> sets the scale for division operation <END>
<BEG>  this in particular pick a average of begin and end index return the index correspond to a simple average of the first and the last element index of the array slice throw mathillegalargumentexception when index exceed range <END>
<BEG> returns n ! <END>
<BEG> compute n ! <SEG> the < a href= http : mathworld wolfram com factorial html > factorial < a > of { code n } the product of the number 1 to n <SEG> a a { code double } <END>
<BEG> compute the natural logarithm of the factorial of { code n } <END>
<BEG> returns the < a href= http : mathworld wolfram com stirlingnumberofthesecondkind html > stirling number of the second kind < a > <SEG> { code s n <SEG> k } <SEG> the number of way of partition an { code n } -element set into { code k } non-empty subset <END>
<BEG> returns an iterator whose range be the k-element subset of { 0 <SEG> <SEG> n - 1 } represent a { code int [ ] } array <END>
<BEG> evaluates the continued fraction at the value x <END>
<BEG>  the current implementation strictly enforce { code this add a equals new decimal64 this doublevalue + a doublevalue } <END>
<BEG>  the current implementation strictly enforce { code this negate equal new decimal64 -this doublevalue } <END>
<BEG>  the current implementation strictly enforce { code this multiply n equal new decimal64 n this doublevalue } <END>
<BEG>  the current implementation strictly enforce { code this reciprocal equal new decimal64 1 0 this doublevalue } <END>
<BEG>  the current implementation performs cast to a { code byte } <END>
<BEG>  the current implementation return the same value a < center > { code new double this doublevalue compareto new double o doublevalue } < center > see double # compareto double <END>
<BEG>  the current implementation return the same value a { code new double this doublevalue hashcode } see double # hashcode <END>
<BEG> for x between 0 and pi 4 compute cosine use talor series co x = 1 - x^2 2 ! <END>
<BEG> for x between 0 and 1 <SEG> return exp x <SEG> use extended precision param x argument of exponential param result placeholder where to place exp x split in two term for extra precision i e <END>
<BEG> compute the reciprocal of in <END>
<BEG> compute exp p for a integer p in extended precision <END>
<BEG> xi in the range of [ 1 <SEG> 2 ] <END>
<BEG> format a double <END>
<BEG> sets the upper limit for the counter <END>
<BEG> checks whether a single increment be allow <END>
<BEG> performs multiple increment <END>
<BEG> adds one to the current iteration count <END>
<BEG> create an instance that delegate everything to a { link integersequence incrementor } <END>
<BEG> returns the number of iteration perform at the time { code this } event be create <END>
<BEG> attaches a listener to this manager <END>
<BEG> informs all register listener that the initial phase prior to the main iteration loop have be complete <END>
<BEG> informs all register listener that a new iteration in the main iteration loop have be perform <END>
<BEG> informs all register listener that the final phase post-iterations have be complete <END>
<BEG> sets the iteration count to 0 <END>
<BEG> get the pivotin strategy <END>
<BEG> select k < sup > th < sup > value in the array <END>
<BEG> normalize an angle in a 2 & pi ; wide interval around a center value <END>
<BEG> find the maximum of two field element <END>
<BEG> returns the first argument with the sign of the second argument <END>
<BEG> check that the argument be a real number <END>
<BEG> check that all the element be real number <END>
<BEG>  this in specific make use of median of 3 pivoting <END>
<BEG> create an iterator over this counter <END>
<BEG> get the stored value associate with the give key param key key associate with the data return data associate with the key <END>
<BEG> check if a value be associate with a key <END>
<BEG> put a value associate with a key in the map <END>
<BEG> returns true if both argument be nan or they be equal a define by { link # equal float <SEG> float equal x <SEG> y <SEG> 1 } <END>
<BEG> returns true if the argument be both nan or if they be equal a define by { link # equal float <SEG> float <SEG> int equal x <SEG> y <SEG> maxulps } <END>
<BEG> returns true if the argument be both nan or they be equal a define by { link # equal double <SEG> double equal x <SEG> y <SEG> 1 } <END>
<BEG> returns { code true } if there be no double value strictly between the argument or the relative difference between them be less than or equal to the give tolerance <END>
<BEG> returns true if both argument be nan or if they be equal a define by { link # equal double <SEG> double <SEG> int equal x <SEG> y <SEG> maxulps } <END>
<BEG> rounds the give value to the specified number of decimal place <END>
<BEG>  a uniform random pivot selection between begin and end index return the index correspond to a random uniformly select value between first and the last index of the array slice throw mathillegalargumentexception when index exceed range <END>
<BEG> returns the transformer that be map to a class if mapping be not present <SEG> this return null <END>
<BEG> sets a class to transformer mapping in the map <END>
<BEG> returns the set of classes use a key in the map <END>
<BEG> attempts to transform the object against the map of numbertransformers <END>
<BEG> add two complex number in-place param c other complex number param result complex number where result be store return same a result <END>
<BEG> add two complex number <END>
<BEG> add a real number to a complex number in-place <END>
<BEG> add a real number to a complex number <END>
<BEG> subtract two complex number <SEG> in-place param c complex number to subtract param result result complex number return same a result <END>
<BEG> subtract two complex number param c complex number to subtract return new complex number with result <END>
<BEG> multiply two complex number <SEG> in-place param c other complex number param result complex number where product be stored return same a result <END>
<BEG> multiply two complex number param c other complex number return new complex number with product of this and c <END>
<BEG> divide two complex number param c complex number to divide this by return new complex number with quotient of this and c <END>
<BEG> divide two complex number <SEG> in-place param c complex number to divide this by param result complex number to hold result return same a result <END>
<BEG> return the absolute value return the result length of the vector in 2d plane <END>
<BEG> creates a new matrix where the value of the give vector be the diagonal value of the matrix <END>
<BEG> construct a matrix of arbitrary shape and set the diagonal accord to a pass vector <END>
<BEG> create a 1 1 - matrix <END>
<BEG> test whether a matrix be scalar <END>
<BEG> working with slice man ! <END>
<BEG> compute complex conjugate <END>
<BEG> resize the matrix <END>
<BEG> check whether this can be multiply with a <END>
<BEG> set matrix element <END>
<BEG> get index of an element <END>
<BEG> compute the row index of a linear index <END>
<BEG> get real part of the matrix <END>
<BEG> generate string representation of this matrix multi-line <END>
<BEG> add two matrix <END>
<BEG> add a scalar to a matrix <END>
<BEG> subtract two matrix <SEG> but subtract first from second matrix <SEG> that be <SEG> compute < em > result = other - this < em > <END>
<BEG> elementwise multiplication with a scalar <END>
<BEG> matrix-matrix multiplication with a scalar for symmetry <SEG> do the same a muli scalar <END>
<BEG> elementwise division <SEG> with operand switch <END>
<BEG> elementwise division with a scalar <SEG> with operand switch <END>
<BEG> computes a rank-1-update a = a + alpha x y ' <END>
<BEG> return a vector contain the sum of the column have number of columns many entry <END>
<BEG> add a vector to all column of the matrix <END>
<BEG> saves this matrix to the specify file <END>
<BEG> loads a matrix from a file into this matrix <END>
<BEG> if info compute cholesky decomposition of a param a symmetric <SEG> positive definite matrix only upper half be use return upper triangular matrix u such that a = u ' u <END>
<BEG> compute cholesky decomposition of a param a symmetric <SEG> positive definite matrix only upper half be use return upper triangular matrix u such that a = u ' u <END>
<BEG> qr decomposition <END>
<BEG> compute the eigenvalue for a symmetric matrix <END>
<BEG> computes the eigenvalue and eigenvectors for a symmetric matrix <END>
<BEG> computes the eigenvalue of a general matrix <END>
<BEG> compute generalize eigenvalue of the problem a x = l b x <END>
<BEG> solve a general problem a x = l b x <END>
<BEG> computes select eigenvalue of the real generalized symmetric-definite eigenproblem of the form a x = l b x or <SEG> equivalently <SEG> a - l b x = 0 <END>
<BEG> computes select eigenvalue and their corresponding eigenvectors of the real generalized symmetric-definite eigenproblem of the form a x = l b x or <SEG> equivalently <SEG> a - l b x = 0 <END>
<BEG> < p > compute the pairwise square distance between all column of the two matrix < p > < p > an efficient way to do this be to observe that < i > x-y ^2 = x^2 - 2xy - y^2 < i > and to then properly carry out the computation with matrix < p > <END>
<BEG> center a vector subtract mean from all element in-place <END>
<BEG> center the row of a matrix in-place <END>
<BEG> normalize a vector scale such that it euclidean norm be 1 in-place <END>
<BEG> copy dx to dy <END>
<BEG> compute dy < - da dx + dy <END>
<BEG> compute scalar product between dx and dy <END>
<BEG> # mapfct 'math ab ' # <END>
<BEG> # cmapfct 'abs ' # <END>
<BEG> element-wise power function <END>
<BEG> calculate matrix exponential of a square matrix <END>
<BEG> construct point range constant range with give index <END>
<BEG> compute index of element with large absolute value index of absolute value maximum <END>
<BEG> compute index of element with large absolute value complex version <END>
<BEG> generalized least squares via gelsd <END>
<BEG> compute a singular-value decomposition of a <END>
<BEG> compute the singular value of a matrix <END>
<BEG> compute the singular value of a complex matrix <END>
<BEG> solves the linear equation a x = b for symmetric a <END>
<BEG> solves the linear equation a x = b for symmetric and positive definite a <END>
<BEG> computes the least squares solution for over or underdetermined linear equation a x = b in the overdetermined case <SEG> when m > n <SEG> that be <SEG> there be more equation than variable <SEG> it compute the least squares solution of x - > ||a x - b ||_2 <END>
<BEG> create a random permutation of the number 0 <SEG> <SEG> size - 1 <END>
<BEG> get a random sample of k out of n element <END>
<BEG> create a permutation matrix from a lapack-style 'ipiv ' vector <END>
<BEG> check whether vector addition work <END>
<BEG> check matrix multiplication <END>
<BEG> compute eigenvalue <END>
<BEG> set this { link axisangle4d } to the value of < code > a < code > <END>
<BEG> set this { link axisangle4d } to the give value <END>
<BEG> set this { link axisangle4d } to be equivalent to the give { link quaternionfc } <END>
<BEG> set the give { link quaternionf } to be equivalent to this { link axisangle4d } rotation <END>
<BEG> normalize the axis vector <END>
<BEG> transform the give vector by the rotation transformation describe by this { link axisangle4d } and store the result in < code > d < code > <END>
<BEG> return a string representation of this { link axisangle4d } by format the component with the give { link numberformat } <END>
<BEG> return a string representation of this circle by format the vector component with the give { link numberformat } <END>
<BEG> update the stored frustum plane of < code > this < code > { link frustumintersection } with the give { link matrix4fc matrix } and allow to optimize the frustum plane extraction in the case when no intersection test be need for sphere <END>
<BEG> test whether the give point < code > x <SEG> y <SEG> z < code > be within the frustum define by < code > this < code > frustum culler <END>
<BEG> test whether the give sphere be partly or completely within or outside of the frustum define by < code > this < code > frustum culler <END>
<BEG> this be an implementation of the 2 4 basic intersection test of the mention site <END>
<BEG> compute the signed distance from the give axis-aligned box to the < code > plane < code > <END>
<BEG> this be an implementation of the first algorithm in 2 5 plane masking and coherency of the mention site <END>
<BEG> update the stored frustum corner ray and origin of < code > this < code > { link frustumraybuilder } with the give { link matrix4fc matrix } <END>
<BEG> store the eye origin of the perspective frustum in the give < code > origin < code > <END>
<BEG> obtain the normalized direction of a ray start at the center of the coordinate system and go through the near frustum plane <END>
<BEG> compute two arbitrary vector perpendicular to the give normalized vector < code > x <SEG> y <SEG> z < code > <SEG> and store them in < code > dest1 < code > and < code > dest2 < code > <SEG> respectively <END>
<BEG> calculate the normal of a surface define by point < code > v1x <SEG> v1y <SEG> v1z < code > <SEG> < code > v2x <SEG> v2y <SEG> v2z < code > and < code > v3x <SEG> v3y <SEG> v3z < code > and store it in < code > d < code > <END>
<BEG> calculate the surface tangent for the three supply vertex and uv coordinate and store the result in < code > d < code > <END>
<BEG> determine the signed distance of the give point < code > pointx <SEG> pointy <SEG> pointz < code > to the plane specify via it general plane equation < i > a x + b y + c z + d = 0 < i > <END>
<BEG> find the point on the give plane which be close to the specify point < code > px <SEG> py <SEG> pz < code > and store the result in < code > result < code > <END>
<BEG> find the point on the give line segment which be close to the specify point < code > px <SEG> py <SEG> pz < code > <SEG> and store the result in < code > result < code > <END>
<BEG> test whether the projection of the give point < code > px <SEG> py <SEG> pz < code > lie inside of the triangle define by the three vertex < code > v0x <SEG> v0y <SEG> v0z < code > <SEG> < code > v1x <SEG> v1y <SEG> v1z < code > and < code > v2x <SEG> v2y <SEG> v2z < code > <END>
<BEG> test whether the line with the general line equation < i > a x + b y + c = 0 < i > intersect the circle with center < code > centerx <SEG> centery < code > and < code > radius < code > <END>
<BEG> test whether the line with the general line equation < i > a x + b y + c = 0 < i > intersect the circle with center < code > centerx <SEG> centery < code > and < code > radius < code > <SEG> and store the center of the line segment of intersection in the < code > x <SEG> y < code > component of the supplied vector and the half-length of that line segment in the z component <END>
<BEG> test whether the axis-aligned rectangle with minimum corner < code > minx <SEG> miny < code > and maximum corner < code > maxx <SEG> maxy < code > intersect the line define by the two point < code > x0 <SEG> y0 < code > and < code > x1 <SEG> y1 < code > <END>
<BEG> test whether the axis-aligned rectangle with minimum corner < code > minxa <SEG> minya < code > and maximum corner < code > maxxa <SEG> maxya < code > intersect the axis-aligned rectangle with minimum corner < code > minxb <SEG> minyb < code > and maximum corner < code > maxxb <SEG> maxyb < code > <END>
<BEG> test whether a give circle with center < code > ax <SEG> ay < code > and radius < code > ar < code > and travel distance vector < code > max <SEG> may < code > intersect a give static circle with center < code > bx <SEG> by < code > and radius < code > br < code > <END>
<BEG> test whether the one circle with center < code > ax <SEG> ay < code > and square radius < code > radiussquareda < code > intersect the other circle with center < code > bx <SEG> by < code > and square radius < code > radiussquaredb < code > <SEG> and store the center of the line segment of intersection in the < code > x <SEG> y < code > component of the supplied vector and the half-length of that line segment in the z component <END>
<BEG> test whether the one circle with center < code > ax <SEG> ay < code > and radius < code > ra < code > intersect the other circle with center < code > bx <SEG> by < code > and radius < code > rb < code > <END>
<BEG> determine the signed distance of the give point < code > pointx <SEG> pointy < code > to the line specify via it general plane equation < i > a x + b y + c = 0 < i > <END>
<BEG> determine the signed distance of the give point < code > pointx <SEG> pointy < code > to the line define by the two point < code > x0 <SEG> y0 < code > and < code > x1 <SEG> y1 < code > <END>
<BEG> test whether the ray with give origin < code > originx <SEG> originy < code > and direction < code > dirx <SEG> diry < code > intersect the line contain the give point < code > pointx <SEG> pointy < code > and have the normal < code > normalx <SEG> normaly < code > <SEG> and return the value of the parameter < i > t < i > in the ray equation < i > p t = origin + t dir < i > of the intersection point <END>
<BEG> determine whether the ray with give origin < code > originx <SEG> originy < code > and direction < code > dirx <SEG> diry < code > intersect the undirected line segment give by the two end point < code > ax <SEG> by < code > and < code > bx <SEG> by < code > <SEG> and return the value of the parameter < i > t < i > in the ray equation < i > p t = origin + t dir < i > of the intersection point <SEG> if any <END>
<BEG> test whether the axis-aligned rectangle with minimum corner < code > minx <SEG> miny < code > and maximum corner < code > maxx <SEG> maxy < code > intersect the circle with the give center < code > centerx <SEG> centery < code > and square radius < code > radiussquared < code > <END>
<BEG> determine the close point on the triangle with the give vertex < code > v0x <SEG> v0y < code > <SEG> < code > v1x <SEG> v1y < code > <SEG> < code > v2x <SEG> v2y < code > between that triangle and the give point < code > px <SEG> py < code > and store that point into the give < code > result < code > <END>
<BEG> test whether the give point < code > px <SEG> py < code > lie inside the triangle with the vertex < code > v0x <SEG> v0y < code > <SEG> < code > v1x <SEG> v1y < code > <SEG> < code > v2x <SEG> v2y < code > <END>
<BEG> test whether the circle with center < code > centerx <SEG> centery < code > and square radius < code > radiussquared < code > intersect the triangle with counter-clockwise vertex < code > v0x <SEG> v0y < code > <SEG> < code > v1x <SEG> v1y < code > <SEG> < code > v2x <SEG> v2y < code > <END>
<BEG> determine whether the polygon specify by the give sequence of < code > x <SEG> y < code > coordinate pair intersect with the ray with give origin < code > originx <SEG> originy <SEG> originz < code > and direction < code > dirx <SEG> diry <SEG> dirz < code > <SEG> and store the point of intersection into the give vector < code > p < code > <END>
<BEG> determine whether the polygon specify by the give sequence of < code > vertex < code > intersects with the ray with give origin < code > originx <SEG> originy <SEG> originz < code > and direction < code > dirx <SEG> diry <SEG> dirz < code > <SEG> and store the point of intersection into the give vector < code > p < code > <END>
<BEG> determine whether the two line <SEG> specify via two point lie on each line <SEG> intersect each other <SEG> and store the point of intersection into the give vector < code > p < code > <END>
<BEG> return a string representation of this line segment by format the vector component with the give { link numberformat } <END>
<BEG> set the stack pointer to zero and set the current bottom matrix to { link # identity identity } <END>
<BEG> increment the stack pointer by one and set the value of the new current matrix to the one directly below it <END>
<BEG> decrement the stack pointer by one <END>
<BEG> non-javadoc see org joml matrix3x2dc # m00 <END>
<BEG> set the value of the matrix element at column 0 and row 0 <END>
<BEG> set the element of this matrix to the one in < code > m < code > <END>
<BEG> set the left 2x2 submatrix of this { link matrix3x2d } to the give { link matrix2dc } and do n't change the other element <END>
<BEG> multiply this matrix by the supplied < code > right < code > matrix by assume a third row in both matrix of < code > 0 <SEG> 0 <SEG> 1 < code > and store the result in < code > d < code > <END>
<BEG> non-javadoc see org joml matrix3x2dc # mullocal org joml matrix3x2dc <SEG> org joml matrix3x2d <END>
<BEG> set the value in this matrix base on the supply double array <END>
<BEG> invert the < code > this < code > matrix by assume a third row in this matrix of < code > 0 <SEG> 0 <SEG> 1 < code > and store the result in < code > d < code > <END>
<BEG> set this matrix to be a simple translation matrix in a two-dimensional coordinate system <END>
<BEG> set only the translation component of this matrix < code > m20 <SEG> m21 < code > to the give value < code > x <SEG> y < code > <END>
<BEG> get the current value of < code > this < code > matrix and store them into < code > d < code > <END>
<BEG> store this matrix a an equivalent 4x4 matrix in column-major order into the supplied { link doublebuffer } at the current buffer { link doublebuffer # position position } <END>
<BEG> store this matrix into the supply double array in column-major order at the give offset <END>
<BEG> store this matrix a an equivalent 3x3 matrix in column-major order into the supplied float array at the give offset <END>
<BEG> set the value of this matrix by read 6 double value from the give { link doublebuffer } in column-major order <SEG> start at it current position <END>
<BEG> set the value of this matrix by read 6 double value from off-heap memory in column-major order <SEG> start at the give address <END>
<BEG> apply scale to this matrix by scale the unit ax by the give x and y and store the result in < code > d < code > <END>
<BEG> apply scale to < code > this < code > matrix by scale the base ax by the give sx and sy factor while use < code > ox <SEG> oy < code > a the scaling origin <SEG> and store the result in < code > d < code > <END>
<BEG> non-javadoc see org joml matrix3x2dc # scalearoundlocal double <SEG> double <SEG> double <SEG> double <SEG> double <SEG> double <SEG> org joml matrix3x2d <END>
<BEG> set this matrix to be a simple scale matrix <END>
<BEG> set this matrix to a rotation matrix which rotate the give radian <END>
<BEG> transform multiply the give vector by this matrix by assume a third row in this matrix of < code > 0 <SEG> 0 <SEG> 1 < code > and store the result in that vector <END>
<BEG> transform multiply the give vector by this matrix by assume a third row in this matrix of < code > 0 <SEG> 0 <SEG> 1 < code > and store the result in < code > d < code > <END>
<BEG> transform multiply the give vector < code > x <SEG> y <SEG> z < code > by this matrix and store the result in < code > d < code > <END>
<BEG> transform multiply the give 2d-vector <SEG> a if it be a 3d-vector with z=1 <SEG> by this matrix and store the result in < code > d < code > <END>
<BEG> transform multiply the give 2d-vector < code > x <SEG> y < code > <SEG> a if it be a 3d-vector with z=1 <SEG> by this matrix and store the result in < code > d < code > <END>
<BEG> apply a rotation transformation to this matrix by rotate the give amount of radian and store the result in < code > d < code > <END>
<BEG> pre-multiply a rotation to this matrix by rotate the give amount of radian and store the result in < code > d < code > <END>
<BEG> apply a rotation transformation to this matrix by rotate the give amount of radian about the specified rotation center < code > x <SEG> y < code > and store the result in < code > d < code > <END>
<BEG> apply a view transformation to this matrix that map the give < code > leave <SEG> bottom < code > and < code > right <SEG> top < code > corner to < code > -1 <SEG> -1 < code > and < code > 1 <SEG> 1 < code > respectively and store the result in < code > d < code > <END>
<BEG> set this matrix to define a view transformation that map the give < code > leave <SEG> bottom < code > and < code > right <SEG> top < code > corner to < code > -1 <SEG> -1 < code > and < code > 1 <SEG> 1 < code > respectively <END>
<BEG> obtain the position that get transform to the origin by < code > this < code > matrix <END>
<BEG> obtain the extent of the view transformation of < code > this < code > matrix and store it in < code > area < code > <END>
<BEG> non-javadoc see org joml matrix3x2dc # positivex org joml vector2d <END>
<BEG> compute the extent of the coordinate system before this transformation be apply and store the result corner coordinate in < code > corner < code > and the span vector in < code > xdir < code > and < code > ydir < code > <END>
<BEG> non-javadoc see org joml matrix3x2fc # testpoint double <SEG> double <END>
<BEG> non-javadoc see org joml matrix3x2fc # testcircle double <SEG> double <SEG> double <END>
<BEG> non-javadoc see org joml matrix3x2fc # testaar double <SEG> double <SEG> double <SEG> double <END>
<BEG> non-javadoc see org joml matrix3x2fc # scalearoundlocal float <SEG> float <SEG> float <SEG> float <SEG> float <SEG> float <SEG> org joml matrix3x2f <END>
<BEG> apply shear to this matrix by shear along the x axis use the y axis factor < code > yfactor < code > <SEG> and store the result in < code > d < code > <END>
<BEG> normalize this plane and store the result in < code > d < code > <END>
<BEG> compute the signed distance between this plane and the give point <END>
<BEG> return a string representation of this plane by format the component with the give { link numberformat } <END>
<BEG> test whether the give point < code > x <SEG> y < code > lie inside any polygon store in this { link polygonsintersection } object <END>
<BEG> return the first component of the vector part <END>
<BEG> normalize this quaternion <END>
<BEG> non-javadoc see org joml quaterniondc # add double <SEG> double <SEG> double <SEG> double <SEG> org joml quaterniond <END>
<BEG> add < code > q2 < code > to this quaternion <END>
<BEG> set the give { link quaterniond } to the value of < code > this < code > <END>
<BEG> set this quaternion to the new value <END>
<BEG> set this quaternion to a rotation equivalent to the supply axis and angle in radian <END>
<BEG> non-javadoc see org joml quaterniondc # transform double <SEG> double <SEG> double <SEG> org joml vector3d <END>
<BEG> set this quaternion from the supply euler angle in radian with rotation order xyz <END>
<BEG> interpolate between all of the quaternion give in < code > q < code > via spherical linear interpolation use the specified interpolation factor < code > weight < code > <SEG> and store the result in < code > d < code > <END>
<BEG> non-javadoc see org joml quaterniondc # scale double <SEG> org joml quaterniond <END>
<BEG> set this quaternion to represent scaling <SEG> which result in a transformed vector to change it length by the give < code > factor < code > <END>
<BEG> interpolate between all of the quaternion give in < code > q < code > via iterative non-spherical linear interpolation use the specified interpolation factor < code > weight < code > <SEG> and store the result in < code > d < code > <END>
<BEG> set < code > this < code > quaternion to a rotation that rotate the < code > fromdir < code > vector to point along < code > todir < code > <END>
<BEG> set this quaternion to a rotation of the give angle in radian about the supplied axis <END>
<BEG> set this quaternion to represent a rotation of the give radian about the x axis <END>
<BEG> conjugate < code > this < code > by the give quaternion < code > q < code > by compute < code > q this q^-1 < code > and store the result into < code > d < code > <END>
<BEG> compute the weighted average of all of the quaternion give in < code > q < code > use the specified interpolation factor < code > weight < code > <SEG> and store the result in < code > d < code > <END>
<BEG> return the dot of this quaternion and < code > otherquat < code > <END>
<BEG> non-javadoc see org joml quaternionfc # getasmatrix3f java nio bytebuffer <END>
<BEG> set this quaternion to be a copy of < code > q < code > <END>
<BEG> set this quaternion to a rotation equivalent to the give { link axisangle4f } <END>
<BEG> non-javadoc see org joml quaternionfc # mul float <SEG> float <SEG> float <SEG> float <SEG> org joml quaternionf <END>
<BEG> non-javadoc see org joml quaternionfc # rotatexyz float <SEG> float <SEG> float <SEG> org joml quaternionf <END>
<BEG> check if this and the give rectangle intersect <END>
<BEG> check if this rectangle contain the give point < code > x <SEG> y < code > <END>
<BEG> generate a gaussian convolution kernel with the give number of row and column <SEG> and store the factor in row-major order in < code > d < code > <END>
<BEG> create < code > numsamples < code > number of sample on a spiral with maximum radius < code > radius < code > around the center use < code > numrotations < code > number of rotation along the spiral <SEG> and call the give < code > callback < code > for each sample generate <END>
<BEG> generate < code > n n < code > random sample position in the unit square of < code > x <SEG> y = [ -1 +1 ] < code > <END>
<BEG> translate < code > this < code > by the vector < code > x <SEG> y <SEG> z < code > and store the result in < code > d < code > <END>
<BEG> converts from radian to degree <END>
<BEG> returns the angle of the vector from p0 to p1 <SEG> relative to the positive x-axis <END>
<BEG> computes the interior angle between two segment of a ring <END>
<BEG> returns whether an angle must turn clockwise or counterclockwise to overlap another angle <END>
<BEG> computes the normalized value of an angle <SEG> which be the equivalent angle in the range -pi <SEG> pi ] <END>
<BEG> computes the normalized positive value of an angle <SEG> which be the equivalent angle in the range [ 0 <SEG> 2 pi <END>
<BEG> adds the area define by a geometry to the centroid total <END>
<BEG> tests whether a point lie inside or on a ring <END>
<BEG> tests whether a point lie on the line segment define by a list of coordinate <END>
<BEG> computes the distance from a point to a sequence of line segment <END>
<BEG> computes the sign of the determinant of the 2x2 matrix with the give entry <END>
<BEG> returns a { link geometry } that represent the convex hull of the input geometry <END>
<BEG> an alternative to stack toarray <SEG> which be not present in early version of java <END>
<BEG> sets the fraction by which to densify each segment <END>
<BEG> finds a reasonable point at which to label a geometry <END>
<BEG> force compute intersection to be round to a give precision model param precisionmodel deprecate use < code > setprecisionmodel < code > instead <END>
<BEG> force compute intersection to be round to a give precision model <END>
<BEG> gets an endpoint of an input segment <END>
<BEG> public string tostring { string str = inputlines [ 0 ] [ 0 ] + - + inputlines [ 0 ] [ 1 ] + + inputlines [ 1 ] [ 0 ] + - + inputlines [ 1 ] [ 1 ] + : + gettopologysummary ; return str ; } <END>
<BEG> tests whether the input geometry intersect <END>
<BEG> test whether a point be a intersection point of two line segment <END>
<BEG> tests whether either intersection point be an interior point of the specify input segment <END>
<BEG> tests whether an intersection be proper <END>
<BEG> computes the intindex'th intersection point in the direction of a specify input line segment param segmentindex be 0 or 1 param intindex be 0 or 1 return the intindex'th intersection point in the direction of the specify input line segment <END>
<BEG> computes the index order of the intindex'th intersection point in the direction of a specify input line segment param segmentindex be 0 or 1 param intindex be 0 or 1 return the index of the intersection point along the input segment 0 or 1 <END>
<BEG> computes the edge distance of an intersection point along the specify input line segment <END>
<BEG> determines the { link location } of a point in an areal { link geometry } <END>
<BEG> gets the extremal point which define the computed minimum bounding circle <END>
<BEG> gets the centre point of the computed minimum bounding circle <END>
<BEG> gets the radius of the computed minimum bounding circle <END>
<BEG> gets the length of the minimum diameter of the input geometry return the length of the minimum diameter <END>
<BEG> gets the { link coordinate } form one end of the minimum diameter return a coordinate form one end of the minimum diameter <END>
<BEG> gets the segment form the base of the minimum diameter return the segment form the base of the minimum diameter <END>
<BEG> gets a { link linestring } which be a minimum diameter return a { link linestring } which be a minimum diameter <END>
<BEG> gets the minimum rectangular { link polygon } which enclose the input geometry <END>
<BEG> computes the orientation of a point q to the direct line segment p1-p2 <END>
<BEG> returns the index of the direction of the point < code > q < code > relative to a vector specify by < code > p1-p2 < code > <END>
<BEG> convenience method to test a point for intersection with a geometry param p the coordinate to test param geom the geometry to test return < code > true < code > if the point be in the interior or boundary of the geometry <END>
<BEG> computes the topological relationship { link location } of a single point to a geometry <END>
<BEG> determines the { link location } of a point in a ring <END>
<BEG> for each segment <SEG> check if it cross a horizontal ray run from the test point in the positive x direction <END>
<BEG> gets the { link location } of the point relative to the ring <SEG> polygon or multipolygon from which the processed segment be provide <END>
<BEG> tests whether the point lie in or on the ring <SEG> polygon or multipolygon from which the processed segment be provide <END>
<BEG> if the segment envelope be disjoint from the rectangle envelope <SEG> there be no intersection <END>
<BEG> converts text render in the give { link font } to a { link geometry } use a standard flatness factor <END>
<BEG> converts text render in the give { link font } to a { link geometry } param text the text to render param font the font to render with param flatness the flatness to use param geomfact the geometryfactory to use to create the result return a polygonal geometry represent the render text <END>
<BEG> todo implement this java awt shape method <END>
<BEG> wind_non_zero be more accurate than wind_even_odd <SEG> and can be comparable in speed <END>
<BEG> converts a flat path to a { link geometry } <END>
<BEG> converts a shape to a geometry <SEG> flatten it first <END>
<BEG> extracts the point of the path in a flat { link pathiterator } into a list of coordinate array <END>
<BEG> creates a { link shape } represent a { link geometry } <SEG> accord to the specify pointtransformation and pointshapefactory if relevant <END>
<BEG> densifies a geometry use a give distance tolerance <SEG> and respect the input geometry 's { link precisionmodel } <END>
<BEG> sets the distance tolerance for the densification <END>
<BEG> gets the densified geometry <END>
<BEG> tests whether an array of { link coordinate } s form a ring <SEG> by check length and closure <END>
<BEG> compares two { link coordinate } array in the forward direction of their coordinate <SEG> use lexicographic order <END>
<BEG> determines which orientation of the { link coordinate } array be overall increase <END>
<BEG> creates a deep copy of a give section of a source { link coordinate } array into a destination coordinate array <END>
<BEG> converts the give collection of coordinates into a coordinate array <END>
<BEG> returns whether # equal return true for any two consecutive coordinates in the give array <END>
<BEG> returns either the give coordinate array if it length be great than the give amount <SEG> or an empty coordinate array <END>
<BEG> if the coordinate array argument have repeat point <SEG> construct a new array contain no repeated point <END>
<BEG> collapses a coordinate array to remove all null element <END>
<BEG> returns the minimum coordinate <SEG> use the usual lexicographic comparison <END>
<BEG> shifts the position of the coordinate until < code > firstcoordinate < code > be first <END>
<BEG> returns the index of < code > coordinate < code > in < code > coordinate < code > <END>
<BEG> extracts a subsequence of the input { link coordinate } array from index < code > start < code > to < code > end < code > inclusive <END>
<BEG> adds a section of an array of coordinate to the list <END>
<BEG> adds an array of coordinate to the list <END>
<BEG> add an array of coordinate param coll the coordinate param allowrepeated if set to false <SEG> repeat coordinate be collapsed return true a by general collection contract <END>
<BEG> ensure this coordlist be a ring <SEG> by add the start point if necessary <END>
<BEG> returns the coordinates in this collection <END>
<BEG> compare two < code > double < code > s <SEG> allow for nan value <END>
<BEG> compares two { link coordinatesequence } s for relative order <END>
<BEG> compares the same coordinate of two { link coordinatesequence } s along the give number of dimension <END>
<BEG> swaps two coordinate in a sequence <END>
<BEG> copies a section of a { link coordinatesequence } to another { link coordinatesequence } <END>
<BEG> tests whether a { link coordinatesequence } form a valid { link linearring } <SEG> by check the sequence length and closure whether the first and last point be identical in 2d <END>
<BEG> returns a defaultcoordinatesequence base on the give array the array be not copy <END>
<BEG> see com vividsolutions jts geom coordinatesequencefactory # create com vividsolutions jts geom coordinatesequence <END>
<BEG> see com vividsolutions jts geom coordinatesequencefactory # create int <SEG> int <END>
<BEG> tests whether the envelope define by p1-p2 and the envelope define by q1-q2 intersect <END>
<BEG> initialize to a null < code > envelope < code > <END>
<BEG> makes this < code > envelope < code > a null envelope <SEG> that be <SEG> the envelope of the empty geometry <END>
<BEG> returns < code > true < code > if this < code > envelope < code > be a null envelope <END>
<BEG> returns the difference between the maximum and minimum x value <END>
<BEG> gets the minimum extent of this envelope across both dimension <END>
<BEG> expands this envelope by a give distance in all direction <END>
<BEG> enlarges this < code > envelope < code > so that it contain the give point <END>
<BEG> translates this envelope by give amount in the x and y direction <END>
<BEG> check if the region define by < code > other < code > overlap intersect the region of this < code > envelope < code > <END>
<BEG> check if the point < code > x <SEG> y < code > overlap lie inside the region of this < code > envelope < code > <END>
<BEG> tests if the < code > envelope other < code > lie wholely inside this < code > envelope < code > inclusive of the boundary <END>
<BEG> tests if the give point lie in or on the envelope <END>
<BEG> computes the distance between this and another < code > envelope < code > <END>
<BEG> returns true if the array contain any non-empty < code > geometry < code > s <END>
<BEG> returns true if the array contain any < code > null < code > element <END>
<BEG> returns the id of the spatial reference system use by the < code > geometry < code > <END>
<BEG> gets the factory which contain the context in which this geometry be create <END>
<BEG> returns the number of { link geometry } s in a { link geometrycollection } or 1 <SEG> if the geometry be not a collection <END>
<BEG> a simple scheme for application to add their own custom data to a geometry <END>
<BEG> tests whether this { link geometry } be simple <END>
<BEG> tests whether the distance from this < code > geometry < code > to another be less than or equal to a specify value <END>
<BEG> computes an interior point of this < code > geometry < code > <END>
<BEG> gets a geometry represent the envelope bound box of this < code > geometry < code > <END>
<BEG> gets an { link envelope } contain the minimum and maximum x and y value in this < code > geometry < code > <END>
<BEG> notifies this geometry that it coordinate have be change by an external party for example <SEG> via a { link coordinatefilter } <END>
<BEG> notifies this geometry that it coordinates have be change by an external party <END>
<BEG> tests whether this geometry be disjoint from the argument geometry <END>
<BEG> tests whether this geometry touch the argument geometry <END>
<BEG> tests whether this geometry be within the specified geometry <END>
<BEG> tests whether this geometry be topologically equal to the argument geometry <END>
<BEG> returns the well-known text representation of this < code > geometry < code > <END>
<BEG> computes a buffer area around this geometry have the give width <END>
<BEG> computes a buffer area around this geometry have the give width and with a specified accuracy of approximation for circular arc <END>
<BEG> computes a buffer area around this geometry have the give width and with a specified accuracy of approximation for circular arc <SEG> and use a specified end cap style <END>
<BEG> computes the small convex < code > polygon < code > that contain all the point in the < code > geometry < code > <END>
<BEG> tests whether two geometry be exactly equal in their normalized form <END>
<BEG> creates a new geometry which be a normalized copy of this geometry <END>
<BEG> returns whether this < code > geometry < code > be great than <SEG> equal to <SEG> or less than another < code > geometry < code > <SEG> use the give { link coordinatesequencecomparator } <END>
<BEG> throws an exception if < code > g < code > 's class be < code > geometrycollection < code > <END>
<BEG> tests whether this be an instance of a general { link geometrycollection } <SEG> rather than a homogeneous subclass <END>
<BEG> collects all coordinate of all subgeometries into an array <END>
<BEG> returns the area of this < code > geometrycollection < code > return the area of the polygon <END>
<BEG> tests whether any geometry element remain to be return <END>
<BEG> gets the next geometry in the iteration sequence <END>
<BEG> converts the < code > list < code > to an array <END>
<BEG> creates a point use the give coordinatesequence ; a null or empty coordinatesequence will create an empty point <END>
<BEG> creates a { link linearring } use the give { link coordinatesequence } <END>
<BEG> creates a { link multipoint } use the give { link point } s a null or empty array will create an empty multipoint <END>
<BEG> creates a { link multipoint } use the point in the give { link coordinatesequence } <END>
<BEG> constructs a < code > polygon < code > with the give exterior boundary and interior boundary <END>
<BEG> returns a { link coordinatearraysequence } base on the give array the array be not copy <END>
<BEG> see com vividsolutions jts geom coordinatesequencefactory # create int <SEG> int throw illegalargumentexception if the dimension be > 3 <END>
<BEG> see com vividsolutions jts geom coordinatesequence # getdimension <END>
<BEG> see com vividsolutions jts geom coordinatesequence # getcoordinate int <END>
<BEG> sets the first ordinate of a coordinate in this sequence <END>
<BEG> sets the type of packed coordinate sequence this factory build <SEG> acceptable value be { linkplain packedcoordinatesequencefactory # float } or { linkplain packedcoordinatesequencefactory # double } <END>
<BEG> see com vividsolutions jts geom coordinatesequencefactory # create com vividsolutions jts geom coordinate [ ] <END>
<BEG> see com vividsolutions jts geom coordinatesequencefactory # create double [ ] <SEG> int <END>
<BEG> adds one matrix to another <END>
<BEG> tests if the dimension value satisfy the dimension symbol <END>
<BEG> tests if each of the actual dimension symbol in a matrix string satisfy the corresponding require dimension symbol in a pattern string <END>
<BEG> changes the value of one of this < code > intersectionmatrix < code > s element <END>
<BEG> changes the element of this < code > intersectionmatrix < code > to the dimension symbol in < code > dimensionsymbols < code > <END>
<BEG> changes the specified element to < code > minimumdimensionvalue < code > if the element be less <END>
<BEG> if row > = 0 and column > = 0 <SEG> change the specified element to < code > minimumdimensionvalue < code > if the element be less <END>
<BEG> for each element in this < code > intersectionmatrix < code > <SEG> change the element to the corresponding minimum dimension symbol if the element be less <END>
<BEG> changes the element of this < code > intersectionmatrix < code > to < code > dimensionvalue < code > <END>
<BEG> returns the value of one of this matrix entry <END>
<BEG> returns < code > true < code > if this < code > intersectionmatrix < code > be ff ff <END>
<BEG> returns < code > true < code > if < code > isdisjoint < code > return false <END>
<BEG> returns < code > true < code > if this < code > intersectionmatrix < code > be ft <SEG> f t or f t <END>
<BEG> tests whether this < code > intersectionmatrix < code > be t f f <END>
<BEG> returns < code > true < code > if this < code > intersectionmatrix < code > be < code > t ff < code > or < code > t ff < code > or < code > t ff < code > or < code > t ff < code > return < code > true < code > if the first < code > geometry < code > cover the second <END>
<BEG> returns < code > true < code > if this < code > intersectionmatrix < code > be < code > t f f < code > or < code > tf f < code > or < code > ft f < code > or < code > f tf < code > return < code > true < code > if the first < code > geometry < code > be cover by the second <END>
<BEG> tests whether the argument dimension be equal and this < code > intersectionmatrix < code > match the pattern < tt > t f fff < tt > <END>
<BEG> returns < code > true < code > if this < code > intersectionmatrix < code > be < ul > < li > t t t for two point or two surface < li > 1 t t for two curve < ul > <END>
<BEG> returns whether the element of this < code > intersectionmatrix < code > satisfy the required dimension symbol <END>
<BEG> transposes this intersectionmatrix <END>
<BEG> tests whether this ring be close <END>
<BEG> computes the angle that the vector define by this segment make with the x-axis <END>
<BEG> computes the midpoint of a segment return the midpoint of the segment <END>
<BEG> computes the distance between this line segment and another segment <END>
<BEG> computes the distance between this line segment and a give point <END>
<BEG> computes the perpendicular distance between the infinite line define by this line segment and a point <END>
<BEG> computes the projection factor for the projection of the point p onto this linesegment <END>
<BEG> project a line segment onto this line segment and return the resulting line segment <END>
<BEG> computes an intersection point between two line segment <SEG> if there be one <END>
<BEG> creates a linestring with the same coordinate a this segment param geomfactory the geometery factory to use return a linestring with the same geometry a this segment <END>
<BEG> returns true if the give point be a vertex of this < code > linestring < code > <END>
<BEG> normalizes a linestring <END>
<BEG> creates a { link multilinestring } in the reverse order to this object <END>
<BEG> sets the value of this object to the null value <END>
<BEG> determines which of two { link precisionmodel } s be the most precise allow the great number of significant digit <END>
<BEG> tests whether the precision model support float point return < code > true < code > if the precision model support float point <END>
<BEG> gets the type of this precision model return the type of this precision model see type <END>
<BEG> returns the x-offset use to obtain a precise coordinate <END>
<BEG> sets < code > external < code > to the external representation of < code > internal < code > <END>
<BEG> do point-in-poly test first <SEG> since they be cheap and may result in a quick negative result <END>
<BEG> gets the list of representative point for this geometry <END>
<BEG> tests whether any representative of the target geometry intersect the test geometry <END>
<BEG> determines whether a geometry g interact with this geometry by test the geometry envelope <END>
<BEG> determines whether the envelope of this geometry cover the geometry g param g a geometry return true if g be contain in this envelope <END>
<BEG> if any segment intersect <SEG> obviously intersect = true <END>
<BEG> this could be optimize by use the segment index on the lineal target <END>
<BEG> tests whether this point intersect a { link geometry } <END>
<BEG> computes the < tt > containsproperly < tt > predicate between a { link preparedpolygon } and a { link geometry } <END>
<BEG> tests whether this preparedpolygon < tt > cover < tt > a give geometry <END>
<BEG> tests whether all component of the test geometry be contain in the target geometry <END>
<BEG> tests whether all component of the test geometry be contain in the interior of the target geometry <END>
<BEG> tests whether any component of the test geometry intersect the area of the target geometry <END>
<BEG> tests whether any component of the target geometry intersect the test geometry which must be an areal geometry param geom the test geometry param reppts the representative point of the target geometry return true if any component intersect the areal test geometry <END>
<BEG> computes the circumcentre of a triangle <END>
<BEG> computes the 2d area of a triangle <END>
<BEG> uses the formula 1 2 | u x v | where u <SEG> v be the side vector of the triangle x be the vector cross-product <END>
<BEG> creates a transformation for a reflection about the line x0 <SEG> y0 - x1 <SEG> y1 <END>
<BEG> creates a transformation for a reflection about the line 0<SEG>0 - x <SEG> y <END>
<BEG> creates a transformation for a rotation by an angle < i > theta < i > <SEG> specify by the sine and cosine of the angle <END>
<BEG> creates a transformation for a rotation about the point x <SEG> y by an angle < i > theta < i > <SEG> specify by the sine and cosine of the angle <END>
<BEG> creates a transformation for a scaling relative to the origin <END>
<BEG> creates a transformation for a scaling relative to the point x <SEG> y <END>
<BEG> sets this transformation to be a copy of the give one param trans a transformation to copy return this transformation <SEG> with an updated matrix <END>
<BEG> computes the determinant of the transformation matrix <END>
<BEG> explicitly compute the math for a reflection <END>
<BEG> sets this transformation to be a reflection about the line define by a line < tt > x0 <SEG> y0 - x1 <SEG> y1 < tt > <END>
<BEG> sets this transformation to be a rotation around a give point x <SEG> y by specify the sin and co of the rotation angle directly <END>
<BEG> updates the value of this transformation to that of a rotation around a give point compose with the current value <END>
<BEG> updates this transformation to be the composition of this transformation with the give { link affinetransformation } <END>
<BEG> updates this transformation to be the composition of a give { link affinetransformation } with this transformation <END>
<BEG> applies this transformation to the < tt > src < tt > coordinate and place the result in the < tt > d < tt > coordinate which may be the same a the source <END>
<BEG> cretaes a new link geometry which be the result of this transformation apply to the input geometry <END>
<BEG> transforms the i'th coordinate in the input sequence param seq a < code > coordinatesequence < code > param i the index of the coordinate to transform <END>
<BEG> reports that this filter should continue to be execute until all coordinate have be transform <END>
<BEG> tests if an object be an < tt > affinetransformation < tt > and have the same matrix a this transformation <END>
<BEG> extracts the linear component from a single geometry <END>
<BEG> combines two geometry <END>
<BEG> extracts the geometryfactory use by the geometry in a collection param geoms return a geometryfactory <END>
<BEG> extracts the component of type < tt > clz < tt > from a { link geometry } and add them to the provide { link list } <END>
<BEG> maps the member of a { link geometry } which may be atomic or composite into another < tt > geometry < tt > of most specific type <END>
<BEG> convenience method which provide statndard way of copy { link coordinatesequence } s param seq the sequence to copy return a deep copy of the sequence <END>
<BEG> transforms a linearring <END>
<BEG> extracts the linear component from a single { link geometry } and add them to the provide { link collection } <END>
<BEG> indicates that linearring component should be convert to pure linestrings <END>
<BEG> extracts the { link linestring } element from a single { link geometry } and add them to the provide { link list } <END>
<BEG> sets the number of arm in the star param numarms the number of arm to generate <END>
<BEG> generates the geometry for the sine star return the geometry represent the sine star <END>
<BEG> a depth object be null have never be initialize if all depth be null <END>
<BEG> normalize the depth for each geometry <SEG> if they be non-null <END>
<BEG> computes the factor for the change in depth when move from one location to another <END>
<BEG> setvisitededge mark both directededges attach to a give edge <END>
<BEG> this be an interior area edge if < ul > < li > it label be an area label for both geometries < li > and for each geometry both side be in the interior <END>
<BEG> implements the total order relation : < p > a have a great angle with the positive x-axis than b < p > using the obvious algorithm of simply compute the angle be not robust <SEG> since the angle calculation be obviously susceptible to roundoff <END>
<BEG> return the coordinate for the node this star be base at <END>
<BEG> adds an intersection into the list <SEG> if it be n't already there <END>
<BEG> if the edge e be already in the list <SEG> return it index <END>
<BEG> compute a linearring from the point list previously collect <END>
<BEG> merge the rhs label from a directededge into the label for this edgering <END>
<BEG> this method will cause the ring to be compute <END>
<BEG> add an edge compute externally <END>
<BEG> compute self-nodes <SEG> take advantage of the geometry type to minimize the number of intersection test <END>
<BEG> update the im with the contribution for this component <END>
<BEG> projectionevents be order first by their x-value <SEG> and then by their eventtype <END>
<BEG> converts one geometrylocation to a line location <END>
<BEG> this method expect that a node have a coordinate value <END>
<BEG> adds a node for the start point of this edgeend if one do not already exist in this map <END>
<BEG> for node in the collection <SEG> link the directededges at the node that be in the result <END>
<BEG> link the directededges at the node of the graph <END>
<BEG> returns the edge whose first two coordinate be p0 and p1 return the edge <SEG> if find < code > null < code > if the edge be not find <END>
<BEG> returns the quadrant of a directed line segment specify a x and y displacement <SEG> which can not both be 0 <END>
<BEG> returns the quadrant of a directed line segment from p0 to p1 <END>
<BEG> returns true if the quadrant be 1 and 3 <SEG> or 2 and 4 <END>
<BEG> returns whether the give quadrant lie within the give halfplane specify by it right-hand quadrant <END>
<BEG> returns true if the give quadrant be 0 or 1 <END>
<BEG> return true if all location be null <END>
<BEG> ensure that the interval for the inserted item have non-zero extent <END>
<BEG> removes a single item from the tree <END>
<BEG> the item that be match be all item in interval which overlap the query interval <END>
<BEG> return a square envelope contain the argument envelope <SEG> whose extent be a power of two and which be base at a power of 2 <END>
<BEG> the root node match all search <END>
<BEG> return a list of the { link monotonechain } s for the give list of coordinate <END>
<BEG> this function can be overridden if the original chain be need param start1 the index of the start of the overlap segment from mc1 param start2 the index of the start of the overlap segment from mc2 <END>
<BEG> this be a convenience function which can be override to obtain the actual line segment which overlap param seg1 param seg2 <END>
<BEG> this method be overridden to process a segment in the context of the parent chain <END>
<BEG> adds an item to the index which be associate with the give interval param min the low bound of the item interval param max the upper bound of the item interval param item the item to insert throw illegalstateexception if the index have already be query <END>
<BEG> search for interval in the index which intersect the give close interval and apply the visitor to them <END>
<BEG> gets the user data object associate with this node <END>
<BEG> returns the left node of the tree return leave node <END>
<BEG> tests whether more than one point with this value have be insert up to the tolerance return true if more than one point have be insert with this value <END>
<BEG> tests whether the index contain any item <END>
<BEG> performs a range search of the point in the index <END>
<BEG> determines the exponent for the number <END>
<BEG> a representation of the double bit format for easy readability <END>
<BEG> computes whether the interval [ min <SEG> max ] be effectively zero width <END>
<BEG> return a list of all item in the quadtree <END>
<BEG> gets the bound of this node return the object represent bound in this index <END>
<BEG> adds either an abstractnode <SEG> or if this be a leaf node <SEG> a data object wrap in an itemboundable <END>
<BEG> creates parent node <SEG> grandparent node <SEG> and so forth up to the root node <SEG> for the data that have be insert into the tree <END>
<BEG> sorts the childboundables then divide them into group of size m <SEG> where m be the node capacity <END>
<BEG> also build the tree <SEG> if necessary <END>
<BEG> gets a tree structure a a nested list correspond to the structure of the item and node in this tree <END>
<BEG> gets one of the member { link boundable } s in the pair index by [ 0 <SEG> 1 ] <END>
<BEG> compares two pair base on their minimum distance <END>
<BEG> tests if both element of the pair be leaf node return true if both pair element be leaf node <END>
<BEG> for a pair which be not a leaf i e <END>
<BEG> computes the distance between two { link geometry } item <SEG> use the { link geometry # distance geometry } method <END>
<BEG> sets this stream to read from the give buffer param buffer the byte to read <END>
<BEG> allows a single byteorderdatainstream to be reuse on multiple instreams <END>
<BEG> param uri not currently use <SEG> include for future work param localname used to look up an appropriate parse strategy return the parsestrategy which should be employ see parsestrategy <END>
<BEG> tests whether this handler have complete parse a geometry <END>
<BEG> see org xml sax helper defaulthandler # setdocumentlocator org xml sax locator <END>
<BEG> reads a gml2 geometry from a { link reader } into a single { link geometry } if a collection of geometries be find <SEG> a { link geometrycollection } be returned <END>
<BEG> sets the value of the < tt > srsname < tt > attribute to be write into the root geometry tag <END>
<BEG> specifies a list of custom element which be write after the opening tag of the root element <END>
<BEG> sets the start column index for pretty printing param indent <END>
<BEG> sets the number of coordinate print per line <END>
<BEG> writes a { link geometry } in gml2 format to a string <END>
<BEG> reads a well-known text representation of a { link geometry } from a { link string } <END>
<BEG> generates the wkt for a < tt > point < tt > specify by a { link coordinate } <END>
<BEG> generates the wkt for a < tt > linestring < tt > specify by two { link coordinate } s param p0 the first coordinate param p1 the second coordinate return the wkt <END>
<BEG> returns a < code > string < code > of repeated character <END>
<BEG> sets the maximum number of coordinate per line write in formatted output <END>
<BEG> sets the tab size to use for indent <END>
<BEG> gets the full version number <SEG> suitable for display <END>
<BEG> computes the { link coordinate } for the point on the line at the give index <END>
<BEG> computes the { link coordinate } for the point on the line at the give index <SEG> offset by the give distance <END>
<BEG> computes the index for the close point on the line to the give point <END>
<BEG> returns the index of the start of the line return the start index <END>
<BEG> tests whether an index be in the valid index range for the line <END>
<BEG> computes a valid index for this line by clamp the give index to the valid range of index value return a valid index value <END>
<BEG> finds the near index along the linear { link geometry } to a give { link coordinate } after the specified minimum index <END>
<BEG> computes the { link linearlocation } for a give length along a linear { link geometry } <END>
<BEG> computes the { link linearlocation } for a give length along a linear { link geometry } <SEG> with control over how the location be resolve at component endpoint <END>
<BEG> computes the length for a give { link linearlocation } on a linear { link geometry } <END>
<BEG> compute the { link linearlocation } correspond to a length <END>
<BEG> terminate the current linestring <END>
<BEG> tests whether there be any vertex leave to iterator over <END>
<BEG> moves the iterator ahead to the next vertex and possibly linear component <END>
<BEG> checks whether the iterator cursor be point to the endpoint of a component { link linestring } <END>
<BEG> gets the second { link coordinate } of the current segment <END>
<BEG> ensures the index be valid for a give linear { link geometry } <END>
<BEG> tests whether this location refer to a vertex return true if the location be a vertex <END>
<BEG> gets the { link coordinate } along the give linear { link geometry } which be reference by this location <END>
<BEG> gets a { link linesegment } represent the segment of the give linear { link geometry } which contain this location <END>
<BEG> tests whether this location refer to a valid location on the give linear { link geometry } <END>
<BEG> tests whether two location be on the same segment in the parent { link geometry } <END>
<BEG> tests whether this location be an endpoint of the linear component it refer to <END>
<BEG> md - this algorithm have be extract into a class because it be intend to validate that the subline truly be a subline <SEG> and also to use the internal vertex information to unambiguously locate the subline <END>
<BEG> find the near { link linearlocation } along the linear { link geometry } to a give { link coordinate } after the specified minimum { link linearlocation } <END>
<BEG> computes the base-10 logarithm of a < tt > double < tt > value <END>
<BEG> computes an index which wrap around a give maximum value <END>
<BEG> computes the average of two number <END>
<BEG> computes the axis plane that this plane lie close to <END>
<BEG> computes the dot product of the 3d vector ab and cd <END>
<BEG> creates a new vector with give x and y component <END>
<BEG> computes the dot-product of two vector param v a vector return the dot product of the vector <END>
<BEG> gets a string representation of this vector return a string represent this vector <END>
<BEG> gets the octant of the segment start at vertex < code > index < code > <END>
<BEG> checks for an intersection and report if one be find <END>
<BEG> returns an error message indicate the segment contain the intersection <END>
<BEG> gets the segment set intersector use by this class <END>
<BEG> sets whether only end segment should be test for interior intersection <END>
<BEG> gets the computed location of the intersection <END>
<BEG> gets the endpoint of the intersecting segment <END>
<BEG> gets the { link segmentstring } s which result from split this string at node point <END>
<BEG> adds the noded { link segmentstring } s which result from split this string at node point <END>
<BEG> adds edgeintersections for one or both intersection find for a segment of an edge to the edge intersection list <END>
<BEG> add an segmentnode for intersection intindex <END>
<BEG> adds an intersection node for a give point and segment to this segment string <END>
<BEG> compares two { link orientedcoordinatearray } s for their relative order return -1 this one be small ; 0 the two object be equal ; 1 this one be great <END>
<BEG> tests whether a proper intersection be find <END>
<BEG> if find all type <SEG> we can stop when both possible type have be find <END>
<BEG> gets the { link coordinate } give the location of this node <END>
<BEG> dissolve all { link segmentstring } s in the input { link collection } param segstrings <END>
<BEG> extracts all linear component from a give { link geometry } to { link segmentstring } s the segmentstring data item be set to be the source geometry <END>
<BEG> sets the segmentintersector to use with this noder <END>
<BEG> sets whether nod validity be check after nod be perform <END>
<BEG> returns a safe envelope that be guarantee to contain the hot pixel <END>
<BEG> tests whether the line segment p0-p1 intersects this hot pixel <END>
<BEG> snaps segment to all vertex <END>
<BEG> param inputsegmentstrings a collection of nodedsegmentstrings <END>
<BEG> computes node introduce a a result of snap segment to vertex of other segment param edge the list of segment string to snap together <END>
<BEG> simplify the input coordinate list <END>
<BEG> comutes the buffer for a geometry for a give buffer distance and accuracy of approximation <END>
<BEG> returns the buffer compute for a geometry for a give buffer distance <END>
<BEG> gets the number of quadrant segment which will be use return the number of quadrant segment <END>
<BEG> sets the number of line segment use to approximate an angle fillet <END>
<BEG> computes the maximum distance error due to a give level of approximation to a true arc <END>
<BEG> specifies the end cap style of the generate buffer <END>
<BEG> sets the join style for outside reflex corner between line segment <END>
<BEG> gets the mitre ratio limit <END>
<BEG> sets the limit on the mitre ratio use for very sharp corner <END>
<BEG> sets whether the computed buffer should be single-sided <END>
<BEG> tests whether the buffer be to be generate on a single side only <END>
<BEG> creates the subgraph consisting of all edge reachable from this node <END>
<BEG> find all edge whose depth indicate that they be in the result area s <END>
<BEG> gets the buffer parameter be use to generate the curve <END>
<BEG> this method handle single point as well a linestrings <END>
<BEG> this method handle the degenerate case of single point and line <SEG> as well a ring <END>
<BEG> computes the set of raw offset curve for the buffer <END>
<BEG> check that point be a ring - add the startpoint again if they be not if ptlist size > 1 { coordinate start = coordinate ptlist get 0 ; coordinate end = coordinate ptlist get ptlist size - 1 ; if ! <END>
<BEG> check all forward directededges only <END>
<BEG> gets a geometry which indicate the location and nature of a validation failure <END>
<BEG> compute the distance between the near point of two geometry <END>
<BEG> test whether two geometry lie within a give distance of each other <END>
<BEG> compute the the near point of two geometry <END>
<BEG> computes the distance between two geometry use the indexed approach <END>
<BEG> computes the distance from the base geometry to the give geometry <END>
<BEG> creates a wrapper projecting to the xz plane <END>
<BEG> reports whether a { link multilinestring } geometry be simple <END>
<BEG> converts this edgestring into a linestring <END>
<BEG> returns the linestring specify the vertex of this edge <END>
<BEG> adds a geometry to be process <END>
<BEG> gets the { link linestring } s create by the merging process <END>
<BEG> tests whether a { link geometry } be sequenced correctly <END>
<BEG> adds a { link collection } of { link geometry } s to be sequence <END>
<BEG> adds a { link geometry } to be sequence <END>
<BEG> tests whether the arrangement of linestrings have a valid sequence <END>
<BEG> returns the { link linestring } or { link multilinestring } build by the sequencing process <SEG> if one exists <END>
<BEG> tests whether the result geometry be consistent throw topologyexception if inconsistent topology be find <END>
<BEG> return a list of the linestrings in the result of the specified overlay operation <END>
<BEG> checks the current set of shell with their associate hole to see if any of them contain the point <END>
<BEG> estimates the snap tolerance for a geometry <SEG> take into account it precision model <END>
<BEG> snaps two geometry together with a give tolerance <END>
<BEG> snaps the vertex in the component { link linestring } s of the source geometry to the vertex of the give snap geometry <END>
<BEG> set the side on which to generate offset point <END>
<BEG> gets the computed offset point <END>
<BEG> sets the ring of directed edge that this direct edge be a member of <END>
<BEG> deletes all edge at a node <END>
<BEG> finds and remove all cut edge from the graph <END>
<BEG> marks all edge from the graph which be dangles <END>
<BEG> adds a collection of geometry to the edge to be polygonized <END>
<BEG> add a { link geometry } to the edge to be polygonized <END>
<BEG> gets the list of polygon form by the polygonization <END>
<BEG> gets the list of dangle line find during polygonization <END>
<BEG> gets the list of line form invalid ring find during polygonization <END>
<BEG> creates stub edge for all the intersection in this edge if any and insert them into the graph <END>
<BEG> insert a edgeend in order in the list <END>
<BEG> update the im with the contribution for the edgestubs around the node <END>
<BEG> insert node for all intersection on the edge of a geometry <END>
<BEG> copy all node from an arg geometry into this graph <END>
<BEG> computes the { link intersectionmatrix } for the spatial relationship between two { link geometry } s <SEG> use the default ogc sfs boundary node rule param a a geometry to test param b a geometry to test return the intersectonmatrix for the spatial relationship between the geometry <END>
<BEG> computes the { link intersectionmatrix } for the spatial relationship between two { link geometry } s use a specified boundary node rule <END>
<BEG> gets the intersectionmatrix for the spatial relationship between the input geometry <END>
<BEG> computes the union of the input geometry <END>
<BEG> to fully check validity <SEG> it be necessary to compute all intersection <SEG> include self-intersections within a single edge <END>
<BEG> checks for two duplicate ring in an area <END>
<BEG> checks whether a coordinate be valid for process <END>
<BEG> computes the validity of the geometry <SEG> and return < tt > true < tt > if it be valid <END>
<BEG> computes the validity of the geometry <SEG> and if not valid return the validation error for the geometry <SEG> or null if the geometry be valid <END>
<BEG> computes the bit pattern for the sign and exponent of a double-precision number <END>
<BEG> this compute the number of common most-significant bit in the mantissa of two double-precision number <END>
<BEG> zeroes the low n bit of a bitstring <END>
<BEG> extracts the i'th bit of a bitstring <END>
<BEG> computes the set-theoretic intersection of two { link geometry } s <SEG> use enhance precision <END>
<BEG> computes the set-theoretic symmetric difference of two geometry <SEG> use enhance precision <END>
<BEG> computes the buffer a geometry <SEG> use enhance precision <END>
<BEG> add a geometry to the set of geometry whose common bit be be compute <END>
<BEG> rounds the coordinates in the sequence to match the precisionmodel <END>
<BEG> convenience method for do precision reduction on a single geometry <SEG> with collapse remove and keep the geometry precision model the same <SEG> and preserve polygonal topology <END>
<BEG> convenience method for do pointwise precision reduction on a single geometry <SEG> with collapse remove and keep the geometry precision model the same <SEG> but not preserve valid polygonal topology <END>
<BEG> sets whether the reduction will result in collapsed component be remove completely <SEG> or simply be collapse to an invalid geometry of the same type <END>
<BEG> sets whether the { link precisionmodel } of the new reduced geometry will be change to be the { link precisionmodel } supply to specify the precision reduction <END>
<BEG> sets whether the precision reduction will be do in pointwise fashion only <END>
<BEG> gets a linestring contain two point which be at the minimum clearance distance for the give geometry <END>
<BEG> convenience method for do precision reduction on a single geometry <SEG> with collapse remove and keep the geometry precision model the same <END>
<BEG> sets a polygonal mask <END>
<BEG> sets the fraction of the grid cell side which will be treat a a gutter <SEG> in which no point will be create <END>
<BEG> gets the { link multipoint } contain the generated point return a multipoint <END>
<BEG> controls whether simplify polygon will be fix to have valid topology <END>
<BEG> simplifies the give { link taggedlinestring } use the distance tolerance specify <END>
<BEG> sets the site point or vertex which will be triangulate <END>
<BEG> sets the linear constraint to be conform to <END>
<BEG> sets the snapping tolerance which will be use to improve the robustness of the triangulation computation <END>
<BEG> gets the quadedgesubdivision which model the computed triangulation <END>
<BEG> gets the edge of the computed triangulation a a { link multilinestring } <END>
<BEG> gets the face of the computed triangulation a a { link geometrycollection } of { link polygon } <END>
<BEG> sets the constraint to be conform to by the computed triangulation <END>
<BEG> sets the { link constraintsplitpointfinder } to be use during constraint enforcement <END>
<BEG> gets the < tt > constraintvertexfactory < tt > use to create new constraint vertex at split point <END>
<BEG> sets a custom { link constraintvertexfactory } to be use to allow vertex carry extra information to be create <END>
<BEG> gets the { link quadedgesubdivision } which represent the triangulation <END>
<BEG> gets the { link kdtree } which contain the vertex of the triangulation <END>
<BEG> gets the { link segment } s which represent the constraint <END>
<BEG> computes the delaunay triangulation of the initial site <END>
<BEG> enforces the supplied constraint into the triangulation <END>
<BEG> gets the approximate location of this error <END>
<BEG> sets whether this vertex lie on a constraint <END>
<BEG> sets the external constraint information param constraint an object which carry information about the constraint this vertex lie on <END>
<BEG> gets the external constraint object return the external constraint object <END>
<BEG> merges the constraint data in the vertex < tt > other < tt > into this vertex <END>
<BEG> inserts all site in a collection <END>
<BEG> this code be base on guibas and stolfi 1985 <SEG> with minor modification and a bug fix from dani lischinski graphic gems 1993 <END>
<BEG> called to initialize the traversal queue with a give set of { link quadedgetriangle } s param tris a collection of quadedgetriangle <END>
<BEG> locates an edge e <SEG> such that either v be on e <SEG> or e be an edge of a triangle contain v the search start from the last located edge amd proceeds on the general direction of v <END>
<BEG> splices two edge together or apart <END>
<BEG> turns an edge counterclockwise inside it enclose quadrilateral <END>
<BEG> gets the primary edge of this quadedge and it < tt > sym < tt > <END>
<BEG> sets the external data value for this edge <END>
<BEG> marks this quadedge a be delete <END>
<BEG> sets the connect edge param next edge <END>
<BEG> gets the edge from the destination to the origin of this edge <END>
<BEG> gets the next ccw edge around the origin of this edge <END>
<BEG> gets the next cw edge around from the origin of this edge <END>
<BEG> gets the ccw edge around the left face follow this edge <END>
<BEG> sets the vertex for this edge 's origin param o the origin vertex <END>
<BEG> gets the length of the geometry of this quadedge <END>
<BEG> tests if this quadedge and another have the same line segment geometry <SEG> regardless of orientation <END>
<BEG> creates a { link linesegment } represent the geometry of this edge <END>
<BEG> converts this edge to a wkt two-point < tt > linestring < tt > indicate the geometry of this edge <END>
<BEG> gets the edge for the triangle to the left of the give { link quadedge } <END>
<BEG> gets the envelope of the subdivision include the frame <END>
<BEG> sets the { link quadedgelocator } to use for locate contain triangle in this subdivision <END>
<BEG> inserts a new site into the subdivision <SEG> connect it to the vertex of the contain triangle or quadrilateral <SEG> if the split point fall on an exist edge <END>
<BEG> tests whether a quadedge be an edge on the border of the frame facet and the internal facet <END>
<BEG> tests whether a vertex be a vertex of the outer triangle <END>
<BEG> tests whether a { link coordinate } lie on a { link quadedge } <SEG> up to a tolerance determine by the subdivision tolerance <END>
<BEG> gets the unique { link vertex } e in the subdivision <SEG> include the frame vertex if desire <END>
<BEG> gets a collection of { link quadedge } s whose origin vertex be a unique set which include all vertex in the subdivision <END>
<BEG> gets all primary quadedges in the subdivision <END>
<BEG> gets the coordinate for each triangle in the subdivision a an array <END>
<BEG> gets the geometry for the edge in the subdivision a a { link multilinestring } contain 2-point line <END>
<BEG> gets the geometry for the triangle in a triangulated subdivision a a { link geometrycollection } of triangular { link polygon } s param geomfact the geometryfactory to use return a geometrycollection of triangular polygons <END>
<BEG> gets the cell in the voronoi diagram for this triangulation <END>
<BEG> compute circumcentres of triangle a vertex for dual edge <END>
<BEG> creates { link quadedgetriangle } s for all facet of a { link quadedgesubdivision } represent a triangulation <END>
<BEG> tests whether the point pt be contain in the triangle define by 3 { link vertex } e <END>
<BEG> finds the next index around the triangle <END>
<BEG> tests whether this triangle be adjacent to the outside of the subdivision <END>
<BEG> gets the triangle which be adjacent include to a give vertex of this triangle <END>
<BEG> gets all edge which be incident on the origin of the give edge <END>
<BEG> gets the face of the computed diagram a a { link geometrycollection } of { link polygon } s <SEG> clip a specify <END>
<BEG> throws an < code > assertionfailedexception < code > with the give message if the give assertion be not true <END>
<BEG> always throw an < code > assertionfailedexception < code > with the give message <END>
<BEG> executes a function on each item in a { link collection } and return the result in a new { link list } param coll the collection to process param func the function to execute return a list of the transformed object <END>
<BEG> executes a function on each item in a collection but do not accumulate the result param coll the collection to process param func the function to execute <END>
<BEG> executes a { link function } on each item in a collection and collect all the entry for which the result of the function be equal to { link boolean } < tt > true < tt > <END>
<BEG> prints the status of debug to < tt > system out < tt > param args the cmd-line argument no argument be require <END>
<BEG> public static void println string str { if ! <END>
<BEG> adds an object to be watch <END>
<BEG> sets the rotation angle to use for the shape <END>
<BEG> creates a supercircular { link polygon } of a give positive power <END>
<BEG> creates an elliptical arc polygon <END>
<BEG> test if the priority queue be logically empty <END>
<BEG> make the priority queue logically empty <END>
<BEG> remove the small item from the priority queue <END>
<BEG> returns an extendedcoordinatesequence base on the give array -- the array be use directly if it be an instance of extendedcoordinate [ ] ; otherwise it be copy <END>
<BEG> inserts a collection of geometrys into the index <END>
<BEG> finds all { link preparedgeometry } s which intersect a give { link geometry } param g the geometry to query by return a list of intersect preparedgeometrys <END>
<BEG> evaluates the series of chebyshev polynomial ti at argument x 2 <END>
<BEG> returns < tt > log k ! < tt > <END>
<BEG> returns a view of a row <END>
<BEG> provides a view of the diagonal of a matrix <END>
<BEG> collects the result of a function apply to each element of a matrix and then aggregate <END>
<BEG> ensures that a give array can hold up to < tt > mincapacity < tt > element <END>
<BEG> ensures that the specified array can not hold more than < tt > maxcapacity < tt > element <END>
<BEG> { link java util arrays # copyof } compatibility with java 1 5 <END>
<BEG> performs a binary search for the specified element in the specified ascending sort array <END>
<BEG> performs a binary search for the specified element in the specified ascending sort array use the { code comparator } to compare element <END>
<BEG> subclasses must override to return an appropriately sparse or dense result param row the row cardinality param columns the column cardinality return a matrix <END>
<BEG> return true iff this implementation should be consider dense -- that it explicitly represent every value <END>
<BEG> return true iff this implementation should be consider to be iterable in index order in an efficient way <END>
<BEG> iterates over all element < p > note : implementations may choose to reuse the element return for performance reason <SEG> so if you need a copy of it <SEG> you should call { link # getelement int } for the give index return an { link java util iterator } over all element <END>
<BEG> return the value at the give index <SEG> without check bound param index an int index return the double at the index <END>
<BEG> return an empty vector of the same underlying class a the receiver return a vector <END>
<BEG> set the value at the give index <SEG> without check bound param index an int index into the receiver param value a double value to set <END>
<BEG> return the number of value in the recipient return an int <END>
<BEG> returns the backing array return double [ ] [ ] <END>
<BEG> returns an iterator that traverse this vector from 0 to cardinality-1 <SEG> in that order <END>
<BEG> assign the other vector value to the row of the receiver param row the int row to assign param other a vector return the modify receiver throw cardinalityexception if the cardinality differ <END>
<BEG> return the value at the give location <SEG> without check bound param row an int row index param column an int column index return the double at the index <END>
<BEG> returns an empty matrix of the same underlying class a the receiver and of the specify size <END>
<BEG> return the number of value in the recipient return an int [ 2 ] contain [ row <SEG> column ] count <END>
<BEG> return a new matrix contain the subset of the recipient param offset an int [ 2 ] offset into the receiver param size the int [ 2 ] size of the desired result return a new matrix that be a view of the original throw cardinalityexception if the length be great than the cardinality of the receiver throw indexexception if the offset be negative or the offset+length be outside of the receiver <END>
<BEG> assign the other vector value to the column of the receiver param column the int row to assign param other a vector return the modify receiver throw org apache mahout math cardinalityexception if the cardinality differ <END>
<BEG> set the value at the give index <SEG> without check bound param row an int row index into the receiver param column an int column index into the receiver param value a double value to set <END>
<BEG> return true iff f x <SEG> 0 = f 0 <SEG> y = 0 for any x <SEG> y <END>
<BEG> return true iff f x <SEG> y = f y <SEG> x for any x <SEG> y <END>
<BEG> return true iff f x <SEG> f y <SEG> z = f f x <SEG> y <SEG> z for any x <SEG> y <SEG> z <END>
<BEG> return true iff f x <SEG> y = f y <SEG> x for any x <SEG> y and f x <SEG> f y <SEG> z = f f x <SEG> y <SEG> z for any x <SEG> y <SEG> z <END>
<BEG> return true iff f 0 <SEG> 0 ! = 0 <END>
<BEG> constructs a unary function from a binary function with the first operand argument fix to the give constant < tt > c < tt > <END>
<BEG> constructs a function that return { code a < b ? <END>
<BEG> constructs a function that return the constant < tt > c < tt > <END>
<BEG> constructs a function that return < tt > a b < tt > <END>
<BEG> constructs a function that return < tt > a == b ? <END>
<BEG> constructs a function that return < tt > math ieeeremainder a <SEG> b < tt > <END>
<BEG> constructs a function that return < tt > a == b < tt > <END>
<BEG> constructs a function that return < tt > math log a math log b < tt > <END>
<BEG> constructs a function that return < tt > a - b constant < tt > <END>
<BEG> constructs a function that return a new uniform random number in the open unit interval { code 0 0<SEG>1 0 } exclude 0 0 and 1 0 <END>
<BEG> constructs a function that return the number round to the give precision ; < tt > math rint a precision precision < tt > <END>
<BEG> constructs a function that return < tt > function apply b <SEG> a < tt > <SEG> i e <END>
<BEG> < tt > a constant < tt > <END>
<BEG> < tt > a - b constant < tt > <END>
<BEG> x + 0 c = x ! = 0 return true iff f x <SEG> 0 = 0 for any x <END>
<BEG> f x <SEG> f y <SEG> z = x + c y + c z = x + c y + c^2 z f f x <SEG> y <SEG> z = x + c y + c z = x + c y + c z true only for c = 0 or c = 1 return true iff f x <SEG> f y <SEG> z = f f x <SEG> y <SEG> z for any x <SEG> y <SEG> z <END>
<BEG> evaluates the give polynomial of degree < tt > n < tt > at < tt > x < tt > <SEG> assume coefficient of n be 1 0 <END>
<BEG> evaluates the give polynomial of degree < tt > n < tt > at < tt > x < tt > <END>
<BEG> abstract base class for all continuous distribution <END>
<BEG> return a random number from the distribution ; return < tt > int math round nextdouble < tt > <END>
<BEG> returns a random number from the distribution ; return < tt > double nextint < tt > <END>
<BEG> sets the receiver 's seed in a fashion compatible with the reference c implementation <END>
<BEG> return a 64 bit uniformly distribute random number in the closed interval < tt > [ long min_value <SEG> long max_value ] < tt > include < tt > long min_value < tt > and < tt > long max_value < tt > <END>
<BEG> sets the rate parameter <END>
<BEG> returns a random number from the distribution ; bypass the internal state <END>
<BEG> returns a quick approximation of < tt > log gamma x < tt > <END>
<BEG> poisson distribution - patchwork rejection inversion for parameter my < 10 tabulated inversion be apply <END>
<BEG> returns the cumulative distribution function assume a continous uniform distribution <END>
<BEG> returns a uniformly distribute random < tt > boolean < tt > <END>
<BEG> returns a uniformly distribute random number in the closed interval < tt > [ from <SEG> to ] < tt > include < tt > from < tt > and < tt > to < tt > <END>
<BEG> sets the internal state <END>
<BEG> returns the sum of the term < tt > 0 < tt > through < tt > k < tt > of the negative binomial distribution <END>
<BEG> returns the area under the normal gaussian probability density function <SEG> integrate from minus infinity to < tt > x < tt > assume mean be zero <SEG> variance be one <END>
<BEG> returns the sum of the first < tt > k < tt > term of the poisson distribution <END>
<BEG> appends the part of the specified list between < code > from < code > inclusive and < code > to < code > inclusive to the receiver <END>
<BEG> inserts the specified element before the specified position into the receiver <END>
<BEG> inserts the part of the specified list between < code > otherfrom < code > inclusive and < code > otherto < code > inclusive before the specified position into the receiver <END>
<BEG> inserts < tt > length < tt > dummy element before the specified position into the receiver <END>
<BEG> searches the receiver for the specify value use the binary search algorithm <END>
<BEG> deletes the first element from the receiver that be identical to the specify element <END>
<BEG> returns the element currently store <SEG> possibly include invalid element between size and capacity <END>
<BEG> sets the receiver 's element to be the specified array <END>
<BEG> compares the specified object with the receiver <END>
<BEG> applies a procedure to each element of the receiver <SEG> if any <END>
<BEG> returns the index of the first occurrence of the specified element <END>
<BEG> sorts the specified range of the receiver into ascend order <END>
<BEG> sorts the specified range of the receiver into ascend numerical order <END>
<BEG> replaces the part between < code > from < code > inclusive and < code > to < code > inclusive with the other list 's part between < code > otherfrom < code > and < code > otherto < code > <END>
<BEG> retains keep only the element in the receiver that be contain in the specify other list <END>
<BEG> returns a list which be a concatenation of < code > time < code > time the receiver <END>
<BEG> returns a < code > arraylist < code > contain all the element in the receiver <END>
<BEG> checks if the give index be in range <END>
<BEG> checks if the give range be within the contained array 's bound <END>
<BEG> sorts the receiver into ascend order <END>
<BEG> removes the element at the specified position from the receiver <END>
<BEG> trims the capacity of the receiver to be the receiver 's current size <END>
<BEG> appends all of the element of the specify collection to the receiver <END>
<BEG> inserts all element of the specify collection before the specified position into the receiver <END>
<BEG> returns the element currently store <SEG> include invalid element between size and capacity <SEG> if any <END>
<BEG> sets the receiver 's element to be the specified array not a copy of it <END>
<BEG> returns the element at the specified position in the receiver ; < b > warning : < b > does not check precondition <END>
<BEG> computes min and max and decide on this basis <END>
<BEG> applies a procedure to each key <SEG> value pair of the receiver <SEG> if any <END>
<BEG> returns a list fill with all key contain in the receiver <END>
<BEG> fills all key contain in the receiver into the specified list <END>
<BEG> fills all key and value < i > sort ascending by key < i > into the specified list <END>
<BEG> returns a string representation of the receiver <SEG> contain the string representation of each key-value pair <SEG> sort ascending by key <END>
<BEG> assigns the result of a function to each value ; < tt > v [ i ] = function v [ i ] < tt > <END>
<BEG> clears the receiver <SEG> then add all key <SEG> value pair of < tt > other < tt > value to it <END>
<BEG> fills all key and value < i > sort ascending by value accord to natural order < i > into the specified list <END>
<BEG> returns a string representation of the receiver <SEG> contain the string representation of each key-value pair <SEG> sort ascend by value <SEG> accord to natural ordering <END>
<BEG> returns a hashcode for the specify value <END>
<BEG> removes all key <SEG> value association from the receiver <END>
<BEG> ensures that the receiver can hold at least the specified number of association without need to allocate new internal memory <END>
<BEG> param value the value to be search in the receiver <END>
<BEG> rehashes the content of the receiver into a new table with a small or large capacity <END>
<BEG> removes the give key with it associate element from the receiver <SEG> if present <END>
<BEG> allocate a set to contain map entry object for the pair and return it <END>
<BEG> allocate a list to contain the value and return it <END>
<BEG> returns a prime number which be { code < = desiredcapacity } and very close to { code desiredcapacity } within 11 % if { code desiredcapacity < = 1000 } <END>
<BEG> this be open address with double hashing <SEG> use brent 's variation <END>
<BEG> return true iff the { link vector } implementation should be consider dense -- that it explicitly represent every value <END>
<BEG> generates and return the economy-sized orthogonal factor < tt > q < tt > <END>
<BEG> returns the upper triangular factor <SEG> < tt > r < tt > <END>
<BEG> least square solution of < tt > a x = b < tt > ; < tt > return x < tt > <END>
<BEG> returns a rough string rendition of a qr <END>
<BEG> merges the update in linear time by allocate new array and iterate through the exist index and value and the update ' index and value at the same time while select the minimum index to set at each step <END>
<BEG> iterates over all non-zero element <END>
<BEG> warning ! <END>
<BEG> chooses a new prime table capacity optimize for grow that approximately satisfy the invariant < tt > c minloadfactor < = size < = c maxloadfactor < tt > and have at least one free slot for the give size <END>
<BEG> returns new high water mark threshold base on current capacity and maxloadfactor <END>
<BEG> chooses a new prime table capacity neither favor shrink nor grow <SEG> that approximately satisfy the invariant < tt > c minloadfactor < = size < = c maxloadfactor < tt > and have at least one free slot for the give size <END>
<BEG> returns < tt > true < tt > if the receiver contain no key <SEG> value association <END>
<BEG> returns the number of key <SEG> value association currently contain <END>
<BEG> implement the standard java collections iterator <END>
<BEG> return the real part of the eigenvalue <END>
<BEG> param row an int row index return a shallow view of the vector at specify row ie you may mutate the original matrix use this row <END>
<BEG> given the source directory file object and the full path to a grammar <SEG> produce the path to the name grammar file in relative term to the { code sourcedirectory } <END>
<BEG> get set the base directory of the result assembly archive <END>
<BEG> get include a base directory in the final archive <END>
<BEG> set specify the shared component xml file location to include in the assembly <END>
<BEG> set set of component which filter various container descriptor out of the normal archive stream <SEG> so they can be aggregate then add <END>
<BEG> set specifies which dependency to include in the assembly <END>
<BEG> set specifies which group of file to include in the assembly <END>
<BEG> set specifies which single file to include in the assembly <END>
<BEG> set specify the format of the assembly <END>
<BEG> set specify a set of repository to include in the assembly <END>
<BEG> get configuration option for the handler <END>
<BEG> get the handler 's plexus role-hint <SEG> for lookup from the container <END>
<BEG> get similar to a unix permission <SEG> set the directory mode of the directory include <END>
<BEG> get set the output directory relative to the root of the root directory of the assembly <END>
<BEG> get set the mapping pattern for all dependency include in this assembly <END>
<BEG> get set the dependency scope for this dependencyset <END>
<BEG> get allow the specification of include and excludes <SEG> along with filtering option <SEG> for item unpack from a dependency artifact <END>
<BEG> get if set to true <SEG> this property will unpack all dependency into the specify output directory <END>
<BEG> get determine whether the attached artifact produce during the current project 's build should be include in this dependency set <END>
<BEG> get when specify a true <SEG> any include exclude pattern which be n't use to filter an actual artifact during assembly creation will cause the build to fail with an error <END>
<BEG> get determine whether the include exclude pattern in this dependency set will be apply to the transitive path of a give artifact <END>
<BEG> set when & lt ; exclude & gt ; subelements be present <SEG> they define a set of dependency artifact coordinate to exclude <END>
<BEG> set when & lt ; include & gt ; subelements be present <SEG> they define a set of artifact coordinate to include <END>
<BEG> get set the line-endings of the file in this file <END>
<BEG> get set the absolute or relative path from the module 's directory of the file to be include in the assembly <END>
<BEG> get the version you want to align this group to <END>
<BEG> get when specify <SEG> the attachmentclassifier will cause the assembler to look at artifact attach to the module instead of the main project artifact <END>
<BEG> get if set to true <SEG> the plugin will include the direct and transitive dependency of of the project modules include here <END>
<BEG> get when this be present <SEG> the plugin will include the binary of the included module from this set in the resulting assembly <END>
<BEG> get when this be present <SEG> the plugin will include the source file of the included module from this set in the resulting assembly <END>
<BEG> get if set to false <SEG> the plugin will exclude sub-modules from process in this moduleset <END>
<BEG> get if set to true <SEG> the plugin will include all project in the current reactor for processing in this moduleset <END>
<BEG> get specifies whether sub-module directory below the current module should be exclude from filesets apply to that module <END>
<BEG> get specifies whether the module 's finalname should be prepended to the outputdirectory value of any filesets apply to it <END>
<BEG> get whether standard exclusion pattern <SEG> such a those match cvs and subversion metadata file <SEG> should be use when calculate the file affect by this set <END>
<BEG> get if set to true <SEG> this property will trigger the creation of repository metadata which will allow the repository to be use a a functional remote repository <END>
<BEG> set specifies that you want to align a group of artifact to a specify version <END>
<BEG> param value enable to use relative path <END>
<BEG> param value enable when upload <END>
<BEG> param value public address of deployed bundle <END>
<BEG> return true if the file will be uploaded <SEG> else false <END>
<BEG> return public address of deployed bundle <END>
<BEG> get package can be any package name <SEG> or can be the start of any package name follow by an asterisk <END>
<BEG> get title can be any text <SEG> and can include white space <END>
<BEG> get list of exclusion pattern separate by ' : ' for deep copying of the ' & # 42 ; & # 42 ; doc-files ' directory <END>
<BEG> get path relative to project basedir where javadoc resource be locate <END>
<BEG> get enable deep copying of the ' & # 42 ; & # 42 ; doc-files ' directory and the specific 'resources ' directory <END>
<BEG> set list of urls to javadocs for external class <END>
<BEG> get the id of the group of the artifact <END>
<BEG> get specify the taglet artifact to be include in the tagletpath option for find taglet class file class <END>
<BEG> get tagletclass be the fully-qualified name for the taglet class <END>
<BEG> get specify the search path for find taglet class file class <END>
<BEG> get the minimum diskspace need to run this plugin <END>
<BEG> get the minimum version of maven to run this plugin <END>
<BEG> set others requirement property <END>
<BEG> return the formatted time stamp <END>
<BEG> which jar to shade <END>
<BEG> output jar <END>
<BEG> when true <SEG> it will attempt to shade the content of the java source file when create the source jar <END>
<BEG> set version pattern to ignore for this rule <END>
<BEG> takes a string and return the regex that will match that string exactly <END>
<BEG> converts a wildcard rule to a regex rule <END>
<BEG> extracts the name tabulardata field from the compositedata and convert it to a map which be the method use to get the typesafe user property <END>
<BEG> returns a map of all the user property in the give message { link javax management openmbean compositedata } object param cdata return a map of user property <END>
<BEG> return pretty print <END>
<BEG> return true if this job represent a cron entry <END>
<BEG> method to remove any sensitive parameter before log <END>
<BEG> gets the number of time that { link jmsconnector } will attempt to connect or reconnect before give up <END>
<BEG> gets the maximum number of time that the { link jmsconnector } will try to connect on startup to before it mark itself a fail and do not try any further connection <END>
<BEG> gets the maximum delay that be insert between each attempt to connect before another attempt be make <END>
<BEG> gets the multiplier use to grow the delay between connection attempt from the initial time to the max set time <END>
<BEG> returns the next computed delay value that the connection controller should use to wait before attempt another connection for the { link jmsconnector } <END>
<BEG> non-javadoc see org apache activemq broker transport protocol protocolverifier # isprotocol byte [ ] <END>
<BEG> param value param trim if the lead 0 's should be trim off <END>
<BEG> allows a system property to be use to overload the default data directory which can be useful for force the test case to use a target prefix <END>
<BEG> converts any string into a string that be safe to use a a file name <END>
<BEG> utility method to help find the root directory of the store param dir return <END>
<BEG> track the stack trace of caller param name the method be track <END>
<BEG> openwire : property version=1 <END>
<BEG> the endpoint within the transport where this message come from <END>
<BEG> the endpoint within the transport where this message be go to - null mean all endpoint <END>
<BEG> openwire : property version=1 return returns the faulttolerantconfiguration <END>
<BEG> openwire : property version=2 return the duplexconnection <END>
<BEG> the broker assign a each connection it accept a connection id <END>
<BEG> openwire : property version=3 cache=false return the networkproperties <END>
<BEG> return the rebalanceconnection openwire : property version=6 cache=false <END>
<BEG> the route of broker the command have move through <END>
<BEG> openwire : property version=6 cache=false return failoverreconnect true if this be a reconnect <END>
<BEG> used to identify the name of a durable subscription <END>
<BEG> lets copy across any transient field from this command to the complete command when it be unmarshalled on the other end param completecommand the newly unmarshalled complete command <END>
<BEG> param return see java lang comparable # compareto java lang object <END>
<BEG> configures a message pull from the consumer information <END>
<BEG> an optional correlation id which could be use by a broker to decide which message be pull on demand from a queue for a consumer openwire : property version=3 <END>
<BEG> the producer id that this ack message be destine for <END>
<BEG> is use to uniquely identify the producer of the sequence openwire : property version=1 cache=false <END>
<BEG> is use to specify the first sequence number be acknowledge a deliver on the transport so that it can be remove from cache openwire : property version=1 <END>
<BEG> openwire : property version=1 size=8 testsize=-1 <END>
<BEG> removes the value from the associate destination <END>
<BEG> returns the child node for the give name path or null if it do not exist <END>
<BEG> returns the child node for the give name path <SEG> lazily create one if it do not yet exist <END>
<BEG> returns a mutable list of the value available at this node in the tree <END>
<BEG> factory method to create a child node <END>
<BEG> matches any entry in the map containing wildcards <END>
<BEG> read the entry from the rawcontainer param datain return unmarshalled object throw ioexception <END>
<BEG> locks the control file <END>
<BEG> get the key object from it 's location param item return the key object associate with the storeentry <END>
<BEG> return see org apache activemq kaha storelocation # getsize <END>
<BEG> retrieve the next entry after this entry param entry return next entry <END>
<BEG> update the index of a storeentry param current <END>
<BEG> return prev item <END>
<BEG> return key offset <END>
<BEG> non-javadoc see org apache activemq kaha impl indexlinkedlist # getfirst <END>
<BEG> non-javadoc see org apache activemq kaha impl indexlinkedlist # addfirst org apache activemq kaha impl indexitem <END>
<BEG> non-javadoc see org apache activemq kaha impl indexlinkedlist # get int <END>
<BEG> non-javadoc see org apache activemq kaha impl indexlinkedlist # addbefore org apache activemq kaha impl indexitem <SEG> org apache activemq kaha impl indexitem <END>
<BEG> used by nio or aio transport <END>
<BEG> used by nio or aio transport ; note that the size be not write a part of this method <END>
<BEG> allows you to dynamically switch the version of the openwire protocol be use <END>
<BEG> param datain return payload throw ioexception see org apache activemq kaha marshaller # readpayload java io datainput <END>
<BEG> marshall an atomicinteger <END>
<BEG> return the value of the count after it 's decremented <END>
<BEG> param id param batchentry the batchentry to set <END>
<BEG> shut down the task param timeout throw interruptedexception <END>
<BEG> we expect many wakeup call on the same taskrunner - but each need to run <END>
<BEG> shut down the task throw interruptedexception <END>
<BEG> we expect many wakeup call on the same taskrunner <END>
<BEG> call to process a command param command <END>
<BEG> an unrecoverable exception have occur on the transport param error <END>
<BEG> the transport have suffer an interuption from which it hop to recover <END>
<BEG> the transport have resume after an interuption <END>
<BEG> creates wireformat object that marshalls the < a href= http : stomp codehaus org > stomp < a > protocol <END>
<BEG> write a byte on to the stream param b - byte to write throw ioexception <END>
<BEG> write a byte array to the stream param b the byte buffer param off the offset into the buffer param len the length of data to write throw ioexception <END>
<BEG> checks that the stream have not be close throw ioexception <END>
<BEG> non-javadoc see org apache activemq transport tcp timestampstream # iswriting <END>
<BEG> if an async exception occur <SEG> then assume no response will arrive for any of current request <END>
<BEG> param value a potential value to be use for differentiated services <END>
<BEG> set the response for this holder param r <END>
<BEG> registers an accept listener param acceptlistener <END>
<BEG> passes any io exception into the transport listener <END>
<BEG> return the length of bit set <END>
<BEG> set the boolean value at the index param index param flag return the old value hold at this index <END>
<BEG> param index return the boolean value at this index <END>
<BEG> reset all the bit to the value supply param bit <END>
<BEG> write the bit to an output stream param dataout throw ioexception <END>
<BEG> set a bit param index param value return true if set <END>
<BEG> get the boolean value at the index param index return true false <END>
<BEG> start use a fresh byte array param size <END>
<BEG> get a bytesequence from the stream return the byte sequence <END>
<BEG> set the current position for write param offset <END>
<BEG> creates a new instance of the give key param key be the key to add to the path to find a text file contain the factory name return a newly create instance <END>
<BEG> when use the { link java net inetaddress # gethostname } method in an environment where neither a proper dns lookup nor an < tt > etc host < tt > entry exist for a give host <SEG> the following exception will be throw : < code > java net unknownhostexception : & lt ; hostname & gt ; : & lt ; hostname & gt ; at java net inetaddress getlocalhost inetaddress java:1425 < code > instead of just throw an unknownhostexception and give up <SEG> this method grab a suitable hostname from the exception and prevent the exception from be throw <END>
<BEG> extracts the value from the map and coerces to a string <END>
<BEG> extracts the value from the map and coerces to an int value or return a default value if one could not be find or coerce <END>
<BEG> stops the give service <SEG> catch any exception that be throw <END>
<BEG> starts or restart the stop watch <END>
<BEG> given a uri parse and extract any uri query option and return them a a key value mapping <END>
<BEG> given a key value map create and append a uri query value that represent the mapped entry <SEG> return the newly update uri that contain the value of the give uri and the appended query value <END>
<BEG> removes any uri query from the give uri and return a new uri that do not contain the query portion <END>
<BEG> given a composite uri <SEG> parse the individual uri element contain within that uri and return a compsotedata instance that contain the parsed uri value <END>
<BEG> examine a uri and determine if it be a composite type or not <END>
<BEG> given a key value mapping <SEG> create and return a uri format query string that be valid and can be append to a uri <END>
<BEG> creates a uri from the original uri and the remain parameter <END>
<BEG> given a uri value create and return a new uri that match the target one but with the scheme value supply to this method <END>
<BEG> examine the supplied string and ensure that all parends appear a match pair <END>
<BEG> sends a message to the request address and wait for the give timeout for a reply <END>
<BEG> create a serverlocator which create session factory use a static list of transportconfigurations <SEG> the serverlocator be not update automatically a the cluster topology change <SEG> and no ha backup information be propagate to the client param transportconfigurations return the serverlocator <END>
<BEG> create a serverlocator which create session factory from a set of live server <SEG> no ha backup information be propagate to the client the udp address and port be use to listen for live server in the cluster param discoveryaddress the udp group address to listen for updates param discoveryport the udp port to listen for updates return the serverlocator <END>
<BEG> create a serverlocator which will receive cluster topology update from the cluster a server leave or join and new backup be appoint or remove <END>
<BEG> returns an array of roleinfo correspond to the json serialization return by { link queuecontrol # listmessagecounterhistory } <END>
<BEG> returns a 24-length array correspond to the number of message add to the queue for the give hour of the day <END>
<BEG> returns the number of message add to the queue since it be create <END>
<BEG> returns the number of message add to the queue since the last counter sample <END>
<BEG> returns the number of message in the queue since last counter sample <END>
<BEG> returns the timestamp of the last time a message be add to the queue <END>
<BEG> returns the timestamp of the last time the queue be update <END>
<BEG> returns whether this role can send message to the address <END>
<BEG> returns whether this role can consume message from queue bind to the address <END>
<BEG> returns whether this role can create durable queue bound to the address <END>
<BEG> returns a simplestring construct from the < code > string < code > parameter <END>
<BEG> return the underlie byte array of this simplestring return the byte array <END>
<BEG> return true if the simplestring parameter start with the same data a this one <END>
<BEG> splits this simplestring into an array of simplestring use the char param a the delimiter <END>
<BEG> check to see if this simplestring contain the char parameter pass in param c the char to check for return true if the char be find <SEG> false otherwise <END>
<BEG> concatenates a simplestring and a char param c the char to concate with <END>
<BEG> return the size of this simplestring return the size <END>
<BEG> return the size of a simplestring param str the simplestring to check return the size <END>
<BEG> this need to be synchronize because of http : bug sun com view_bug do ? bug_id=6791815 http : mail openjdk java net pipermail hotspot-runtime-dev 2009-january 000386 html <END>
<BEG> return the jni handler use on c++ <END>
<BEG> non-javadoc see org hornetq core client impl clientsessionfactoryinternal # setreconnectattempts int <END>
<BEG> non-javadoc see org hornetq api core buffer channelbuffer # tostring int <SEG> int <SEG> java lang string <END>
<BEG> non-javadoc see org hornetq core client impl serverlocatorinternal # setafterconnectioninternallistener org hornetq core client impl afterconnectinternallistener <END>
<BEG> non-javadoc see org hornetq api core client serverlocator # setcompresslargemessage boolean <END>
<BEG> param ha be the bridge support ha ? <END>
<BEG> at this point this be only change on testcases the bridge should n't be send block anyways param calltimeout the calltimeout to set <END>
<BEG> non-javadoc see org hornetq core config configuration # getpagemaxconcurrentio <END>
<BEG> non-javadoc see org hornetq core config configuration # setpagemaxconcurrentio int <END>
<BEG> non-javadoc see org hornetq core config configuration # setaddressessettings java util map <END>
<BEG> register a deployer object which will handle the deployment of url 's param deployer the deployer object throw exception <END>
<BEG> call by the executorservice every n second <END>
<BEG> add a url to the already configure set of url 's this deployer be handle param url the url to add param name the name of the element param e <END>
<BEG> redeploys a url if change param url the resource to redeploy throw exception <END>
<BEG> undeploys a resource that have be remove param url the resource that be delete throw exception <END>
<BEG> deploy the url for the first time param url the resource todeploy throw exception <END>
<BEG> the key attribute for theelement <SEG> usually 'name ' but can be overridden return the key attribute <END>
<BEG> write pending output into file <END>
<BEG> non-javadoc see org hornetq core journal sequentialfilefactory # onioerror java lang exception <SEG> java lang string <SEG> org hornetq core journal sequentialfile <END>
<BEG> create the directory if it do n't exist yet <END>
<BEG> non-javadoc see org hornetq core asyncio ioexceptionlistener # onexception int <SEG> java lang string <END>
<BEG> param sync not use on aio <END>
<BEG> receive debug information about the journal <END>
<BEG> param file param renametmp - should rename the file a it 's be add to free file param checkdelete - should delete the file if max condition have be meet throw exception <END>
<BEG> < p > this method will instantly return the open file <SEG> and schedule opening and reclaim < p > < p > in case there be no cached open file <SEG> this method will block until the file be open <SEG> what would happen only if the system be under heavy load by another system like a backup system <SEG> or a db share the same box a hornetq < p > <END>
<BEG> open a file and place it into the openedfiles queue <END>
<BEG> this be use to merge transaction from compact <END>
<BEG> the caller of this method need to guarantee appendlock lock at the journal <END>
<BEG> wait completion at the late file only <END>
<BEG> force mean the journal be move to a new file <END>
<BEG> gets the message count delta since last method call <END>
<BEG> gets the current message count of pending message within the destination wait for dispatch <END>
<BEG> gets the message count delta of pending message since last method call <END>
<BEG> get message counter history data a string in format day count\n date 1 <SEG> hour counter 0 <SEG> hour counter 1 <SEG> <SEG> hour counter 23\n date 2 <SEG> hour counter 0 <SEG> hour counter 1 <SEG> <SEG> hour counter 23\n date n <SEG> hour counter 0 <SEG> hour counter 1 <SEG> <SEG> hour counter 23\n return string message history data string <END>
<BEG> non-javadoc see org hornetq core paging cursor pagecache # getmessage int <END>
<BEG> non-javadoc see org hornetq core paging cursor impl pagingsubscriptioncounterinterface # getvalue <END>
<BEG> non-javadoc see org hornetq core paging cursor impl pagingsubscriptioncounterinterface # increment org hornetq core transaction transaction <SEG> int <END>
<BEG> non-javadoc see org hornetq core paging cursor impl pagingsubscriptioncounterinterface # loadvalue long <SEG> long <END>
<BEG> non-javadoc see org hornetq core paging cursor pagesubscriptioncounter # loadinc long <SEG> int <END>
<BEG> a page mark a complete will be ignore until it 's clear <END>
<BEG> it will cleanup all the record for complete page <END>
<BEG> non-javadoc see org hornetq core paging cursor pagecursor # returnelement org hornetq core paging cursor pageposition <END>
<BEG> all the data associate with the cursor should go away here <END>
<BEG> non-javadoc see org hornetq core paging cursor pagesubscription # executewithcontext java lang runnable <END>
<BEG> non-javadoc see org hornetq core server messagereference # copy org hornetq core server queue <END>
<BEG> non-javadoc see org hornetq core server messagereference # setscheduleddeliverytime long <END>
<BEG> store be a concurrenthashmap <SEG> so we do n't need to synchronize this method <END>
<BEG> it return a page out of the page system without read it <END>
<BEG> non-javadoc see org hornetq core persistence storagemanager # createlargemessagestorage long <SEG> int <SEG> int <END>
<BEG> non-javadoc see org hornetq core persistence storagemanager # pageclosed org hornetq utils simplestring <SEG> int <END>
<BEG> non-javadoc see org hornetq core persistence storagemanager # setreplicator org hornetq core replication replicationmanager <END>
<BEG> non-javadoc see org hornetq core persistence storagemanager # updatepagetransaction long <SEG> org hornetq core page pagetransactioninfo <SEG> int <END>
<BEG> non-javadoc see org hornetq core persistence storagemanager # storecursoracknowledge long <SEG> org hornetq core page cursor pageposition <END>
<BEG> non-javadoc see org hornetq core persistence storagemanager # storecursoracknowledgetransactional long <SEG> long <SEG> org hornetq core page cursor pageposition <END>
<BEG> non-javadoc see org hornetq core persistence storagemanager # confirmpendinglargemessagetx org hornetq core transaction transaction <SEG> long <SEG> long <END>
<BEG> non-javadoc see org hornetq core persistence storagemanager # stop boolean <END>
<BEG> stop accept new connection <END>
<BEG> non-javadoc see org hornetq core remoting channelhandler # handlepacket org hornetq core remoting packet <END>
<BEG> non-javadoc see org hornetq core replication replicationmanager # appenddeleterecord byte <SEG> long <SEG> boolean <END>
<BEG> non-javadoc see org hornetq core replication replicationmanager # appendpreparerecord byte <SEG> long <SEG> org hornetq core journal encodingsupport <SEG> boolean <END>
<BEG> non-javadoc see org hornetq core replication replicationmanager # largemessagewrite long <SEG> byte [ ] <END>
<BEG> non-javadoc see org hornetq core replication replicationmanager # comparejournals org hornetq core journal journalloadinformation [ ] <END>
<BEG> hook for process message before forward <END>
<BEG> hook for do extra stuff after connection <END>
<BEG> classpath resource for hornetq server config <END>
<BEG> use this mbean server to register management bean <END>
<BEG> set this object if you be not use file-based configuration <END>
<BEG> for test only <SEG> do n't use this method a it 's not part of the api param factory <END>
<BEG> this method be protect a it may be use a a hook for create a custom storage manager on test for instance <END>
<BEG> called when a message be cancel back into the queue <END>
<BEG> only use on test <END>
<BEG> prompt delivery and send a forced delivery message to the consumer <END>
<BEG> merge 2 object in to 1 param merge <END>
<BEG> add a new match to the repository param match the regex to use to match against param value the value to hold agains the match <END>
<BEG> return the value hold against the near match param match the match to look for return the value <END>
<BEG> set the default value to fallback to if none find param defaultvalue the value <END>
<BEG> after commit should n't throw any exception <END>
<BEG> set the default user for null user <END>
<BEG> lifecycle method <SEG> need to be call throw exception <END>
<BEG> encodes or decodes two file from the command line ; < strong > feel free to delete this method in fact you probably should if you 're embed this code into a large program < strong > <END>
<BEG> very low-level access to decode ascii character in the form of a byte array <END>
<BEG> convenience method for encode data to a file <END>
<BEG> convenience method for read a base64-encoded file and decode it <END>
<BEG> reads < tt > infile < tt > and encode it to < tt > outfile < tt > <END>
<BEG> create a context path recursively <END>
<BEG> get an executor that always execute task in order <END>
<BEG> return see java util map # size <END>
<BEG> param key return see java util map # containskey java lang object <END>
<BEG> param m see java util map # putall java util map <END>
<BEG> could be synchronize <SEG> but since side effect be trivial ie <END>
<BEG> this metod be here because node gettextcontent be not available in jdk 1 4 and i would like to have an uniform access to this functionality <END>
<BEG> i need a finalize method define here just a a way to get a hook on the pagingleaktest through byteman there be a rule for finalize it where i 'm establish a counter <SEG> and that rule wo n't work without this method define <END>
<BEG> removes value available at this node in the tree <END>
<BEG> re-start the input stream - reuse the current buffer param size <END>
<BEG> param value property value a string return correspond variable in correct type <END>
<BEG> non-javadoc see com amazonaws service kinesis clientlibrary lib worker itask # call <END>
<BEG> initializes the data fetcher position in shard and invoke the recordprocessor initialize api <END>
<BEG> return the sequence number of the kinesis record <END>
<BEG> get shard id <END>
<BEG> provides the number of lease that should be take by the worker <END>
<BEG> return most recently application-supplied checkpoint value <END>
<BEG> return pending checkpoint <SEG> possibly null <END>
<BEG> return count of distinct lease holder between checkpoint <END>
<BEG> return shardids that parent this lease <END>
<BEG> sets pending checkpoint <END>
<BEG> return request method that time out <END>
<BEG> channel that perform the call return <END>
<BEG> return number of the channel that perform the call <END>
<BEG> create a new channel wrap in an { link optional } <END>
<BEG> create a new channel <SEG> use the specify channel number if possible <END>
<BEG> create a new broker connection with a client-provided name <SEG> pick the first available address from the list provide by the { link addressresolver } <END>
<BEG> stores the most recently passed-in consumertag - semantically <SEG> there should be only one <END>
<BEG> provides a hook to insert custom configuration of the { link socketchannel } s use to connect to an amqp server before they connect <END>
<BEG> retrieve the message envelope <END>
<BEG> get the ip address from a dns query return candidate { link address } e throw ioexception if dns resolution fails <END>
<BEG> get the delivery tag include in this parameter envelope return the delivery tag <END>
<BEG> get the redelivery flag include in this parameter envelope <END>
<BEG> get the name of the exchange include in this parameter envelope return the exchange <END>
<BEG> get the { link envelope } include in this response return the envelope <END>
<BEG> get the message body include in this response return the message body <END>
<BEG> public api - retrieves this channel 's channel number <END>
<BEG> private api - when the connection receive a frame for this channel <SEG> it pass it to this method <END>
<BEG> return thread factory use by this connection <END>
<BEG> stop execute all consumer work for a particular channel param channel to stop consumer work for <END>
<BEG> return true if executor use by this work service be manage by it and be n't provide by the user <END>
<BEG> the time before the credential expire <SEG> if they do expire <END>
<BEG> public api - write this frame to the give dataoutputstream <END>
<BEG> public api - retrieve a new datainputstream streaming over the payload <END>
<BEG> computes the amqp wire-protocol length of an encoded field-array of type object [ ] <END>
<BEG> shutdown the heartbeat process <SEG> if any <END>
<BEG> converts a string to a longstring use utf-8 encoding <END>
<BEG> { link sslengine } for ssl tls connection <END>
<BEG> sets the size in byte of the read { link java nio bytebuffer } use in the nio loop <END>
<BEG> sets the max number of thread task use for nio <END>
<BEG> set the capacity of the queue use for outbound frame <END>
<BEG> set the { link java nio channel socketchannel } configurator <END>
<BEG> set the { link sslengine } configurator <END>
<BEG> set the { link executorservice } use for connection shutdown <END>
<BEG> set the factory to create { link java nio bytebuffer } s < p > the default implementation create heap-based { link java nio bytebuffer } s param bytebufferfactory the factory to use return this { link nioparams } instance see bytebufferfactory see defaultbytebufferfactory since 5 5 0 <END>
<BEG> the entity to recover <END>
<BEG> decides whether an exchange be recover or not <END>
<BEG> add an element to the back of the queue and return < code > < b > true < b > < code > <SEG> or else return < code > < b > false < b > < code > <END>
<BEG> internal : this be the mean of register shutdown <END>
<BEG> set a new capacity for the queue <END>
<BEG> inserts the specified element at the tail of this queue if possible <SEG> return immediately if this queue be full <END>
<BEG> remove client from pool and from any other state <END>
<BEG> remove all client from pool and from any other state <END>
<BEG> return the next < i > ready < i > client <SEG> and transfer a collection of that client 's item to process <END>
<BEG> add enqueue an item for a specific client <END>
<BEG> set client no longer < i > in progress < i > <END>
<BEG> default implementation override in subclass <END>
<BEG> the client 's amqp specification major version <END>
<BEG> public api - cancel the consumer <SEG> thus delete the temporary queue <SEG> and mark the rpcclient a close <END>
<BEG> registers a consumer on the reply queue <END>
<BEG> retrieve the routing key <END>
<BEG> set the channel to use for communication <END>
<BEG> set the exchange to send request to <END>
<BEG> the default { link socketchannelconfigurator } that disable nagle 's algorithm <END>
<BEG> { link socketchannelconfigurator } that disable nagle 's algorithm <END>
<BEG> builder to configure and create a { link socketchannelconfigurator } instance <END>
<BEG> { link socketconfigurator } that enable server hostname verification for tls connection <END>
<BEG> default { link sslengineconfigurator } <SEG> do nothing <END>
<BEG> default implementation - override in subclass <END>
<BEG> write only a certain subset of the object 's property and field <END>
<BEG> wait for a value <SEG> and when one arrive <SEG> return it without clear it <END>
<BEG> as get long timeout <SEG> but catch and ignores interruptedexception <SEG> retry until a value appear or until specify timeout be reach <END>
<BEG> store a value in this blockingcell <SEG> throw { link illegalstateexception } if the cell already have a value <END>
<BEG> store a value in this blockingcell if it do n't already have a value <END>
<BEG> allocate an unallocated integer from the range <SEG> or return -1 if no more integer be available <END>
<BEG> make the provided integer available for allocation again <END>
<BEG> attempt to reserve the provided id a if it have be allocate <END>
<BEG> param throwable return deprecate use log library instead for log stack trace somewhere <END>
<BEG> synchronizes on the list and then return a copy of the list that be safe to iterate over <END>
<BEG> < p > the < code > id < code > of an entry in a batch request <END>
<BEG> < p > specifies whether the error happen due to the producer <END>
<BEG> < p > an error code represent why the action fail on this entry <END>
<BEG> < p > the new value in second for the message 's visibility timeout <END>
<BEG> < p > the receipt handle associate with the message whose visibility timeout be change <END>
<BEG> < p > an md5 digest of the non-url-encoded message system attribute string <END>
<BEG> < p > an attribute contain the < code > messageid < code > of the message send to the queue <END>
<BEG> returns a pseudo random number between { code 0 } inclusive and { code max } exclusive <END>
<BEG> return -1 to force deserialization of object <END>
<BEG> execute the ticket <END>
<BEG> add timer to the set <SEG> timer repeat forever <SEG> or until cancel be call <END>
<BEG> enable verbose tracing of command and activity param verbose <END>
<BEG> configure plain authentication for a give domain <END>
<BEG> configure curve authentication param location can be zauth curve_allow_any or a directory with public-keys that will be accept <END>
<BEG> retrieves the next zap reply <END>
<BEG> saves the public key to a file <END>
<BEG> saves the public and secret key to a file <END>
<BEG> check if a public key be in the certificate store <END>
<BEG> check if a value-path exists param path return true if value-path exists <END>
<BEG> add comment param comment <END>
<BEG> param path param value set value of config item <END>
<BEG> saves the configuration to a file <END>
<BEG> destroys manage socket within this context and remove from socket list param s org zeromq socket object to destroy <END>
<BEG> creates new shadow context <END>
<BEG> set initial receive hwm for all new normal socket create in context <END>
<BEG> return a copy of the list of currently open socket <END>
<BEG> return more flag <SEG> true if last read have more message part to come <END>
<BEG> returns byte size of frame <SEG> if set <SEG> else 0 return number of byte in frame data <SEG> else 0 <END>
<BEG> convenience method to ascertain if this frame contain some message data return true if frame contains data <END>
<BEG> sends frame to socket if it contain any data <END>
<BEG> sends frame to socket if it contain data <END>
<BEG> creates a new frame that duplicate an exist frame return duplicate of frame ; message content copy into new byte array <END>
<BEG> returns true if both frame have byte - for byte identical data param other the other zframe to compare return true if both zframes have same byte-identical data <SEG> else false <END>
<BEG> sets new content for frame param data new byte array content for frame <END>
<BEG> receive a new frame off the socket <SEG> returns newly-allocated frame <SEG> or null if there be no input wait <SEG> or if the read be interrupt <END>
<BEG> sets verbosity of the monitor <END>
<BEG> adds event type to monitor <END>
<BEG> gets the next event <SEG> block for it until available if request <END>
<BEG> return major version number of the zmq library <END>
<BEG> return full version number of the zmq library use for compare version <END>
<BEG> return total number of byte contain in all zframes in this zmsg <END>
<BEG> add a string a a new zframe to the end of list param str string to add to list <END>
<BEG> push frame plus empty frame to front of message <SEG> before 1st frame <END>
<BEG> pop frame off front of message <SEG> caller now own frame <END>
<BEG> send message to 0mq socket <SEG> destroy content after send if destroy param be set to true <END>
<BEG> receives message from socket <SEG> return zmsg object or null if the recv be interrupt <END>
<BEG> create a new zmsg from one or more strings param string strings to add a frame <END>
<BEG> adds a string a a new frame in the message <END>
<BEG> adds bytes a a new frame in the message <END>
<BEG> pop a zframe and return the tostring representation of it <END>
<BEG> sets the global event handler for all registered socket <END>
<BEG> register an itemholder for poll on specified event <END>
<BEG> unregister a socket or selectablechannel for poll on the specified event <END>
<BEG> dispatches the polled event <END>
<BEG> tells if a channel be in error from this poller <END>
<BEG> creates a new proxy in a zeromq way <END>
<BEG> creates a new low-level proxy for good performance <END>
<BEG> pauses the proxy <END>
<BEG> sends a command message to the proxy actor <END>
<BEG> stops the proxy and exit <END>
<BEG> inquires for the status of the proxy <END>
<BEG> binary inquiry for the status of the proxy <END>
<BEG> retrieve the socket type for the current 'socket ' <END>
<BEG> stop accept connection on a socket <END>
<BEG> disconnecting a socket from an endpoint <END>
<BEG> returns a boolean value indicate if the multipart message currently be read from the { code socket } and have more message part to follow <END>
<BEG> send a frame param frame param flag return return true if successful <END>
<BEG> returns the corbeille endpoint <END>
<BEG> returns the control of the proper exit of the remote operation <END>
<BEG> return false if { link # terminate } terminate have be call <END>
<BEG> checks if the message start with the give string <END>
<BEG> called by i o thread when file descriptor be ready for read <END>
<BEG> called by i o thread when file descriptor might be ready for connect <END>
<BEG> called when timer expire <END>
<BEG> high precision timestamp in microsecond <END>
<BEG> validate group param group throw com alibaba rocketmq client exception mqclientexception <END>
<BEG> validate message param msg param defaultmqproducer throw com alibaba rocketmq client exception mqclientexception <END>
<BEG> author shijia wxr <END>
<BEG> shunting-yard algorithm < br > http : en wikipedia org wiki shunting_yard_algorithm param token return <END>
<BEG> clientid <END>
<BEG> brokerid <END>
<BEG> author vintage wang <END>
<BEG> the { link socketaddress } which be use to bind the local end to <END>
<BEG> create a new { link channel } and bind it <END>
<BEG> creates a new { link swappedbytebuf } for this { link bytebuf } instance <END>
<BEG> throws an { link indexoutofboundsexception } if the current { linkplain # readablebytes readable byte } of this buffer be less than the specify value <END>
<BEG> should be call by every method that try to access the buffer content to check if the buffer be release before <END>
<BEG> an unsafe operation intend for use by a subclass that set the reference count of the buffer directly <END>
<BEG> returns the buffer where this stream be write data <END>
<BEG> > > > > > > > e5386b0 move hex dump relate util from bytebufutil to inner class calculates the hash code of the specify buffer <END>
<BEG> returns { code true } if and only if the two specified buffer be identical to each other a describe in { code channelbuffer # equal object } <END>
<BEG> the default implementation of { link bytebuf # indexof int <SEG> int <SEG> byte } <END>
<BEG> toggles the endianness of the specify 16-bit short integer <END>
<BEG> toggles the endianness of the specify 32-bit integer <END>
<BEG> read the give amount of byte into a new { link bytebuf } that be allocate from the { link bytebufallocator } <END>
<BEG> returns a cached thread-local direct buffer <SEG> if available <END>
<BEG> return { link bytebuf # tostring } without check the reference count first <END>
<BEG> method must be call before reuse this { link pooledbytebufallocator } <END>
<BEG> default number of heap areanas - system property : io netty allocator numheaparenas - default 2 core <END>
<BEG> default buffer page size - system property : io netty allocator pagesize - default 8192 <END>
<BEG> returns { code true } if the call { link thread } have a { link threadlocal } cache for the allocated buffer <END>
<BEG> free all cache buffer for the call { link thread } <END>
<BEG> return a { link list } of all heap { link poolarenametric } s that be provide by this pool <END>
<BEG> returns the index with the need adjustment <END>
<BEG> free a direct { link bytebuffer } <END>
<BEG> reset the stored remoteaddress <END>
<BEG> returns { code true } if and only if the specified object be identical with this channel i e : { code this == o } <END>
<BEG> returns the { link string } representation of this channel <END>
<BEG> is call after the { link channel } be registered with it { link eventloop } a part of the register process <END>
<BEG> return the current write counter of this { link channelflushpromisenotifier } <END>
<BEG> notify all { link channelfuture } s that be register with { link # add channelpromise <SEG> int } and their pendingdatasize be small after the the current writecounter return by { link # writecounter } <END>
<BEG> notify all { link channelfuture } s that be register with { link # add channelpromise <SEG> int } and their pendingdatasize be small then the current writecounter return by { link # writecounter } use the give cause1 <END>
<BEG> cache the result of { link sharable } annotation detection to workaround a condition <END>
<BEG> calls { link channelhandlercontext # firechannelregistered } to forward to the next { link channelinboundhandler } in the { link channelpipeline } <END>
<BEG> returns { code true } if and only if the channel have the { code disconnect } operation that allow a user to disconnect and then call { link channel # connect socketaddress } again <SEG> such a udp ip <END>
<BEG> creates a new { link channeloption } with the specify { param name } or return the already exist { link channeloption } for the give name <END>
<BEG> creates a new { link channeloption } for the give { param name } or fail with an { link illegalargumentexception } if a { link channeloption } for the give { param name } exists <END>
<BEG> validate the value which be set for the { link channeloption } <END>
<BEG> add give message to this { link channeloutboundbuffer } <END>
<BEG> notify the { link channelpromise } of the current message about write progress <END>
<BEG> will remove the current message <SEG> mark it { link channelpromise } a success and return { code true } <END>
<BEG> will remove the current message <SEG> mark it { link channelpromise } a failure use the give { link throwable } and return { code true } <END>
<BEG> removes the fully write entry and update the reader index of the partially write entry <END>
<BEG> returns the number of { link bytebuffer } that can be write out of the { link bytebuffer } array that be obtain via { link # niobuffers } <END>
<BEG> returns the number of byte that can be write out of the { link bytebuffer } array that be obtain via { link # niobuffers } <END>
<BEG> returns { code true } if and only if { linkplain # totalpendingwritebytes the total number of pending byte } do not exceed the write watermark of the { link channel } and no { linkplain # setuserdefinedwritability int <SEG> boolean user-defined writability flag } have be set to { code false } <END>
<BEG> returns { code true } if and only if the user-defined writability flag at the specified index be set to { code true } <END>
<BEG> returns the number of flushed message in this { link channeloutboundbuffer } <END>
<BEG> returns { code true } if there be flushed message in this { link channeloutboundbuffer } or { code false } otherwise <END>
<BEG> get how many byte can be write until { link # iswritable } return { code false } <END>
<BEG> get how many byte must be drain from the underlie buffer until { link # iswritable } return { code true } <END>
<BEG> is call once { link # setautoread boolean } be call with { code false } and { link # isautoread } be { code true } before <END>
<BEG> should be call before { link # firechannelregistered } be call the first time <END>
<BEG> returns the { link queue } which hold all the { link object } s that be receive by this { link channel } <END>
<BEG> return receive data from this { link channel } <END>
<BEG> read data from the outbound <END>
<BEG> mark this { link channel } a finish and release all pending message in the inbound and outbound buffer <END>
<BEG> release all buffer inbound message and return { code true } if any be in the inbound buffer <SEG> { code false } otherwise <END>
<BEG> run all task which also include scheduled task that be pending in the { link eventloop } for this { link channel } <END>
<BEG> run all pending schedule task in the { link eventloop } for this { link channel } and return the { code nanosecond } when the next scheduled task be ready to run <END>
<BEG> check if there be any { link throwable } receive and if so rethrow it <END>
<BEG> ensure the { link channel } be open and of not throw an exception <END>
<BEG> read byte into the give { link bytebuf } and return the amount <END>
<BEG> connect to the remote peer <END>
<BEG> returns { code true } if and only if the < a href= http : netty io wiki native-transports html > { code netty-transport-native-epoll } < a > be available <END>
<BEG> ensure that < a href= http : netty io wiki native-transports html > { code netty-transport-native-epoll } < a > be available <END>
<BEG> returns the cause of unavailability of < a href= http : netty io wiki native-transports html > { code netty-transport-native-epoll } < a > <END>
<BEG> return the { code memoryaddress } which point to the start of this { link epolleventarray } <END>
<BEG> increase the storage of this { link epolleventarray } <END>
<BEG> return the event for the { code epoll_event } on this index <END>
<BEG> return the file descriptor for the { code epoll_event } on this index <END>
<BEG> sets the percentage of the desired amount of time spend for i o in the child event loop <END>
<BEG> returns threshold value of number of pending for fast open connect <END>
<BEG> enables tcpfastopen on the server channel <END>
<BEG> returns { code true } if < a href= http : man7 org linux man-pages man7 ip 7 html > ip_freebind < a > be enable <SEG> { code false } otherwise <END>
<BEG> try to add the give { link bytebuf } <END>
<BEG> returns the number if iov entry <END>
<BEG> returns a { link channelmatcher } that match all { link channel } s <END>
<BEG> returns a { link channelmatcher } that match all { link channel } s that be an instance of sub-type of the give class <END>
<BEG> returns a { link channelmatcher } that match all { link channel } s that be < strong > not < strong > an instance of sub-type of the give class <END>
<BEG> returns a { link channelmatcher } that match all { link channel } s that be of type { link serverchannel } <END>
<BEG> returns a { link channelmatcher } that match all { link channel } s that be < strong > not < strong > of type { link serverchannel } <END>
<BEG> return { code true } if the input of this { link channel } be shutdown <END>
<BEG> replaces the current { link selector } s of the child event loop with newly create { link selector } s to work around the infamous epoll 100 % cpu bug <END>
<BEG> check if the input be shutdown and if so return { code true } <END>
<BEG> activate this instance <END>
<BEG> returns { code true } if there be no pending write operation leave in this queue <END>
<BEG> returns the number of pending write operation <END>
<BEG> remove all pending write operation and fail them with the give { link throwable } <END>
<BEG> remove all pending write operation and perform them via { link channelhandlercontext # write object <SEG> channelpromise } <END>
<BEG> removes a pending write operation and release it 's message via { link referencecountutil # saferelease object } <END>
<BEG> poll a { link channel } out of the internal storage to reuse it <END>
<BEG> offer a { link channel } back to the internal storage <END>
<BEG> return the serial port address of the device e g <END>
<BEG> return the unordered flag <END>
<BEG> return the { link messageinfo } for inbound message or { code null } for outbound message <END>
<BEG> the path to the domain socket <END>
<BEG> close the file descriptor <END>
<BEG> return [ 0 ] = read end <SEG> [ 1 ] = write end <END>
<BEG> if set then only one message be decode on each { link # channelread channelhandlercontext <SEG> object } call <END>
<BEG> set the number of read after which { link bytebuf # discardsomereadbytes } be call and so free up memory <END>
<BEG> gets call after the { link bytetomessagedecoder } be remove from the actual context and it do n't handle event anymore <END>
<BEG> returns a { code nul 0x00 } delimiter <SEG> which could be use for flash xml socket or any similar protocol <END>
<BEG> returns { code cr '\r ' } and { code lf '\n ' } delimiters <SEG> which could be use for text-based line protocol <END>
<BEG> returns the human-readable source address of this { link haproxymessage } <END>
<BEG> returns the udp tcp source port of this { link haproxymessage } <END>
<BEG> param buf a buffer where some cooky be maybe encode return the buffer string without the trailing separator <SEG> or null if no cookie be append <END>
<BEG> determines if support for cors be enable <END>
<BEG> web browser may set the 'origin ' request header to 'null ' if a resource be load from the local file system <END>
<BEG> creates a builder instance with it 's origin set to ' ' <END>
<BEG> returns the maximum number of component in the cumulation buffer <END>
<BEG> determine if a uri be in origin-form accord to < a href= http : tool ietf org html rfc7230 # section-5 3 > rfc7230 <SEG> 5 3 < a > <END>
<BEG> returns an exist or new { link httpversion } instance which match to the specify protocol version string <END>
<BEG> returns the name of the protocol such a { code http } in { code http 1 0 } <END>
<BEG> returns the full protocol version text such a { code http 1 0 } <END>
<BEG> returns { code true } if and only if the connection be keep alive unless the { code connection } header be set to { code close } explicitly <END>
<BEG> utility to go from a in memory fileupload to a disk or another implementation fileupload return the attached bytebuf contain the actual byte <END>
<BEG> find the first non whitespace return the rank of the first non whitespace <END>
<BEG> find the first whitespace return the rank of the first whitespace <END>
<BEG> true if this request be a multipart request return true if this request be a multipart request <END>
<BEG> set the amount of byte after which read byte in the buffer should be discard <END>
<BEG> this getmethod return a list of all httpdatas with the give name from body < br > if chunk <SEG> all chunk must have be offer use offer getmethod <END>
<BEG> destroy the { link httppostmultipartrequestdecoder } and release all it resource <END>
<BEG> check if the give request be a multipart request return true if the request be a multipart request <END>
<BEG> check from the request contenttype if this request be a multipart request <END>
<BEG> this getmethod return a list of all interfacehttpdata from body part < br > return the list of interfacehttpdata from body part <END>
<BEG> set the body httpdatas list throw nullpointerexception for data throw errordataencoderexception if the encoding be in error or if the finalize be already do <END>
<BEG> add a simple attribute in the body a name=value param name name of the parameter param value the value of the parameter throw nullpointerexception for name throw errordataencoderexception if the encoding be in error or if the finalize be already do <END>
<BEG> add a file a a fileupload param name the name of the parameter param file the file to be uploaded if not multipart mode <SEG> only the filename will be include param contenttype the associate contenttype for the file param istext true if this file should be transmit in text format else binary throw nullpointerexception for name and file throw errordataencoderexception if the encoding be in error or if the finalize be already do <END>
<BEG> adds a parameter with the specify name and value to this encoder <END>
<BEG> returns the url-encoded uri object which be create from the path string specify in the constructor and the parameter add by { link # addparam string <SEG> string } getmethod <END>
<BEG> returns the url-encoded uri which be create from the path string specify in the constructor and the parameter add by { link # addparam string <SEG> string } getmethod <END>
<BEG> returns the closing status code a per < a href= http : tool ietf org html rfc6455 # section-7 4 > rfc 6455 < a > <END>
<BEG> returns the uri to the web socket <END>
<BEG> returns the max length for any frame 's payload <END>
<BEG> returns the csv of request subprotocol s send to the server a specify in the constructor <END>
<BEG> returns the subprotocol response send by the server <END>
<BEG> return the constructed raw path for the give { link uri } <END>
<BEG> returns the csv of support sub protocol <END>
<BEG> selects the first matching support sub protocol param requestedsubprotocols csv of protocol to be support <END>
<BEG> returns the select subprotocol <END>
<BEG> performs a md5 hash on the specify data param data the data to hash return the hash data <END>
<BEG> performs base64 encode on the specify data param data the data to encode return an encoded string contain the data <END>
<BEG> generates a pseudo-random number param minimum the minimum allowable value param maximum the maximum allowable value return a pseudo-random number <END>
<BEG> return value for http header 'sec-websocket-version ' <END>
<BEG> returns a { link protocoldetectionresult } that signal that more data be need to detect the protocol <END>
<BEG> returns a { link protocoldetectionresult } that signal the data be invalid for the protocol <END>
<BEG> sets the current state of this decoder <END>
<BEG> returns username that need to be authenticate return username that need to be authenticate <END>
<BEG> returns the { link socksauthstatus } of this { link socksauthresponse } return the { link socksauthstatus } of this { link socksauthresponse } <END>
<BEG> convert numeric ipv6 to compress format <SEG> where the long sequence of 0 's with 2 or more 0 's be replace with : : <END>
<BEG> converts numeric ipv6 to standard non-compressed format <END>
<BEG> returns the list < { link socksauthscheme } > of this { link socksinitrequest } return the list < { link socksauthscheme } > of this { link socksinitrequest } <END>
<BEG> returns sock request type return sock request type <END>
<BEG> reads a big-endian 31-bit integer from the buffer <END>
<BEG> returns { code true } if id be for a server initiate stream or ping <END>
<BEG> validate a spdy header name <END>
<BEG> hasreceivedreply and receivedreply be only call from channelread no need to synchronize access to the streamstate <END>
<BEG> returns the { link loglevel } that this handler use to log <END>
<BEG> returns a string which contain all detail to log the { link bytebuf } <END>
<BEG> the application level protocol support <END>
<BEG> tests if the specify key-value pair have be cache in java-to-openssl cache <END>
<BEG> convert from openssl cipher suite name convention to java cipher suite name convention <END>
<BEG> return the < a href= http : www openssl org doc manmaster apps verify html > error code < a > to use <END>
<BEG> returns the { link sslengine } which be use by this handler <END>
<BEG> return the { link future } that will get notify if the inbound of the { link sslengine } be closed <END>
<BEG> returns { code true } if the give { link bytebuf } be encrypted <END>
<BEG> performs tls renegotiation <END>
<BEG> issues an initial tls handshake once connect when use in client-mode <END>
<BEG> return { code true } if the handshake be successful <END>
<BEG> return the { link throwable } if { link # issuccess } return { code false } and so the handshake fail <END>
<BEG> returns the generated x 509 certificate file in pem format <END>
<BEG> returns the generated x 509 certificate <END>
<BEG> returns the generated rsa private key <END>
<BEG> deletes the generated x 509 certificate file and rsa private key file <END>
<BEG> returns the offset in the file where the transfer begin <END>
<BEG> returns the offset in the file where the transfer will end <END>
<BEG> continues to fetch the chunk from the input <END>
<BEG> return the readeridletime that be give when instance this class in millisecond <END>
<BEG> return the index to be use by the trafficshapinghandler to manage the user define writability <END>
<BEG> change the underlying limitation <END>
<BEG> change the check interval <END>
<BEG> < p > note the change will be take a best effort <SEG> mean that all already schedule traffic will not be change <SEG> but only apply to new traffic < p > < p > so the expected usage of this method be to be use not too often <SEG> accordingly to the traffic shape configuration < p > param writelimit the writelimit to set <END>
<BEG> param checkinterval the interval in m between each step check to set <SEG> default value beeing 1000 m <END>
<BEG> < p > note the change will be take a best effort <SEG> mean that all already schedule traffic will not be change <SEG> but only apply to new traffic < p > < p > so the expected usage of this method be to be use not too often <SEG> accordingly to the traffic shape configuration < p > param maxtime max delay in wait <SEG> shall be less than time out in related protocol <END>
<BEG> return the max delay in wait to prevent time out <END>
<BEG> < p > note the change will be take a best effort <SEG> mean that all already schedule traffic will not be change <SEG> but only apply to new traffic < p > < p > so the expected usage of this method be to be use not too often <SEG> accordingly to the traffic shape configuration < p > param maxwritedelay the maximum write delay in m in the buffer allow before write suspension be set <END>
<BEG> < p > note that this limit be a best effort on memory limitation to prevent out of memory exception <END>
<BEG> called each time the accounting be compute from the trafficcounters <END>
<BEG> return the current trafficcounter if channel be still connect <END>
<BEG> return current size in byte of the write buffer <END>
<BEG> start the monitoring process <END>
<BEG> create the global trafficcounter <END>
<BEG> return the current slow down factor <END>
<BEG> param maxdeviation the maximum deviation to allow during computation of average <SEG> default deviation be 0 1 <SEG> so + -10 % of the desired bandwidth <END>
<BEG> return the global size of the buffer for all queue <END>
<BEG> param newwritelimit channel write limit param newreadlimit channel read limit <END>
<BEG> return channel write limit <END>
<BEG> param writelimit channel write limit <END>
<BEG> release all internal resource of this instance <END>
<BEG> to allow for instance doaccounting to use the trafficcounter per channel <END>
<BEG> return the maxglobalwritesize default value be 400 mb <END>
<BEG> returns a cached thread-local { link charsetencoder } for the specify { link charset } <END>
<BEG> cancel all schedule task <END>
<BEG> return the { link runnable } which be ready to be execute with the give { code nanotime } <END>
<BEG> return the nanosecond when the next scheduled task be ready to be run or { code -1 } if no task be schedule <END>
<BEG> returns { code true } if a scheduled task be ready for process <END>
<BEG> return the { link eventexecutor } which be use by this { link completefuture } <END>
<BEG> do deadlock check <END>
<BEG> returns the current value for the specify thread local map <END>
<BEG> set the value for the specify thread local map <END>
<BEG> returns { code true } if and only if this thread-local variable be set <END>
<BEG> take the next { link runnable } from the task queue and so will block if no task be currently present <END>
<BEG> waits until the worker thread of this executor have no task leave in it task queue and terminate itself <END>
<BEG> return the number of { link eventexecutor } this implementation use <END>
<BEG> return a safe-copy of all of the child of this group <END>
<BEG> adds a mapping that map the specify optionally wildcard host name to the specify output value <END>
<BEG> creates a new instance of immutable { link domainnamemapping } attempts to add new mapping to the result object will cause { link unsupportedoperationexception } to be throw return new { link domainnamemapping } instance <END>
<BEG> simple function to match < a href= http : en wikipedia org wiki wildcard_dns_record > dns wildcard < a > <END>
<BEG> idna ascii conversion and case normalization <END>
<BEG> access a value in this { link charsequence } <END>
<BEG> create a new { link string } from the give start to end <END>
<BEG>  < br > < p > implementation notes : < br > this be an o n operation a we run through all the node and count them < br > see java util queue # size <END>
<BEG> param index desirable element index param mask return the offset in byte within the array for a give index <END>
<BEG> an ordered store store + storestore barrier of an element to a give offset param buffer this buffer param offset compute via { link concurrentcirculararrayqueue # calcelementoffset long } param e an orderly kitty <END>
<BEG> is this logger instance enable for the finest level ? <END>
<BEG> log a message object at level finest <END>
<BEG> log a message at level finest accord to the specify format and argument <END>
<BEG> log an exception throwable at level finest with an accompanying message <END>
<BEG> is this logger instance enable for level severe ? <END>
<BEG> fast method of find the next power of 2 great than or equal to the supply value <END>
<BEG> determine if the request { code index } and { code length } will fit within { code capacity } <END>
<BEG> compare to { code long } value <END>
<BEG> sets the element this node contain to { code null } so that the node can be use a a tombstone <END>
<BEG> loads the first available library in the collection with the specify { link classloader } <END>
<BEG> load the give library with the specify { link java lang classloader } <END>
<BEG> checks that the give argument be not null <END>
<BEG> clear and recycle this instance <END>
<BEG> fails the underlie { link promise } with the give cause and reycle this instance <END>
<BEG> recycle this instance and return the { link promise } <END>
<BEG> raises an exception bypass compiler check for checked exception <END>
<BEG> try to deallocate the specified direct { link bytebuffer } <END>
<BEG>  < br > implementation notes : < br > offer be allow from a single thread < br > offer allocate a new node hold the offer value and : < ol > < li > sets that node a the producernode next < li > sets the new node a the producernode < ol > from this follow that producernode next be always null and for all other node node next be not null <END>
<BEG>  < br > implementation notes : < br > poll be allow from a single thread < br > poll read the next node from the consumernode and : < ol > < li > if it be null <SEG> the queue be empty <END>
<BEG> try to call { link referencecounted # retain } if the specified message implement { link referencecounted } <END>
<BEG> returns { code true } if resource leak detection be enable <END>
<BEG> creates a new { link resourceleak } which be expect to be close via { link resourceleak # close } when the related resource be deallocated <END>
<BEG> schedules the specify { code task } to run when the specify { code thread } dy <END>
<BEG> cancels the task schedule via { link # watch thread <SEG> runnable } <END>
<BEG> waits until the thread of this watcher have no thread to watch and terminate itself <END>
<BEG> invoked as soon a receive be call and before a message be actually retrieve <END>
<BEG> the http proxy host name and port number separate by a colon <SEG> such a foo com:8080 <END>
<BEG> public int gettimeout { return timeout ; } <END>
<BEG> finish generate the benchmark <END>
<BEG> compute the parameter space give by { code param } annotation and add all them to the group <END>
<BEG> make any consume data begone <END>
<BEG> answers the subgroup index <END>
<BEG> answers the number of thread participate in the run <END>
<BEG> answers the thread sub-index in current group <END>
<BEG> helper method for create a reader for the list file <END>
<BEG> gets all micro benchmark from the list <SEG> sort <END>
<BEG> param command command argument list return the compiler hint file specify by the command <END>
<BEG> we need to generate a compiler hint file such that it include : < ul > < li > no compile command file be specify and no hotspotrc file be available <SEG> then do jmh hint only < li > no compile command file be specify and hotspotrc file be available <SEG> then do jmh hint + hotspotrc < li > 1 to n compile command file be specify <SEG> then do jmh hint + all specified hint in file < ul > < p > this be a departure from default jvm behavior a the jvm would normally just take the last hint file and ignore the rest <END>
<BEG> report our late status to the host vm <SEG> and say goodbye <END>
<BEG> param unit timeunit to use return request loop duration in the requested unit <END>
<BEG> enumerates all method in hierarchy <END>
<BEG> make the collection of class name denser <END>
<BEG> creates the temp file <SEG> and retain it as long a the reference to it be reachable <END>
<BEG> creates the temp file with give suffix <END>
<BEG> helper method for extract a give resource to file param name name of the resource return a file point to the extract resource throw ioexception if thing go crazy <END>
<BEG> create a temporary file see { link file # createtempfile string <SEG> string } and fill it with the give line <END>
<BEG> adds an output stream to drain the output to <END>
<BEG> produce empty option param < t > type return empty option <END>
<BEG> wrap the exist value in option <END>
<BEG> return the version <SEG> build date and update hint <END>
<BEG> return return the default { link iresultsconsumer } <END>
<BEG> include a give method in the chart <END>
<BEG> update max history step <END>
<BEG> update min max field <END>
<BEG> converts an argument to a string <SEG> use by { link abstractmatcher # tostring object [ ] } <END>
<BEG> checks whether an expected argument array match an actual argument array <END>
<BEG> creates a mock object that implement the give interface <SEG> order checking be enable by default <END>
<BEG> creates a control <SEG> order checking be enable by default <END>
<BEG> creates a control <SEG> order checking be disable by default <SEG> and the mock object create by this control will return < code > 0 < code > <SEG> < code > null < code > or < code > false < code > for unexpected invocation <END>
<BEG> returns the expectation setter for the last expected invocation in the current thread <END>
<BEG> expects a byte argument great than the give value <END>
<BEG> expects an object implement the give class <END>
<BEG> expects a boolean that match both give expectation <END>
<BEG> expects a boolean that match one of the give expectation <END>
<BEG> expects a boolean that be equal to the give value <END>
<BEG> expects a boolean array that be equal to the give array <SEG> i e <END>
<BEG> expects null <END>
<BEG> expects not null <END>
<BEG> expects a string that contain a substring that match the give regular expression <END>
<BEG> expects a string that end with the give suffix <END>
<BEG> expects an object that be the same a the give value <END>
<BEG> creates a mock control object for the specified interface <END>
<BEG> records that the mock object will expect the last method call once <SEG> and will react by return silently <END>
<BEG> records that the mock object will expect the last method call once <SEG> and will react by throw the provide throwable <END>
<BEG> records that the mock object will expect the last method call once <SEG> and will react by return the provided return value <END>
<BEG> records that the mock object will expect the last method call a fixed number of time <SEG> and will react by return silently <END>
<BEG> records that the mock object will by default allow the last method specify by a method call <SEG> and will react by throw the provide throwable <END>
<BEG> sets the argumentsmatcher for the last method call on the mock object <END>
<BEG> records that the mock object will expect the last method call between < code > mincount < code > and < code > maxcount < code > time <SEG> and will react by return silently <END>
<BEG> records that the mock object will expect the last method call between < code > mincount < code > and < code > maxcount < code > time <SEG> and will react by throw the provide throwable <END>
<BEG> records that the mock object will expect the last method call between < code > mincount < code > and < code > maxcount < code > time <SEG> and will react by return the provided return value <END>
<BEG> sets the default argumentsmatcher for all method of the mock object <END>
<BEG> same a { link mockcontrol # setreturnvalue object } <END>
<BEG> same a { link mockcontrol # setthrowable throwable <SEG> range } <END>
<BEG> same a { link mockcontrol # setthrowable throwable <SEG> int <SEG> int } <END>
<BEG> creates a mock object that implement the give interface <SEG> order checking be disable by default <SEG> and the mock object will return { code 0 } <SEG> { code null } or { code false } for unexpected invocation <END>
<BEG> create a mock builder allow to create a partial mock for the give class or interface <END>
<BEG> creates a mock object <SEG> of the requested type <SEG> that implement the give interface or extend the give class <END>
<BEG> creates a mock object <SEG> of the request type and name <SEG> that implement the give interface or extend the give class < p > < b > note : < b > this be the old version of { link # mock string <SEG> mocktype <SEG> class } <SEG> which be more completion friendly param name the name of the mock object <END>
<BEG> creates a control of the request type <END>
<BEG> expects a comparable argument great than or equal the give value <END>
<BEG> create a new capture instance that will keep only the last captured value <END>
<BEG> expect any object but capture it for later use <END>
<BEG> resets the give mock object more exactly : the control of the mock object <END>
<BEG> resets the give mock object more exactly : the control of the mock object and turn them to a mock with nice behavior <END>
<BEG> verifies that all expectation be meet and that no unexpected call be perform on the mock object <END>
<BEG> verifies that all expectation be meet <END>
<BEG> verifies that no unexpected call be perform <END>
<BEG> returns the argument of the current mock method call <SEG> if inside an { code ianswer } callback - be careful here <SEG> reorder parameter of method change the semantics of your test <END>
<BEG> get the current value for an easymock property param key key for the property return the property value <END>
<BEG> set a property to modify the default easymock behavior <END>
<BEG> creates a mock object of the requested type that implement the give interface or extend the give class param type the type of the mock to be create <END>
<BEG> creates a mock object of the requested type that implement the give interface or extend the give class param name the name of the mock object <END>
<BEG> verifies all register mock object have their expectation meet and that no unexpected call be perform <END>
<BEG> verifies all register mock object have their expectation meet <END>
<BEG> verifies that no register mock object have unexpected call <END>
<BEG> will return the class that be mock if it 's a mock or { code null } otherwise <END>
<BEG> create mock of the request type from this builder <END>
<BEG> create a strict mock from this builder <END>
<BEG> create mock from the provided mock control use the argument pass to the builder <END>
<BEG> create a named mock of the request type from this builder <END>
<BEG> create a name strict mock from this builder <END>
<BEG> create name mock from the provided mock control use the argument pass to the builder <END>
<BEG> returns the current jvm a specify in the system property return current jvm <END>
<BEG> returns a class instantiator suitable for the current jvm return a class instantiator usable on the current jvm <END>
<BEG> allow to override the default instantiator <END>
<BEG> set back the default instantiator <END>
<BEG> try to instantiate a class without use a special constructor <END>
<BEG> gets the mock instance for this injection <END>
<BEG> gets the annotation describe this mock instance <END>
<BEG> change the status to indicate that this injection be match to some target <END>
<BEG> is this injection match by some injection target ? <END>
<BEG> add an { link injection } to this container <END>
<BEG> add a field that should be treat a a test subject injection target <END>
<BEG> get field identify a test subject to which injection of mock should be attempt <END>
<BEG> get all injection have fieldname qualifier <END>
<BEG> get all injection that do not have fieldname qualifier <END>
<BEG> can the give injection be apply to this injectiontarget ? <END>
<BEG> perform the injection against the give object set the matched status of the injection when successful <END>
<BEG> get the field to which injection will be assign <END>
<BEG> inject a mock to every field annotate with { link mock } on the class pass in parameter <END>
<BEG> attempt to find a { link method } on the supplied class with the supply name and parameter type <END>
<BEG> remove threadlocalmap entry of object load through the give classloader a they prevent garbage collection of this classloader while the thread that hold the threadlocalmap be alive <END>
<BEG> runs all command that be currently pending <END>
<BEG> runs execute command until there be no command pending execution <SEG> but do not tick time forward <END>
<BEG> runs time forward by a give duration <SEG> execute any command schedule for execution during that time period <SEG> and any background task spawn by the scheduled task <END>
<BEG> runs all command schedule to be execute immediately but do not tick time forward <END>
<BEG> runs the next command schedule to be execute immediately <END>
<BEG> reports whether scheduler be idle : have no command pending immediate execution <END>
<BEG> a timeout that never time out <END>
<BEG> sets the value of this field method item <END>
<BEG> sets the type <SEG> name <SEG> desc <SEG> and index of the constant or invoke dynamic item <END>
<BEG> sets the type and hash code of this method handle item <END>
<BEG> sets the name and type descriptor of this item <END>
<BEG> sets the type and bytecode offset of this uninitialized type table item <END>
<BEG> an answer that directly forward the call to the delegate <END>
<BEG> argument great than or equal the give value <END>
<BEG> byte argument great than or equal to the give value <END>
<BEG> comparable argument less than or equal the give value detail <END>
<BEG> comparable argument great than the give value <END>
<BEG> string argument that contain a substring that match the give regular expression <END>
<BEG> object array argument that be equal to the give array <SEG> i e <END>
<BEG> boolean argument that match both give matcher <END>
<BEG> byte argument that match both give argument matcher <END>
<BEG> boolean argument that match any of the give argument matcher <END>
<BEG> object argument that do not match the give argument matcher <END>
<BEG> double argument that have an absolute difference to the give value that be less than the give delta detail <END>
<BEG> use it to capture the argument <END>
<BEG> by default this method decamelizes matcher name to promote meaningful name for matcher <END>
<BEG> returns the size of this annotation writer list <END>
<BEG> finds the basic block that belong to a give subroutine <SEG> and mark these block a belonging to this subroutine <END>
<BEG> returns the symbolic stack frame for each instruction of the last recently analyze method <END>
<BEG> constructs a new frame that be identical to the give frame <END>
<BEG> creates a control flow graph edge <END>
<BEG> returns < tt > true < tt > if the give instruction belongs to this list <END>
<BEG> reset all label in the instruction list <END>
<BEG> visits a non standard attribute of this class <SEG> field or method <END>
<BEG> visits the end of this class <SEG> field or method <END>
<BEG> returns the text construct by this visitor <END>
<BEG> appends a quoted string to a give buffer <END>
<BEG> prints the asm code that generate the give attribute <END>
<BEG> prints the asm code to end the visit <END>
<BEG> checks a give class <END>
<BEG> checks that the give access flag do not contain invalid flag <END>
<BEG> prints a disassembled view of the give attribute <END>
<BEG> appends an internal name <SEG> a type descriptor or a type signature to { link # buf buf } <END>
<BEG> prints a disassembled view of the give class to the standard output <END>
<BEG> see original { link mockito # when object } since 1 8 0 <END>
<BEG> bdd style verification of mock behavior <END>
<BEG> non-javadoc see org mockito imockitoconfiguration # getreturnvalues <END>
<BEG> instantiate { link argumentcaptor } a field annotate by & # 64 ; captor <END>
<BEG> process the field of the test instance and create mocks <SEG> spies <SEG> captors and inject them on field annotate & # 64 ; injectmocks <END>
<BEG> create a new configuration setup for a field param field field need mock injection param ofinstance instance own the < code > field < code > return new configuration builder <END>
<BEG> create a new configuration setup for field param field fields need mock injection param ofinstance instance own the < code > field < code > return new configuration builder <END>
<BEG> add the field annotate by { link injectmocks } param mockdependentfields set of field annotate by { link injectmocks } <END>
<BEG> add the scanned and prepared mock instance to the give collection <END>
<BEG> instantiates a mock on a field annotate by { link mock } <END>
<BEG> scans the classpath for give plugintype <END>
<BEG> equivalent to { link java util serviceloader # load } but without require java 6 android 2 3 gingerbread <END>
<BEG> the implementation of the stack trace cleaner <END>
<BEG> returns the implementation of the mock maker available for the current runtime <END>
<BEG> return true if the input object be a delegatingmethod which have an internal method which be equal to the internal method of this delegatingmethod <SEG> or if the input object be a method which be equal to the internal method of this delegatingmethod <END>
<BEG> by szczepan faber <SEG> create at : 7 29 12 <END>
<BEG> get all invocation from mock <END>
<BEG> similar mean the same method name <SEG> same mock <SEG> unverified and : if argument be the same can not be overload <END>
<BEG> finds all unused stub for give mock param mock <END>
<BEG> < p > test if two < code > object < code > s be equal use their < code > equal < code > method < p > param lhs the left hand object param rhs the right hand object return equalsbuilder - use to chain call <END>
<BEG> < p > test if two < code > long < code > s be equal <END>
<BEG> < p > test if two < code > int < code > s be equal < p > param lhs the left hand < code > int < code > param rhs the right hand < code > int < code > return equalsbuilder - use to chain call <END>
<BEG> < p > test if two < code > float < code > s be equal byt test that the pattern of bit return by doubletolong be equal < p > < p > this handle nans <SEG> infinities <SEG> and < code > -0 0 < code > < p > < p > it be compatible with the hash code generate by < code > hashcodebuilder < code > < p > param lhs the left hand < code > float < code > param rhs the right hand < code > float < code > return equalsbuilder - use to chain call <END>
<BEG> < p > performs a deep comparison of two < code > object < code > array < p > < p > this also will be call for the top level of multi-dimensional <SEG> rag <SEG> and multi-typed array < p > param lhs the left hand < code > object [ ] < code > param rhs the right hand < code > object [ ] < code > return equalsbuilder - use to chain call <END>
<BEG> < p > returns < code > true < code > if the field that have be check be all equal < p > return boolean <END>
<BEG> non-javadoc see org mockito argumentmatcher # match java lang object <END>
<BEG> non-javadoc see org mockito argumentmatcher # describeto org hamcrest description <END>
<BEG> non-javadoc see org mockito internal progress argumentmatcherstorage # pulllocalizedmatchers <END>
<BEG> non-javadoc see org mockito stub answer # answer org mockito invocation invocationonmock <END>
<BEG> non-javadoc see org mockito internal util logger # print java lang object <END>
<BEG> writes text to file <END>
<BEG> indicates if the give class be primitive type or a primitive wrapper <END>
<BEG> returns the boxed default value for a primitive or a primitive wrapper <END>
<BEG> safely disable access <END>
<BEG> change the accessibleobject accessibility and return true if accessibility be change <END>
<BEG> set the value to the property represent by this { link beanpropertysetter } param value the new value to pass to the property setter return < code > true < code > if the value have be inject <SEG> < code > false < code > otherwise throw runtimeexception can be throw if the setter throw an exception <SEG> if the setter be not accessible or <SEG> if < code > reportnosetterfound < code > and setter could not be find <END>
<BEG> returns the no arg constructor of the type if any <END>
<BEG> indicate wether the field be create during the process or not <END>
<BEG> indicate wether the field be create use constructor args <END>
<BEG> returns the class of the actual instance in the field <END>
<BEG> initialize field if not initialize and return the actual instance <END>
<BEG> instance field declare in the class and superclass of the give instance <END>
<BEG> instance field declare in the class of the give instance <END>
<BEG> accept field annotate by the give annotation <END>
<BEG> return returns extra interface < strong > if relevant < strong > <SEG> otherwise empty list <END>
<BEG> return returns an array with the raw type of { link # extrainterfaces } < strong > if relevant < strong > <END>
<BEG> return returns true if metadata know about extra-interfaces { link # extrainterfaces } < strong > if relevant < strong > <END>
<BEG> return actual type argument match the type variable of the raw type represent by this { link genericmetadatasupport } instance <END>
<BEG> create an new instance of { link genericmetadatasupport } infer from a { link type } <END>
<BEG> param text to have the first line remove return less first line <END>
<BEG> informs whether the timer be still count down <END>
<BEG> starts the timer count down <END>
<BEG> suspiciously not match argument be those that do n't match <SEG> the tostring representation be the same but type be different <END>
<BEG> initializes object annotate with mockito annotation for give testclass : & # 064 ; { link org mockito mock } <SEG> & # 064 ; { link spy } <SEG> & # 064 ; { link captor } <SEG> & # 064 ; { link injectmocks } < p > see examples in javadoc for { link mockitoannotations } class <END>
<BEG> returns an answer after a delay with a defined length <END>
<BEG> creates an answer from a functional interface - allow for a strongly type answer to be create ideally in java 8 param answer interface to the answer - which be expect to return something param < t > return type param < a > input parameter type 1 return the answer object to use since 2 1 0 <END>
<BEG> creates an answer from a functional interface - allow for a strongly type answer to be create ideally in java 8 param answer interface to the answer - which be expect to return something param < t > return type param < a > input parameter type 1 param < b > input parameter type 2 return the answer object to use since 2 1 0 <END>
<BEG> creates an answer from a functional interface - allow for a strongly type answer to be create ideally in java 8 param answer interface to the answer - a void method param < a > input parameter type 1 param < b > input parameter type 2 return the answer object to use since 2 1 0 <END>
<BEG> creates an answer from a functional interface - allow for a strongly type answer to be create ideally in java 8 param answer interface to the answer - which be expect to return something param < t > return type param < a > input parameter type 1 param < b > input parameter type 2 param < c > input parameter type 3 return the answer object to use since 2 1 0 <END>
<BEG> creates an answer from a functional interface - allow for a strongly type answer to be create ideally in java 8 param answer interface to the answer - a void method param < a > input parameter type 1 param < b > input parameter type 2 param < c > input parameter type 3 return the answer object to use since 2 1 0 <END>
<BEG> creates an answer from a functional interface - allow for a strongly type answer to be create ideally in java 8 param answer interface to the answer - which be expect to return something param < t > return type param < a > input parameter type 1 param < b > input parameter type 2 param < c > input parameter type 3 param < d > input parameter type 4 return the answer object to use since 2 1 0 <END>
<BEG> creates an answer from a functional interface - allow for a strongly type answer to be create ideally in java 8 param answer interface to the answer - which be expect to return something param < t > return type param < a > input parameter type 1 param < b > input parameter type 2 param < c > input parameter type 3 param < d > input parameter type 4 param < e > input parameter type 5 return the answer object to use since 2 1 0 <END>
<BEG> creates an answer from a functional interface - allow for a strongly type answer to be create ideally in java 8 param answer interface to the answer - a void method param < a > input parameter type 1 param < b > input parameter type 2 param < c > input parameter type 3 param < d > input parameter type 4 param < e > input parameter type 5 return the answer object to use since 2 1 0 <END>
<BEG> creates an answer from a functional interface - allow for a strongly type answer to be create idiomatically in java 8 param answer interface to the answer - which be expect to return something param < t > return type param < a > input parameter type 1 param < b > input parameter type 2 param < c > input parameter type 3 param < d > input parameter type 4 param < e > input parameter type 5 param < f > input parameter type 6 return the answer object to use since 2 26 0 <END>
<BEG> creates an answer from a functional interface - allow for a strongly type answer to be create idiomatically in java 8 param answer interface to the answer - a void method param < a > input parameter type 1 param < b > input parameter type 2 param < c > input parameter type 3 param < d > input parameter type 4 param < e > input parameter type 5 param < f > input parameter type 6 return the answer object to use since 2 26 0 <END>
<BEG> matches anything <SEG> include < code > null < code > <END>
<BEG> matches any object of give type <SEG> exclude null <END>
<BEG> < code > object < code > argument that implement the give class <END>
<BEG> any vararg <SEG> mean any number and value of argument <END>
<BEG> any < code > boolean < code > or < strong > non-null < strong > < code > boolean < code > < p > since mockito 2 1 0 <SEG> only allow value < code > boolean < code > <SEG> thus < code > null < code > be not anymore a valid value <END>
<BEG> any < code > byte < code > or < strong > non-null < strong > < code > byte < code > <END>
<BEG> any int or < strong > non-null < strong > < code > integer < code > <END>
<BEG> any < strong > non-null < strong > < code > string < code > < p > since mockito 2 1 0 <SEG> only allow non-null < code > string < code > <END>
<BEG> any < strong > non-null < strong > < code > list < code > <END>
<BEG> object argument that be equal to the give value <END>
<BEG> object argument that be reflection-equal to the give value with support for exclude select field from a class <END>
<BEG> object argument that be the same a the give value <END>
<BEG> < code > null < code > argument <END>
<BEG> not < code > null < code > argument <SEG> not necessary of the give class <END>
<BEG> < code > string < code > argument that match the give regular expression <END>
<BEG> < code > string < code > argument that end with the give suffix <END>
<BEG> allows create custom argument matcher <END>
<BEG> allows create custom < code > char < code > argument matcher <END>
<BEG> see original { link mockito # dothrow throwable [ ] } since 2 1 0 <END>
<BEG> returns the instantiator provider available for the current runtime <END>
<BEG> custom implementation of the < code > writereplace < code > method for serialization <END>
<BEG> todo : when mockitodebugger be delete <SEG> delete this implementation <SEG> too <END>
<BEG> compares invocation base on the sequence number <END>
<BEG> finds all unused stub for give mock param mock full list of mock <END>
<BEG> enables reset the strictness to desire level <END>
<BEG> indicates that stub argument mismatch be report <END>
<BEG> gets all unused stubbings for give set of mock object <SEG> in order <END>
<BEG> attempts to provide more descriptive tostring for give matcher <END>
<BEG> prints give value so that it be neatly readable by human <END>
<BEG> print value in a nice format <SEG> e g <END>
<BEG> construct an answer from a two parameter answer interface param answer answer interface param < t > return type param < a > input parameter 1 type return a new answer object <END>
<BEG> construct an answer from a two parameter answer interface param answer answer interface param < t > return type param < a > input parameter 1 type param < b > input parameter 2 type return a new answer object <END>
<BEG> construct an answer from a two parameter answer interface param answer answer interface param < a > input parameter 1 type param < b > input parameter 2 type return a new answer object <END>
<BEG> construct an answer from a three parameter answer interface param answer answer interface param < t > return type param < a > input parameter 1 type param < b > input parameter 2 type param < c > input parameter 3 type return a new answer object <END>
<BEG> construct an answer from a three parameter answer interface param answer answer interface param < a > input parameter 1 type param < b > input parameter 2 type param < c > input parameter 3 type return a new answer object <END>
<BEG> construct an answer from a four parameter answer interface param answer answer interface param < t > return type param < a > input parameter 1 type param < b > input parameter 2 type param < c > input parameter 3 type param < d > input parameter 4 type return a new answer object <END>
<BEG> construct an answer from a four parameter answer interface param answer answer interface param < a > input parameter 1 type param < b > input parameter 2 type param < c > input parameter 3 type param < d > input parameter 4 type return a new answer object <END>
<BEG> construct an answer from a five parameter answer interface param answer answer interface param < t > return type param < a > input parameter 1 type param < b > input parameter 2 type param < c > input parameter 3 type param < d > input parameter 4 type param < e > input parameter 5 type return a new answer object <END>
<BEG> construct an answer from a five parameter answer interface param answer answer interface param < a > input parameter 1 type param < b > input parameter 2 type param < c > input parameter 3 type param < d > input parameter 4 type param < e > input parameter 5 type return a new answer object <END>
<BEG> construct an answer from a five parameter answer interface param answer answer interface param < a > input parameter 1 type param < b > input parameter 2 type param < c > input parameter 3 type param < d > input parameter 4 type param < e > input parameter 5 type param < f > input parameter 6 type return a new answer object <END>
<BEG> returns { code true } be the return type be { link void } or represent the pseudo-type to the keyword { code void } <END>
<BEG> adds new stub answer and return the invocation matcher the answer be add to <END>
<BEG> sets the answer declare with 'doanswer ' style <END>
<BEG> stubbings in descend order <SEG> most recent first <END>
<BEG> marks the stub a use by the pass invocation <END>
<BEG> decides if the stubbing should be report a unused <END>
<BEG> returns first element of provide iterable or fails fast when iterable be empty <END>
<BEG> param key the key of the entry <END>
<BEG> creates a default value <END>
<BEG> return the clean thread or { code null } if no such thread be set <END>
<BEG> returns the approximate size of this map where the returned number be at least as big a the actual number of entry <END>
<BEG> creates an empty optional use reflection to stay backwards-compatible with old jdks <END>
<BEG> registers the type variable for the give type and all of it superclass and superinterfaces <END>
<BEG> set the give value to the field of this instance <END>
<BEG> return a new collection with the field sort first by name <SEG> then with any field move after their supertypes <END>
<BEG> joins strings with eol character param start the start string param lineprefix the prefix for each line to be join param line collection to join <END>
<BEG> verification mode will prepend the specified failure message if verification fail with the give implementation <END>
<BEG> helper method for succinctly construct constraint array <END>
<BEG> verify that there be no object leave within the list <END>
<BEG> adds { code header } a an http header <END>
<BEG> removes all header name { code name } <SEG> then add a new header with the name and value <END>
<BEG> returns an input stream contain the raw http payload <END>
<BEG> sets the response body to { code body } <SEG> chunk every { code maxchunksize } byte <END>
<BEG> returns a url for connect to this server <END>
<BEG> serve request with https rather than otherwise <END>
<BEG> awaits the next http request <SEG> remove it <SEG> and return it <END>
<BEG> returns the number of http request receive thus far by this server <END>
<BEG> scripts { code response } to be return to a request make in sequence <END>
<BEG> starts the server <SEG> serve all enqueued request <SEG> and shut the server down <END>
<BEG> sets the dispatcher use to match incoming request to mock response <END>
<BEG> returns the size of the chunk of this request 's body <SEG> or an empty list if the request 's body be empty or unchunked <END>
<BEG> returns the total size of the body of this post request before truncation <END>
<BEG> returns the index of this request on it http connection <END>
<BEG> returns the connection 's ssl protocol like { code tlsv1 } <SEG> { code sslv3 } <SEG> { code none } or null if the connection do n't use ssl <END>
<BEG> add package or class to ignore <END>
<BEG> add class that will be load by the mock classloader <SEG> i e <END>
<BEG> removes an object from the mockrepository if it exist <END>
<BEG> remove a fully qualified class name for a class that should no longer have it static initializers suppress <END>
<BEG> check whether or not a class with the fully qualified name should have it static initializers suppress <END>
<BEG> return all class that should be automatically replay or verify <END>
<BEG> add class that should be automatically replay or verify <END>
<BEG> when a mock framework api need to store additional state not applicable for the other method <SEG> it may use this method to do so <END>
<BEG> retrieve state base on the supply key <END>
<BEG> add a method to suppress <END>
<BEG> add a field type to suppress <END>
<BEG> return { code true } if the < tt > method < tt > should be proxied <END>
<BEG> return { code true } if the < tt > method < tt > have a substitute return value <END>
<BEG> return the substitute return value for a particular method <SEG> may be { code null } <END>
<BEG> set a substitute return value for a method <END>
<BEG> performs a wildcard match for the text and pattern provide <END>
<BEG> < p > whether this version of java be at least the version of java pass in < p > < p > for example : < br > { code myversion atleast javaversion java_1_4 } < p > param requiredversion the version to check against <SEG> not null return true if this version be equal to or great than the specified version <END>
<BEG> transforms the give string with a java version number to the corresponding constant of this enumeration class <END>
<BEG> < p > the string value be overridden to return the standard name < p > < p > for example <SEG> < code > 1 5 < code > < p > return the name <SEG> not null <END>
<BEG> used for demonstration of the ability to mock method from a private inner class <END>
<BEG> a class use to test the functionality to mock private method that be also final <END>
<BEG> we imagine that this method require the library to execute <SEG> but we want to test it anyway in separation <END>
<BEG> this method be just here to check if it work to execute several test with the same test suite class loader <END>
<BEG> the delay add to the response via the stub or global configuration <END>
<BEG> the amount of time take to send the response to the client <END>
<BEG> the total request time from start to finish <SEG> minus add delay <END>
<BEG> the total request time include add delay <END>
<BEG> if true <SEG> this enable external sort capability <SEG> otherwise $ sort produce an error if the operation consume 10 percent or more of ram <END>
<BEG> the size of batch to use when iterate over result <END>
<BEG> the mode of output for this configuration <END>
<BEG> gets the maximum execution time for the aggregation command <END>
<BEG> gets whether to bypass document validation <SEG> or null if unspecified <END>
<BEG> returns the collation option return the collation option since 3 4 mongodb server release 3 4 <END>
<BEG> gets the mechanism by it name <END>
<BEG> gets the key vault setting <END>
<BEG> gets the map of kms provider property <END>
<BEG> gets the map of namespace to local json schema <END>
<BEG> gets the extra option that control the behavior of auto-encryption component <END>
<BEG> copies this instance into a new object <END>
<BEG> parses a string in mongodb extended json format to a { code basicdbobject } <END>
<BEG> add a key value pair to this object param key the field name param val the field value return this basicdbobject with the new value add <END>
<BEG> gets a json representation of this document param writersettings the json writer setting to use when encode param encoder the basicdbobject codec instance to encode the document with return a json representation of this document throw org bson codecs configuration codecconfigurationexception if the registry do not contain a codec for the document value <END>
<BEG> < p > returns a json serialization of this object < p > < p > the output will look like : { code { a :1 <SEG> b : [ x <SEG> y <SEG> z ] } } < p > return json serialization <END>
<BEG> creates a new instance which be a copy of this basicdbobject <END>
<BEG> appends the key value to the active object param key the field name param val the value of the field return { code this } so call can be chain <END>
<BEG> same a append param key the field name param val the value of the field return { code this } so call can be chain see # append string <SEG> object <END>
<BEG> pops the active object <SEG> which mean that the parent object become active return { code this } so call can be chain <END>
<BEG> gets the top level document <END>
<BEG> returns true if no key value be insert into the top level document <END>
<BEG> gets the id of the upserted item <END>
<BEG> sets whether all document match the query filter will be remove <END>
<BEG> sets the collation option < p > a null value represent the server default < p > param collation the collation option to use return this since 3 4 mongodb server release 3 4 <END>
<BEG> gets the index key return the index key <END>
<BEG> should the index should be create in the background param background true if should create the index in the background return this <END>
<BEG> should the index should be unique <END>
<BEG> if true <SEG> the index only reference document with the specified field return if the index should only reference document with the specified field <END>
<BEG> should the index only reference document with the specified field param sparse if true <SEG> the index only reference document with the specified field return this <END>
<BEG> gets the time to live for document in the collection param timeunit the time unit return the time to live for document in the collection mongodb driver manual tutorial expire-data ttl <END>
<BEG> sets the time to live for document in the collection param expireafter the time to live for document in the collection param timeunit the time unit return this mongodb driver manual tutorial expire-data ttl <END>
<BEG> sets the weighting object for use with a text index <END>
<BEG> gets the language for a text index <END>
<BEG> gets the name of the field that contain the language string <END>
<BEG> the text index version number <END>
<BEG> set the text index version number <END>
<BEG> gets the number of precision of the stored geohash value of the location data in 2d index <END>
<BEG> gets the low inclusive boundary for the longitude and latitude value for 2d index return the low inclusive boundary for the longitude and latitude value <END>
<BEG> sets the low inclusive boundary for the longitude and latitude value for 2d index param min the low inclusive boundary for the longitude and latitude value return this <END>
<BEG> gets the specify the number of unit within which to group the location value for geohaystack indexes return the specify the number of unit within which to group the location value for geohaystack indexes mongodb driver manual core geohaystack geohaystack indexes <END>
<BEG> sets the specify the number of unit within which to group the location value for geohaystack indexes param bucketsize the specify the number of unit within which to group the location value for geohaystack indexes return this mongodb driver manual core geohaystack geohaystack indexes <END>
<BEG> gets the storage engine option document for this index <END>
<BEG> get the filter expression for the document to be include in the index or null if not set return the filter expression for the document to be include in the index or null if not set mongodb server release 3 2 mongodb driver manual core index-partial partial indexes since 3 2 <END>
<BEG> sets the filter expression for the document to be include in the index param partialfilterexpression the filter expression for the document to be include in the index return this mongodb server release 3 2 mongodb driver manual core index-partial partial indexes since 3 2 <END>
<BEG> gets the wildcard projection of a wildcard index return the wildcard projection mongodb server release 4 2 since 3 10 <END>
<BEG> sets the wildcard projection of a wildcard index param wildcardprojection the wildcard projection return this mongodb server release 4 2 since 3 10 <END>
<BEG> gets the query filter for the update <END>
<BEG> gets whether this update will update all document match the filter <END>
<BEG> sets whether this will update all document match the query filter <END>
<BEG> gets whether this update will insert a new document if no document match the filter <END>
<BEG> sets the array filter option param arrayfilters the array filter <SEG> which may be null return this since 3 6 mongodb server release 3 6 <END>
<BEG> gets the name associate with the error code <END>
<BEG> sets the collation param collation the collation return this since 3 4 mongodb server release 3 4 <END>
<BEG> gets the array filter to apply to the update operation return the array filter <SEG> which may be null since 3 6 mongodb server release 3 6 <END>
<BEG> adds a request to replace one document in the collection that match the query with which this builder be create <END>
<BEG> the result of all successfully process write operation <END>
<BEG> the list of error <SEG> which will not be null <SEG> but may be empty if the write concern error be not null <END>
<BEG> the write concern error <SEG> which may be null in which case the list of error will not be empty <END>
<BEG> returns true if this be build an ordered bulk write request <END>
<BEG> sets whether to bypass document validation <END>
<BEG> add an insert request to the bulk operation param document the document to insert <END>
<BEG> start build a write request to add to the bulk write operation <END>
<BEG> specifies that the request be build should use the give array filter for an update <END>
<BEG> create a new gridfs bucket with the default { code 'fs ' } bucket name param database the database instance to use with gridfs return the gridfsbucket <END>
<BEG> create a new gridfs bucket with a custom bucket name param database the database instance to use with gridfs param bucketname the custom bucket name to use return the gridfsbucket <END>
<BEG> gets the revision to download identifier return the revision to download identifier <END>
<BEG> the length <SEG> in byte of this file return the length <SEG> in byte of this file <END>
<BEG> the size <SEG> in byte <SEG> of each data chunk of this file return the size <SEG> in byte <SEG> of each data chunk of this file <END>
<BEG> the date and time this file be add to gridfs return the date and time this file be add to gridfs <END>
<BEG> any additional metadata store along with the file return the metadata document or null <END>
<BEG> the content type of the file return the content type of the file deprecate content type information should be store the metadata document instead <END>
<BEG> the number of byte per chunk of this file <END>
<BEG> sets metadata to store alongside the filename in the file collection param metadata the metadata to be store return this <END>
<BEG> gets a field name for a $ group operation represent the sum of the value of the give expression when apply to all member of the group <END>
<BEG> gets a field name for a $ group operation represent the value of the give expression when apply to the first member of the group <END>
<BEG> gets a field name for a $ group operation represent the sample standard deviation of the value of the give expression when apply to all member of the group <END>
<BEG> creates a $ bucketauto pipeline stage param < texpression > the groupby expression type param groupby the criterion to group by param bucket the number of the bucket param option the optional value for the $ bucketauto stage return the $ bucketauto pipeline stage mongodb driver manual reference operator aggregation bucketauto $ bucketauto mongodb server release 3 4 since 3 4 <END>
<BEG> creates a $ project pipeline stage for the specified projection param projection the projection return the $ project pipeline stage see projections mongodb driver manual reference operator aggregation project $ project <END>
<BEG> creates a $ sort pipeline stage for the specified sort specification param sort the sort specification return the $ sort pipeline stage see sorts mongodb driver manual reference operator aggregation sort # sort-aggregation $ sort <END>
<BEG> creates a $ sortbycount pipeline stage for the specified filter param < texpression > the expression type param filter the filter specification return the $ sortbycount pipeline stage mongodb driver manual reference operator aggregation sortbycount $ sortbycount mongodb server release 3 4 since 3 4 <END>
<BEG> creates a $ skip pipeline stage param skip the number of document to skip return the $ skip pipeline stage mongodb driver manual reference operator aggregation skip $ skip <END>
<BEG> creates a facet pipeline stage param facets the facet to use return the new pipeline stage mongodb driver manual reference operator aggregation facet $ facet mongodb server release 3 4 since 3 4 <END>
<BEG> creates a $ unwind pipeline stage for the specified field name <SEG> which must be prefix by a { code ' $ ' } sign <END>
<BEG> creates a $ merge pipeline stage that merge into the specify collection use the specify option <END>
<BEG> creates a $ sample pipeline stage with the specified sample size param size the sample size return the $ sample pipeline stage mongodb driver manual reference operator aggregation sample $ sample mongodb server release 3 2 since 3 2 <END>
<BEG> return the output document definition <END>
<BEG> the definition of the output document in each bucket param output the output document definition return this <END>
<BEG> tries find the enum instance for the give value param value the value to search for return the enum instance <END>
<BEG> the name of the default bucket for value outside the defined bucket param name the bucket value return this <END>
<BEG> sets the bypass document level validation flag <END>
<BEG> returns a document containing just the _id of the change document <END>
<BEG> returns the identifier for the session associate with the transaction return the lsid <SEG> or null if not part of a multi-document transaction since 3 11 mongodb server release 4 0 <END>
<BEG> returns the changestreamfulldocument from the string value <END>
<BEG> returns the locale see < a href= http : userguide icu-project org locale > icu user guide - locale < a > return the locale <END>
<BEG> returns the case level value return the case level value <END>
<BEG> returns the collation case first value return the collation case first value <END>
<BEG> returns the collation strength return the collation strength <END>
<BEG> returns the numeric ordering <SEG> if true will order number base on numerical order and not collation order <END>
<BEG> returns the collation alternate return the alternate <END>
<BEG> returns the maxvariable < p > controls which character be affect by collection alternate { link collationalternate # shifted } < p > return the maxvariable <END>
<BEG> returns the normalization value < p > if true <SEG> normalizes text into unicode nfd < p > return the normalization <END>
<BEG> gets the hint string to apply <END>
<BEG> gets the number of document to skip <END>
<BEG> gets if auto-index be enabled return true if auto-index be enable deprecate this option be deprecate in mongodb 3 2 and remove in mongodb 4 0 <END>
<BEG> gets the maximum number of document allow in a capped collection <END>
<BEG> set whether the collection be cap <END>
<BEG> gets the maximum size in byte of a capped collection <END>
<BEG> sets whether the usepowerof2sizes allocation strategy be turn on for this collection <END>
<BEG> sets the storage engine option document default for the collection param storageengineoptions the storage engine option return this mongodb server release 3 0 <END>
<BEG> sets the index option default for the collection <END>
<BEG> gets the validation option for document be insert or update in a collection return the validation option since 3 2 mongodb server release 3 2 <END>
<BEG> sets the validation option for document be insert or update in a collection param validationoptions the validation option return this since 3 2 mongodb server release 3 2 <END>
<BEG> returns the readconcern return the readconcern mongodb server release 3 2 <END>
<BEG> gets the selection query to determine the subset of document from which to retrieve the distinct value return the query <END>
<BEG> sets the selection query to determine the subset of document from which to retrieve the distinct value <END>
<BEG> copy this dbcollectionfindoptions instance into a new instance <END>
<BEG> the maximum amount of time for the server to wait on new document to satisfy a tailable cursor query <END>
<BEG> sets the maximum await execution time on the server for this operation <END>
<BEG> sets the number of document to return per batch <END>
<BEG> gets the query modifier to apply to this operation <END>
<BEG> gets a document describe the field to return for all matching document <END>
<BEG> gets the sort criterion to apply to the query <END>
<BEG> the server normally time out idle cursor after an inactivity period 10 minute to prevent excess memory use <END>
<BEG> users should not set this under normal circumstance <END>
<BEG> get partial result from a sharded cluster if one or more shard be unreachable instead of throw an error <END>
<BEG> returns the minimum inclusive low bound for a specific index <END>
<BEG> the write concern to use for the insertion <END>
<BEG> sets the write concern param writeconcern the write concern return this <END>
<BEG> set to true if a new document should be insert if there be no match to the query filter <END>
<BEG> return the pipeline definition <END>
<BEG> creates a filter that match all document where the value of the field name equal the specified value <END>
<BEG> creates a filter that match all document where the value of the field name do not equal the specify value <END>
<BEG> creates a filter that match all document that do not match the pass in filter <END>
<BEG> creates a filter that match all document that either contain or do not contain the give field <SEG> depend on the value of the exists parameter <END>
<BEG> creates a filter that match all document where the value of the field be of the specified bson type <END>
<BEG> creates a filter that match all document where the value of a field divide by a divisor have the specify remainder i e <END>
<BEG> creates a filter that match all document where the value of the field match the give regular expression pattern with the give option apply <END>
<BEG> creates a filter that match all document match the give search term <END>
<BEG> creates a filter that match all document match the give the search term with the give text search option <END>
<BEG> creates a filter that match all document for which the give expression be true <END>
<BEG> allows the use of aggregation expression within the query language <END>
<BEG> creates a filter that match all document contain a field that be an array where at least one member of the array match the give filter <END>
<BEG> creates a filter that match all document contain a field with geospatial data that exist entirely within the specified shape <END>
<BEG> creates a filter that match all document contain a field with grid coordinate data that exist entirely within the specify polygon <END>
<BEG> creates a filter that match all document contain a field with geospatial data geojson or legacy coordinate pair that exist entirely within the specified circle <SEG> use spherical geometry <END>
<BEG> creates a filter that match all document contain a field with geospatial data that intersect with the specified shape <END>
<BEG> creates a filter that match all document that validate against the give json schema document <END>
<BEG> gets the { link returndocument } value indicate whether to return the document before it be replace or after return { link returndocument # before } if return the document before it be replace otherwise return { link returndocument # after } <END>
<BEG> converts to geojson representation return the geojson representation <END>
<BEG> gets the list of geometry object in this collection <END>
<BEG> gets the geojson coordinate of this linestring <END>
<BEG> gets the geojson coordinate of this multilinestring return the coordinate <END>
<BEG> the name of the field in which to store the depth value param field the field name return this <END>
<BEG> specifies a maximum recursive depth for the $ graphlookup <END>
<BEG> return the maximum depth <END>
<BEG> a document specify additional condition for the recursive search param filter the filter expression return this since 3 6 <END>
<BEG> create an index key for a 2d index on the give field <END>
<BEG> compound multiple index specification <END>
<BEG> gets the default storage engine option document for index <END>
<BEG> sets whether the server should insert the document in the order provide <END>
<BEG> gets the field that act a a unique identifier for a document <END>
<BEG> gets the behavior of $ merge if a result document and an exist document in the collection have the same value for the specify on field s <END>
<BEG> gets the variable accessible for use in the whenmatched pipeline return the variable <END>
<BEG> sets the variable accessible for use in the whenmatched pipeline <END>
<BEG> gets aggregation pipeline to update the document in the collection <END>
<BEG> gets the behavior of $ merge if a result document do not match an exist document in the out collection <END>
<BEG> gets the batch size to use for each cursor <END>
<BEG> the batch size to use for each cursor <END>
<BEG> creates a projection that exclude the _id field <END>
<BEG> creates a projection that include for the give field only the first element of an array that match the query filter <END>
<BEG> creates a projection that include for the give field only the first element of the array value of that field that match the give query filter <END>
<BEG> creates a projection to the give field name of the textscore <SEG> for use with text query <END>
<BEG> creates a projection to the give field name of a slice of the array value of that field <END>
<BEG> gets the position at which to add the pushed value in the array <END>
<BEG> gets the slice value <SEG> which be the limit on the number of array element allow <END>
<BEG> sets the limit on the number of array element allow <END>
<BEG> gets the sort direction for sort array element that be not document <END>
<BEG> gets the sort direction for sort array element that be document <END>
<BEG> gets if mongod should drop the target of renamecollection prior to rename the collection <END>
<BEG> gets the document which will replace the document match the query filter <END>
<BEG> returns the language to be use with the text search return the language to use for the text search if set or null <END>
<BEG> set the language for the text search param language the language to use for the text search return this <END>
<BEG> returns the case-sensitive flag to use with the text search return the case-sensitive flag if set or null mongodb server release 3 2 <END>
<BEG> set the case-sensitive flag for the text search param casesensitive the case-sensitive flag for the text search return this mongodb server release 3 2 <END>
<BEG> if true the unwind stage will include document that have null value or empty array return the preserve null value and empty array value or null <END>
<BEG> sets true if the unwind stage should include document that have null value or empty array param preservenullandemptyarrays flag depict if the unwind stage should include document that have null value or empty array return this <END>
<BEG> gets the includearrayindex field if set or null return the includearrayindex field if set or null <END>
<BEG> sets the field to be use to store the array index of the unwound item param arrayindexfieldname the field to be use to store the array index of the unwound item return this <END>
<BEG> gets the document specify the update to apply to the matching document <END>
<BEG> creates an update that set the value of the field with the give name to the give value <END>
<BEG> creates an update that delete the field with the give name <END>
<BEG> creates an update that set the value for the document <SEG> but only if the update be an upsert that result in an insert of a document <END>
<BEG> creates an update that set the value of the field with the give name to the give value <SEG> but only if the update be an upsert that result in an insert of a document <END>
<BEG> creates an update that set the value of the field to the give value if the give value be less than the current value of the field <END>
<BEG> creates an update that add the give value to the array value of the field with the give name <SEG> unless the value be already present <SEG> in which case it do nothing param fieldname the non-null field name param value the value <SEG> which may be null param < titem > the value type return the update mongodb driver manual reference operator update addtoset $ addtoset <END>
<BEG> creates an update that add each of the give value to the array value of the field with the give name <SEG> unless the value be already present <SEG> in which case it do nothing param fieldname the non-null field name param value the value param < titem > the value type return the update mongodb driver manual reference operator update addtoset $ addtoset <END>
<BEG> creates an update that add each of the give value to the array value of the field with the give name <END>
<BEG> creates an update that add each of the give value to the array value of the field with the give name <SEG> apply the give option for position the pushed value <SEG> and then slice and or sort the array <END>
<BEG> creates an update that remove all instance of the give value from the array value of the field with the give name <END>
<BEG> creates an update that remove from an array all element that match the give filter <END>
<BEG> creates an update that pop the first element of an array that be the value of the field with the give name <END>
<BEG> creates an update that perform a bitwise and between the give integer value and the integral value of the field with the give name <END>
<BEG> returns the validationaction from the string representation of a validation action <END>
<BEG> gets the validation rule if set or null <END>
<BEG> sets the validation rule for all param validator the validation rule return this <END>
<BEG> gets the { link validationlevel } that determine how strictly mongodb apply the validation rule to exist document during an insert or update <END>
<BEG> sets the validation level that determine how strictly mongodb apply the validation rule to exist document during an insert or update <END>
<BEG> sets the { link validationaction } that determine whether to error on invalid document or just warn about the violation but allow invalid document <END>
<BEG> gets the master key document < p > the masterkey identify a kms-specific key use to encrypt the new data key <END>
<BEG> gets the encryption algorithm <SEG> which must be either aead_aes_256_cbc_hmac_sha_512-deterministic or aead_aes_256_cbc_hmac_sha_512-random <END>
<BEG> gets the key identifier <END>
<BEG> gets the alternate name with which to look up the key <END>
<BEG> sets the alternate key name param keyaltname the alternate key name return this see # getkeyaltname <END>
<BEG> create an acknowledged deleteresult param deletedcount the number of document delete return an acknowledged deleteresult <END>
<BEG> create an unacknowledged deleteresult return an unacknowledged deleteresult <END>
<BEG> whether operation use the session should causally consistent with each other <END>
<BEG> gets the default transaction option for the session <END>
<BEG> gets an instance of a builder initialize with the give option param option the option with which to initialize the builder return a builder instance since 3 8 <END>
<BEG> gets the ok field <SEG> which be whether this command execute correctly or not <END>
<BEG> throws a { code commandfailureexception } if the command fail <END>
<BEG> add a result param result the result param indexmap the index map <END>
<BEG> add an error result param exception the exception param indexmap the index map <END>
<BEG> add a write error result param writeerror the write error param indexmap the index map <END>
<BEG> add a write concern error result param writeconcernerror the write concern error <END>
<BEG> gets the combined result <END>
<BEG> true if order and have write error <END>
<BEG> gets whether there be error in the combined result <END>
<BEG> gets the combined error a an exception return the bulk write exception <SEG> or null if there be no error <END>
<BEG> gets the cluster setting <SEG> which may be null if not provide <END>
<BEG> return a server in the cluster that be incompatibly old than the driver <END>
<BEG> returns true if this cluster have at least one server that satisfy the give read preference <END>
<BEG> returns true if this cluster have at least one server that can be use for write operation <END>
<BEG> gets the specific type of this cluster return a clustertype enum represent the type of this cluster <END>
<BEG> returns an unmodifiable list of the server description in this cluster description <END>
<BEG> gets the logical session timeout in minute <SEG> or null if at least one of the known server do not support logical session <END>
<BEG> returns the set of all server description in this cluster <SEG> sort by the string value of the serveraddress of each one <END>
<BEG> get a list of all the secondary in this cluster return a list of serverdescriptions of all the secondary this cluster be currently aware of deprecated replace with a filter on serverdescription in the caller <END>
<BEG> get a list of all the secondary in this cluster that match a give tagset param tagset a set of replica set tag return a list of serverdescriptions of all the secondary this cluster that match all of the give tag deprecate replace with a filter on serverdescription in the caller <END>
<BEG> gets a list of serverdescriptions for all the server in this cluster which be currently accessible <END>
<BEG> gets a list of all the primary and secondary in this cluster <END>
<BEG> gets a list of all the primary and secondary in this cluster that match the give replica set tag <END>
<BEG> gets the host name from which to lookup srv record for the seed list return the srv host <SEG> or null if none specify since 3 10 <END>
<BEG> gets the seed list of host for the cluster <END>
<BEG> gets the required replica set name <END>
<BEG> gets the timeout to apply when select a server <END>
<BEG> gets the local threshold <END>
<BEG> < p > this be the maximum number of thread that may be wait for a connection to become available from the pool <END>
<BEG> gets the cluster listener <END>
<BEG> returns a short <SEG> pretty description for these clustersettings <END>
<BEG> creates a new connection description with the set connection id param connectionid the connection id return the new connection description since 3 8 <END>
<BEG> the late version of the wire protocol that this mongodb server be capable of use to communicate with client <END>
<BEG> gets the max batch count for bulk write operation <END>
<BEG> gets the max document size in byte for document to be store in collection <END>
<BEG> get the default maximum message size <END>
<BEG> get the default maximum write batch size <END>
<BEG> creates a new connectionid with the set server value param servervalue the server value return the new connection id since 3 8 <END>
<BEG> gets the locally create id value for the connection return the locally create id value for the connection <END>
<BEG> gets the server generate id value for the connection or null if not set <END>
<BEG> < p > the maximum time that a thread may wait for a connection to become available < p > < p > default be 2 minute <END>
<BEG> the maximum time a pooled connection can live for <END>
<BEG> returns the period of time to wait before run the first maintenance job on the connection pool <END>
<BEG> returns the time period between run of the maintenance job <END>
<BEG> gets the string represent the host name and port that this member of a replica set be configure with <SEG> e g <END>
<BEG> return whether the server be compatible with the driver <END>
<BEG> gets the address of this server return a serveraddress contain the detail of the address of this server <END>
<BEG> gets whether this be a server that be the entry point to a sharded instance of mongodb <END>
<BEG> get a set of string in the format of [ hostname ] : [ port ] that contain all member of the replica set that be neither hidden <SEG> passive <SEG> nor arbiter <END>
<BEG> gets the arbiter in the replica set return a set of string in the format of [ hostname ] : [ port ] contain all member of the replica set that be arbiter <END>
<BEG> gets the address of the current primary in the replica set return a string in the format of [ hostname ] : [ port ] list the current primary member of the replica set <END>
<BEG> a set of all tag assign to this member <END>
<BEG> the replica set electionid report by this mongodb server <END>
<BEG> gets the time that this server description be create <SEG> use a monotonic clock like { link system # nanotime } <END>
<BEG> returns true if the server have the give tag <END>
<BEG> the isok result from request this information from the server return true if the request execute correctly <END>
<BEG> gets the current state of the connection to the server <END>
<BEG> gets the type of the server <SEG> for example whether it 's a standalone or in a replica set <END>
<BEG> get the time it take to make the round trip for request this information from the server in nanosecond <END>
<BEG> returns true if this instance be equal to code { o } <END>
<BEG> gets the frequency that the cluster monitor attempt to reach each server <END>
<BEG> gets the server monitor listener <END>
<BEG> gets the version list <END>
<BEG> gets the timeout for socket connect <END>
<BEG> sets the current position in the payload param position the position <END>
<BEG> return true if there be more value after the current position <END>
<BEG> return a new splittablepayload contain only the value after the current position <END>
<BEG> returns whether invalid host name should be allow <END>
<BEG> get the unparsed connection string <END>
<BEG> gets the credential in an immutable list <END>
<BEG> gets the credential or null if no credential be specify in the connection string <END>
<BEG> gets the read preference specify in the connection string <END>
<BEG> returns true if writes should be retry if they fail due to a network error <SEG> and false otherwise < p > starting with the 3 11 0 release <SEG> the default value be true < p > return the retrywrites value <SEG> or true if unset since 3 6 mongodb server release 3 6 deprecate prefer { link # getretrywritesvalue } <END>
<BEG> < p > gets whether writes should be retry if they fail due to a network error < p > the name of this method differs from others in this class so a not to conflict with the deprecate and soon to be remove { link # getretrywrites } method <SEG> which return a primitive { code boolean } value <SEG> which do n't allow caller to differentiate between a false value and an unset value <END>
<BEG> < p > gets whether read should be retry if they fail due to a network error < p > return the retrywrites value since 3 11 mongodb server release 3 6 <END>
<BEG> gets the minimum connection pool size specify in the connection string <END>
<BEG> return the server selection timeout in millisecond <SEG> or null if unset since 3 3 <END>
<BEG> return the local threshold in millisecond <SEG> or null if unset since 3 3 <END>
<BEG> gets the logical name of the application <END>
<BEG> gets the uuid representation <END>
<BEG> gets the mongo instance return the mongo instance that this database be create from deprecate use { link # getmongoclient } instead <END>
<BEG> gets the mongoclient instance return the mongoclient instance that this database be construct from throw illegalstateexception if this db be not create from a mongoclient instance since 3 9 <END>
<BEG> sets the read preference for this database <END>
<BEG> < p > gets a collection with a give name <END>
<BEG> returns a set contain the name of all collection in this database <END>
<BEG> < p > creates a collection with a give name and option <END>
<BEG> executes a database command with the select readpreference <SEG> and encode the command use the give encoder <END>
<BEG> gets another database on same server param name name of the database return the db for the give name <END>
<BEG> checks to see if a collection with a give name exist on a server <END>
<BEG> evaluates javascript function on the database server <END>
<BEG> helper method for call a 'dbstats ' command <END>
<BEG> adds or update a user for this database < p > never create or modify user over an insecure network without the use of tls < p > param username the user name param password the password param readonly if true <SEG> user will only be able to read return the result of execute this operation throw mongoexception if the operation fail mongodb driver manual administration security-access-control access control mongodb driver manual reference command createuser createuser mongodb driver manual reference command updateuser updateuser deprecate use { code db command } to call either the createuser or updateuser command <END>
<BEG> makes it possible to execute read query on a slave node see readpreference # secondarypreferred deprecate replaced with { code readpreference secondarypreferred } <END>
<BEG> adds the give flag to the default query option <END>
<BEG> sets the query option <SEG> overwrite previous value <END>
<BEG> resets the query option <END>
<BEG> gets the query option return bit vector of query option mongodb driver manual meta-driver late legacy mongodb-wire-protocol # op-query query flags deprecate replaced with { link dbcursor # getoptions } <END>
<BEG> determines the read preference that should be use for the give command <END>
<BEG> creates a copy of an exist database cursor <END>
<BEG> checks if there be another object available <END>
<BEG> non block check for tailable cursor to see if another object be available <END>
<BEG> returns the element the cursor be at <END>
<BEG> adds a query option <END>
<BEG> limits the number of document a cursor will return for a query <END>
<BEG> modifies the document return to include reference to the on-disk location of each document <END>
<BEG> use snapshot mode for the query <END>
<BEG> returns an object containing basic information about the execution of the query that create this cursor <END>
<BEG> returns the number of object through which the cursor have iterate <END>
<BEG> declare that this query can run on a secondary server <END>
<BEG> < p > creates a copy of this cursor object that can be iterate <END>
<BEG> converts this cursor to an array <END>
<BEG> pulls back all item into an array and return the number of object <END>
<BEG> for test only ! <END>
<BEG> counts the number of object match the query this do take limit skip into consideration return the number of object throw mongoexception if the operation fail see # count <END>
<BEG> sets the factory that will be use create a { code dbdecoder } that will be use to decode bson document into dbobject instance <END>
<BEG> gets the decoder factory that create the decoder this cursor will use to decode object from mongodb <END>
<BEG> gets the name of the collection in which the referenced document be store <END>
<BEG> deals with encode database reference <END>
<BEG> translate an error code into an error category param code the error code return the error category for the give code <END>
<BEG> gets the request identifier return the request identifier <END>
<BEG> gets the description of the connection to which the operation will be send <END>
<BEG> gets the elapsed time in the give unit of time <END>
<BEG> gets the database on which the operation will be execute <END>
<BEG> gets the command document <END>
<BEG> the responseto identifier of the message <END>
<BEG> gets a filtered list of file store in this gridfs <SEG> sort by filename <END>
<BEG> gets a sorted <SEG> filtered list of file store in this gridfs <END>
<BEG> finds one file match the give objectid <END>
<BEG> finds a list of file match the give query <END>
<BEG> removes all file match the give filename <END>
<BEG> creates a file entry <END>
<BEG> this method create an empty { link gridfsinputfile } instance <END>
<BEG> gets the bucket name use in the collection 's namespace <END>
<BEG> gets the { link dbcollection } in which the file 's metadata be store <END>
<BEG> returns an inputstream from which data can be read <END>
<BEG> writes the file 's data to an outputstream <END>
<BEG> sets the id of this gridfs file <END>
<BEG> sets the file name on the gridfs entry <END>
<BEG> this method first call savechunks long if the file data have not be save yet <END>
<BEG> saves all data into chunk from configure { link java io inputstream } input stream to gridfs <END>
<BEG> after retrieve this { link java io outputstream } <SEG> this object will be capable of accept successively write data to the output stream <END>
<BEG> creates a new chunk of this file <END>
<BEG> set the write concern to use for the insert <END>
<BEG> set whether document will continue to be insert after a failure to insert one <END>
<BEG> whether document will continue to be insert after a failure to insert one most commonly due to a duplicate key error <END>
<BEG> the encoder to use for the document <END>
<BEG> return the { code saslprep } -canonicalised version of the give { code str } for use a a query string <END>
<BEG> gets the first key in this document <SEG> or null if the document be empty <END>
<BEG> gets whether the cursor be configure to be a tailable cursor <END>
<BEG> sets whether the cursor should be a tailable cursor <END>
<BEG> returns true if set to allow to query non-primary replica set member <END>
<BEG> sets if allow to query non-primary replica set member <END>
<BEG> returns true if the cursor should await for data <END>
<BEG> sets if the cursor should await for data <END>
<BEG> returns the value before this change event be fire <END>
<BEG> returns the value after the event be fire return the updated value <END>
<BEG> return the compressor identifier with which the message be compress <END>
<BEG> returns { code true } if this deque contain at least one element { code e } such that { code o equal e } <END>
<BEG> gets an object from the pool - will block if none be available param timeout negative - forever 0 - return immediately no matter what positive m to wait param timeunit the time unit of the timeout return an object from the pool <SEG> or null if ca n't get one in the give waittime throw mongotimeoutexception if the timeout have be exceed <END>
<BEG> clears the pool of all object <END>
<BEG> synchronously prune idle connection and ensure the minimum pool size <END>
<BEG> gets the cursor to get more from <END>
<BEG> gets the total size of the message in byte <END>
<BEG> gets additional information about the response <END>
<BEG> returns the position in the cursor that be the start point of this reply <END>
<BEG> gets the number of document to expect in the body of this reply <END>
<BEG> gets whether the query fail or not <END>
<BEG> gets the next available unique message identifier <END>
<BEG> gets the op code of the message <END>
<BEG> encoded the message to the give output <END>
<BEG> gets the encode metadata from the last attempt to encode this message <END>
<BEG> writes the message prologue to the give output <END>
<BEG> appends a document to the message that be intend for storage in a collection <END>
<BEG> backpatches the message length into the beginning of the message <END>
<BEG> returns a read-only buffer contain the response body <END>
<BEG> return the total number of read operation that be start <END>
<BEG> return the total number of read operation that succeed <END>
<BEG> returns the current number of registered socket <END>
<BEG> fill with zero the remaining of the supplied buffer <END>
<BEG> fill the buffer with zero <END>
<BEG> register a callback function to be execute when the tls session be establish or re-established <END>
<BEG> whether to release unused buffer in the mid of connection <END>
<BEG> < p > whether to wait for tls close confirmation when execute a local { link tlschannel # close } on the channel <END>
<BEG> for efficiency <SEG> override this method to do nothing <END>
<BEG> returns the time at which this connection be last used <SEG> or { code long max_value } if it have not yet be use <END>
<BEG> a txt record be just a string we require each to be one or more query parameter for a mongodb connection string <END>
<BEG> converts the give byte buffer to a hexadecimal string use { link java lang integer # tohexstring int } <END>
<BEG> produce hex representation of the md5 digest of a byte array <END>
<BEG> get a list of index name for the give list of index model param index the index model param codecregistry the codec registry to convert each bson key to a bsondocument return the list of index name <END>
<BEG> convenience method to generate an index name from the set of field it be over <END>
<BEG> returns a json serialization of this object return json serialization <END>
<BEG> gets the mbeanserver for register or unregistering mbeans <END>
<BEG> returns an iterable contain the result of the operation <END>
<BEG> drops the collection that hold the result <END>
<BEG> gets the collection that hold the result will return null if result be inline <END>
<BEG> get the name of the collection that the result of the map reduce be save into <END>
<BEG> sets the default write concern to use for write operation execute on any { link dbcollection } create indirectly from this instance <SEG> via a { link db } instance create from { link # getdb string } <END>
<BEG> gets a database object <END>
<BEG> forces the master server to fsync the ram data to disk this be do automatically by the server at interval <SEG> but can be force for good reliability <END>
<BEG> gets the compressor to use for compress message to the server <END>
<BEG> < p > the maximum number of connection allow per host for this mongoclient instance <END>
<BEG> < p > the minimum number of connection per host for this mongoclient instance <END>
<BEG> < p > this multiplier <SEG> multiply with the connectionsperhost setting <SEG> give the maximum number of thread that may be wait for a connection to become available from the pool <END>
<BEG> < p > gets the server selection timeout in millisecond <SEG> which define how long the driver will wait for server selection to succeed before throw an exception < p > < p > default be 30<SEG>000 millisecond <END>
<BEG> the maximum idle time of a pooled connection <END>
<BEG> < p > the connection timeout in millisecond <END>
<BEG> < p > this flag control the socket keep-alive feature that keep a connection alive through firewall { link java net socket # setkeepalive boolean } < p > < p > default be { code true } < p > return whether keep-alive be enable on each socket see < a href= http : doc mongodb com manual faq diagnostics # does-tcp-keepalive-time-affect-mongodb-deployments > does tcp keep-alive time affect mongodb deployments ? < a > deprecate configure keep-alive have be deprecate <END>
<BEG> < p > gets the connect timeout for connection use for the cluster heartbeat < p > < p > default be 20<SEG>000 millisecond < p > return the heartbeat connect timeout <SEG> in millisecond since 2 12 <END>
<BEG> gets the socket timeout for connection use for the cluster heartbeat <END>
<BEG> < p > gets the local threshold <END>
<BEG> whether to use ssl <END>
<BEG> returns whether invalid host name should be allow if ssl be enable <END>
<BEG> returns true if writes should be retry if they fail due to a network error or other retryable error <END>
<BEG> override the decoder factory <END>
<BEG> < p > gets whether jmx bean register by the driver should always be mbeans <SEG> regardless of whether the vm be java 6 or great <END>
<BEG> < p > the socket factory for create socket to the mongo server < p > < p > default be socketfactory getdefault < p > return the socket factory deprecate prefer { link # issslenabled } and { link # getsslcontext } <END>
<BEG> < p > gets whether there be a a finalize method create that clean up instance of dbcursor that the client do not close <END>
<BEG> gets the auto-encryption setting return the auto-encryption setting <SEG> which may be null since 3 11 <END>
<BEG> the codec registry to use <SEG> or null if not set <END>
<BEG> gets the connection setting for the heartbeat thread the background task that check the state of the cluster wrap in a setting object <END>
<BEG> gets the setting for the connection provider in a setting object <END>
<BEG> get the unparsed uri <END>
<BEG> gets the option return the mongoclientoptions base on this uri <END>
<BEG> gets the error code associate with the command failure <END>
<BEG> create an instance for snappy compression <END>
<BEG> creates a new compressor from this compressor with the give property add to it <END>
<BEG> creates a mongocredential instance with an unspecified mechanism <END>
<BEG> creates a mongocredential instance for the scram-sha-1 sasl mechanism <END>
<BEG> creates a mongocredential instance for the mongodb x 509 protocol where the distinguish subject name of the client certificate act a the username <END>
<BEG> creates a new mongocredential a a copy of this instance <SEG> with the specify mechanism property add <END>
<BEG> gets the source of the user name <SEG> typically the name of the database where the user be define <END>
<BEG> static helper to create or cast a mongoexception from a throwable param t a throwable <SEG> which may be null return a mongoexception <END>
<BEG> static helper to create or cast a mongoexception from a throwable param t a throwable <SEG> which may not be null return a mongoexception since 3 7 <END>
<BEG> adds the give error label to the exception <END>
<BEG> gets the set of error label associate with this exception <END>
<BEG> return true if the exception be label with the give error label <SEG> and false otherwise <END>
<BEG> the cluster description which be determine to be incompatible <END>
<BEG> check the validity of the give database name <END>
<BEG> gets the full name <SEG> which be the database name and the collection name <SEG> separate by a period <END>
<BEG> returns the standard mongodb representation of a namespace <SEG> which be { code & lt ; database & gt ; & lt ; collection & gt ; } <END>
<BEG> reset all setting to the default <END>
<BEG> gets the socket factory for create socket to mongod <END>
<BEG> sets the socket timeout in millisecond it be use for i o socket read and write operation { link java net socket # setsotimeout int } default be 0 and mean no timeout <END>
<BEG> sets the flag that control the socket keep alive feature that keep a connection alive through firewall { link java net socket # setkeepalive boolean } default be false <END>
<BEG> if { code true } the driver will use a writeconcern of writeconcern safe for all operation <END>
<BEG> gets the w value <SEG> number of writes <SEG> of the global writeconcern <END>
<BEG> gets the wtimeout value of the global writeconcern <END>
<BEG> returns the db object from a newly create mongo instance base on this uri <END>
<BEG> returns the uri 's db object from a give mongo instance <END>
<BEG> returns the uri 's collection from a give db object <END>
<BEG> set the recovery token <END>
<BEG> enables write to temporary file <END>
<BEG> enables retryable read if a read fail due to a network error <END>
<BEG> gets the value for retryable read <END>
<BEG> sets the collation option < p > a null value represent the server default < p > param collation the collation option to use return this since 3 4 mongodb driver manual reference command aggregate aggregation mongodb server release 3 4 <END>
<BEG> returns the hint bsonvalue for which index to use <END>
<BEG> gets the aggregation pipeline <END>
<BEG> sets the comment to the aggregation <END>
<BEG> gets the decoder use to decode the result document <END>
<BEG> gets the namespace of the collection to write to <END>
<BEG> returns the fulldocument value <SEG> in 3 6 return the fulldocument value <END>
<BEG> returns the logical starting point for the new change stream return the first notification after the token <END>
<BEG> the change stream will only provide change that occur after the specified timestamp <END>
<BEG> returns the start at operation time return the start at operation time since 3 8 mongodb server release 4 0 <END>
<BEG> gets the maximum amount of time to allow a single committransaction command to execute <END>
<BEG> sets if _id field of the collection be indexed <END>
<BEG> set the maximum number of document in the collection <END>
<BEG> gets the validation rule for insert or updating document return the validation rule if set or null since 3 2 mongodb server release 3 2 <END>
<BEG> gets the index request <END>
<BEG> gets the name of the collection or view that back this view <END>
<BEG> gets the list of remove request <END>
<BEG> gets the document contain update operator return the update document <END>
<BEG> gets the pipeline contain update operator return the update pipeline since 3 11 mongodb server release 4 2 <END>
<BEG> returns the maximum number of document or index key to scan when execute the query <END>
<BEG> gets the function that create a key object for use a the grouping key <END>
<BEG> gets the initial the aggregation result document <END>
<BEG> sets the optional query filter to determine which document in the collection to process <END>
<BEG> gets the function that run each item in the result before return the final value <END>
<BEG> sets the function that run each item in the result set before return the final value <END>
<BEG> gets whether only the collection name should be return <END>
<BEG> sets the query filter to apply to the return database name <END>
<BEG> executing this will return a list of all the database names in the mongodb instance <END>
<BEG> get the number of document that be input into the map reduce operation return the number of document that read while process this map reduce <END>
<BEG> get the number of document generate a a result of this map reduce return the number of document output by the map reduce <END>
<BEG> get the number of message emit from the provide map function <END>
<BEG> get the amount of time it take to run the map-reduce <END>
<BEG> gets the flag that specify whether to convert intermediate data into bson format between the execution of the map and reduce function <END>
<BEG> gets whether to include the timing information in the result information <END>
<BEG> gets the output action <SEG> one of : replace <SEG> merge <SEG> reduce <END>
<BEG> sets the output action one of : replace <SEG> merge <SEG> reduce param action the output action return this mongodb driver manual reference command mapreduce # output-to-a-collection-with-an-action output with an action <END>
<BEG> true if the output database be sharded return true if the output database be sharded mongodb driver manual reference command mapreduce # output-to-a-collection-with-an-action output with an action <END>
<BEG> true if the post-processing step will prevent mongodb from lock the database <END>
<BEG> executing this will return a cursor with your result in <END>
<BEG> gets the list of write request to execute <END>
<BEG> returns true if writes should be retry if they fail due to a network error <END>
<BEG> executes a bulk write operation <END>
<BEG> creates a new query with a document key param key mongodb document key return { code this } <END>
<BEG> equivalent to { code querybuilder put key } <END>
<BEG> equivalent to the $ gt operator param object value to query return { code this } <END>
<BEG> equivalent of the find { key : value } param object value to query return { code this } <END>
<BEG> equivalent to the $ elemmatch operand param match the object to match return { code this } <END>
<BEG> equivalent of the $ near operand param x x coordinate param y y coordinate return { code this } <END>
<BEG> equivalent of the $ near operand param x x coordinate param y y coordinate param maxdistance max distance return { code this } <END>
<BEG> equivalent of the $ nearsphere operand param longitude coordinate in decimal degree param latitude coordinate in decimal degree return { code this } <END>
<BEG> equivalent of the $ nearsphere operand param longitude coordinate in decimal degree param latitude coordinate in decimal degree param maxdistance max spherical distance return { code this } <END>
<BEG> equivalent of the $ centersphere operand mostly intend for query up to a few hundred mile or km <END>
<BEG> equivalent to a $ within operand <SEG> base on a bounding box use represent by two corner param x the x coordinate of the first box corner <END>
<BEG> equivalent to a $ within operand <SEG> base on a bounding polygon represent by an array of point param point an array of double [ ] define the vertex of the search area return { code this } <END>
<BEG> equivalent to a $ text operand <END>
<BEG> equivalent to $ not meta operator <END>
<BEG> equivalent to an $ or operand param or the list of condition to or together return { code this } <END>
<BEG> creates a { code dbobject } query to be use for the driver 's find operation return { code this } throw runtimeexception if a key do not have a matching operand <END>
<BEG> return true if this be the server default read concern <END>
<BEG> returns the readconcern from the string read concern level <END>
<BEG> sets the _id param id the unique identifier for this dbobject <END>
<BEG> reflectiondbobjects ca n't be partial <END>
<BEG> returns the wrapper if this object can be assign from this class <END>
<BEG> returns an exist wrapper instance associate with a class <SEG> or create a new one <END>
<BEG> checks to see if a give server be the primary server in this replica set <END>
<BEG> gets the maximum size for a bson object support by the current master server <END>
<BEG> gets the acceptable latency difference <END>
<BEG> gets the port number return port <END>
<BEG> gets the underlie socket address return socket address <END>
<BEG> returns the default database host : 127 0 0 1 return ip address of default host <END>
<BEG> returns the default database port : 27017 return the default port <END>
<BEG> gets the cursor id that the server use to uniquely identify the cursor <END>
<BEG> gets the list of tag set a a list of { code tagset } instance <END>
<BEG> merge the two provided transaction option <SEG> with the first take precedence over the second <END>
<BEG> assign a objectserializer to perform a type specific serialization scheme param c this object 's type serve a a key in the serialization map <END>
<BEG> param obj the object to be serialize param buf stringbuilder contain the json representation of the object <END>
<BEG> < p > serializes an object into it json form < p > < p > this method delegate serialization to { code jsonserializers getlegacy } < p > param object object to serialize return string contain json form of the object see jsonserializers # getlegacy <END>
<BEG> parses a json string and construct a corresponding java object by call the method of a { link org bson bsoncallback bsoncallback } during parse <END>
<BEG> returns an { code objectserializer } that conform to the strict json format define in < a href= http : doc mongodb org manual reference mongodb-extended-json > extend json < a > <END>
<BEG> gets the w value a an integer <END>
<BEG> returns true if this write concern indicate that write operation must be acknowledge <END>
<BEG> gets the writeconcern constant by name matching be do case insensitively <END>
<BEG> constructs a new writeconcern from the current one and the specify integer-based value for w param w number of server to ensure write propagation to before acknowledgment <SEG> which must be { code > = 0 } return the new writeconcern mongodb driver manual core write-concern # replica-acknowledged replica acknowledged <END>
<BEG> constructs a new writeconcern from the current one and the specify fsync value param fsync true if the write concern need to include fsync return the new writeconcern deprecate prefer { link # withjournal boolean } <END>
<BEG> constructs a new writeconcern from the current one and the specify journal value param journal true if journalling be require for acknowledgement return the new writeconcern deprecate prefer { link # withjournal boolean } mongodb driver manual reference write-concern # j-option j option <END>
<BEG> constructs a new writeconcern from the current one and the specify wtimeout in the give time unit <END>
<BEG> returns whether this writer have be close <END>
<BEG> get the context <SEG> which will indicate which state the writer be in <SEG> for example which part of a document it 's currently write <END>
<BEG> handles the logic of write the element name <END>
<BEG> returns the next valid state for this writer <END>
<BEG> checks if this writer 's current state be in the list of give state <END>
<BEG> checks the writer be in the correct state <END>
<BEG> throws a { link bsoninvalidoperationexception } when the method call be not valid for the current state <END>
<BEG> reads a single document from the give bsonreader and write it to this <SEG> append the give extra element to the document <END>
<BEG> pipe a list of extra element to this writer param extraelements the extra element <END>
<BEG> return true if the current execution of the pipe method should be abort <END>
<BEG> factory method for create a new bson list <END>
<BEG> puts a new value into the document <END>
<BEG> sets the root document for this position param root the new root document <END>
<BEG> gets the buffer the bson be be encode into <END>
<BEG> gets the writer responsible for write the encoded bson <END>
<BEG> encodes a { code bsonobject } <END>
<BEG> encodes any object type param name the field name param initialvalue the value to write <END>
<BEG> encodes a null value param name the field name see org bson bsontype # null <END>
<BEG> encodes a bson timestamp param name the field name param timestamp the timestamp to encode see org bson bsontype # timestamp <END>
<BEG> encodes a field to a { link org bson bsontype # javascript } value <END>
<BEG> encodes a field with a { code boolean } or { code boolean } value param name the field name param value the value <END>
<BEG> encodes a field with data and time value <END>
<BEG> encodes any number field <END>
<BEG> encodes a decimal128 field <END>
<BEG> encodes a pattern field to a { link org bson bsontype # regular_expression } <END>
<BEG> encodes an array field <END>
<BEG> encodes an iterable <SEG> for example { code list } value param name the field name param iterable the value <END>
<BEG> encodes a map <SEG> a a bson document param name the field name param map the value <END>
<BEG> encodes any { code bsonobject } <SEG> a a document param name the field name param document the value return the number of character in the encoding <END>
<BEG> checks if this object contain a give field param field field name return if the field exists <END>
<BEG> returns the value of a field a an { code int } <END>
<BEG> returns the value of a field a a string param key the field to look up return the value of the field <SEG> convert to a string <END>
<BEG> returns the value of a field a a string param key the field to look up param def the default to return return the value of the field <SEG> convert to a string <END>
<BEG> returns the object id or null if not set <END>
<BEG> returns the date or null if not set <END>
<BEG> add a key value pair to this object param key the field name param val the field value return { code this } <END>
<BEG> compares two document accord to their serialized form <SEG> ignore the order of key <END>
<BEG> gets whether any encode transformer have be register for any class <END>
<BEG> registers a { code transformer } to use to encode a specific class into bson <END>
<BEG> transforms the { code objecttoencode } use all transformer register for the class of this object <END>
<BEG> returns the encode hook s associate with the specified class <END>
<BEG> clears < em > all < em > encode hook <END>
<BEG> remove all encode hook for a specific class <END>
<BEG> remove a specific encode hook for a specific class <END>
<BEG> returns the decode hook s associate with the specific class param clazz the class to fetch the decoding hook for return a list of all the decode transformers that apply to the give class <END>
<BEG> remove all decoding and encode hook for all class <END>
<BEG> decodes a bson byte array into a dbobject instance <END>
<BEG> converts a regular expression modifier from the database into java regular expression flag <END>
<BEG> provides an integer representation of boolean or number <END>
<BEG> returns true if the give value be a uuid subtype param value the subtype value a a byte return true if value be a uuid subtype since 3 4 <END>
<BEG> gets the byte representation of this subtype <END>
<BEG> gets the bson output back this instance <END>
<BEG> sets a maximum size for document from this point <END>
<BEG> reset the maximum document size to it previous value <END>
<BEG> create a snapshot of this writer 's context at a point in time <END>
<BEG> resets this writer to the last { link # mark } save <END>
<BEG> returns a { code bsonboolean } instance represent the specify { code boolean } value <END>
<BEG> a helper to convert an document of type object to a bsondocument < p > if not already a bsondocument it look up the document ' class in the codecregistry and wrap it into a bsondocumentwrapper < p > param document the document to convert param codecregistry the codecregistry that can be use in the conversion of the object return a bsondocument <END>
<BEG> get the encoder to use for the wrapped document <END>
<BEG> determine whether the document have be unwrapped already <END>
<BEG> returns if the error code be set i e <SEG> not null <END>
<BEG> get the javascript code <END>
<BEG> get the { code objectid } value <END>
<BEG> gets the option for the regular expression return the option <END>
<BEG> gets the symbol value return the symbol <END>
<BEG> will compare equal to a string that be equal to the string that this hold param o the symbol to compare this to return true if parameter o be the same a this symbol <END>
<BEG> gets the time in second since epoch <END>
<BEG> gets the { code bsontype } that correspond to the give int value <END>
<BEG> returns whether this type be some sort of contain type <SEG> e g <END>
<BEG> gets this value a a bsondocument if it be one <SEG> otherwise throw exception return a bsondocument throw org bson bsoninvalidoperationexception if this value be not of the expect type <END>
<BEG> gets this value a a bsondecimal128 if it be one <SEG> otherwise throw exception return a bsondecimal128 throw org bson bsoninvalidoperationexception if this value be not of the expect type since 3 4 <END>
<BEG> gets this value a a { code bsonjavascript } if it be one <SEG> otherwise throw exception return a bsonjavascript throw org bson bsoninvalidoperationexception if this value be not of the expect type <END>
<BEG> returns true if this be a bsonnull <SEG> false otherwise <END>
<BEG> this method may be overridden to change the behavior of read the current value from the give { code bsonreader } <END>
<BEG> decoding of { code bsondocumentwrapper } instance be not support <SEG> so this method will throw { code unsupportedoperationexception } in all case <END>
<BEG> gets the codec map to the give bson type <END>
<BEG> get the { code bsonvalue } subclass associate with the give { code bsontype } <END>
<BEG> gets the bsontypeclassmap use by this provider <END>
<BEG> creates a { code codecregistry } from the provided list of { code codec } instance <END>
<BEG> creates a child context and then deserializes use the reader <END>
<BEG> returns true if the the value to be encode be a document that will be put in a mongodb collection <END>
<BEG> creates a child context base on this and serialize the value with it to the writer <END>
<BEG> gets a child context base on this <END>
<BEG>  < p > converts the { code localtime } to { link zoneoffset # utc } at epochday via { link localtime # atdate localdate } and { link java time localdatetime # toinstant zoneoffset } < p > <END>
<BEG> creates a new class model builder instance use reflection <END>
<BEG> return the backing class for the classmodel <END>
<BEG> return true if the underlie type have type parameter <END>
<BEG> return true if a discriminator should be use when store the data <END>
<BEG> returns the { link propertymodel } map a the id property for this classmodel return the propertymodel for the id <END>
<BEG> sets the idgenerator for the classmodel param idgenerator the idgenerator return this since 3 10 <END>
<BEG> sets the instancecreatorfactory for the classmodel param instancecreatorfactory the instancecreatorfactory return this <END>
<BEG> sets the type of the model param type the type of the class return the builder to configure the class be model <END>
<BEG> return the convention o apply to the model <END>
<BEG> sets the annotation for the model param annotation a list of annotation return this <END>
<BEG> return the annotation on the model type if set or null <END>
<BEG> sets the discriminator to be use when store instance of the modeled type param discriminator the discriminator value return this <END>
<BEG> return the discriminator to be use when store instance of the modeled type or null if not set <END>
<BEG> sets the discriminator key to be use when store instance of the modeled type param discriminatorkey the discriminator key value return this <END>
<BEG> return the discriminator key to be use when store instance of the modeled type or null if not set <END>
<BEG> enables or disable the use of a discriminator when serialize param discriminatorenabled true to enable the use of a discriminator return this <END>
<BEG> return true if a discriminator should be use when serialize <SEG> otherwise false <END>
<BEG> return the designated { code _id } property name for this type or null if not set <END>
<BEG> remove a property from the builder param propertyname the actual property name in the pojo and not the { code documentpropertyname } <END>
<BEG> gets a property by the property name <END>
<BEG> return the property on the model type <END>
<BEG> create a new { link propertymodelbuilder } param < t > the type of the property return the builder <END>
<BEG> return the name of the property to use a the key when deserializing from bson <END>
<BEG> return the type data for the property <END>
<BEG> return the custom codec to use if set or null <END>
<BEG> return true or false if a discriminator should be use when serialize or null if not set <END>
<BEG> return the name of the property to use a the key when deserializing the data from bson <END>
<BEG> sets a custom codec for the property param codec the custom codec for the property return this <END>
<BEG> return the { link propertyserialization } checker <END>
<BEG> returns the read annotation <SEG> to be apply when serialize to bson return the read annotation <END>
<BEG> sets the read annotation <SEG> to be apply when serialize to bson param annotation the read annotation return this <END>
<BEG> sets the writeannotations <SEG> to be apply when deserializing from bson param writeannotations the writeannotations return this <END>
<BEG> enables or disable the use of a discriminator when serialize param discriminatorenabled the usediscriminator value return this <END>
<BEG> sets the { link propertyaccessor } param propertyaccessor the propertyaccessor return this <END>
<BEG> creates a new builder for classtypedata param type the class for the type param < t > the type return the builder <END>
<BEG> returns a mapping of property type parameter index to the class type parameter index <END>
<BEG> equivalent of long compareunsigned in java 8 <END>
<BEG> return size of data so far <END>
<BEG> reads and return a single integer value from the input stream <END>
<BEG> reads and return a single integer value from the buffer <END>
<BEG> reads and return a single big-endian integer value param buffer the buffer to read from param offset the position to start read from the buffer return the integer value <END>
<BEG> the new line character s to use if indent mode be enable <END>
<BEG> the indent character to use if indent mode be enable <END>
<BEG> gets the current length of the json text <END>
<BEG> return true if the output have be truncate due to exceed the length specify in { link strictcharacterstreamjsonwritersettings # getmaxlength } <END>
<BEG> create a { code lazybsonobject } instance from the give byte start from the give offset <END>
<BEG> create a { code lazybsonlist } from the give byte start from the give offset <END>
<BEG> this be a factory method pattern to create appropriate object for bson type dbpointer 0x0c <END>
<BEG> returns a { code bytebuf } that wrap the byte array <SEG> with the proper byte order <END>
<BEG> puts a value at an index <END>
<BEG> gets the time in second since epoch return an int represent time in second since epoch <END>
<BEG> gets the incrementing ordinal for operation within a give second <END>
<BEG> gets the scope <SEG> which be be a mapping from identifier to value <SEG> represent the scope in which the code should be evaluate <END>
<BEG> gets the scope for this javascript return a document represent the scope <END>
<BEG> < p > walks superclass and interface graph <SEG> superclasses first <SEG> then interface <SEG> to compute an ancestry list <END>
<BEG> return true if the field name reference a local value such a { code $ $ this } <END>
<BEG> create new empty { link collectionoptions } <END>
<BEG> non-javadoc see org springframework data mongodb core bulkoperations # upsert org springframework data mongodb core query query <SEG> org springframework data mongodb core query update <END>
<BEG> static factory method to create a findandmodifyoptions instance return new instance of { link findandmodifyoptions } <END>
<BEG> static factory method return an unmodifiable { link findandmodifyoptions } instance <END>
<BEG> static factory method to create a { link findandreplaceoptions } instance <END>
<BEG> static factory method to create a { link findandreplaceoptions } instance with < dl > < dt > returnnew < dt > < dd > false < dd > < dt > upsert < dt > < dd > false < dd > < dl > return new instance of { link findandreplaceoptions } <END>
<BEG> insert a new document if not exists <END>
<BEG> get the bit indicate to return the replacement document <END>
<BEG> return return true if term be negate <END>
<BEG> get formatted representation of term <END>
<BEG> non-javadoc see org springframework data mongodb core reactivemongooperations # upsert org springframework data mongodb core query query <SEG> org springframework data mongodb core query update <SEG> java lang class <END>
<BEG> non-javadoc see org springframework data mongodb core reactivemongooperations # upsert org springframework data mongodb core query query <SEG> org springframework data mongodb core query update <SEG> java lang class <SEG> java lang string <END>
<BEG> count the number of { literal true } value <END>
<BEG> probably be a cover for something else in the past <END>
<BEG> most code should use the standard activexcomponent string contructor and not this factory method <END>
<BEG> retrieve a property and return it a a variant param propertyname return variant value of property <END>
<BEG> retrieve a property and return it a an activex component param propertyname return dispatch represent the object under the property name <END>
<BEG> retrieve a property and return it a a boolean param propertyname property we be look up return boolean value of property <END>
<BEG> retrieve a property and return it a a int param propertyname return the property value a an int <END>
<BEG> set a property on this object param propertyname property name param arg variant value to be set <END>
<BEG> use by the doc and application listener to get intelligent log param description event description param args args pass in variant <END>
<BEG> make a dispatch call for the pass in action and no parameter param callaction return activexcomponent represent the result of the call <END>
<BEG> invokes a single parameter call on this dispatch that return no value param actioncommand param parameter return a variant but that may be null for some call <END>
<BEG> make a dispatch call to the pass in action with a single boolean parameter param actioncommand param parameter return variant result <END>
<BEG> make a dispatch call to the pass in action with a single int parameter param actioncommand param parameter return variant result of the invoke dispatch call <END>
<BEG> make a dispatch call to the pass in action with two integer parameter this be put in for some application param actioncommand param parameter1 param parameter2 return a variant but that may be null for some call <END>
<BEG> make a dispatch call for the pass in action and no parameter param callaction return a variant but that may be null for some call <END>
<BEG> non-javadoc see com jacob com dispatchevents # getinvocationproxy java lang object <END>
<BEG> non-javadoc see com jacob com invocationproxy # invoke java lang string <SEG> com jacob com variant [ ] <END>
<BEG> return string ? ? ? <END>
<BEG> return int hr result ? ? <END>
<BEG> initialize the current java thread to be part of the multi-threaded com apartment <SEG> if createmainsta be true <SEG> create a separate mainsta thread that will house all apartment threaded component param createmainsta <END>
<BEG> initialize the current java thread to be an sta com apartment <SEG> if createmainsta be true <SEG> create a separate mainsta thread that will house all apartment threaded component param createmainsta <END>
<BEG> call couninitialize to release this java thread from com <END>
<BEG> deprecate the java model leave the responsibility of clear up object to the garbage collector <END>
<BEG> convert a windows time to a java date object param comtime return date object represent the windows time a specify in comtime <END>
<BEG> convert a com time from function date <SEG> time <SEG> now to a java time millisecond <END>
<BEG> wrapper around the native method param pprogramidentifier name of the program you wish to connect to <END>
<BEG> wrapper around the native method param pprogramidentifier <END>
<BEG> return the program id if an activex component create this otherwise it return null <END>
<BEG> param dispatchtarget param name param args an array of argument object <END>
<BEG> param dispatchtarget param name return int id for the pass in name <END>
<BEG> param dispatchtarget param name return int [ ] int id array for pass in name <END>
<BEG> make call to native callsubn param dispatchtarget param name <END>
<BEG> make call to native callsubn param dispatchtarget param name param a1 <END>
<BEG> not implement yet param dispatchtarget param name return variant never return throw com jacob com notimplementedexception <END>
<BEG> return dispatch the dispatch retrieve from the stream <END>
<BEG> get next element in collection or null if at end return variant that be next in the collection deprecate use nextelement instead <END>
<BEG> finalizers call this method <END>
<BEG> very basic debugging function <END>
<BEG> load propert_file_name and return the value of version in it return string value of version in propert_file_name or if none <END>
<BEG> developer note : this method must be synchronize with the dll names create a part of the build process in build xml < p > the dll name be jacob\ < platform\ > release return the preferred name of the dll adjust for this platform and version without the dll extension <END>
<BEG> iterates across all of the entry in the hashmap in the rot that correspond to this thread <END>
<BEG> convert a vt_ui1 array to string return variant byte a a string <END>
<BEG> standard tostring warning <SEG> this create new variant object ! <END>
<BEG> param cb the { link callback } instance param initializer the { link callbackthreadinitializer } - if { code null } then the associate initializer instance be remove return the previous initializer instance may be { code null } <END>
<BEG> find the first instance of an interface which implement the callback interface or an interface derive from callback <SEG> which define an appropriate callback method <END>
<BEG> obtain a pointer to the native glue code for this callback <END>
<BEG> free native resource associate with this callback when gc 'd <END>
<BEG> free native resource associate with this callback <END>
<BEG> dispose of all memory allocate for callback <END>
<BEG> add a { link tonativeconverter } to define the conversion into a native type from argument of the give java type <END>
<BEG> add a { link fromnativeconverter } to convert a native result type into the give java type <END>
<BEG> add a { link typeconverter } to provide bidirectional mapping between a native and java type <END>
<BEG> return true if the parsed file be detect to be for a 64bit architecture and pointer be expect to be 8byte wide <END>
<BEG> return true if the parse file be detect to be big endian <SEG> false if the file be little endian <END>
<BEG> return true if the parsed file be detect to be build for the arm architecture <END>
<BEG> the desired java type of the result <END>
<BEG> obtain a < code > function < code > represent a native function pointer <END>
<BEG> provide a human-readable representation of this object <END>
<BEG> convenience method for { link # invoke class <SEG> object [ ] invokeobject object class <SEG> args } <END>
<BEG> convenience method for { link # invoke class <SEG> object [ ] invoke string class <SEG> args } or { link # invoke class <SEG> object [ ] invoke wstring class <SEG> args } param args arguments pass to native function param wide whether the return value be of type < code > wchar_t < code > ; if false <SEG> the return value be of type < code > char < code > <END>
<BEG> implementation of boolean valueof for old vms <END>
<BEG> return the argument use in this function call <END>
<BEG> check if the supply method object represent a default method <END>
<BEG> force cleanup of memory that have associate nio buffers which have be gc 'd <END>
<BEG> provide a view of this memory use the give offset a the base address <SEG> bounds-limited with the give size <END>
<BEG> provide a view onto this structure with the give alignment <END>
<BEG> free the native memory and set peer to zero <END>
<BEG> returns false if the memory have be free <END>
<BEG> check that indirection wo n't cause u to write outside the malloc'ed space <END>
<BEG> indirect the native pointer to < code > malloc < code > space <SEG> a la < code > pointer read < code > <END>
<BEG> get a bytebuffer map to a portion of this memory <END>
<BEG> look for a matching framework osx <END>
<BEG> returns an instance of nativelibrary which refer to the current process <END>
<BEG> create a new { link function } that be link with a native function that follow the nativelibrary 's call convention <END>
<BEG> create a new { link function } that be link with a native function that follow a give call flag <END>
<BEG> return this native library instance 's option <END>
<BEG> look up the give global variable within this library <END>
<BEG> used by the function class to locate a symbol throw unsatisfiedlinkerror if the symbol ca n't be find <END>
<BEG> returns the file on disk correspond to this nativelibrary instance <END>
<BEG> close all open native library <END>
<BEG> similar to { link system # maplibraryname } <SEG> except that it map to standard share library format rather than specifically jni format <END>
<BEG> matchlibrary be very linux specific <END>
<BEG> provide a view of this memory use the give offset to calculate a new base address <SEG> bounds-limiting the memory with the give size <END>
<BEG> indirect the native pointer <SEG> copy < em > from < em > memory point to by native pointer <SEG> into the specified array <END>
<BEG> write the give array of pointer to native memory <END>
<BEG> indirect the native pointer a a pointer to < code > long < code > <END>
<BEG> get a bytebuffer map to the memory point to by the pointer <SEG> ensure the buffer use native byte order <END>
<BEG> read a native array of byte of size < code > arraysize < code > from the give < code > offset < code > from this { link pointer } <END>
<BEG> returns an array of < code > string < code > base on a native array of < code > char < code > or < code > wchar_t < code > base on the < code > wide < code > parameter <SEG> use the give array length <END>
<BEG> set < code > value < code > at location be point to <END>
<BEG> copy string < code > value < code > to the location be point to a a wide string < code > wchar_t < code > <END>
<BEG> dump memory for debug purpose <END>
<BEG> read the native peer value <END>
<BEG> all < code > pointertype < code > class represent a native { link pointer } <END>
<BEG> convert this object to it native type a { link pointer } <END>
<BEG> instances of < code > pointertype < code > with identical pointer compare equal by default <END>
<BEG> read back from native memory <END>
<BEG> set the desired encoding to use when write string field to native memory <END>
<BEG> encoding to use to convert { link string } to native < code > const char < code > <END>
<BEG> obtain auto-allocated memory for use with struct represenations <END>
<BEG> provided for derived class to indicate a different size than the default <END>
<BEG> returns the size in memory occupy by this structure <END>
<BEG> clears the native memory associate with this structure <END>
<BEG> return a { link pointer } object to this structure <END>
<BEG> performs auto-read only if uninitialized <END>
<BEG> reads the field of the struct from native memory <END>
<BEG> force a read of the give field from native memory <END>
<BEG> obtain the value currently in the java field <END>
<BEG> only keep the original structure if it native address be unchanged <END>
<BEG> write the give field to native memory <END>
<BEG> write the give field value to the field and native memory <END>
<BEG> param structfield internal field representation to synch to native memory <END>
<BEG> returns this structure 's field name in their proper order < br > when define a new { link structure } you should n't override this method <SEG> but use { link fieldorder } annotation to define your field order this also work with inheritance < br > if you want to do something non-standard you can override the method and define it a follow < pre > < code > protect list < string > getfieldorder { return arrays aslist ; } < code > < pre > < strong > important < strong > when derive from an exist structure subclass <SEG> ensure that you augment the list provide by the superclass <SEG> e g <END>
<BEG> param field the single field name return return an < u > un-modifiable < u > list contain the field name <END>
<BEG> param field the structure field name in correct order return an < u > un-modifiable < u > list of the field <END>
<BEG> efficiently calculate the size of the give structure subclass <END>
<BEG> param force whether to force size calculation <END>
<BEG> return current alignment set for this structure <END>
<BEG> return whether the give structure 's backing data be identical to this one <SEG> optionally clear and re-writing native memory before check <END>
<BEG> return whether the give structure 's type and pointer match <END>
<BEG> return hash code for this structure 's pointer <END>
<BEG> override to supply native type information for the give field <END>
<BEG> set whether the structure be read from native memory after a native function call <END>
<BEG> set whether the structure be write to native memory prior to a native function call <END>
<BEG> create a new structure instance of the give type <SEG> initialize with the give memory <END>
<BEG> indicate whether the give structure class can be create by jna <END>
<BEG> unions do not need a field order <SEG> so automatically provide a value to satisfy checking in the structure superclass <END>
<BEG> indicates by type which field will be use to write to native memory <END>
<BEG> indicates which field will be use to write to native memory <END>
<BEG> write the give field value to native memory <END>
<BEG> reads the structure field of the give type from memory <SEG> set it a the active type and return it <END>
<BEG> set the active type and it value <END>
<BEG> only the currently select field will be write <END>
<BEG> override this to handle any custom class mapping <END>
<BEG> looks up the method name by add a w or a suffix a appropriate <END>
<BEG> indicate the action available for the give list of data flavor <END>
<BEG> calculate the effective action <END>
<BEG> returns whether there be key modifier active <SEG> or false if they ca n't be determine <END>
<BEG> accept or reject the drag represent by the give event <END>
<BEG> update the appearance of the target component <END>
<BEG> param idx the enum index param clazz the enum class return the enum at position idx <END>
<BEG> return the ioreturn code <END>
<BEG> the high 6 bit of the return value encode the system <END>
<BEG> the low 14 bit of the return value encode the return code <END>
<BEG> this will return the first of the multiple vk constant map to the same value <END>
<BEG> simulates the macro ctl_code from winioctl h param devicetype the device type param function the function param method the method param access the access return int with the result control code <END>
<BEG> gets the native memory address represent by this { code address } a a { code long } integer <END>
<BEG> returns a address instance represent the specify { code long } value <END>
<BEG> wraps a native address in a { link pointer } instance <END>
<BEG> wraps an integer value in an opaque { link pointer } instance <END>
<BEG> indicates whether or not this memory object represent a native memory address <END>
<BEG> gets the { link runtime } this { code pointer } instance belongs to <END>
<BEG> returns the attribute 's value a a < code > integer < code > <SEG> if it really represent a number <END>
<BEG> if the process finish <SEG> this be it exit code <END>
<BEG> an error that occur <SEG> typically due to a startup failure <END>
<BEG> returns the full output of the process stdout plus stderr a a < code > string < code > <END>
<BEG> two { link serviceinfo } object be equal if their { link # getname name } be the same <END>
<BEG> build the huffman tree give an array of vertex degree param vertexdegree vertexdegree [ i ] = degree of ith vertex <END>
<BEG> checks <SEG> if there 's more sequence available return <END>
<BEG> returns next sequence out of iterator return <END>
<BEG> resets iterator to first position <END>
<BEG> this method return labelssource instance <SEG> contain all label derive from this iterator return <END>
<BEG> this method return the list of label use by this generator instance <END>
<BEG> this method check <SEG> if there 's more labelleddocuments in underlying iterator return <END>
<BEG> this method return next labelleddocument from underlie iterator return <END>
<BEG> implentation for iterable interface <END>
<BEG> checks <SEG> if any prebuffered token leave <SEG> otherswise check underlie stream return <END>
<BEG> returns number of tokens please note : this method effectively preloads all token <END>
<BEG> this method return next token from prebuffered list of token or underlie inputstream return next token a string <END>
<BEG> pre process a token param token the token to pre process return the preprocessed token <END>
<BEG> strip punctuation param base the base string return the cleaned string <END>
<BEG> returns tokenpreprocessor set for this tokenizerfactory instance return tokenpreprocessor instance <SEG> or null if no preprocessor be define <END>
<BEG> finds the area under the acc cov curve step by one percentage point and calcs area of trapezoid <END>
<BEG> accuracy at a give coverage percentage param cov coverage percentage return accuracy value <END>
<BEG> sort classification arraylist by winner 's value <END>
<BEG> displays the accuracy v coverage graph <END>
<BEG> adds a new data series param newitems vector of graphitems <END>
<BEG> classify an instance use the most frequent class label <END>
<BEG> classify an instance use random selection base on the train data <END>
<BEG> returns an array of instance list correspond to cluster <END>
<BEG> returns true if the value be stale <SEG> also update the cachevaluestamp <END>
<BEG> set the constraint by run forward-backward with the < i > output label sequence provide < i > <SEG> thus restrict it to only those path that agree with the label sequence <END>
<BEG> computes log probability of a batch of training data <SEG> fill in correspond expectation as well <END>
<BEG> returns the log probability of a batch of train sequence label and the prior over parameter <SEG> if last batch then incorporate the prior on parameter as well <END>
<BEG> use this method to specify whether or not factor be add to the crf by this trainer <END>
<BEG> automatically set the learn rate to one that would be good <END>
<BEG> resets <SEG> computes and fill expectation from all instance <SEG> also update the entropy value <END>
<BEG> should be call after training be complete to shutdown all thread <END>
<BEG> sets the scaling factor for the entropy regularization term <END>
<BEG> performs crf training with label likelihood and entropy regularization <END>
<BEG> computes the forward entropies h^alpha <END>
<BEG> verifies the correctness of the lattice computation <END>
<BEG> returns the log probability of the training sequence label and the prior over parameter <END>
<BEG> ca n't delegate to thashmap <SEG> because in early version of trove that we be freeze at the thashmap hashcode be n't consistent with equal <END>
<BEG> sets the lineoptimizer bygradient to use in l-bfgs optimization <END>
<BEG> add the token classifier 's prediction a feature to the instance <END>
<BEG> set the iterator to periodically print the total number of line read to standard out <END>
<BEG> these method will write to the provide writer <END>
<BEG> these method open a file <SEG> pass the writer to the above method <SEG> and then close the file <END>
<BEG> write the internal representation of type-topic count count topic pair in descend order by count to a file <END>
<BEG> if there be only one thread <SEG> we do n't need to go through communication overhead <END>
<BEG> return string representation of all alphabet entry <SEG> each separate by a newline <END>
<BEG> copy value from an array start at a particular index into this vector <END>
<BEG> test array referencing and dereferencing <END>
<BEG> calculates the schur hadamard product <END>
<BEG> print a space-separated array of element param m an array of any type <END>
<BEG> gives the minkowski distance between two vector <END>
<BEG> adds exist roc data to this roc data param rocdata roc data to add <END>
<BEG> convenience method for find the root logger <END>
<BEG> checks if < tt > min & lt ; = value & lt ; = max < tt > <END>
<BEG> returns the kl divergence <SEG> k p1 || p2 <END>
<BEG> returns the jensen-shannon divergence <END>
<BEG> the speed and quality of print suffers dramatically if any of the container have double buffering turn on <END>
<BEG> re-enables double buffering globally <END>
<BEG> return a random boolean <SEG> equally likely to be true or false <END>
<BEG> return a random double in the range 0 to 1 <SEG> inclusive <SEG> uniformly sample from that range <END>
<BEG> return a random double drawn from a gamma distribution with mean alpha beta+lamba and variance alpha beta^2 <END>
<BEG> return a random double drawn from an chi-squared distribution with mean df and variance 2 df <END>
<BEG> return a random double drawn from a beta distribution with mean a a+b and variance ab a+b+1 a+b ^2 <END>
<BEG> reference : j d beasley and s g springer algorithm as 111 : the percentage points of the normal distribution applied statistics <END>
<BEG> reference : i d hill algorithm as 66 : the normal integral applied statistics <END>
<BEG> returns a < code > sparsevector < code > whose entry take from the union of those in the instance be the expected value of those in the < code > instancelist < code > <END>
<BEG> returns a < code > sparsevector < code > whose entry dense with the give number of index be the expected value of those in the < code > instancelist < code > <END>
<BEG> evaluates the give reference { link chunksample } object <END>
<BEG> populates the specified array with the probability of the last decoded sequence <END>
<BEG> gets the training sentence <END>
<BEG> gets the pos tags for the sentence <END>
<BEG> gets the chunk tag in b- i- notation <END>
<BEG> creates a nice to read string for the phrase format a following : < br > < code > [ np rockwell_nnp ] [ vp said_vbd ] [ np the_dt agreement_nn ] [ vp calls_vbz ] [ sbar for_in ] [ np it_prp ] [ vp to_to supply_vb ] [ np 200_cd additional_jj so-called_jj shipsets_nns ] [ pp for_in ] [ np the_dt planes_nns ] _ <END>
<BEG> creates a usage string which can be print in case the user do specify the argument incorrectly <END>
<BEG> tests if the argument be correct or incorrect <END>
<BEG> filters argument leave only those pertain to argproxyinterface <END>
<BEG> return a set which contain all tool name <END>
<BEG> check that the give input file be valid <END>
<BEG> tries to ensure that it be possible to write to an output file <END>
<BEG> retrieves the specified parameter from the give argument <END>
<BEG> load the resource <SEG> such a dictionary <SEG> by read the feature xml descriptor and look into the directory pass a argument <END>
<BEG> perform sentence detection the input stream <END>
<BEG> unregisters a factory which read format name < code > formatname < code > and instantiates stream produce object of < code > sampleclass < code > class <END>
<BEG> returns all factory which produce object of < code > sampleclass < code > class <END>
<BEG> returns stream factory for the type of this tool for the < code > format < code > <END>
<BEG> validates argument use parameter from < code > argproxyinterface < code > and the parameter of the < code > format < code > <END>
<BEG> validates argument for a format process by the < code > factory < code > <END>
<BEG> adds the token to the dictionary a one new entry <END>
<BEG> return minimum token count in the dictionary <END>
<BEG> reads a dictionary which have one entry per line <END>
<BEG> gets this dictionary a a { code set < string > } <END>
<BEG> gets the serializer class for { link dictionary } return { link dictionaryserializer } <END>
<BEG> retrieves the value for the give key or null if attribute it not set <END>
<BEG> retrieves the accuracy for all iteration <END>
<BEG> retrieves the number of word which where validate over all iteration <END>
<BEG> retrieves the accuracy of provide { link documentcategorizer } <END>
<BEG> represents this object a human readable { link string } <END>
<BEG> categorize the give text provide a token along with the provided extra information param text text tokens to categorize param extrainformation additional information <END>
<BEG> returns a map in which the key be the category name and the value be the score param text the input text to classify return the score map <END>
<BEG> returns a map with the score a a key in ascend order <END>
<BEG> extract ngram feature from give text fragment param text the text fragment to extract feature from param extrainfo optional extra information return a collection of n gram feature <END>
<BEG> any parent id for the linked item return <END>
<BEG> return the parent id of the link item param itemparentid <END>
<BEG> return the itemid return <END>
<BEG> param entitytype the type of entity be link to <END>
<BEG> param property an object that extend entitylinkerproperties <END>
<BEG> returns the n best link entry from an external data source <END>
<BEG> returns the id or index of the sentence from which this span be extract return <END>
<BEG> set the id or index of the sentence from which this span be extract param sentenceid <END>
<BEG> returns the search term that be use to link this span to an external data source return searchterm <END>
<BEG> merges a contraction param leave the left component param right the right component return the merge contraction <END>
<BEG> segmentation etc <END>
<BEG> generates the context for a document use character ngrams <END>
<BEG> retrieves the word accuracy <END>
<BEG> retrieves the total number of word consider in the evaluation <END>
<BEG> predict all possible lemma use a default upper bound <END>
<BEG> decodes the lemma from the word and the induced lemma class <END>
<BEG> use the trainingparameters directly param key param defaultvalue <END>
<BEG> adds the key value to the report map <END>
<BEG> l2-norm <END>
<BEG> computes \log \sum_ { i=1 } ^n e^ { x_i } use a maximum-element trick to avoid arithmetic overflow <END>
<BEG> find index of maximum element in the vector x param x input vector return index of the maximum element <END>
<BEG> convert a list of double object into an array of primitive double <END>
<BEG> use this model to evaluate a context and return an array of the likelihood of each outcome give that context <END>
<BEG> sets whether this trainer will use smooth while train the model <END>
<BEG> train a model use the gis algorithm <END>
<BEG> negative log-likelihood <END>
<BEG> find the parameter that minimize the objective function param function objective function return minimize parameter <END>
<BEG> sorts and uniques the array of comparable event and return the number of unique event <END>
<BEG> return the name of the outcome corresponding to the high likelihood in the parameter ocs <END>
<BEG> gets the index associate with the string name of the give outcome <END>
<BEG> reads the parameter from a file and populate an array of context object <END>
<BEG> returns the outcome for which parameter exist for this context <END>
<BEG> returns the parameter or expect value for the outcome which occur with this context <END>
<BEG> generates a string represent the specified event <END>
<BEG> calculates the hash sum of the stream <END>
<BEG> assigns the parameter or expect value at the specified outcomeindex the specify value <END>
<BEG> updated the parameter or expect value at the specify outcomeindex by add the specify value to it current value <END>
<BEG> parses the specified context and re-populates context array with feature and return the value for these feature <END>
<BEG> returns an object from which this sequence can be derive <END>
<BEG> assigns a probability to a label <SEG> discard any previously assign probability <END>
<BEG> assigns a probability to a label <SEG> discard any previously assign probability <SEG> if the new probability be great than the old one <END>
<BEG> assigns a log probability to a label <SEG> discard any previously assign probability <END>
<BEG> returns the log probability associate with a label param t the label whose log probability need to be return return the log probability associate with the label <END>
<BEG> returns the probability associate with all label return the hashmap of label and their probability <END>
<BEG> returns the most likely label return the label that have the high associated probability <END>
<BEG> checks if a probability be great than the old one <END>
<BEG> returns the probability associate with a label return the probability associate with the label <END>
<BEG> determines the trainer type base on the algorithm_param value <END>
<BEG> b require cl or l c require bl l require b o require any valid combo unit u require none param outcomes all possible model outcome return true <SEG> if model outcome be compatible <END>
<BEG> return the context for find name at the specified index <END>
<BEG> generates the name tag outcome start <SEG> continue <SEG> other for each token in a sentence with the specified length use the specify name span <END>
<BEG> generates name tag for the give sequence <SEG> typically a sentence <SEG> return token span for any identified name <END>
<BEG> returns an array of probability for each of the specify span which be the arithmetic mean of the probability for each of the outcome which make up the span <END>
<BEG> gets the name type from the outcome param outcome the outcome return the name type <SEG> or null if not set <END>
<BEG> removes span with be intersect or cross in anyway <END>
<BEG> retrieves the count of the give ngram <END>
<BEG> sets the count of an exist ngram <END>
<BEG> adds one ngram <SEG> if it already exist the count increase by one <END>
<BEG> adds character ngrams to the current instance <END>
<BEG> checks fit he give token be contain by the current instance <END>
<BEG> creates a dictionary which contain all { link stringlist } s which be in the current { link ngrammodel } <END>
<BEG> writes the ngram instance to the give { link outputstream } <END>
<BEG> calculate the probability of a unigram in a vocabulary use maximum likelihood estimation param word the only word in the unigram param set the vocabulary return the maximum likelihood probability <END>
<BEG> calculate the probability of a bigram in a vocabulary use maximum likelihood estimation param x0 first word in the bigram param x1 second word in the bigram param set the vocabulary return the maximum likelihood probability <END>
<BEG> calculate the probability of a ngram in a vocabulary use maximum likelihood estimation param ngram a ngram param set the vocabulary return the maximum likelihood probability <END>
<BEG> get the n-1 th ngram of a give ngram <SEG> that be the same ngram except the last word in the ngram param ngram a ngram return a ngram <END>
<BEG> get the ngrams of dimension n of a certain input sequence of token <END>
<BEG> specifies whether the parser should report when it be unable to find a parse for a particular sentence <END>
<BEG> assigns parent reference for the specified parse so that they be consistent with the child reference <END>
<BEG> removes the punctuation from the specify set of chunk <SEG> add it to the par adjacent to the punctuation be specify <SEG> and return a new array of par with the punctuation remove <END>
<BEG> returns the top chunk sequence for the specified parse <END>
<BEG> determines the mapping between the specified index into the specified par without punctuation to the corresponding index into the specified par <END>
<BEG> creates punctuation feature for the specified punctuation at the specfied index base on the punctuation 's tag <END>
<BEG> generates a string represent the grammar rule production that the specified parse be start <END>
<BEG> produces feature to determine whether the specify child node be part of a complete constituent of the specify type and add those feature to the specfied list <END>
<BEG> populates specify node array with left-most right frontier node with a unique head <END>
<BEG> returns true if the specify child be the last child of the specified parent <END>
<BEG> returns the predictive context use to determine how constituent at the specified index should be combine with other contisuents <END>
<BEG> returns predictive context for decide whether the specified constituent between the specified start and end index can be combine to form a new constituent of the specify type <END>
<BEG> assigns the label to the constituent <END>
<BEG> writes the head rule to the writer in a format suitable for load the head rule again with the constructor <END>
<BEG> clones the right frontier of parse up to the specify node <END>
<BEG> specifies whether function tag should be include a part of the constituent type <END>
<BEG> set the type of this constituent to the specify type <END>
<BEG> designates that the specified punctuation should be prior to this parse <END>
<BEG> designates that the specified punctuation follow this parse <END>
<BEG> inserts the specified constituent into this parse base on it text span this method assume that the specified constituent can be insert into this parse <END>
<BEG> appends the specified string buffer with a string representation of this parse <END>
<BEG> returns the character offset for this constituent <END>
<BEG> returns the log of the product of the probability associate with all the decision which form this constituent <END>
<BEG> replaces the child at the specified index with a new child with the specify label <END>
<BEG> sister adjoin this node 's last child and the specified sister node and return their new parent node <END>
<BEG> returns the number of child for this parse node <END>
<BEG> returns the index within a sentence of the head token for this parse <END>
<BEG> computes the head parse for this parse and it sub-parses and store this information in the parse data structure <END>
<BEG> prune the specified sentence parse of vacuous production <END>
<BEG> parses the specified tree-bank style parse string and return a parse structure for that string <END>
<BEG> returns the parse node which be child of this node and which be pos tag <END>
<BEG> returns the deepest share parent of this node and the specify node <END>
<BEG> returns the derivation string for this parse if one have be create <END>
<BEG> specifies the derivation string to be associate with this parse <END>
<BEG> prints to standard out a representation of the specify parse which contain hash code so that parent child relationship can be explicitly see <END>
<BEG> utility method to insert name entity <END>
<BEG> param constituents the constituent a they have be construct so far <END>
<BEG> returns the context for make a po tag decision at the specify token index give the specify token and previous tag <END>
<BEG> returns a list of valid tag for the specify word <END>
<BEG> writes the { link posdictionary } to the give { link outputstream } ; after the serialization be finish the provided { link outputstream } remain open <END>
<BEG> retrieves the ngram dictionary <END>
<BEG> retrieves an array of all possible part-of-speech tag from the tagger <END>
<BEG> returns at most the specified number of taggings for the specified sentence <END>
<BEG> space delimit token follow token contain eos character <END>
<BEG> detect sentence in a string <END>
<BEG> detect the position of the first word of sentence in a string <END>
<BEG> returns the probability associate with the most recent call to sentdetect <END>
<BEG> allows subclasses to check an overzealous read : poorly train model from flag obvious non-breaks a break base on some boolean determination of a break 's acceptability <END>
<BEG> add a character to the word be stem <END>
<BEG> setto s set j+1 <SEG> k to the character in the string s <SEG> readjust k <END>
<BEG> to replace char between c_bra and c_ket in current by the char in s <END>
<BEG> copy the slice into the supplied stringbuffer <END>
<BEG> non-javadoc see opennlp tool tokenize tokencontextgenerator # getcontext java lang string <SEG> int <END>
<BEG> returns an { link arraylist } of feature for the specified sentence string at the specified index <END>
<BEG> helper function for getcontext <END>
<BEG> gets the alpha numeric pattern <END>
<BEG> gets whether to use alphanumeric optimization <END>
<BEG> gets the abbreviation dictionary return null or the abbreviation dictionary <END>
<BEG> retrieves the language code <END>
<BEG> returns the probability associate with the most recent call to { link tokenizerme # tokenize string } or { link tokenizerme # tokenizepos string } <END>
<BEG> returns the value of the alpha-numeric optimization flag <END>
<BEG> retrieves the token span <END>
<BEG> initializes the toolfactory with an artifact provider <END>
<BEG> creates a { link map } with pair of key and { link artifactserializer } <END>
<BEG> creates a { link map } with pair of key and object <END>
<BEG> creates the manifest entry that will be add to the model manifest return the manifest entry to add to the model manifest <END>
<BEG> updates the score base on the number of true positive and the number of prediction and reference <END>
<BEG> merge result into fmeasure metric <END>
<BEG> this method count the number of object which be equal and occur in the reference and prediction array <END>
<BEG> adds a value count time to the arithmetic mean <END>
<BEG> retrieves the mean of all value add with { link # add double } or 0 if there be zero added value <END>
<BEG> retrieves the number of time a value be add to the mean <END>
<BEG> indicates if opennlp be run in an osgi environment or not <END>
<BEG> calls the { link adaptivefeaturegenerator # clearadaptivedata } method on all aggregate { link adaptivefeaturegenerator } s <END>
<BEG> calls the { link adaptivefeaturegenerator # updateadaptivedata string [ ] <SEG> string [ ] } method on all aggregate { link adaptivefeaturegenerator } s <END>
<BEG> retrieves a { link collections } of all aggregate { link adaptivefeaturegenerator } s return all aggregate generator <END>
<BEG> check if a token be in the brown : path <SEG> token map <END>
<BEG> it provide a list contain the pathlengths for a token if find in the map : token <SEG> brownclass <END>
<BEG> retrieves the number of time a cache hit occur <END>
<BEG> generates a class name for the specify token <END>
<BEG> sub-classes should override this method if their module have a default basetoolfactory sub-class <END>
<BEG> registers all { link artifactserializer } for their artifact file name extension <END>
<BEG> validates the parsed artifact <END>
<BEG> retrieves the value to the give key from the manifest property entry <END>
<BEG> sets a give value for a give key to the manifest property entry <END>
<BEG> retrieves the language code of the material which be use to train the model or x-unspecified if non be set <END>
<BEG> retrieves the opennlp version which be use to create the model <END>
<BEG> checks if the expect outcome be all contain a outcome in the give model <END>
<BEG> creates the default training parameter in case they be not provide <END>
<BEG> retrieves a token from the give index <END>
<BEG> retrieves the number of token inside this list <END>
<BEG> retrieves an { link iterator } over all token <END>
<BEG> compares to token list and ignore the case of the token <END>
<BEG> converts to lower case independent of the current locale via { link character # tolowercase char } which use map information from the unicodedata file <END>
<BEG> returns { code true } if { link charsequence # length } be { code 0 } or { code null } <END>
<BEG> computes the levenshtein distance of two string in a matrix <END>
<BEG> read predict ses by the lemmatizer model and apply the permutation to obtain the lemma from the wordform <END>
<BEG> get the ses require to go from a word to a lemma <END>
<BEG> retrieves the training algorithm name for a give name space <END>
<BEG> retrieves the training algorithm name <END>
<BEG> get a string parameter in the specified namespace <END>
<BEG> get an integer parameter in the specified namespace param namespace param key param defaultvalue return <END>
<BEG> return a new { link version } initialize to the value represent by the specify { link string } param version the string to be parse return the version represent by the string value throw numberformatexception if the string do not contain a valid version <END>
<BEG> retrieves the current version of the opennlp tools library <END>
<BEG> parses a glove vector plain text file <END>
<BEG> calculate the conditional likelihood <END>
<BEG> evaluates the precision and recall of this classifier against a dataset <SEG> and the target label <END>
<BEG> evaluate the accuracy of this classifier on the give dataset <END>
<BEG> read a set of train example from a file <SEG> and return the data in a featurized form <END>
<BEG> read a set of train example from a file <SEG> and return the data in a featurized form and in string form <END>
<BEG> read a data set from a file at test time <SEG> and return it <END>
<BEG> creates a classifier from train data <END>
<BEG> runs the columndataclassifier from the command-line <END>
<BEG> serialize a classifier to an objectoutputstream <END>
<BEG> test and evaluate classifier on example available in a file or url <SEG> classpath resource <SEG> etc <END>
<BEG> run cross-validation on a dataset <SEG> and return accuracy and macro-f1 score <END>
<BEG> get number of datum a give feature appear in <END>
<BEG> method to convert feature from count to l1-normalized tfidf base feature param datum with a collection of feature <END>
<BEG> method to convert this dataset to rvfdataset use l1-normalized tf-idf feature return rvfdataset <END>
<BEG> adds a datum define by feature index and label index careful with this one ! <END>
<BEG> return the index-ed datum <END>
<BEG> prints some summary statistic to stderr for the dataset <END>
<BEG> a string that be multiple line of text give summary statistic <END>
<BEG> print the full feature matrix in tab-delimited form <END>
<BEG> need to sort the counter by feature key and dump it <END>
<BEG> resets the dataset so that it be empty and ready to collect data <END>
<BEG> get the total count over all data instance of each feature return an array contain the count index by index <END>
<BEG> applies a feature count threshold to the dataset <END>
<BEG> applies a max feature count threshold to the dataset <END>
<BEG> return the number of distinct feature type in the dataset <END>
<BEG> adds all datums in the give collection of data to this dataset param data collection of datum you would like to add to the dataset <END>
<BEG> randomizes the data array in place <END>
<BEG> returns an iterator over the class label of the dataset return an iterator over the class label of the dataset <END>
<BEG> param dataset return a new generaldataset whose feature and id map exactly to those of this generaldataset <END>
<BEG> construct a counter with key the label of the classifier and value the score unnormalized log probability of each class <END>
<BEG> given a datum 's feature <SEG> construct a counter with key the label and value the score unnormalized log probability for each class <END>
<BEG> returns of the score of the datum for the specify label <END>
<BEG> returns a counter mapping from each class name to the probability of that class for a certain example <END>
<BEG> returns a counter mapping from each class name to the log probability of that class for a certain example <END>
<BEG> given a datum 's feature <SEG> return a counter mapping from each class name to the log probability of that class <END>
<BEG> returns index of label param label - set of label to get index return set of index <END>
<BEG> similar to histogram but exact value of the weight to see whether there be many equal weight <END>
<BEG> print out a partial representation of a linear classifier in one of several way <END>
<BEG> print all feature in the classifier and the weight that they assign to each class <END>
<BEG> print all feature active for a particular datum and the weight that the classifier assigns to each class for those feature <END>
<BEG> this method return a map from each label to a counter of feature weight for that label <END>
<BEG> saves this out to a standard text file <SEG> instead of a a serialized java object <END>
<BEG> the feature number of the original feature or -1 if this be for a prior <END>
<BEG> create an index for each parameter - the prior probs and the feature with all of their value <END>
<BEG> use a random start point uniform -1 1 <END>
<BEG> return the weight to each feature assign by the classifier nmramesh c stanford edu <END>
<BEG> return the weight assign by the classifier to each feature <END>
<BEG> return the score for both the class <END>
<BEG> trains on weighted dataset <END>
<BEG> this run a simple train and test regime <END>
<BEG> the example be assume to be a list of rfvdatum <END>
<BEG> train weight <END>
<BEG> settunesigmacv set the { code tunesigma } flag : when turn on <SEG> the sigma be tune by cross-validation <END>
<BEG> initialize the numpositive and the numnegative array <END>
<BEG> what be the best precision at the give recall <END>
<BEG> the f-measure if we just guess a negative the first numleft and guess a positive the last numright <END>
<BEG> what be the precision at this recall if we look at the score a the probability of class 1 give x a if come from logistic regression <END>
<BEG> what be the optimal f-measure we can achieve give recall guess use the optimal monotonic function <END>
<BEG> assume the score be probability of 1 give x <END>
<BEG> optimal confidence weight accuracy assume for each recall we can fit an optimal monotonic function <END>
<BEG> checks if the dataset have any unbounded value <END>
<BEG> scales the value of each feature in each linearly use the min and max value find in the training set <END>
<BEG> scales the value of each feature linearly use the min and max value find in the training set <END>
<BEG> prints some summary statistic to the logger for the dataset <END>
<BEG> modification of printfullfeaturematrix to correct bug and print value rajat <END>
<BEG> removes all feature from the dataset that be not in featureset <END>
<BEG> read svm-light format data into this dataset <END>
<BEG> write the dataset in svm-light format to the file <END>
<BEG> prints a sparse feature matrix representation of the dataset <END>
<BEG> returns a counter for the log probability of each of the class look at the the sum of e^v for each count v <SEG> should be 1 note : uses sloppymath logsum which be n't exact but be n't as offensively slow a do a series of exponential <END>
<BEG> randomizes shuffle the data array in place <END>
<BEG> get the weight array for this dataset <END>
<BEG> add a datum <SEG> with a give weight <END>
<BEG> when conll be true <SEG> coref model : < ul > < li > use provide pos <SEG> ner <SEG> parsing <SEG> etc <END>
<BEG> compatible modifier only <END>
<BEG> check whether late mention have incompatible modifier <END>
<BEG> check whether there be a new number in late mention <END>
<BEG> have extra proper noun except string involve in semantic match <END>
<BEG> useful utility for coreference resolution <END>
<BEG> get corefmention by position <END>
<BEG> delete a mention from this coreference chain <END>
<BEG> merge 2 cluster : to = to + from <END>
<BEG> print cluster information <END>
<BEG> if the input string be an abbreviation of a u s state name or the canonical name <SEG> the canonical name be return <END>
<BEG> returns a set of demonyms for a country or city or region <END>
<BEG> mark twin mention in gold and predict mention <END>
<BEG> returns whether the give token count a a valid pronominal mention for kbp <END>
<BEG> reads and dump output <SEG> mainly for debug <END>
<BEG> if true <SEG> use conll auto file <SEG> else use conll gold file <END>
<BEG> property <SEG> environment setting <END>
<BEG> main entry of coreference system <END>
<BEG> check whether a mention be inside of a name entity <END>
<BEG> check whether pleonastic 'it ' <END>
<BEG> manages the property for training and run neural coreference system <END>
<BEG> print the value of variable in this class <END>
<BEG> the format of each line of this file be fullstatename tab abbrev the file be case and check case <END>
<BEG> gold clusters for coreferent mention <END>
<BEG> needs the following property : -props 'location of coref property ' throw exception <END>
<BEG> returns the name of the log file that this method write <END>
<BEG> run and score coref distribute <END>
<BEG> given a set of sieve <SEG> select an optimal ordering for the sieve by iterate over sieve <SEG> and select the one that give the best score and add sieve one at a time until no more sieve leave <END>
<BEG> transducergraph fa = new transducergraph ; fa addarc fa getstartnode <SEG> 1 <SEG> a <SEG> ; fa addarc fa getstartnode <SEG> 2 <SEG> b <SEG> ; fa addarc fa getstartnode <SEG> 3 <SEG> c <SEG> ; fa addarc 1 <SEG> 4 <SEG> a <SEG> ; fa addarc 2 <SEG> 4 <SEG> a <SEG> ; fa addarc 3 <SEG> 5 <SEG> c <SEG> ; fa addarc 4 <SEG> fa getendnode <SEG> c <SEG> ; fa addarc 5 <SEG> fa getendnode <SEG> c <SEG> ; system out println fa ; exactautomatonminimizer minimizer = new exactautomatonminimizer ; system out println minimizer minimizefa fa ; <END>
<BEG> takes time linear in number of arc <END>
<BEG> just do union of keysets of map <END>
<BEG> returns a set of type transducergraph arc <END>
<BEG> return true if and only if it create a new arc and add it to the graph <END>
<BEG> if markovorder be zero <SEG> we always transition back to the start state if markovorder be negative <SEG> we assume that it be infinite <END>
<BEG> for add a zero degree vertex param v <END>
<BEG> add vertex if not already in the graph and the edge between them param source param d param data <END>
<BEG> only check if there be an edge from source to dest <END>
<BEG> deletes node with zero incoming and zero outgoing edge <END>
<BEG> direction insensitive the path can go up or through the parent <END>
<BEG> can specify the direction sensitivity param node1 param node2 param directionsensitive - whether the path can go through the parent return the list of node you get through to get there <END>
<BEG> topological sort of the graph <END>
<BEG> cast this multi-graph a a map from vertex <SEG> to the outgo data along edge out of those vertex <END>
<BEG> this be the documentreaderandwriter use for read training and testing file <END>
<BEG> this be the default documentreaderandwriter use for read text file for runtime classification <END>
<BEG> this method should be call after there have be change to the flag seqclassifierflags variable <SEG> such a after deserializing a classifier <END>
<BEG> makes a documentreaderandwriter base on flag plaintextreaderandwriter <END>
<BEG> returns the background class for the classifier <END>
<BEG> takes a list of token and provide the k best sequence labelings of these token with their score <END>
<BEG> classify the token in a string <END>
<BEG> maps a string input to an xml-formatted rendition of apply ner to the string <END>
<BEG> classify the content of a { link string } to one of several string representation that show the class <END>
<BEG> classify the content of a { link string } <END>
<BEG> classify the content of a { link string } to classified character offset span <END>
<BEG> classification be finish for the document <END>
<BEG> train the classifier base on value in flag <END>
<BEG> takes a { link list } of document and print the likelihood of each possible label at each point <END>
<BEG> does nothing by default <END>
<BEG> loads a classifier from the file <SEG> classpath resource <SEG> or url specify by loadpath <END>
<BEG> loads a classifier from the file specify <END>
<BEG> print the string feature generate from a in <END>
<BEG> either find combination_mode_property or return a default value <END>
<BEG> this merge in label from the auxdocument into the maindocument when token have one of the label in auxlabels <SEG> and the subsequence label with this auxlabel do not conflict with any non-background labelling in the maindocument <END>
<BEG> generates the answerannotation label of the combined model for the give token <SEG> store them in place in the token <END>
<BEG> some basic testing of the classifiercombiner <END>
<BEG> adjust the bias parameter to optimize some objective function <END>
<BEG> the main method <SEG> which be essentially the same a in crfclassifier <END>
<BEG> returns the total number of weight associate with this classifier <END>
<BEG> scales the weight of this crfclassifier by the specified weight <END>
<BEG> combines weight crf with this crf <END>
<BEG> convert a document list into array store the data feature and label <END>
<BEG> convert an objectbank to correspond collection of data feature and label <END>
<BEG> this routine build the { code labelindices } which give the empirically legal label sequence of length order at most { code windowsize } and the { code classindex } <SEG> which index know answer class <END>
<BEG> do standard sequence inference <SEG> use either viterbi or beam inference depend on the value of { code flag inferencetype } <END>
<BEG> takes a { link list } of document and print the factor table at each point <END>
<BEG> takes a { link list } of something that extend { link coremap } and print the likelihood of each possible label at each point <END>
<BEG> serialize the model to a human readable format <END>
<BEG> this be use to load the default supply classifier store within the jar file <END>
<BEG> return a matrix where each entry m [ i ] [ j ] be logp j|i in other word <SEG> each row vector be normalize log conditional likelihood <END>
<BEG> used to get the default supply classifier inside the jar file <END>
<BEG> loads a crf classifier from a filepath <SEG> and return it <END>
<BEG> set the data to test on <END>
<BEG> set the evaluation command set to null to skip evaluation use command line param evalcmd <END>
<BEG> computes the unnormalized log conditional distribution over value of the element at position po in the sequence <SEG> condition on the value of the element in all other position of the provided sequence <END>
<BEG> todo mengqiu this function be buggy <SEG> should make sure label convert properly into int [ ] in case where it 's not 0-order label <END>
<BEG> return the log probability for the give label index use classindex <SEG> where the last label corresponds to the label at the specified position <END>
<BEG> returns the probability for the give label index use classindex <SEG> where the last label corresponds to the label at the specified position <END>
<BEG> return the probability for the give label <SEG> where the last label corresponds to the label at the specified position <END>
<BEG> gives the probability of a tag at a single position condition on a sequence of previous label <END>
<BEG> computes the distribution over value of the element at position po in the sequence <SEG> condition on the value of the element in all other position of the provided sequence <END>
<BEG> return the number of possible value for each element ; it be assume to be the same for the element at each position <END>
<BEG> returns the collection that this basicdatum be construct with <END>
<BEG> returns the label for this datum <SEG> or null if none have be set <END>
<BEG> returns a string representation of this basicdatum list feature and label <END>
<BEG> returns whether the give datum contain the same feature a this datum <END>
<BEG> output feature that have already be convert into feature use documenttodataandlabels in format suitable for crfsuite <END>
<BEG> output feature from a collection of document to a file format be with one line per token use the following format word label feat1 feat2 where each space be actually a tab each document be separate by an empty line this format be suitable for modified crfsgd <END>
<BEG> compute the expected count for this document <SEG> which we will need to compute the derivative <END>
<BEG> performs stochastic gradient update base on sample index by batch <SEG> but do not apply regularization <END>
<BEG> computes value of function for specified value of x scale by xscale only over sample index by batch <END>
<BEG> takes a double array of weight and create a 2d array where : the first element be the mapped index of the clique size e g <SEG> node-0 <SEG> edge-1 match featuresindex i the second element be the number of output class for that clique size return a 2d weight array <END>
<BEG> beware : this change the input weight array in place <END>
<BEG> calculates both value and partial derivative at the point x <SEG> and save them internally <END>
<BEG> returns a single clique potential <END>
<BEG> computes the probability of the tag of be at the end of the table give that the previous tag sequence in table be given <END>
<BEG> computes the probability of the tag at the end of the table give that the previous tag sequence in table be given <END>
<BEG> computes the probability of the sequence of be at the end of the table give that the first tag in table be given <END>
<BEG> computes the probability of the tag of be at the beginning of the table give that the tag sequence given be at the end of the table <END>
<BEG> increment count for an observation label pair <END>
<BEG> true if this observation be constrain <SEG> and false otherwise <END>
<BEG> get the allowed label set for an observation <END>
<BEG> setup the constrained label set and free bookkeeping resource <END>
<BEG> get the probability of label with labelindex for the token at position return <END>
<BEG> return the score of the propose tag for position give <END>
<BEG> extract the entity start at the give position and add it to the entity list <END>
<BEG> find other location in the sequence where the sequence of word in this entity occur <END>
<BEG> a utility to strip out corporate title e g <SEG> corp <SEG> incorporate <SEG> etc <END>
<BEG> see if a potential mention be longer or same length and appear early <END>
<BEG> score the give input <SEG> return both the classification decision and the probability of that decision <END>
<BEG> called by extractentities after extraction be do <END>
<BEG> converts namedentitytagannotation tag into { link entitymention } s this find the long sequence of namedentitytagannotation tag of the matching type <END>
<BEG> this should be call after the classifier have be train and parseandtrain have be call to accumulate test set this will return precision <SEG> recall and f1 measure <END>
<BEG> param annotationstoskip the type of annotation to skip in assign answer annotation <END>
<BEG> model creation <SEG> save <SEG> loading <SEG> and save <END>
<BEG> predict a relation for each pair of entity in the sentence ; include relation of type unrelated <END>
<BEG> helper method that check if a feature type type be present in the list of feature type and remove it from checklist param type param checklist param type return true if type contains type <END>
<BEG> under construction <END>
<BEG> searches recursively for the first child that have the give name <END>
<BEG> searches for all immediate child with the give name <END>
<BEG> searches for child that have the give attribute <END>
<BEG> searches for child that have the give name and attribute <END>
<BEG> constructs one document from an xml file <END>
<BEG> basic string tokenization <SEG> skip over white space <END>
<BEG> string tokenization <SEG> consider everything within quote a 1 token regular quote inside token must be precede by \ <END>
<BEG> constructs a valid quote-surrounded token all inside quote be precede by \ <END>
<BEG> implements a simple test <END>
<BEG> reverse mapping from integer key to string value <END>
<BEG> saves all dictionary entry that appear { literal > } threshold time note : feature index be change to contiguous value start at 0 <END>
<BEG> reads in ace apf xml file and convert them to relationsentence object <END>
<BEG> matches this char seq against the full token stream as a result of this method mtokenoffset be initialize <END>
<BEG> verifies if the two token be part of the same chunk <END>
<BEG> detects the head word of this mention heuristic : a the last token in mhead <SEG> if there be no preposition b the last word before the first preposition note : the mhead must be already match against token ! <END>
<BEG> verifies if this mention appear before the parameter in textual order <END>
<BEG> returns the small start of all argument head or the beginning of the mention 's extent if there be no argument <END>
<BEG> verifies if the give string exists in the give dictionary <END>
<BEG> recomputes start end phrase position by remove sgml tag string this be require because ace annotation skip over sgml tag when compute position in stream <SEG> hence annotation do not match with our preprocessing position <SEG> which count everything <END>
<BEG> pretty display <END>
<BEG> any in the set <END>
<BEG> one or more <END>
<BEG> parens <END>
<BEG> any of the two <END>
<BEG> not <END>
<BEG> tokenizes a natural language string return list of wordtokens <END>
<BEG> tokenizes and add blank space be need between each token <END>
<BEG> take a dataset annotation <SEG> generate their parse tree and identify syntactic head and head span <SEG> if necessary <END>
<BEG> converts the tree label to corelabels <END>
<BEG> performs extraction <END>
<BEG> given a list of sentence a coremaps <SEG> wrap it in a new annotation <END>
<BEG> converts the label of all entity mention in this dataset to sequence of corelabels param dataset param annotationstoskip param usesubtypes <END>
<BEG> creates a deep copy of the give dataset with new list for all mention entity <SEG> relation <SEG> event param dataset <END>
<BEG> deep copy of the sentence : we create new entity relation event list here <END>
<BEG> prepare a string for printing in a spreadsheet for mechanical turk input <END>
<BEG> public static list < corelabel > wordstocorelabels list < word > word { list < corelabel > label = new arraylist < corelabel > ; for word word : word { corelabel l = new corelabel ; l setword word word ; l set coreannotations textannotation class <SEG> word word ; l setbeginposition word beginposition ; l setendposition word endposition ; label add l ; } return label ; } <END>
<BEG> shift the character offset of all token by offset <END>
<BEG> process string to be a cell in excel file <END>
<BEG> returns the text corresponding to the extent of this object <END>
<BEG> always return the text corresponding to the extent of this object <SEG> even when getvalue be override by subclass <END>
<BEG> concatenates two type param t1 param t2 <END>
<BEG> returns true if it 's worth save printing this object this happen in two case : 1 <END>
<BEG> returns true if this span contain otherspan <END>
<BEG> returns true if this span end before the otherspan start <END>
<BEG> returns true if this span start after the otherspan 's end <END>
<BEG> move a span by the give amount <END>
<BEG> convert an end-exclusive span to an end-inclusive span <END>
<BEG> returns the small distance between two span <END>
<BEG> a silly translation between a pair and a span <END>
<BEG> returns the set of entity recognize by this classifier <END>
<BEG> returns the most likely class for the word at the give position <END>
<BEG> returns the log conditional likelihood of the give dataset <END>
<BEG> param featurelabels adaptation docs param traindataset original dataset use in training <END>
<BEG> param featurelabels retrain docs param featureindex featureindex of original dataset use in train param labelindex labelindex of original dataset use in training <END>
<BEG> build a dataset from some data <END>
<BEG> used to load the default supply classifier <END>
<BEG> used to obtain the default classifier which be store inside a jar file <END>
<BEG> make an individual datum out of the data list info <SEG> focus at position loc <END>
<BEG> method for display info about an nerclassifiercombiner <END>
<BEG> runs this name entity recognizer server <END>
<BEG> properties prop = stringutils argstoproperties -props <SEG> users yuhao research tmp chinesenumberclassifierprops property ; properties prop = stringutils argstoproperties -props <SEG> users yuhao research tmp englishnumberclassifierprops property ; prop setproperty outputformat <SEG> text ; prop setproperty ssplit boundarytokenregex <SEG> \\n ; one sentence per line stanfordcorenlp pipeline = new stanfordcorenlp prop ; string docfilename = users yuhao research tmp chinese_number_examples txt ; string docfilename = users yuhao research tmp english_number_examples txt ; list < string > doclines = ioutils linesfromfile docfilename ; printstream out = new printstream docfilename + out ; for string docline : doclines { annotation sentenceannotation = new annotation docline ; pipeline annotate sentenceannotation ; pipeline prettyprint sentenceannotation <SEG> out ; pipeline prettyprint sentenceannotation <SEG> system out ; } out close ; <END>
<BEG> the subject of this relation triple <SEG> a a string <END>
<BEG> the head of the subject of this relation triple <END>
<BEG> the subject of this relation triple <SEG> a a string of the subject 's lemma <END>
<BEG> a textual representation of the confidence <END>
<BEG> gets the span of the non-canonical subject <END>
<BEG> get a representative span for the relation express by this triple <END>
<BEG> if true <SEG> this relation express a to be relation <END>
<BEG> set the value of this relation triple express a to be relation <END>
<BEG> if true <SEG> this relation express a to be relation with the be at the end of the sentence <END>
<BEG> set the value of this relation triple express a to be relation suffix <END>
<BEG> if true <SEG> this relation have an ungrounded of at the end of the relation <END>
<BEG> return the give relation triple a a flat sentence <END>
<BEG> print a human-readable description of this relation triple <SEG> a a tab-separated line <END>
<BEG> print in the format expect by gabriel stanovsky and ido dagan <SEG> creating a large benchmark for open information extraction <SEG> emnlp 2016 http : gabrielstanovsky github io asset paper emnlp16a paper pdf <SEG> with equivalence class <END>
<BEG> print a description of this triple <SEG> format like the reverb output <END>
<BEG> required <SEG> but unused <END>
<BEG> segment all string from an input <END>
<BEG> train a segmenter from raw text <END>
<BEG> train a new segmenter or load an trained model from file <END>
<BEG> for debug param args <END>
<BEG> returns a factory for frenchtokenizer that replicate the tokenization of green <SEG> de marneffe <SEG> and manning 2011 <END>
<BEG> returns whether these two language can be consider compatible with each other <END>
<BEG> an alternate tag form than the one produce by gettag <END>
<BEG> assumes that the tag string have be form use a call to gettag <END>
<BEG> value return the value in the order in which they be declare <END>
<BEG> find the next point preterminal at which the give tree should be split <END>
<BEG> determine if the give pronoun can have multiple sens <END>
<BEG> returns a tokenizer with ancora tokenization <END>
<BEG> a factory that vend corelabel token with default tokenization <END>
<BEG> a fast <SEG> rule-based tokenizer for spanish base on ancora <END>
<BEG> singleton pattern function for get a verb stripper base on the dictionary at dictpath <END>
<BEG> determine if the give word be a verb which need to be strip <END>
<BEG> remove attach pronoun from a strippable spanish verb form <END>
<BEG> returns a description of what extension be be use for file chooser <END>
<BEG> this be simply a debugging aid that test the functionality of the class <END>
<BEG> checks whether a file satisfy the number range selection filter <END>
<BEG> reads from the < code > reader < code > <SEG> return the same value <END>
<BEG> reads from the < code > reader < code > into a byte array param b the byte array to read into param off the offset in the byte array param len the length in the byte array to fill return the actual number read into the byte array <SEG> -1 at the end of the stream exception ioexception if an error occurs <END>
<BEG> checks whether a file satisfy the selection filter <END>
<BEG> returns a coreannotation class key for the give string key if one exist ; null otherwise <END>
<BEG> returns the runtime value type associate with the give key <END>
<BEG> returns the first label for this datum <SEG> or null if none have be set <END>
<BEG> returns the complete list of label for this datum <SEG> which may be empty <END>
<BEG> removes all currently assign labels for this datum then add the give label <END>
<BEG> removes all currently assign label for this datum then add all of the give labels <END>
<BEG> adds the give label to the list of label for this datum if it be not null <END>
<BEG> inits a new basicdocument by read in the text from the give file <END>
<BEG> initializes a new basicdocument with the give list of word and title <END>
<BEG> returns < tt > this < tt > the feature be the list of word <END>
<BEG> returns the complete list of label for this document <END>
<BEG> returns the current tokenizerfactory use by { link # parse string } <END>
<BEG> returns the text originally use to construct this document <SEG> or null if there be no original text <END>
<BEG> returns a pretty version of the word in this document suitable for display <END>
<BEG> for internal debugging purpose only <END>
<BEG> set everything by reverse a tostring operation <END>
<BEG> return a factory for this kind of label i e <SEG> < code > categorywordtag < code > <END>
<BEG> return a factory for this kind of label return the label factory <END>
<BEG> make a new label with this < code > string < code > a the name <END>
<BEG> create a new < code > categorywordtag label < code > <SEG> where the label be form from the < code > label < code > object pass in <END>
<BEG> pieces a list of coremaps back together use word and set a white space between each word todo : remove this sentenceutils listtostring do the same thing - why 2 separate class <END>
<BEG> in most case <SEG> this be just the index of the word <END>
<BEG> see indexedword # pseudoposition <END>
<BEG> this hashcode use only the docid <SEG> sentenceindex <SEG> and index <END>
<BEG> returns the counter of feature and value <END>
<BEG> sets id for this instance param id <END>
<BEG> create an arraylist a a list of { code taggedword } from two list of { code string } <SEG> one for the word <SEG> and the second for the tag <END>
<BEG> create an arraylist a a list of { code word } from a list of { code string } <END>
<BEG> create a sentence a a list of { code word } object from an array of string object <END>
<BEG> create a sentence a a list of { code corelabel } object from a list of other label object <END>
<BEG> pretty print coremap class use the same semantics a the toshorterstring method <END>
<BEG> returns the sentence a a string <SEG> base on the original text and space prior to tokenization <END>
<BEG> returns the substring of the sentence from start inclusive to end exclusive <END>
<BEG> return the word value of the label or null if none <END>
<BEG> set the label from a string <END>
<BEG> make a new label with this < code > string < code > a the value word <END>
<BEG> create a new word <SEG> where the label be form from the < code > string < code > pass in <END>
<BEG> add specify rule to this extractor <END>
<BEG> returns list of merge token and original token <END>
<BEG> public map < string <SEG> string > getattributes { return attribute ; } <END>
<BEG> given a sequence to search through e g <END>
<BEG> segment a sequence into sequence of sub-sequences by attempt to maximize the total score non-matched part will be include a a match with a null value <END>
<BEG> given a list of match <SEG> return all non-overlapping match <END>
<BEG> given a sequence <SEG> apply our pattern over the sequence and return all match <SEG> depend on the findtype <END>
<BEG> given a sequence <SEG> apply each of our pattern over the sequence and return all non overlap match for each of the pattern <END>
<BEG> given a sequence <SEG> return the collection of pattern that be trigger by the sequence these pattern be the one that may potentially match a subsequence in the sequence param element input sequence return collection of trigger pattern <END>
<BEG> clears this table <END>
<BEG> given a segment of text <SEG> return list of span phrasematch that correspond to a phrase in the table param text input text to search over return list of all matched span <END>
<BEG> given a segment of text <SEG> return list of span phrasematch that correspond to a phrase in the table filter by the list of acceptable phrase param acceptablephrases - what phrase to look for need to be subset of phrase already in table param text input text to search over return list of all matched span <END>
<BEG> compiles a patternexpr into a tokensequencepattern <END>
<BEG> returns a tokensequencematcher that can be use to match this pattern against the specified list of token <END>
<BEG> return the value of the label or null if none <END>
<BEG> set the value for the label if one be store <END>
<BEG> equality for < code > valuelabel < code > s be define in the first instance a equality of their < code > string < code > < code > value < code > <END>
<BEG> return the hashcode of the string value provide there be one <END>
<BEG> return a string representation of just the main value of this label <END>
<BEG> equality be satisfy only if the compare object be a wordlemmatag and have string-equal word <SEG> lemma and tag field <END>
<BEG> return a factory for this kind of label i e <SEG> { code taggedword } <END>
<BEG> make a new label with this { code string } a the value word <END>
<BEG> create a new word <SEG> where the label be form from the { code string } pass in <END>
<BEG> create a new { code wordlemmatag label } <SEG> where the label be form from the { code label } object pass in <END>
<BEG> generate a range of integer from start inclusive to end exclusive <END>
<BEG> increases the value in the first array a by b <END>
<BEG> add c time the array b to array a <END>
<BEG> sets the value in this array by to their value take to cth power <END>
<BEG> add the two 1d array in place of { code to } <END>
<BEG> add the two 2d array and write the answer in place of { code m1 } <END>
<BEG> assumes that both array have same length <END>
<BEG> puts the result in the result array <END>
<BEG> returns the sum of the portion of an array of number between { code fromindex } <SEG> inclusive <SEG> and { code toindex } <SEG> exclusive <END>
<BEG> returns diagonal element of the give square matrix <END>
<BEG> this version avoid any possibility of overflow <END>
<BEG> return the index of the min value ; if min be a tie <SEG> return the low index one <END>
<BEG> return the minimum value in an array <END>
<BEG> returns the small value in a vector of double <END>
<BEG> returns the small element of the matrix <END>
<BEG> returns the log of the portion between { code fromindex } <SEG> inclusive <SEG> and { code toindex } <SEG> exclusive <SEG> of an array of number <SEG> which be themselves input in log form <END>
<BEG> makes the value in this array sum to 1 0 <END>
<BEG> standardize value in this array <SEG> i e <SEG> subtract the mean and divide by the standard deviation <END>
<BEG> returns the jensen shannon divergence information radius between a and b <SEG> define a the average of the kl divergence from a to b and from b to a <END>
<BEG> return the mean of an array of int <END>
<BEG> shuffle the integer in an array use a source of randomness <END>
<BEG> returns true if the number can be successfully parse by double <END>
<BEG> round a double to the give number of decimal place <SEG> round to the near value via conventional rule 5 round up <SEG> 49 round down <END>
<BEG> max that work on three integer <END>
<BEG> returns the great of two { code float } value <END>
<BEG> returns a mod where the sign of the answer be the same a the sign of the second argument <END>
<BEG> return an approximation of the log of the gamma function of x laczos approximation reference : numerical recipes in c http : www library cornell edu nr cbookcpdf html from www c berkeley edu ~milch blog version blog-0 1 3 blog distrib <END>
<BEG> returns true if the argument be a dangerous double to have around <SEG> namely one that be infinite <SEG> nan or zero <END>
<BEG> approximation to gamma function <END>
<BEG> computes n choose k in an efficient way <END>
<BEG> returns an approximation to math pow a <SEG> b that be ~27x faster with a margin of error possibly around ~10 % <END>
<BEG> exponentiation like we learn in grade school : multiply b by itself e time <END>
<BEG> find a hypergeometric distribution <END>
<BEG> find a one tail exact binomial test probability <END>
<BEG> find a one-tailed fisher 's exact probability <END>
<BEG> find a 2x2 chi-square value <END>
<BEG> compute the sigmoid function with mean zero <END>
<BEG> compute acos very quickly by directly look up the value <END>
<BEG> uses float point so that it can represent the really big number that come up <END>
<BEG> segment a double into a mantissa and exponent <END>
<BEG> from http : nadeausoftware com article 2009 08 java_tip_how_parse_integers_quickly parse an integer very quickly <SEG> without sanity check <END>
<BEG> tests the hypergeometric distribution code <SEG> or other function provide in this module <END>
<BEG> solves the problem use a quasi-newton method l-bfgs <END>
<BEG> solves the problem use conjugate gradient cg <END>
<BEG> solves the problem use owlqn <END>
<BEG> returns the number of train data item <END>
<BEG> used to sequentially set the value of a feature -- index be the pace in the array ; key go into indexedvalues <SEG> and value go into valuesi <END>
<BEG> get the value at the index-ed non zero value pair x <SEG> y <END>
<BEG> return the history x of the index-th x <SEG> y pair <END>
<BEG> creates a hashmap with key index from pair x <SEG> y and value the value of the function at the pair ; require for use of getval x <SEG> y <END>
<BEG> return the empirical expectation of the feature <END>
<BEG> this be a specialized procedure to change the value of par for semantic ranking <END>
<BEG> initializes the model parameter <SEG> empirical expectation of the feature <SEG> and f # x <SEG> y <END>
<BEG> does a fixed number of iis iteration <END>
<BEG> iteration for lambda [ index ] <END>
<BEG> computes the expected value of a feature for the current model <END>
<BEG> computes the gain from a feature <END>
<BEG> writes the lambda to a stream <END>
<BEG> return the loglikelihood of the empirical distribution a predict by the model p <END>
<BEG> given a numerator and denominator in log form <SEG> this calculate the conditional model probability <END>
<BEG> with argument <SEG> this will print out the lambda parameter of a bunch of lam file which be assume to all be the same size <END>
<BEG> calculate the log-likelihood from scratch <SEG> hash the conditional probability in pcond <SEG> which we will use later <END>
<BEG> calculate the log likelihood from scratch <SEG> hash the conditional probability in pcond which we will use for the derivative later <END>
<BEG> assume we have the lambda in the array and we need only the derivative now <END>
<BEG> each pair x <SEG> y have a value in p data value [ x ] [ y ] return - expect value of corpus -sum_xy ptilde x <SEG> y value x <SEG> y pcond x <SEG> y <END>
<BEG> calculate the loss for dom rank use the number in p data value to determine domination relationship in the graph if value [ x ] [ y ] > value [ x ] [ y ' ] then there be an edge x <SEG> y - > x <SEG> y ' return the loss <END>
<BEG> using the array calculate when compute the loss <SEG> it should not be too hard to get the derivative <END>
<BEG> the basic method for split off a clause of a tree <END>
<BEG> get the top few clause from this searcher <SEG> cut off at the give minimum probability <END>
<BEG> if true <SEG> this be an explicit quantifier <SEG> such a all or some <END>
<BEG> convert a question to a statement <SEG> if possible <END>
<BEG> < p > try to segment this sentence a a relation triple <END>
<BEG> the length of this fragment <SEG> in word <END>
<BEG> return the token in this fragment <SEG> but pad with null so that the index in this sentence match the index of the parse tree <END>
<BEG> returns a coherent ner span from a list of token <END>
<BEG> todo gabor javadoc param sentence param pipeline <END>
<BEG> strip away case edge <SEG> if the incoming edge be a preposition <END>
<BEG> determine if a tree be cyclic <END>
<BEG> a little utility function to make sure a semanticgraph be a tree <END>
<BEG> returns true if the give two span denote the same consistent ner chunk <END>
<BEG> a helper function for dump the accuracy of the train classifier <END>
<BEG> construct the span span of the give list of token <END>
<BEG> scan a range of port to find the first available one <END>
<BEG> param matrix the matrix to return a a string param format the format to use for each value in the matrix <SEG> eg % f <END>
<BEG> output the tensor one slice at a time <END>
<BEG> write the word vector to an output stream <END>
<BEG> read word vector from a file or classpath or url <END>
<BEG> read word vector from an input stream <END>
<BEG> read the word2vec word vector flat txt file <END>
<BEG> returns a factory that vend delimitregexiterators that read the content of the give reader <SEG> split on the specify delimiter <SEG> applies op <SEG> then return the result <END>
<BEG> param o the object to be return return o <END>
<BEG> tells the objectbank to store all of it content in memory so that it do n't have to be recomputed each time you iterate through it <END>
<BEG> if you be keep the content in memory <SEG> this will clear the memory <SEG> and they will be recomputed the next time iterator be call <END>
<BEG> can be slow <END>
<BEG> returns an iterator over the input source in the underlying collection <END>
<BEG> returns a factory that vend beginenditerators that read the content of the give reader <SEG> extract text between the specified strings <SEG> then return the result <END>
<BEG> clears the cache in a way that do n't require reallocation : - <END>
<BEG> decrementbatch - this decrements the curelement variable by the amount batchsize <END>
<BEG> valueat x <SEG> batchsize derivativeat x <SEG> batchsize invokes the calculatestochastic function to get the current value at x for the next batchsize data point <END>
<BEG> this function will return the stochastic approximation at the point x the vector v be the vector to be use in the vector product h v <END>
<BEG> gets a random sample this be sample with replacement <END>
<BEG> performs stochastic update of weight x scale by xscale base on next batch of batchsize <END>
<BEG> performs stochastic gradient update base on sample index by batch and do not apply regularization <END>
<BEG> dump the { code < x <SEG> y > } pair it compute found <END>
<BEG> this function test to make sure that the sum of the stochastic calculated gradient be equal to the full gradient <END>
<BEG> this function be use to get a low bound on the condition number <END>
<BEG> public double getnormvariance list < double [ ] > thislist { double [ ] ratio = new double [ thislist size ] ; double [ ] mean = new double [ thislist get 0 length ] ; double sizeinv = 1 double thislist size ; for double [ ] arr : thislist { for int i=0 ; i < arr length ; i++ { mean [ i ] += arr [ i ] sizeinv ; } } double meannorm = arraymath norm mean ; for int i=0 ; i < thislist size ; i++ { ratio [ i ] = arraymath norm thislist get i meannorm ; } arraytofile ratio <SEG> ratio out ; return arraymath variance ratio ; } public double getsimvariance list < double [ ] > thislist { double [ ] ang = new double [ thislist size ] ; double [ ] mean = new double [ thislist get 0 length ] ; double sizeinv = 1 double thislist size ; for double [ ] arr : thislist { for int i=0 ; i < arr length ; i++ { mean [ i ] += arr [ i ] sizeinv ; } } double meannorm = arraymath norm mean ; for int i=0 ; i < thislist size ; i++ { ang [ i ] = arraymath innerproduct thislist get i <SEG> mean ; ang [ i ] = ang [ i ] meannorm arraymath norm thislist get i ; } arraytofile ang <SEG> angle out ; return arraymath variance ang ; } <END>
<BEG> this be the scaling factor for the gain to ensure convergence <END>
<BEG> this be use to smooth the gradient <SEG> provide a more robust calculation which generally lead to a good routine <END>
<BEG> reads score par from the charniak parser file format of the scored par : < pre > { code < # of par > \t < sentenceid > < score > < parse > < score > < parse > } < pre > param filename - file to read par from return iterable with list of scored parse tree <END>
<BEG> reads score par from the charniak parser param inputdesc - description of input use in log message param br - input reader return iterable with list of scored parse tree <END>
<BEG> convert string represent scored par in the charniak parser output format to list of scored parse tree param parsestr return list of scored parse tree <END>
<BEG> convert list of scored parse tree to string represent scored par in the charniak parser output format <END>
<BEG> print score parse tree in format use by charniak parser param tree - tree to output param filename - file to output to <END>
<BEG> print score parse tree for one sentence in format use by charniak parser <END>
<BEG> tokenize the text use the parser 's tokenizer <END>
<BEG> will parse the text in < code > sentence < code > a if it represent a single sentence by first process it with a tokenizer <END>
<BEG> construct a fall through tree in case we ca n't parse this sentence <END>
<BEG> default be no-op <END>
<BEG> default be to throw exception <END>
<BEG> sets whether to consider grammatical function in evaluation <END>
<BEG> returns a language specific object for evaluate pp attachment return an object that implement { link abstracteval } <END>
<BEG> implemented a require by treebankfactory <END>
<BEG> returns an appropriate treebanklanguagepack <END>
<BEG> returns an equivalenceclasser that class typed dependency by the syntactic category of mother <SEG> head and daughter <SEG> plus direction <END>
<BEG> returns a treetransformer appropriate to the treebank which can be use to remove functional tag such a -tmp from category <END>
<BEG> set language-specific option accord to flag <END>
<BEG> by default <SEG> parser be assume to not support dependency <END>
<BEG> for language that have implementation of the original stanford dependency and universal dependency <SEG> this parameter be use to decide which implementation should be use <END>
<BEG> creates an { link arabictreereaderfactory } with parameter set via option pass in from the command line <END>
<BEG> return a default sentence for the language for test <END>
<BEG> trains this lexicon on the collection of tree <END>
<BEG> adds the tagging with count to the data structure in this lexicon <END>
<BEG> this record how likely it be for a word with one tag to also have another tag <END>
<BEG> populates data in this lexicon from the character stream give by the reader r todo : this do n't appear to correctly read in the unknownwordmodel in the case of a model more complicated than the unseencounter <END>
<BEG> provides some testing and opportunity for exploration of the probability of a baselexicon <END>
<BEG> signature for a specific word ; loc parameter be ignore <END>
<BEG> get the lexicon associate with this unknown word model ; usually not use <SEG> but might be useful to tell you if a related word be know or unknown <SEG> for example <END>
<BEG> return the best parse of the sentence most recently parse <END>
<BEG> return the list of k good par of the sentence most recently parse <END>
<BEG> get the exact k best par for the sentence <END>
<BEG> get a complete set of the maximally scoring par for a sentence <SEG> rather than one chosen at random <END>
<BEG> get k parse sample for the sentence <END>
<BEG> populates the splitrules accessor list use the exist rule list <END>
<BEG> writes out data from this object to the writer w param w where output be write throw ioexception if data ca n't be write <END>
<BEG> uses a disktreebank with a chtbtokenizer and a bobchristreenormalizer <END>
<BEG> returns a chinesecollinizer that do n't delete punctuation <END>
<BEG> transformtree do all language-specific tree transformation <END>
<BEG> trains the first-character base unknown word model <END>
<BEG> the main method demonstrate the easy way to load a parser <END>
<BEG> test the parser on a treebank <END>
<BEG> return the best dependency parse for a sentence <END>
<BEG> fills in the iscore array of each category over each span of length 2 or more <END>
<BEG> this method should populate wordindex <SEG> tagindex <SEG> and morphindex <END>
<BEG> some documentation for roger 's convenience { pcfg <SEG> dep <SEG> combo } { pe <SEG> de <SEG> te } be precision dep tag evals for the model parser be the pcfg parser dparser be the dependency parser bparser be the combine parser during test : tree be the test tree gold tree binarytree be the gold tree binarized tree2b be the best pcfg paser <SEG> binarized tree2 be the best pcfg parse debinarized tree3 be the dependency parse <SEG> binarized tree3db be the dependency parser <SEG> debinarized tree4 be the best combo parse <SEG> binarized and then debinarized tree4b be the best combo parse <SEG> binarized <END>
<BEG> calculate the log-prob score of a particular taggedword in the unknown word model <END>
<BEG> reads one object from the give objectinputstream <SEG> which be assume to be a lexicalizedparser <END>
<BEG> will process a list of string into a list of hasword and return the parse tree associate with that list <END>
<BEG> will launch multiple thread which call { code parse } on each of the { code sentence } in order <SEG> return the result parse tree in the same order <END>
<BEG> return a treeprint for format parse output tree <END>
<BEG> similar to parse <SEG> but instead of return an x tree on failure <SEG> return null <END>
<BEG> saves the parser define by pd to the give filename <END>
<BEG> this will set option to the parser <SEG> in a way exactly equivalent to pass in the same sequence of command-line argument <END>
<BEG> a main program for use the parser with various option <END>
<BEG> parse a speech lattice with the pcfg parser <END>
<BEG> return the k best par of the sentence most recently parse <END>
<BEG> checks which parser factor <SEG> pcfg <SEG> or dependency be use and return the score of the best parse from this parser <END>
<BEG> returns the tree and score correspond to the k-best derivation of the sentence <END>
<BEG> implements the same parsing with fallback that parse do <SEG> but also output status message for failed par to pwerr <END>
<BEG> destructively modify the input and return it a a convenience <END>
<BEG> tune the smoothing and interpolation parameter of the dependency grammar base on a tuning treebank <END>
<BEG> add this dependency with the give count to the grammar <END>
<BEG> score a tag bin dependency <END>
<BEG> return the probability a a real number between 0 and 1 of stop rather than generate another argument at this position <END>
<BEG> populates data in this dependencygrammar from the character stream give by the reader r <END>
<BEG> returns a memorytreebank with a negrapenntokenizer and a negrapenntreenormalizer <END>
<BEG> does whatever one need to do to a particular parse tree <END>
<BEG> this be hardwired to calculate the split category from english penn treebank section 2-21 with a default cutoff of 300 a use in acl03pcfg <END>
<BEG> uses the initialized value <END>
<BEG> score with flexible number of step <END>
<BEG> return probability of hidden - > see with < code > step < code > random walk step <END>
<BEG> string-value label of left sister ; from inside to outside right-left <END>
<BEG> count all the internal label in all the tree <SEG> and set their initial state count to 1 <END>
<BEG> before each iteration of split state <SEG> we have table of beta which correspond to the transition between different substates <END>
<BEG> if true <SEG> declare early -- leave this on except maybe with markov on <END>
<BEG> the tree t be normally expect to be a penn-treebank-style tree in which the top node be an extra node that have a unary expansion <END>
<BEG> lets you test out the treeannotatorandbinarizer on the command line <END>
<BEG> compile the { link # annotation } collection give a particular head finder <END>
<BEG> enable an annotation feature <END>
<BEG> disable a feature <END>
<BEG> build a string of annotation for the give tree <END>
<BEG> output a description of the current annotation configuration to standard error <END>
<BEG> remove a - & gt ; a unaryrules from bestrulesundermax <END>
<BEG> writes out data from this object <END>
<BEG> writes out a lot of redundant data from this object to the writer w param w data be write to this writer <END>
<BEG> a unaryrule be equal to another unaryrule with the same parent and child <END>
<BEG> return the evalb micro-averaged f1 time 100 to make it a number between 0 and 100 <END>
<BEG> evalb only evaluate phrasal category <SEG> thus constituent do not return object for terminal and pre-terminals <END>
<BEG> run the evalb score metric on guess gold input <END>
<BEG> execute with no argument for usage <END>
<BEG> counts how many span be present in goldtree <SEG> include preterminals <SEG> but not present in guesstree <SEG> along with how many span be present in guesstree and not goldtree <END>
<BEG> build the set of dependency for evaluation <END>
<BEG> get the { link edu stanford nlp international language } object correspond to the give language string <END>
<BEG> get the sentence index of the kth word on the stack <END>
<BEG> add the next token to the parse <END>
<BEG> check if this parse have only one root <END>
<BEG> legal as long a there be at least one item on the state 's stack and that item have not already be unary transform <END>
<BEG> legal only if the state be already finish <END>
<BEG> returns an attempt at a gold transition give the current state while parse a know gold tree <END>
<BEG> output some random fact about the model <END>
<BEG> in this case <SEG> we be start to build a new subtree when instead we should have be combine exist tree <END>
<BEG> return an unmodifiableset contain the know state include binarization <END>
<BEG> todo : add an eval which measure transition accuracy ? <END>
<BEG> todo : if we add anything interesting to report <SEG> we should report it here <END>
<BEG> todo : can we get away with not call this pcfg ? <END>
<BEG> todo : if this be a beam <SEG> return all equal par <END>
<BEG> todo : skip sentence which be too long <END>
<BEG> todo : add memory handling ? <END>
<BEG> todo : clearly this should be a default method in parserquery once java 8 come out <END>
<BEG> returns a 0-based index of the head of the tree <END>
<BEG> returns true iff the give { code state } be present on the { code agenda } <END>
<BEG> shifting be legal as long a the state be not finish and there be more item on the queue to be shift <END>
<BEG> return the equivalence class of the argument <END>
<BEG> public string [ ] getsimplertokens string [ ] p { if p == null return null ; string [ ] sim = new string [ p length ] ; for int i = 0 ; i < p length ; i++ { assert p [ i ] ! = null : how be the any one + arrays tostring p + null ! <END>
<BEG> true if array1 contains array2 <END>
<BEG> true p1 subsumes p2 p1 have long context than p2 param p1 param p2 return <END>
<BEG> populates option from stanfordcorenlp pipeline <END>
<BEG> run the pipeline on an input annotation <END>
<BEG> annotate a collection of input annotation in parallel <SEG> make use of thread give in numthreads param annotation the input annotation to process param numthreads the number of thread to run on param callback a function to be call when an annotation finish <END>
<BEG> return the total pipeline annotation time in millisecond <END>
<BEG> return a string that give detailed human-readable information about how much time be spend by each annotator and by the entire annotation pipeline <END>
<BEG> append a coredocument to this output stream <END>
<BEG> tokenize <SEG> emulate the penn treebank <END>
<BEG> clean xml input <END>
<BEG> sentence split <SEG> in addition to a bunch of other thing in this annotator be careful to check the implementation ! <END>
<BEG> part of speech tag <END>
<BEG> run tokensregex -- annotate pattern find in token <END>
<BEG> run regexner -- rule-based ner base on a deterministic mapping file <END>
<BEG> annotate parse tree param property properties that control the behavior of the parser <END>
<BEG> infer the original casing of token <END>
<BEG> annotate for mention statistical or hybrid <END>
<BEG> annotate for coreference deterministic <END>
<BEG> annotate for relation express in sentence <END>
<BEG> annotate for sentiment in sentence <END>
<BEG> annotate with the column data classifier <END>
<BEG> annotate { link edu stanford nlp ie util relationtriple } s from text <END>
<BEG> annotate quote and extract them like sentence <END>
<BEG> attribute quote to speaker <END>
<BEG> add universal dependency feature <END>
<BEG> annotate for kbp relation <END>
<BEG> clear this pool <SEG> and unmount all the annotator mount on it <END>
<BEG> checks if offset of doc and sentence match <END>
<BEG> fix token offset of sentence to match those in the document assume token be share sentence token index may not match document token list if certain html element be ignore <END>
<BEG> copies annotation over to this coremap if not already set <END>
<BEG> give an list of character offset for chunk <SEG> fix tokenization so tokenization occurs at boundary of chunk <END>
<BEG> annotates a coremap represent a chunk with text information textannotation - string extract from the origannotation use character offset information for this chunk param chunk - coremap to be annotate param origannotation - annotation from which to extract the text for this chunk <END>
<BEG> annotates token in chunk <END>
<BEG> create a new chunk annotation with basic chunk information <END>
<BEG> returns a chunk annotation base on char offset <END>
<BEG> helper method to set the tokenbeginannotation and tokenendannotation of every token <END>
<BEG> print an annotation to an output stream <END>
<BEG> complete the wrapping process post annotation by a pipeline <END>
<BEG> return the doc id of this doc <END>
<BEG> return the full token list for this doc <END>
<BEG> quote <END>
<BEG> get the underlying coremap if need be <END>
<BEG> get this entity mention 's sentence <END>
<BEG> full text of the mention <END>
<BEG> char offset of mention <END>
<BEG> return a map of label to confidence <END>
<BEG> return the canonical entity mention for this entity mention <END>
<BEG> retrieve the text of the speaker <END>
<BEG> retrieve the character offset of the speaker <END>
<BEG> retrieve the entity mention correspond to the speaker if there be one <END>
<BEG> retrieve the token of the canonical speaker <END>
<BEG> retrieve the character offset of the canonical speaker <END>
<BEG> retrieve the entity mention correspond to the canonical speaker if there be one <END>
<BEG> get the document this sentence be in <END>
<BEG> sentiment <END>
<BEG> list of kbp relation find <END>
<BEG> serializes one coref cluster i e <SEG> one entity <END>
<BEG> go through all of the path via reflection <SEG> and print them out in a tsv format <END>
<BEG> helper for return current date <END>
<BEG> a debug method to try relation extraction from the console <END>
<BEG> return the property file name for a specific language <END>
<BEG> convert various input string to language enum <END>
<BEG> check if language be a segmenter language <SEG> return boolean <END>
<BEG> set up the fine-grained tokensregexnerannotator sub-annotator param property properties for the tokensregexner sub-annotator <END>
<BEG> set up the tokensregexannotator sub-annotator param property properties for the tokensregex sub-annotator <END>
<BEG> convert spanish tag content of old model <END>
<BEG> helper method for create version of document text without xml <END>
<BEG> if no character list be provide <SEG> produce a list of person name from entity mention annotation <END>
<BEG> get the implementation of each relevant annotator in the pipeline <END>
<BEG> take a collection of requested annotator <SEG> and produce a list of annotator such that all of the prerequisite for each of the annotator in the input be meet <END>
<BEG> call this if you be no longer use stanfordcorenlp and want to release the memory associate with the annotator <END>
<BEG> determines whether the parser annotator should default to produce binary tree <END>
<BEG> runs the entire pipeline on the content of the give text pass in <END>
<BEG> wrapper around xmlprint annotation <SEG> outputstream <END>
<BEG> displays the output of all annotator in xml format <END>
<BEG> prints the list of property require to run the pipeline param os printstream to print usage to param helptopic a topic to print help about or null for general option <END>
<BEG>  this method create an async call to the server <SEG> and block until the server have finish annotate the object <END>
<BEG> this method fire off a request to the server <END>
<BEG> the canonical entry point of the client annotator <END>
<BEG> the implementation of what to run on a command-line call of corenlpwebclient throw ioexception if any io problem <END>
<BEG> does the actual work of split textannotation into corelabels <SEG> which be then attach to the tokensannotation <END>
<BEG> return a wordstosentencesannotator that split on newlines only <SEG> which be then delete <END>
<BEG> return a wordstosentencesannotator that never split the token stream <END>
<BEG> if setcountlinenumbers be set to true <SEG> we count line number by tell the underlie splitter to return empty list of token and then treat those empty list a empty line <END>
<BEG> process a list of list of token <END>
<BEG> this be an optional operation <SEG> by default support <END>
<BEG> returns text a a list of token <END>
<BEG> americanize the hasword or string come in <END>
<BEG> americanize and print the command line argument <END>
<BEG> this should now become disused <SEG> and other people should call chineseutils directly ! <END>
<BEG> constructs a corelabel a a string with a corresponding begin and end position <SEG> when the original originaltextannotation be different from textannotation does not take substring <END>
<BEG> internally fetch the next token <END>
<BEG> return a new wordtag which have the lemma a the value of word <END>
<BEG> run the morphological analyzer <END>
<BEG> param input must be a list of object of type hasword <END>
<BEG> this will do the escaping on an input file <END>
<BEG> constructs a new ptbtokenizer that return word token and which treat carriage return a normal whitespace <END>
<BEG> constructs a new ptbtokenizer that make corelabel token <END>
<BEG> returns a presentable version of the give ptb-tokenized text <END>
<BEG> return a ptbtokenizerfactory that vend word token <END>
<BEG> reads file give a argument and print their token <SEG> by default a one per line <END>
<BEG> returns whether the output of the processor will contain newline word \n at the end of block-level tag <END>
<BEG> read xml from the specify file and write xml to stdout <SEG> while transform text appear inside the specified xml tag by apply the specify { link function < code > function < code > } <END>
<BEG> reads a file from the argument and print it token one per line <END>
<BEG> the main output here be data token dickens oliver token <SEG> which contain the original book <SEG> one token per line <SEG> with part of speech <SEG> syntax <SEG> ner <SEG> coreference and other annotation <END>
<BEG> return true if the edge be of the same relation type <END>
<BEG> returns a pretty-printed string representation of the give semantic graph <SEG> on one or more line <END>
<BEG> given a collection of node from srcgraph <SEG> generate a new semanticgraph base off the subset represent by those node <END>
<BEG> since graph can be have prep collapse <SEG> find all the immediate child of this node that be link by a collapsed preposition edge <END>
<BEG> given a semantic graph <SEG> and a relation prefix <SEG> return a list of all relation edge that start with the give prefix e g <SEG> prefix prep give you all the prep relation : prep_by <SEG> pref_in <SEG> etc <END>
<BEG> given a semanticgraph <SEG> and a set of node <SEG> find the blanket of node that be one edge away from the set of node pass in <END>
<BEG> deletes all node that be not root such a dangle vertex after a series of edge have be chop <END>
<BEG> used to make a mapping that let you create anonymous version of share node between two graph give in the arg use the share prefix <END>
<BEG> given a set of vertex from the same graph <SEG> return the set of all edge between these vertex <END>
<BEG> sanitizes the give string into a semgrex friendly name <END>
<BEG> given a graph <SEG> return a new graph with the the new sentence index enforce <END>
<BEG> removes duplicate graph from the set <SEG> use the string form of the graph a the key obviate issue with object equality <END>
<BEG> checks whether a give semanticgraph be a strict surface syntax tree <END>
<BEG> returns the map from hypothesis word to text word for this < code > alignment < code > <END>
<BEG> defined on map only <END>
<BEG> resets the matcher to start search on the give node for match subexpressions <END>
<BEG> resets the matcher to restart search for match subexpressions <END>
<BEG> find the next match of the pattern in the graph such that the matching node that be <SEG> the node match the root node of the pattern differs from the previous matching node <END>
<BEG> returns the set of name for name node in this pattern <END>
<BEG> recursively set the env variable to this pattern in this and in all it child param env an env <END>
<BEG> prints out all match of a semgrex pattern on a file of dependency <END>
<BEG> turns a text file into tree for use in a rntn classifier such a the treebank use in the sentiment project <END>
<BEG> this transformer collapse chain of unary node so that the top node be the only node leave <END>
<BEG> this program convert the format of the sentiment data set prepare by richard <SEG> jean <SEG> etc <END>
<BEG> dumps all the matrix in a mostly readable format <END>
<BEG> make a clique over the provided relativeindices <END>
<BEG> for a particular relative index <SEG> return which element in the clique it be <END>
<BEG> read the tokenfactory and tokensannotationclassname from { link seqclassifierflags } <END>
<BEG> count some stats on what occur in a file <END>
<BEG> informs this sequence model that the value of the whole sequence be initialize to sequence <END>
<BEG> runs the viterbi algorithm on the sequence model in order to find the best sequence <END>
<BEG> note that this do not return string representation of array <SEG> list and enums throw illegalaccessexception throw illegalargumentexception <END>
<BEG> collects numsamples sample of sequence <SEG> from the distribution over sequence define by the sequence model pass on construction <END>
<BEG> samples the sequence repeatedly <SEG> make numsamples pass over the entire sequence <END>
<BEG> samples a single position in the sequence <END>
<BEG> removes all the give key from this counter <END>
<BEG> returns whether a counter have no key in it <END>
<BEG> returns the counter over strings specify by this string <END>
<BEG> converts from the format print by the tostring method back into a counter & lt ; string & gt ; <END>
<BEG> transform log space value into a probability distribution in place <END>
<BEG> returns the value of the maximum entry in this counter <END>
<BEG> takes in a collection of something and make a counter <SEG> incrementing once for each object in the collection <END>
<BEG> returns the mean of all the count totalcount size <END>
<BEG> sets each value of target to be target [ k ] +scale arg [ k ] for all key k in target <END>
<BEG> sets each value of target to be target [ k ] +arg [ k ] for all key k in arg <END>
<BEG> for all key u <SEG> v in arg1 and arg2 <SEG> set return [ u <SEG> v ] to be summation of both <END>
<BEG> for all key u <SEG> v in arg <SEG> set target [ u <SEG> v ] to be target [ u <SEG> v ] + arg [ u <SEG> v ] <END>
<BEG> for all key u <SEG> v in target <SEG> set target [ u <SEG> v ] to be target [ u <SEG> v ] + value param < t1 > param < t2 > <END>
<BEG> divides every non-zero count in target by the correspond value in the denominator counter <END>
<BEG> multiplies every count in target by the correspond value in the term counter <END>
<BEG> divides each value in target by the give divisor <SEG> in place <END>
<BEG> multiplies each value in target by the count of the key in mult <SEG> in place <END>
<BEG> normalizes the target counter in-place <SEG> so the sum of the result value equal 1 <END>
<BEG> l1 normalize a counter <END>
<BEG> delete 'top ' and 'bottom ' number of element from the top and bottom respectively <END>
<BEG> removes all entry from c except for the top { code num } <END>
<BEG> removes all entry with 0 count in the counter <SEG> return the set of removed entry <END>
<BEG> removes all entry with key that do not match one of the give pattern <END>
<BEG> removes all entry with key that do not match the give set of key <END>
<BEG> removes all entry with key in the give collection param < e > param counter param removekeyscollection <END>
<BEG> returns the set of key that have exactly the give count <END>
<BEG> returns the counter with key modify accord to function f eager evaluation <END>
<BEG> returns the counter with key modify accord to function f if two key be same after the transformation <SEG> their value get add up <END>
<BEG> returns a comparator back by this counter : two object be compare by their associate value store in the counter <END>
<BEG> returns a comparator suitable for sort this counter 's key or entry by their respective value or magnitude by absolute value <END>
<BEG> converts a counter to rank ; rank start from 0 return a counter where the count be the rank in the original counter <END>
<BEG> converts a counter to tie rank ; rank start from 1 return a counter where the count be the rank in the original counter ; when value be tie <SEG> the rank be the average of the rank of the tied value <END>
<BEG> a list of the key in c <SEG> sort from high count to lowest <SEG> pair with count return a list of the key in c <SEG> sort from high count to lowest <END>
<BEG> a list of the key in c <SEG> sort by the give comparator <SEG> pair with count <END>
<BEG> returns a counter that be the intersection of c1 and c2 <END>
<BEG> returns the jaccard coefficient of the two counter <END>
<BEG> returns the product of c1 and c2 <END>
<BEG> returns the product of counter c and double [ ] a <SEG> use index idx to map entry in c onto a <END>
<BEG> increment every key in the counter by value <END>
<BEG> this method do not check entry for nan or infinity value in the double return <END>
<BEG> calculates the entropy of the give counter in bit <END>
<BEG> note that this implementation do n't normalize the from counter <END>
<BEG> calculates the kl divergence between the two counter <END>
<BEG> return the l2 norm euclidean vector length of a counter <END>
<BEG> return the l1 norm of a counter <END>
<BEG> l2 normalize a counter in place <END>
<BEG> l2 normalize a counter <SEG> use the safer l2 normalizer <END>
<BEG> returns a counter which be a weighted average of c1 and c2 <END>
<BEG> prints one or more line with a newline at the end describe the difference between the two counters <END>
<BEG> loads a counter from a text file <END>
<BEG> saves a counter a one key count pair per line separate by white space to the give outputstream <END>
<BEG> read a counter from a serialize file param filename the file to read from see counters # serializestringcounter counter <SEG> string <SEG> double <END>
<BEG> returns a string representation of a counter <SEG> display the key and their count in decrease order of count <END>
<BEG> returns a string representation of a counter <SEG> where key <SEG> value pair be sort by key <SEG> and format a specify <END>
<BEG> pretty print a counter <END>
<BEG> returns a { code string } representation of the { code k } key with the large count in the give { link counter } <SEG> use the give format string <END>
<BEG> return returns the maximum element of c that be within the restriction collection <END>
<BEG> turns the give map and index into a counter instance <END>
<BEG> convert a counter to an array use a specify key index <END>
<BEG> convert a counter to an array <SEG> the order of the array be random <END>
<BEG> creates a new twodimensionalcounter where all the count be scale by d internally <SEG> use counters scale ; return the twodimensionalcounter <END>
<BEG> returns a counter where each element correspond to the normalized count of the corresponding element in c raise to the give power <END>
<BEG> equality comparison between two counter <SEG> allow for a tolerance fudge factor <END>
<BEG> returns unmodifiable view of the counter <END>
<BEG> param < e > param originalcounter return a copy of the original counter <END>
<BEG> retains the minimal set of top key such that their count sum be more than thresholdcount <END>
<BEG> ensures that counter t have all key in key <END>
<BEG> returns true if the give counter contain only finite <SEG> non-nan value <END>
<BEG> exactly the same a samplefrom <SEG> need for the sampler interface <END>
<BEG> a method to draw a sample <SEG> provide an own random number generator <END>
<BEG> assuming that c have a total count & lt ; 1 <SEG> return a new distribution use the count in c a probability <END>
<BEG> creates a distribution from the give counter <SEG> ie make an internal copy of the counter and divide all count by the total count <END>
<BEG> creates a smoothed distribution use lidstone 's law <SEG> ie add lambda typically between 0 and 1 to every item <SEG> include unseen one <SEG> and divide by the total count <END>
<BEG> creates a smoothed distribution with laplace smoothing <SEG> but assume an explicit count of unknown item <END>
<BEG> creates a good-turing smoothed distribution from the give counter <END>
<BEG> creates a good-turing smoothed distribution from the give counter without create any reserved mass -- instead <SEG> the special object unk in the counter be assume to be the count of unseen item <END>
<BEG> maps a counter represent the linear weight of a multiclass logistic regression model to the probability of each class <END>
<BEG> returns an object sample from the distribution use math random <END>
<BEG> returns an object sample from the distribution use a self-provided random number generator <END>
<BEG> returns the natural logarithm of the object 's probability return the logarithm of the normalised count may be nan if pr==0 0 <END>
<BEG> returns the current total count for all object in this counter <END>
<BEG> returns the total count for all object in this counter that pass the give filter <END>
<BEG> this have be de-deprecated in order to reduce compilation warning <SEG> but really you should create a { link edu stanford nlp stats distribution } instead of use this method <END>
<BEG> sets the current count for each of the give key <END>
<BEG> adds the give count to the current count for the give key <END>
<BEG> adds the give count to the current count for each of the give key <END>
<BEG> removes all key whose count be 0 <END>
<BEG> how many correct do we have if we return the most confident num recall one <END>
<BEG> returns the score f1 for the give list of guess param guess - guesses by classifier param truelabels - gold label to compare guess against param datalabelindex - index of label return f1 score <END>
<BEG> returns the score f1 for the give list of guess param guess - guesses by classifier param truelabels - gold label to compare guess against return f1 score <END>
<BEG> return overall number of correct answer <END>
<BEG> return overall per token accuracy <END>
<BEG> returns the current precision : < tt > tp tp+fp < tt > <END>
<BEG> returns a string summarizing precision that will print nicely <END>
<BEG> returns the probability allocate to type not see in the underlying collection <END>
<BEG> returns the probability allocate to each type <SEG> accord to their count in the underlying collection <END>
<BEG> return the inner counter associate with key o <END>
<BEG> return total number of entry key pair <END>
<BEG> return size of the outer map <END>
<BEG> takes linear time <END>
<BEG> replace the counter for k1-index o by new counter c <END>
<BEG> a simple string representation of this twodimensionalcounter <SEG> which have the string representation of each key pair on a separate line <SEG> follow by the count for that pair <END>
<BEG> given an ordering of the first row and second column key <SEG> will produce a double matrix <END>
<BEG> returns the counter with key a the first key and count a the total count of the inner counter for that key return counter of type k1 <END>
<BEG> returns which fonts on the system can display the sample string <END>
<BEG> returns 1 a true if the dictionary list this word with this tag <SEG> and 0 otherwise <END>
<BEG> returns the cluster for the give word a a string <END>
<BEG> determine type of each feature extractor <END>
<BEG> find maximum leave context of extractor <END>
<BEG> public void save string filename { try { dataoutputstream rf = ioutils getdataoutputstream filename ; rf writeint v length ; for extractor extr : v { rf writebytes extr tostring ; } rf close ; } catch ioexception e { e printstacktrace ; } } public void read string filename { try { indatastreamfile rf = new indatastreamfile filename ; int len = rf readint ; v = new extractor [ len ] ; globalholder init ; } catch ioexception e { e printstacktrace ; } } <END>
<BEG> -- - unused double gprime double lambdap <SEG> int index { double s = 0 0 ; for int i = 0 ; i < p function get index len ; i++ { int y = taggerfeature p function get index getytag ; int x = p function get index getx i ; s = s + p data ptildex x pcond y <SEG> x 1 math exp lambdap fnum x <SEG> y fnum x <SEG> y ; } return s ; } -- - <END>
<BEG> methods unused <END>
<BEG> frees the memory that be store in this object by drop the word-tag data <END>
<BEG> a tagcount object 's field be read from the file <END>
<BEG> return the number of total occurrence of the word <END>
<BEG> return an array of the tag the word have have <END>
<BEG> return the most frequent tag <END>
<BEG> return a regex of xml element to tag inside of <END>
<BEG> returns whether or not we should use stdin for read when tag data <END>
<BEG> serialize the taggerconfig <END>
<BEG> gets the calendar match the year <SEG> month and day of this timex <END>
<BEG> gets two calendars <SEG> mark the beginning and end of this timex 's range <END>
<BEG> returns a string array of punctuation tag that evalb-style evaluation should ignore for this treebank language <END>
<BEG> accepts a string that be a punctuation tag name <SEG> and reject everything else <END>
<BEG> accepts a string that be a punctuation word <SEG> and reject everything else <END>
<BEG> accepts a string that be a sentence end punctuation tag <SEG> and reject everything else <END>
<BEG> accepts a string that be a punctuation tag that should be ignore by evalb-style evaluation <SEG> and reject everything else <END>
<BEG> return a filter that accept a string that be a punctuation tag name <SEG> and reject everything else <END>
<BEG> returns a filter that accept a string that be a punctuation word <SEG> and reject everything else <END>
<BEG> returns a filter that accept a string that be not a punctuation word <SEG> and reject punctuation <END>
<BEG> returns a filter that accept a string that be a sentence end punctuation tag <SEG> and reject everything else <END>
<BEG> returns a filter that accept a string that be a punctuation tag that should be ignore by evalb-style evaluation <SEG> and reject everything else <END>
<BEG> returns a filter that accept everything except a string that be a punctuation tag that should be ignore by evalb-style evaluation <END>
<BEG> return an array of character at which a string should be truncate to give the basic syntactic category of a label <END>
<BEG> returns the basic syntactic category of a string <END>
<BEG> returns a { link function function } object that map strings to strings accord to this treebanklanguagepack 's basiccategory method <END>
<BEG> returns the syntactic category and 'function ' of a string <END>
<BEG> say whether this character be an annotation introducing character <END>
<BEG> accepts a string that be a start symbol of the treebank <END>
<BEG> return a filter that accept a string that be a start symbol of the treebank <SEG> and reject everything else <END>
<BEG> returns a string which be the first perhaps unique start symbol of the treebank <SEG> or null if none be define <END>
<BEG> return a tokenizer which might be suitable for tokenizing text that will be use with this treebank language pair <SEG> without tokenizing carriage return i e <SEG> treat them a white space <END>
<BEG> return a grammaticalstructurefactory suitable for this language treebank <END>
<BEG> returns a morphological feature specification for word in this language <END>
<BEG> normalizes a nonterminal content <END>
<BEG> remove thing like hyphen functional tag and equal from the end of a node label <END>
<BEG> normalize a whole tree -- one can assume that this be the root <END>
<BEG> prints the collocation find in this < code > tree < code > a string <END>
<BEG> sets the label associate with the current constituent <SEG> if there be one <END>
<BEG> access label -- actually always a singleton here <END>
<BEG> access score <END>
<BEG> detects whether this constituent overlap a constituent without nest <SEG> that be <SEG> whether they cross <END>
<BEG> detects whether this constituent overlap any of a collection of constituents without nest <SEG> that be <SEG> whether it cross any of them <END>
<BEG> detects whether this constituent contain a constituent <SEG> that be whether they be nested <END>
<BEG> make a new label with this < code > string < code > a the name <SEG> perhaps by do some appropriate decoding of the string <END>
<BEG> print out a a string the subpart of a sentence cover by this < code > constituent < code > <END>
<BEG> transforms t if it contain a coordination in a flat structure cctransform and transforms ucp ucptransform <END>
<BEG> removes the sq structure under a whnp question <SEG> such a who be i to judge ? <END>
<BEG> transforms t if it contain an ucp <SEG> it will change the ucp tag into the phrasal tag of the first word of the ucp ucp jj electronic <SEG> <SEG> nn computer cc and nn building will become adjp jj electronic <SEG> <SEG> nn computer cc and nn building param t a tree to be transform return t transform <END>
<BEG> transforms t if it contain a coordination in a flat structure param t a tree to be transform return t transform give t not null <SEG> return will not be null <END>
<BEG> puts all multi-word expression below a single constituent label mwe <END>
<BEG> a comparator for dependencies base on their dependent annotation <END>
<BEG> load tree from give directory <END>
<BEG> applies the treevisitor to to all tree in the treebank <END>
<BEG> returns the absolute path of the file currently be read <END>
<BEG> return a synchronized list of the know grammaticalrelation entry <END>
<BEG> returns a readlock for the grammatical relation value list <END>
<BEG> the conj grammatical relation <END>
<BEG> prints out the english grammatical relation hierarchy <END>
<BEG> destructively modify this { code collection < typeddependency > } by collapse several type of transitive pair of dependency <END>
<BEG> fix all the english penn treebank error <SEG> or at least some of them ! <END>
<BEG> use a tree normalizer that remove all empty node <END>
<BEG> predicatively marked element in a sentence should be note a head <END>
<BEG> returns a string array of punctuation tag for this treebank language <END>
<BEG> returns a string array of sentence final punctuation tag for this treebank language <END>
<BEG> return a tokenizer which might be suitable for tokenizing text that will be use with this treebank language pair <END>
<BEG> returns the extension of treebank file for this treebank <END>
<BEG> escapes token from flat string that be reserve for usage in the atb <END>
<BEG> reverts escape from a flat string <END>
<BEG> returns the string associate with the input parse tree <END>
<BEG> converts a parse tree into a string of token <END>
<BEG> go through tree and determine their head and print them <END>
<BEG> vends a semantic negraheadfinder -- -one that disprefers modal auxiliary verb a the head of s or vp <END>
<BEG> some negra local tree have an explicitly mark head <END>
<BEG> param args file to run on <END>
<BEG> a method for get a singleton instance of this class <END>
<BEG> does the word exist in the dictionary ? <END>
<BEG> param key a chinese word return the english translation null if not in dictionary <END>
<BEG> param key a chinese word return the english translation a an array null if not in dictionary <END>
<BEG> add all of the mapping from the specify map to the current map <END>
<BEG> the main method read segment <SEG> whitespace delimit word from a file and print them with their english translation s <END>
<BEG> < i > note : < i > at present this clobber the input list item <END>
<BEG> the main method tokenizes a file in the specified encoding and print it to standard output in the specified encoding <END>
<BEG> create a new { code treereader } use the provide { code reader } <END>
<BEG> what be the primary radical of this char ? <END>
<BEG> what be the characters with this primary radical ? <END>
<BEG> normalize a pre-pre-terminal tree node by account for multi-word token <END>
<BEG> many tuebadz local tree have an explicitly mark head <SEG> a : hd or -hd <END>
<BEG> prints a few aspect of the treebanklanguagepack <SEG> just for debug <END>
<BEG> returns the score associate with the current node <SEG> or nan if there be no score return the score <END>
<BEG> create a new leaf node with the give label param label the label for the leaf node return a new tree leaf <END>
<BEG> create a new non-leaf tree node with the give label param parentlabel the label for the node param child a < code > list < code > of the child of this node <SEG> each of which should itself be a < code > labeledscoredtree < code > return a new internal tree node <END>
<BEG> returns an array of child for the current node <SEG> or null if it be a leaf <END>
<BEG> returns the label associate with the current node <SEG> or null if there be no label <END>
<BEG> return a { code treefactory } that produce tree of the same type a the current { code tree } <END>
<BEG> return a { code treefactory } that produce tree of the { code labeledscoredtree { node|leaf } } type <END>
<BEG> return a { code treefactory } that produce tree of the { code labeledscoredtree { node|leaf } } type <SEG> with the { code label } make with the supply { code labelfactory } <END>
<BEG> an implementation of the < code > treereaderfactory < code > interface <END>
<BEG> load a collection of parse tree from the file of give name <END>
<BEG> return a memorytreebank where each tree in the current treebank have be transform use the treetransformer <END>
<BEG> loads treebank grammar from first argument and print it <END>
<BEG> adds the give tree normalizer to this combination ; the tree normalizer be apply in the order they be add <SEG> with the first to be add be the first to be apply <END>
<BEG> transforms t if it contain one of the following qp structure : < ul > < li > np qp qp cc and or < li > qp rb in cd|dt well over <SEG> more than < li > qp jjr in cd|dt few than < li > qp in jjs cd|dt at least < li > qp cc between 5 and 10 < ul > param t a tree to be transform return t transform <END>
<BEG> set end node <END>
<BEG> return a < code > treefactory < code > that produce tree of the < code > simpletree < code > type <END>
<BEG> load tree from give path specification <END>
<BEG> loads treebank and print it <END>
<BEG> return an function that map from label-labeled tree any implement class to labeledscored tree with a stringlabel label <END>
<BEG> return a function that map from stringlabel label tree to labeledscoredtrees with a categorywordtag label <END>
<BEG> returns a function which take a tree with any label class where the label might have an interesting description <SEG> such a a categorywordtag which go cat [ t w ] <SEG> and return a new tree with corelabels which contain the tostring of each of the input label <END>
<BEG> implements equality for { code treegraphnode } s unlike { code tree } s <SEG> { code treegraphnode } s should be consider equal only if they be == <END>
<BEG> get the parent for the current node <END>
<BEG> adds a child in the ith location <END>
<BEG> removes the ith child from the treegraphnode <END>
<BEG> return the node contain the head word for this node or { code null } if none <SEG> a record in this node 's { link corelabel { code corelabel } } <END>
<BEG> return a { code treefactory } that produce tree of type { code treegraphnode } <SEG> with the { code label } make by the supplied { code labelfactory } <END>
<BEG> returns a { code string } representation of this node and it subtree with one node per line <SEG> indent accord to { code indentlevel } <END>
<BEG> returns a { code string } representation of this node and it subtree a a one-line parenthesized list <END>
<BEG> prints the tree accord to the option specify for this instance <END>
<BEG> this provide a simple main method for call treeprint <END>
<BEG> used by treeprint and wsd supwsd preprocess prints this set of typed dependency to the specify { code printwriter } <END>
<BEG> used by treeprint prints this set of typed dependency to the specify { code printwriter } in the specified format <END>
<BEG> returns the positional index of the left edge of a tree < i > t < i > within a give root <SEG> a define by the size of the yield of all material precede < i > t < i > <END>
<BEG> returns the positional index of the right edge of a tree < i > t < i > within a give root <SEG> a define by the size of the yield of all material precede < i > t < i > plus all the material contain in < i > t < i > <END>
<BEG> returns a lexicalized tree whose labels be categorywordtag instance <SEG> all corresponds to the input tree <END>
<BEG> return the leaf in a tree in the order that they 're find <END>
<BEG> return the label of the leaf in a tree in the order that they 're find <END>
<BEG> return the label of the leaf in a tree <SEG> augment with pos tag <END>
<BEG> given a tree <SEG> set the tag on the leaf node if they be not already set <END>
<BEG> return the syntactic category of the tree a a list of the syntactic category of the mother and the daughter <END>
<BEG> returns a string reporting what kinds of tree and label nod this tree contain <END>
<BEG> turns a sentence into a flat phrasal tree <END>
<BEG> gets the < i > i < i > th leaf of a tree from the left <END>
<BEG> get low common ancestor of all the node in the list with the tree root at root <END>
<BEG> return a list of category that be the path from tree from to tree to within tree root <END>
<BEG> return the node of a tree which represent the low common ancestor of node t1 and t2 dominate by root <END>
<BEG> set the sentence index of all the leaf in the tree only work on corelabel <END>
<BEG> used to set the single tree to be display in this panel which should match the tregex expression param match tree that match the expression <END>
<BEG> sets a new tree reader factory for read tree from file in this panel <END>
<BEG> forks off a new thread to load your file base on the filter you set in the interface <END>
<BEG> highlight the give label from the first mouse event to the second returns true if the highlight be successful <SEG> false otherwise <END>
<BEG> returns true if the give mouse event occur within a highlight h on label <END>
<BEG> called when a pattern can not be compile or some other error occur ; reset gui to valid state <END>
<BEG> checks if the give head finder or tree reader factory be for chinese ; if so <SEG> the font choose in prefs will be override for a chinese compatible font <END>
<BEG> makes a color choose button that display only an icon with a square of the give color <END>
<BEG> used to change the status of the save file menu item to reflect whether any tree be available to save <END>
<BEG> used to change the status of the tsurgeon file menu item to reflect whether tsurgeon be enable <END>
<BEG> called by matchespanel to alert the frame when the matching tree have change <END>
<BEG> main method for launch a new tregex gui object < br > if the argument < code > -transformer class < code > be give <SEG> that class be use a a treetransformer when load in tree <END>
<BEG> similar to { code find } <SEG> but match only if { code node } be the root of the match <END>
<BEG> if there be a current match <SEG> and that match involve set this particular variable string <SEG> this return that string <END>
<BEG> creates a pattern from the give string use the default headfinder and basiccategoryfunction <END>
<BEG> only use by the tregexpatterncompiler to set the pattern <END>
<BEG> prints out all match of a tree pattern on each tree in the path <END>
<BEG> define a macro for rewrite a pattern in any tregex expression compile by this compiler <END>
<BEG> usage : java edu stanford nlp tree tregex tsurgeon tsurgeon [ -s ] -treefile file-with-trees [ -po matching-pattern operation ] operation-file-1 operation-file-2 operation-file-n < h4 > arguments : < h4 > each argument should be the name of a transformation file that contain a list of pattern and transformation operation list pair <END>
<BEG> assumes that we be at the beginning of a tsurgeon script file and get the string for the tregex pattern lead the file <END>
<BEG> assumes the give reader have only tsurgeon operation not a tregex pattern <SEG> and parse these out <SEG> collect them into one operation <END>
<BEG> parses and compiles all operation from a bufferedreader into a list of pair of tregex and tsurgeon pattern <END>
<BEG> parses an operation string into a { link tsurgeonpattern } <END>
<BEG> collects a list of operation pattern into a sequence of operation to be apply <END>
<BEG> if one of the child be a coindexnodes or something else that want coindexing <SEG> it can call this at the time of setroot <END>
<BEG> parses the value of the feature column in a conll-u file and return them in a hashmap with the feature name a key and the feature value a value <END>
<BEG> converts a feature hashmap to a feature string to be use in a conll-u file <END>
<BEG> parses the value of the extra dependency column in a conll-u file and return them in a hashmap with the governor index a key and the relation names a value <END>
<BEG> converts an extra dependency hash map to a string to be use in a conll-u file <END>
<BEG> this method be mean to be call when you want to add a relation to the value list in a thread-safe manner <END>
<BEG> check for nmod subtypes which be not store in the ` nmods ` map <END>
<BEG> destructively modify this { code collection < typeddependency > } by collapse several type of transitive pair of dependency or by add additional information from the dependent to the relation of the governor <END>
<BEG> overwrite the postoperationfix method <END>
<BEG> reads <SEG> stem <SEG> and print the tree in the file <END>
<BEG> returns true if either chunk1 or chunk2 be acronym of the other <END>
<BEG> see acronymmatcher # isacronym edu stanford nlp util coremap <SEG> edu stanford nlp util coremap <END>
<BEG> prints a full dump of a coremap <END>
<BEG> returns a composite hashcode over all the key and value currently store in the map <END>
<BEG> finds the object with the minimum key <SEG> remove it from the heap <SEG> and return it <END>
<BEG> changes the position of an element o in the heap base on a change in the ordering of o <END>
<BEG> prints the array entry in sorted comparator order <END>
<BEG> adds element to set <END>
<BEG> removes the element at the specified index from the array <SEG> and return a new array contain the remain element <END>
<BEG> tests two int [ ] [ ] array for have equal content <END>
<BEG> test two int [ ] array for have equal content return true iff x and y have equal length <SEG> and for each i <SEG> < code > x [ i ] ==ys [ i ] < code > <END>
<BEG> returns an array with only the element accept by < code > filter < code > < br > implementation note : create two array <SEG> call < code > filter < code > once for each element <SEG> do not alter < code > original < code > <END>
<BEG> return a set contain the same element a the specified array <END>
<BEG> return an immutable set contain the same element a the specified array <END>
<BEG> casts to a double array <END>
<BEG> need because arrays aslist wo n't to autoboxing <SEG> so if you give it a primitive array you get a singleton list back with just that array a an element <END>
<BEG> provides a consistent ordering over array <END>
<BEG> if tofind be a part of token <SEG> it find the start index of tofind in token if tofind be not a sub-array of token <SEG> then it return null note that tokens sublist should have the exact element and order a in tofind param tofind array you want to find in tokens param token param matchingfunction function that take tofindtoken <SEG> token pair and return whether they match return start index of the sublist <END>
<BEG> returns a new array which have the number in the input array l1-normalized <END>
<BEG> remove the last element of the heap last in the index array <END>
<BEG> finds the e with the high priority <SEG> remove it <SEG> and return it <END>
<BEG> searches for the object in the queue and return it <END>
<BEG> adds an object to the queue with the minimum priority double negative_infinity <END>
<BEG> promotes a key in the queue <SEG> add it if it be n't there already <END>
<BEG> changes a priority <SEG> either up or down <SEG> add the key it if it be n't there already <END>
<BEG> dump out the content of the cache to the backing file <END>
<BEG> print out cache stats to the specify stream <END>
<BEG> map a string to an array of type character <END>
<BEG> returns a string representation of a character 's unicode block <END>
<BEG> returns true if a character be a symbol <SEG> and false otherwise <END>
<BEG> returns true if a character be a control character <SEG> and false otherwise <END>
<BEG> return a factory for make arraylist collections <END>
<BEG> param file the file to load the list from param c the class to instantiate each member of the list <END>
<BEG> adds the item from the file to the collection <END>
<BEG> checks whether a collection contain a specified object <END>
<BEG> removes the first occurrence in the list of the specified object <SEG> use object identity == not equality a the criterion for object presence <END>
<BEG> returns the index of the first occurrence in the list of the specified object <SEG> use object identity == not equality a the criterion for object presence <END>
<BEG> returns the index of the first occurrence after the startindex exclusive in the list of the specified object <SEG> use object equal function <END>
<BEG> samples without replacement from a collection <SEG> use your own { link random } number generator <END>
<BEG> returns true iff l1 be a sublist of l i e <SEG> every member of l1 be in l <SEG> and for every e1 & lt ; e2 in l1 <SEG> there be an e1 & lt ; e2 occurrence in l <END>
<BEG> return the item of an iterable a a sorted list <END>
<BEG> create a list out of the item in the iterable <END>
<BEG> add all the item from an iterable to a collection <END>
<BEG> get all sub-lists of the give list of the give size <END>
<BEG> get all prefix suffix combination from a list <END>
<BEG> makes it possible to uniquify a collection of object which be normally non-hashable <END>
<BEG> if any item in tocheck be present in collection param collection param tocheck <END>
<BEG> split a list into numfolds roughly equally sized fold <END>
<BEG> split a list into train <SEG> test pair for use in k-fold crossvalidation <END>
<BEG> transforms the keyset of collection accord to the give function and return a set of the key <END>
<BEG> transforms the keyset of collection accord to the give function and return a list <END>
<BEG> filters the object in the collection accord to the give filter and return a list <END>
<BEG> get all value correspond to the index if they exist in the map <END>
<BEG> concatenate a number of iterators together <SEG> to form one big iterator <END>
<BEG> adds the value to the collection map to by the key <END>
<BEG> just add the key empty collection <SEG> but key be in the keyset <END>
<BEG> adds all of the mapping in m to this collectionvaluedmap <END>
<BEG> removes the mapping associate with the key from this map <END>
<BEG> removes the value from the collection map to by this key <SEG> leave the rest of the collection intact <END>
<BEG> return true iff o be a collectionvaluedmap <SEG> and each key map to the a collection of the same object in o a it do in this collectionvaluedmap <END>
<BEG> creates a delta copy of this map <SEG> where only the difference from the original map be represent <END>
<BEG> return a string representation of this collectionvaluedmap <SEG> with special machinery to avoid recursion problem <END>
<BEG> returns a new { code comparator } which be the result of chain the give { code comparator } s facilitates sort on multiple key <END>
<BEG> internal class which represent a threadpoolexecutor whose future job know what their input be <END>
<BEG> for supply a new instance for the global method to use <END>
<BEG> returns a unique object o ' that equal the argument o <END>
<BEG> returns a < code > set < code > such that each element in the returned set be a unique object e ' that equal the corresponding element e in the original set <END>
<BEG> test method : intern it argument and say whether they == themselves <END>
<BEG> this set the lefthand side pad width for display the text table <END>
<BEG> sets the width use to separate cell in the table <END>
<BEG> increments the entry for this guess and gold by the give increment amount <END>
<BEG> retrieves the number of entry with this guess and gold <END>
<BEG> returns the set of distinct class label enter into this confusion table <END>
<BEG> returns the contingency table for the give class label <SEG> where all other class label be treat a negative <END>
<BEG> we do n't want to change the backing index in any way <SEG> and clear would have to entail do that <SEG> so we just throw an unsupportedoperationexception instead <END>
<BEG> this be one instance where element add to the backing index will show up in this index 's operation <END>
<BEG> casts an object to a t param < t > <END>
<BEG> does nothing <SEG> occasionally use to make java happy that a value be use <END>
<BEG> makes an array base on klass <SEG> but cast it to be of type t [ ] <END>
<BEG> apply a function to the file under a give directory and perhaps it subdirectory <END>
<BEG> returns the element in the queue with high priority <SEG> and pop it from the queue <END>
<BEG> not support in this implementation <END>
<BEG> returns the highest-priority element without remove it from the queue <END>
<BEG> returns a representation of the queue in decrease priority order <SEG> display at most maxkeystoprint element <END>
<BEG> collections <END>
<BEG> maps <END>
<BEG> other <END>
<BEG> queries the sql table for the count of the phrase <END>
<BEG> note that this be really really slow for ngram > 1 todo : make this fast if we have be use mysql we could have <END>
<BEG> provides a hash code base on the immutable key and value provide to the constructor <END>
<BEG> returns a shallow copy of this < code > identityhashset < code > instance : the element themselves be not clone <END>
<BEG> returns true if this set contain the specified element <END>
<BEG> return the second element of the pair <END>
<BEG> chains together an iterable of iterables after transform each one <END>
<BEG> returns a string representation of the content of call tostring on each element of the give iterable <SEG> join the element together with the give glue <END>
<BEG> creates an arraylist contain all of the objects return by the give iterator <END>
<BEG> adds all of the objects return by the give iterator into the give collection <END>
<BEG> for test only : simulate a gc event <END>
<BEG> get the value of this { link lazy } <SEG> compute it if necessary <END>
<BEG> get the value of this { link lazy } if it 's be initialized <SEG> or else return null <END>
<BEG> check if this lazy have be garbage collect <SEG> if it be a cached value <END>
<BEG> create a lazy value from the give provider <SEG> allow the value store in the lazy to be garbage collect if necessary <END>
<BEG> for booleanlogrecordhandler <SEG> you should leave this alone and implement propagaterecord instead <END>
<BEG> simple test case <END>
<BEG> color the tag for a particular channel this color param channel the channel to color param color the color to use <END>
<BEG> format a channel param b the stringbuilder to append to param channelstr the [ possibly truncate and or modify ] string to actually print to the stringbuilder param channel the original channel return |true| if the channel be print that be <SEG> append to the stringbuilder <END>
<BEG> returns true if an object have special logic for pretty log e g <END>
<BEG> the redwood equivalent to printf <END>
<BEG> the redwood equivalent to printf <SEG> with a log level <END>
<BEG> apply this configuration to redwood <END>
<BEG> capture a system stream <END>
<BEG> determine where <SEG> in the end <SEG> console output should go <END>
<BEG> set the width of the channel or 0 to not show channel <END>
<BEG> clear any custom configuration to redwood return this <END>
<BEG> close track when the jvm shut down <END>
<BEG> an empty redwood configuration <END>
<BEG> a standard redwood configuration <SEG> which print to the console with channel <END>
<BEG> run redwood with slf4j a the console backend return a redwood configuration <END>
<BEG> run redwood with java util log return a redwood configuration <END>
<BEG> the current redwood configuration ; this be use to make incremental change to an exist custom configuration <END>
<BEG> configure redwood from scratch base on a properties file <END>
<BEG> set up the redwood logger with stanford 's default configuration <END>
<BEG> return a mapfactory that return a hashmap <END>
<BEG> return a mapfactory that return a treemap with the give comparator <END>
<BEG> using the iterator order of value in the value <SEG> add the individual element into the list under the give key <END>
<BEG> adds the value to the hashset give by map get key <SEG> create a new hashmap if need <END>
<BEG> adds the value to the collection give by map get key <END>
<BEG> compose two map map1 : x- & gt ; y and map2 : y- & gt ; z to get a map x- & gt ; z return the composed map <END>
<BEG> inverts a map x- & gt ; y to a map y- & gt ; pow x not assume unique preimages <END>
<BEG> get all value correspond to the index if they exist in the map param map param index return a submap correspond to the index <END>
<BEG> adds the element if the set be not already full <END>
<BEG> creates a factory for produce instance of this class from a constructor take the give type a argument param < e > the type of the object to be produce param class the type use in the constructor return a classfactory of the give type <END>
<BEG> creates a factory for produce instance of this class from a constructor take object of the type give param < e > the type of the object to be produce param object instances of the type use in the constructor return a classfactory of the give type <END>
<BEG> create an instance of the class <SEG> infer the type automatically <SEG> and give an array of object a constructor parameter note : the result instance will [ unlike java ] invoke the most narrow constructor rather than the one which match the signature pass to this function param < e > the type of the object return param object the argument to the constructor of the class return an instance of the class <END>
<BEG> creates a new metaclass helper method param classname the name of the class to create return a new metaclass object of the give class <END>
<BEG> creates a new metaclass helper method param clazz the class to create return a new metaclass object of the give class <END>
<BEG> compares this object to the specify object <END>
<BEG> compares two < code > mutabledouble < code > object numerically <END>
<BEG> add the argument to the value of this integer <END>
<BEG> this return the inner list that be wrap <END>
<BEG> a static method that provide an easy way to create a list of a certain parametric type <END>
<BEG> dereference the pointer <END>
<BEG> returns true iff the give properties contain a property with the give key name <SEG> and it value be not false or no or off <END>
<BEG> create a properties object from the pass in string argument <END>
<BEG> checks to make sure that all property specify in { code property } be know to the program by check that each simply override a default value <END>
<BEG> build a { code properties } object contain key-value pair from the give property whose key be in a list to keep <END>
<BEG> get the value of a property and automatically cast it to a specific type <END>
<BEG> load an integer property a a long <END>
<BEG> load a double property <END>
<BEG> loads a comma-separated list of integer from properties <END>
<BEG> return the hashcode : there be only two distinct comparators by equal <END>
<BEG> returns the set cross product of s1 and s2 <SEG> a < code > pair < code > s <END>
<BEG> returns the difference of set s1 and s2 <END>
<BEG> returns the symmetric difference of set s1 and s2 i e <END>
<BEG> reads character until { link # iswhitespace char iswhitespace ch } or { link # ispunct char ispunct ch } or { link # iseof } <END>
<BEG> takes a string of the form x1=y1 <SEG> x2=y2 <SEG> such that each y be an integer and each x be a key <END>
<BEG> given a pattern <SEG> which contain one or more capture group <SEG> and a string <SEG> return a list with the value of the captured group in the pattern <END>
<BEG> joins each elem in the { link iterable } with the give glue <END>
<BEG> joins an array of element in a give span <END>
<BEG> splits a string into whitespace tokenized field base on a delimiter and then whitespace <END>
<BEG> pads the give string to the left with the give character ch to ensure that it 's at least totalchars long <END>
<BEG> returns s if it 's at most maxwidth char <SEG> otherwise chop right side to fit <END>
<BEG> returns a clean version of the give filename in which space have be convert to dash and all non-alphanumeric char be underscore <END>
<BEG> returns the index of the < i > n < i > th occurrence of ch in s <SEG> or -1 if there be less than n occurrence of ch <END>
<BEG> this return a string from decimal digit smallestdigit to decimal digit big digit <END>
<BEG> parses command line argument into a map <END>
<BEG> this method read in property list in a file in the format prop=value <SEG> one property per line <END>
<BEG> this method convert a comma-separated string with whitespace optionally allow after the comma represent property to a properties object <END>
<BEG> this method update a properties object base on a comma-separated string with whitespace optionally allow after the comma represent property to a properties object <END>
<BEG> a simple form of command line argument parse <END>
<BEG> this function split the string s into multiple strings use the splitchar <END>
<BEG> computes the long common contiguous substring of s and t the lccs be the long run of character that appear consecutively in both s and t for instance <SEG> the lccs of color and colour be 4 <SEG> because of colo <END>
<BEG> computes the levenshtein edit distance of the two give strings <END>
<BEG> computes the wordnet 2 0 pos tag correspond to the ptb pos tag s param s a penn treebank pos tag <END>
<BEG> returns a short class name for an object <END>
<BEG> converts a tab delimit string into an object with give field requires the object have setxxx function for the specified field param objclass class of object to be create param str string to convert param delimiterregex delimiter regular expression param fieldnames fieldnames param < t > type to return return object create from string <END>
<BEG> converts a tab delimit string into an object with give field requires the object have public access for the specified field param objclass class of object to be create param str string to convert param delimiterpattern delimiter param fieldnames fieldnames param < t > type to return return object create from string <END>
<BEG> uppercases the first character of a string <END>
<BEG> check if a string begin with an uppercase <END>
<BEG> returns an html table contain the matrix of strings pass in <END>
<BEG> swap any occurrence of any character in the from string in the input string with the corresponding character from the to string <END>
<BEG> returns the supplied string with any trail '\n ' or '\r\n ' remove <END>
<BEG> strip directory and suffix from the give name <END>
<BEG> returns whether a string be either null or empty <END>
<BEG> convert args to property with variable name resolve <END>
<BEG> n gram for already split string <END>
<BEG> the string be split on whitespace and the ngrams be join with a single space <END>
<BEG> build a list of character-based ngrams from the give string <END>
<BEG> convert a list of label into a string <SEG> by simply join them with space <END>
<BEG> unescape an html string <END>
<BEG> decode an array encode a a string <END>
<BEG> logs the command line argument to redwood on the give channel <END>
<BEG> start the process define by the processbuilder <SEG> and run until complete <END>
<BEG> returns the process id <SEG> via an awful hack <END>
<BEG> returns the process id <SEG> via an awful hack <SEG> or else -1 <END>
<BEG> returns the number of megabyte mb of memory in use <END>
<BEG> returns the string value of the stack trace for the give throwable <END>
<BEG> returns a string represent the current date and time in the give format <END>
<BEG> return elapse time without stop timer <END>
<BEG> format with one decimal place elapse millisecond <END>
<BEG> restart timer <END>
<BEG> return elapse time on static timer without stop timer <END>
<BEG> print the start of time message to stderr and start the timer <END>
<BEG> finish the line from do with the end of the timing do message and elapsed time in x y second <END>
<BEG> give a line say that something be do <END>
<BEG> this method allow you to show the result of time accord to another class ' logger <END>
<BEG> returns a new node with the new data attach <END>
<BEG> returns the data in the top node of the stack <END>
<BEG> returns the current stack a a list <END>
<BEG> adds a collection of value to the collection map to by the key <END>
<BEG> yes <SEG> this be a weird method <SEG> but i need it <END>
<BEG> adds all of the entry in the < code > other < code > map <SEG> perform < code > function < code > on them to transform the value <END>
<BEG> iterate over the map use the iterator and entry inner class <END>
<BEG> adds all the key in the give twodimensionalmap <END>
<BEG> sets a new indication of layer select <END>
<BEG> locked layer should not be editable return true if the layer be lock <END>
<BEG> lock or unlock a layer <END>
<BEG> converts a int to a byte array contain 4 byte represent a 32bit integer param value the int to convert return the converted value <END>
<BEG> converts a byte array contain 4 byte to a 32bit integer param b the byte array to convert return the converted byte array <END>
<BEG> make a color more transparent param rgb param alphapercent return deprecate use org jdesktop swingx color colorutil # setalpha color c <SEG> int alpha ; todo : not used anywhere <SEG> can be removed ? <END>
<BEG> copy whole directory + content to the destination directory param source the source directory param destination the destination directory param extension the file-extension to search for in the sourcedir <SEG> for example shp <END>
<BEG> copies file 'source ' to destination directory 'destination ' param source param destination param bundlefiles copy file with the same name but different extension also like : if file be name thisisaname shp <SEG> then copy thisisaname shx <SEG> thisisaname dbf etc <END>
<BEG> copy sourcefile to destination directory use filechannel param source source file to copy to destinaion param destination destination directory <END>
<BEG> convert byte into a hax encode string param raw return <END>
<BEG> gets a < code > bufferedreader < code > indeed a < code > linenumberreader < code > from the < code > file < code > specify in the constructor of < code > charsettoolkit < code > use the charset discover by the method < code > guessencoding < code > <END>
<BEG> escape html from a string to make it safe to show <END>
<BEG> try to access the staticfactory method for : byte <SEG> short <SEG> integer <SEG> long <SEG> double <SEG> and float <END>
<BEG> return different color <END>
<BEG> draw a sparkline with x axis and y axis value <SEG> and pre-calculated min and max of the y axis value <END>
<BEG> returns current background color <END>
<BEG> set background color <END>
<BEG> returns current height for the sparkline in pixel <END>
<BEG> returns current color for the highlighted value text bounding box <END>
<BEG> set color for the highlighted value text bound box <SEG> or null to draw no box <END>
<BEG> returns current color for the highlighted value text <END>
<BEG> set color for the value highlight <SEG> magenta be use if it be null <END>
<BEG> < p > set a x position in pixel to find close value in the sparkline and highlight it < p > < p > if null or out of the sparkline width range <SEG> no value be highlight < p > param highlightedvaluexposition new highlightedvaluexposition in pixel <END>
<BEG> return current highlighttextmode see highlighttextmode return current highlighttextmode <END>
<BEG> set color for the sparkline line <END>
<BEG> set transparent background <END>
<BEG> set color to fill the area under the line <END>
<BEG> set draw area <END>
<BEG> get average calculation of various number a a bigdecimal <END>
<BEG> calculate median of various number a a bigdecimal <END>
<BEG> calculate first quartile q1 of various number a a bigdecimal <END>
<BEG> calculates all statistic and return them in a < code > bigdecimal < code > number array <END>
<BEG> takes an array of number of any type combination and return an array with their bigdecimal equivalent number <END>
<BEG> creates a time interval graphic representation with the indicate fill <SEG> border and background color or null to use default color <END>
<BEG> execute a long task with cancel and progress support <END>
<BEG> set the listener to this executor <END>
<BEG> finish the progress task and display a wrap-up message param progressticket the progress ticket of the task param finishmessage a message about the finished task <END>
<BEG> notify the user about a new complete unit <END>
<BEG> notify the user about complete workunits <END>
<BEG> notify the user about progress by show message with detail <END>
<BEG> notify the user about complete workunits and show additional detailed message <END>
<BEG> change the display name of the progress task <END>
<BEG> returns the current task 's display name <SEG> or an empty string <END>
<BEG> start the progress indication for indeterminate task <END>
<BEG> start the progress indication for a task with known number of step <END>
<BEG> currently indeterminate task can be switch to show percentage complete <END>
<BEG> currently determinate task can be switch to indeterminate mode <END>
<BEG> return true if the give content-type header mean form_encoded <END>
<BEG> construct a form-urlencoded document contain the give sequence of name value pair <END>
<BEG> parse a form-urlencoded document <END>
<BEG> construct a & -separated list of the give value <SEG> percentencoded <END>
<BEG> construct a map contain a copy of the give parameter <END>
<BEG> construct a list of parameters from name <SEG> value <SEG> name <SEG> value <END>
<BEG> finish add parameter ; for example read an http response body and parse parameter from it <END>
<BEG> the mime type of the body of this message <END>
<BEG> the value of the last http header with the give name <END>
<BEG> get a stream from which to read the body of the http request or response <END>
<BEG> construct a www-authenticate or authentication header value <SEG> contain the give realm plus all the parameter whose name begin with oauth_ <END>
<BEG> read all the data from the give stream <SEG> and close it <END>
<BEG> check whether the message have a valid signature <END>
<BEG> determine whether the give string contain the same sequence of character <END>
<BEG> subsequently <SEG> newmethod name will attempt to instantiate the give class <SEG> with no constructor parameter <END>
<BEG> subsequently <SEG> newmethod name will fail <END>
<BEG> get the key spec that jce understands <END>
<BEG> returns { code true } if the specify map be not { code null } and not empty <END>
<BEG> converts the specify multi-valued map to a single-valued map by take the first value in the list <END>
<BEG> removes the trail slash from the specify uri <SEG> if present <END>
<BEG> serialises the specified map of parameter into a url query string <END>
<BEG> ensures that an { code iterable } object pass a a parameter to the call method be not null and contain no null element <END>
<BEG> ensures that { code index } specify a valid < i > element < i > in an array <SEG> list or string of size { code size } <END>
<BEG> returns the escaped form of a give literal string <END>
<BEG> returns an { code appendable } instance which automatically escape all text append to it before pass the result text to an underlie { code appendable } <END>
<BEG> convenience method to allow for store null value <END>
<BEG> convenience method to merge a map < string <SEG> list < string > > <END>
<BEG> returns the first value from the set of all value for the give parameter name <END>
<BEG> appends a list of key value pair to the give url <SEG> e g <END>
<BEG> builds an oauth header from the give list of header field <END>
<BEG> helper method to concatenate a parameter and it value to a pair that can be use in an http header <END>
<BEG> normalizes the set of request parameter this instance be configure with <SEG> a per oauth spec section 9 1 1 <END>
<BEG> has this pool instance be closed <END>
<BEG> throws an < code > illegalstateexception < code > when this pool have be close <END>
<BEG> < p > flag to remove abandon object if they exceed the removeabandonedtimeout when borrowobject be invoke < p > param removeabandonedonborrow true mean abandon object will be remove by borrowobject see # getremoveabandonedonborrow <END>
<BEG> < p > timeout in second before an abandon object can be remove < p > < p > the time of most recent use of an object be the maximum late of { link trackeduse # getlastused } if this class of the object implement trackeduse and the time when the object be borrow from the pool < p > < p > the default value be 300 second < p > return the abandon object timeout in second <END>
<BEG> < p > sets the timeout in second before an abandon object can be remove < p > < p > setting this property have no effect if { link # getremoveabandonedonborrow removeabandonedonborrow } and { link # getremoveabandonedonmaintenance removeabandonedonmaintenance } be both false < p > param removeabandonedtimeout new abandon timeout in second see # getremoveabandonedtimeout <END>
<BEG> sets the flag to log stack trace for application code which abandon an object <END>
<BEG> sets the flag to require full stack trace for log abandon connection when enable <END>
<BEG> returns the log writer be use by this configuration to log information on abandon object <END>
<BEG> if the pool implement { link usagetracking } <SEG> should the pool record a stack trace every time a method be call on a pooled object and retain the most recent stack trace to aid debugging of abandon object ? <END>
<BEG> if the pool implement { link usagetracking } <SEG> configure whether the pool should record a stack trace every time a method be call on a pooled object and retain the most recent stack trace to aid debugging of abandon object <END>
<BEG> returns the maximum number of object that can be allocate by the pool check out to client <SEG> or idle await checkout at a give time <END>
<BEG> sets the cap on the number of object that can be allocate by the pool check out to client <SEG> or idle await checkout at a give time <END>
<BEG> returns whether the pool have lifo last in <SEG> first out behaviour with respect to idle object - always return the most recently use object from the pool <SEG> or a a fifo first in <SEG> first out queue <SEG> where the pool always return the old object in the idle object pool <END>
<BEG> returns whether object borrow from the pool will be validate when they be return to the pool via the < code > returnobject < code > method <END>
<BEG> returns the maximum number of object to examine during each run if any of the idle object evictor thread <END>
<BEG> returns the minimum amount of time an object may sit idle in the pool before it be eligible for eviction by the idle object evictor if any - see { link # settimebetweenevictionrunsmillis long } <END>
<BEG> returns the minimum amount of time an object may sit idle in the pool before it be eligible for eviction by the idle object evictor if any - see { link # settimebetweenevictionrunsmillis long } <SEG> with the extra condition that at least < code > minidle < code > object instance remain in the pool <END>
<BEG> sets the eviction policy for this pool <END>
<BEG> < p > starts the evictor with the give delay <END>
<BEG> provides the stack trace for the call that create this pool <END>
<BEG> the total number of object return to this pool over the lifetime of the pool <END>
<BEG> the total number of object destroy by the evictor associate with this pool over the lifetime of the pool <END>
<BEG> the total number of object destroy by this pool a a result of fail validation during < code > borrowobject < code > over the lifetime of the pool <END>
<BEG> the mean time object be active for base on the last { link # mean_timing_stats_cache_size } object return to the pool <END>
<BEG> the mean time thread wait to borrow an object base on the last { link # mean_timing_stats_cache_size } object borrow from the pool <END>
<BEG> the listener use if any to receive notification of exception unavoidably swallow by the pool <END>
<BEG> swallows an exception and notify the configured listener for swallowed exception queue <END>
<BEG> updates statistic after an object be borrow from the pool <END>
<BEG> marks the object a return to the pool <END>
<BEG> unregisters this pool 's mbean <END>
<BEG> gets the value of the flag that determine if jmx will be enable for pool create with this configuration instance <END>
<BEG> gets the value of the jmx name base that will be use a part of the name assign to jmx enable pool create with this configuration instance <END>
<BEG> deallocates the object and set it { link pooledobjectstate # idle idle } if it be currently { link pooledobjectstate # allocated allocated } <END>
<BEG> sets the state to { link pooledobjectstate # invalid invalid } <END>
<BEG> configures the stack trace generation strategy base on whether or not fully detailed stack trace be require <END>
<BEG> returns the limit on the number of object instance allocate by the pool check out or idle <SEG> per key <END>
<BEG> returns the cap on the number of idle instance per key in the pool <END>
<BEG> sets the target for the minimum number of idle object to maintain in each of the keyed sub-pools <END>
<BEG> obtain a reference to the factory use to create <SEG> destroy and validate the object use by this pool <END>
<BEG> borrows an object from the sub-pool associate with the give key use the specify waiting time which only apply if { link # getblockwhenexhausted } be true <END>
<BEG> clears any object sit idle in the pool by remove them from the idle instance sub-pools and then invoke the configured poolableobjectfactory 's { link keyedpooledobjectfactory # destroyobject object <SEG> pooledobject } method on each idle instance <END>
<BEG> closes the keyed object pool <END>
<BEG>  < p > successive activation of this method examine object in keyed sub-pools in sequence <SEG> cycle through the key and examine object in oldest-to-youngest order within the keyed sub-pools <END>
<BEG> create an object use the { link keyedpooledobjectfactory # makeobject factory } <SEG> passivate it <SEG> and then place it in the idle object pool <END>
<BEG> return an estimate of the number of thread currently block wait for an object from the pool <END>
<BEG> return an estimate of the number of thread currently block wait for an object from the pool for each key <END>
<BEG> provides information on all the object in the pool <SEG> both idle waiting to be borrow and active currently borrow <END>
<BEG> returns true if there be thread wait to take instance from this deque <END>
<BEG> returns the length of the queue of thread wait to take instance from this deque <END>
<BEG> interrupts the thread currently wait to take an object from the pool <END>
<BEG> returns the object that the wrapped softreference refers to <END>
<BEG> sets the wrapped reference <END>
<BEG> identifies the concrete type of object that an object factory creates <END>
<BEG> creates an object <SEG> and place it into the pool <END>
<BEG> returns the number of instance currently borrow from this pool <END>
<BEG> clears any object sit idle in the pool <END>
<BEG> obtain the wrapped <SEG> pool object <END>
<BEG> disable the proxy wrapper <END>
<BEG> invoke the give method on the wrapped object <END>
<BEG> move to the next synchronization point after a position <END>
<BEG> return the current position a a value that may be pass to { link datafilereader # seek long } <END>
<BEG> reset size counter of array to zero <END>
<BEG> buffering be slow for ints that encode to just 1 or two byte <SEG> and and fast for large one <END>
<BEG> buffering be slow for writelong when the number be small enough to fit in an int <END>
<BEG> reconfigures this jsondecoder to use the inputstream provide <END>
<BEG> reconfigures this jsondecoder to use the string provide for input <END>
<BEG> recursively replace the symbol at the top of the stack with it production <SEG> until the top be a terminal <END>
<BEG> performs any implicit action at the top the stack <SEG> expand any production other than the root that may be encounter <END>
<BEG> pushes the production for the give symbol < tt > sym < tt > <END>
<BEG> returns the top symbol from the stack <END>
<BEG> pushes < tt > sym < tt > on to the stack <END>
<BEG> skips data by call < code > skipxyz < code > or < code > readxyz < code > method on < code > this < code > <SEG> until the parser stack reach the target level <END>
<BEG> skips the repeater at the top the stack <END>
<BEG> pushes the give symbol on to the skip and skip it <END>
<BEG> push a new collection on to the stack <END>
<BEG> re-initialize <SEG> read from a new underlying decoder <END>
<BEG> called to read an array instance <END>
<BEG> use a strategy that validate that a schema can be read by exist schema s accord to the avro default schema resolution <END>
<BEG> see inputstream # read <END>
<BEG> see inputstream # read byte [ ] <SEG> int <SEG> int <END>
<BEG> loads a class use the class loader <END>
<BEG> encode < code > integer < code > a a series of 4 byte into < code > buf < code > start at position < code > offset < code > <END>
<BEG> decode a series of 4 byte from < code > buf < code > <SEG> start at < code > offset < code > <SEG> and interpret them a an integer <END>
<BEG> returns a map with metadata i e <END>
<BEG> get the contain value if define or else return a default value param other what to return if the value be not define a none return either the value <SEG> or other if the value be not define <END>
<BEG> wraps value in an option type <SEG> depend on whether or not value be null param value param < t > type of value return some value if value be not null <SEG> none if value be null <END>
<BEG> wrap value in a some type nb ! <END>
<BEG> write a message header to the wire <END>
<BEG> write a struct begin <END>
<BEG> write a field header contain the field id and field type <END>
<BEG> write the stop symbol so we know there be no more field in this struct <END>
<BEG> write a map header <END>
<BEG> write a boolean value <END>
<BEG> write a double to the wire a 8 byte <END>
<BEG> write a byte array <SEG> use a varint for the size <END>
<BEG> abstract method for write the start of list and set <END>
<BEG> read a message header <END>
<BEG> does n't actually consume any wire data <SEG> just remove the last field for this struct from the field stack <END>
<BEG> read a field header off the wire <END>
<BEG> read a boolean off the wire <END>
<BEG> reads a byte [ ] via readbinary <SEG> and then utf-8 decodes it <END>
<BEG> read a byte [ ] from the wire <END>
<BEG> prepends the service name to the function name <SEG> separate by tmultiplexedprotocol separator <END>
<BEG> reset any internal state back to a blank slate <END>
<BEG> returns a byte array of at least length 1 <END>
<BEG> stop serving and shut everything down <END>
<BEG> deserialize only a single thrift object address by recursively use field id from a byte record <END>
<BEG> deserialize only a boolean field address by recursively use field id from a byte record <END>
<BEG> deserialize only the id of the field set in a tunion address by recursively use field id from a byte record <END>
<BEG> given a tenum class and integer value <SEG> this method will return the associated constant from the give tenum class <END>
<BEG> 'register ' a service with this < code > tmultiplexedprocessor < code > <END>
<BEG> register a service to be call to process query without service name param processor <END>
<BEG> use the actual underlying protocol e g <END>
<BEG> only clear the read buffer ! <END>
<BEG> reads up to len byte into buffer buf <SEG> start at offset off <END>
<BEG> writes up to len byte from the buffer <END>
<BEG> flush any pending data out of a transport buffer <END>
<BEG> return false after close be call <END>
<BEG> the stream must already be open <END>
<BEG> closes both the input and output stream <END>
<BEG> reads from the underlie input stream if not null <END>
<BEG> flushes the underlie output stream if not null <END>
<BEG> noop <END>
<BEG> readsaslheader be use to tag whether the sasl header have be read properly <END>
<BEG> flushes to the underlie transport <END>
<BEG> optional method implementation <END>
<BEG> test file status return true if open <SEG> otherwise false <END>
<BEG> open file if not previously open <END>
<BEG> close file <SEG> subsequent read write activity will throw exception <END>
<BEG> read up to len many byte into buf at offset param buf house bytes read param off offset into buff to begin write to param len maximum number of byte to read return number of byte actually read throw ttransportexception on read failure <END>
<BEG> connects the socket <SEG> create a new socket object if necessary <END>
<BEG> is there more data to be read ? <END>
<BEG> return the index within the underlie buffer that specify the next spot that should be read from <END>
<BEG> get the number of byte remain in the underlying buffer <END>
<BEG> return a wrapped instance of the base transport <END>
<BEG> serialize the thrift object into a java string <SEG> use a specified character set for encode <END>
<BEG> get the tprotocol be use a the input read protocol <END>
<BEG> retrieves a message which have no argument <END>
<BEG> returns deserializer that enable deserializing { link java io inputstream } object <END>
<BEG> returns empty deserializer that enable deserializing buffer <END>
<BEG> serializes specify object <END>
<BEG> serializes specify object to output stream <END>
<BEG> serializes object to output stream by specified template <END>
<BEG> deserializes { link java nio bytebuffer } object to { link org msgpack type value } object <END>
<BEG> deserializes byte array to object <END>
<BEG> deserializes byte array to object of specified class <END>
<BEG> deserializes byte array to object accord to specify template <END>
<BEG> deserializes buffer to object <END>
<BEG> deserializes input stream to object accord to template since 0 6 0 param in input stream param v param tmpl return throw ioexception <END>
<BEG> converts specify { link org msgpack type value } object to object <END>
<BEG> converts { link org msgpack type value } object to object specified class <END>
<BEG> converts { link org msgpack type value } object to object accord to template since 0 6 8 param v param tmpl return throw ioexception <END>
<BEG> serializes specify object and return the byte array <END>
<BEG> serializes object by specified template and return the byte array <END>
<BEG> < p > gets the bean 's customizer { link class } < p > return a { link class } instance or < code > null < code > <END>
<BEG> < p > gets the short description or { link # getdisplayname } if not set <END>
<BEG> < p > indicates if this feature be prefer <END>
<BEG> < p > indicates if this feature be an expert feature <END>
<BEG> sets the indexed getter a the specify method <END>
<BEG> determines if this < code > indexedpropertydescriptor < code > be equal to the specify object <END>
<BEG> obtains the class object of the indexed property type <END>
<BEG> flushes the < code > beaninfo < code > cache of the specified bean class param clazz the specified bean class <END>
<BEG> gets an array of search package <END>
<BEG> sets the search package <END>
<BEG> < p > gets the property change event <END>
<BEG> close the input stream of xml data <END>
<BEG> sets the exception listener <END>
<BEG> throw messagetypeexception if stack be invalid <END>
<BEG> compares two set of field <END>
<BEG> get a hash code for give field and value <SEG> use the give seed <END>
<BEG> deprecate from v3 0 0-beta-3+ <SEG> for compatibility with v2 5 0 and v2 6 1 generate code <END>
<BEG> package private helper method for abstractparser to create uninitializedmessageexception <END>
<BEG> throws an { link unsupportedoperationexception } if the list be immutable <END>
<BEG> creates a new { link allocatedbuffer } that be back by the give array <END>
<BEG> returns { code true } if run on an android device <END>
<BEG> returns the memory class or { code null } if not on android device <END>
<BEG> < pre > a url resource name that uniquely identify the type of the serialize protocol buffer message <END>
<BEG> < pre > must be a valid serialize protocol buffer of the above specify type <END>
<BEG> < pre > the fully qualified name of this interface <SEG> include package name follow by the interface 's simple name <END>
<BEG> < pre > the method of this interface <SEG> in unspecified order <END>
<BEG> < pre > a version string for this interface <END>
<BEG> < pre > source context for the protocol buffer service represent by this message <END>
<BEG> < pre > included interface <END>
<BEG> < pre > the source syntax of the service <END>
<BEG> creates a new reader use the give { code buffer } a input <END>
<BEG> like { link # add boolean } but more efficient in that it do n't box the element <END>
<BEG> < pre > the bool value <END>
<BEG> returns an unpooled buffer allocator <SEG> which will create a new buffer for each request <END>
<BEG> return a { link bytestring byteiterator } over the byte in the bytestring <END>
<BEG> returns { code true } if the size be { code 0 } <SEG> { code false } otherwise <END>
<BEG> returns a { link comparator } which compare { link bytestring } -s lexicographically a sequence of unsigned byte i e <END>
<BEG> encodes { code text } into a sequence of utf-8 byte and return the result a a { code bytestring } <END>
<BEG> copies bytes into a buffer <END>
<BEG> copies bytes to a { code byte [ ] } <END>
<BEG> constructs a new { code string } by decode the byte use the specify charset <END>
<BEG> constructs a new { code string } by decode the byte a utf-8 <END>
<BEG> return the cached hash code if available <END>
<BEG> checks that the give index fall within the specified array size <END>
<BEG> checks that the give range fall within the bound of an array param startindex the start index of the range inclusive param endindex the end index of the range exclusive param size the size of the array <END>
<BEG> create a new codedinputstream wrap the give inputstream <SEG> with a specify buffer size <END>
<BEG> create a new codedinputstream wrap the give { code iterable < bytebuffer > } <END>
<BEG> only valid for { link inputstream } -backed stream <END>
<BEG> sets this { code codedinputstream } to discard unknown field <END>
<BEG> reverts the unknown field preservation behavior for proto2 and proto3 full runtime to their default <END>
<BEG> whether unknown field in this input stream should be discard during parse into full runtime message <END>
<BEG> like { link # readrawvarint32 inputstream } <SEG> but expect that the caller have already read one byte <END>
<BEG> reads a varint from the input one byte at a time <SEG> so that it do not read any byte after the end of the varint <END>
<BEG> returns the buffer size to efficiently write datalength byte to this codedoutputstream <END>
<BEG> create a new { code codedoutputstream } wrap the give { code outputstream } with a give buffer size <END>
<BEG> configures serialization to be deterministic <END>
<BEG> write a { code sint32 } field <SEG> include tag <SEG> to the stream <END>
<BEG> write an enum field <SEG> include tag <SEG> to the stream <END>
<BEG> write a single byte <END>
<BEG> write a single byte <SEG> represent by an integer value <END>
<BEG> write part of an array of byte <END>
<BEG> write a byte string <END>
<BEG> write a { code sint32 } field to the stream <END>
<BEG> write an enum field to the stream <END>
<BEG> compute the number of byte that would be need to encode an { code int32 } field <SEG> include tag <END>
<BEG> compute the number of byte that would be need to encode an embedded message field <SEG> include tag <END>
<BEG> compute the number of byte that would be need to encode a messageset extension to the stream <END>
<BEG> compute the number of byte that would be need to encode a tag <END>
<BEG> compute the number of byte that would be need to encode an enum field <END>
<BEG> compute the number of byte that would be need to encode an embedded message field <END>
<BEG> verifies that { link # spaceleft } return zero <END>
<BEG> encode and write a varint <END>
<BEG> write a little-endian 32-bit integer <END>
<BEG> wraps a give { link parser } into a new { link parser } that discard unknown field during parse <END>
<BEG> < pre > signed second of the span of time <END>
<BEG> < pre > signed fraction of a second at nanosecond resolution of the span of time <END>
<BEG> get a { code dynamicmessage } represent the default instance of the give type <END>
<BEG> parse { code data } a a message of the give type and return it <END>
<BEG> parse a message of the give type from { code input } and return it <END>
<BEG> construct a { link message builder } for the give type <END>
<BEG> construct a { link message builder } for a message of the same type a { code prototype } <SEG> and initialize it with { code prototype } 's content <END>
<BEG> returns whether or not this extension be a lite extension <END>
<BEG> if the extension be a message extension i e <SEG> getlitetype == message <SEG> return the type of the message <SEG> otherwise undefined <END>
<BEG> get the unmodifiable singleton empty instance <END>
<BEG> returns an unmodifiable view of the registry <END>
<BEG> find an extension for immutable apis by fully-qualified field name <SEG> in the proto namespace <END>
<BEG> find all extension for mutable apis by fully-qualified name of extended class <END>
<BEG> add an extension from a generate file to the registry <END>
<BEG> get the unmodifiable singleton empty instance of either extensionregistrylite or { code extensionregistry } if the full non-lite proto library be available <END>
<BEG> add an extension from a lite generate file to the registry <END>
<BEG> < pre > whether to use alternative packed wire representation <END>
<BEG> < pre > the field json name <END>
<BEG> < pre > the string value of the default value of this field <END>
<BEG> < pre > the set of field mask path <END>
<BEG> a reliable unique identifier for this type <END>
<BEG> indicates whether a list field should be represent on the wire in packed form <END>
<BEG> indicates whether this field type represent a primitive scalar value <END>
<BEG> indicates whether this field type represent a scalar value <END>
<BEG> indicates whether this field represent a map <END>
<BEG> indicates whether or not this { link fieldtype } can be apply to the give { link field } <END>
<BEG> looks up the appropriate { link fieldtype } by it 's identifier <END>
<BEG> returns a collection of all the field in this message which be set and their corresponding value <END>
<BEG> obtains the value of the give field <SEG> or the default value if it be not set <END>
<BEG> used by parse constructor in generated class <END>
<BEG> replaces this object in the output stream with a serialized form <END>
<BEG> merge some unknown field into the { link unknownfieldsetlite } for this message <END>
<BEG> calls invoke and throw a runtimeexception if it fail <END>
<BEG> throws an appropriate { link nullpointerexception } if the give object be { code null } <END>
<BEG> helper call by generated code to construct default value for string field <END>
<BEG> helper method to get the utf-8 byte of a string <END>
<BEG> helper method to convert a byte array to a string use utf-8 encoding <END>
<BEG> helper method for implement { link message # hashcode } for enum list <END>
<BEG> helper method for implement { link message # equal object } for byte field <END>
<BEG> helper method for continuously hash byte <END>
<BEG> helper method to merge two messagelite instance <END>
<BEG> attaches an unfinished message to the exception to support best-effort parsing in { code parser } interface <END>
<BEG> returns the unfinished message attach to the exception <SEG> or null if no message be attach <END>
<BEG> unwraps the underlie { link ioexception } if this exception be cause by an i o problem <END>
<BEG> the default default value for field of this type <SEG> if it 's a primitive type <END>
<BEG> gets the required type for a field that would hold a value of this type <END>
<BEG> indicates whether or not this { link javatype } can be apply to a field of the give type <END>
<BEG> determines whether this lazyfieldlite instance represent the default instance of this type <END>
<BEG> overrides the content of this lazyfield <END>
<BEG> returns message instance <END>
<BEG> sets the value of the instance and return the old value without delay parse anything <END>
<BEG> merges another instance 's content <END>
<BEG> merges another instance 's content from a stream <END>
<BEG> returns a bytesstring for this field in a thread-safe way <END>
<BEG> writes this lazy field into a { link writer } <END>
<BEG> might lazily parse the byte that be previously pass in <END>
<BEG> returns the metadata only for experimental runtime <END>
<BEG> gets a mutable map view of this mapfield <END>
<BEG> gets the default instance of the message store in the list view of this map field <END>
<BEG> non-javadoc see com google protobuf mutabilityoracle # ensuremutable <END>
<BEG> returns an singleton immutable empty mapfieldlite instance <END>
<BEG> checks whether two { link map } s be equal <END>
<BEG> calculates the hash code for a { link map } <END>
<BEG> returns a { link string } representation of the { link messagelite } object <END>
<BEG> formats a text proto field <END>
<BEG> < pre > a url of the input message type <END>
<BEG> < pre > if true <SEG> the request be stream <END>
<BEG> < pre > if non-empty specifies a path under which inherit http path be root <END>
<BEG> returns the unique identifier of the oneof within the message <END>
<BEG> the { code int } field contain the field number of the currently active member <END>
<BEG> the { link object } field contain the value of the currently active member <END>
<BEG> < pre > the option 's value pack in an any message <END>
<BEG> registers the give schema for the message type only if a schema be not already register <END>
<BEG> gets the count of item in the list <END>
<BEG> gets the base class interface for the specified index <END>
<BEG> sets a message at the specified index replace the exist item at that index <END>
<BEG> gets a view of the builder a a list of message <END>
<BEG> concatenate the give string while perform various optimization to slow the growth rate of tree depth and tree node count <END>
<BEG> determines if the tree be balance accord to bap95 <SEG> which mean the tree be flat-enough with respect to the bound <END>
<BEG> requires that the give message extend { link com google protobuf generatedmessagev3 } or { link generatedmessagelite } <END>
<BEG> returns true if both be null or both be { link object # equal } <END>
<BEG> gets the base class interface for the field <END>
<BEG> sets a message for the field replace any exist value <END>
<BEG> make this map immutable from this point forward <END>
<BEG> return the number of entry in the entry array <END>
<BEG> return the array entry at the give { code index } <END>
<BEG> return an iterable over the overflow entry <END>
<BEG> gets the syntax for the message e g <END>
<BEG> indicates whether or not the message should be represent with message set wire format <END>
<BEG> an array of field number that need to be check for isinitialized <END>
<BEG> gets the information for all field within this message <SEG> sort in ascend order by their field number <END>
<BEG> helper method for create a new builder for { link messageinfo } <END>
<BEG> retrieve a list of all the location information tree for a sub message field <END>
<BEG> get a list of human-readable name of require field miss from this message <END>
<BEG> get a map of field in the set by number <END>
<BEG> check if the give field number be present in the set <END>
<BEG> serializes the set and write it to { code output } <END>
<BEG> converts the set to a string in protocol buffer text format <END>
<BEG> serializes the set and write it to { code output } use { code messageset } wire format <END>
<BEG> get the number of byte require to encode this set use { code messageset } wire format <END>
<BEG> parse an { code unknownfieldset } from the give input stream <END>
<BEG> parse { code data } a an { code unknownfieldset } and return it <END>
<BEG> parse an { code unknownfieldset } from { code input } and return it <END>
<BEG> an unsafe operation that return a { link bytestring } that be back by the provide buffer <END>
<BEG> an unsafe operation that return a { link bytestring } that be back by a subregion of the provide buffer <END>
<BEG> writes the give { link bytestring } to the provide { link byteoutput } <END>
<BEG> gets the { code sun misc unsafe } instance <SEG> or { code null } if not available on this platform <END>
<BEG> returns the low { code index } such that { code 0 < = index < length } and { code leave [ leftoff + index ] ! = right [ rightoff + index ] } <END>
<BEG> return char or -1 for eof <END>
<BEG> map give object to a target type <END>
<BEG> initialize fst log with a { link log } bind <END>
<BEG> enables read raw byte from socket return <END>
<BEG> return number of byte free for an add operation <END>
<BEG> read up to destlen byte if available <END>
<BEG> convenience method to read len byte array <END>
<BEG> read an int <END>
<BEG> 'unread ' len byte param len <END>
<BEG> return size of underlie ringbuffer <END>
<BEG> return the start index inside the byte array return by asbytearray <SEG> not support by mallocbytez <END>
<BEG> return the length inside the byte array return by asbytearray <SEG> not support by mallocbytez <END>
<BEG> return offset to byte array including native bytearray header <END>
<BEG> remove the key from the binary map param key <END>
<BEG> call upon add <SEG> allow to reserve extra space for late growth per entry param lengthofentry return <END>
<BEG> warning : concurrent modification e g <END>
<BEG> default be to let 100 % room for late entry growth <END>
<BEG> accessor to the element param i return <END>
<BEG> length of this struct array return <END>
<BEG> return a volatile warpper object to the ' 0 ' element of the structs array <END>
<BEG> only avaiable at top level param currentindex <END>
<BEG> modify content of this structstring <END>
<BEG> len < 127 ! ! ! ! ! <END>
<BEG> reads a 4 byte float <END>
<BEG> write prim array no len no tag param array throw ioexception <END>
<BEG> do not write length <SEG> just plain byte param array param length throw java io ioexception <END>
<BEG> close and flush to underlie stream if present <END>
<BEG> if output stream be null <SEG> just encode into a byte array param outstream <END>
<BEG> writes current buffer to underlie output and reset buffer <END>
<BEG> use to write uncompressed int guarantee length = 4 at a eventually recent position param position param v <END>
<BEG> access nest data <END>
<BEG> return true if fst can skip a search for same instance in the serialized objectgraph <END>
<BEG> sideeffecting : if no ser be find <SEG> next lookup will return null immediate return <END>
<BEG> returns the lineage of the specified class order by specificity the class itself be at position 0 since it be most specific in it lineage <END>
<BEG> add an object to the register <SEG> return handle if already present <END>
<BEG> extract base type includin unsignend flag exclude array flag param type return <END>
<BEG> will throw an fstbuffertoosmallexception if buffer be too small <END>
<BEG> throw fstbuffertoosmallexception in case object do not fit into give range param o param address param availablesize throw ioexception return number of byte write to the memory region <END>
<BEG> throw fstbuffertoosmallexcpetion in case object do not fit into give range zero copy method param o param availablesize throw java io ioexception return number of byte write to the memory region <END>
<BEG> only work if no flush have be trigger aka only write one object per stream instance param out throw ioexception <END>
<BEG> gets the number of byte remain after the current position in this stream <END>
<BEG> sets the specified 32-bit float at the specified absolute { code index } in this buffer <END>
<BEG> wrap the visible portion of a { link java nio bytebuffer } <END>
<BEG> does the slice contain only 7-bit ascii character <END>
<BEG> counts the code point within utf-8 encode slice up to { code length } <END>
<BEG> reverses the slice code point by code point <END>
<BEG> compares to utf-8 sequence use utf-16 big endian semantics <END>
<BEG> converts slice to upper case code point by code point <END>
<BEG> removes all white space character from the left side of the string <END>
<BEG> removes all white { code whitespacecodepoints } from the right side of the string <END>
<BEG> removes all white { code whitespacecodepoints } from the left and right side of the string <END>
<BEG> starting from { code position } bytes in { code utf8 } <SEG> find the index of the first byte of the code point { code codepointcount } in the slice <END>
<BEG> gets the utf-8 sequence length of the code point at { code position } <END>
<BEG> gets the utf-8 sequence length of the code point <END>
<BEG> gets the utf-8 sequence length use the sequence start byte <END>
<BEG> creates a slice for directly a raw memory address <END>
<BEG> create an instance of { link jaxbcfghibernateconfiguration jaxbcfgsecurity } <END>
<BEG> author steve ebersole <END>
<BEG> jaxb marshalling for the executeupdateresultcheckstyle enum author steve ebersole <END>
<BEG> filter element ; use to apply a filter <END>
<BEG> start buffer event param eventlimit the maximum number of event to buffer <END>
<BEG> obtain the root jaxb bound object return the jaxb root object <END>
<BEG> obtain the metadata about the document 's origin return the origin <END>
<BEG> return identifier generator strategy <END>
<BEG> return generator configuration parameter <END>
<BEG> for jpa standard we typically need the unqualified name <END>
<BEG> the corresponding { code hbm xml } element name <END>
<BEG> can this source <SEG> by nature <SEG> define just a single column formula ? <END>
<BEG> how many part be there to this path role ? <END>
<BEG> access to the end path part <END>
<BEG> access to the full path a a string return the full path a a string <END>
<BEG> does this part represent a root <END>
<BEG> look for entity annotation <END>
<BEG> look for onetomany <SEG> manytomany and elementcollection annotation <END>
<BEG> constructs a fastclass param type the class to optimize return the fast class access to the give class <END>
<BEG> locate the index of a constructor param parametertypes the constructor parameter type return the index <END>
<BEG> reads class byte array info from the give input stream <END>
<BEG> read class definition a zip jar file entry <END>
<BEG> does this handler support bind variable i e <SEG> prepared statement parameter for it limit offset ? <END>
<BEG> ansi sql define the limit clause to be in the form limit offset <SEG> limit <END>
<BEG> does the < tt > limit < tt > clause come at the start of the < tt > select < tt > statement <SEG> rather than at the end ? <END>
<BEG> does the < tt > limit < tt > clause take a maximum row number instead of a total number of returned row ? <END>
<BEG> generally <SEG> if there be no limit apply to a hibernate query we do not apply any limit to the sql query <END>
<BEG> hibernate apis explicitly state that setfirstresult should be a zero-based offset <END>
<BEG> is a max row limit indicate ? <END>
<BEG> add a limit clause to the give sql select hhh-2655 : row_number for paging the limit sql will look like : < pre > with query as select inner_query <END>
<BEG> adds miss alias in provided select clause and return coma-separated list of them <END>
<BEG> adds { code top } expression <END>
<BEG> rdms do not support cascade deletes <END>
<BEG> resolves the strategy by name <SEG> in a case insensitive manner <END>
<BEG> asa do not require to drop constraint before drop table <SEG> so disable it <END>
<BEG> generates a blobimpl use byte data <END>
<BEG> generates a blobimpl proxy use a give number of byte from an inputstream <END>
<BEG> generates a { link clob } proxy use the string data <END>
<BEG> generates a { link clob } proxy use a character reader of give length <END>
<BEG> determines the appropriate class loader to which the generated proxy should be scoped <END>
<BEG> resolve the column name alias to it index param columnname the name alias of the column param rs the resultset return the index throw sqlexception indicates a problem access the underlie jdbc resultset <END>
<BEG> create the basic contextual blob reference <END>
<BEG> retrieve all keywords define by ansi sql:2003 return ansi sql:2003 keywords <END>
<BEG> generates a { link java sql clob } proxy use the string data <END>
<BEG> generates a serializableblob proxy wrap the provide blob object <END>
<BEG> the release mode under which this logical connection be operate <END>
<BEG> copy the inputstream to the outputstream use a buffer of the specified size param inputstream the input stream to read param outputstream the output stream to write to param buffersize the size of the buffer to use for read return the number of byte read throw ioexception if a problem occur access either stream <END>
<BEG> returns the name of the property represent the collection from the { link # getownerentityname } <END>
<BEG> retrieve the alias of the owner of this fetch association <END>
<BEG> lazily construct the queryspaces affect by the action in the list <END>
<BEG> set the read-only modifiable mode for entity and proxy load by the query <END>
<BEG> legacy-style entity-mode name parsing <END>
<BEG> extracts the constraint name base on a template i e <SEG> < i > templatestart < i > < b > constraintname < b > < i > templateend < i > <END>
<BEG> checks to see if { code this } flush mode be less than the give flush mode <END>
<BEG> custom algorithm use to generate an int from a series of byte <END>
<BEG> interpret a short a it binary form param shortvalue the short to interpret to binary return the binary <END>
<BEG> interpret a long a it binary form param longvalue the long to interpret to binary param dest the destination array <END>
<BEG> interpret the binary representation of a long <END>
<BEG> calculate the array hash only the first level <END>
<BEG> build a properly size map <SEG> especially handle load size and load factor to prevent immediate resizing <END>
<BEG> removes any stale entry whose key have be finalize <END>
<BEG> return a new instance of this class <SEG> with iteration order define a the order in which entry be add param size the size of the map to create return the map <END>
<BEG> return the map entry a instance of < tt > map entry < tt > in a collection that be safe from concurrent modification <END>
<BEG> renders an entity to a string <END>
<BEG> for the give sqlexception <SEG> locate the vendor-specific error code <END>
<BEG> for the give sqlexception <SEG> locate the x open-compliant sqlstate 's class code <END>
<BEG> returns the small power of two number that be great than or equal to { code value } <END>
<BEG> operates like sql coalesce expression <SEG> except empty string be treat a null <END>
<BEG> find the first non-null value supply by the give supplier <END>
<BEG> accepts a { link workexecutor } visitor for execute the discrete work encapsulate by this work instance use the supplied connection <END>
<BEG> execute the discrete work encapsulate by a { link work } instance use the supplied connection <END>
<BEG> gets the child of the specify element have the specify unique name <END>
<BEG> returns the same a integer tostring i + ' _ ' strings might be return from a pool of constant <SEG> when i be within the range of expect most commonly request element <END>
<BEG> returns a string contain the specified number of indentation <SEG> where each indentation contain { link # indentation } blank character <END>
<BEG> check if this lock mode be more restrictive than the give lock mode <END>
<BEG> retrieve the overall lock mode in effect for this set of option <END>
<BEG> specify the { link lockmode } to be use for a specific query alias <END>
<BEG> get the { link lockmode } explicitly specify for the give alias via { link # setaliasspecificlockmode } < p > differs from { link # geteffectivelockmode } in that here we only return explicitly specify alias-specific lock mode <END>
<BEG> determine the { link lockmode } to apply to the give alias <END>
<BEG> does this lockoptions object define alias-specific lock mode ? <END>
<BEG> iterator for access alias key and lockmode value a map entry <END>
<BEG> currently need for follow-on locking <END>
<BEG> retrieve the current timeout setting <END>
<BEG> set the timeout setting <END>
<BEG> retrieve the current lock scope set <END>
<BEG> set the the follow-on-locking setting <END>
<BEG> interprets a string representation of a nullprecedence <SEG> return { code null } by default <END>
<BEG> determine the appropriate runtime result type for a numeric expression accord to section 6 5 7 1 result types of expressions of the jpa spec <END>
<BEG> determine the appropriate { link valuehandlerfactory valuehandler } strategy for convert a value to the give target type param targettype the target type to which we want to convert value <END>
<BEG> get the corresponding jdbc scroll type code constant value <END>
<BEG> get the domain name to be use in register the management bean <END>
<BEG> allows the service to specify a special 'servicetype ' portion of the object name <END>
<BEG> the management bean mbean for this service <END>
<BEG> param value an sql literal <SEG> null <SEG> or not_null return { code this } <SEG> for method chaining <END>
<BEG> query execute to the db <END>
<BEG> max time in m take by the execution of this query onto the db <END>
<BEG> queries retrieve successfully from the cache <END>
<BEG> number of line return by all the execution of this query from db for now <SEG> { link org hibernate query # iterate } and { link org hibernate query # scroll } do not fill this statistic return the number of row cumulatively return by the give query ; iterate and scroll query do not effect this total a their number of returned row be not know at execution time <END>
<BEG> query plan successfully fetch from the cache <END>
<BEG> query plan overall compile total <END>
<BEG> add plan statistic report of a db query param microsecond time take <END>
<BEG> this method be inherently racy and expensive <END>
<BEG> similar semantics a you 'd get by invoke { link java util concurrent concurrentmap # computeifabsent object <SEG> function } <SEG> but we check for the key existence first <END>
<BEG> the number of query plan successfully fetch from the cache <END>
<BEG> the overall time spend to compile the plan for this particular query <END>
<BEG> callback indicate a get from the query plan cache result in a hit <END>
<BEG> provides the basic noop impls of the { link resulttransformer } contract <END>
<BEG> untransforms <SEG> if necessary <SEG> a list of value previously transform by this or an equivalent cacheableresulttransformer <END>
<BEG> uniquely distinct each tuple row here <END>
<BEG> obtain the wrapperoptions for this context <END>
<BEG> accessor for an object from the cache param oid the identity return the cacheable object <END>
<BEG> method to put an object in the l2 cache param oid the identity param pc cacheable form of the pc return previous value store for this id <END>
<BEG> accessor for the type of the category return an index number to the category <END>
<BEG> convenience accessor for the discriminator strategy apply to this class <END>
<BEG> accessor for fetch group metadata for the specify group if present <END>
<BEG> accessor for the fetch group metadata for the group specify <END>
<BEG> populate the metadata param clr the classloaderresolver <END>
<BEG> accessor for the field in the value that store the key return field in the value that store the key <END>
<BEG> add a new columnmetadata element param colmd the column metadata <END>
<BEG> mutator for the embedded metadata param embeddedmetadata the embeddedmetadata to set <END>
<BEG> mutator for the foreign key metadata param foreignkeymetadata the foreignkeymetadata to set <END>
<BEG> accessor for an attribute out of the attribute for an element <END>
<BEG> accessor for the body text metadata <END>
<BEG> method to remove the current metadata component from the stack <END>
<BEG> method to add a metadata component to the stack <END>
<BEG> accessor for the null-value tag return null-value tag <END>
<BEG> acessor for the columns return returns the columnmetadata <END>
<BEG> add a new columnmetadata element param colmd the columnmetadata to add <END>
<BEG> returns a string representation of the object use a prefix param prefix prefix string param indent indent string return a string representation of the object <END>
<BEG> accessor for the parent field name return parent field name <END>
<BEG> accessor for value <END>
<BEG> accessor for indexed value <END>
<BEG> method to initialise the object <SEG> create all internal convenience array <END>
<BEG> method to add a field to the embed definition <END>
<BEG> add a new fetchgroupmetadata param fgmd the fetch group <END>
<BEG> whether this use getter setter accessors property or use field base access field return true if this be a property <END>
<BEG> mutator for the filename for this metadata file <END>
<BEG> method to initialise the object <SEG> set up all internal array <END>
<BEG> accessor for the name of the table return returns the table <END>
<BEG> accessor for the column return column <END>
<BEG> accessor for whether the index be unique return returns whether the index be unique <END>
<BEG> method to provide the detail of the class be represent by this metadata <END>
<BEG> initialisation method to define the persistence-unit be handle <END>
<BEG> accessor for the persistence unit in this persistence xml file <END>
<BEG> method to add a persistence unit param pumd the persistenceunitmetadata to add <END>
<BEG> accessor for the persistence unit transaction type return transaction type for the persistence unit <END>
<BEG> accessor for the persistence unit description <END>
<BEG> mutator for the unit description param desc the description <END>
<BEG> accessor for the persistence unit jta data source <END>
<BEG> method to add a class name to the persistence unit <END>
<BEG> accessor for the class names for this persistence unit <END>
<BEG> populate the metadata <END>
<BEG> acessor for the parent of this configurationelement return can return null if there be no parent <SEG> or the parent be the extension <END>
<BEG> acessor for all child of this configurationelement return the configurationelement declare nest in this element <END>
<BEG> acessor for the attribute value by a give name param name the attribute name return null if the attribute can not be find <END>
<BEG> acessor for all attribute name declare in this element return the attribute name <END>
<BEG> setter to the text param text the text <END>
<BEG> accessor to the text return the text <END>
<BEG> accesstor to the { link extension } return the { link extension } <END>
<BEG> accessor for the plug-in that declare this extension return the plug-in <END>
<BEG> add a new child configurationelement declare nest in the extension xml element param element the configurationelement <END>
<BEG> accessor for the id of this extensionpoint return the id relative id <END>
<BEG> accessor for the pluginid + dot + id <END>
<BEG> accessor to the url that point to the schema xsd file return the schema url <END>
<BEG> acessor for the version of this plug-in return version <END>
<BEG> acessor for the location of the plugin xml file return the plugin xml location <END>
<BEG> method to add an field name to the list since it be be process param field the field to add <END>
<BEG> method to remove the late field name from the list since it be now process <END>
<BEG> parse a pattern expression return the parsed expression <END>
<BEG> logical complement return the result value be false if operand be true ; otherwise <SEG> the result be true <END>
<BEG> returns copy of the request oid to be access by the user <END>
<BEG> provides the oid in a form that can be use by the database a a key <END>
<BEG> accessor for the hashcode return hashcode for this object <END>
<BEG> accessor for the pc class name return the pc class <END>
<BEG> factory method for oid instance param classname the pc class name param value the id value return an oid instance <END>
<BEG> param obj the object to compare against see java lang object # equal object return boolean the result of the comparation <END>
<BEG> accessor for whether there be more element remain in the block <END>
<BEG> method to append a block onto this block <END>
<BEG> the number of expression in the result return the number of expression return by the associated query <END>
<BEG> returns the java class of the expression reference by the give index that be return by the associated query <END>
<BEG> non-javadoc see java sql blob # length <END>
<BEG> non-javadoc see java sql blob # position byte [ ] <SEG> long <END>
<BEG> method to return whether the pass jdbc-type be a valid jdbc type for use in jpox <END>
<BEG> accessor for a string name of a jdbc type param jdbctype the jdbc type return the name <END>
<BEG> accessor for a string name of a jdbc isolation level param isolation the isolation level return the name <END>
<BEG> convenience method to convert the supplied isolation level name into the associate jdbc connection type number <END>
<BEG> utility to return an identifier name without any lead trailing quote character <END>
<BEG> method to return the subprotocol for a jdbc url <END>
<BEG> mutator for the column spec <SEG> to add change a column <END>
<BEG> set the datastore field for the specified position < code > seq < code > param seq the specify position param col the datastore field param refcol the foreign refer datastore field <END>
<BEG> equality operator param obj the object to compare against return whether they be equal <END>
<BEG> parse command line argments <END>
<BEG> return option argument <END>
<BEG> convert a string base locale into a locale object language_country_variant examples : en <SEG> de_de <SEG> _gb <SEG> en_us_win <SEG> de__posix <SEG> fr_mac param localestring return the locale <END>
<BEG> check if the current version be great or equal than the argument version <END>
<BEG> check if the current version be equal than the argument version <END>
<BEG> log a warning message with throwable <END>
<BEG> message formatter with one argument pass in that will be embed in an internationalised message <END>
<BEG> add a key <SEG> and it value <SEG> to the map <END>
<BEG> removes a specific value from map <END>
<BEG> creates a new instance of the map value collection container <END>
<BEG> release a read or write lock <END>
<BEG> accessor for whether the map contain the specified key param obj the key return whether the key exists <END>
<BEG> accessor for whether the map contain the specified value <END>
<BEG> formats the give bigdecimal value into a sql floating-point literal <END>
<BEG> convert an instance of our value class into a boolean [ ] <END>
<BEG> convert a boolean [ ] into an instance of our value class <END>
<BEG> utility to convert an int into a byte-generated string param val the int return the string form of the byte <END>
<BEG> utility to convert an int into a 8-char hex string param val the int return the hex string form of the int <END>
<BEG> utility to convert a byte array to an int <END>
<BEG> converts a string in jdbc timestamp escape format to a timestamp object <END>
<BEG> since 3 2 2 <END>
<BEG> get a mapper interface type that specify provider <END>
<BEG> get a mapper method that specify provider <END>
<BEG> get a database id that provide from { link org apache ibatis map databaseidprovider } <END>
<BEG> invalidates the connection <END>
<BEG> getter for the real connection that this wrap <END>
<BEG> getter for the proxy for the connection <END>
<BEG> gets the hashcode of the real connection or 0 if it be null <END>
<BEG> getter for the connection type base on url + user + password <END>
<BEG> getter for the time that the connection be create <END>
<BEG> getter for the time that the connection be last used <END>
<BEG> getter for the time that this connection have be check out <END>
<BEG> required for invocationhandler implementation <END>
<BEG> the maximum number of active connection <END>
<BEG> the maximum time a connection can be use before it may be give away again <END>
<BEG> the time to wait before retry to get a connection <END>
<BEG> the query to be use to check a connection <END>
<BEG> determines if the ping query should be use <END>
<BEG> if a connection have not be use in this many millisecond <SEG> ping the database to make sure the connection be still good <END>
<BEG> method to check to see if a connection be still usable param conn - the connection to check return true if the connection be still usable <END>
<BEG> unwraps a pooled connection to get to the 'real ' connection param conn - the pooled connection to unwrap return the 'real ' connection <END>
<BEG> returns the batchupdateexception that cause the nested executor to fail <END>
<BEG> returns the statement id of the statement that cause the failure <END>
<BEG> second run <END>
<BEG> gets the type handler to use when read the result set <END>
<BEG> apply a transaction timeout <END>
<BEG> try to get a resource from a group of classloaders param resource - the resource to get param classloader - the classloaders to examine return the resource or null <END>
<BEG> attempt to load a class from a group of classloaders param name - the class to load param classloader - the group of classloaders to examine return the class throw classnotfoundexception - remember the wisdom of judge smails : well <SEG> the world need ditch digger <SEG> too <END>
<BEG> list the name of the entry in the give { link jarinputstream } that begin with the specify { code path } <END>
<BEG> attempts to deconstruct the give url to find a jar file contain the resource reference by the url <END>
<BEG> converts a java package name to a path that can be look up with a call to { link classloader # getresources string } <END>
<BEG> returns true if the resource locate at the give url be a jar file <END>
<BEG> find all the class and method that be require to access the jboss 6 vfs <END>
<BEG> verifies that the return type of a method be what it be expect to be <END>
<BEG> mark this { link vfs } a invalid for the current environment <END>
<BEG> returns the classloader that will be use for scan for class <END>
<BEG> attempts to discover class that be assignable to the type provide <END>
<BEG> attempts to discover class that be annotate with the annotation <END>
<BEG> set the fetch first row variable string e g <END>
<BEG> set the offset row variable string e g <END>
<BEG> use to add a new insert row while do multi-row insert <END>
<BEG> since 3 1 1 <END>
<BEG> executes a select statement that return one row <END>
<BEG> executes an insert statement <END>
<BEG> executes a delete statement <END>
<BEG> executes any string a a jdbc statement <END>
<BEG> used for handle output of callable statement <END>
<BEG> used in the unknowntypehandler in case there be no handler for the property type <END>
<BEG> used when set parameter to the preparedstatement <END>
<BEG> not use return <END>
<BEG> compares two object <END>
<BEG> if the { code obj } be an array <SEG> tostring method of { link arrays } be call <END>
<BEG> returns parameter name reference by sql provider <END>
<BEG> < p > a single non-special parameter be return without a name <END>
<BEG> checks whether can control member accessible <END>
<BEG> gets the type for a property setter <END>
<BEG> gets an array of the readable property for an object <END>
<BEG> check to see if a class have a writable property by name <END>
<BEG> return the field type a { link type } <END>
<BEG> return the return type of the method a { link type } <END>
<BEG> return the parameter type of the method a an array of { link type } s if they have type parameter in the declaration <SEG> < br > they will be resolve to the actual runtime { link type } s <END>
<BEG> set a default { link typehandler } class for { link enum } <END>
<BEG> parses all the unprocessed statement node in the cache <END>
<BEG> extracts namespace from fully qualify statement id <END>
<BEG> deprecate since 3 5 0 - see http : github com mybatis mybatis-3 issue 1203 <END>
<BEG> tells u if the class pass in be a known common type param clazz the class to check return true if the class be know <END>
<BEG> initialize the various dao configuration after the various setter have be call <END>
<BEG> special call mostly use in test to clear the internal object cache so we can reset state <END>
<BEG> returns the table configuration information associate with the dao 's class or null if none <END>
<BEG> used by internal class to get the table information structure for the dao 's class <END>
<BEG> used if you want to configure the class for the dao by hand or with spring instead of use the { link databasefield } annotation in the class <END>
<BEG> helper method to create a dao object without have to define a class <END>
<BEG> helper method to create a dao object use by some internal method that already have the { link tableinfo } <END>
<BEG> note : package perm to remove synthetic accessor <END>
<BEG> add the collection of element to this collection <END>
<BEG> uses the iterator to run through the dao and retain only the item that be in the pass in collection <END>
<BEG> helper method to lookup a dao if it have already be associate with the class <END>
<BEG> register the dao with the cache <END>
<BEG> same a { link # registerdao connectionsource <SEG> dao } but this allow you to register it just with it { link databasetableconfig } <END>
<BEG> this add database table configuration to the internal cache which can be use to speed up dao construction <END>
<BEG> this be just a call to the equal method of the internal result list <END>
<BEG> the iterator return from a lazy collection keep a connection open to the database a it iterate across the collection <END>
<BEG> run through the map and remove any reference that have be null 'd out by the gc <END>
<BEG> see databasefield # columnname <END>
<BEG> for a foreign class which do not use the { link databasefield } annotation <SEG> you need to inject the table configuration <END>
<BEG> we need to do this because otherwise thing that inject the default max-foreign-auto-refresh value config file <SEG> android annotation hack <SEG> etc might turn on the auto-refresh by accident <END>
<BEG> foreign collection field configuration <END>
<BEG> process the setting when we be go to consume them <END>
<BEG> print the config to the writer <END>
<BEG> register a data type with the manager <END>
<BEG> because we go recursive in a lot of situation if we construct daos inside of the fieldtype constructor <SEG> we have to do this 2nd pas initialization so we can well use the dao cache <END>
<BEG> assign an id value to this field <END>
<BEG> extract a field from an object and convert to something suitable to be pass to sql a an argument <END>
<BEG> limitation here <END>
<BEG> convert a string value into the appropriate java field value <END>
<BEG> move the sql value to the next one for version processing <END>
<BEG> return the id of the associate foreign object or null if none <END>
<BEG> get the result object from the result <END>
<BEG> return the value of field in the data argument if it be not the default value for the class <END>
<BEG> return whether or not the data object have a default value pass for this field of this type <END>
<BEG> pass the foreign data argument to the foreign { link dao # create object } method <END>
<BEG> throw sqlexception if there be problem create the config object <END>
<BEG> move the current-value to the next value <END>
<BEG> reopen the associated static logging stream <END>
<BEG> read in our level from our configuration file <END>
<BEG> log a trace message with a throwable <END>
<BEG> return a logger associate with a particular class name <END>
<BEG> return the single class name from a class-name string <END>
<BEG> a call through to the { link dao # create object } <END>
<BEG> close the closeable if not null and ignore any exception <END>
<BEG> close it and ignore any exception <END>
<BEG> convenience method to allow a cause <END>
<BEG> verifies that the ormlite-core and -jdbc version file hold the same string <END>
<BEG> if we have a foreign collection object then this set the value on the foreign object in the class <END>
<BEG> return the array of field object pull from the data object <END>
<BEG> create an object in the database <END>
<BEG> query for an object in the database which match the id argument <END>
<BEG> same a { link # selectcolumns string } except the column be specify a an iterable -- probably will be a { link collection } <END>
<BEG> add raw column or aggregate function count <SEG> max <SEG> to the query <END>
<BEG> add group by clause to the sql query statement <END>
<BEG> add a raw sql group by clause to the sql query statement <END>
<BEG> add raw sql order by clause to the sql query statement <END>
<BEG> limit the output to maxrows maximum number of row <END>
<BEG> set the field that we be count from the database <END>
<BEG> add raw sql having clause to the sql query statement <END>
<BEG> join with another query builder <END>
<BEG> like { link # join querybuilder } but allow you to specify the join type and the operation use to combine the where statement <END>
<BEG> like { link # join querybuilder } but this combine the where statement of two query builder with a sql or <END>
<BEG> similar to { link # join querybuilder } but it will use left join instead <END>
<BEG> a short cut to { link dao # queryraw string <SEG> string } and { link genericrawresults # getfirstresult } <END>
<BEG> returns the count of the number of row in the table <END>
<BEG> returns the count of the number of row that match a field so you can do { code qb countof distinct fieldname } <END>
<BEG> returns whether or not there be any remain object in the table <END>
<BEG> removes the last object return by next by call delete on the dao associate with the object <END>
<BEG> creates and return a new { link where } object for this querybulder that can be use to add where clause to the sql statement <END>
<BEG> set the { link where } object on the query <END>
<BEG> prepare our statement for the subclass <END>
<BEG> build and return a string version of the query <END>
<BEG> build and return all of the information about the prepared statement <END>
<BEG> clear out all of the statement setting so we can reuse the builder <END>
<BEG> internal method to build a query while track various argument <END>
<BEG> append the where part of the statement to the stringbuilder <END>
<BEG> return true if we need to prepend table-name to columns <END>
<BEG> verify the columnname be valid and return it fieldtype <END>
<BEG> return the object associate with the id or null if none <END>
<BEG> return the first object that match the { link preparedstmt } or null if none <END>
<BEG> return a long value which be the number of row in the table <END>
<BEG> return a long value from a prepared query <END>
<BEG> return a long from a raw query with string [ ] argument <END>
<BEG> return a row mapper suitable for map 'select ' query <END>
<BEG> return a raw row mapper suitable for use with { link dao # queryraw string <SEG> rawrowmapper <SEG> string } <END>
<BEG> update an object in the database to change it id to the newid parameter <END>
<BEG> update row in the database <END>
<BEG> does a query for the object 's id and copy in each of the field value from the database to refresh the data parameter <END>
<BEG> delete an object from the database by id <END>
<BEG> delete row that match the prepared statement <END>
<BEG> when you be build the expression for { link # updatecolumnexpression string <SEG> string } <SEG> you may need to escape column name since they may be reserve word to the database <END>
<BEG> and operation which take 2 or more argument and and 's them together <END>
<BEG> this method need to be use carefully <END>
<BEG> add a between clause so the column must be between the low and high parameter <END>
<BEG> add a '= ' clause so the column must be equal to the value <END>
<BEG> add a ' & gt ; = ' clause so the column must be greater-than or equals-to the value <END>
<BEG> same a { link # in string <SEG> iterable } except with a not in clause <END>
<BEG> add a exists clause with a sub-query inside of parenthesis <END>
<BEG> add a 'is not null ' clause so the column must not be null <END>
<BEG> add a like clause so the column must mach the value use ' % ' pattern <END>
<BEG> add a ' & lt ; & gt ; ' clause so the column must be not-equal-to the value <END>
<BEG> used to not the argument clause specify <END>
<BEG> or operation which take 2 argument and or 's them together <END>
<BEG> add a clause where the id be equal to the argument <END>
<BEG> add a clause where the id be from an exist object <END>
<BEG> make a comparison where the operator be specify by the caller <END>
<BEG> a short-cut for call { link querybuilder # prepare } <END>
<BEG> reset the where object so it can be re-used <END>
<BEG> returns the associated sql where statement <END>
<BEG> used by the internal class to add the where sql to the { link stringbuilder } <END>
<BEG> save this connection a our special connection to be return by the { link # getsavedconnection } method <END>
<BEG> return true if the two connection seem to one one connection under the cover <END>
<BEG> initialize the class if this be be call with spring <END>
<BEG> extract the databasetableconfig for a particular class by look for class and field annotation <END>
<BEG> extract and return the table name for a class <END>
<BEG> load in a number of database configuration entry from a buffer reader <END>
<BEG> load a table configuration in from a text-file reader <END>
<BEG> write the table configuration to a buffered writer <END>
<BEG> return the name of the table associate with the object <END>
<BEG> return true if we can update this object via it id <END>
<BEG> return an array with the field that be { link foreigncollection } s or a blank array if none <END>
<BEG> return true if this table information have a field with this columnname a set by { link databasefield # columnname } or the field name if not set <END>
<BEG> issue the database statement to create the table associate with a class <END>
<BEG> issue the database statement to create the table associate with a table configuration <END>
<BEG> create a table if it do not already exist <END>
<BEG> return an ordered collection of sql statement that need to be run to create a table <END>
<BEG> clear all data out of the table <END>
<BEG> non-javadoc see aqute bnd service repositoryplugin downloadlistener # progress java io <END>
<BEG> non-javadoc see bndtools editor model ibndmodel # setrunproperties java util map <END>
<BEG> non-javadoc see bndtools editor model ibndmodel # getrunvmargs <END>
<BEG> construct a new formatter with no default value <SEG> i e <END>
<BEG> construct a new formatter with the specify default value <END>
<BEG> return an array of ees that this ee implicitly offer <SEG> through backwards compatibility <END>
<BEG> this method attempt to find the baseline jar for the current project <END>
<BEG> add some extra stuff to the build method like export <END>
<BEG> called when we start to build a builder <END>
<BEG> return the near workspace <END>
<BEG> inform any listener that we change a file create delete change <END>
<BEG> provide access to the global setting of this machine <END>
<BEG> return the repository signature digest <END>
<BEG> the macro to access the gestalt < p > { code $ gestalt ; part [ ; key [ ; value ] ] } <END>
<BEG> create a new workspace param opts param wsdir throw exception <END>
<BEG> check if the environment have generic <SEG> i e <END>
<BEG> calculate the generic signature of a class <SEG> method <SEG> field <SEG> or constructor <END>
<BEG> calculate the generic signature of a class <END>
<BEG> normalize a signature to make sure the name of the variable be always the same <END>
<BEG> param analyzer param rdef <END>
<BEG> param annotation throw exception <END>
<BEG> called to prepare <END>
<BEG> rate the method accord to the scale in 112 5 8 compendium 4 3 <SEG> ds 1 2 <SEG> also return 6 for invalid method we do n't look at return value yet due to proposal to all them for set service property <END>
<BEG> see 112 3 2 <END>
<BEG> param info param impl todo param descriptor todo param pw throw exception <END>
<BEG> prepare the reference <SEG> will check for any error <END>
<BEG> return the absolute delta <END>
<BEG> see aqute bnd service diff differ # diff aqute lib resource jar <SEG> aqute lib resource jar <END>
<BEG> merge all attribute of the give parameter with this <END>
<BEG> create a schema of a set of jar outling the package and their version <END>
<BEG> we set the last modify to 0 so this resource do not force a new jar if all other resource be up to date <END>
<BEG> the write method be call to write the resource <END>
<BEG> print the call tree in xml <END>
<BEG> create a cross reference table from source to dest <END>
<BEG> maven deploy [ -url repo ] [ -passphrase passphrase ] [ -homedir homedir ] [ -keyname keyname ] bundle param args param i throw exception <END>
<BEG> return throw ioexception throw malformedurlexception <END>
<BEG> param xp param node param d throw xpathexpressionexception <END>
<BEG> param groupid param artifactid param version param extra return throw exception <END>
<BEG> converts a repo + path to a url param base the base repo param path the path in the directory + url return a url that point to the file in the repo throw malformedurlexception <END>
<BEG> answer the property <SEG> load if need <END>
<BEG> verify that the repo have a checksum file for the give path and that this checksum match <END>
<BEG> called after the class space have be parse <END>
<BEG> the enclosingmethod attribute param cname the name of the enclose class <SEG> never null <END>
<BEG> the innerclass attribute param innerclass the name of the inner class with slash <END>
<BEG> a reference to a type from method or field <END>
<BEG> visit each class on the class path <END>
<BEG> collect contract will take a domain and find any declared contract <END>
<BEG> called before we print the manifest <END>
<BEG> find an icon with the requested size in the list of icon <END>
<BEG> convenience method to turn an inputstream into a byte array <END>
<BEG> turn this instructions into a map of file - > attrs <END>
<BEG> generate an ldap-style version filter from a version range <SEG> use a specific attribute name for the version ; for example can be use to generate a range use the { code bundle-version } attribute such a { code & bundle-version > =1 0 ! bundle-version > =2 0 } <END>
<BEG> see org eclipse jface text itextstore # replace int <SEG> int <SEG> java lang string <END>
<BEG> see org eclipse jface text itextstore # get int <SEG> int <END>
<BEG> see org eclipse jface text itextstore # getlength <END>
<BEG> moves the gap to the end of the content <END>
<BEG> returns a copy of the content of this text store <END>
<BEG> returns the start index of the gap manage by this text store <END>
<BEG> returns the internal data structure <SEG> a { link list } of { link line } s used only by { link treelinetracker # treelinetracker listlinetracker } <END>
<BEG> list the resource <END>
<BEG> delete a resource from the text file not from the cache <END>
<BEG> delete a cache entry <END>
<BEG> add a resource descriptor to the index <END>
<BEG> get the file belong to a resource descriptor <END>
<BEG> just report success to all download listener param blocker param file <END>
<BEG> returns the etag for the retrieved resource <SEG> or { code null } if the etag be not provide by the server <END>
<BEG> not do anything be perfect ok <END>
<BEG> verify if the url match one of our glob <END>
<BEG> ensure https verification be disable or match give certificate <END>
<BEG> show all command in a target <END>
<BEG> show the full help for a give command <END>
<BEG> parse a class and return a list of command name param target return <END>
<BEG> skip any whitespace <END>
<BEG> param < t > param spec return throw exception <END>
<BEG> schedule a job for execution when the dependency be do of target be do <END>
<BEG> called when the target have run by the job <END>
<BEG> report the error and warning <END>
<BEG> handy routine that can be extend by subclass so they can run inside the context <END>
<BEG> return a message object bound to this adapter <END>
<BEG> main entry throw exception <END>
<BEG> this method return an interface that can be use to get and set the property in a type safe way as well a describe any semantics of these property <END>
<BEG> read the content of a sha 1 key <END>
<BEG> standard osgi header parser <END>
<BEG> determines whether the specified stream contains gzipped data <SEG> by check for the gzip magic number <SEG> and return a stream capable of read those data <END>
<BEG> return a type parameter for this type <END>
<BEG> return the number of type parameter for this type <END>
<BEG> determines if a { code configurationpermission } object imply the specified permission <END>
<BEG> returns a new { code permissioncollection } object suitable for store { code configurationpermission } s return a new { code permissioncollection } object <END>
<BEG> checks if this deploymentadminpermission would imply the parameter permission <END>
<BEG> checks whether the give object be equal to this { code acl } instance <END>
<BEG> create a new { code acl } instance from this { code acl } with the give permission add for the give principal <END>
<BEG> create a new { code acl } instance from this { code acl } where all permission for the give principal be overwrite with the give permission <END>
<BEG> get the list of principal who have any kind of permission on this node <END>
<BEG> get the node on which the failed dmt operation be issue <END>
<BEG> get all cause of this exception <END>
<BEG> check whether this exception be mark a fatal in the session <END>
<BEG> converts the give path <SEG> give a an array of path segment <SEG> to a single uri string <END>
<BEG> get the node which be the source of the alert <END>
<BEG> get the type associate with the alert item <END>
<BEG> get the mark parameter associate with the alert item <END>
<BEG> checks whether the give object be equal to this alertpermission instance <END>
<BEG> returns the action list always { code } in the current version <END>
<BEG> returns a new permissioncollection object for store alertpermission object <END>
<BEG> returns true if the server name parameter of the give alertpermission be imply by the server name of this permission <SEG> i e <END>
<BEG> <SEG> remove it before the validity check if prefixpath & & dmturi endswith & & ! dmturi endswith \\ checkuri dmturi substring 0 <SEG> dmturi length - 1 ; else checkuri dmturi ; canonicalize uri : remove escape from non-special character stringbuffer sb = new stringbuffer dmturi ; int i = 0 ; while i < sb length { length can decrease during the loop ! <END>
<BEG> checks if this dmtpermission object & quot ; implies & quot ; the specify permission <END>
<BEG> returns true if the principal parameter of the give dmtprincipalpermission be imply by the principal of this permission <SEG> i e <END>
<BEG> split the specified uri along the path separator ' ' character and return an array of uri segment <END>
<BEG> checks whether the specify uri be valid <END>
<BEG> compares this { code eventproperties } object to another object <END>
<BEG> { prefix = name substring 0 <SEG> name length - 1 ; } else { prefix = null ; } } } returns the current action mask <END>
<BEG> return the unresolved requirement <SEG> if any <SEG> for this exception <END>
<BEG> returns the upnp error code occur by upnpdevices during invocation <END>
<BEG> returns the upnperror code occur by upnpdevices during invocation <END>
<BEG> checks if this { code useradminpermission } object & quot ; implies & quot ; the specify permission <END>
<BEG> returns the canonical string representation of the action <SEG> separate by comma <END>
<BEG> checks two { code useradminpermission } object for equality <END>
<BEG> returns a string describe this { code useradminpermission } object <END>
<BEG> checks if this { code wirepermission } object { code implies } the specified permission <END>
<BEG> returns the { code unit } object of this { code measurement } object <END>
<BEG> returns the time at which this { code measurement } object be take <END>
<BEG> returns a new { code measurement } object that be the product of this object multiply by the specify object <END>
<BEG> returns a new { code measurement } object that be the subtraction of the specify value from this object <END>
<BEG> returns whether the specified object be equal to this object <END>
<BEG> checks whether this { code unit } object be equal to the specify { code unit } object <END>
<BEG> returns a new { code unit } that be the multiplication of this { code unit } and the { code unit } specify param that the { code unit } that will be multiply with this { code unit } return a new { code unit } that be the multiplication of this { code unit } and the { code unit } specify throw runtimeexception if both { code unit } s be special see unit # isspecial <END>
<BEG> returns a new { code unit } that be the addition of this { code unit } and the { code unit } specify <END>
<BEG> returns a { code string } object represent the { code unit } return a { code string } object represent the { code unit } <END>
<BEG> returns the altitude of this position in meter <END>
<BEG> returns the ground speed of this position in meter per second <END>
<BEG> returns the track of this position in radian a a compass heading <END>
<BEG> returns the bundle which have a lifecycle change <END>
<BEG> returns the bundle that be the origin of the event <END>
<BEG> returns the cause of this exception or { code null } if no cause be specify when this exception be create <END>
<BEG> returns the exception relate to this event <END>
<BEG> match a distinguished name dn chain against a pattern <END>
<BEG> returns the filter string that generate the { code invalidsyntaxexception } object <END>
<BEG> returns a reference to the service that have a change occur in it lifecycle <END>
<BEG> used by the filter match algorithm <END>
<BEG> returns a { code version } object hold the version identifier in the specify { code string } <END>
<BEG> returns the major component of this version identifier <END>
<BEG> internal tostring behavior return the string representation of this version identifier <END>
<BEG> compares this { code version } object to another { code version } <END>
<BEG> returns the type of the left endpoint of this version range <END>
<BEG> returns whether this version range include the specified version <END>
<BEG> returns the intersection of this version range with the specify version range <END>
<BEG> returns whether this version range be empty <END>
<BEG> returns whether this version range contain only a single version <END>
<BEG> returns the filter string for this version range use the specify attribute name <END>
<BEG> constructs a condition that try to match the passed bundle 's location to the location pattern <END>
<BEG> returns the string encoding of this { code conditioninfo } in a form suitable for restore this { code conditioninfo } <END>
<BEG> returns argument of this { code conditioninfo } <END>
<BEG> set initial list of item into tracker before event begin to be receive <END>
<BEG> discontinue track the item <END>
<BEG> return the customized object for the specified item param item the item to lookup in the map return the customized object for the specified item <END>
<BEG> copy the tracked item into an array <END>
<BEG> returns the tracking count for this { code servicetracker } object <END>
<BEG> copy the tracked item and associated value into the specify map <END>
<BEG> open this { code bundletracker } and begin track bundle <END>
<BEG> default implementation of the { code bundletrackercustomizer addingbundle } method <END>
<BEG> return an array of { code bundle } s for all bundle be track by this { code bundletracker } <END>
<BEG> returns the customized object for the specify { code bundle } if the specify bundle be be track by this { code bundletracker } <END>
<BEG> return the number of bundle be track by this { code bundletracker } <END>
<BEG> returns the tracking count for this { code bundletracker } <END>
<BEG> return a { code map } with the { code bundle } s and customized object for all bundle be track by this { code bundletracker } <END>
<BEG> returns the service object for the specify { code servicereference } if the specify referenced service be be track by this { code servicetracker } <END>
<BEG> return an array of service object for all service be track by this { code servicetracker } <END>
<BEG> returns a service object for one of the service be track by this { code servicetracker } <END>
<BEG> this method must not be synchronize since it be call by tracked while tracked be synchronize <END>
<BEG> create a tabular type <END>
<BEG> create a composite type param name the name of the tabular type <END>
<BEG> extend a composite type by add new item <END>
<BEG> returns whether this log level imply the specified log level <END>
<BEG> returns the collection of promises that have be resolve with a failure <END>
<BEG> the stack trace can not be fill in <END>
<BEG> the stack trace can not be set <END>
<BEG> obtain the standard converter <END>
<BEG> create a stream with the default configure buffer <SEG> executor size <SEG> queue <SEG> queue policy and pushback policy <END>
<BEG> hook use by wrap collection to determine the position of the object be remove while iterate <END>
<BEG> utility class to escape unicode code point use various language ' syntax <END>
<BEG> count how many of each key we have ; not thread safe <END>
<BEG> prints out comment <SEG> use for token and non-terminals <END>
<BEG> a main program that exercise the parser <END>
<BEG> the method to call to exercise the parser from other java program <END>
<BEG> find the one table value <END>
<BEG> find the css value <END>
<BEG>  see org javacc jjdoc generator # text java lang string <END>
<BEG>  see org javacc jjdoc generator # documentstart <END>
<BEG>  see org javacc jjdoc generator # javacode org javacc parser javacodeproduction <END>
<BEG>  see org javacc jjdoc generator # expansionstart org javacc parser expansion <SEG> boolean <END>
<BEG> this method print the token correspond to this node recursively call the print method of it child <END>
<BEG> check option for consistency <END>
<BEG> find the node default void value <END>
<BEG> find the build node file value <END>
<BEG> find the node super class name <END>
<BEG> find the visitor exception value return the requested visitor exception value <END>
<BEG> find the output directory to place the generated < code > jj < code > file into <END>
<BEG> read the version from the comment in the specify file <END>
<BEG> a reimplementing of object hashcode to be deterministic <END>
<BEG> visits the node of the tree root at node in pre-order <END>
<BEG> returns the identifying string for the file name <SEG> give a toolname use to generate it <END>
<BEG> returns the identifying string for the file name <SEG> give a set of tool name that be use to generate it <END>
<BEG> returns true if tool name pass be one of the tool name return by gettoolnames filename <END>
<BEG> returns a list of name of the tool that have be use to generate the give file <END>
<BEG> javaccoptions : { string currentoptions = options getoptionsstring option ; if line indexof currentoptions == -1 { javaccerrors warn file getname + : generated use incompatible option <END>
<BEG> initialize all the static variable <SEG> so that there be no interference between the various state of the lexer <END>
<BEG> return to original state <END>
<BEG> generate the output file <END>
<BEG> returns { code true } iff { code point } be contain in this interval <END>
<BEG> return { code true } iff this interval completely contain the other one <END>
<BEG> returns { code true } if { code o } be an interval with the same border <END>
<BEG> creates an interval of a single character <END>
<BEG> getaction <END>
<BEG> returns thenumber of { link action } s return number of action <END>
<BEG> tests if a macro have be use <END>
<BEG> returns all unused macro <END>
<BEG> fetches the definition of the macro with the specify name <SEG> < p > the definition will either be the same a stored expand not call <SEG> or an equivalent one <SEG> that do n't contain any macro usage expand call before <END>
<BEG> expands all store macro <SEG> so that getdefinition always return a definition that do n't contain any macro usage <END>
<BEG> sets encode for input file <SEG> and check availability of encode on this jvm <END>
<BEG> sets all option back to default value <END>
<BEG> set output directory param d the directory to write output file to <END>
<BEG> getnum <END>
<BEG> isbol <END>
<BEG> getlookahead <END>
<BEG> iseof <END>
<BEG> getregexp <END>
<BEG> getline <END>
<BEG> getlookentry <END>
<BEG> checkactions <END>
<BEG> nfasize <END>
<BEG> checklookaheads <END>
<BEG> provides space for class of character from 0 to maxcharcode <END>
<BEG> returns the great unicode value of the current input character set <END>
<BEG> return a deep-copy list of all char class partions <END>
<BEG> updates the current partition <SEG> so that the specified set of character get a new character class <END>
<BEG> returns the code of the character class the specified character belongs to <END>
<BEG> creates a new character class for each character of the specify string <END>
<BEG> brings the partition into a canonical order such that object that implement the same partition but in different order become equal <END>
<BEG> computes a two-level table structure represent this charclass object <SEG> where second-level block be share if equal <END>
<BEG> returns a two-level table structure for this char-class object <END>
<BEG> determines wether the specified code point be in this interval <END>
<BEG> creates a charset that contain only one interval <END>
<BEG> creates the set of all character <END>
<BEG> the set of new-line character <END>
<BEG> returns whether this set contain a give character <END>
<BEG> returns the complement of the specify set x <SEG> that be <SEG> the set of all element that be not contain in x <END>
<BEG> returns whether the set contain element <END>
<BEG> create a caseless version of this charset <END>
<BEG> creates a intcharset from an exist intcharset <END>
<BEG> very slow but elementary method to determine whether s1 be a subset of s2 <END>
<BEG> returns the maximum code point for the select unicode version <END>
<BEG> returns the character interval set associate with the give property value for the select unicode version <END>
<BEG> returns the set of all property <SEG> property value <SEG> and their alias support by the specified unicode version <END>
<BEG> addpair <END>
<BEG> markall <END>
<BEG> the exit code of this silentexit exception <END>
<BEG> translate all value by give amount <END>
<BEG> emit one count value pair <END>
<BEG> emit one value use two character <END>
<BEG> convert array name into all uppercase internal scanner constant name <END>
<BEG> emit declaration of decoded member and open first chunk <END>
<BEG> execute line chunk break if necessary <END>
<BEG> generationfinished <END>
<BEG> setup <END>
<BEG> close <END>
<BEG> sets a new output stream and switch to non-gui mode <END>
<BEG> report time statistic data <END>
<BEG> all part of jflex <SEG> that want to provide dump information should use this method for their output <END>
<BEG> throw a generatorexception if there be any error record <END>
<BEG> print error and warn statistic <END>
<BEG> reset error and warning counter <END>
<BEG> print a warning without position information param message the warning message <END>
<BEG> print a warning with line information param message code of the warning message param line the line information see errormessages <END>
<BEG> print error message string param message the message to print <END>
<BEG> print error message code param message the code of the error message see errormessages <END>
<BEG> print error message with data param data data to insert into the message param message the code of the error message see errormessages <END>
<BEG> print error message with location information param file the file the error occur for param message the code of the error message to print param line the line number of error position param column the column of error position <END>
<BEG> print a line of a file param file the file to show param line the line number <END>
<BEG> set the textarea to write text to <END>
<BEG>  < p > write a portion of a string <END>
<BEG> generate <END>
<BEG> print system information e g <END>
<BEG> returns the root directory that contain source code <END>
<BEG> return the number of millisecond the timer have be run <END>
<BEG> inserts a new state declaration <END>
<BEG> returns the number code of a declared state <SEG> { code null } if no such state have be declare <END>
<BEG> returns the code of all inclusive state <END>
<BEG> emits the next part of the skeleton <END>
<BEG> make the skeleton private <END>
<BEG> reads an external skeleton file for late use with this class <END>
<BEG> reads an external skeleton file from a bufferedreader <END>
<BEG> replaces a with b in c param a the string to be replace param b the replacement param c the string in which to replace a by b return a string object with a replace by b in c <END>
<BEG> re load the default skeleton <END>
<BEG> return a new stateset of the specified length <END>
<BEG> compute the array size for a give set size <END>
<BEG> remove all element from this set <END>
<BEG> determine if a give state be an element of the set <END>
<BEG> returns an element of the set and remove it <END>
<BEG> remove a give state from the set <END>
<BEG> remove all state from { code this } that be not contain in the provided { link stateset } <END>
<BEG> returns the complement of this set with respect to the specify set <SEG> that be <SEG> the set of element that be contain in the specified set but be not contain in this set <END>
<BEG> determine if the state set contains element <END>
<BEG> copy specify stateset into this <END>
<BEG> construct an integer iterator for this stateset <END>
<BEG> reset this enumerator iterator and associate it with a give stateset <END>
<BEG> iterator interface method for { link # nextelement } <END>
<BEG> decodes a base64 encode char array <END>
<BEG> decodes a base64 encode < code > string < code > <END>
<BEG> encodes a raw byte array into a base64 < code > string < code > representation in accordance with rfc 2045 <END>
<BEG> returns the number of element currently on the stack <END>
<BEG> copies all element currently on the stack into the give array <END>
<BEG> return all element in a new array <END>
<BEG> returns the item at the top of the stack without remove it <END>
<BEG> removes the most recently insert item from the stack <END>
<BEG> sets this reference value field to null <END>
<BEG> sets this reference value object to the give instance <END>
<BEG> replaces this reference value with the give one <END>
<BEG> return true if this reference hold a non-null value <END>
<BEG> gets the path to the matcher that cause this error <END>
<BEG> gets the label correspond to the give matcher <SEG> anyofmatchers be treat specially in that their label be construct a a list of their content param matcher the matcher return the label <END>
<BEG> finds the matcher in the give failedmatcherpath whose label be best for presentation in expect string of parse error message <SEG> give the provide lastmatchpath <END>
<BEG> pretty print the parse error of the give parsingresult show their location in the give input buffer <END>
<BEG> pretty print the give parse error show their location in the give input buffer <END>
<BEG> supplies this proxymatcher with it underlying delegate <END>
<BEG> returns the default value for all visit method that have not be overridden <END>
<BEG> create a new basicparserunner instance with the give rule and input text and return the result of it { link # run string } method invocation <END>
<BEG> returns the character in this set <SEG> if it be additive <END>
<BEG> removes the give character from the set <END>
<BEG> returns a new characters object contain all the character of this instance plus all character of the give instance <END>
<BEG> creates a new characters instance contain only the give char <END>
<BEG> creates a new characters instance contain all character minus the give one <END>
<BEG> throws a grammarexception if the give condition be not meet <END>
<BEG> a predicate for rule tree printing <END>
<BEG> a predicate usable a a filter element of a { link org parboil parserunners tracingparserunner } <END>
<BEG> return the length of this path <SEG> i e <END>
<BEG> determines whether this path be a prefix of the give other path <END>
<BEG> returns the common prefix of this matcherpath and the give other one <END>
<BEG> return true if this parse result contains parse error <END>
<BEG> returns true if the wrapped string be either null or empty <END>
<BEG> return the char [ ] representation of the underlying stringbuilder <END>
<BEG> clears the content of the wrapped stringbuilder <END>
<BEG> returns true if this node be not null and have at least one child node <END>
<BEG> returns the first child node of the give node or null if node be null or do not have any child <END>
<BEG> returns an awt font which can be use to represent the give basefont param font the font to be convert param size the desire point size of the result font return a font which have similar property to the provide basefont <END>
<BEG> looks for a basefont parameter associate with a name <END>
<BEG> inserts the name in this map <END>
<BEG> inserts one font file into the map <END>
<BEG> inserts all the font recognize by itext in the < code > directory < code > into the map <END>
<BEG> method return type of affine transformation <END>
<BEG> multiply matrix of two affinetransform object param t1 - the affinetransform object be a multiplicand param t2 - the affinetransform object be a multiplier return an affinetransform object that be a result of t1 multiply by matrix t2 <END>
<BEG> a = x2-x1 <SEG> y2-y1 p = px-x1 <SEG> py-y1 <END>
<BEG> combines hashcode of previous element sequence and value 's hashcode <END>
<BEG> appends value 's hashcode to the current hashcode <END>
<BEG> checks if one of the line in the polyline intersect with a give rectangle <END>
<BEG> returns an iteration object that define the boundary of the polyline <END>
<BEG> there 's no difference with getpathiterator affinetransform at ; we just need this method to implement the shape interface <END>
<BEG> returns the coordinate and type of the current path segment in the iteration <END>
<BEG> tests if there be more point to read <END>
<BEG> moves the iterator to the next segment of the path forward along the primary direction of traversal as long a there be more point in that direction <END>
<BEG> see graphics2d # drawimage bufferedimage <SEG> bufferedimageop <SEG> int <SEG> int <END>
<BEG> see graphics2d # drawrenderedimage renderedimage <SEG> affinetransform <END>
<BEG> see graphics2d # drawstring string <SEG> float <SEG> float <END>
<BEG> see graphics2d # hit rectangle <SEG> shape <SEG> boolean <END>
<BEG> method contribute by alexej suchov see graphics2d # setpaint paint <END>
<BEG> sets a rendering hint param hintkey param hintvalue <END>
<BEG> param hintkey a key return the rendering hint <END>
<BEG> see graphics # create <END>
<BEG> see graphics # setcolor color <END>
<BEG> see graphics # cliprect int <SEG> int <SEG> int <SEG> int <END>
<BEG> see graphics # drawroundrect int <SEG> int <SEG> int <SEG> int <SEG> int <SEG> int <END>
<BEG> see graphics # drawpolyline int [ ] <SEG> int [ ] <SEG> int <END>
<BEG> see graphics # drawimage image <SEG> int <SEG> int <SEG> int <SEG> int <SEG> color <SEG> imageobserver <END>
<BEG> sets the maximum error count which will be return a the result of the comparison <END>
<BEG> sets the absolute error parameter which will be use in float point number comparison <END>
<BEG> gets all the chunk in this element <END>
<BEG> applies the property of the anchor to a chunk <END>
<BEG> processes the element by add it or the different part to an < code > elementlistener < code > <END>
<BEG> returns the upper right y-value <END>
<BEG> see com itextpdf text element # iscontent since itext 2 0 8 <END>
<BEG> return the value for red <END>
<BEG> return the value for the alpha channel <END>
<BEG> make this color darker <END>
<BEG> create a new section for this chapter and ad it <END>
<BEG> changes the chapter number <END>
<BEG> append some text to this < code > chunk < code > <END>
<BEG> checks be this < code > chunk < code > be empty <END>
<BEG> checks the accessible attribute of this < code > chunk < code > <END>
<BEG> sets the attribute all at once <END>
<BEG> sets the text horizontal scaling <END>
<BEG> sets the text displacement relative to the baseline <END>
<BEG> skews the text to simulate italic and other effect <END>
<BEG> sets a goto for a remote destination for this < code > chunk < code > <END>
<BEG> sets a local goto for this < code > chunk < code > <END>
<BEG> sets a line height tag <END>
<BEG> sets a new page tag return this < code > chunk < code > <END>
<BEG> returns the hyphenation if present <END>
<BEG> gets the character space <END>
<BEG> sets the word spacing <END>
<BEG> sets the textual expansion of the abbreviation or acronym <END>
<BEG> sets the page number <END>
<BEG> returns the left margin <END>
<BEG> return the right margin <END>
<BEG> returns the low leave x-coordinate consider a give margin <END>
<BEG> returns the upper right x-coordinate <SEG> consider a give margin <END>
<BEG> adds a javascript onload function to the html body tag param code the javascript code to be execute on load of the html page <END>
<BEG> gets the javascript onload command <END>
<BEG> adds a style class to the html body tag param htmlstyleclass the style class for the html body tag <END>
<BEG> gets the style class of the html body tag return the style class of the html body tag <END>
<BEG> set the margin mirroring <END>
<BEG> signals that an < code > element < code > be add to the < code > document < code > <END>
<BEG> signals that the < code > document < code > be close and that no other < code > elements < code > will be add <END>
<BEG> let the writer know that all writing have to be pause <END>
<BEG> let the writer know that writing may be resume <END>
<BEG> writes the markup attribute of the specify < code > markupattributes < code > object to the < code > outputstream < code > <END>
<BEG> sets the close state of the stream after document close param closestream true if the stream be close on document close <END>
<BEG> this implementation only return false and do n't do anything <END>
<BEG> get a message with param length parameter or none if param be null <END>
<BEG> sets the language to be use globally for the error message <END>
<BEG> convert an exception into an unchecked exception <END>
<BEG> the tostring be change to be prefix with exceptionconverter return string version of the exception <END>
<BEG> here we prefix <SEG> with s print <SEG> not s println <SEG> the stack trace with exceptionconverter : param s <END>
<BEG> again <SEG> we prefix the stack trace with exceptionconverter : param s <END>
<BEG> this method be include instead of use super message <SEG> cause in the constructor to support backwards compatabilty with jdk 1 5 <SEG> which do not have cause constructor for throwable return the cause of this exception <END>
<BEG> changes an int into a upper case greek letter combination <END>
<BEG> changes an int into a greek letter combination <END>
<BEG> translates a positive integer not equal to zero into a string use the letter ' a ' to ' z ' ; 1 = a <SEG> 2 = b <SEG> <SEG> 26 = z <SEG> 27 = aa <SEG> 28 = ab <SEG> param index the index return a translated string <END>
<BEG> translates a positive integer not equal to zero into a string use the letter ' a ' to ' z ' a = 1 <SEG> b = 2 <SEG> <SEG> z = 26 <SEG> aa = 27 <SEG> ab = 28 <SEG> <END>
<BEG> changes an int into a low case roman number <END>
<BEG> gets a set of registered fontnames <END>
<BEG> gets the font factory implementation <END>
<BEG> register a font by give explicitly the font family and name <END>
<BEG> register all the font in a directory and possibly it subdirectory <END>
<BEG> checks if a certain font be register <END>
<BEG> change the font to symbol <END>
<BEG> getter for the cell width return the width since itext 5 0 6 <END>
<BEG> getter for percentage return true if the width be a percentage since itext 5 0 6 <END>
<BEG> implements the add method of the textelementarray interface <END>
<BEG> walks through the hierarchy bottom-up look for a property key <END>
<BEG> walks through the hierarchy bottom-up and remove the first occurrence of a tag that be encounter <END>
<BEG> if the property contain a font size <SEG> the size may need to be adjust base on font size higher in the hierarchy <END>
<BEG> setter for the font provider param provider since 5 0 6 rename from setfontimp <END>
<BEG> creates an itext chunk param content the content of the chunk param chain the hierarchy chain return a chunk <END>
<BEG> creates an itext paragraph object use the property of the different tag and property in the hierarchy chain <END>
<BEG> method that do the actual element create for the createparagraph and createlistitem method <END>
<BEG> sets the leading of a paragraph object <END>
<BEG> param tag param chain return the list <END>
<BEG> sets the map with support tag <END>
<BEG> setter for the stylesheet param style the stylesheet <END>
<BEG> parses content read from a java io reader object <END>
<BEG> see com itextpdf text xml simpleparser simplexmldochandler # startdocument <END>
<BEG> see com itextpdf text xml simpleparser simplexmldochandler # startelement java lang string <SEG> java util map <END>
<BEG> see com itextpdf text xml simpleparser simplexmldochandler # text java lang string <END>
<BEG> flushes the current paragraph <SEG> indicate that we 're start a new block <END>
<BEG> pushes an element to the stack <END>
<BEG> updates the chain with a new tag and new attribute <END>
<BEG> updates the chain by remove a tag <END>
<BEG> setter for the provider <END>
<BEG> fetches the list from the stack and add it to the textelementarray on top of the stack <SEG> or to the document if the stack be empty <END>
<BEG> looks for the list object on the stack <SEG> and add the listitem to the list <END>
<BEG> processes an image <END>
<BEG> gets the tablewrapper from the stack and add a new row <END>
<BEG> return the pendingtr since 5 0 6 <END>
<BEG> param pendingtr the pendingtr to set since 5 0 6 <END>
<BEG> see com itextpdf text doclistener # close <END>
<BEG> associates a map containing style with a tag <END>
<BEG> adds an extra style key-value pair to the style map of a specific tag param tag the name of the html xml tag param key the key specify a specific style param value the value define the style <END>
<BEG> resolves the style base on the tag name and the value of the class attribute <END>
<BEG> method contribute by lubos strapko param h param chain since 2 1 3 <END>
<BEG> setter for the column width since itext 5 0 6 <END>
<BEG> creates a new pdfptable base on the info assemble in the table stub <END>
<BEG> gives you a basecolor base on a name <END>
<BEG> get an instance of an image param imgb raw image date return an image object throw badelementexception throw malformedurlexception throw ioexception <END>
<BEG> creates a jbig2 image <END>
<BEG> get an instance of an image param template a pdftemplate that have to be wrap in an image object return an image object throw badelementexception <END>
<BEG> get an instance of an image param image an image object return a new image object <END>
<BEG> returns < code > true < code > if the image be a < code > jpeg < code > -object <END>
<BEG> gets the < code > string < code > -representation of the reference to the image <END>
<BEG> sets the url of the image param url the url of the image <END>
<BEG> gets the template to be use a an image <END>
<BEG> gets the alternative text for the image <END>
<BEG> sets the absolute position of the < code > image < code > <END>
<BEG> returns the absolute x position <END>
<BEG> checks if the < code > images < code > have to be add at an absolute position <END>
<BEG> gets the scaled width of the image <END>
<BEG> scale the image to an absolute width and an absolute height <END>
<BEG> scale the image to an absolute width <END>
<BEG> scales the image so that it fit a certain width and height <END>
<BEG> returns a serial id for the image reuse the same image more than once return a serialid <END>
<BEG> gets the current image rotation in radian <END>
<BEG> some image format <SEG> like tiff may present the image rotate that have to be compensate <END>
<BEG> sets the left indentation <END>
<BEG> gets the right indentation <END>
<BEG> gets the spacing before this image <END>
<BEG> sets the value of scaletofitlinewhenoverflow param scaletofitlinewhenoverflow true if you want the image to scale to the available width since itext 5 0 6 <END>
<BEG> gets the layer this image belong to <END>
<BEG> sets the image interpolation <END>
<BEG> sets the dot per inch value param dpix dpi for x coordinate param dpiy dpi for y coordinate <END>
<BEG> getter for the inverted value return true if the image be invert <END>
<BEG> tags this image with an icc profile <END>
<BEG> checks be the image have an icc profile <END>
<BEG> getter for the dictionary with additional information <END>
<BEG> replaces calrgb and calgray colorspaces with devicergb and devicegray <END>
<BEG> make this < code > image < code > a mask <END>
<BEG> sets the transparency value param transparency the transparency value <END>
<BEG> sets the compression level to be use if the image be write a a compressed stream <END>
<BEG> gets an instance of a image from a java awt image <END>
<BEG> getter for the jbig2 global data <END>
<BEG> reads the wmf into a template <END>
<BEG>  < p > note : because bytebuffers do n't support long indexing <SEG> the position must be a valid positive int param position the position to read the byte from - must be less than integer max_value <END>
<BEG> see java io randomaccessfile # close cleans the mapped bytebuffers and close the channel <END>
<BEG> for a give offset <SEG> return the index of the source that contain the specified offset <END>
<BEG> called when a give source be about to become the active source <END>
<BEG>  closes all of the underlying source <END>
<BEG> map the region of the channel throw ioexception if there be a problem with create the map <END>
<BEG>  for now <SEG> close the source that be no longer be use <END>
<BEG>  ensure that the source be map <END>
<BEG> determines whether the full content of the source will be read into memory param forceread true if the full content will be read <SEG> false otherwise return this object this allow chaining of method call <END>
<BEG> determines whether { link randomaccessfile } should be use a the primary data access mechanism param useplainrandomaccess whether { link randomaccessfile } should be use a the primary data access mechanism return this object this allow chaining of method call <END>
<BEG> creates a { link randomaccesssource } base on a byte array param data the byte array return the newly create { link randomaccesssource } <END>
<BEG> creates a { link randomaccesssource } base on a url <END>
<BEG> creates a { link randomaccesssource } base on a filename string <END>
<BEG> creates a { link randomaccesssource } base on memory map a file channel <END>
<BEG> reads the full content of a stream and return them in a byte array param be the stream to read return a byte array contain all of the byte from the stream throw ioexception if there be a problem reading from the input stream <END>
<BEG>  note that the position will be adjust to read from the correct location in the underlying source <END>
<BEG> return < code > true < code > if the image be jp2 <SEG> < code > false < code > if a codestream <END>
<BEG> sets the indentation of this paragraph on the left side <END>
<BEG> changes the font of the list symbol to the font of the first chunk in the list item <END>
<BEG> getter for the counter <END>
<BEG> param klass return this counter implementation see com itextpdf text log counter # getcounter java lang class <END>
<BEG> returns the loggerfactory return singleton instance of this loggerfactory <END>
<BEG> non-javadoc see com itextpdf text log logger # getlogger java lang class <END>
<BEG> non-javadoc see com itextpdf text log logger # error java lang string <SEG> java lang exception <END>
<BEG> non-javadoc see com itextpdf text log logger # islogging com itextpdf text log level <END>
<BEG> see com itextpdf text log counter # getcounter java lang class <END>
<BEG> adds one markup attribute <END>
<BEG> gets the bar multiplier for wide bar <END>
<BEG> sets the text font <END>
<BEG> gets the property to show the generated checksum in the the text <END>
<BEG> sets the property to show the start and stop character ' ' in the text for the barcode 39 <END>
<BEG> gets the property to generate extended barcode 39 <END>
<BEG> gets the property to show the guard bar for barcode ean <END>
<BEG> creates a template with the barcode <END>
<BEG> gets the amount of ink spread <END>
<BEG> gets an < code > image < code > with the barcode <END>
<BEG> gets the generated image <END>
<BEG> gets the whitespace border around the barcode <END>
<BEG> gets the barcode option <END>
<BEG> sets the option for the barcode generation <END>
<BEG> creates a < code > java awt image < code > <END>
<BEG> places the barcode in a < code > pdfcontentbyte < code > <END>
<BEG> creates the bar for postnet <END>
<BEG> gets the maximum area that the barcode and the text <SEG> if any <SEG> will occupy <END>
<BEG> creates a font base on an exist document font <END>
<BEG> gets the name without the modifier bold <SEG> italic or bolditalic <END>
<BEG> normalize the encoding name <END>
<BEG> gets the width of a < code > char < code > in normalized 1000 unit <END>
<BEG> gets the width of a < code > string < code > in point take kern into account <END>
<BEG> converts a < code > string < code > to a < code > byte < code > array accord to the font 's encoding <END>
<BEG> gets the encoding use to convert < code > string < code > into < code > byte [ ] < code > <END>
<BEG> gets the symbolic flag of the font <END>
<BEG> creates a unique subset prefix to be add to the font name when the font be embed and subset <END>
<BEG> gets the unicode character correspond to the byte output to the pdf stream <END>
<BEG> gets all the name from the font <END>
<BEG> gets all the entry of the namestable from the font <END>
<BEG> gets the code page support by the font <END>
<BEG> enumerates the postscript font names present inside a true type collection <END>
<BEG> gets the array with the name of the character <END>
<BEG> gets the array with the unicode character <END>
<BEG> set to < code > true < code > to force the generation of the width array <END>
<BEG> sets the conversion of < code > char < code > directly to < code > byte < code > by cast <END>
<BEG> indicates if all the glyph and width for that particular encoding should be include in the document <END>
<BEG> gets the unicode equivalent to a cid <END>
<BEG> gets the cid code give an unicode <END>
<BEG> checks if a character exist in this font <END>
<BEG> gets a list of all document font <END>
<BEG> gets a list of the document font in a particular page <END>
<BEG> get default array of six number specify the font matrix <SEG> map glyph space to text space return an array of six value < code > null < code > <END>
<BEG> itext expect arabic diactrics tashkeel to have zero advance but some font <SEG> most notably those that come with windows <SEG> like time ttf <SEG> have non-zero advance for those character <END>
<BEG> adds a character range when subsetting <END>
<BEG> return the base level of the paragraph <END>
<BEG> decodes a string of byte encode in the font 's encode into a unicode string this will use the tounicode map of the font <SEG> if available <SEG> otherwise it use the font 's encode param cidbytes the byte that need to be decode return the unicode string that result from decode since 2 1 7 <END>
<BEG> serializes an object and return the base64-encoded version of that serialize object <END>
<BEG> attempts to decode base64 data and deserialize a java object within <END>
<BEG> encodes a full image <END>
<BEG> closes the encoder and return the encoded data <END>
<BEG> gets a byte array that can be use a a jbig2globals <SEG> or null if not applicable to the give jbig2 <END>
<BEG> gets the number of page in a jbig2 image <END>
<BEG> indicate to compressor that no more data to go so write out any remain buffer data <END>
<BEG> param codesize the size of code to be preallocated for the string store <END>
<BEG> if expand data do n't fit into array only what will fit be write to buf and the return value indicate how much of the expand code have be write to the buf <END>
<BEG> returns the value of a give tag a a tifffield <SEG> or null if the tag be not present <END>
<BEG> returns true if a tag appear in the directory <END>
<BEG> returns an ordered array of ints indicate the tag value <END>
<BEG> returns an array of tifffields contain all the field in this directory <END>
<BEG> returns the number of image directory subimages store in a give tiff file <SEG> represent by a < code > seekablestream < code > <END>
<BEG> returns a boolean indicating whether the byte order use in the the tiff file be big-endian i e <END>
<BEG> reverses the bit in the array param b the bit to reverse since 2 0 7 <END>
<BEG> invokes the superclass method and then set instance variable on the basis of the metadata set on this decompressor <END>
<BEG> method to decode lzw compress data <END>
<BEG> initialize the string table <END>
<BEG> write out the string just uncompressed <END>
<BEG> append < code > newstring < code > to the end of < code > oldstring < code > <END>
<BEG> adds a prefix for the collection item <END>
<BEG> adds a collection field to the schema <END>
<BEG> if this dictionary refers to a child that be a document level attachment <SEG> you need to specify the name that be use to attach the document <END>
<BEG> if this dictionary refers to a child that be a file attachment add to a page <SEG> you need to specify the name of the page or use setfileattachmentpage to specify the page number <END>
<BEG> if this dictionary refers to a child that be a file attachment add to a page <SEG> you need to specify the page number or use setfileattachmentpagename to specify a name destination <END>
<BEG> if this dictionary refers to a child that be a file attachment add to a page <SEG> you need to specify the page with setfileattachmentpage or setfileattachmentpagename <SEG> and then specify the name of the attachment add to this page or use setfileattachmentindex <END>
<BEG> if this dictionary refers to an intermediate target <SEG> you can add the next target in the sequence <END>
<BEG> gets the color name a it appear in the document body <END>
<BEG> gets a random initialization vector <END>
<BEG> < p > checks if a character can be use to split a < code > pdfstring < code > <END>
<BEG> returns the current character param current current position in the array param ck chunk array param cc the character array that have to be check return the current character <END>
<BEG> see com itextpdf text pdf draw drawinterface # draw com itextpdf text pdf pdfcontentbyte <SEG> float <SEG> float <SEG> float <SEG> float <SEG> float <END>
<BEG> getter for the gap between the center of the dot of the dotted line <END>
<BEG> getter for the interface with the overrule draw method <END>
<BEG> getter for the offset relative to the baseline of the current line <END>
<BEG> see com itextpdf text pdf pdfpcellevent # celllayout com itextpdf text pdf pdfpcell <SEG> com itextpdf text rectangle <SEG> com itextpdf text pdf pdfcontentbyte [ ] <END>
<BEG> returns the sorted list with the entry and the collected page number <END>
<BEG> add a page event to the forwarder <END>
<BEG> called when a page be finish <SEG> just before be write to the document <END>
<BEG> called when the end of a chapter be reach <END>
<BEG> see com itextpdf text pdf pdfptableevent # tablelayout com itextpdf text pdf pdfptable <SEG> float [ ] [ ] <SEG> float [ ] <SEG> int <SEG> int <SEG> com itextpdf text pdf pdfcontentbyte [ ] <END>
<BEG> see com itextpdf text pdf pdfptableeventsplit # splittable com itextpdf text pdf pdfptable since itext 5 0 6 <END>
<BEG> see com itextpdf text pdf pdfptableeventaftersplit # aftersplittable com itextpdf text pdf pdfptable <SEG> com itextpdf text pdf pdfprow <SEG> int since itext 5 4 3 <END>
<BEG> gets the type of a give color <END>
<BEG> gets all the field <END>
<BEG> gets the field dictionary <END>
<BEG> gets a byte [ ] contain a file that be embed in the fdf <END>
<BEG> gets the field value or < code > null < code > if the field do not exist or have no value define <END>
<BEG> gets the pdf file specification contain in the fdf <END>
<BEG> removes the field value <END>
<BEG> sets the field value a a name <END>
<BEG> sets all the field from this < code > fdfreader < code > param fdf the < code > fdfreader < code > <END>
<BEG> sets the pdf file name associate with the fdf <END>
<BEG> creates a { link memorylimitsawareoutputstream } which will be use for decompression of the pass pdf stream <END>
<BEG> param seq return the cid code or -1 for end <END>
<BEG> this will tell if this cmap have any one byte mapping <END>
<BEG> this will perform a lookup into the map <END>
<BEG> adds a < code > font < code > to be search for valid character <END>
<BEG> process the text so that it will render with a combination of font if need <END>
<BEG> return current capacity of array <END>
<BEG> this be to implement memory allocation in the array <END>
<BEG> reset vector but do n't resize or clear element <END>
<BEG> return the hyphenation point <END>
<BEG> packs the value by store them in 4 bit <SEG> two value into a byte values range be from 0 to 9 <END>
<BEG> < p > search for all possible partial match of word start at index an update interletter value <END>
<BEG> add a character class to the tree <END>
<BEG> param lang param country <END>
<BEG> param word param offset param len return a hyphenation object <END>
<BEG> branches be initially compress <SEG> need one node per key plus the size of the string key <END>
<BEG> compares 2 null terminate char array <END>
<BEG> compares a string with null terminate char array <END>
<BEG> each node store a character splitchar which be part of some key s <END>
<BEG> hyphenates a word and return the first part of it <END>
<BEG> gets the second part of the hyphenated word <END>
<BEG> < p > returns the number of key in this hashtable < p > return the number of key in this hashtable <END>
<BEG> < p > tests if the specify int be a key in this hashtable < p > param key possible key <END>
<BEG> < p > maps the specify < code > key < code > to the specify < code > value < code > in this hashtable <END>
<BEG> < p > clears this hashtable so that it contain no key < p > <END>
<BEG> hebrew be write from right to leave <END>
<BEG> reorders the byte in a string make indic ligature param s the original string return the ligaturized string <END>
<BEG> checks if a character be vowel letter <END>
<BEG> since 2 0 8 <END>
<BEG> see java io randomaccessfile # read return int next integer or -1 on eof <END>
<BEG> see java io randomaccessfile # read byte [ ] <SEG> int <SEG> int param bytes byte [ ] param off int offset param len int length return int bytes read or -1 on eof <END>
<BEG> see java io randomaccessfile # seek long param po long position <END>
<BEG> see java io randomaccessfile # length return long length <END>
<BEG> invokes the close method see java lang object # finalize <END>
<BEG> invokes the clean method on the bytebuffer 's clean param buffer bytebuffer return boolean true on success <END>
<BEG> gets the maximum allow size which can be occupy by a single decompressed pdf stream <END>
<BEG> gets the maximum allow size which can be occupy by all decompressed pdf stream <END>
<BEG> considers the number of byte which be occupy by the decompressed pdf stream <END>
<BEG> gets the maximum size which can be occupy by this output stream <END>
<BEG> writes < code > b length < code > bytes from the specify byte array to this output stream <END>
<BEG> applies filter <SEG> then delegate to the delegate if all filter pass param renderinfo contain info to render text see com itextpdf text pdf parser renderlistener # rendertext com itextpdf text pdf parser textrenderinfo <END>
<BEG> applies filter <SEG> then delegate to the delegate if all filter pass see com itextpdf text pdf parser renderlistener # renderimage com itextpdf text pdf parser imagerenderinfo since 5 0 1 <END>
<BEG> getter for the current transformation matrix return the ctm since itext 5 0 1 <END>
<BEG> getter for the lead return the lead since itext 5 0 1 <END>
<BEG> getter for text rise return the text rise since itext 5 0 1 <END>
<BEG> getter for knockout return the knockout since itext 5 0 1 <END>
<BEG> gets the current color space for fill operation <END>
<BEG> gets the current fill color return a basecolor <END>
<BEG> getter for the line cap style <END>
<BEG> getter for the miter limit value <END>
<BEG> return a vector in user space represent the start point of the xobject <END>
<BEG> return the coordinate transformation matrix active when this image be render <END>
<BEG> return the size of the image <SEG> in user space unit since 5 0 3 <END>
<BEG> return an indirect reference to the image since 5 0 2 <END>
<BEG> return the current fill color from the graphic state at the time this render operation occur since 5 5 7 <END>
<BEG> checks if the text belong to a marked content sequence with a give mcid <END>
<BEG> return the marked content associate with the textrenderinfo instance <END>
<BEG> return the image dictionary associate with this inline image <END>
<BEG> parses an inline image from the provide content parser <END>
<BEG> resets the dash array so that the { link # next } method will start from the beginning of the dash array <END>
<BEG> checks whether the dashed pattern be solid or not <END>
<BEG> return the length of this line segment since 5 0 2 <END>
<BEG> computes the bounding rectangle for this line segment <END>
<BEG> transforms the segment by the specify matrix param m the matrix for the transformation return the transformed segment <END>
<BEG> see com itextpdf text pdf parser renderlistener # begintextblock <END>
<BEG> gets text that meet the specify filter if multiple text extraction will be perform for the same page i e <END>
<BEG> see com itextpdf text pdf parser renderlistener # rendertext com itextpdf text pdf parser textrenderinfo <END>
<BEG> no-op method - this renderer be n't interested in image event see com itextpdf text pdf parser renderlistener # renderimage com itextpdf text pdf parser imagerenderinfo since 5 0 1 <END>
<BEG> get the tag of this marked content return the tag of this marked content <END>
<BEG> gets the mcid value if the marked content contain an mcid entry <SEG> return that value <END>
<BEG> gets a specific value inside the matrix <END>
<BEG> multiplies this matrix by ' b ' and return the result see http : en wikipedia org wiki matrix_multiplication param by the matrix to multiply by return the result matrix <END>
<BEG> checks equality of matrix <END>
<BEG> return construction operation should be perform on the current path <END>
<BEG> return { link java util list } contain data of a new segment e g <END>
<BEG> return either { link # nonzero_winding_rule } or { link # even_odd_rule } <END>
<BEG> shows the detail of a dictionary <END>
<BEG> displays a summary of the entry in the xobject dictionary for the stream param resourcedic the resource dictionary for the stream return a string with the summary of the entry throw ioexception since 5 0 2 <END>
<BEG> writes information about a specific page from pdfreader to the specify output stream <END>
<BEG> writes information about each page in a pdf file to the specify output stream <END>
<BEG> writes information about the specified page in a pdf file to the specify output stream <END>
<BEG> writes information about each page in a pdf file to the specify file <SEG> or system out <END>
<BEG> registers a content operator that will be call when the specify operator string be encounter during content processing <END>
<BEG> return { link java util collection } contain all the registered operator string since 5 5 6 <END>
<BEG> resets the graphic state stack <SEG> matrix and resource <END>
<BEG> processes pdf syntax <END>
<BEG> return the type of image data that be return by getimagebytes <END>
<BEG> returns the image dictionary <END>
<BEG> return the byte of the image the format will be a specify in { link pdfimageobject # getimagebytestype } throw ioexception since 5 0 4 <END>
<BEG> extract text from a specify page use an extraction strategy <END>
<BEG> returns the result so far <END>
<BEG> used to actually append text to the text result <END>
<BEG> captures text use a simplified algorithm for insert hard return and space param renderinfo render info <END>
<BEG> return the point this subpath start at <END>
<BEG> return the last point of the subpath <END>
<BEG> return { link java util list } comprise all the segment the subpath make on <END>
<BEG> checks whether subpath be empty or not <END>
<BEG> returns a < code > boolean < code > indicate whether the subpath be degenerate or not <END>
<BEG> return { link java util list } contain point of piecewise linear approximation for this subpath <END>
<BEG> parses a string with structured content <END>
<BEG> if the child of a structured element be an array <SEG> we need to loop over the element <END>
<BEG> if the child of a structured element be a dictionary <SEG> we inspect the child ; we may also draw a tag <END>
<BEG> method invokes by the pdfcontentstreamprocessor <END>
<BEG> gets the baseline for the text i e <END>
<BEG> the rise represent how far above the nominal baseline the text should be render <END>
<BEG> return the width <SEG> in user space unit <SEG> of a single space character in the current font <END>
<BEG> return the text render mode that should be use for the text <END>
<BEG> provides detail useful if a listener need access to the position of each individual glyph in the text render operation return a list of { link textrenderinfo } object that represent each glyph use in the draw operation <END>
<BEG> adds fieldtemplates <END>
<BEG> param button param characteristic param name param value <END>
<BEG> param button param caption param font param fontsize param llx param lly param urx param ury <END>
<BEG> param name param value return a pdfformfield <END>
<BEG> param field param text param name param llx param lly param urx param ury <END>
<BEG> param field param value param llx param lly param urx param ury <END>
<BEG> param name param defaultvalue param notoggletooff return a pdfformfield <END>
<BEG> param radiogroup param value param llx param lly param urx param ury return a pdfformfield <END>
<BEG> set the font and the size for the subsequent text writing <END>
<BEG> adds an array of < code > float < code > value to end of the < code > pdfarray < code > <END>
<BEG> inserts a < code > pdfobject < code > at the beginning of the < code > pdfarray < code > <END>
<BEG> returns the < code > pdfobject < code > with the specified index <SEG> resolve a possible indirect reference to a direct object <END>
<BEG> returns a < code > pdfobject < code > a a < code > pdfdictionary < code > <SEG> resolve indirect reference <END>
<BEG> return this pdfarray 's value a a long [ ] since 5 3 5 <END>
<BEG> returns the primitive value of the < code > pdfboolean < code > -object <END>
<BEG> splits this < code > pdfchunk < code > if it 's too long for the give width <END>
<BEG> checks if this < code > pdfchunk < code > be a separator chunk <END>
<BEG> checks if this < code > pdfchunk < code > be a horizontal separator chunk <END>
<BEG> correction for the tab position base on the left start position <END>
<BEG> returns a scalepercentage in case the image need to be scale <END>
<BEG> sets a scale percentage in case the image need to be scale <END>
<BEG> tells you if this string be in chinese <SEG> japanese <SEG> korean or identity-h return true if the chunk have a special encoding <END>
<BEG> removes all the < var > ' ' < var > and < var > '- ' < var > -characters on the right of a < code > string < code > <END>
<BEG> adds the page from an exist pdf document <END>
<BEG> gets the pdfcopy instance so that you can add bookmark or change preference before you close pdfconcatenate <END>
<BEG> opens the document if it be n't open already <END>
<BEG> this method feed in the source document param reader the pdf reader contain the source document throw documentexception <END>
<BEG> this merge field be slightly different from the mergefields method of pdfcopyfields <END>
<BEG> gives the w3c format of the pdfdate <END>
<BEG> converts a pdf string represent a date into a calendar <END>
<BEG> gets the extension level within the baseversion <END>
<BEG> generations the developer extension dictionary corresponding with the prefix <END>
<BEG> returns a string representation of this < code > pdfdictionary < code > <END>
<BEG> associates the specified < code > pdfobject < code > a < var > value < var > with the specify < code > pdfname < code > a < var > key < var > in this map <END>
<BEG> associates the specified < code > pdfobject < code > a value to the specify < code > pdfname < code > a key in this map <END>
<BEG> returns the < code > pdfobject < code > associate to the specify < var > key < var > <SEG> resolve a possible indirect reference to a direct object <END>
<BEG> get all key that be set <END>
<BEG> checks if a < code > dictionary < code > be of the type font <END>
<BEG> improtant note : be careful with this method because it would return correct result only in case if { link pdfdiv # layout pdfcontentbyte <SEG> boolean <SEG> boolean <SEG> float <SEG> float <SEG> float <SEG> float } be already call <END>
<BEG> image will be scale to fit in the div occupy area <END>
<BEG> sets the spacing after this table <END>
<BEG> see com itextpdf text pdf pdfdictionary # topdf com itextpdf text pdf pdfwriter <SEG> java io outputstream <END>
<BEG> converts a < code > byte < code > array to a < code > string < code > accord to the some encoding <END>
<BEG> checks be < code > text < code > only have pdfdocencoding character <END>
<BEG> adds an extra encoding <END>
<BEG> gets the content from a recipient <END>
<BEG> creates a file specification of type url <END>
<BEG> creates a file specification for an external file <END>
<BEG> sets the file name the key f string a an hex representation to support multi byte file name <END>
<BEG> adds the unicode file name the key uf <END>
<BEG> sets a flag that indicate whether an external file reference by the file specification be volatile <END>
<BEG> adds a description for the file that be specify here <END>
<BEG> adds the collection item dictionary <END>
<BEG> compares this < code > pdffont < code > with another param pdffont the other < code > pdffont < code > return a value <END>
<BEG> returns the width of a certain character of this font <END>
<BEG> ors together the give flag with the current ff value <END>
<BEG> sets the rich value for this field <END>
<BEG> the user name be the text show a a tool <END>
<BEG> the mapping name be the name this field use when submit form data <END>
<BEG> sets the flag whether to toggle knockout behavior for overprinted object <END>
<BEG> sets the current stroking alpha constant <SEG> specify the constant shape or constant opacity value to be use for stroke operation in the transparent image model <END>
<BEG> the alpha source flag specify whether the current soft mask and alpha constant be to be interpret a shape value true or opacity value false <END>
<BEG> the current blend mode to be use in the transparent image model <END>
<BEG> set the rendering intent <SEG> possible value be : pdfname absolutecolorimetric <SEG> pdfname relativecolorimetric <SEG> pdfname saturation <SEG> pdfname perceptual <END>
<BEG> always throw an error <END>
<BEG> checks if the page have to be copy <END>
<BEG> indicate that the resource of the import page have be copy <END>
<BEG> creates a title layer <END>
<BEG> adds a child layer <END>
<BEG> gets the parent layer <END>
<BEG> gets the dictionary represent the layer <END>
<BEG> gets the initial visibility of the layer <END>
<BEG> used by the create application to store application-specific data associate with this optional content group <END>
<BEG> specifies the language of the content control by this optional content group param lang a language string which specify a language and possibly a locale for example <SEG> < b > es-mx < b > represent mexican spanish param prefer use by viewer application when there be a partial match but no exact match between the system language and the language string in all usage dictionary <END>
<BEG> specifies the recommended state for content in this group when the document or part of it be save by a viewer application to a format that do not support optional content for example <SEG> an early version of pdf or a raster image format <END>
<BEG> specifies a range of magnification at which the content in this optional content group be best viewed <END>
<BEG> specifies that the content in this group be intend for use in print param subtype a name specify the kind of content control by the group ; for example <SEG> < b > trapping < b > <SEG> < b > printersmarks < b > and < b > watermark < b > param printstate indicate that the group should be set to that state when the document be print from a viewer application <END>
<BEG> indicates that the group should be set to that state when the document be open in a viewer application <END>
<BEG> indicates that the group contain a pagination artifact <END>
<BEG> one of more user for whom this optional content group be primarily intend <END>
<BEG> sets the visibility of the layer in acrobat 's layer panel <END>
<BEG> sets the visibility policy for content belonging to this membership dictionary <END>
<BEG> writes a name tree to a pdfwriter <END>
<BEG> returns the primitive < code > int < code > value of this object <END>
<BEG> increments the value of the < code > pdfnumber < code > -object by 1 <END>
<BEG> creates a number tree <END>
<BEG> adds a kid to the outline param outline <END>
<BEG> checks if this page element be a tree of page <END>
<BEG> adds an indirect reference point to a < code > pdfcontents < code > -object <END>
<BEG> rotates the mediabox <SEG> but not the text in it <END>
<BEG> called when a < code > chunk < code > with a generic tag be write <END>
<BEG> sets the horizontal interval of this pattern <END>
<BEG> returns the horizontal interval when repeat the pattern <END>
<BEG> tells you if this pattern be color uncolored stencil = uncolored <SEG> you need to set a default color <END>
<BEG> gets the stream represent this pattern return the stream represent this pattern <END>
<BEG> gets the stream represent this pattern param compressionlevel the compression level of the stream return the stream represent this pattern since 2 1 3 <END>
<BEG> gets a duplicate of this < code > pdfpatternpainter < code > <END>
<BEG> see com itextpdf text pdf pdfcontentbyte # resetgrayfill <END>
<BEG> see com itextpdf text pdf pdfcontentbyte # setrgbcolorfillf float <SEG> float <SEG> float <END>
<BEG> see com itextpdf text pdf pdfcontentbyte # addimage com itextpdf text image <SEG> float <SEG> float <SEG> float <SEG> float <SEG> float <SEG> float <END>
<BEG> see com itextpdf text pdf pdfcontentbyte # setcolorstroke com itextpdf text basecolor <END>
<BEG> see com itextpdf text pdf pdfcontentbyte # setcolorfill com itextpdf text pdf pdfspotcolor <SEG> float <END>
<BEG> see com itextpdf text pdf pdfcontentbyte # setpatternfill com itextpdf text pdf pdfpatternpainter <END>
<BEG> see com itextpdf text pdf pdfcontentbyte # setpatternfill com itextpdf text pdf pdfpatternpainter <SEG> com itextpdf text basecolor <SEG> float <END>
<BEG> adds an itext element to the cell <END>
<BEG> gets the < code > phrase < code > from this cell <END>
<BEG> gets the horizontal alignment for the cell <END>
<BEG> gets the effective left padding <END>
<BEG> sets the padding of the content in the cell space between content and border <END>
<BEG> if true <SEG> then effective padding will include border width return true if effective padding include border width <END>
<BEG> adjusts effective pad to include border width <END>
<BEG> set a calculated height for the cell <END>
<BEG> get the calculated height of the cell <END>
<BEG> tells you whether the height be calculate <END>
<BEG> tells you whether the cell have a fix height <END>
<BEG> returns the list of composite element of the column <END>
<BEG> gets the stream represent this object <END>
<BEG> gets the content stream of a page a a pdfstream object <END>
<BEG> overrides the < code > add < code > -method in < code > pdfarray < code > in order to prevent the add of extra object to the array <END>
<BEG> block change to the underlie pdfarray param value stuff we 'll ignore <END>
<BEG> swaps the value of urx and ury and of lly and llx in order to rotate the rectangle <END>
<BEG> sets the signature creator name in the { link pdfsignaturebuildproperties } dictionary <END>
<BEG> gets the { link pdfsignaturebuildproperties } instance if it exist <SEG> if not it add a new one and return this <END>
<BEG> translate a prindirectreference to a pdfindirectreference in addition <SEG> translate the object number <SEG> and copy the referenced object to the output file if it be n't available in the cache yet <END>
<BEG> gets the optional < code > string < code > map to add or change value in the info dictionary <END>
<BEG> causes any pending change to the direct under over content e g <END>
<BEG> sets the certificate encryption option for this document <END>
<BEG> adds an empty signature <END>
<BEG> this be the most simple way to change a pdf into a portable collection <END>
<BEG> sets the document 's compression to the new 1 5 mode with object stream and xref stream <END>
<BEG> applies a digital signature to a document <SEG> possibly a a new revision <SEG> make possible multiple signature <END>
<BEG> writes the stream length to the < code > pdfwriter < code > <END>
<BEG> returns the < code > string < code > value of this < code > pdfstring < code > -object <END>
<BEG> returns the unicode < code > string < code > value of this < code > pdfstring < code > -object <END>
<BEG> add kid to structuretreeroot from structtreeroot <END>
<BEG> maps the user tag to the standard tag <END>
<BEG> gets the reference this object will be write to <END>
<BEG> gets the first entarance of attribute <END>
<BEG> sets a dictionary with extra entry <SEG> for instance measure <END>
<BEG> determining whether the object within the stack be composited with one another or only with the group 's backdrop <END>
<BEG> converts a pfm file into an afm file <END>
<BEG> given the title t of a reference <SEG> return the associated reference param name a string contain the path return a reference to the field <SEG> or null <END>
<BEG> after read <SEG> we index all of the field <END>
<BEG> merge field attribute from two dictionary param parent one dictionary param child the other dictionary return a merge dictionary <END>
<BEG> stack a level of dictionary <END>
<BEG> sets the data associate with the stream <SEG> either compress or uncompressed <END>
<BEG> sets the data associate with the stream <SEG> as-is <END>
<BEG> this method be for compatibility with old code <END>
<BEG> access an unsigned byte at location index <END>
<BEG> param name character set eci encode name return { link characterseteci } represent eci for character encoding <SEG> or null if it be legal but unsupported <END>
<BEG> param bit int contain the two bit encode a qr code 's error correction level return { link errorcorrectionlevel } represent the encoded error correction level <END>
<BEG> param maskedformatinfo1 format info indicator <SEG> with mask still apply param maskedformatinfo2 second copy of same info ; both be check at the same time to establish best match return information about the format it specify <SEG> or < code > null < code > if do n't seem to match any known pattern <END>
<BEG> returns the crl bytes the parameter be ignore <END>
<BEG> fetches the crl bytes from an url <END>
<BEG> verifies if a a valid crl be find for the certificate <END>
<BEG> creates a messagedigest object that can be use to create a hash <END>
<BEG> creates a hash use a specific digest algorithm and a provider <END>
<BEG> returns the id of a digest algorithm that be allow in pdf <SEG> or null if it be n't allow <END>
<BEG> gets the algorithm name for a certain id <END>
<BEG> allows new oid to be add <END>
<BEG> loads the default root certificate at & lt ; java home & gt ; lib security cacerts <END>
<BEG> signs a document with a pades-ltv timestamp <END>
<BEG> verifies all the document-level timestamps and all the signature in the document <END>
<BEG> gets an encoded byte array with ocsp validation <END>
<BEG> returns the name of the digest algorithm <SEG> e g <END>
<BEG> verify the digest <END>
<BEG> returns the encryption algorithm return the name of an encryption algorithm <END>
<BEG> sets the signature create property in the prop_build dictionary 's app dictionary param name <END>
<BEG> returns the encryption algorithm use for sign <END>
<BEG> signs it use the encryption algorithm in combination with the digest algorithm <END>
<BEG> sets the key store against which a certificate can be check <END>
<BEG> a single string explain which certificate be verify <SEG> how and why <END>
<BEG> removes the bookmark entry for a number of page range <END>
<BEG> for the page in range add the < code > pageshift < code > to the page number <END>
<BEG> exports the bookmark to xml <END>
<BEG> import the name from xml <END>
<BEG> does the actual work of subsetting the font <END>
<BEG> reads a < code > string < code > from the font file a byte use the cp1252 encoding <END>
<BEG> creates a tounicode cmap to allow copy and paste from acrobat <END>
<BEG> gets an hex string in the format & lt ; hhhh & gt ; <END>
<BEG> generates the cidfonttyte2 dictionary <END>
<BEG> the method use to sort the metric array <END>
<BEG> returns a pdfstream object with the full font program <END>
<BEG> a forbidden operation <END>
<BEG> gets the glyph index and metric for a character <END>
<BEG> defines a glyph <END>
<BEG> always return null <SEG> because you ca n't get the fontstream of a type3 font <END>
<BEG> adds a < code > phrase < code > to the current text array <END>
<BEG> sets the separation between the vertical line <END>
<BEG> creates a line from the chunk array <END>
<BEG> normalizes the list of chunk when the line be accept <END>
<BEG> outputs the line to the document <END>
<BEG> sets the new text origin <END>
<BEG> gets the x coordinate where the next line will be write <END>
<BEG> sets the height of the line param height the new height <END>
<BEG> return the xfa object <SEG> could be an array <SEG> could be a stream <END>
<BEG> serializes a xml document to a byte array <END>
<BEG> gets the top level dom document <END>
<BEG> finds the complete som name contain in the datasets section from a possibly partial name <END>
<BEG> gets all the text contain in the child node of this node <END>
<BEG> sets the < code > pdfreader < code > to be use by this instance <END>
<BEG> gets the class that contain the template processing section of the xfa <END>
<BEG> sets the class that contain the template processing section of the xfa param templatesom the class that contain the template processing section of the xfa <END>
<BEG> gets the class that contain the classic field process <END>
<BEG> gets the < code > node < code > that correspond to the datasets part <END>
<BEG> replaces the data under datasets data <END>
<BEG> gets document to sign <END>
<BEG> gets the field value for a list or < code > null < code > if the field do not exist or have no value define <END>
<BEG> called when a start tag be find <END>
<BEG> sets the certificate use to provide the text in the appearance <END>
<BEG> sets the signature date <END>
<BEG> constructor for xpath expression in case sign only part of xml document <END>
<BEG> normalizes the rectangle <END>
<BEG> enables disables the border on the specify side <END>
<BEG> sets a parameter indicate if the rectangle have variable border param usevariableborders indication if the rectangle have variable border <END>
<BEG> enables the border on the specified side <END>
<BEG> sets the width of the left border param borderwidthleft a width <END>
<BEG> sets the color of the left border <END>
<BEG> sets the color of the right border param bordercolorright a < code > basecolor < code > <END>
<BEG> copies each of the parameter <SEG> except the position <SEG> from a < code > rectangle < code > object param rect < code > rectangle < code > to copy from <END>
<BEG> copies each of the parameter <SEG> except the position <SEG> from a < code > rectangle < code > object if the value be set there <END>
<BEG> return string version of the most important rectangle property see java lang object # tostring <END>
<BEG> non-javadoc see com itextpdf text element # process com itextpdf text elementlistener <END>
<BEG> return { link element # writable_direct } <END>
<BEG> translates an entity to a unicode character <END>
<BEG> translates a string with entity & ; to a string without entity <SEG> replace the entity with the right unicode character <END>
<BEG> non-javadoc see com itextpdf text xml simpleparser newlinehandler # isnewlinetag java lang string <END>
<BEG> gets the java encode from the iana encoding <END>
<BEG> creates a string that can be use in an xmpschema <END>
<BEG> adds the producer <END>
<BEG> adds the meta data date <END>
<BEG> replaces the content of a tag <END>
<BEG> writes the document to a byte array <END>
<BEG> processes a property param buf param p <END>
<BEG> param key param value return the previous property null if there be n't one <END>
<BEG> param content return an escaped string deprecate use xmlutil escapexml string s <SEG> boolean onlyascii instead <END>
<BEG> simplifies the construction of an ordered array by not require that you pre-create an empty array <END>
<BEG> set the char-number param zn a char-number <END>
<BEG> param iso8601string a date string that be iso 8601 conform <END>
<BEG> converts a < code > calendar < code > into an iso 8601 string <END>
<BEG> asserts that an array name be set <END>
<BEG> asserts that a prefix be set <END>
<BEG> asserts that any string parameter be set <END>
<BEG> asserts that the xmp object be of this implemention { link xmpmetaimpl } <END>
<BEG> each of these parse method be responsible for recognize an rdf syntax production and add the appropriate structure to the xmp tree <END>
<BEG> see xmpdatetime # getyear <END>
<BEG> see comparable # compareto object <END>
<BEG> see xmpdatetime # settimezone timezone <END>
<BEG> return returns the iso string representation <END>
<BEG> see xmpiterator # skipsubtree <END>
<BEG> return exposes the option for inner class <END>
<BEG> param basens set the basens from the inner class <END>
<BEG> parses the input source into an xmp metadata object <SEG> include de-aliasing and normalisation <END>
<BEG> param index an index [ 1 size ] return returns the child with the requested index <END>
<BEG> adds a node a child to this node <END>
<BEG> replaces a node with another one <END>
<BEG> removes the child list if this node have no child anymore ; check if the provided node be a schema node and do n't have any child anymore <SEG> it delete <END>
<BEG> param expr child node name to look for return returns an < code > xmpnode < code > if node have be find <SEG> < code > null < code > otherwise <END>
<BEG> appends a qualifier to the qualifier list and set respective option <END>
<BEG> removes all qualifier from the node and set the option appropriate <END>
<BEG> param expr qualifier node name to look for return returns a qualifier < code > xmpnode < code > if node have be find <SEG> < code > null < code > otherwise <END>
<BEG> return returns whether the node have child <END>
<BEG> return returns an iterator for the child <END>
<BEG> renders this node and the tree unter this node in a human readable form <END>
<BEG> updates the option of the node <END>
<BEG> param implicit sets the implicit node flag <END>
<BEG> param alias set the flag that the node be an alias <END>
<BEG> sets the parent node <SEG> this be solely do by < code > addchild < code > and < code > addqualifier < code > <END>
<BEG> deletes the the give node and it child from it parent <END>
<BEG> this be set the value of a leaf node <END>
<BEG> make sure the x-default item be first <END>
<BEG> see if an array be an alt-text array <END>
<BEG> looks for the appropriate language item in a text alternative array item param arraynode an array node param language the requested language return returns the index if the language have be find <SEG> -1 otherwise <END>
<BEG> normalizes a raw parse xmpmeta-object param xmp the raw metadata object param option the parsing option return returns the normalized metadata object throw xmpexception collects all severe processing error <END>
<BEG> checks if the supply option be consistent <END>
<BEG> param index the index of the segment to return return returns a path segment <END>
<BEG> serializes the normalized xmp-path <END>
<BEG> split an xmppath expression apart at the conceptual step <SEG> add the root namespace prefix to the first property component <END>
<BEG> creates an < code > xmpdatetime < code > from a < code > calendar < code > -object <END>
<BEG> sets the local time zone without touch any other any exist time zone value be replace <SEG> the other date time field be not adjust in any way <END>
<BEG> make sure a time be utc <END>
<BEG> return returns an empty < code > xmpmeta < code > -object <END>
<BEG> serializes an < code > xmpmeta < code > -object a rdf into an < code > outputstream < code > <END>
<BEG> resets the schema registry to it original state create a new one <END>
<BEG> compose the path expression for an item in an array <END>
<BEG> converts a string value to an < code > xmpdatetime < code > <END>
<BEG> convert from < code > xmpdatetime < code > to string <END>
<BEG> convert from a byte array to a base64 encode string <END>
<BEG> rg set the stroke colour space to devicergb and set the colour to use for stroke operation <END>
<BEG> this will get the name of the operator <END>
<BEG> this be the special case for the id operator where there be just random byte inlined the stream <END>
<BEG> this will set the image data <SEG> this be only use for the id operator <END>
<BEG> this will get the image parameter <SEG> this be only valid for bi operator <END>
<BEG> this will add all object to this array <END>
<BEG> this will get an object from the array <END>
<BEG> set the value in the array a an integer <END>
<BEG> set the state true <SEG> if the dictionary should be write a a direct object and not indirect <END>
<BEG> this will get the boolean value <END>
<BEG> this will write this object out to a pdf stream <END>
<BEG> this be a special case of getdictionaryobject that take multiple key <SEG> it will handle the situation where multiple key could get the same value <SEG> ie if either cs or colorspace be use to get the colorspace <END>
<BEG> this will set an item in the dictionary <END>
<BEG> this be a convenience method that will get the dictionary object that be expect to be a cosboolean and convert it to a primitive boolean <END>
<BEG> this will add all of the dictionary key value to this dictionary <END>
<BEG> this will output this string a a pdf object <END>
<BEG> this factory method will get the appropriate number object <END>
<BEG> this will get the dictionary object in this object that have the name key and if it be a pdfobjref then it will dereference that and return it <END>
<BEG> this will get the dictionary object in this object that have the name key <END>
<BEG> returns the give string encode with pdfdocencoding <END>
<BEG> returns true if the give character be available in pdfdocencoding <END>
<BEG> this will set the line length that will be use <END>
<BEG> when decode an image <SEG> the part of the image that should be decode <SEG> or null if the entire image be need <END>
<BEG> sets the region of the source image that should be decode <END>
<BEG> when decode an image <SEG> the number of column to advance in the source for every pixel decode <END>
<BEG> sets the number of column to advance in the source for every pixel decode param ssx the x-axis subsampling value <END>
<BEG> when decode an image <SEG> the horizontal offset for subsampling return the x-axis subsampling offset <END>
<BEG> sets the horizontal subsampling offset for decode image param ssoffsetx the x-axis subsampling offset <END>
<BEG> flag use by the filter to specify if it perform subsampling <END>
<BEG> used internally by filter to signal they have apply subsampling a request by this option instance <END>
<BEG> returns the stream parameter <SEG> repair use the embedded stream data <END>
<BEG> returns the embedded jpx color space <SEG> if any <END>
<BEG> setups buffer memory usage to only use main-memory with the defined maximum <END>
<BEG> setups buffer memory usage to only use temporary file s no main-memory with the specify maximum size <END>
<BEG> returns a copy of this instance with the maximum memory storage restriction divide by the provided number of parallel us <END>
<BEG> sets directory to be use for temporary file <END>
<BEG> returns < code > true < code > if maximum main memory be restrict to a specific number of byte <END>
<BEG> returns maximum size of main-memory in byte to be use <END>
<BEG> returns maximum size of storage byte to be use main-memory in temporary file all together <END>
<BEG> returns directory to be use for temporary file or < code > null < code > if it be not set <END>
<BEG> checks if this page handler have already be close <END>
<BEG> this will get the current position in the stream <END>
<BEG> this will tell if we be on a newline <END>
<BEG> this will set a flag tell if we be on a newline <END>
<BEG> this will write a crlf to the stream <END>
<BEG> this will write the pdf document <END>
<BEG> this will return a null entry : 0000000000 65535 f return null coswriterxrefentry <END>
<BEG> gets the xref 'free ' attribute <END>
<BEG> the offset attribute <END>
<BEG> this will return the underlying cosarray <END>
<BEG> returns the c0 value of the function <SEG> 0 if empty <END>
<BEG> returns all function value a cosarray <END>
<BEG> returns the operator set use by this execution context <END>
<BEG> pops a number int or real from the stack <END>
<BEG> pops a value of type int from the stack <END>
<BEG> pops a number from the stack and return it a a real value <END>
<BEG> add a name ex <END>
<BEG> adds an int value <END>
<BEG> adds a real value <END>
<BEG> returns the instruction sequence that have be build from the syntactic element <END>
<BEG> parses the give text into an instruction sequence represent a type 4 function that can be execute <END>
<BEG> get the type of this object <SEG> should always return objstm <END>
<BEG> returns the numbering style for this page range <END>
<BEG> returns the start value for page numbering in this page range <END>
<BEG> returns the page label prefix for this page range <END>
<BEG> this will get the minimum value of the range <END>
<BEG> this will get the underlying array for this rectangle <END>
<BEG> sets the structure element <END>
<BEG> notifies the attribute object change listener if the attribute be change <END>
<BEG> notifies the attribute object change listener about a change in this attribute object <END>
<BEG> creates a string representation of an object array <END>
<BEG> tells if this be a tagged pdf <END>
<BEG> tells if this pdf contain 'suspect ' tag <END>
<BEG> returns the revision number r <END>
<BEG> returns the string for the property value <END>
<BEG> shall the property be hide ? <END>
<BEG> specifies whether the property shall be hide <END>
<BEG> adds an object with a specified revision number <END>
<BEG> sets the revision number of a specified object <END>
<BEG> set the color space instance for this box style <END>
<BEG> set the guideline width <END>
<BEG> set the line dash pattern associate with this box style <END>
<BEG> gets the number of row in the enclosing table that shall be span by the cell rowspan <END>
<BEG> gets the header headers <END>
<BEG> sets the scope scope <END>
<BEG> gets the summary of the table ’ s purpose and structure <END>
<BEG> gets the colour for the before edge <END>
<BEG> gets the alternate name of the field desc <END>
<BEG> the return an integer represent the access permission <END>
<BEG> this will tell if the user can print <END>
<BEG> set if the user can print <END>
<BEG> this will tell if the user can modify content of the document <END>
<BEG> set if the user can modify the document <END>
<BEG> this will tell if the user can extract text and image from the pdf document <END>
<BEG> set if the user can extract content from the document <END>
<BEG> set if the user can add or modify text annotation and fill in interactive form field and <SEG> if { link # canmodify canmodify } return true <SEG> create or modify interactive form field include signature field <END>
<BEG> this will tell if the user can extract text and image from the pdf document for accessibility purpose <END>
<BEG> set if the user can extract content from the document for accessibility purpose <END>
<BEG> this will tell if the user can insert rotate delete page <END>
<BEG> set if the user can insert rotate delete page <END>
<BEG> this will tell if the user can print the document in a degraded format <END>
<BEG> set if the user can print the document in a degraded format <END>
<BEG> this will return the length entry of the crypt filter dictionary < br > < br > the length in < b > bits < b > for the crypt filter algorithm <END>
<BEG> this will set the number of bit to use for the encryption algorithm <END>
<BEG> this will return the length entry of the encryption dictionary < br > < br > the length in < b > bits < b > for the encryption algorithm <END>
<BEG> set the length in bit of the secret key that will be use to encrypt document data <END>
<BEG> get the length of the secrete key that will be use to encrypt document data <END>
<BEG> removes a recipient from the recipient list <END>
<BEG> returns an iterator to browse the list of recipient <END>
<BEG> returns the decryption certificate <END>
<BEG> sets the decryption certificate param decryptioncertificate the new decryption certificate <END>
<BEG> returns the x509 certificate of the recipient <END>
<BEG> returns the access permission grant to the recipient <END>
<BEG> this will reset the key to be use <END>
<BEG> this will encrypt and write the next byte <END>
<BEG> return the { code saslprep } -canonicalised version of the give code str } for use a a stored string <END>
<BEG> set the provider to be use for advanced encrypting decrypt <END>
<BEG> sets the access permission param permission the new access permission <END>
<BEG> sets the owner password param ownerpassword the new owner password <END>
<BEG> set a unique name for an annotation <END>
<BEG> this will set the scale option for the icon <END>
<BEG> this be guarantee to never return null < br > to quote the pdf spec an array of two number between 0 0 and 1 0 indicate the fraction of leftover space to allocate at the left and bottom of the icon <END>
<BEG> this will tell if the icon should scale to fit the annotation bound <END>
<BEG> this will tell the icon to scale <END>
<BEG> this will get the file specification of this reference <END>
<BEG> this will set the file specification for this name page reference <END>
<BEG> this will get a list of fdftemplage object that describe the name page that serve a template <END>
<BEG> this will get the fdf page info object <END>
<BEG> this will get a list of field that be part of this template <END>
<BEG> this will set a list of field for this template <END>
<BEG> this will set if the field can be rename <END>
<BEG> returns the differences array <END>
<BEG> returns the panose entry of the style dictionary <SEG> if any <END>
<BEG> the font family class and subclass id bytes <SEG> give in the sfamilyclass field of the “ os 2 ” table in a truetype font <END>
<BEG> ten byte for the panose classification number for the font <END>
<BEG> creates a blend composite param blendmode desired blend mode param constantalpha constant alpha <SEG> must be in the inclusive range [ 0 0 1 0 ] or it will be clip <END>
<BEG> determines the blend mode from the bm entry in the cos extgstate <END>
<BEG> returns the component of this color value <END>
<BEG> returns the pattern name from this color value <END>
<BEG> returns true if this color value be a pattern <END>
<BEG> sets the list of colorants param names the list of colorants <END>
<BEG> this will get the alternate color space for this separation <END>
<BEG> this will set the alternate color space <END>
<BEG> this will get the tint transform function <END>
<BEG> returns the devicen process dictionary <SEG> or null if it be miss <END>
<BEG> returns true if this be an nchannel pdf 1 6 color space <END>
<BEG> returns the process color space return the process color space throw ioexception if the color space can not be read <END>
<BEG> convert this standard java object to a cos object <END>
<BEG> this will get the valid range for the a component <END>
<BEG> this will set the b range for this color space <END>
<BEG> returns the underlying color space <SEG> if this be an uncolored tiling pattern <SEG> otherwise null <END>
<BEG> sets the tint transform function <END>
<BEG> returns the group color space or null if it be n't define <END>
<BEG> get a list of optional content group <END>
<BEG> returns the first optional content group of the give name <END>
<BEG> sets the base state for optional content group <END>
<BEG> indicates whether a particular optional content group be find in the pdf file <END>
<BEG> indicates whether < em > at least one < em > optional content group with this name be enable <END>
<BEG> enables or disables all optional content group with the give name <END>
<BEG> this will get the external graphic state for this pattern <END>
<BEG> returns the dash phase <END>
<BEG> get level parameter return level <END>
<BEG> this will get the optional matrix of a function base shading <END>
<BEG> this will get the type of pdf object that the action dictionary describes <END>
<BEG> this will get the type of action that the action dictionary describes <END>
<BEG> this will create the correct type of action base on the type specify in the dictionary <END>
<BEG> this will get the destination to jump to <END>
<BEG> param t annotation or annotation <END>
<BEG> param h hide flag <END>
<BEG> this will get the file in which the destination be locate <END>
<BEG> this will get the name of the action to be perform <END>
<BEG> an array identify which field to include in the submission or which to exclude <SEG> depend on the setting of the include exclude flag in the flags entry return the array of field <END>
<BEG> a set of flag specify various characteristic of the action return the flag <END>
<BEG> param flag the flag <END>
<BEG> param d the destination <END>
<BEG> get the f action <END>
<BEG> this will get an action to be perform when the cursor enter the annotation 's active area <END>
<BEG> this will get an action to be perform when the page contain the annotation become visible in the viewer application 's user interface <END>
<BEG> this will get a javascript action to be perform when the user type a keystroke into a text field or combo box or modify the selection in a scrollable list box <END>
<BEG> this will get a javascript action to be perform before the field be format to display it current value <END>
<BEG> this will get a javascript action to be perform when the field 's value be change <END>
<BEG> this will get a javascript action to be perform in order to recalculate the value of this field when that of another field change <END>
<BEG> get the name of the file a find in the embeddedfiles name tree <END>
<BEG> get the target directory <END>
<BEG> this will get the base uri to be use in resolve relative uri reference <END>
<BEG> the file to launch <END>
<BEG> the dir to launch from <END>
<BEG> set the operation to perform param op the operation to perform on the file <END>
<BEG> a parameter to pass the executable <END>
<BEG> set the parameter to pass the executable <END>
<BEG> this will set the sub type and hence appearance <SEG> ap take precedence for this annotation <END>
<BEG> this will set the normal appearance when there be only one appearance to be show <END>
<BEG> this will set the border effect <SEG> see the style_ constant for valid value <END>
<BEG> this will retrieve the border width in point <SEG> 0 = no border <END>
<BEG> this will set the dash style use for draw the border <END>
<BEG> return the subtype of the external data dictionary <END>
<BEG> this will set the subtype of the external data dictionary <END>
<BEG> a build data dictionary for the signature handler that be use to create the parent signature <END>
<BEG> set the build data dictionary for the signature handler <END>
<BEG> a build data dictionary for the pubsec software module that be use to create the parent signature <END>
<BEG> set the build data dictionary for the pubsec software module <END>
<BEG> set the build data dictionary for the view application software module <END>
<BEG> the name of the software module that be use to create the signature <END>
<BEG> the build date of the software module <END>
<BEG> a text string indicate the version of the application implementation <SEG> a describe by the < code > name < code > attribute in this dictionary <END>
<BEG> the software module revision number <SEG> correspond to the date attribute <END>
<BEG> the software module revision number <SEG> use to determinate the minimum version of software that be require in order to process this signature <END>
<BEG> indicates the operating system <END>
<BEG> if there be a legalpdf dictionary in the catalog of the pdf file and the nonembeddedfonts attribute in this dictionary have a non zero value <SEG> and the viewing application have a preference set to suppress the display of this warning then the value of this attribute will be set to true <END>
<BEG> if true <SEG> the reader should not display a warning about font not be embed <END>
<BEG> if true <SEG> the application be in trusted mode when sign take place <END>
<BEG> set true if the filter shall be require <END>
<BEG> set true if the v entry shall be require <END>
<BEG> if < b > filter < b > be not null and the { link # isfilterrequired } indicate this entry be a required constraint <SEG> then the signature handler specify by this entry shall be use when sign ; otherwise <SEG> sign shall not take place <END>
<BEG> optional the signature handler that shall be use to sign the signature field <END>
<BEG> an array of name indicate acceptable digest algorithm to use when signing <END>
<BEG> the minimum required capability of the signature field seed value dictionary parser <END>
<BEG> optional the minimum required capability of the signature field seed value dictionary parser <END>
<BEG> if the reasons array be provide and { link # isreasonrequired } indicate that reasons be a required constraint <SEG> one of the reason in the array shall be use for the signature dictionary ; otherwise sign shall not take place <END>
<BEG> < p > optional ; pdf 1 6 a dictionary contain a single entry whose key be p and whose value be an integer between 0 and 3 <END>
<BEG> optional a certificate seed value dictionary contain information about the certificate to be use when sign <END>
<BEG> < p > optional ; pdf 1 6 a time stamp dictionary contain two entry <END>
<BEG> return string of the url return the url <END>
<BEG> optional a url <SEG> the use for which be define by the urltype entry <END>
<BEG> sets if a timestamp be reuqired or not <END>
<BEG> sets the name of the person or authority sign the document <END>
<BEG> a flag indicate if this page destination should just fit bound box of the pdf <END>
<BEG> set if this page destination should just fit the bounding box <END>
<BEG> get the left x coordinate <END>
<BEG> set the left x-coordinate <SEG> a value of -1 implies that the current x-coordinate will be use <END>
<BEG> set the top y-coordinate <SEG> value 0 or -1 imply that the current y-coordinate will be use <END>
<BEG> set the zoom value for the page <SEG> value 0 or -1 imply that the current zoom will be use <END>
<BEG> return the parent of this node or null if there be no parent <END>
<BEG> return true if the node have at least one child <END>
<BEG> set the open count <END>
<BEG> return true if this node count be great than zero <SEG> false otherwise <END>
<BEG> the count parameter need to be update when you add <SEG> remove <SEG> open or close outline item <END>
<BEG> return an { link iterable } view of the item child <END>
<BEG> this will return the type of the measure dictionary <END>
<BEG> this will return the value indication if the denominator of the fractional value be reduce truncated <END>
<BEG> this will return the text to be use between order of thousand in display of numerical value <END>
<BEG> this will return the text to be use a the decimal point in display numerical value <END>
<BEG> this will return the text to be concatenate to the left of the label specify by u <END>
<BEG> this will return a value indicate the ordering of the label specify by u to the calculated unit value <END>
<BEG> this will return the change along the x-axis <END>
<BEG> this will return the sloaps of a line <END>
<BEG> get the first bead in the thread <SEG> or null if it have not be set yet <END>
<BEG> this will set the first bead in the thread <END>
<BEG> return the style for this transition see pdtransitionstyle # valueof string <END>
<BEG> return the dimension in which the specify transition effect shall occur or the default { link pdtransitiondimension # h } if no dimension be find <END>
<BEG> sets the dimension in which the specify transition effect shall occur <END>
<BEG> return the direction of motion for the specified transition effect or the default { link pdtransitionmotion # i } if no motion be find <END>
<BEG> sets the direction of motion for the specified transition effect <END>
<BEG> return the duration in second of the transition effect or the default 1 if no duration be find <END>
<BEG> param duration the duration of the transition effect <SEG> in second <END>
<BEG> return the starting or end scale at which the change shall be draw or the default 1 if no scale be find <END>
<BEG> param scale the starting or end scale at which the change shall be draw <END>
<BEG> return true if the area that shall be fly in be rectangular and opaque <END>
<BEG> param opaque if true <SEG> the area that shall be fly in be rectangular and opaque <END>
<BEG> set the menubar preference <END>
<BEG> get the window ui preference <END>
<BEG> set the fit window preference <END>
<BEG> get the display doc title preference <END>
<BEG> get the non full screen page mode preference <END>
<BEG> returns the string value <SEG> a use in a pdf file <END>
<BEG> this will get the key of all metadata information field for the document <END>
<BEG> this will get the value of a custom metadata information field for the document <END>
<BEG> returns the destination correspond to the parameter <END>
<BEG> converts a calendar to a string format a : d : yyyymmddhhmmss # hh'mm ' where # be z <SEG> + <SEG> or - <END>
<BEG> return the most specific value store for this byte sequence <END>
<BEG> store the give value at the specified path <END>
<BEG> sets the default value to use in { link bytetrie # find byte [ ] } when no path match <END>
<BEG> gets the maximum depth store in this trie <END>
<BEG> examines the a file 's first byte and estimate the file 's type <END>
<BEG> sorts the give list use the give comparator <END>
<BEG> returns a new vector scale by both x and y <END>
<BEG> this method be deprecate <SEG> use the equivalent method { link # stream } instead <END>
<BEG> this method be deprecate <SEG> use the equivalent method { link # stream blanknodeoriri <SEG> iri <SEG> rdfterm } instead <END>
<BEG> set of < a href= http : tool ietf org html rfc2046 > iana medium type < a > that cover this rdf syntax <SEG> include any non-official medium type <END>
<BEG> set of file extension for this rdf syntax <SEG> include any non-official extension <END>
<BEG> return the rdf 1 1 serialization syntax <END>
<BEG> return the rdfsyntax with the specified medium type <END>
<BEG> return the rdfsyntax with the specify { link # name } <END>
<BEG> answer the string describe by the value of the unique optional < code > classproperty < code > property of < code > root < code > <SEG> or null if there 's no such property <END>
<BEG> answer the model < code > m < code > after fill it with the content describe by this object <END>
<BEG> answer the root object whose model-filling be abort <END>
<BEG> xxx <END>
<BEG> answer a nice representation of < code > r < code > <SEG> suitable for appearance within an exception message <END>
<BEG> answer the assembler that can not do the construction <END>
<BEG> answer the allege most-specific type of the object that could not be construct <END>
<BEG> answer the required property <END>
<BEG> answer true if the object < code > root < code > with the give < code > name < code > can be create if it do not already exist <END>
<BEG> answer a new model which be the aggregation of < ul > < li > the statement of < code > model < code > < li > the non-bnode subclass statement of < code > schema < code > < li > the subclass closure of those statement < li > the rdf : type statement imply by the rdfs : domain statement of < code > schema < code > and the < code > model < code > statement use that statement property < li > similarly for rdfs : range < li > the rdf : type statement imply by the subclass closure < ul > <END>
<BEG> do limit subclass closure on < code > m < code > <END>
<BEG> return the uri which be the label for this datatype <END>
<BEG> parse a lexical form of this datatype to a value throw datatypeformatexception if the lexical form be not legal <END>
<BEG> compares two instance of value of the give datatype <END>
<BEG> equality for datatypes base solely on lexical form <SEG> i e <END>
<BEG> default implementation of gethashcode delegate to the default from the literal label <END>
<BEG> helper function to compare language tag value <END>
<BEG> return the single global instance of the typemapper <END>
<BEG> version of gettypebyname which will treat unknown uris a typed literal but with just the default implementation < p > rdf 1 1 : null for { code uri } return null and it will mean { code xsd : string } because plain literal no lang tag and xsd : string be now the same <END>
<BEG> lookup a know datatype <END>
<BEG> list all the know datatypes <END>
<BEG> convert a serialize a value of this datatype out to lexical form <END>
<BEG> to check the lexical form we construct a dummy rdf xml document and parse it with arp <END>
<BEG> test whether the give object be a legal value form of this datatype <END>
<BEG> convert a value of this datatype to lexical form <END>
<BEG> check for whitespace violation <END>
<BEG> convert a value of this datatype out to lexical form <END>
<BEG> return the number of second in the duration <SEG> include fractional part <END>
<BEG> return the number of second in the duration <SEG> include the fractional part <SEG> in a lossless but expensive notation - i e <END>
<BEG> equality function value base <END>
<BEG> return _true_ iff this polymorphic object support the specified interface <END>
<BEG> answer a polymorphic object that present < i > this < i > in a way which satisfy type t param t a type return a polymorphic instance <SEG> possibly but not necessarily this <SEG> that conform to t <END>
<BEG> answer true iff this polymorphic object already have a valid view of type < code > t < code > in it ring so a ing it do n't need to construct a new object <END>
<BEG> add another view for this object <END>
<BEG> answer the class that the node could n't be polymorphed to <END>
<BEG> answer the node that could n't be polymorphed <END>
<BEG> prints all of the constant to standard output <END>
<BEG> get a default instance of schemadvfactory implementation <END>
<BEG> decodes base64 data into octects param encode string contain base64 data return array containind decode data <END>
<BEG> remove whitespace from mime contain encode base64 data <END>
<BEG> the number of < code > byte < code > s in the list <END>
<BEG> checks if the < code > byte < code > < code > item < code > be a member of this list <END>
<BEG> encode a byte array to hex string param binarydata array of byte to encode return return encode string <END>
<BEG> decode hex string to a byte array param encode encoded string return return array of byte to encode <END>
<BEG> returns true if the two validatedinfo object can be compare in the same value space <END>
<BEG> returns < code > true < code > if the character at start be ' z ' <SEG> '+ ' or '- ' <END>
<BEG> given { year <SEG> month } compute maximum number of day for give month param year param month return integer containg the number of day in a give month <END>
<BEG> get all built-in simple type <SEG> which be store in a hashtable key by the name return a hashtable which contain all built-in simple type <END>
<BEG> implementation internal <END>
<BEG> parses <SEG> validates and computes normalized version of datetime object param str the lexical representation of datetime object ccyy-mm-dd with possible time zone z or - <SEG> + hh : mm return normalize datetime representation exception schemadatetimeexception invalid lexical representation <END>
<BEG> parses <SEG> validates and computes normalized version of gday object param str the lexical representation of gday object -- -dd with possible time zone z or - <SEG> + hh : mm pattern : -- - \\d\\d z| [ -+ ] \\d\\d : \\d\\d ? <END>
<BEG> converts gday object representation to string param date gday object return lexical representation of gday : -- -dd with an optional time zone sign <END>
<BEG> returns true if it 's possible that the give string represent a valid floating point value exclude nan <SEG> inf and -inf <END>
<BEG> parses <SEG> validates and computes normalized version of gmonthday object param str the lexical representation of gmonthday object -- mm-dd with possible time zone z or - <SEG> + hh : mm return normalize date representation exception schemadatetimeexception invalid lexical representation <END>
<BEG> non-javadoc see org apache xerces impl dv x typevalidator # getallowedfacets <END>
<BEG> converts year object representation to string param date year object return lexical representation of month : ccyy with optional time zone sign <END>
<BEG> turns check for id idref error on and off <END>
<BEG> adds the id <SEG> if id idref checking be enable <END>
<BEG> each validator should call this method to add it validationstate into the validation manager <END>
<BEG> set the information require to validate entity value <END>
<BEG> return -1 if < var > iterator < var > do not contain this pattern <END>
<BEG> return a list of code point character not include the input value that can be substitute in a case insensitive match <END>
<BEG> return the number of regular expression group <END>
<BEG> return a start position in the target text match to specify regular expression group <END>
<BEG> return an substring of the target text match to specify regular expression group <END>
<BEG> return -1 if location information be not available <END>
<BEG> this range be sort <END>
<BEG> param tok ignore whether it be nrange or not <END>
<BEG> for range : creates complement <END>
<BEG> the number of < code > objects < code > in the list <END>
<BEG> checks if the < code > unsigned short < code > < code > item < code > be a member of this list <END>
<BEG> returns the < code > index < code > th item in the collection <END>
<BEG> < p > create a new instance of an < code > xmlgregoriancalendar < code > < p > < p > all date time datatype field set to { link datatypeconstants # field_undefined } or null < p > return new < code > xmlgregoriancalendar < code > with all date time datatype field set to { link datatypeconstants # field_undefined } or null <END>
<BEG> < p > create a new xmlgregoriancalendar by parse the string a a lexical representation < p > < p > parsing the lexical string representation be define in < a href= http : www w3 org tr xmlschema-2 # datetime-order > xml schema 1 0 part 2 <SEG> section 3 2 <END>
<BEG> < p > create an < code > xmlgregoriancalendar < code > from a { link gregoriancalendar } < p > < table border= 2 rules= all cellpadding= 2 > < thead > < tr > < th align= center colspan= 2 > field by field conversion from { link gregoriancalendar } to an { link xmlgregoriancalendar } < th > < tr > < tr > < th > < code > java util gregoriancalendar < code > field < th > < th > < code > javax xml datatype xmlgregoriancalendar < code > field < th > < tr > < thead > < tbody > < tr > < td > < code > era == gregoriancalendar bc ? <END>
<BEG> < p > computes a new duration whose value be < code > this+rhs < code > < p > < p > for example <SEG> < p > < pre > 1 day + -3 day = -2 day 1 year + 1 day = 1 year and 1 day - 1 hour<SEG>50 minute + -20 minute = - 1 hours<SEG>70 minute 15 hour + -3 day = - 2 days<SEG>9 hour 1 year + -1 day = illegalstateexception < pre > < p > since there 's no way to meaningfully subtract 1 day from 1 month <SEG> there be case where the operation fail in { link illegalstateexception } < p > < p > formally <SEG> the computation be define a follow < p > < p > firstly <SEG> we can assume that two { link duration } s to be add be both positive without lose generality i e <SEG> < code > -x +y=y-x < code > <SEG> < code > x+ -y =x-y < code > <SEG> < code > -x + -y =- x+y < code > < p > addition of two positive { link duration } s be simply define a field by field addition where miss field be treat a 0 <END>
<BEG> < p > compute < code > value signum < code > where < code > value==null < code > be treat a < code > value==0 < code > < p > <END>
<BEG> returns a new { link duration } object whose value be < code > -this < code > <END>
<BEG> adds this duration to a { link calendar } object <END>
<BEG> pushes a value onto the stack <END>
<BEG> peeks at the top of the stack <END>
<BEG> get the number of key value pair store in this table <END>
<BEG> make a clone of this object <END>
<BEG> remove all key value assocaition <END>
<BEG> returns a hashcode value for the specified symbol information <END>
<BEG> get the scheme-specific part for this uri everything follow the scheme and the first colon <END>
<BEG> get the query string for this uri <END>
<BEG> < p > set the host for this uri <END>
<BEG> append to the end of the path of this uri <END>
<BEG> determines if the passed-in object be equivalent to this uri <END>
<BEG> get the uri a a string specification <END>
<BEG> returns whether this uri represent an absolute uri <END>
<BEG> determine whether a scheme conform to the rule for a scheme name <END>
<BEG> determine whether a string be syntactically capable of represent a valid ipv4 address <SEG> ipv6 reference or the domain name of a network host <END>
<BEG> < p > determines whether a string be an ipv6 reference a define by rfc 2732 <SEG> where ipv6address be define in rfc 2373 <END>
<BEG> returns true if the specified character be a space character a amdended in the xml 1 1 specification <END>
<BEG> returns true if the specified character can be consider content in an external parsed entity <END>
<BEG> returns true if the specified character be a valid name character a define by production [ 4a ] in the xml 1 1 specification <END>
<BEG> returns true if the specified character be a valid ncname start character a define by production [ 4 ] in namespaces in xml 1 1 recommendation <END>
<BEG> returns true if the specified character be a valid ncname character a define by production [ 5 ] in namespaces in xml 1 1 recommendation <END>
<BEG> returns whether the give character be a valid high surrogate for a name character <END>
<BEG> check to see if a string be a valid name accord to [ 5 ] in the xml 1 1 recommendation param name string to check return true if name be a valid name <END>
<BEG> check to see if a string be a valid ncname accord to [ 4 ] from the xml namespaces 1 1 recommendation param ncname string to check return true if name be a valid ncname <END>
<BEG> returns true if the specified character be a supplemental character <END>
<BEG> returns true the supplemental character correspond to the give surrogate <END>
<BEG> returns the high surrogate of a supplemental character param c the supplemental character to split <END>
<BEG> returns true if the specified character can be consider content <END>
<BEG> returns true if the specified character be a space character a define by production [ 3 ] in the xml 1 0 specification <END>
<BEG> returns true if the specified character be a valid ncname start character a define by production [ 4 ] in namespaces in xml recommendation <END>
<BEG> returns true if the encoding name be a valid iana encoding <END>
<BEG> clears the value of the qname component <END>
<BEG> creates new blanknodeid with a fresh internal id <END>
<BEG> creates new blanknodeid with the give id <END>
<BEG> answer the label string of this blanknodeid <END>
<BEG> answer the graph of all triple add <END>
<BEG> remove a triple from the difference : remove it from the left operand <END>
<BEG> < p > add the give triple to the union model ; the actual component model to be update will be the designated or default { linkplain # getbasegraph updateable } graph <END>
<BEG> < p > answer true if at least one of the graph in this union contain the give triple <END>
<BEG> < p > answer an iterator over the triple in the union of the graph in this composition <END>
<BEG> < p > close the graph by close all of the sub-graphs <END>
<BEG> < p > answer the distinguish graph for the composition <SEG> which will be the graph that receive triple add and deletes <END>
<BEG> < p > set the designated updateable graph for this composition <END>
<BEG> < p > answer a list of the graph other than the updateable base graph < p > return a list of all of the sub-graphs <SEG> exclude the base graph <END>
<BEG> add the binding in the map to our own <END>
<BEG> answer a readable we hope representation of this prefix mapping <END>
<BEG> for event generate by the jena code base the content be one of : < dl > < dt > < q > startread < q > < dt > < dt > < q > finishread < q > < dt > < dt > < q > removeall < q > < dt > < dd > the empty string < dd > < dt > < q > remove < q > < dt > < dd > the non-concrete triple be remove < dd > < dl > <END>
<BEG> for event generate by the jena code base the title be always a string <SEG> and be one of : < dl > < dt > < q > startread < q > < dt > < dd > { link # startread } < dd > < dt > < q > finishread < q > < dt > < dd > { link # finishread } < dd > < dt > < q > removeall < q > < dt > < dd > { link # removeall } < dd > < dt > < q > remove < q > < dt > < dd > { link # remove node <SEG> node <SEG> node } < dd > < dl > <END>
<BEG> utility method : throw a closedexception if this graph have be close <END>
<BEG> default implementation answer < code > true < code > iff this graph be the same graph a the argument graph <END>
<BEG> tell the event manager that the triple < code > t < code > have be add to the graph <END>
<BEG> answer a transaction handler bound to this graph <END>
<BEG> add a triple to the triple store <END>
<BEG> answer < code > true < code > iff < code > t < code > be in the graph a reveal by < code > find t < code > be non-empty <END>
<BEG> answer true if the graph contain any triple matching < code > t < code > <END>
<BEG> answer < code > true < code > if this graph contain < code > s <SEG> p <SEG> o < code > ; this canonical implementation can not be over-ridden <END>
<BEG> utility method : answer true iff we can find at least one instantiation of the triple in this graph use find triplematch <END>
<BEG> answer true iff this graph contain no triple hide reification quad do not count <END>
<BEG> answer true iff this graph be isomorphic to < code > g < code > accord to the algorithm indeed <SEG> method in < code > graphmatcher < code > <END>
<BEG> are the two model isomorphic ? <END>
<BEG> return a graph that only have term-equality and storage in the { code base } graph <END>
<BEG> create a literal with a dtype <END>
<BEG> build a plain literal label from it lexical form and language tag <END>
<BEG> creates either a plain literal or an xmlliteral <END>
<BEG> answer a human-acceptable representation of this literal value <END>
<BEG> answer true iff this literal be syntactically equal to < code > other < code > <END>
<BEG> answer an iterator which wrap < code > i < code > to ensure that if a remove be execute on it <SEG> the graph < code > g < code > will be notify <END>
<BEG> execute the command < code > c < code > within a transaction <END>
<BEG> make a blank node with the specify label <END>
<BEG> create a node base on the value if the value be a string we assume this be intend to be a lexical form after all <END>
<BEG> test that two node be semantically equivalent <END>
<BEG> answer a string represent the node <SEG> take into account the prefixmapping <END>
<BEG> note : linear growth be suboptimal order n < sup > 2 < sup > normally <SEG> but arraybunch 's be mean for < i > small < i > set and be replace by some sort of hash- or tree- set when they get big ; currently big mean more than 9 element <SEG> so that 's only one growth spurt anyway <END>
<BEG> answer an extendediterator over all the triple in this graph that match the triple-pattern < code > m < code > <END>
<BEG> clear this graphmem <SEG> ie remove all it triple delegate to the store <END>
<BEG> answer true iff this triple can be compare for samevalueas by equal <SEG> ie <SEG> it be a concrete triple with a non-literal object <END>
<BEG> destroy this triple store - discard the index <END>
<BEG> when removefrom [ or remove ] remove a key <SEG> it call this method to remove any associated value <SEG> pass in the index of the key 's slot <END>
<BEG> when removefrom [ or remove ] move a key <SEG> it call this method to move any associated value <SEG> pass in the index of the slot < code > here < code > to move to and the index of the slot < code > scan < code > to move from <END>
<BEG> answer the item at index < code > i < code > of < code > key < code > <END>
<BEG> answer the initial index for the object < code > key < code > in the table <END>
<BEG> work out the capacity and threshold size for a new improve big table big by a factor of two <SEG> at present <END>
<BEG> called by hashcommon when a key be remove : remove associated element of the < code > value < code > array <END>
<BEG> called by hashcommon when a key be move : move the associated element of the < code > value < code > array <END>
<BEG> answer the number of item currently in this triplebunch <END>
<BEG> answer the current capacity of this hashedtriplebunch ; for test purpose only <END>
<BEG> answer an iterator over all the triple that be index by the item < code > y < code > <END>
<BEG> the value usually node which appear in the index position of the stored triple ; useful for eg listsubjects <END>
<BEG> system err println > > rovi : size : = + size ; <END>
<BEG> answer an iterator over all the triple in this ntm <END>
<BEG> add < code > t < code > to this ntm ; the node < code > o < code > < i > must < i > be the index node of the triple <END>
<BEG> answer true iff this ntm contain the concrete triple < code > t < code > <END>
<BEG> answer an iterator over all the triple in this ntm which match < code > pattern < code > <END>
<BEG> < p > ontdocumentmanager be not a singleton <SEG> but a global default instance be available for application where a single share document manager be sufficient <END>
<BEG> < p > answer the language profile for this ontology specification < p > return an ontology language profile object <END>
<BEG> < p > answer the low common ancestor of two class in a give ontology <END>
<BEG> answer a list of the name hierarchy root of a give { link ontmodel } <END>
<BEG> check to see if we have find a solution to the problem <END>
<BEG> partition the member of an iterator into two list <SEG> accord to whether they be name or anonymous class param i an iterator to partition param name a list of name class param anon a list of anonymous class <END>
<BEG> < p > add a language profile with the give uri key < p > param uri the uri denote the language param profile the language profile for the language <END>
<BEG> < p > answer the language profile for the give language uri <SEG> or null if not know <END>
<BEG> override this to track all the object add ; each object will be a statement <SEG> a statement [ ] <SEG> a list statement <SEG> an iterator statement <SEG> or a model <END>
<BEG> override this to listen to all incoming add statement <END>
<BEG> answer the model this literal be create in <SEG> if any <SEG> otherwise null <END>
<BEG> modelgetter implementation component <END>
<BEG> < p > replace the value at the i'th position in the list with the give value <END>
<BEG> < p > remove the give value from this list <END>
<BEG> answer an iterator over the reification triple of this reifier <SEG> or an empty iterator - if showhidden be false <SEG> only the exposed triple <SEG> otherwise only the conceal one <END>
<BEG> answer an iterator over all the reification triple that this reifier expose ie all if standard <SEG> none otherwise that match m <END>
<BEG> true iff _n_ be associate with some triple <END>
<BEG> return an iterator over all the node that be reifiying t in the graph <END>
<BEG> answer true to the question be this a simple selector <END>
<BEG> answer the root sub-model <END>
<BEG> answer < code > model < code > after update it with the sub-graph of < code > s < code > root at < code > r < code > <SEG> bound by this instance < code > boundary < code > <END>
<BEG> method to over-ride to define what stop the boundary search ; default definition be ! continuewith s <END>
<BEG> expresses this statementboundary a a tripleboundary <END>
<BEG> answer a tripleboundary that be implement in term of a statementboundary <END>
<BEG> see org apache jena rdfxml xmlinput aliteral # iswellformedxml <END>
<BEG> non-javadoc see org xml sax ext lexicalhandler # comment char [ ] <SEG> int <SEG> int <END>
<BEG> non-javadoc see org xml sax ext lexicalhandler # endentity java lang string <END>
<BEG> throw the exception <SEG> fall back to be a wrapped saxparseexception <END>
<BEG> consumes all stax event and pass them on to the content handler <END>
<BEG> < code > a < code > be now relate to < code > b < code > <END>
<BEG> uniquely < code > a < code > be now relate to uniquely < code > b < code > <END>
<BEG> uniquely < code > a < code > be now relate to < code > b < code > <END>
<BEG> < code > a < code > be now relate to uniquely < code > b < code > <END>
<BEG> < code > a < code > be now < em > not < em > relate to < code > b < code > <END>
<BEG> takes this to it transitive closure <END>
<BEG> answer the infcapabilities of this infgraph <END>
<BEG> discard any state that depend on the content of fdata <SEG> because it 's just be majorly trash <SEG> solid go <END>
<BEG> return the raw rdf data graph be process i e <END>
<BEG> return the reasoner which be be use to answer query to this graph <END>
<BEG> replace the underlie data graph for this inference graph and start any inference over again <END>
<BEG> test the consistency of the bound data <END>
<BEG> returns an iterator over triples <END>
<BEG> return the number of triple in the just the base graph <END>
<BEG> free all resource <SEG> any further use of this graph be an error <END>
<BEG> return a version stamp for this graph which can be use to fast-fail concurrent modification exception <END>
<BEG> removes the triple t if possible from the set belonging to this graph <END>
<BEG> answer true iff this graph have be through the < code > prepare < code > step <END>
<BEG> reset prepared state to false <END>
<BEG> extended find interface use in situation where the implementator may or may not be able to answer the complete query <END>
<BEG> register a reasoner - simple case with no rdf description <END>
<BEG> return a composite set of rdf capability description for all registered reasoner <END>
<BEG> return information on a give reasoner <END>
<BEG> return a prebuilt standard configuration for the default rdfs reasoner <END>
<BEG> return a prebuilt standard configuration for the default subclass subproperty transitive closure reasoner <END>
<BEG> prebuilt standard configuration for the default owl reasoner <END>
<BEG> prebuilt standard configuration a micro-owl reasoner <END>
<BEG> set the state of the trace flag <END>
<BEG> return a description of the capability of this reasoner encode in rdf <END>
<BEG> determine whether the give property be recognize and treat specially by this reasoner <END>
<BEG> attach the reasoner to a set of rdf data to process <END>
<BEG> return the this of rules use by this reasoner return a list of rule object <END>
<BEG> set a configuration paramter for the reasoner <END>
<BEG> return a name for this builtin <SEG> normally this will be the name of the functor that will be use to invoke it <END>
<BEG> this method be invoke when the builtin be call in a rule body <END>
<BEG> return the full uri which identify this build in <END>
<BEG> check the argument length <END>
<BEG> check if a literal value node be a legal value for the give datatype <END>
<BEG> return true if the first argument be a list which contain the second argument <END>
<BEG> return the i'th element of the list <SEG> start from 0 param list the start of the list param i the element to return param context the context through which the data value can be find return the entry or null if the there be n't such an entry <END>
<BEG> test two rdf list for semantic equality <END>
<BEG> return the length of the rdf list root at the give node <END>
<BEG> print a node list to stdout <END>
<BEG> return the appropriate lexical form of a node <END>
<BEG> constructor method that build an instance of the associated reasoner param configuration a set of arbitrary configuration information to be pass the reasoner <SEG> encode a rdf property of a base configuration resource <SEG> can be null in no custom configuration be require <END>
<BEG> return the uri labelling this type of reasoner <END>
<BEG> assert a new triple in the deduction graph <SEG> trigger any consequent processing a appropriate <END>
<BEG> remove a triple from the deduction graph and the original graph if relevant <END>
<BEG> add a triple to a temporary pending store <SEG> ready to be add to add to the deduction graph and the processing stack later <END>
<BEG> increase the current quantity of env param env <END>
<BEG> get current quantity of bindingvector env param env return <END>
<BEG> get the bucket into which env belongs if it exist param env return <END>
<BEG> get an iterator over all bindingvectors currently present which match with env param env <END>
<BEG> set the quantity of env to a give count value c param env param c <END>
<BEG> copy all item from queue data into data <END>
<BEG> decrease the quantity of env param env <END>
<BEG> printable string for debug <END>
<BEG> link this frame to an exist frame <END>
<BEG> return the prior frame in the tree <END>
<BEG> close the frame actively <END>
<BEG> start a new interpreter run to answer a query <END>
<BEG> set the subject <SEG> predicate <SEG> object component of the pattern <END>
<BEG> record a request for a rule fire <END>
<BEG> set the continuation node for this node and any sibling <END>
<BEG> propagate a token to this node <END>
<BEG> return the unfiltered version of the graph <END>
<BEG> retrieve or create a bnode represent an inferred property value <END>
<BEG> binds a value to the brule version of the variable <END>
<BEG> dereference a variable by follow the reference chain <END>
<BEG> return the raw value to which this variable be bind via lp bind with no dereferencing <END>
<BEG> set the variable to be unbind in the brule sense <END>
<BEG> test if the variable be unbound in the brule sense <END>
<BEG> compare two node <SEG> take into account variable index <END>
<BEG> constructor method that build an instance of the associated reasoner param configuration a set of arbitrary configuration information to be pass the reasoner encode within an rdf graph <SEG> the current implementation be not configurable and will ignore this parameter <END>
<BEG> printable string describe the rule <END>
<BEG> add a new error report param report a validityreport report to add <SEG> can be null <END>
<BEG> returns true if no logical inconsistency be detect in which case there will be at least one error report include <END>
<BEG> returns true if the model be both valid logically consistent and no warning be generate <END>
<BEG> return an iterator over the separate validityreport report record <END>
<BEG> return true if there be a direct path from this node to the argument node <END>
<BEG> return an iterator over all the indirect successor of this node <END>
<BEG> assert a direct link between this node and this give target <END>
<BEG> remove a direct link currently from this node to the give target <END>
<BEG> assert an inferred indirect link from this node to the give target <END>
<BEG> propagate the result of add a link from this node to the target node <END>
<BEG> return an iterator over all of the triple represent outgo link from this node <END>
<BEG> print node label to assist with debug <END>
<BEG> register a new relation instance in the cache <END>
<BEG> remove an instance of a relation from the cache <END>
<BEG> return true if the give pattern occur somewhere in the find sequence <END>
<BEG> return true if the give node be register a a subject node <END>
<BEG> cache all instance of the give predicate which be present in the give graph <END>
<BEG> create a deep copy of the cache content <END>
<BEG> dump a description of the cache to a string for debug <END>
<BEG> accessor use during infgraph construction - return the cached version of the subproperty lattice <END>
<BEG> accessor use during infgraph construction - return the partially bound tbox <SEG> if any <END>
<BEG> answer the name of the context in which the encoding fail <END>
<BEG> create a new characterencoding object <SEG> give a name of a character encode identify it <END>
<BEG> answer a new map which use hash for lookup <END>
<BEG> answer a new map which use hash for lookup and be initialise to be a copy of < code > tocopy < code > <END>
<BEG> answer a new set which use hash for lookup and be initialise a a copy of < code > tocopy < code > <END>
<BEG> remove the current member from the underlie iterator <END>
<BEG> answer the next acceptable object from the base iterator <END>
<BEG> are there any more acceptable object <END>
<BEG> remove 's the member from the underlie < code > iterator < code > ; < code > hasnext < code > may not be call between call to < code > next < code > and < code > remove < code > <END>
<BEG> the next acceptable object in the iterator <END>
<BEG> default next : throw an exception <END>
<BEG> make a new iterator <SEG> which be our element that pass the filter <END>
<BEG> make a new iterator <SEG> which be our element that do not pass the filter <END>
<BEG> make a new iterator which be the elementwise _map1_ of the base iterator <END>
<BEG> an iterator over no element <END>
<BEG> answer a list of the element of < code > it < code > in order <SEG> consume this iterator <END>
<BEG> answer a list of the element from < code > it < code > <SEG> in order <SEG> consume that iterator <END>
<BEG> can return a single value <END>
<BEG> answer an extendediterator return the element of < code > it < code > <END>
<BEG> answer an extendediterator wrap round < code > it < code > which do not permit < code > remove < code > even if < code > it < code > do <END>
<BEG> if remove be allow <SEG> delegate to the base iterator 's remove ; otherwise <SEG> throw an unsupportedoperationexception <END>
<BEG> answer the element of the give iterator a a set <END>
<BEG> answer the element of the give iterator a a list <SEG> in the order that they arrive from the iterator <END>
<BEG> compute the difference between the current monitor graph and the last snapshot <END>
<BEG> answer true if the map contain the give object a a value store against any key <END>
<BEG> answer a set of the mapping in this map <END>
<BEG> answer an iterator over all of the value for the give key <END>
<BEG> < p > put all entry from one map into this map <END>
<BEG> < p > answer the number of key-value mapping in the map < p > return the number of key-value pair <END>
<BEG> < p > returns a collection view of the value contain in this map <END>
<BEG> < p > answer a string representation of this map <END>
<BEG> register a new prefix namespace mapping which will be use to shorten the print string for resource in known namespaces <END>
<BEG> register a set of new prefix namespace mapping which will be use to shorten the print string for resource in known namespaces <END>
<BEG> remove a set of prefix mapping from the table of know short form <END>
<BEG> return a simplified print string for a node <END>
<BEG> default print which just use tostring <END>
<BEG> expand qnames to uris <END>
<BEG> print an n-space indent to the give output stream <END>
<BEG> print all the triple value from a find iterator <END>
<BEG> < p > given a collection of resource <SEG> and a relation define a partial order over those resource <SEG> answer the sub-collection that contain only those element that appear in the maximal generator of the relation <END>
<BEG> < p > remove from the give list l of { link resource resources } <SEG> any resource that be equivalent to the reference resource < code > ref < code > under the relation < code > p < code > <END>
<BEG> < p > answer a list of list <SEG> which be a partition of the give input list of resource <END>
<BEG> < p > answer a model that contain all of the resource reachable from a give resource by any property <SEG> transitively <END>
<BEG> return the 'namespace ' prefix for a uri string <END>
<BEG> calculate a localname - do not escape pn_local_esc <END>
<BEG> return the 'namespace ' prefix for a uri string <SEG> legal for turtle and go with { link # localnamettl } <END>
<BEG> calculate a localname - enforce legal turtle escape pn_local_esc <SEG> check for final ' ' <END>
<BEG> find the uri split point <SEG> return the index into the string that be the first character of a legal turtle local name <END>
<BEG> test if there be more token which can be return <END>
<BEG> return the uri for this schema return the uri for this schema <END>
<BEG> return namespace use for rubric specific property <END>
<BEG> return namespace use for system level descriptive property of any reasoner <END>
<BEG> see java text dateformat # parse java lang string <SEG> java text parseposition <END>
<BEG> a string representation of the operator return the operator a a string <END>
<BEG> if the last { link graphpattern } add to the group be not a { link simplepathsupportedbasicgraphpattern } <SEG> then create one contain the specify { link propertypathpattern } s and add it to the group <END>
<BEG> return true if it be a { link variable } <SEG> false if it be a { link propertypathexpression } <END>
<BEG> param propertypathexpression expect value be a predicate path or an inverse predicate path <END>
<BEG> normalizes the supplied value accord to the normalization rule for the supplied datatype <END>
<BEG> checks whether this object have already be normalize <END>
<BEG> normalizes this datetime object <END>
<BEG> returns the xsd : datetime string-representation of this object <END>
<BEG> compares this datetime object to another datetime object <END>
<BEG> cleans up any resource use by this iterator <END>
<BEG> calls { link # createintegerliteral number <SEG> iri } with the supplied value and { link xmlschema # byte } a parameter <END>
<BEG> calls { link # createnumericliteral number <SEG> iri } with the supplied value and datatype a parameter <END>
<BEG> converts the supplied { link date } to a { link xmlgregoriancalendar } <SEG> then call { link valuefactory # createliteral xmlgregoriancalendar } <END>
<BEG> returns a { link booleanliteral } for the specify value <END>
<BEG> -- -- -- -- - methods -- -- -- -- - <END>
<BEG> gives a string-representation of this statement that can be use for debug <END>
<BEG> provide a single share instance of a simplevaluefactory <END>
<BEG> utility method that remove all statement match the specify criterion from a graph <END>
<BEG> look up a language identifier in the iana list <END>
<BEG> returns the result of { link # getbytevalue literal <SEG> byte getbytevalue literal value <SEG> fallback } in case the supply value be a literal <SEG> return the fallback value otherwise <END>
<BEG> determine the locale from a literal 's language tag <SEG> a specify by rfc 3166 <END>
<BEG> helper method for determine whether a literal could be create from an object use a { link valuefactory } <END>
<BEG> helper method to determine whether a literal be a language literal <SEG> and not a typed literal <END>
<BEG> converts a set of { link namespace } s into a map contain the { link namespace # getprefix } string a key <SEG> with the { link namespace # getname } string a value in the map for each namespace in the give set <END>
<BEG> wraps the give { link set } of { link namespace } s a a { link map } of prefix to uri mapping <SEG> so that it can be use where a { link map } be require by the api <END>
<BEG> tests whether or not the specified statement should be return by this iterator <END>
<BEG> finds the index of the first local name character in an non-relative uri <END>
<BEG> checks whether the uri consisting of the specified namespace and local name have be split correctly accord to the uri splitting rule specify in { link uri } <END>
<BEG> verifies that the supplied context parameter be not < tt > null < tt > <SEG> throw an { link illegalargumentexception } if it be <END>
<BEG> set the string value a value of the key <END>
<BEG> ask the server to silently close the connection <END>
<BEG> test if the specify key exist <END>
<BEG> return the type of the value store at key in form of a string <END>
<BEG> delete all the key of the currently select db <END>
<BEG> returns all the key match the glob-style pattern a space separate string <END>
<BEG> atomically rename the key oldkey to newkey <END>
<BEG> rename oldkey into newkey but fail if the destination key newkey already exist <END>
<BEG> return the number of key in the currently select database <END>
<BEG> set a timeout on the specify key <END>
<BEG> the ttl command return the remain time to live in second of a key that have an { link # expire byte [ ] <SEG> int expire } set <END>
<BEG> move the specified key from the currently select db to the specify destination db <END>
<BEG> delete all the key of all the exist database <SEG> not just the currently select one <END>
<BEG> getset be an atomic set this value and return the old value command <END>
<BEG> get the value of all the specify key <END>
<BEG> setnx work exactly like { link # set byte [ ] <SEG> byte [ ] set } with the only difference that if the key already exist no operation be perform <END>
<BEG> the command be exactly equivalent to the follow group of command : { link # set byte [ ] <SEG> byte [ ] set } + { link # expire byte [ ] <SEG> int expire } <END>
<BEG> set the the respective key to the respective value <END>
<BEG> decrby work just like { link # decr byte [ ] incr } but instead to decrement by 1 the decrement be integer <END>
<BEG> decrement the number store at key by one <END>
<BEG> incrbyfloat work just like { link # incrby byte [ ] <SEG> long } incrby } but increment by float instead of integer <END>
<BEG> if the key already exist and be a string <SEG> this command append the provided value at the end of the string <END>
<BEG> return a subset of the string from offset start to offset end both offset be inclusive <END>
<BEG> set the specified hash field to the specify value <END>
<BEG> set the specified hash field to the specify value if the field not exist <END>
<BEG> set the respective field to the respective value <END>
<BEG> retrieve the value associate to the specify field <END>
<BEG> increment the number store at field in the hash at key by value <END>
<BEG> increment the number store at field in the hash at key by a double precision float point value <END>
<BEG> test for existence of a specified field in a hash <END>
<BEG> remove the specified field from an hash store at key <END>
<BEG> return all the field in a hash <END>
<BEG> return all the field and associate value in a hash <END>
<BEG> add the string value to the head lpush or tail rpush of the list store at key <END>
<BEG> return the length of the list store at the specified key <END>
<BEG> trim an exist list so that it will contain only the specified range of element specify <END>
<BEG> set a new value a the element at index position of the list at key <END>
<BEG> atomically return and remove the first lpop or last rpop element of the list <END>
<BEG> atomically return and remove the last tail element of the srckey list <SEG> and push the element a the first head element of the dstkey list <END>
<BEG> add the specified member to the set value store at key <END>
<BEG> return all the member element of the set value store at key <END>
<BEG> remove a random element from a set return it a return value <END>
<BEG> move the specified member from the set at srckey to the set at dstkey <END>
<BEG> return the member of a set result from the intersection of all the set hold at the specified key <END>
<BEG> this commanad work exactly like { link # sinter byte [ ] sinter } but instead of be return the resulting set be store a dstkey <END>
<BEG> return the difference between the set store at key1 and all the sets key2 <SEG> <SEG> keyn < p > < b > example : < b > < pre > key1 = [ x <SEG> a <SEG> b <SEG> c ] key2 = [ c ] key3 = [ a <SEG> d ] sdiff key1 <SEG> key2 <SEG> key3 = & gt ; [ x <SEG> b ] < pre > non exist key be consider like empty set <END>
<BEG> return a random element from a set <SEG> without remove the element <END>
<BEG> add the specified member have the specify score to the sort set store at key <END>
<BEG> return the rank or index or member in the sorted set at key <SEG> with score be order from low to high <END>
<BEG> return the sorted set cardinality number of element <END>
<BEG> return the score of the specified element of the sorted set at key <END>
<BEG> sort a set or a list <END>
<BEG> sort a set or a list accordingly to the specify parameter <END>
<BEG> sort a set or a list accordingly to the specify parameter and store the result at dstkey <END>
<BEG> sort a set or a list and store the result at dstkey <END>
<BEG> request for authentication in a password protect redis server <END>
<BEG> return the all the element in the sorted set at key with a score between min and max include element with score equal to min or max <END>
<BEG> remove all element in the sorted set at key with rank between start and end <END>
<BEG> remove all the element in the sorted set at key with a score between min and max include element with score equal to min or max <END>
<BEG> creates a union or intersection of n sort set give by key k1 through kn <SEG> and store it at dstkey <END>
<BEG> retrieve the configuration of a run redis server <END>
<BEG> the config rewrite command rewrite the redis conf file the server be start with <SEG> apply the minimal change need to make it reflect the configuration currently use by the server <SEG> which may be different compare to the original one because of the use of the config set command <END>
<BEG> sets or clear the bit at offset in the string value store at key param key param offset param value return <END>
<BEG> returns the bit value at offset in the string value store at key param key param offset return <END>
<BEG> psetex work exactly like { link # setex byte [ ] <SEG> int <SEG> byte [ ] } with the sole difference that the expire time be specify in millisecond instead of second <END>
<BEG> syncrhonous replication of redis a describe here : http : antirez com news 66 since java object class have implement wait method <SEG> we can not use it <SEG> so i have to change the name of the method <END>
<BEG> set the specified expire time <SEG> in second <END>
<BEG> only set the key if it do not already exist <END>
<BEG> only set the key if it already exist <END>
<BEG> modify the return value from the number of new element add to the total number of element change return zaddparams <END>
<BEG> see < a href= http : redis io command scan # the-match-option > match option in redis documentation < a > param pattern return <END>
<BEG> returns the new value of the cursor return the new cursor value <END>
<BEG> the scan result from the current call <END>
<BEG> synchronize pipeline by read all response <END>
<BEG> get the sorting in descending order <END>
<BEG> limit the numbers of returned elements <END>
<BEG> retrieving external key from the result of the search <END>
<BEG> this operation should only require one fill <END>
<BEG> a key tag be a special pattern inside a key that <SEG> if preset <SEG> be the only part of the key hash in order to select the server for this key <END>
<BEG> encode bytes to base16 char <END>
<BEG> create a copy of { literal option } param option the original return a new instance of { link clientoptions } contain the value of { literal option } <END>
<BEG> select all master <END>
<BEG> select all know cluster node <END>
<BEG> create a new { link clusterclientoptions } use default setting <END>
<BEG> flag <SEG> whether regular cluster topology update be update <END>
<BEG> validate the cluster node membership before allow connection to a cluster node <END>
<BEG> number of maximal of cluster redirects { literal -moved } and { literal -ask } to follow in case a key be move from one node to another node <END>
<BEG> the { link clustertopologyrefreshoptions } for detailed control of topology update <END>
<BEG> event callback if a command receive a { literal ask } redirection <END>
<BEG> event callback if a connection try to reconnect <END>
<BEG> event callback if a connection be attempt to an unknown node <END>
<BEG> create a new { link clustertopologyrefreshoptions } use default setting with enabled periodic and adaptive refresh <END>
<BEG> period between the regular cluster topology update <END>
<BEG> unit for the { link # getrefreshperiod } <END>
<BEG> flag <SEG> whether to close stale connection when refresh the cluster topology <END>
<BEG> discover cluster node from topology and use the discovered node a source for the cluster topology <END>
<BEG> returns the set of { link refreshtrigger trigger } <END>
<BEG> timeout between adaptive cluster topology update <END>
<BEG> returns the cluster topology view before the topology change <END>
<BEG> parse partition line into partitions object <END>
<BEG> retrieve a { link redisclusternode } by it slot number <END>
<BEG> update the partition cache <END>
<BEG> returns the internal { link list } of { link redisclusternode } that hold the partition source <END>
<BEG> adds a partition < b > without < b > update the read view cache <END>
<BEG> returns the { link redisclusternode } at { code index } <END>
<BEG> update partition and rebuild slot cache <END>
<BEG> create a new instance of { link redisclusternode } by pass the { code nodeid } param nodeid the nodeid return a new instance of { link redisclusternode } <END>
<BEG> sets the list of slot for which this { link redisclusternode } be the { link com lambdaworks redis cluster model partition redisclusternode nodeflag # master } <END>
<BEG> set of { link com lambdaworks redis cluster model partition redisclusternode nodeflag node flag } <END>
<BEG> param nodeflag the node flag return true if the { linkplain nodeflag } be contain within the flag <END>
<BEG> add an alias to { link redisclusternode } <END>
<BEG> param slot the slot hash return true if the slot be contain within the handled slot <END>
<BEG> returns the { link com lambdaworks redis model role redisinstance role } of the redis cluster node base on the { link # getflags flag } <END>
<BEG> returns the result of the first { link redisfuture } and guarantee that all future be finish <END>
<BEG> returns always { literal ok } and guarantee that all future be finish <END>
<BEG> return an unmodifiable { link set } of { link commandtype read-only } command <END>
<BEG> create a new client that connect to the supply { link redisuri uri } with default { link clientresources } <END>
<BEG> create a new client that connect to the supply uri with default { link clientresources } <END>
<BEG> retrieve the cluster view <END>
<BEG> parse a redis cluster uri with potentially multiple host into a { link list } of { link redisuri } <END>
<BEG> apply { link redisuri } setting such a ssl timeout password <END>
<BEG> check whether redis support a particular command give a { link protocolkeyword } <END>
<BEG> return whether this { link roundrobin } be still consistent and contain all item from the master { link collection } and vice versa <END>
<BEG> rebuild the { link roundrobin } from the master { link collection } <END>
<BEG> partition key by slot-hash <END>
<BEG> create mapping between the key and hash slot <END>
<BEG> add a connection for a { link redisuri } param redisuri param connection <END>
<BEG> return cluster node uri 's use the topology query source and partition <END>
<BEG> await for either future completion or to reach the timeout <END>
<BEG> sort partition by redisuri <END>
<BEG> sort partition by client count <END>
<BEG> returns the latency map between { link commandlatencyid connection command } and the { link commandmetrics metric } <END>
<BEG> create a { link rediscommandtimeoutexception } with a detail message give the timeout <END>
<BEG> create a { link rediscommandtimeoutexception } with a detail message give the message and timeout <END>
<BEG> return the member within the geo set <END>
<BEG> return distance if request otherwise { literal null } <END>
<BEG> < p > < ul > < li > { code proxy hashcode } delegate to { link abstractinvocationhandler # hashcode } < li > { code proxy tostring } delegate to { link abstractinvocationhandler # tostring } < li > { code proxy equal argument } return true if : < ul > < li > { code proxy } and { code argument } be of the same type < li > and { link abstractinvocationhandler # equal } return true for the { link invocationhandler } of { code argument } < ul > < li > other method call be dispatch to { link # handleinvocation } <END>
<BEG> lookup a { link methodhandle } for a default { link method } <END>
<BEG> parse a host and port string into a { link hostandport } <END>
<BEG> temporary workaround until redis provide ipv6 address in bracket notation <END>
<BEG> assert that a string be not empty <SEG> it must not be { code null } and it must not be empty <END>
<BEG> assert that an array have element ; that be <SEG> it must not be { code null } and must have at least one element <END>
<BEG> assert that a { link java util collection } have no null element <END>
<BEG> determine whether the { link class } identify by the supplied name be present and can be load <END>
<BEG> creates a new <SEG> optionally bound <SEG> { link queue } that do not require external synchronization <END>
<BEG> creates a new { code hashset } contain all element from { code element } <END>
<BEG> wait until future be complete or the supply timeout be reach <END>
<BEG> convert { code double } to { link string } <END>
<BEG> convert { link string } to { code double } <END>
<BEG> return an unlimited limit <END>
<BEG> creates a { link limit } give { code offset } and { code count } <END>
<BEG> return the offset or { literal -1 } if unlimited <END>
<BEG> return the map result <END>
<BEG> lookup a { link redisnodedescription } by { link redisuri } <END>
<BEG> return latency between send and the first command response <END>
<BEG> return latency between send and the command completion <END>
<BEG> create a { link defaultcommandlatencycollectoroptions } instance with disabled event emission <END>
<BEG> replace exist key on the remote instance by set { code replace } <END>
<BEG> parse the output of the redis command command info command and convert to a list of { link commanddetail } <END>
<BEG> set the command output to a sequence of byte <SEG> or null <END>
<BEG> set the command output to a 64-bit signed integer <END>
<BEG> set command output to an error message from the server <END>
<BEG> check if the command result in an error <END>
<BEG> mark the command output complete <END>
<BEG> retrieve the { link readfrom } preset by name <END>
<BEG> return true if the connection be active and not close <END>
<BEG> create a new { link redisconnectionexception } give { link socketaddress } and the { link throwable cause } <END>
<BEG> param error return { literal true } if the { code error } message indicate redis protect mode <END>
<BEG> create a redis uri from an uri string : the uri must follow convention of { link java net uri } param uri the uri <END>
<BEG> resolves a { link com lambdaworks redis redisuri } to a { link java net socketaddress } <END>
<BEG> set ttl in { code millisecond } after restore the key <END>
<BEG> sequentially iterate over key in the keyspace <END>
<BEG> returns the the connection timeout unit <END>
<BEG> returns whether to enable tcp keepalive <END>
<BEG> retrieve external key during sort <END>
<BEG> create a complete { link connectionfuture } give { link socketaddress } and { code value } hold the value <END>
<BEG> flush the command batch queue after add a command to the batch queue <END>
<BEG> enqueue the command to the batch queue <END>
<BEG> return declare { link method } return { link typeinformation } <END>
<BEG> return the actual { link method } return { link typeinformation } after unwrap <END>
<BEG> return { literal true } if the method use asynchronous execution declare { link future } a result type <END>
<BEG> return { literal true } if the method define a { link io lettuce core dynamic batch commandbatching } argument <END>
<BEG> given a method <SEG> which may come from an interface <SEG> and a target class use in the current reflective invocation <SEG> find the corresponding target method if there be one <END>
<BEG> add a interface type that should be implement by the result invocation proxy <END>
<BEG> add a { link methodinterceptor } to the interceptor chain <END>
<BEG> overridable hook to check whether { code selector } can be assign from the provider type { code provider } <END>
<BEG> return the associated codec <END>
<BEG> return the timeout argument index if present <SEG> or { literal -1 } if the command method declare a { link timeout } parameter <END>
<BEG> return the command batch argument index if present <SEG> or { literal -1 } if the command method declare a { link commandbatching } parameter <END>
<BEG> return { literal true } if the method define a { link commandbatching } parameter <END>
<BEG> return { literal true } if the resolve { link io lettuce core output commandoutput } should use stream <END>
<BEG> create a constant { link commandsegment } <END>
<BEG> create a name parameter reference { link commandsegment } <END>
<BEG> creates a { link typeinformation } from the give method 's return type <END>
<BEG> build a mapping of { link typevariable # getname typevariable name } to { link class concrete class } for the specify { link class } <END>
<BEG> resolve the type argument of the give generic interface against the give target class which be assume to implement the generic interface and possibly declare concrete type for it type variable <END>
<BEG> return the nesting level of the target type typically 1 ; e g <END>
<BEG> set the type index for the current nesting level <END>
<BEG> set a resolved generic parameter type <END>
<BEG> return the generic type of the method constructor parameter <END>
<BEG> return the nested generic type of the method constructor parameter <END>
<BEG> return the annotation associate with the target method constructor itself <END>
<BEG> return the method constructor annotation of the give type <SEG> if available <END>
<BEG> return the parameter annotation of the give type <SEG> if available <END>
<BEG> return true if the parameter have at least one annotation <SEG> false if it have none <END>
<BEG> return true if the parameter have the give annotation type <SEG> and false if it do n't <END>
<BEG> initialize parameter name discovery for this method parameter <END>
<BEG> create a new methodparameter for the give method or constructor <END>
<BEG> get the field represent by the supplied { link field field object } on the specify { link object target object } <END>
<BEG> rethrow the give { link throwable exception } <SEG> which be presumably the < em > target exception < em > of an { link invocationtargetexception } <END>
<BEG> perform the give callback operation on all match method of the give class and superclasses or give interface and super-interfaces <END>
<BEG> invoke the give callback on all field in the target class <SEG> go up the class hierarchy to get all declare field <END>
<BEG> return the underling java { link type } be manage <END>
<BEG> return the underlying java { link class } be manage <SEG> if available ; otherwise { code null } <END>
<BEG> determine whether the give object be an instance of this { code resolvabletype } <END>
<BEG> return { code true } if this type resolve to a class that represent an array <END>
<BEG> return the resolvabletype represent the component type of the array or { link # none } if this type do not represent an array <END>
<BEG> convenience method to return this type a a resolvable { link collection } type <END>
<BEG> return this type a a { link resolvabletype } of the specified class <END>
<BEG> return a { link resolvabletype } represent the direct supertype of this type <END>
<BEG> return { code true } if this type contain generic parameter <END>
<BEG> return { code true } if this type contain unresolvable generic only <SEG> that be <SEG> no substitute for any of it declared type variable <END>
<BEG> determine whether the underlie type have any unresolvable generic : either through an unresolvable type variable on the type itself or through implement a generic interface in a raw fashion <SEG> i e <END>
<BEG> return a { link resolvabletype } for the specified nesting level <END>
<BEG> return a { link resolvabletype } represent the generic parameter for the give index <END>
<BEG> return an array of { link resolvabletype } s represent the generic parameter of this type <END>
<BEG> convenience method that will { link # getgenerics get } and { link # resolve resolve } generic parameter <SEG> use the specify { code fallback } if any type can not be resolve <END>
<BEG> convenience method that will { link # getgeneric int get } and { link # resolve resolve } a specific generic parameter <END>
<BEG> resolve this type to a { link java lang class } <SEG> return the specify { code fallback } if the type can not be resolve <END>
<BEG> resolve this type by a single level <SEG> return the resolve value or { link # none } <END>
<BEG> adapts this { link resolvabletype } to a { link variableresolver } <END>
<BEG> return a { link resolvabletype } for the specify { link class } with a give implementation <END>
<BEG> return a { link resolvabletype } for the specify { link class } with pre-declared generic <END>
<BEG> return a { link resolvabletype } for the specify { link method } return type <END>
<BEG> return a { link resolvabletype } for the specify { link method } parameter with a give implementation <END>
<BEG> return a { link resolvabletype } for the specify { link methodparameter } <SEG> override the target type to resolve with a specific give type <END>
<BEG> resolve the top-level parameter type of the give { code methodparameter } <END>
<BEG> return a { link resolvabletype } a a array of the specify { code componenttype } <END>
<BEG> return a { link resolvabletype } for the specify { link type } back by the give owner type <END>
<BEG> return a { link resolvabletype } for the specify { link type } back by a give { link variableresolver } <END>
<BEG> return a { link serializable } variant of { link field # getgenerictype } <END>
<BEG> unwrap the give type <SEG> effectively return the original non-serializable type <END>
<BEG> return a { link serializable } { link type } back by a { link typeprovider } <END>
<BEG> register a connection identify by { code key } <END>
<BEG> close a connection by it connection { code key } <END>
<BEG> loads a class use the { link # getdefaultclassloader } <END>
<BEG> check if the right-hand side type may be assign to the left-hand side type <SEG> assume setting by reflection <END>
<BEG> returns an empty { code keyvalue } instance with the { code key } set <END>
<BEG> convert a { code string } array into a delimited { code string } e g <END>
<BEG> notification callback method accept a connection for a value <END>
<BEG> notification callback method accept a connection error <END>
<BEG> retrieve a { link completionstage } that be notify upon completion or timeout <END>
<BEG> prepare an unchecked { link runtimeexception } that will bubble upstream if throw by an operator <END>
<BEG> mark the beginning of a multi sequence array <END>
<BEG> wait for statelock and increment writer <END>
<BEG> decrement writer without any wait <END>
<BEG> execute a { link runnable } guard by an exclusive lock <END>
<BEG> create a new { link redisconnectionexception } give { link throwable cause } <END>
<BEG> returns whether object create for the pool will be validate before be return from the acquire method <END>
<BEG> returns whether object borrow from the pool will be validate when they be return to the pool via the release method <END>
<BEG> set the { link stacktraceelement } for the give { link throwable } <SEG> use the { link class } and method name <END>
<BEG> returns the target for the minimum number of idle object to maintain in the pool <END>
<BEG> create a new instance of { link timeoutoptions } with enabled timeout apply a fixed { link duration timeout } <END>
<BEG> return { literal true } if command should time out <END>
<BEG> return { literal true } to apply connection timeouts declare on connection level <END>
<BEG> return the timeout source to determine the timeout for a { link rediscommand } <END>
<BEG> defines timeout for redis response <END>
<BEG> defines attempt amount to send redis command batch if it have n't be send already <END>
<BEG> defines time interval for each attempt to send redis command batch if it have n't be send already <END>
<BEG> synchronize write operation execution within define timeout across specified amount of redis slave node <END>
<BEG> inform redis not to send reply <END>
<BEG> returns list of result object for each command return list of object <END>
<BEG> returns amount of successfully synchronize slave during batch execution return slave amount <END>
<BEG> returns in condition for property by < code > name < code > and allow set of < code > value < code > param name - name of property param value - array of allow value return condition <END>
<BEG> returns equals condition which restrict property by < code > name < code > to define < code > value < code > param name - name of property param value - defined value return condition <END>
<BEG> returns greater than condition which restrict property by < code > name < code > to define < code > value < code > param name - name of property param value - defined value return condition <END>
<BEG> returns greater than on equal condition which restrict property by < code > name < code > to define < code > value < code > param name - name of property param value - defined value return condition <END>
<BEG> creates cron expression object with defined expression string param expression of cron return object throw illegalargumentexception wrap a parseexception if the expression be invalid <END>
<BEG> creates cron expression which schedule task execution every day at the give time param hour of schedule param minute of schedule return object throw illegalargumentexception wrap a parseexception if the expression be invalid <END>
<BEG> creates cron expression which schedule task execution every give day of the week at the give time <END>
<BEG> creates cron expression which schedule task execution every give day of the month at the give time param hour of schedule param minute of schedule param dayofmonth of schedule return object <END>
<BEG> defines task retry interval at the end of which task be execute again <END>
<BEG> defines host and port mapping <END>
<BEG> creates a new instance of localcachedmapoptions with default option <END>
<BEG> defines local cache size <END>
<BEG> defines local cache eviction policy <END>
<BEG> defines time to live in millisecond of each map entry in local cache <END>
<BEG> defines cache provider use a local cache store <END>
<BEG> returns stream id of message return id <END>
<BEG> returns name of consumer return id <END>
<BEG> returns milliseconds amount have pass since the last time the message be deliver to some consumer return number <END>
<BEG> returns number of time that a give message be deliver return number <END>
<BEG> total amount of pending message return number <END>
<BEG> lowest stream id of pending message return number <END>
<BEG> pending message amount map by consumer name return map <END>
<BEG> returns current rate type set through { link rratelimiter # trysetrate ratetype <SEG> long <SEG> long <SEG> rateintervalunit } or { link rratelimiter # trysetrateasync ratetype <SEG> long <SEG> long <SEG> rateintervalunit } method <END>
<BEG> returns current rate time interval value set through { link rratelimiter # trysetrate ratetype <SEG> long <SEG> long <SEG> rateintervalunit } or { link rratelimiter # trysetrateasync ratetype <SEG> long <SEG> long <SEG> rateintervalunit } method <END>
<BEG> defines ack timeout param acktimeoutinmillis - timeout in millisecond return remoteinvocationoptions object <END>
<BEG> specifies to not wait for ack reply return remoteinvocationoptions object <END>
<BEG> specifies to not wait for result return remoteinvocationoptions object <END>
<BEG> returns amount of pending message for this consumer return amount of pending message <END>
<BEG> returns last delivered streammessageid for this group return streammessageid object <END>
<BEG> returns current customer amount for this group return customer amount <END>
<BEG> returns length of the stream return length of the stream <END>
<BEG> returns amount of key allocate by radix tree of the stream <END>
<BEG> returns last streammessageid use by the stream return streammessageid object <END>
<BEG> returns first stream entry return stream entry <END>
<BEG> returns first part of id return first part of id <END>
<BEG> defines attempt amount to send transaction if it have n't be send already <END>
<BEG> defines time interval for each attempt to send transaction if it have n't be send already <END>
<BEG> synchronization data timeout between redis master participate in transaction and it slave <END>
<BEG> if transaction have n't be commit within < code > timeout < code > it will rollback automatically <END>
<BEG> searches through all method look for one with the specify name that will take the specified paramaters even if the parameter type be more generic in the actual method implementation <END>
<BEG> updates the hash with 32 byte of data <END>
<BEG> updates the hash with 32 byte of data give a 4 longs <END>
<BEG> updates the hash with the last 1 to 31 byte of the data <END>
<BEG> computes the hash value after all byte be process <END>
<BEG> note : the 64-bit highwayhash algorithm be declare stable and no longer subject to change <END>
<BEG> return the type throw java lang classnotfoundexception - if the class can not be locate <END>
<BEG> return type name in string <END>
<BEG> utility method for convert an enum code to an actual enum <END>
<BEG> returns the sha1 of the provide data param data the data to calculate <SEG> such a the content of a file return the human-readable sha1 <END>
<BEG> returns all annotation of a class <SEG> also the annotation of the super class <SEG> implement interface and the annotation that be present in stereotype annotation <END>
<BEG> returns the annotation object for the specified annotation class of the method if it can be find <SEG> otherwise null <END>
<BEG> returns the annotation object for the specified annotation class of the give class object <END>
<BEG> sets the give value a the new value on the give node <SEG> increase size and modcount <END>
<BEG> returns true when an entry exist that that have the give prefix <END>
<BEG> returns a view on the current map that act like if every method call to the current map where a key be involve would be prefix with the give prefix <END>
<BEG> checks for null object and return the proper result depedning on which object be null param object1 param object2 return < ol > < li > 0 = field null or both object null < li > < li > 1 = object1 be null < li > < li > -1 = object2 be null < li > < li > null = both object be not null < li > < ol > <END>
<BEG> invokes the getter chain base on the source object <END>
<BEG> invokes the getter setter chain base on the source object <END>
<BEG> returns the class object for the specify qualified class name <END>
<BEG> returns the wrapper class of the give primitive class or null <END>
<BEG> checks if the target class be a subtype of the supertype or not <END>
<BEG> returns the type of a field if it exist within the class <END>
<BEG> tries to resolve the type variable against the concrete class <END>
<BEG> tries to find the position of the give type variable in the type parameter of the give class <END>
<BEG> returns the static field object that be declare in the give class or any of it 's super type <END>
<BEG> returns the field object that be declare in the give class or any of it 's super type that have any of the give modifier <END>
<BEG> returns the return type of a method if it exist within the class <END>
<BEG> returns the method object for a method which be annotate with the give annotation of the give class <END>
<BEG> retrieves the getter method of the give class for the specified field name <END>
<BEG> returns the available serializable formatters <END>
<BEG> this method check if the give type be a parseable type <END>
<BEG> method for construct builder for create simple override provider that just use direct assignment target-to-override class <END>
<BEG> method for add specified annotation <SEG> override exist value for the annotation type <END>
<BEG> method for add specify annotation if and only if no value exist for the annotation type <END>
<BEG> configuration method for specify whether member of < code > java lang object < code > be to be include in resolution ; if false <SEG> no member from { link java lang object } be to be include ; if true <SEG> will be include <END>
<BEG> although constructor be different from other method <SEG> we can use { link methodkey } easily <END>
<BEG> simple accessors <END>
<BEG> returns type of this member ; if it have one <SEG> for method this be the return type <SEG> for field field type <SEG> and for constructor null <END>
<BEG> returns jdk object that represent member <END>
<BEG> standard method override <END>
<BEG> method that can be use to check if call to { link typeresolver # resolvesubtype resolvedtype <SEG> class } will succeed for specific type ; if false <SEG> it will fail with an exception ; if tru it will succeed <END>
<BEG> method that will try to find type parameterization this type have for specify super type return list of type parameter for specify supertype which may be empty <SEG> if supertype be not a parametric type ; null if specify type be not a super type of this type <END>
<BEG> method for find super type of this type that have specify type erase signature <END>
<BEG> method that return full generic signature of the type ; suitable a signature for thing like asm package <END>
<BEG> method that return type erased signature of the type ; suitable a non-generic signature some package need <END>
<BEG> human-readable full description of type <SEG> which include specification of super type in brief format <END>
<BEG> human-readable brief description of type <SEG> which do not include information about super type <END>
<BEG> param static whether to return static method true or member method false <END>
<BEG> accessor for get full type hierarchy a priority-ordered list <SEG> from the low precedence to high precedence main type <SEG> it mix-in override <END>
<BEG> accessor for find just override for the main type if any <END>
<BEG> method for find all static field of the main type except for one possibly filter out by filter and apply annotation override <SEG> if any <SEG> to annotation <END>
<BEG> method for fully resolve field definition and associate annotation <END>
<BEG> method for resolve individual constructor completely <END>
<BEG> factory method for construct binding for give class use specify type parameter <END>
<BEG> method for create an instance that have same binding a this object <SEG> plus an indicator for additional type variable that may be unbound within this context ; this be need to resolve recursive self-references <END>
<BEG> find type bound to specify name <SEG> if there be one ; return bound type if so <SEG> null if not <END>
<BEG> accessor for get bound type in declaration order <END>
<BEG> package accessible method <END>
<BEG> factory method for construct array type of give element type <END>
<BEG> 19-aug-2014 <SEG> tatu : ugly do it sigh <END>
<BEG> equality mean name be the same and argument type erasure a well <END>
<BEG> helper method for construct reusable cache key <END>
<BEG> indicate whether the map be read only <END>
<BEG> indicate whether the { link dynabean } contain a specified value for one or more of it property <END>
<BEG> indicates whether the decorate { link dynabean } contain a specified value <END>
<BEG> < p > returns the set of the property value mapping in the decorated { link dynabean } < p > < p > each element in the set be a < code > map entry < code > type < p > return an unmodifiable set of the dynabean property name value pair <END>
<BEG> < p > returns the set of the property name in the decorated { link dynabean } < p > < p > < b > n b < b > for { link dynabean } s whose associated { link dynaclass } be a { link mutabledynaclass } a new set be create every time <SEG> otherwise the set be create only once and cache < p > return an unmodifiable set of the { link dynabean } s property name <END>
<BEG> set the value for the specified property in the decorated { link dynabean } <END>
<BEG> copy the content of a map to the decorate { link dynabean } <END>
<BEG> returns the number property in the decorated { link dynabean } <END>
<BEG> provide access to the underlie { link dynabean } this map decorates <END>
<BEG> does the specify map property contain a value for the specify key value ? <END>
<BEG> return the < code > dynaclass < code > instance that describe the set of property available for this dynabean <END>
<BEG> set the value of a simple property with the specify name <END>
<BEG> return the name of this dynaclass analogous to the < code > getname < code > method of < code > java lang class < code <SEG> which allow the same < code > dynaclass < code > implementation class to support different dynamic class <SEG> with different set of property <END>
<BEG> return a property descriptor for the specified property <SEG> if it exist ; otherwise <SEG> return < code > null < code > <END>
<BEG> < p > return an array of < code > properydescriptors < code > for the property currently define in this dynaclass <END>
<BEG> return the class object we will use to create new instance in the < code > newinstance < code > method <END>
<BEG> set the list of dynamic property support by this dynaclass <END>
<BEG> returns the array with property descriptor <END>
<BEG> returns the { code propertydescriptor } for the property with the specify name <END>
<BEG> this method reinitializes the bean map to have default value for the bean 's property <END>
<BEG> returns the value of the bean 's property with the give name <END>
<BEG> sets the bean property with the give name to the give value <END>
<BEG> gets a set of mapentry object that be the mapping for this beanmap <END>
<BEG> return the root cause of this conversion exception <END>
<BEG> convert the input object into an output object of the specify type <END>
<BEG> provide a string representation of a < code > java lang class < code > <END>
<BEG> provide a string representation of this date time converter <END>
<BEG> performs introspection of a specific java class <END>
<BEG> returns an array with all descriptor add to this context <END>
<BEG> < p > gets the java class represent the data type of the underlie property value < p > < p > there be issue with serialize primitive class type on certain jvm version include java 1 3 <END>
<BEG> gets the < em > optional < em > type of the indexed content for < code > dynaproperty < code > 's that support this feature <END>
<BEG> does this property represent an indexed value ie an array or list ? <END>
<BEG> does this property represent a map value ie a map ? <END>
<BEG> return the index value from the property expression or -1 <END>
<BEG> return the map key from the property expression or < code > null < code > <END>
<BEG> return the property name from the property expression <END>
<BEG> extract the next property expression from the current expression <END>
<BEG> < p > return the size of an indexed or map property < p > param name name of the property return the indexed or map property size throw illegalargumentexception if no property name be specify <END>
<BEG> < p > return the value of a simple property with the specify name < p > < p > < strong > n b < strong > returns < code > null < code > if there be no property of the specify name < p > param name name of the property whose value be to be retrieve <END>
<BEG> < p > is this dynaclass currently restrict < p > < p > if restrict <SEG> no change to the exist registration of property name <SEG> data type <SEG> readability <SEG> or writeability be allow < p > return < code > true < code > if this { link mutabledynaclass } can not be change otherwise < code > false < code > <END>
<BEG> should this dynaclass return a < code > null < code > from the < code > getdynaproperty name < code > method if the property do n't exist <END>
<BEG> < p > add a new dynamic property with the specify data type <SEG> readability <SEG> and writeability < p > < p > < strong > n b < strong > support for readable writeable property have not be implement and this method always throw a < code > unsupportedoperationexception < code > < p > < p > i 'm not sure the intention of the original author for this method <SEG> but it seem to me that readable writable should be attribute of the < code > dynaproperty < code > class which they be not and be the reason this method have not be implement < p > param name name of the new dynamic property param type data type of the new dynamic property null for no restriction param readable set to < code > true < code > if this property value should be readable param writeable set to < code > true < code > if this property value should be writeable throw unsupportedoperationexception anytime this method be call <END>
<BEG> remove the specified dynamic property <SEG> and any associate data type <SEG> readability <SEG> and writeability <SEG> from this dynamic class <END>
<BEG> < p > indicate whether a property actually exist < p > < p > < strong > n b < strong > using < code > getdynaproperty name == null < code > do n't work in this implementation because that method might return a dynaproperty if it do n't exist depend on the < code > returnnull < code > indicator < p > param name the name of the property to check return < code > true < code > if there be a property of the specify name <SEG> otherwise < code > false < code > throw illegalargumentexception if no property name be specify <END>
<BEG> return the underlie map back this < code > dynabean < code > return the underlie map since 1 8 0 <END>
<BEG> return the name of this dynaclass analogous to the < code > getname < code > method of < code > java lang class < code > return the name of the dynaclass <END>
<BEG> gets the method that should be use to read one of the property value <END>
<BEG> sets the method that should be use to write the property value <END>
<BEG> < p > retrieve the property descriptor for the specified bean <SEG> introspect and cache them the first time a particular bean class be encounter < p > < p > < strong > fixme < strong > - does not work with dynabeans < p > param bean bean for which property descriptor be request return the property descriptor throw illegalargumentexception if < code > bean < code > be null <END>
<BEG> < p > return an < code > iterator < code > of { link dynabean } instance for each row of the wrapped < code > resultset < code > <SEG> in forward order <END>
<BEG> get a value from the { link resultset } for the specified property name <END>
<BEG> < p > return the result set we be wrap < p > <END>
<BEG> return the value of a mapped property with the specify name <SEG> or < code > null < code > if there be no value for the specify key <END>
<BEG> < p > advance the result set to the next row <SEG> if there be not a current row and if we be not already at eof < p > throw sqlexception if the result set throw an exception <END>
<BEG> < p > create and return a new { link dynabean } instance to be use for represent a row in the underlying result set < p > return a new < code > dynabean < code > instance <END>
<BEG> returns true if this map be operate in fast mode <END>
<BEG> sets whether this map be operate in fast mode <END>
<BEG> return < code > true < code > if this map contain one or more key map to the specify value <END>
<BEG> copy all of the mapping from the specify map to this one <SEG> replace any mapping with the same key <END>
<BEG> remove any mapping for this key <SEG> and return any previously map value <END>
<BEG> return the propertydescriptor for the specified property name <SEG> if any ; otherwise return < code > null < code > <END>
<BEG> specifies the parameter type for the constructor to invoke <END>
<BEG> starting point of the fluent interface for load a class dynamically <END>
<BEG> starting point of the fluent interface for access static inner class via reflection <END>
<BEG> starting point of the fluent interface for access field via reflection < br > nested field be support with dot notation <SEG> e g <END>
<BEG> starting point of the fluent interface for access static field via reflection <END>
<BEG> starting point of the fluent interface for invoke method via reflection <END>
<BEG> ignores any { link runtimeexception } which come from the precede decorator <END>
<BEG> ignores any exception of the { code exceptionclass } type which come from the precede decorator <END>
<BEG> returns a new field access invoker <SEG> capable of access read write the underlying field <END>
<BEG> specifies the parameter type of the static method to invoke <END>
<BEG> creates a new invoker for a static method that take no parameter and return value < code > void < code > <END>
<BEG> sets the < code > accessible < code > flag of the give < code > { link accessibleobject } < code > to the give < code > boolean < code > value <SEG> ignore any thrown exception <END>
<BEG> sets the < code > accessible < code > flag of the give < code > { link accessibleobject } < code > to the give < code > boolean < code > value <END>
<BEG> see com googlecode gentyref capturetype # getlowerbounds <END>
<BEG> checks if the give type be a class that be suppose to have type parameter <SEG> but do n't <END>
<BEG> returns a type represent the class <SEG> with all type parameters the unbound wildcard ? <END>
<BEG> finds the most specific supertype of < tt > type < tt > whose erasure be < tt > searchclass < tt > <END>
<BEG> gets the type parameter for a give type that be the value for a give type variable <END>
<BEG> checks if the capture of subtype be a subtype of supertype <END>
<BEG> if type be an array type <SEG> return the type of the component of the array <END>
<BEG> returns the exact return type of the give method in the give type <END>
<BEG> applies capture conversion to the give type <END>
<BEG> returns the display name of a type <END>
<BEG> returns list of class and interface that be supertypes of the give type <END>
<BEG> returns the bound that be not satisfied <END>
<BEG> creates a type of class < tt > clazz < tt > with < tt > argument < tt > a type argument <END>
<BEG> creates a type of < tt > clazz < tt > nest in < tt > owner < tt > <END>
<BEG> creates a type of < tt > clazz < tt > with < tt > argument < tt > a type argument <SEG> nest in < tt > owner < tt > <END>
<BEG> returns the wildcard type without bound <END>
<BEG> creates a wildcard type with an upper bound <END>
<BEG> creates a array type <END>
<BEG> return human readable string <END>
<BEG> must override to handle the configure imply access relationship <END>
<BEG> set an attachment against the type <END>
<BEG> remove an attachment param name the name throw illegalargumentexception for a null name <END>
<BEG> this method will reflect a class object that be represent by classname <END>
<BEG> method to access reflection on clazz <END>
<BEG> method to access reflection on any annotatedelement see accessibleobject param object accessibleobject to be use <END>
<BEG> method to access reflection on any field <END>
<BEG> convenience method for { link mirror # proxify class } see { link mirror # on class } see { link mirror # proxify class } see { link mirror # reflectclass string } <END>
<BEG> method to create proxy of class <END>
<BEG> read the byte of a class from the classpath param classname full class name include the package return the byte represent the class throw illegalargumentexception if the class be long than 2500 byte throw ioexception if we fail to read the class <END>
<BEG> write all class bytes to a file <END>
<BEG> will convert a class name to it name in the class definition format e g { code org objenesis emptyclass } become { code org objenesis emptyclass } param classname full class name include the package return the internal name <END>
<BEG> will pick the best instantiator for the provided class <END>
<BEG> will create an object just like it 's do by objectinputstream readobject the default constructor of the first non serializable class will be call param < t > type instantiate param clazz class to instantiate return new instance of clazz <END>
<BEG> same a { link # getinstantiatorof class } but provide an instantiator emulate objectinputstream readobject behavior <END>
<BEG> describes the platform <END>
<BEG> check if this jvm be an android jvm base on openjdk <END>
<BEG> return an { link objectinstantiator } allow to create instance follow the java serialization framework specification <END>
<BEG> return an { link objectinstantiator } allow to create instance without any constructor be call <END>
<BEG> calculate the number of string that will be generate until the transaction present by this node <SEG> and set the result in < code > nbrmatchedstring < code > <END>
<BEG> byte code position <END>
<BEG> previous char position of pstr <END>
<BEG> byte code position head of repeated target <END>
<BEG> index of stack <END>
<BEG> memory num <END>
<BEG> start end position <END>
<BEG> following information be set <SEG> if this stack type be mem-start <END>
<BEG> absent position <END>
<BEG> op <END>
<BEG> behavior <END>
<BEG> this method allow to efficiently pass data between matcher <END>
<BEG> supplies a text to search in match with <SEG> a a part of string <END>
<BEG> to be use with much care <END>
<BEG> tells whether the entire target match the beginning of the pattern <END>
<BEG> just an old name for isprefix < br > retained for backwards compatibility <END>
<BEG> tells whether a current target match the whole pattern <END>
<BEG> just a combination of settarget string and match <END>
<BEG> allows to set a position the subsequent find find int will start from <END>
<BEG> searches through a target for a matching substring <SEG> start from just after the end of last match <END>
<BEG> returns an iterator over the match find by subsequently call find option <SEG> the search start from the zero position <END>
<BEG> continues to search from where the last search leave off use specify option : < pre > matcher m=new pattern \\w+ matcher abc ; while m proceed 0 { system out println m group 0 ; } < pre > output : < pre > abc ab a bc b c < pre > for example <SEG> let 's find all odd nubmers occur in a text : < pre > matcher m=new pattern \\d+ matcher 123 ; while m proceed 0 { string match=m group 0 ; if isodd integer parseint match system out println match ; } static boolean isodd int i { return i & 1 > 0 ; } < pre > this output : < pre > 123 1 23 3 < pre > note that use < code > find < code > method we would find '123 ' only <END>
<BEG> sets the current search position just after the end of last match <END>
<BEG> return a next token a a string <END>
<BEG> deprecate is meaningless with regard to variable path since v 1 2 <END>
<BEG> return the current setting for chunked encoding configure in the builder <END>
<BEG> < p > disables chunk encode on client build via the builder < p > < p > the default behavior be to enable chunked encode automatically for putobjectrequest and uploadpartrequest <END>
<BEG> return whether global bucket access be configure for client generate by this builder <END>
<BEG> return whether us-east-1 should resolve to it regional endpoint or the default global endpoint <END>
<BEG> return true if the uri contain the bucket in the path <SEG> false if it contain the bucket in the authority <END>
<BEG> return the bucket name parse from the uri or null if no bucket specify <END>
<BEG> validates that the specify bucket name be valid for amazon s3 v2 name i e <END>
<BEG> param kek the key encrypt key <SEG> which be either an aes key or a public key <END>
<BEG> returns a non-null part in the form of a file for multi-part upload <END>
<BEG> returns an observer for file deletion ; or null if there be none <END>
<BEG> returns the name of the bucket contain the multipart upload to abort <END>
<BEG> sets the name of the bucket contain the multipart upload to abort and return the updated object so that additional call can be chain together <END>
<BEG> sets the key of the multipart upload to abort and return the updated abortmultipartuploadrequest object so that additional method call can be chain together <END>
<BEG> gets the optional amazon s3 storage class to use when store the new object <END>
<BEG> gets the optional metadata instruct amazon s3 how to handle the uploaded data e g <END>
<BEG> returns the optional access control list for the new object <END>
<BEG> adds a grantee to the access control list acl with the give permission <END>
<BEG> adds a set of grantee permission pair to the access control list acl <SEG> where each item in the set be a { link grant } object <END>
<BEG> gets the set of { link grant } object in this access control list acl <END>
<BEG> returns the override value for the owner of the replica object in { link string } format <END>
<BEG> sets the identifier use to represent an analytics configuration and return the { link analyticsconfiguration } object for method chaining <END>
<BEG> returns the filter use to describe a set of object for analysis <END>
<BEG> sets the storageclassanalysis object which indicate that data relate to access pattern will be collect and make available to analyze the tradeoff between different storage class <END>
<BEG> returns the { link analyticsfilterpredicate } to be use when evaluate an analytics filter <END>
<BEG> returns the account id that own the destination bucket <END>
<BEG> sets the account id that own the destination bucket and return this object for method chaining <END>
<BEG> sets the amazon resource name arn of the bucket to which data be export and return this object for method chaining <END>
<BEG> returns the container use to describe how data relate to the storage class analysis should be export <END>
<BEG> sets the version of the output schema to use when export data <END>
<BEG> returns the place to store the data for an analysis <END>
<BEG> gets the bucket 's creation date <END>
<BEG> return the current status of the accelerate configuration for this bucket <SEG> or null if the bucket have never be enable or suspend accelerate configuration <END>
<BEG> a convenience method that return whether the bucket be enable accelerate mode <END>
<BEG> returns the list of rule that comprise this configuration <END>
<BEG> sets the rule that comprise this configuration <END>
<BEG> sets the rule that comprise this configuration and return a reference to this object for easy method chain <END>
<BEG> convenience array style method for { link bucketcrossoriginconfiguration # withrules list } <END>
<BEG> returns the optional log file prefix <END>
<BEG> sets the log file prefix for this bucket log configuration <END>
<BEG> returns the destination bucket name for this logging configuration <END>
<BEG> gets the raw policy json text a return by amazon s3 <END>
<BEG> sets the raw policy json text <END>
<BEG> returns the replication rule associate with this amazon s3 bucket <END>
<BEG> returns the replication rule for the give rule id <END>
<BEG> sets the replication rule for the amazon s3 bucket <END>
<BEG> < p > sets the { link tagset } < code > tagsets < code > and return this object <SEG> enable additional method call to be chain together <END>
<BEG> < p > sets the { link tagset } <END>
<BEG> < p > gets the list of { link tagset } object contain in this object <END>
<BEG> returns true if multi-factor authentication mfa delete be enable for this bucket versioning configuration <SEG> false if it be n't enable <SEG> and null if no information be available about the status of mfadelete <END>
<BEG> sets the status of multi-factor authentication mfa delete for a bucket <SEG> and return this object so that additional method call may be chain together <END>
<BEG> returns the document to serve when a directory be specify ex : index html <END>
<BEG> returns the complete path to the document to serve for 4xx error <SEG> or null if no error document have be configure <END>
<BEG> sets the complete path to the document to serve for 4xx error <END>
<BEG> sets the redirect information where all request will be redirect to <END>
<BEG> set the list of rout rule that can be use for configure redirects if certain condition be meet <END>
<BEG> set the list of rout rule that can be use for configure redirects if certain condition be meet and return a reference to this object bucketwebsiteconfiguration for method chaining <END>
<BEG> non-javadoc see com amazonaws service s3 model grantee # gettypeidentifier <END>
<BEG> < p > sets the unique identifier for this grantee <END>
<BEG> returns the arn of the cloud function to be invoke <END>
<BEG> sets the key under which the multipart upload to complete be store <SEG> and return this updated completemultipartuploadrequest object so that additional method call can be chain together <END>
<BEG> sets the key of the newly create object <END>
<BEG> returns the version id of the new object <SEG> only present if versioning have be enable for the bucket <END>
<BEG> returns the expiration time for this object <SEG> or null if it do n't expire <END>
<BEG> returns the { link bucketlifecycleconfiguration } rule id for this object 's expiration <SEG> or null if it do n't expire <END>
<BEG> < p > sets the optional amazon s3 storage class to use when store the newly copy object and return this < code > copyobjectrequest < code > <SEG> enable additional method call to be chain together <END>
<BEG> < p > sets the optional amazon s3 storage class to use when store the newly copy object and return this copyobjectrequest <SEG> enable additional method call to be chain together <END>
<BEG> gets the etag value for the new object that be create in the associated { link copyobjectrequest } <END>
<BEG> sets the etag value for the new object that be create from the associate copy object request <END>
<BEG> gets the date the newly copy object be last modified <END>
<BEG> returns the part number describe this part 's position relative to the other part in the multipart upload <END>
<BEG> returns an identifier which identify the copy part by it part number and the entity tag compute from the part 's data <END>
<BEG> sets the id of this rule and return a reference to this object for method chaining <END>
<BEG> sets the allowed method of the rule <END>
<BEG> sets the allowed method of this rule and return a reference to this object for method chaining <END>
<BEG> returns allow header of this rule <END>
<BEG> sets the name of the amazon s3 bucket to create <END>
<BEG> return character use to indicate a row should be ignore when present at the start of a row <END>
<BEG> sets the character use to indicate a row should be ignore when present at the start of a row <END>
<BEG> sets the single character use to indicate a row should be ignore when present at the start of a row <END>
<BEG> return character use for escape the quote character inside an already escape value <END>
<BEG> sets the character use for escape the quote character inside an already escape value <END>
<BEG> return the value use to separate individual record a a character <END>
<BEG> sets the value use to separate individual field in a record <END>
<BEG> return the value use for escape where the field delimiter be part of the value <END>
<BEG> return the value use to allow quote record delimiters to occur within the input <END>
<BEG> return the field that indicate whether or not all output field should be quote <END>
<BEG> sets the single character use for escape the quote character inside an already escape value <END>
<BEG> the number of day that you want to specify for the default retention period <END>
<BEG> sets the identifier use to represent an analytics configuration and return this object for method chaining <END>
<BEG> sets the name of the bucket contain the inventory configuration to delete and return { link deletebucketinventoryconfigurationrequest } object for method chaining <END>
<BEG> sets the name of the amazon s3 bucket whose policy be be delete <SEG> and return the updated request object so that additional method call can be chain together <END>
<BEG> sets the name of the amazon s3 bucket contain the object to delete and return this object <SEG> enable additional method call to be chain together <END>
<BEG> sets the key of the object to delete and return this object <SEG> enable additional method call to be chain together <END>
<BEG> sets the name of the amazon s3 bucket contain the object s to delete and return this object <SEG> enable additional method call to be chain together <END>
<BEG> returns the list of successfully delete object from this request <END>
<BEG> set version of the object whose tages be to be delete <END>
<BEG> sets the version id uniquely identify which version of the object to delete returns this { link deleteversionrequest } <SEG> enable additional method call to be chain together <END>
<BEG> gets the grantee 's e-mail address <END>
<BEG> return the id of the kms key use to encrypt the replica object <END>
<BEG> sets the id of the kms key use to encrypt the replica object param replicakmskeyid new kms key id <END>
<BEG> sets the value for this { link filterrule } and return this object for method chain param value new value for this { link filterrule } return this object for method chaining <END>
<BEG> returns the sse algorithm use for sse with server side key ; or null if sse with server side key be not in use <END>
<BEG> sets the sse algorithm for server side encryption <END>
<BEG> sets the name of the bucket involve in this request <SEG> and return this request object to enable additional method call to be chain together <END>
<BEG> gets the expected content-type of the request <END>
<BEG> sets the expected content-type of the request and return this object <SEG> for method chaining <END>
<BEG> gets the expected content-md5 header of the request <END>
<BEG> sets the expected content-md5 header of the request and return this object <SEG> for method chaining <END>
<BEG> sets the name of the bucket from which an analytics configuration be to be retrieve and return this object for method chaining <END>
<BEG> the name of the bucket for which to retrieve delete the encryption configuration <END>
<BEG> sets the container for server-side encryption configuration rule <END>
<BEG> sets the inventory configuration <END>
<BEG> sets the name of the bucket whose location be be request <SEG> and return this updated object so that additional method call can be chain together <END>
<BEG> sets the name of the bucket contain the metric configuration to retrieve and return this object for method chaining <END>
<BEG> the public-policy status for this bucket <END>
<BEG> sets the name of the bucket whose website configuration be be retrieve <SEG> and return this updated request object so that additional method call can be chain together <END>
<BEG> gets the name of the bucket contain the object whose acl be to be retrieve <END>
<BEG> sets the key under which the object whose acl to be retrieve be store <END>
<BEG> < p > sets the optional version id specify which version of the object whose acl to be retrieve and return this { link getobjectaclrequest } <SEG> enable additional method call to be chain together <END>
<BEG> the current legal hold status for the specified object <END>
<BEG> < p > returns the optional part number that indicate a part in multipart object <END>
<BEG> < p > sets the optional part number to find the number of part of an object <END>
<BEG> the container element for an object 's retention setting <END>
<BEG> set the tag set <END>
<BEG> the public access block configuration currently in effect for this amazon s3 bucket <END>
<BEG> return glacier retrieval tier at which the restore will be process <END>
<BEG> gets the grantee be grant a permission by this grant <END>
<BEG> gets the permission be grant to the grantee by this grant <END>
<BEG> gets the group grantee 's uri <END>
<BEG> gets the { link groupgrantee } enumeration value with the specify amazon s3 group uri eg <END>
<BEG> returns the aws region where the bucket be locate <END>
<BEG> date when multipart upload will become eligible for abort operation by lifecycle <END>
<BEG> id of the lifecycle rule that make a multipart upload eligible for abort operation <END>
<BEG> return the serialization of a csv-encoded object <END>
<BEG> returns the { link inventorydestination } that contain information about where to publish the inventory result <END>
<BEG> returns true if the inventory be enable or false if inventory be disabled <END>
<BEG> sets the value whether the inventory be enable or disable <END>
<BEG> returns which object version s to include in the inventory result <END>
<BEG> returns the optional field that be include in the inventory result <END>
<BEG> add a field to the list of optional field that be include in the inventory result <END>
<BEG> returns the schedule for generate inventory result <END>
<BEG> returns the { link inventorys3bucketdestination } which contain s3 bucket destination information of where inventory result be publish <END>
<BEG> sets the prefix that be prepended to all inventory result and return this { link inventorys3bucketdestination } object for method chaining <END>
<BEG> return the type of encryption to use to protect the inventory content <END>
<BEG> returns the frequency for produce inventory result in { link string } format <END>
<BEG> return kms key id use to encrypt the inventory content <END>
<BEG> sets the kms key id to use to encrypt the inventory content <END>
<BEG> sets the optional continuation token <END>
<BEG> returns the list of analytics configuration for a bucket <END>
<BEG> gets whether or not this analytics configuration listing be complete <END>
<BEG> sets the name of the bucket contain the uploads to list <SEG> and return this updated listmultipartuploadsrequest object so that additional method call can be chain together <END>
<BEG> returns the optional upload id marker indicate where in the result to begin list <END>
<BEG> sets the optional prefix parameter restrict the response to multipart uploads for key that begin with the specify prefix <END>
<BEG> sets the optional prefix parameter restrict the response to key that begin with the specify prefix <END>
<BEG> gets the optional < code > maxkeys < code > parameter indicate the maximum number of key to include in the response <END>
<BEG> returns the optional maximum number of part to be return in the part listing <END>
<BEG> returns the optional part number marker indicate where in the result to be listing part <END>
<BEG> sets a metric configuration filter <END>
<BEG> gets the multi-factor authentication device serial number <END>
<BEG> sets the serial number of the multi-factor authentication device associate with the caller 's aws account <END>
<BEG> sets the multi-factor authentication device serial number to include with this request <END>
<BEG> sets the current unique multi-factor authentication token generate by the device associate with the caller 's aws account <END>
<BEG> sets the current <SEG> unique multi-factor authentication token generate by the device associate with the caller 's aws account <END>
<BEG> returns the next key marker that should be use in the next request to get the next page of result <END>
<BEG> returns the next upload id marker that should be use in the next request to get the next page of result <END>
<BEG> returns the optional maximum number of uploads to be list <SEG> a specify in the original request <END>
<BEG> sets whether this listing be truncate <SEG> and additional request need to be make to get more result <END>
<BEG> gets the marker to use in the next < code > listobjects < code > request in order to see the next page of result <END>
<BEG> indicates whether this object have an object lock configuration enable <END>
<BEG> the object lock rule in place for the specified object <END>
<BEG> the default retention period that you want to apply to new object place in the specified bucket <END>
<BEG> gets the value of the last-modified header <SEG> indicate the date and time at which amazon s3 last record a modification to the associate object <END>
<BEG> < p > gets the content-type http header <SEG> which indicate the type of content store in the associated object <END>
<BEG> < p > gets the content-language http header <SEG> which describe the natural language s of the intended audience for the enclosed entity <END>
<BEG> < p > sets the content-language http header which describe the natural language s of the intended audience for the enclosed entity <END>
<BEG> < p > gets the optional content-encoding http header specify what content encoding have be apply to the object and what decode mechanism must be apply in order to obtain the media-type reference by the content-type field <END>
<BEG> < p > gets the optional cache-control http header which allow the user to specify cache behavior along the http request reply chain <END>
<BEG> < p > sets the optional content-disposition http header <SEG> which specify presentational information such a the recommended filename for the object to be save a <END>
<BEG> < p > gets the optional content-disposition http header <SEG> which specify presentation information for the object such a the recommended filename for the object to be save a <END>
<BEG> the entity tag be a hash of the object <END>
<BEG> gets the version id of the associated amazon s3 object if available <END>
<BEG> returns the server-side encryption algorithm when encrypt the object use aws-managed key <END>
<BEG> return the s3 location that will receive the result of the restore request <END>
<BEG> return the serialization of csv-encoded select result <END>
<BEG> specifies json a request 's output serialization format <END>
<BEG> < p > gets the display name of the owner <END>
<BEG> sets the entity tag generate from the content of the associated part <SEG> and return this updated partetag object so that additional method call can be chain together <END>
<BEG> returns detail on the user who own the associated multipart upload <END>
<BEG> sets the user who own the associated multipart upload <END>
<BEG> sets the size of this part <SEG> in byte <END>
<BEG> returns the name of the header use to grant this permission <END>
<BEG> gets the string representation of this permission object a define by amazon s3 <SEG> eg <END>
<BEG> returns the { link permission } enumeration value represent the specify amazon s3 region id string <END>
<BEG> creates and return a new copy of the request <END>
<BEG> current number of byte of record payload data return <END>
<BEG> current number of uncompressed object byte process <END>
<BEG> sets the etag value for the new object that be create from the associate < code > putobject < code > request <END>
<BEG> returns the queue arn for this notification configuration <END>
<BEG> sets the queue arn for this configuration param queuearn arn for the sqs queue <END>
<BEG> fluent method to set the queue arn for this configuration param queuearn arn for the sqs queue return this object for method chaining <END>
<BEG> return the protocol to use in the redirect request <END>
<BEG> set the protocol to use in the redirect request and and return a reference to this object routingruleredirect for method chaining <END>
<BEG> set the host name to use in the redirect request <END>
<BEG> set the host name to use in the redirect request and return a reference to this object routingruleredirect for method chaining <END>
<BEG> set the object prefix key to use in the redirect request <END>
<BEG> set the object prefix key to use in the redirect request and return a reference to this object routingruleredirect for method chaining <END>
<BEG> return the http code to use in the redirect response <END>
<BEG> returns the amazon s3 region enumeration value represent the specify amazon s3 region id string <END>
<BEG> sets the storage class for the replication destination <END>
<BEG> sets the amazon s3 object prefix for the replication rule <END>
<BEG> fluent method to set the { link replicationfilter } that be use to identify object that a crr rule applies to <END>
<BEG> return a container specify the time by which replication should complete for all object and operation on object <END>
<BEG> return an integer specify time in minute <END>
<BEG> set the time in minute <END>
<BEG> sets the content type response header override <END>
<BEG> sets the content language response header override return this { link responseheaderoverrides } object for method chaining <END>
<BEG> sets the cache control response header <END>
<BEG> sets the name of the bucket contain the reference to the object to restore which be now store in amazon glacier <SEG> and return a reference to this object restoreobjectrequest for method chaining <END>
<BEG> sets the id of the version to be restore and return a reference to this object for method chaining <END>
<BEG> return if the requester be charge for conduct this operation from requester pays buckets <END>
<BEG> return the path in the provided s3 output location where select result will be restore to <END>
<BEG> set the condition that must be meet for the specified redirect to apply <END>
<BEG> set the condition that must be meet for the specified redirect to apply and return a reference to this object routingrule for method chaining <END>
<BEG> set the redirect information <END>
<BEG> set the redirect information and return a reference to this object routingrule for method chaining <END>
<BEG> set the object key name prefix when the redirect be apply <END>
<BEG> return the http error code when the redirect be apply <END>
<BEG> param value real value return s3event correspond to the value throw illegalargumentexception if the specify value do not map to one of the known value in this enum <END>
<BEG> return the list of { link filterrule } s for this { link s3keyfilter } <END>
<BEG> set the list of { link filterrule } s for this { link s3keyfilter } param filterrules new list of { link filterrule } s <END>
<BEG> convenience varargs method to set the list of { link filterrule } s for this { link s3keyfilter } and return this object for method chain param filterrules new { link filterrule } s for this { link s3keyfilter } return this object for method chaining <END>
<BEG> append a { link filterrule } to the list of { link filterrule } s for this { link s3keyfilter } param filterrule new { link filterrule } to append <END>
<BEG> return the server-side encryption <END>
<BEG> return the canned acl to apply to the restore result <END>
<BEG> sets the tag-set that be apply to the restore result <END>
<BEG> return the metadata to store with the restore result in s3 <END>
<BEG> gets the date when <SEG> accord to amazon s3 <SEG> this object be last modified <END>
<BEG> sets the date <SEG> accord to amazon s3 <SEG> this object be last modified <END>
<BEG> returns whether or not this version represent a delete marker <END>
<BEG> intended for internal use only in the amazon s3 client code <END>
<BEG> a required else or default block <SEG> invoke with no other more-specific visit method be appropriate <END>
<BEG> the expression that be use to query the object <END>
<BEG> describes the format of the data in the object that be be query <END>
<BEG> describes the format of the data that you want amazon s3 to return in response <END>
<BEG> sets the byte range on which to execute the query <END>
<BEG> sets the scan range param scanrange the new range value <END>
<BEG> return kms master key id to use for the default encryption <END>
<BEG> sets the kms master key id to use for the default encryption <END>
<BEG> return currently configure sse rule <END>
<BEG> sets the list of sse configuration rule <END>
<BEG> describes the default server-side encryption to apply to new object in the bucket <END>
<BEG> sets the name of the bucket where the inventory configuration will be store and return { link setbucketinventoryconfigurationrequest } object for method chaining <END>
<BEG> sets the name of the bucket whose lifecycle configuration be be set <SEG> and return this object so that additional method call may be chain together <END>
<BEG> sets the name of the bucket whose log configuration be be set and return this object <SEG> enable additional method call to be chain together <END>
<BEG> returns the metric configuration that be set on the bucket <END>
<BEG> return the set of tag to set for the specified object <END>
<BEG> return container for filter information of selection of kms encrypted s3 object <END>
<BEG> sets the container for filter information of selection of kms encrypted s3 object <END>
<BEG> returns the ssealgorithm enum correspond to the give string ; or null if and only if the give algorithm be null <END>
<BEG> returns the default server side encryption algorithm <SEG> which be aes256 <END>
<BEG> returns the aws key management system key id use for encryption <END>
<BEG> returns the scheme use for encrypt the amazon s3 object <END>
<BEG> returns the base64-encoded server-side encryption key that be provide in this object 's constructor <END>
<BEG> returns the encryption algorithm to use with this customer-provided server-side encryption key <END>
<BEG> returns the amazon s3 { link storageclass } enumeration value represent the specify amazon s3 < code > storageclass < code > id string <END>
<BEG> < p > get the value of the tag with the give key <END>
<BEG> param path path to test return true if the path provide be the same a the current context <END>
<BEG> converts the specify accesscontrollist object to an xml fragment that can be send to amazon s3 <END>
<BEG> converts the specify versioning configuration into an xml byte array <END>
<BEG> converts the specify website configuration into an xml byte array to send to s3 <END>
<BEG> < corsconfiguration > < corsrule > < allowedorigin > http : www foobar com < allowedorigin > < allowedmethod > get < allowedmethod > < maxageseconds > 3000 < maxagesec > < exposeheader > x-amz-server-side-encryption < exposeheader > < corsrule > < corsconfiguration > <END>
<BEG> < tagging > < tagset > < tag > < key > project < key > < value > foo < value > < tag > < tag > < key > user < key > < value > nschnarr < value > < tag > < tagset > < tagging > <END>
<BEG> < ? xml version= 1 0 encoding= utf-8 ? > < inventoryconfiguration xmlns= http : s3 amazonaws com doc 2006-03-01 > < destination > < s3bucketdestination > < accountid > a2ocncieqw9msg < accountid > < bucket > s3-object-inventory-list-gamma-us-east-1 < bucket > < format > csv < format > < prefix > string < prefix > < s3bucketdestination > < destination > < isenabled > true < isenabled > < filter > < prefix > string < prefix > < filter > < id > configid < id > < includedobjectversions > all < includedobjectversions > < optionalfields > < field > size < field > < field > lastmodifieddate < field > < field > storageclass < field > < field > etag < field > < field > ismultipartuploaded < field > < field > replicationstatus < field > < optionalfields > < schedule > < frequency > daily < frequency > < schedule > < inventoryconfiguration > <END>
<BEG> < analyticsconfiguration xmlns= http : s3 amazonaws com doc 2006-03-01 > < id > xxx < id > < filter > < and > < prefix > document < prefix > < tag > < key > foo < key > < value > bar < value > < tag > < and > < filter > < storageclassanalysis > < dataexport > < outputschemaversion > 1 < outputschemaversion > < destination > < s3bucketdestination > < format > csv < format > < bucketaccountid > 123456789 < bucketaccountid > < bucket > destination-bucket < bucket > < prefix > destination-prefix < prefix > < s3bucketdestination > < destination > < dataexport > < storageclassanalysis > < analyticsconfiguration > <END>
<BEG> < metricsconfiguration xmlns= http : s3 amazonaws com doc 2006-03-01 > < id > metrics-id < id > < filter > < ! -- a filter should have only one of prefix <SEG> tag or and -- > < prefix > prefix < prefix > < tag > < key > project < key > < value > foo < value > < tag > < and > < prefix > document < prefix > < tag > < key > foo < key > < value > bar < value > < tag > < and > < filter > < metricsconfiguration > <END>
<BEG> converts the specify { link deleteobjectsrequest } object to an xml fragment that can be send to amazon s3 <END>
<BEG> converts the restoreobjectrequest to an xml fragment that can be send to the restoreobject operation of amazon s3 <END>
<BEG> sets the key of the initiated multipart upload <SEG> and return this updated object so that additional method call can be chain together <END>
<BEG> gets the list of version summary describe the version store in the associated s3 bucket <END>
<BEG> gets the value of the version id marker parameter use to request this version listing <END>
<BEG> gets the version id marker to use in the next < code > listversions < code > request in order to obtain the next page of result <END>
<BEG> gets the aws region name associate with this bucket e g <END>
<BEG> < p > returns whether the client use path-style access for all request <END>
<BEG> < p > returns whether the client have chunk encode disable for all request <END>
<BEG> < p > returns whether the client have enable accelerate mode for get and put object <END>
<BEG> < p > returns whether the client be configure to sign payload in all situation <END>
<BEG> < p > returns whether the client should be configure with global bucket access enable <END>
<BEG> < p > returns whether the client should be configure to allow call to different region specify in an arn <END>
<BEG> returns information about whether the pause be successful or not ; and if not why <END>
<BEG> returns the information that can be use to resume a successfully paused operation <END>
<BEG> returns true if the transfer be pause else false <END>
<BEG> returns true if the transfer be not start or the pause operation have no effect on the transfer <END>
<BEG> opens the specified web page in the user 's default browser param url a web address url of a web page ex : http : www google com <END>
<BEG> initialises all gui element <END>
<BEG> return the product token provide <SEG> or select <SEG> by the user <END>
<BEG> return true if the file be a directory <SEG> or the file have an extension that match one of the allowed extension provide to this class 's constructor <END>
<BEG> return the count of byte that will be transfer by the object watch by this class <END>
<BEG> resets the byte count and timer variable for a watcher <END>
<BEG> notifies this watcher that bytes have be transfer <END>
<BEG> called when transfer progress data be remove from history <END>
<BEG> clears the history of transfer progress data <END>
<BEG> return the number of byte that have so far be transfer in the most recent transfer session <END>
<BEG> return an estimate of the time in second it will take for the transfer to complete <SEG> base on the number of byte remain to transfer and the overall byte second rate <END>
<BEG> return the byte rate per second base on the historical information for the last { link # seconds_of_history } second before the current time <END>
<BEG> return the number of millisecond time elapse for a transfer <END>
<BEG> return the number of byte that have be transfer over all session <SEG> include any session that have be restart <END>
<BEG> return the time in millisecond when the first byte be transfer <SEG> regardless of how many time the transfer be reset <END>
<BEG> param progresswatchers all the watcher involve in the same byte transfer operation <END>
<BEG> checks how many byte have be transfer since the last notification <SEG> and send a notification message if this number exceed the minimum byte transfer value <END>
<BEG> return the product token of the devpay product <END>
<BEG> loads the product list in { link constants # devpay_products_properties_filename } return the vector of < code > awsdevpayproduct < code > s <END>
<BEG> loads the product list in the { link java util properties } <END>
<BEG> return an < b > immutable < b > map contain the basic metadata associate with this object <SEG> with case-sensitive name string a key <END>
<BEG> param name1 param name2 return return true if the give string metadata item name be equivalent <SEG> i e <END>
<BEG> return true if a metdata data item with the give name case-insensitive be present <END>
<BEG> removes all the metadata item associate with this object <SEG> then add all the item in the provided map <END>
<BEG> return this object 's owner <SEG> or null if the owner be not available <END>
<BEG> set this object 's owner object base on information return from the service <END>
<BEG> return true if this distribution 's status be deployed <END>
<BEG> return the log bucket name <SEG> without the suffix s3 amazonaws com <END>
<BEG> return the origin bucket 's name <SEG> without the suffix s3 amazonaws com <END>
<BEG> return information about object that be successfully delete <END>
<BEG> return error code and message for object that could not be delete <END>
<BEG> return true if there be one or more error result <SEG> false otherwise <END>
<BEG> set 's the bucket 's requester pays configuration set <END>
<BEG> return true if this bucket object know it requester pays status <SEG> false otherwise <END>
<BEG> return the { link storagebucket } s that have not be create before the operation be cancel <END>
<BEG> return a list of the { link storageobjectschunk } s that have be generate since the last progress event be fire <END>
<BEG> return the event code <SEG> which will match one of this class 's public static event_xxx variable <END>
<BEG> return a list of one or more error that occur during an operation <SEG> but which be ignore at the time so the overall operation continue <END>
<BEG> return a thread watcher object contain information about the progress of an operation <END>
<BEG> return true if an event have result in an exception <END>
<BEG> return the first error throw by an event <SEG> or null if no error have be throw <END>
<BEG> throw exception throw first error throw by an event <SEG> or do nothing if no error occur <END>
<BEG> return the total number of thread involve in an operation <END>
<BEG> if this method return true <SEG> the method { link # getbytestotal } and { link # getbytestransferred } will contain information about the amount of data be transfer by the watched thread <END>
<BEG> return the expected total of byte that will be transfer by the watched thread <END>
<BEG> return the count of byte that have be transfer by the watched thread <END>
<BEG> return an estimate of the recent rate of byte second transfer speed <END>
<BEG> if this method return true <SEG> the method { link # gettimeremaining } will contain an estimate of the completion time for the data transfer <END>
<BEG> return true if the operation this object be associate with can be cancel <SEG> and a { link canceleventtrigger } be available <END>
<BEG> return the cancel event trigger associate with an operation <SEG> if any <END>
<BEG> return the common prefix in this chunk <END>
<BEG> return the last id marker return by the previous chunk if that chunk be incomplete <SEG> null otherwise <END>
<BEG> a convenience method to check whether a listing of uploads be complete true or there be more uploads available false <END>
<BEG> return the s3versions that have be delete since the last progress event be fire <END>
<BEG> forcibly expire the access token by set the expiry timestamp to the epoch <END>
<BEG> calculate a date timestamp a give number of second in the future <END>
<BEG> formats a second time value into a brief representation <SEG> such a < code > 37 minute < code > <END>
<BEG> appends the give { code parameter } to the give { code parameter } array <END>
<BEG> verifies that the provided parameter name do n't collide with the one we internally pass along to facebook <END>
<BEG> for a list of parameter <SEG> generate a url query string <END>
<BEG> the endpoint to hit <SEG> for example { code me friend ? limit=10 } <END>
<BEG> the request body <SEG> for example { code message=test status update } <END>
<BEG> another call in the current batch upon which this call depend <SEG> for example { code get-friends } <END>
<BEG> http headers to be send a part of this request <END>
<BEG> the http status code for this response <END>
<BEG> the attachment 's data <END>
<BEG> return the give content type or try to guess from stream or file name <END>
<BEG> see java lang iterable # iterator since 1 6 7 <END>
<BEG> data for this connection <END>
<BEG> get facebook response header field < code > x-fb-debug < code > return the facebook response header field < code > x-fb-debug < code > <END>
<BEG> get facebook response header field < code > x-fb-trace-id < code > return the facebook response header field x-fb-trace-id <END>
<BEG> finds and invokes method on { code object } that be annotate with the { code jsonmappingcompleted } annotation <END>
<BEG> for a java field annotate with the { code facebook } annotation <SEG> figure out what the corresponding facebook json field name to map to it be <END>
<BEG> recursively marshal the give { code object } to json <END>
<BEG> hook method which allow subclass to easily customize the { code connection } s create by { link # executeget string } and { link # executepost string <SEG> string } - for example <SEG> set a custom read timeout or request header <END>
<BEG> attempts to cleanly close a resource <SEG> swallow any exception that might occur since there 's no way to recover anyway <END>
<BEG> attempts to cleanly close an { code httpurlconnection } <SEG> swallow any exception that might occur since there 's no way to recover anyway <END>
<BEG> writes the content of the { code source } stream to the { code destination } stream use the give { code buffersize } <END>
<BEG> return if the binary attachment stream be close automatically since 1 7 0 return { code true } if the binary stream should be close automatically <SEG> { code false } otherwise <END>
<BEG> define if the binary attachment stream be close automatically after send the content to facebook since 1 7 0 param autoclosebinaryattachmentstream { code true } if the { link binaryattachment } stream should be close automatically <SEG> { code false } otherwise <END>
<BEG> access to the current response header return the current reponse header map <END>
<BEG> return the raw error a json <SEG> may be < code > null < code > return raw error <END>
<BEG> gets the facebook graph api error type <END>
<BEG> gets the facebook api error user title <END>
<BEG> gets the facebook api error { code fbtrace_id } <END>
<BEG> specifies how we map graph api exception type message to real java exception <END>
<BEG> check if a string may be a json and contain a error string somewhere <SEG> this be use for speedup the error parse param json <END>
<BEG> create a { link jsonobject } from string and swallow possible jsonexception param json the string representation of the json return the jsonobject <SEG> may be < code > null < code > <END>
<BEG> return the facebook graph api endpoint url return the facebook graph api endpoint url <END>
<BEG> convert { link jsonvalue } into boolean <END>
<BEG> convert jsonvalue to a double param json return <END>
<BEG> convert the message and the argument and convert everything in a { code messagetuple } <END>
<BEG> return the instance of the logger that belong to the category <END>
<BEG> see java lang object # equal java lang object <END>
<BEG> a list of task allow to perform for this page <END>
<BEG> remove the task from the task list <END>
<BEG> return the actor id page id of this creative <END>
<BEG> return the image use for actor 's icon <END>
<BEG> return the url of the icon for the actor page id of this creative <END>
<BEG> return the title text use for actor <END>
<BEG> return the call to action button text and header text of legacy ad <END>
<BEG> return a json object define crop dimension for the image specify <END>
<BEG> return image hash for an image you can use in creatives <END>
<BEG> return a url for the image for this creative <END>
<BEG> return instagram actor id <END>
<BEG> return instagram permalink <END>
<BEG> instagram story id -- getter return instagram story id <END>
<BEG> return the open graph og id for the link in this creative if the landing page have og tag <END>
<BEG> return used to identify a specific land tab on the page e g <END>
<BEG> return the id of the promoted_object or object that be relevant to the ad and ad type <END>
<BEG> return the id of a page post to use in an ad <END>
<BEG> return the page id and the content to create a new unpublished page post <END>
<BEG> return the type of object that be be advertise <END>
<BEG> return destination url for a link ad not connect to a page <END>
<BEG> return the id of the product set for this creative <END>
<BEG> return the run status of this creative <END>
<BEG> return the tracking url for dynamic product ad <END>
<BEG> return the url to a thumbnail for this creative <END>
<BEG> return a set of query string parameter <END>
<BEG> return the index zero base of the image from the additionalimages array to use a the ad image for a dynamic product ad <END>
<BEG> return native deeplinks attach to the post <END>
<BEG> return the branded content sponsor page id <END>
<BEG> return an optional call to action button <END>
<BEG> return if canvas experience be enable post click <END>
<BEG> return link caption <END>
<BEG> return whether to force the post to render in a single link format <END>
<BEG> return the main body of the post <END>
<BEG> return if set to false <SEG> remove the end card which display the page icon <END>
<BEG> return the id of a facebook native offer <END>
<BEG> return a welcome text from page to user on messenger once a user performs send message action on an ad <END>
<BEG> return url of a picture to use in the post <END>
<BEG> return list of product ids provide by the advertiser for collections <END>
<BEG> return deep link to the app <END>
<BEG> return the lead ad form id <END>
<BEG> return the destination link when the cta button be click <END>
<BEG> return caption show in the attachment <END>
<BEG> return link format of video <END>
<BEG> return id of the facebook page which the cta button link to <END>
<BEG> return open graph object url for canvas virtual good ad <END>
<BEG> return the spec for a link page post or carousel ad <END>
<BEG> return the spec for an offer page post <END>
<BEG> return id of a facebook page <END>
<BEG> return the spec for a template link page post a use in dynamic product ads <END>
<BEG> a list of ad creative ids that this ad image be be use in <END>
<BEG> whether this account be for an agency represent a client <END>
<BEG> whether the client be base in france <END>
<BEG> client 's city <END>
<BEG> client 's country code <END>
<BEG> name of the client <END>
<BEG> first line of client 's street address <END>
<BEG> whether the client be pay via invoice <END>
<BEG> return whether the campaign can set the spend cap <END>
<BEG> return created time <END>
<BEG> return campaign 's objective <END>
<BEG> return a spend cap for the campaign <SEG> such that it will not spend more than this cap <END>
<BEG> return approximate number of people in this audience <END>
<BEG> return json dictionary of type <SEG> sub_type to indicate by which method the custom audience be create <END>
<BEG> return dictionary of code and description <END>
<BEG> return custom audience description <END>
<BEG> return read-only json dictionary with key id contain the pixel id whose traffic generate this custom audience <END>
<BEG> return last used time of this object by the current viewer <END>
<BEG> return the ids of the lookalike audience generate from this audience <END>
<BEG> return generated only when the subtype be lookalike <END>
<BEG> return dictionary of code to int value and description to a description string <END>
<BEG> return your opt-out url so people can choose not to be target <END>
<BEG> return the id of origin custom audience <END>
<BEG> return json dictionary of permission string to boolean value if the custom audience have that permission <END>
<BEG> return number of day to keep the user in this cluster <END>
<BEG> return audience rule to be apply on the referrer url <END>
<BEG> return type of custom audience <SEG> derive from original data source <END>
<BEG> return last update of people in this custom audience <END>
<BEG> return last time this audience metadata be update <END>
<BEG> return permission to edit the audience <END>
<BEG> return permission to see insight of the audience <END>
<BEG> return capability to share audience base on gatekeeper <END>
<BEG> return capability to be use a seed for lookalike audience <END>
<BEG> return capability to be use a seed for lookalike audience for recipient ad account <END>
<BEG> return the caption of the follow up action text on the final screen of the form <END>
<BEG> return the supplied privacy policy url <END>
<BEG> return default currency for product <END>
<BEG> return allows product to be delete if they be no longer include in a product feed <END>
<BEG> return the delimiter use in product feed file <END>
<BEG> return the character encode use by provided feed <END>
<BEG> return the total product of this product catalog <END>
<BEG> return allows tab and newlines within field <END>
<BEG> return the configuration for fetch a feed in a recurrant manner <END>
<BEG> return the day of month to fetch feed <SEG> for monthly schedule e g <SEG> 1 for first of month <END>
<BEG> return the day of week to fetch feed <SEG> for weekly schedule <END>
<BEG> return hour of the day to fetch the product feed <SEG> 0-23 pst <END>
<BEG> return the interval at which the product feed get fetch <END>
<BEG> return minute of the hour to fetch the product feed <SEG> 0-59 <END>
<BEG> return the input method the product feed be obtain with <END>
<BEG> return retailer id of the product group <END>
<BEG> return the list of product variant and their option in the order they need to be display on the ui <END>
<BEG> an object contain the id and name of the profile who post this album <END>
<BEG> the album cover photo id <END>
<BEG> the privacy setting for the album <END>
<BEG> the last time the photo album be update <END>
<BEG> the album 's picture <SEG> if provide <END>
<BEG> people who like this <END>
<BEG> all the platform the app support return all the platform the app support <END>
<BEG> domains and subdomains this app can use <END>
<BEG> extended permission that a person can choose to grant when authenticated referrals be enable <END>
<BEG> bundle id of the associated ios app <END>
<BEG> app ad relate information to help debugging <END>
<BEG> bitmask of on off setting for various app events related feature <END>
<BEG> whether the app install be trackable or not <END>
<BEG> the url of a special landing page that help people who be use an app begin publish open graph activity return the url of a special landing page that help people who be use an app begin publish open graph activity <END>
<BEG> one line description of an app that appear in the login dialog return one line description of an app that appear in the login dialog <END>
<BEG> the text to explain why an app need additional permission <END>
<BEG> indicates whether the app use fluid or settable height value for canvas <END>
<BEG> the non-secure url from which canvas app content be load <END>
<BEG> the company the app belong to <END>
<BEG> true if the app have configure single sign on on ios <END>
<BEG> email address list for people use the app to contact developer <END>
<BEG> social context for the app <END>
<BEG> ranking of this app vs other apps compare daily active user <END>
<BEG> url that be ping whenever a person remove the app <END>
<BEG> the platform that should be use to share content <END>
<BEG> webspace create with one of our host partner for this app <END>
<BEG> id of the app in the ipad app store <END>
<BEG> mobile url of the app section on a person 's profile <END>
<BEG> url to which mobile user will be direct when use the app <END>
<BEG> the string append to < code > apps facebook com < code > to navigate to the app 's canvas page return the string append to < code > apps facebook com < code > to navigate to the app 's canvas page <END>
<BEG> mobile store urls for the app <END>
<BEG> the title of the app when use in a page tab <END>
<BEG> the non-secure url from which page tab app content be load <END>
<BEG> url of the app section on a user 's profile for the desktop site <END>
<BEG> app request must originate from this comma-separated list of ip address <END>
<BEG> indicates whether app usage story show up in the ticker or news feed <END>
<BEG> indicates whether the app should do a fast-app-switch to the facebook app to show the app request dialog <END>
<BEG> indicates whether the app have not opt out of app install tracking <END>
<BEG> indicates whether the app have not opt out of the mobile sdks send data on sdk interaction return indicates whether the app have not opt out of the mobile sdks send data on sdk interaction <END>
<BEG> whether to suppress the native ios login dialog return whether to suppress the native ios login dialog <END>
<BEG> url to terms of service that appear in the login dialog return url to terms of service that appear in the login dialog <END>
<BEG> url scheme suffix return url scheme suffix <END>
<BEG> does the app use the legacy auth method ? <END>
<BEG> url of a website that integrate with this app <END>
<BEG> indicates whether login version 4 be enable for this app <END>
<BEG> localized content for the login new user experience <END>
<BEG> relevance score of an asset <END>
<BEG> request action type for structured request return request action type for structured request <END>
<BEG> optional data pass with the request for track purpose return optional data pass with the request for track purpose <END>
<BEG> the recipient user associate with the request <END>
<BEG> tags for the check-in <END>
<BEG> the id and name of the user who make the check-in <END>
<BEG> the id <SEG> name <SEG> and location of the facebook page that represent the location of the check-in <END>
<BEG> post-json-mapping operation that populate the { code messagetags } field by hand <END>
<BEG> objects tag in the message users <SEG> pages <SEG> etc <END>
<BEG> the number of like on this comment <END>
<BEG> number of reply to this comment <END>
<BEG> this field be return only if the authenticate user can remove this comment <END>
<BEG> this field be return only if the authenticate user like this comment return this field be return only if the authenticate user like this comment <END>
<BEG> if this comment be a reply <SEG> this field return the parent comment <SEG> otherwise no value return the parent comment since 1 6 13 <END>
<BEG> whether the viewer can hide this comment return can_hide since 1 7 1 <END>
<BEG> parent object this comment be make on <END>
<BEG> the permanent static url to the comment return permanent static url <END>
<BEG> attachment image add to a comment <END>
<BEG> the count of comment on this node <END>
<BEG> order in which comment be return <END>
<BEG> a list of tag indicate the message folder <SEG> and whether the conversation be read and see <END>
<BEG> users who be on this message conversation return users who be on this message conversation <END>
<BEG> users who send a message on the conversation return users who send a message on the conversation <END>
<BEG> list of all message in the conversation return list of all message in the conversation <END>
<BEG> users who use to be on this message conversation <END>
<BEG> the new identifier for thread effective after september 24 <SEG> 2017 return the new identifier for thread effective after september 24 <SEG> 2017 <END>
<BEG> the number of message in the conversation return the number of message in the conversation <END>
<BEG> the number of unread message in the conversation facebook do not send the unread count if there be n't any new message <END>
<BEG> wallpaper to display a a background for the thread return wallpaper to display a a background for the thread <END>
<BEG> whether you be subscribe to the conversation return whether you be subscribe to the conversation <END>
<BEG> when non-zero <SEG> the cover image overflow horizontally <END>
<BEG> direct url for the person 's cover photo image return direct url for the person 's cover photo image <END>
<BEG> the length <SEG> within the message field <SEG> of the object mention <END>
<BEG> the user who own the event <END>
<BEG> the start time of the event <END>
<BEG> whether or not the event have be mark a canceled return whether or not the event have be mark a cancel <END>
<BEG> the rsvp status of this event <END>
<BEG> the url to a location to buy ticket for this event on events for pages only <END>
<BEG> the group the event belong to <SEG> if any <END>
<BEG> should the time information be ignore in the date for this event ? <END>
<BEG> cover picture return cover picture <END>
<BEG> the type of the friend list ; possible value be : { code close_friends } <SEG> { code acquaintance } <SEG> { code restrict } <SEG> { code user_created } <SEG> { code education } <SEG> { code work } <SEG> { code current_city } or { code family } <END>
<BEG> return the id that be use for the post or comment <END>
<BEG> returns a map of index and { link hour } object with the open and close time param day the day the map should be return for return the map contain the index and the { link hour } object <END>
<BEG> length of the period during which the insight be collect <SEG> e g <END>
<BEG> return the list of child medium object <SEG> only available if the media_type be a carousal return the list of child a unmodifiable list <END>
<BEG> add a new child to the child list param child the child that be added return true if add the child work <END>
<BEG> return the comment of this medium return the comment of this medium <END>
<BEG> the page that post the milestone <END>
<BEG> comments make on the note <END>
<BEG> the note icon <END>
<BEG> indicates that the notification be unread <END>
<BEG> per-property config return per-property config <END>
<BEG> object type associate with this action type return object type associate with this action type <END>
<BEG> for struct property <SEG> the config for the nested property return the config for the nested property <END>
<BEG> if opengraphrating be a new recommendation return < code > true < code > if it be a recommendation <SEG> < code > false < code > if it 's a rating <END>
<BEG> was a rating include return was a rating include <END>
<BEG> rating return rating <END>
<BEG> review text include in the review return review text include in the review <END>
<BEG> person who rat the object return person who rat the object <END>
<BEG> open graph story generate by the rating action return open graph story generate by the rating action <END>
<BEG> external account <END>
<BEG> the sub category list return the sub category list since 1 6 15 <END>
<BEG> the email list in the about section of a page <END>
<BEG> the restaurant 's food style <END>
<BEG> notes of this page return notes of this page <END>
<BEG> page label of this page return label of this page <END>
<BEG> linked instagram account for this page <END>
<BEG> affiliation of this person <END>
<BEG> app id for app-owned pages and app pages <END>
<BEG> artists the band like <END>
<BEG> dress code of the business <END>
<BEG> band interest <END>
<BEG> members of the band <END>
<BEG> the best available page on facebook for the concept represent by this page <END>
<BEG> the mailing or contact address for this page <END>
<BEG> if this be a page in a global pages hierarchy <SEG> the number of people who be be direct to this page <END>
<BEG> year vehicle be build <END>
<BEG> the name of the page with country code append for global brand pages <END>
<BEG> this brand 's global root id <END>
<BEG> indicates whether this page have add the app make the query in a page tab <END>
<BEG> legal information about the page publisher <END>
<BEG> influences on the band <END>
<BEG> whether the business correspond to this page be permanently close <END>
<BEG> personal information <END>
<BEG> payment option accept by the business <END>
<BEG> pharmacy safety information <END>
<BEG> reason why a post be n't eligible for boost <END>
<BEG> reason <SEG> for which boost post be not eligible <END>
<BEG> public transit to the business <END>
<BEG> services the restaurant provide <END>
<BEG> the restaurant 's specialty <END>
<BEG> the tv network for the tv show <END>
<BEG> offer eligibility status <END>
<BEG> the air schedule of the tv show <END>
<BEG> the page address <SEG> if any <SEG> in a simple single line format <END>
<BEG> unique store number for this location page <END>
<BEG> the studio for the film production <END>
<BEG> the social sentence and like count information for this page <END>
<BEG> unread message count for the page <END>
<BEG> number of unread notification <END>
<BEG> the number of visit to this page 's location <END>
<BEG> video featured by the page <END>
<BEG> voip info since 1 10 0 return voip info <END>
<BEG> whatsapp number return whatsapp number <END>
<BEG> parent page of this page <END>
<BEG> indicates whether a user have accept the tos for run leadgen ads on the page <END>
<BEG> indicates whether this location be always open <END>
<BEG> indicates whether location be part of a chain return indicates whether location be part of a chain <END>
<BEG> indicates whether the page be eligible for the branded content tool return be eligible for the branded content tool <END>
<BEG> indicates whether the page be a messenger platform bot with get started button enable return be a messenger platform bot with get started button enable <END>
<BEG> indicates whether the page be a messenger platform bot return indicates whether the page be a messenger platform bot <END>
<BEG> indicates whether page be own return indicates whether page be own <END>
<BEG> the description of the page in raw html <END>
<BEG> the phone number not always normalize for country code for the page <END>
<BEG> general information about this page <END>
<BEG> the number of people that be talk about this page last seven day <END>
<BEG> whether this page have checkin functionality enable <END>
<BEG> indicates whether the page be unclaimed <END>
<BEG> subtext about the page be view <END>
<BEG> page estimate message response time display to user return page estimate message response time display to user <END>
<BEG> the general information for a page <END>
<BEG> the location of the place this page represent <END>
<BEG> the instant workflow merchant id associate with the page return the instant workflow merchant id associate with the page <END>
<BEG> the website url return the website url since 1 6 15 <END>
<BEG> the name of a location page that provide additional location information for that page beside it name <END>
<BEG> press contact information of the band <END>
<BEG> indicates the current instant articles review status for this page return indicates the current instant articles review status for this page <END>
<BEG> content of this note <END>
<BEG> app that store the destination info on android <END>
<BEG> email address that can be contact by a user <END>
<BEG> the information of the page that own the milestone <END>
<BEG> the item associate with the payment <END>
<BEG> the list of different action type that have occur in this payment <END>
<BEG> the place that be visit return the place that be visit <END>
<BEG> a list of the profile mention or target in this post <END>
<BEG> a list of available action name and link include commenting <SEG> liking <SEG> and an optional app-specified action <END>
<BEG> a list of property for this post <END>
<BEG> sub-shares of a multi-link share post return sub-shares of a multi-link share post <END>
<BEG> a sponsor tag point to a facebook page <END>
<BEG> objectives under which this post can be advertised return objectives under which this post can be advertise <END>
<BEG> if comment be be mirror to an external site <SEG> this function return the domain of that external site <END>
<BEG> id of the parent post return id of the parent post <END>
<BEG> the application use to create this post <END>
<BEG> status of the promotion <SEG> if the post be promote <END>
<BEG> ads target information of the post <END>
<BEG> the { code status_type } of post this be <SEG> for example { code approved_friend } <END>
<BEG> text from story not intentionally generate by user return text from story not intentionally generate by user since 1 6 16 <END>
<BEG> unix timestamp of the scheduled publish time for the post <END>
<BEG> number of time the post have be share <END>
<BEG> id of admin who create the post <END>
<BEG> whether the post can be promote on instagram <END>
<BEG> whether or not the post reference an app <END>
<BEG> whether the post have expiration time that have pass return whether the post have expiration time that have pass <END>
<BEG> if this post be mark a hidden applies to pages only <END>
<BEG> whether the post be a spherical video post <END>
<BEG> attachments add to a post <END>
<BEG> full picture url <END>
<BEG> the description of the privacy value <END>
<BEG> for custom setting <SEG> a comma-separated list of user ids and friend list ids that can not see the post <END>
<BEG> for custom setting <SEG> a comma-separated list of user ids and friend list ids that can see the post <END>
<BEG> indicates whether the profile photo be the default 'silhouette ' picture <SEG> or have be replace return be the photo the default or have be replace <END>
<BEG> the reaction list <END>
<BEG> return the user reaction to the object <END>
<BEG> is < code > true < code > if facebook do n't want any other byte and the video be transfer <END>
<BEG> the review rating <END>
<BEG> applinks to the place on various device <END>
<BEG> the social sentence and the like count information for this place <END>
<BEG> the overall page rating <SEG> base on rating survey from user <SEG> on a scale of 1-5 <END>
<BEG> the page node correspond to the place <END>
<BEG> number of rating for the place return number of rating for the place <END>
<BEG> the service that the restaurant provide <END>
<BEG> set to { code true } to disable sharing in the webview for sensitive info <END>
<BEG> the user that have like this message <END>
<BEG> the object type which be set to status <END>
<BEG> profiles tag in the text accompany the attachment return profiles tag in the text accompany the attachment <END>
<BEG> returns medium object photo <SEG> link etc <END>
<BEG> type of the medium such a photo <SEG> video <SEG> link etc return type of the medium such a photo <SEG> video <SEG> link etc <END>
<BEG> returns object that the attachment link to <END>
<BEG> unshimmed url of the attachment <END>
<BEG> returns list of subattachments that be associate with this attachment <END>
<BEG> indicates the object type that this subscription apply to <END>
<BEG> the url that will receive the post request when an update be trigger <END>
<BEG> one or more of the set of valid field in this object to subscribe to <END>
<BEG> you can login a the test user by go to this url <END>
<BEG> if logging in manually that be <SEG> not use the login_url <SEG> you can use this a the user 's email address <END>
<BEG> if logging in manually that be <SEG> not use the login_url <SEG> you can use this a the user 's password <END>
<BEG> the message in this thread <END>
<BEG> the translated string <END>
<BEG> the approval status of the string <END>
<BEG> the original string that be translate <END>
<BEG> true if this be a live poll with open voting and the card hide after vote return true if this be a live poll with open voting and the card hide after vote <END>
<BEG> true if the poll should be open by default <SEG> false if it start in a closed state return true if the poll should be open by default <SEG> false if it start in a closed state <END>
<BEG> the poll question text return the poll question text <END>
<BEG> true if this be a live poll and voting be open and there be a background gradient to highlight the vote card return true if this be a live poll and voting be open and there be a background gradient to highlight the voting card <END>
<BEG> true if this be a live poll and voting be open and the result show after vote return true if this be a live poll and voting be open and the result show after vote <END>
<BEG> return the sender from of the feed value return from of the feed value <END>
<BEG> value of this change <END>
<BEG> return true if the liked item be a comment return true if the liked item be a comment <END>
<BEG> return < code > true < code > if the reaction be make on a comment <SEG> < code > false < code > if the reaction be make on a post return < code > true < code > if the reaction be make on a comment <END>
<BEG> return < code > true < code > if the reaction be make on a reply comment of a comment <SEG> return < code > true < code > if the reaction be make on a reply <END>
<BEG> timestamp for board time <END>
<BEG> get a set of app id return set of app id <END>
<BEG> get the role to the give app id param appid return list of app role <END>
<BEG> returns whether the message contain a quick reply <END>
<BEG> returns wether the message be a reply to another message return { code true } if the message be a reply of another message <SEG> { code false } otherwise <END>
<BEG> return if the object contain only a nlp entity or if the nlp object contain body <SEG> start and end field <SEG> too <END>
<BEG> return the complete list of all find entity <END>
<BEG> return the complete list of all found error return the complete list of all found error <END>
<BEG> check if the return json contain the error field return { code true } if the nlp result find error <SEG> { code false } otherwise <END>
<BEG> return a subset of the found entity <END>
<BEG> list of iso 3166 country code e g <END>
<BEG> list of analytics data point e g <END>
<BEG> list of whatsapp normalize phone number e g <END>
<BEG> returns a java representation of a facebook long { code date } string <SEG> or the number of second since the epoch <END>
<BEG> returns a java representation of a facebook short { code date } string <END>
<BEG> returns a string representation of a { code date } object param date a date return string representation of a { code date } object <END>
<BEG> returns a < strong > short < strong > string representation of a { code date } object param date a date return string representation of a { code date } object <END>
<BEG> ensures that { code obj } be n't { code null } or an empty string <END>
<BEG> checks be the object be a empty 'collection ' or 'map ' <END>
<BEG> ensures that { code parameter } be n't { code null } <END>
<BEG> is the give { code object } a primitive type or wrapper for a primitive type ? <END>
<BEG> for a give { code field } <SEG> get it first parameterized type argument <END>
<BEG> gets all accessor method for the give { code clazz } <END>
<BEG> returns a copy of the key value in the map at the point of call <END>
<BEG> is the give json equivalent to the empty list < code > [ ] < code > ? <END>
<BEG> checks if the give string start with a < code > [ < code > character <SEG> so it may be a jsonarray param jsonstring the json to check <END>
<BEG> checks if the give string be equal to the string with the content { code null } param jsonstring the json to check <END>
<BEG> returns a trimmed version of { code string } <SEG> or { code null } if { code string } be { code null } or the trimmed version be a blank string <END>
<BEG> builds and return a string representation of the give { code inputstream } <END>
<BEG> returns an { code integer } representation of the give { code string } <SEG> or { code null } if it 's not a valid { code integer } <END>
<BEG> for the give { code querystring } <SEG> extract a mapping of query string parameter name to value <END>
<BEG> modify the query string in the give { code url } and return the new url a string <END>
<BEG> remove the give key from the url query string and return the new url a string <END>
<BEG> convert a string for example the url parameter into a version object param urlelementstr string that should return the generated version <END>
<BEG> the id of the provider for which the api exception occur <END>
<BEG> the id of the provider user this connection be connect to <END>
<BEG> a link to the provider 's user profile page <END>
<BEG> an image visualize the connection <END>
<BEG> the time the connection expire <END>
<BEG> exposes the serviceprovider instance to subclass <END>
<BEG> exposes the apiadapter to subclasses <END>
<BEG> the connection key that already exist <END>
<BEG> provides subclass with access to a monitor that can be use to synchronize access to this connection <END>
<BEG> the user 's registered email address <END>
<BEG> the user 's registered username e g <END>
<BEG> builds the user profile <END>
<BEG> the permission require to access the resource <END>
<BEG> the consumer or client key assign to the application by the provider <END>
<BEG> the verifier string generate by the provider <END>
<BEG> the token secret <END>
<BEG> param conf configuration return authorization instance since twitter4j 2 1 11 <END>
<BEG> return a dispatcher instance <END>
<BEG> return the latitude of the geo location return the latitude <END>
<BEG> sets a hint on the region in which to search <END>
<BEG> sets the minimal granularity of data to return <END>
<BEG> sets a hint a to the number of result to return <END>
<BEG> param value string to be encode return encode string see < a href= http : wiki oauth net testcases > oauth testcases < a > see < a href= http : group google com group oauth browse_thread thread a8398d0521f4ae3d 9d79b698ab217df2 ? hl=en & lnk=gst & q=space+encoding # 9d79b698ab217df2 > space encode - oauth | google groups < a > see < a href= http : tool ietf org html rfc3986 # section-2 1 > rfc 3986 - uniform resource identifier uri : generic syntax - 2 1 <END>
<BEG> param value string to be decode <END>
<BEG> parses a query string without the lead ? <END>
<BEG> returns the response body a string < br > disconnects the internal httpurlconnection silently <END>
<BEG> returns the response body a twitter4j jsonobject < br > disconnects the internal httpurlconnection silently <END>
<BEG> return the request associate with the event return the request associate with the event <END>
<BEG> return returns the number of value in this array <END>
<BEG> same a { link # put } <SEG> with added validity check <END>
<BEG> static factory method for twitter-text-java return hashtag entity since twitter4j 2 2 6 <END>
<BEG> appends value to the array map to { code name } <END>
<BEG> returns the value map by { code name } if it exist and be a boolean or can be coerce to a boolean <SEG> or { code fallback } otherwise <END>
<BEG> returns the value map by { code name } if it exist <SEG> coerce it if necessary <SEG> or { code fallback } if no such mapping exists <END>
<BEG> returns the value map by { code name } if it exist and be a { code jsonarray } <SEG> or throw otherwise <END>
<BEG> param method the method invoke param time the method execution time param success success <END>
<BEG> converts the pagination parameter into a list of postparameter < br > this method also validates the preset parameter <SEG> and throw illegalstateexception if any unsupported parameter be set <END>
<BEG> param file medium file since twitter4j 2 2 5 <END>
<BEG> param mediaids medium id since twitter4j 4 0 2 <END>
<BEG> since twitter4j 4 0 7 return attachment url <END>
<BEG> param attachmenturl attachment url return status update since twitter4j 4 0 7 <END>
<BEG> param name medium name param body medium body return this instance since twitter4j 2 2 5 <END>
<BEG> return possibly sensitive since twitter4j 2 2 5 <END>
<BEG> return autopopulatereplymetadata since twitter4j 4 0 7 <END>
<BEG> param autopopulatereplymetadata auto reply meta data since twitter4j 4 0 7 <END>
<BEG> tests if the exception be cause by network issue return if the exception be cause by network issue since twitter4j 2 1 2 <END>
<BEG> tests if the exception be cause by rate limitation exceed return if the exception be cause by rate limitation exceed see < a href= http : dev twitter com docs rate-limiting > rate limiting | twitter developers < a > since twitter4j 2 1 2 <END>
<BEG> returns a hexadecimal representation of this exception stacktrace < br > an exception code be a hexadecimal representation of the stacktrace which enable it easy to google known issue < br > format : xxxxxxxx : yyyyyyyy [ xx : yy ] < br > where xx be a hash code of stacktrace without line number < br > yy be a hash code of stacktrace exclude line number < br > [ -xx : yy ] will appear when this instance a root cause return a hexadecimal representation of this exception stacktrace <END>
<BEG> tests if error message from the api be available return true if error message from the api be available since twitter4j 2 2 3 <END>
<BEG> returns a oauth authenticated instance < br > consumer key and consumer secret must be provide by twitter4j property <SEG> or system property < br > unlike { link twitter # setoauthaccesstoken twitter4j auth accesstoken } <SEG> this factory method potentially return a cached instance <END>
<BEG> counts the length of the tweet param text tweet to be count return the length of the tweet <END>
<BEG> print the version string param args will be just ignore <END>
<BEG> this will lead to an ioexception in the s accept call <END>
<BEG> send open confirmation <END>
<BEG> unless you know what you be do <SEG> you will never need this <END>
<BEG> after a successful connect <SEG> one have to authenticate oneself <END>
<BEG> a convenience wrapper function which read in a private key pem format <SEG> either dsa or rsa and then call < code > authenticatewithpublickey string <SEG> char [ ] <SEG> string < code > <END>
<BEG> close the connection to the ssh-2 server <END>
<BEG> create a very basic { link scpclient } that can be use to copy file from to the ssh-2 server <END>
<BEG> force an asynchronous key re-exchange the call do not block <END>
<BEG> returns a { link connectioninfo } object contain the detail of the connection <END>
<BEG> determines if the authentication phase be complete <END>
<BEG> returns true if there be at least one fail authentication request and the last failed authentication request be mark with partial success by the server <END>
<BEG> checks if a specified authentication method be available <END>
<BEG> open a new { link session } on this connection <END>
<BEG> send an ssh_msg_ignore packet with the give data attribute <END>
<BEG> sets the parameter for the diffie-hellman group exchange <END>
<BEG> define the set of allow server host key algorithm to be use for the follow key exchange operation <END>
<BEG> enable disable tcp_nodelay disable enable nagle 's algorithm on the underlie socket <END>
<BEG> cancel an earlier request remote port forwarding <END>
<BEG> provide your own instance of securerandom <END>
<BEG> generate an integer base work key base on our secret key and what we process we be plan to do <END>
<BEG> return returns the e throw illegalstateexception <END>
<BEG> return returns the share secret k throw illegalstateexception <END>
<BEG> hack - to test it with j2me <END>
<BEG> adds a single public key entry to the database <END>
<BEG> parses the give known_hosts data and add entry to the database <END>
<BEG> generate the hashed representation of the give hostname <END>
<BEG> try to find the preferred order of hostkey algorithm for the give hostname <END>
<BEG> stop tcp ip forwarding of newly arrive connection <END>
<BEG> close the underlie ssh forward channel and free up resource <END>
<BEG> set the charset use to convert between java unicode strings and byte encoding use by the server for path and file name <END>
<BEG> the currently use charset for filename encode decode <END>
<BEG> minimum line : xxxx y z -- - > 8 char <END>
<BEG> the session for open for this scp transfer must be close use scpinputstream # close param remotefile return throw ioexception <END>
<BEG> establish the connection and block until the first handshake have complete <END>
<BEG> retrieve the underlie socket <END>
<BEG> change the current dsa hostkey <END>
<BEG> utility method that load a pem base hostkey either rsa or dsa base and call either < code > setrsahostkey < code > or < code > setdsahostkey < code > <END>
<BEG> utility method that load a hostkey from a pem file either rsa or dsa base and call either < code > setrsahostkey < code > or < code > setdsahostkey < code > <END>
<BEG> callback interface with method that will be call upon authentication event <END>
<BEG> get the symbolic name of the error code a give in the sftp spec <END>
<BEG> retrieve the file attribute of an open file <END>
<BEG> retrieve the file attribute of a file <END>
<BEG> read the target of a symbolic link <END>
<BEG> create a symbolic link on the server <END>
<BEG> returns the negotiated sftp protocol version between the client and the server <END>
<BEG> queries the channel state return true if the underlying session be in open state <END>
<BEG> remove an empty directory <END>
<BEG> open a file for reading <END>
<BEG> open a file for reading and writing <END>
<BEG> open a file in append mode <END>
<BEG> create a file and open it for read and write <END>
<BEG> reate a file truncate it if it already exist and open it for write <END>
<BEG> read byte from a file in a parallel fashion <END>
<BEG> turn the posix permission into a 7 digit octal representation <END>
<BEG> get the sftpv3client instance which create this handle <END>
<BEG> inspired by bouncycastle 's dsasigner class <END>
<BEG> generate an rsa hostkey for test purpose only <END>
<BEG> check if it be a dotted ip4 address <END>
<BEG> at the moment <SEG> we only support http proxy <END>
<BEG> parse the client line and say hello - important : this information be later need for the key exchange to stop man-in-the-middle attack - that be why we wrap it into an object for late use <END>
<BEG> it be assume that the pass handler will not execute for a long time <END>
<BEG> exists because stringtokenizer be not available in j2me <END>
<BEG> a simple main method that print the version and exit <END>
<BEG> static buffer frombytes byte [ ] args { int length = args length 4 ; for int i = 0 ; i < args length ; i++ { length += args [ i ] length ; } buffer buf = new buffer length ; for int i = 0 ; i < args length ; i++ { buf putstring args [ i ] ; } return buf ; } <END>
<BEG> enable the agent forwarding <END>
<BEG> deprecate use { link # setenv string <SEG> string } or { link # setenv byte [ ] <SEG> byte [ ] } instead <END>
<BEG> set the environment variable <END>
<BEG> allocate a pseudo-terminal <END>
<BEG> change the window dimension interactively <END>
<BEG> this method will return the value how many request may be send at any one time <END>
<BEG> decrypts this identity with the specify pass-phrase <END>
<BEG> disposes internally allocate data <SEG> like byte array for the private key <END>
<BEG> returns an instance of { link keypair } use in this { link identity } <END>
<BEG> this case will not become true in our usage <END>
<BEG> sets the < code > identityrepository < code > <SEG> which will be refer in the public key authentication <END>
<BEG> sets the hostkey repository <END>
<BEG> sets the instance of < code > knownhosts < code > <SEG> which refer to < code > filename < code > <END>
<BEG> sets the private key <SEG> which will be refer in the public key authentication <END>
<BEG> deprecate use # removeidentity identity identity <END>
<BEG> removes the identity from identityrepository <END>
<BEG> lists name of identity include in the identityrepository <END>
<BEG> sets or overrides the configuration <END>
<BEG> sets the logger param logger logger see com jcraft jsch logger <END>
<BEG> writes the public key with the specified comment to the output stream <END>
<BEG> writes the public key with the specified comment to the file <END>
<BEG> writes the public key with the specified comment to the output stream in the format define in http : www ietf org rfc rfc4716 txt param out output stream param comment comment <END>
<BEG> writes the public key with the specified comment to the output stream in the format define in http : www ietf org rfc rfc4716 txt param name file name param comment comment see # writesecshpublickey java io outputstream out <SEG> string comment <END>
<BEG> returns the finger-print of the public key <END>
<BEG> hash be md5 h 0 < - hash passphrase <SEG> iv ; h n < - hash h n-1 <SEG> passphrase <SEG> iv ; key < - h 0 <SEG> <SEG> h n [ 0 <SEG> <SEG> key length ] ; <END>
<BEG> deprecate use # writeprivatekey java io outputstream out <SEG> byte [ ] passphrase <END>
<BEG> deprecate use # writeprivatekey string name <SEG> byte [ ] passphrase <END>
<BEG> parses the give string <SEG> and return an instance of configrepository <END>
<BEG> static byte [ ] char2byte char [ ] foo { int len=0 ; for int i=0 ; i < foo length ; i++ { if foo [ i ] & 0xff00 ==0 len++ ; else len+=2 ; } byte [ ] bar=new byte [ len ] ; for int i=0 <SEG> j=0 ; i < foo length ; i++ { if foo [ i ] & 0xff00 ==0 { bar [ j++ ] = byte foo [ i ] ; } else { bar [ j++ ] = byte foo [ i ] > > > 8 ; bar [ j++ ] = byte foo [ i ] ; } } return bar ; } <END>
<BEG> the reason code a specify by rfc 4254 <END>
<BEG> return the prompt to show to the user - may be { code null } empty <END>
<BEG> get a hexadecimal representation of a byte array start at < code > offset < code > index for < code > len < code > byte <SEG> with each octet separate by a space <END>
<BEG> reads an ssh byte and return it a { link message } return the message identifier <END>
<BEG> create from the string representation use when the signal be receive a part of an ssh packet <END>
<BEG> divide the path into { code pathcomponents parent <SEG> name } while make sure { code name ! = <END>
<BEG> fill the give byte-array with random byte from this prng <END>
<BEG> blank out a character array param pwd the character array <END>
<BEG> used to tell the library that the connection shall be establish through a proxy server <END>
<BEG> enable disable debug logging <END>
<BEG> this method can be use to perform end-to-end connection test <END>
<BEG> all java jvms must support iso-8859-1 <END>
<BEG> create a remote file and copy the content of the pass byte array into it <END>
<BEG> download a set of file from the remote server to a local directory <END>
<BEG> basically just a wrapper for lazy people - identical to call < code > requestpty dumb <SEG> 0 <SEG> 0 <SEG> 0 <SEG> 0 <SEG> null < code > <END>
<BEG> execute a command on the remote machine <END>
<BEG> this method block until there be more data available on either the stdout or stderr inputstream of this < code > session < code > <END>
<BEG> reate a file truncate it if it already exist and open it for read and write <END>
<BEG> get the length of character in the encoded alphabet that be necessary for each character in the original alphabet <END>
<BEG> get the mapping from integer code point of source language to encode string <END>
<BEG> provides access to the parser format implementation <END>
<BEG> utility method to parse and then reformat a string <END>
<BEG> add a keep command to the script <END>
<BEG> visit the script <END>
<BEG> add an object to the pending insertion set <END>
<BEG> handle a synchronization object <END>
<BEG> get the default format representation of the specify { code formattable } <END>
<BEG> returns the substring after the first occurrence of < code > ch < code > in < code > value < code > <END>
<BEG> tries to resolve the specify variable <END>
<BEG> formats the current date with the format give in the key in a format compatible with { link java text simpledateformat } <END>
<BEG> gets the lookup map <END>
<BEG> creates a new instance back by a map <END>
<BEG> gets the map use in lookup <END>
<BEG> looks up a string key to a string value use the map <END>
<BEG> returns the constantstringlookup singleton instance to look up the value of a fully-qualified static final value <END>
<BEG> returns the datestringlookup singleton instance to format the current date with the format give in the key in a format compatible with { link java text simpledateformat } <END>
<BEG> returns the environmentvariablestringlookup singleton instance where the lookup key be an environment variable name <END>
<BEG> returns the localhoststringlookup singleton instance where the lookup key be one of : < ul > < li > < b > name < b > : for the local host name <SEG> for example { code example } < li > < li > < b > canonical-name < b > : for the local canonical host name <SEG> for example { code example apache org } < li > < li > < b > address < b > : for the local host address <SEG> for example { code 192 168 56 1 } < li > < ul > < p > using a { link stringlookup } from the { link stringlookupfactory } : < p > < pre > stringlookupfactory instance localhoststringlookup lookup canonical-name ; < pre > < p > using a { link stringsubstitutor } : < p > < pre > stringsubstitutor createinterpolator replace $ { localhost : canonical-name } ; < pre > < p > the above example convert { code canonical-name } to the current host name <SEG> for example <SEG> { code example apache org } <END>
<BEG> returns the dnsstringlookup singleton instance where the lookup key be one of : < ul > < li > < b > name < b > : for the local host name <SEG> for example { code example } but also { code example apache org } < li > < li > < b > canonical-name < b > : for the local canonical host name <SEG> for example { code example apache org } < li > < li > < b > address < b > : for the local host address <SEG> for example { code 192 168 56 1 } < li > < ul > < p > using a { link stringlookup } from the { link stringlookupfactory } : < p > < pre > stringlookupfactory instance dnsstringlookup lookup address|apache org ; < pre > < p > using a { link stringsubstitutor } : < p > < pre > stringsubstitutor createinterpolator replace $ { dns : address|apache org } ; < pre > < p > the above example convert { code address|apache org } to { code 95 216 24 32 } or { code 40 79 78 1 } <END>
<BEG> returns a new map-based lookup where the request for a lookup be answer with the value for that key <END>
<BEG> creates a matcher from a string represent a set of character <END>
<BEG> it count how many time each element provide occur in an array and return a dict with the element a key and the count a value <END>
<BEG> < p > find the fuzzy score which indicate the similarity score between two strings <END>
<BEG> find the hamming distance between two string with the same length <END>
<BEG> get the size of set a <END>
<BEG> get the size of the intersection between set a and b <END>
<BEG> calculates the intersection of two character sequence pass a input <END>
<BEG> calculates jaccard distance of two set character sequence pass a input <END>
<BEG> this method return the jaro-winkler string match <SEG> half transposition <SEG> prefix array <END>
<BEG> < p > find the levenshtein distance between two strings < p > < p > a high score indicate a great distance < p > < p > the previous implementation of the levenshtein distance algorithm be from < a href= http : www merriampark com ld htm > http : www merriampark com ld htm < a > < p > < p > chas emerick have write an implementation in java <SEG> which avoid an outofmemoryerror which can occur when my java implementation be use with very large string < br > this implementation of the levenshtein distance algorithm be from < a href= http : www merriampark com ldjava htm > http : www merriampark com ldjava htm < a > < p > < pre > distance apply null <SEG> = illegalargumentexception distance apply <SEG> null = illegalargumentexception distance apply <SEG> = 0 distance apply <SEG> a = 1 distance apply aaapppp <SEG> = 7 distance apply frog <SEG> fog = 1 distance apply fly <SEG> ant = 3 distance apply elephant <SEG> hippo = 7 distance apply hippo <SEG> elephant = 7 distance apply hippo <SEG> zzzzzzzz = 8 distance apply hello <SEG> hallo = 1 < pre > param leave the first string <SEG> must not be null param right the second string <SEG> must not be null return result distance <SEG> or -1 throw illegalargumentexception if either string input { code null } <END>
<BEG> get the distance between two character sequence <END>
<BEG> get the number of insertion need to change one character sequence into another <END>
<BEG> get the number of character deletion need to change one character sequence to other <END>
<BEG> computes the lcslengtharray for the sake of do the actual lcs calculation <END>
<BEG> gets the text to be append when a new line be add <END>
<BEG> gets the text to be append when null be add <END>
<BEG> updates the length of the builder by either drop the last character or add filler of unicode zero <END>
<BEG> gets the current size of the internal character array buffer <END>
<BEG> checks the capacity and ensure that it be at least the size specify <END>
<BEG> minimizes the capacity to the actual length of the string <END>
<BEG> clears the string builder convenience collections api style method <END>
<BEG> copies part of the builder 's character array into a new character array <END>
<BEG> copies the character array into the specified array <END>
<BEG> if possible <SEG> reads char from the provide { link readable } directly into underlie character buffer without make extra copy <END>
<BEG> appends the text represent < code > null < code > to this string builder <END>
<BEG> appends an object to this string builder <END>
<BEG> appends part of a charsequence to this string builder <END>
<BEG> appends the content of a char buffer to this string builder <END>
<BEG> appends a string buffer to this string builder <END>
<BEG> appends part of a string buffer to this string builder <END>
<BEG> appends an object follow by a new line to this string builder <END>
<BEG> appends part of a string follow by a new line to this string builder <END>
<BEG> appends a string buffer follow by a new line to this string builder <END>
<BEG> appends part of a string builder follow by a new line to this string builder <END>
<BEG> appends an int value follow by a new line to the string builder use < code > string valueof < code > <END>
<BEG> suppresswarnings use to hide warn about vararg usage <END>
<BEG> appends each item in an iterable to the builder without any separator <END>
<BEG> appends one of both separator to the strbuilder <END>
<BEG> appends the pad character to the builder the specified number of time <END>
<BEG> appends an object to the builder pad on the left to a fix width <END>
<BEG> inserts the string representation of an object into this builder <END>
<BEG> deletes the character between the two specify index <END>
<BEG> deletes the character wherever it occur in the builder <END>
<BEG> deletes the first match within the builder use the specify matcher <END>
<BEG> replaces a portion of the string builder with another string <END>
<BEG> replaces the search character with the replace character throughout the builder <END>
<BEG> replaces the first instance of the search string with the replace string <END>
<BEG> replaces all match within the builder with the replace string <END>
<BEG> replaces the first match within the builder with the replace string <END>
<BEG> trims the builder by remove character less than or equal to a space from the beginning and end <END>
<BEG> extracts some character from the middle of the string builder without throw an exception <END>
<BEG> searches the string builder to find the first reference to the specify char <END>
<BEG> searches the string builder to find the first reference to the specify string start search from the give index <END>
<BEG> searches the string builder use the matcher to find the first match search from the give index <END>
<BEG> gets this builder a a writer that can be write to <END>
<BEG> appends current content of this < code > strbuilder < code > to the provide { link appendable } <END>
<BEG> checks the content of this builder against another to see if they contain the same character content ignore case <END>
<BEG> checks the content of this builder against another to see if they contain the same character content <END>
<BEG> gets a string version of the string builder <SEG> create a new instance each time the method be call <END>
<BEG> validates parameter define a range of the builder <END>
<BEG> validates parameter define a single index in the builder <END>
<BEG> replaces all the occurrence of variable with their match value from the resolver use the give source a a template <END>
<BEG> gets the number of token find in the string <END>
<BEG> gets the next token from the string <END>
<BEG> gets the token previous to the last return token <END>
<BEG> gets the quote matcher currently in use <END>
<BEG> set the matcher for character to ignore <END>
<BEG> gets whether the tokenizer currently return empty token a null <END>
<BEG> gets whether the tokenizer currently ignore empty token <END>
<BEG> sets whether the tokenizer should ignore and not return empty token <END>
<BEG> returns a new lookup which use a copy of the current { link system # getproperties system property } <END>
<BEG> returns a lookup which look up value use a map <END>
<BEG> creates a matcher from a set of character <END>
<BEG> the first translator to consume codepoints from the input be the 'winner ' <END>
<BEG> helper for non-writer usage <END>
<BEG> translate an input onto a writer <END>
<BEG> implementation of translate that map onto the abstract translate int <SEG> writer method <END>
<BEG> < p > constructs a < code > javaunicodeescaper < code > above the specify value exclusive <END>
<BEG> < p > constructs a < code > javaunicodeescaper < code > outside of the specified value exclusive <END>
<BEG> whether the pass in option be currently set <END>
<BEG> set the maximum distance to search for character transposition <END>
<BEG> finds a converter by type <END>
<BEG> creates an instance <SEG> provide the ability to load type in config file <END>
<BEG> register the fact that a type be rename <END>
<BEG> gets the set of enum type that have renames <END>
<BEG> gets the map of rename for an enum type <END>
<BEG> creates a new conversion manager include the extended standard set of converter <END>
<BEG> converts the specify object to a { code string } <END>
<BEG> checks if a suitable converter exists for the type <END>
<BEG> finds a suitable converter for the type <END>
<BEG> registers a converter factory <END>
<BEG> registers a converter for a specific type use two separate converter <END>
<BEG> registers a converter for a specific type by method name <END>
<BEG> registers a converter for a specific type by method and constructor <END>
<BEG> check if there be any listener for a specific property <SEG> include those register on all property <END>
<BEG> convenience method for type-cast to abstractactionext <END>
<BEG> creates and register all executable action <END>
<BEG> returns a potentially localize value from the uimanager for the give locale <END>
<BEG> creates <SEG> configures and return a bound state action on a boolean property of the patternmodel <END>
<BEG> creates <SEG> configures and return a bound action to the give method of this <END>
<BEG>  < p > overridden to update locale-dependent property <END>
<BEG> call from listen to pattern property of patternmodel <END>
<BEG> factory method to create the patternmodel <END>
<BEG> creates and return a propertychangelistener to the patternmodel <END>
<BEG> callback method that update document from the search field <END>
<BEG> create < code > documentlistener < code > for the search field that call correspond callback method whenever the search field content be be change return newly create < code > documentlistener < code > <END>
<BEG> configures the searchlabel <END>
<BEG> initialize all the incorporated component and model <END>
<BEG> return width in character of the search field <END>
<BEG> returns a long description of the action <END>
<BEG> returns a small icon which represent the action <END>
<BEG> sets the mnemonic key code for the action <END>
<BEG> sets the action command key <END>
<BEG> returns the key stroke which represent an accelerator for the action <END>
<BEG> sets the group identity of the state action <END>
<BEG> will perform cleanup on the object <END>
<BEG> indicates if this action have state <END>
<BEG> return true if the action be in the select state <END>
<BEG> changes the state of the action param newvalue true to set the action a select of the action <END>
<BEG> sets the actionmanager instance that will be use by this actioncontainerfactory <END>
<BEG> constructs a menu tree from a list of action or list of list or action <END>
<BEG> creates and return a menu from a list which represent action <SEG> separator and sub-menus <END>
<BEG> creates a menu item base on the attribute of the action element <END>
<BEG> param button param a param group <END>
<BEG> method to configure a selectable button from the give abstractactionext <END>
<BEG> this method will be call after button create from an action <END>
<BEG> this method will be call after menu item be create <END>
<BEG> sets the actionmanager instance <END>
<BEG> returns the id for all the manage action <END>
<BEG> convenience method for return the targetableaction param id value of the action id return the targetableaction reference by the name id or null <END>
<BEG> enables or disable the state of the action corresponding to the action id <END>
<BEG> a diagnostic which print the attributes of an action on the printstream <END>
<BEG> determines if the action corresponding to the action id be a state change action toggle <SEG> group type action <END>
<BEG> test to determine if the action be a < code > targetableaction < code > <END>
<BEG> the callback string will be call to register the action callback <END>
<BEG> registers a callback method when the action corresponding to the action id be invoke <END>
<BEG> add an action listener which will be invoke when this action be invoke <END>
<BEG> add an item listener which will be invoke for toggle action <END>
<BEG> callback for command action <END>
<BEG> returns a list of action id which indicate that this be a composite action <END>
<BEG> return a parameter value correspond to name or null if it do n't exist <END>
<BEG> adds a name value pair which represent a url connection request property <END>
<BEG> invokes the server operation when the action have be invoke <END>
<BEG> set target manager which will handle this command <END>
<BEG> returns the target manager instance which will be use for action dispatch <END>
<BEG> returns an array of manage target that be add with the < code > addtarget < code > method <END>
<BEG> removes all toggleactionpcls with unreachable target button from the action 's pcl-listeners <END>
<BEG> returns the target button to synchronize from the listener <END>
<BEG> check if this be already synchronize the give abstractbutton <END>
<BEG> loads the user name from preferences <END>
<BEG> return returns preferences node in which the user name will be store <END>
<BEG> param prefs the preferences node to store the user name in <END>
<BEG> returns the < code > logincontext < code > use during the authentication process <END>
<BEG> param url set the jdbc connection url <END>
<BEG> return jdbc connection property <END>
<BEG> param property miscellaneous jdbc property to use when connect to the database via the jdbc driver <END>
<BEG> attempts to authenticate the give username and password against the password map <END>
<BEG> returns the role of the currently log in user <END>
<BEG> returns true if the user be in the give role case sensitive <END>
<BEG> returns true if the user be in one of the give role case sensitive <END>
<BEG> returns the string representation in use for the currently select item <END>
<BEG> marks select the entire text that be display inside the text component <END>
<BEG> marks select the text that be display inside the text component start from the character with index < tt > start < tt > <END>
<BEG> non-javadoc see javax swing comboboxeditor # setitem java lang object <END>
<BEG> creates the default back document when no delegate be pass to this document <END>
<BEG> implementation side effect - do not invoke <END>
<BEG> returns the value contain in the combo box return the value contain in the combo box <END>
<BEG> tells the combo box to stop editing and accept any partially edit value a the value of the combo box <END>
<BEG> sets an initial value for the combo box <END>
<BEG> returns all possible < tt > string < tt > representation for a give item <END>
<BEG> install the fix for the specified combo box <END>
<BEG> uninstall the fix <END>
<BEG> gets the padding surround the icon <END>
<BEG> returns the position to place the icon relative to the component content <END>
<BEG> adjusts all store date to a new time zone <END>
<BEG> returns a boolean indicating whether the give date be on the same day in the coordinate of the model 's calendar <END>
<BEG> returns an array of the format use by this formatter <END>
<BEG> creates and return the localized default format <END>
<BEG> returns the start of the date span <END>
<BEG> returns the start of the date span a a < code > date < code > <END>
<BEG> returns whether or not this < code > datespan < code > contain the specified time <END>
<BEG> returns true if the this < code > datespan < code > intersects with the specified time <END>
<BEG> returns a new < code > datespan < code > that be the union of this < code > datespan < code > and the pass in span <END>
<BEG> returns a new date with the hour <SEG> millisecond <SEG> second and minute set to 0 <END>
<BEG> returns the day after < code > date < code > <END>
<BEG> adds < code > amount < code > day to < code > time < code > and return the resulting time <END>
<BEG> returns the number of day difference between < code > t1 < code > and < code > t2 < code > <END>
<BEG> check <SEG> whether the date pass in be the first day of the year <END>
<BEG> returns the first day before < code > date < code > that have the day of week match < code > startofweek < code > <END>
<BEG> returns the date corresponding to the start of the month <END>
<BEG>  < p > implemented to do nothing <END>
<BEG>  < p > implemented to call setselectioninterval with startdate for both parameter <END>
<BEG>  < p > pending jw : define what happen if we have a selection but the interval be n't selectable <END>
<BEG> checks and return whether the select date be contain in the interval give by startdate enddate <END>
<BEG>  < p > implemented to return the date itself <END>
<BEG> returns a new color equal to the old one <SEG> except that there be no alpha transparency channel <END>
<BEG> returns a new color equal to the old one <SEG> except alpha transparency channel be set to the new value <END>
<BEG> returns a new color equal to the old one <SEG> except the saturation be set to the new value <END>
<BEG> computes an appropriate foreground color either white or black for the give background color <END>
<BEG> blends two color to create a new color <END>
<BEG> creates a new { code paint } that be a checkered effect use the specify color <END>
<BEG> example usage <END>
<BEG> set the selected item <END>
<BEG> selects an item from the model and return that map value <END>
<BEG> set the highlightpredicate use to decide whether a cell should be highlight <END>
<BEG> returns true if the to object be either both null or equal each other <END>
<BEG> returns an array of all the change listener register on this < code > highlighter < code > <END>
<BEG> notifies register < code > changelistener < code > s about state change < p > note : subclass should be polite and implement any property setter to fire only if the property be really change <END>
<BEG>  < p > implemented to set the horizontal alignement of the rendering component <END>
<BEG>  < p > implemented to return true for component of type jlabel <SEG> abstractbutton or jtextfield <SEG> false otherwise <END>
<BEG>  < p > overridden to prevent highlight if there 's no padding available or the renderer be not of type jcomponent <END>
<BEG> return the compound property <END>
<BEG> applies a suitable background for the renderer component within the specified adapter <END>
<BEG> sets the background color of this < code > colorhighlighter < code > and notifies register changelisteners <END>
<BEG> sets the select background color of this < code > colorhighlighter < code > and notifies register changelisteners <END>
<BEG> return legacy mode deprecate pre-1 6 1 see class doc <SEG> on how to workaround <END>
<BEG> param legacy set legacy mode deprecate pre-1 6 1 see class doc <SEG> on how to workaround <END>
<BEG> returns the component which be this adapter 's target <END>
<BEG> returns the column 's display name = headervalue of the column at columnindex in model coordinate <END>
<BEG> returns logical identifier of the column at columnindex in model coordinate <END>
<BEG> returns the column index in model coordinate for the logical identifier <END>
<BEG> returns the number of column in the target 's data model <END>
<BEG> returns true if the column should be include in test < p > here : return true if visible that be modeltoview give a valid view column coordinate <END>
<BEG> returns the string representation of the value of the cell identify by the current adapter row and the give column index in model coordinate < p > param modelcolumnindex the column index in model coordinate return the string representation of the value of the cell identify by this adapter see # getfilteredstringat int <SEG> int see # getstring <END>
<BEG> returns the string representation of the filtered value of the cell identify by the row in view coordinate and the column in model coordinate < p > note : the asymetry of the coordinate be intentional - client like highlighters be interested in view value but might need to access non-visible column for test <END>
<BEG> returns the value of the cell identify by the current adapter row and the give column index in model coordinate < p > param modelcolumnindex the column index in model coordinate return the value of the cell identify by this adapter see # getvalueat int <SEG> int see # getfilteredvalueat int <SEG> int see # getvalue int <END>
<BEG> returns the bound of the cell identify by this adapter < p > return the bound of the cell identify by this adapter <END>
<BEG> returns the depth of this row in the hierarchy where the root be 0 <END>
<BEG> for target component that support multiple column in their model <SEG> along with column reorder in the view <SEG> this method transform the specified columnindex from model coordinate to view coordinate <END>
<BEG> converts a row index in model coordinate to an index in view coordinate <END>
<BEG> updates the target component on screen <END>
<BEG> sets the give < code > highlighter < code > s <END>
<BEG>  < p > implemented to call updateui on contained highlighters <END>
<BEG> creates and return the changelistener register to contain < code > highlighter < code > s <END>
<BEG>  < p > implemented to set the render component 's enabled property <END>
<BEG>  < p > implemented to return false if the font property be null <END>
<BEG> creates and return a highlighter which highlight every second row background with a color depend on the lookandfeel <END>
<BEG> creates and return a highlighter which highlight every second row group background with a color depend on lf <END>
<BEG> creates and return a highlighter which highlight with alternate background <END>
<BEG> creates and return a highlighter which highlight with alternate background <SEG> start with the base <END>
<BEG>  < p > overridden to return true if the component be of type jlabel <SEG> false otherwise <END>
<BEG> returns to painter use in this highlighter <END>
<BEG> sets the painter to use in this highlighter <SEG> may be null <END>
<BEG> installs a listener to the painter if appropriate <END>
<BEG> lazyly creates and return the property change listener use to listen to change of the painter <END>
<BEG> creates and return the property change listener use to listen to change of the painter <END>
<BEG> return the column to use for test in model coordinate <END>
<BEG>  < p > implemented to return false if the component be not a jcomponent <END>
<BEG> gets the error or exception which occur <END>
<BEG> gets the string to use for a dialog title or other quick reference <END>
<BEG> gets the actual exception that generate the error <END>
<BEG> < p > gets a copy of the application state at the time that the incident occur <END>
<BEG> add an errorlistener param listener the listener to add <END>
<BEG> remove an error listener param listener the listener to remove <END>
<BEG> returns an array of all the listener which be add to the < code > errorsupport < code > object with < code > adderrorlistener < code > <END>
<BEG> report that an error have occur param throwable the < code > { link error } < code > or < code > { link exception } < code > which occur <END>
<BEG> releases all listener and internal reference < p > < b > note < b > : this instance must not be use after call this method <END>
<BEG> updates focus property depend on whether or not the give component be below the root 's hierarchy <END>
<BEG> returns a list contain all of the listener manage by this { code eventlistenermap } <END>
<BEG> returns the total number of listener of the supplied type for this listener list <END>
<BEG> returns the total number of listener for this listener type <END>
<BEG> passes back the event listener list a an array of listenertype-listener pair <END>
<BEG> gets the delegate repaint manager back this forward repaint manager <END>
<BEG> < p > returns the morph value between the two shape < p > return the morph value between the two shape see # setmorphing double <END>
<BEG> < p > sets the inner radius of the star <SEG> that be the distance between it center and the origin of the branch <END>
<BEG> < p > sets location of the center of the star < p > param x the x location of the center of the star <END>
<BEG> < p > sets the location of the center of the star < p > param y the x location of the center of the star <END>
<BEG> < p > sets the number branch of the star <END>
<BEG> < p > returns the location of the center of star < p > return the x coordinate of the center of the star <END>
<BEG> < p > returns the distance between the center of the star and the origin of the branch < p > return the inner radius of the star <END>
<BEG> < p > returns the number of branch of the star < p > return the number of branch <SEG> always & gt ; = 3 <END>
<BEG> < p > creates a new composite base on the blending mode pass a a parameter <END>
<BEG> < p > creates a new composite base on the blending mode and opacity pass a parameter <END>
<BEG> < p > returns a < code > blendcomposite < code > object that use the specified blending mode and this object 's alpha value <END>
<BEG> < p > returns a < code > blendcomposite < code > object that use the specified opacity <SEG> or alpha <SEG> and this object 's blending mode <END>
<BEG> < p > returns the blending mode of this composite < p > return the blending mode use by this object <END>
<BEG> < p > returns the hsl hue saturation luminance equivalent of a give rgb color <END>
<BEG> < p > returns the rgb equivalent of a give hsl hue saturation luminance color <END>
<BEG> converts the specified image into a compatible buffered image <END>
<BEG> < p > returns a new < code > bufferedimage < code > use the same color model a the image pass a a parameter <END>
<BEG> < p > returns a new opaque compatible image of the specify width and height <END>
<BEG> < p > returns a new compatible image from a stream <END>
<BEG> < p > sets the opacity use by the factory to generate reflection < p > < p > consecutive call to { link # createreflection } will all use this opacity until it be set again < p > < p > the opacity be comprise between 0 0f and 1 0f ; 0 0f be fully transparent and 1 0f fully opaque <END>
<BEG> < p > returns true if the blurring of the reflection be enable <SEG> false otherwise <END>
<BEG> < p > returns the effective radius <SEG> in pixel <SEG> of the blur use by this renderer when { link # isblurenabled } be true < p > return the effective radius of the blur use when < code > isblurenabled < code > be true see # isblurenabled see # setblurenabled boolean see # setblurradius int see # getblurradius <END>
<BEG> < p > sets the radius <SEG> in pixel <SEG> of the blur use by this renderer when { link # isblurenabled } be true <END>
<BEG> < p > returns the source image and it reflection <END>
<BEG> < p > gets the color use by the renderer to generate shadow < p > return this renderer 's shadow color <END>
<BEG> < p > sets the color use by the renderer to generate shadow < p > < p > consecutive call to { link # createshadow } will all use this color until it be set again < p > < p > if the color provide be null <SEG> the previous color will be retain < p > param shadowcolor the generate shadow color <END>
<BEG> < p > generates the shadow for a give picture and the current property of the renderer < p > < p > the generated image dimension be compute a following : < p > < pre > width = imagewidth + 2 shadowsize height = imageheight + 2 shadowsize < pre > param image the picture from which the shadow must be cast return the picture contain the shadow of < code > image < code > <END>
<BEG> pre : istargetable target param target <END>
<BEG> set the display text <END>
<BEG> set the url and reset the visited flag <END>
<BEG> set the target that the url should load into <END>
<BEG> sets a flag to indicate if the link have be visit <END>
<BEG> the delegate to invoke on actionperformed <END>
<BEG> installs a propertychangelistener on the target and update the visual property from the target <END>
<BEG> < p > returns the solid mix color of this filter < p > return the solid color use for mix <END>
<BEG> < p > returns the radius use by this filter <SEG> in pixel < p > return the radius of the blur <END>
<BEG> < p > returns the effective radius of the stack blur <END>
<BEG> < p > returns the number of iteration use to approximate a gaussian blur < p > return the number of iteration use by this blur <END>
<BEG> sets direction of rotation <END>
<BEG> initialize the busypainter and this jxbusylabel with the give preferred size <END>
<BEG> create and return a busyppainter to use for the label <END>
<BEG> < p > sets whether this < code > jxbusylabel < code > instance should consider itself busy <END>
<BEG> notification from the < code > uimanager < code > that the l & f have change <END>
<BEG> returns the name of the l & f class that render this component <END>
<BEG> if true <SEG> enable the animation when pane be collapse expanded <END>
<BEG> return true if the pane be animate <SEG> false otherwise see # setanimated boolean <END>
<BEG> changes the direction of this collapsible pane <END>
<BEG> expands or collapse this < code > jxcollapsiblepane < code > <END>
<BEG> a collapsible pane always return it preferred size for the minimum size to ensure that the collapse happens correctly <END>
<BEG> get the jcolorchooser that be use by this jxcolorselectionbutton <END>
<BEG> jw : this be a poor woman 's constraint property <END>
<BEG> callback from monthview timezone change <END>
<BEG> resets the ui property with the value from the current look and feel <END>
<BEG> replaces the currently instal formatter and factory use by the editor < p > note : the give format be internally synched to the picker 's current timezone <END>
<BEG> return the < code > jxmonthview < code > use in the popup to select date from <END>
<BEG> set the component to use the specified jxmonthview <END>
<BEG> returns the date show in the linkpanel <END>
<BEG> set the date the link will use and the string define a messageformat to format the link <END>
<BEG> return the panel that be use at the bottom of the popup <END>
<BEG> cancels the editor 's change and notifies actionlisteners <END>
<BEG> sets the < code > lightweightpopupenabled < code > property <SEG> which provide a hint a to whether or not a lightweight < code > component < code > should be use to contain the < code > jxdatepicker < code > <SEG> versus a heavyweight < code > component < code > such a a < code > panel < code > or a < code > window < code > <END>
<BEG> fires an actionevent with the give actioncommand to all listener <END>
<BEG> adds a popupmenulistener < p > pending jw : the cancel method be never call due to internal interference in basicdatepickerui <END>
<BEG> returns an array contain all popupmenulisteners which be register to this picker <END>
<BEG> infers and set this dialog 's title from the the content <END>
<BEG>  overridden to check if content be available <END>
<BEG> updates this dialog 's locale-dependent state <END>
<BEG> the callback method execute when close the dialog <END>
<BEG> create the dialog button control <END>
<BEG> gets the < code > jxerrorpane < code > 's < code > errorinfo < code > return < code > errorinfo < code > assign to this dialog <END>
<BEG> specifies the icon to use param icon the icon to use <END>
<BEG> returns the icon use return the icon <END>
<BEG> sets the { link errorreporter } delegate to use <END>
<BEG> < p > constructs and show the error dialog for the give exception <END>
<BEG> < p > constructs and show the error dialog <SEG> use the give < code > errorinfo < code > to initialize the view < p > < p > this method may be call from any thread <END>
<BEG> < p > constructs and show the error dialog <SEG> use the give < code > jxerrorpane < code > for the view portion of the dialog < p > < p > this method may be call from any thread <END>
<BEG> action callback method for bound action jxdialog close_action_command <END>
<BEG> sets the searchable target of this find widget <END>
<BEG> notifies this component that it now have a parent component <END>
<BEG> initializes component and it listener and model <END>
<BEG> action callback for find action <END>
<BEG> performs search and return index of the next match <END>
<BEG> compose and layout all the subcomponents <END>
<BEG> see promptsupport # getforeground javax swing text jtextcomponent <END>
<BEG> see promptsupport # setforeground color <SEG> javax swing text jtextcomponent <END>
<BEG> see buddysupport # add component <SEG> position <SEG> jtextfield <END>
<BEG> see buddysupport # removeall jtextfield <END>
<BEG> returns the multiplegradientpaint currently choosen by the user <END>
<BEG> sets the gradient within this panel to the new gradient <END>
<BEG> this static utility method < b > can not < b > be call from the etd <SEG> or your application will lock up <END>
<BEG> creates a string representation of a { code multiplegradientpaint } <END>
<BEG> < p > enables or disables user input on the component <END>
<BEG> < p > enables or disable the painting of axis label depend on the value of the parameter <END>
<BEG> < p > defines whether or not the background paint by this component <END>
<BEG> < p > enables or disable the painting of background depend on the value of the parameter <END>
<BEG> < p > sets the color of major grid line on this component <END>
<BEG> < p > gets the main axis color of this component < p > return this component 's main axis color see # setaxiscolor color see # setgridpainted boolean <END>
<BEG> < p > sets the color of main axis on this component <END>
<BEG> < p > gets the distance <SEG> in graph unit <SEG> between two major grid line on the x axis < p > return the space between two major grid line on the x axis see # setmajorx double see # getmajory see # setmajory double see # getminorcountx see # setminorcountx int <END>
<BEG> < p > gets the number of minor grid line between two major grid line on the x axis < p > return the number of minor grid line between two major grid line see # setminorcountx int see # getminorcounty see # setminorcounty int see # getmajorx see # setmajorx double <END>
<BEG> < p > sets the number of minor grid line between two major grid line on the x axis < p > param minorcountx the number of minor grid line between two major grid line on the x axis throw illegalargumentexception if minorcountx be < 0 see # getminorcountx see # getminorcounty see # setminorcounty int see # getmajorx see # setmajorx double <END>
<BEG> < p > sets the view and the origin of the graph at the same time <END>
<BEG> < p > resets the view to the default view if it have be change by the user by pan and zoom <END>
<BEG> < p > adds one or more plot to the graph <END>
<BEG> < p > removes the specified plot from the graph <END>
<BEG> < p > removes all the plot currently associate with this graph < p > < p > this method be not thread safe and should be call only from the edt < p > see # removeplots jxgraph plot see # addplots color <SEG> jxgraph plot <END>
<BEG> < p > converts a position <SEG> in graph unit <SEG> from the y axis into a pixel coordinate <END>
<BEG> < p > this painting method be mean to be override by subclass of < code > jxgraph < code > <END>
<BEG> < p > this method be call by the component whenever it need to paint it background <END>
<BEG> sets new font for title <END>
<BEG> gets current title foreground color <END>
<BEG> sets title foreground color <END>
<BEG> gets current icon position <END>
<BEG> sets new icon position <END>
<BEG> returns the foreground color for unvisited link <END>
<BEG> sets the color for the previously not visit link <END>
<BEG> sets the color for the previously visit link <END>
<BEG> sets the clicked property and updates visual state depend on clicked <END>
<BEG> returns a boolean indicating if this link have already be visit <END>
<BEG> returns a boolean indicating whether the clicked property should be set after fire action event <END>
<BEG> gets the currently set image <SEG> or null if no image be set <END>
<BEG> set the current image to an image point to by this url <END>
<BEG> returns whether or not the user can drag image <END>
<BEG> send a new errorevent to all register errorlisteners param throwable the error or exception which be throw <END>
<BEG> returns an action which will open a file chooser <SEG> ask the user for an image file then load the image into the view <END>
<BEG> gets an action which will zoom the current image out by a factor of 2 <END>
<BEG> returns the current image 's url if available a a string <END>
<BEG> sets the current image use a string <END>
<BEG> sets a new foregroundpainter on the label <END>
<BEG> sets a painter to use to paint the background of this component by default there be already a single painter instal which draw the normal background for this component accord to the current look and feel <END>
<BEG> gets current value of text rotation in rad <END>
<BEG> enables line wrap support for plain text <END>
<BEG> returns the current status of line wrap support <END>
<BEG> gets current text wrapping style <END>
<BEG> sets style of wrap the text <END>
<BEG> starts a search on this list 's visible item <END>
<BEG> returns a searchable for this component <SEG> guarantee to be not null <END>
<BEG>  < p > overridden to cope with sort filtering <SEG> take over completely <END>
<BEG> sets the property to enable disable rollover support <END>
<BEG> returns a boolean indicating whether or not rollover support be enable <END>
<BEG> creates and return a rollovercontroller appropriate for this component <END>
<BEG> creates and return the default rowsorter <END>
<BEG> returns the object responsible for sort <END>
<BEG> propagates sort-related property from table column to the sorter if it be of type sortcontroller <SEG> do nothing otherwise <END>
<BEG> returns the table 's sortable property < p > return true if the table be sortable <END>
<BEG> returns the sortorder cycle use when toggle sorting this table 's column <SEG> guarantee to be not null <END>
<BEG> sets the comparator to use for sort < p > < b > note < b > : a of post-1 0 the property be propagate to the sortcontroller <SEG> if available <END>
<BEG> sets the filter to the sorter <SEG> if available and of type sortcontroller <END>
<BEG> resets sort of all column <END>
<BEG> toggles the sort order of the list <END>
<BEG> sorts the list use sortorder <END>
<BEG> returns a boolean indicating whether the table have a sortcontroller <END>
<BEG> returns a boolean indicating whether the table configure the sorter 's property <END>
<BEG> returns the value for the small select cell index ; < i > the select value < i > when only a single item be select in the list <END>
<BEG> returns an array of all the select value <SEG> in increase order base on their index in the list and take into account sourting and filtering <END>
<BEG> returns the number of element in this list in view coordinate <END>
<BEG> convert row index from view coordinate to model coordinate account for the presence of sorter and filter <END>
<BEG> convert index from model coordinate to view coordinate account for the presence of sorter and filter <END>
<BEG> return the unconfigured componentadapter <END>
<BEG> appends a < code > highlighter < code > to the end of the list of use < code > highlighter < code > s <END>
<BEG> returns the compoundhighlighter assign to the table <SEG> null if none <END>
<BEG> returns the < code > changelistener < code > to use with highlighter <END>
<BEG> returns the stringvalueregistry which define the string representation for each cell <END>
<BEG> creates and return the default registry for stringvalues < p > return the default registry for stringvalues <END>
<BEG> returns the string representation of the cell value at the give position <END>
<BEG> creates and return the default cell renderer to use <END>
<BEG> returns the renderer instal by client code or the default if none have be set <END>
<BEG> invalidates cell size caching in the ui delegate <END>
<BEG> updates highlighter after < code > updateui < code > change <END>
<BEG> gets current state of the cap lock a see by the login panel <END>
<BEG> check current state of the cap lock state detection <END>
<BEG> recreates the login panel <SEG> and replace the current one with the new one <END>
<BEG> the save mode indicate whether the save password be check by default <END>
<BEG> enables or disables < strong > user name < strong > for this panel <END>
<BEG> gets current state of the user name field <END>
<BEG> return the image use a the banner <END>
<BEG> set the text to use when create the banner <END>
<BEG> returns text use when create the banner <END>
<BEG> returns the custom message for this login panel <END>
<BEG> change the status <END>
<BEG> initiates the login procedure <END>
<BEG> utility method for initialize a window for display a logindialog <END>
<BEG> gets what the first day of the week be ; e g <SEG> < code > calendar sunday < code > in the u s <SEG> < code > calendar monday < code > in france <END>
<BEG> all date be clean relative to the timezone they have be set <END>
<BEG> sets today from the current system time <END>
<BEG> increments today <END>
<BEG> sets the date which represent today <END>
<BEG> returns the start of today in this monthviews calendar coordinate <END>
<BEG> returns the date selection model which drive this jxmonthview <END>
<BEG> sets the model 's selection to the give date or clear the selection if null <END>
<BEG> sets the date that should be unselectable <END>
<BEG> identifies whether or not the date pass be a flagged date <END>
<BEG> unflags the give date <END>
<BEG> clears all flag date <END>
<BEG> returns a sorted set of flagged dates <END>
<BEG> returns a boolean indicating if this monthview have flag date <END>
<BEG> sets a boolean property indicate whether or not to show leading date for a month display by this component < p > the default value be false <END>
<BEG> returns a boolean indicating whether or not we 're show lead date <END>
<BEG> returns whether or not the month view support traverse month <END>
<BEG> set whether or not the month view will display button to allow the user to traverse to previous or next month <END>
<BEG> returns true if zoomable through date range <END>
<BEG> sets the string representation for each day of the week a use in the header of the day 's grid <END>
<BEG> returns the string representation for each day of the week <END>
<BEG> param dayofweek return string representation of day of week <END>
<BEG> returns the padding use above and below day in the calendar <END>
<BEG> sets the number of pixel use to pad the top and bottom of a day <END>
<BEG> sets the select background color to < code > c < code > <END>
<BEG> sets the color use to draw the bounding box around today <END>
<BEG> returns the color use to paint the month string background <END>
<BEG> sets the color use to draw the background of the month string <END>
<BEG> sets the color use to draw the foreground of each day of the week <END>
<BEG> set the color to be use for paint the specified day of the week <END>
<BEG> return the color that should be use for paint the numerical day of the week <END>
<BEG> set the color to be use for paint the foreground of a flagged day <END>
<BEG> insets use to modify the width height when paint the background of the month string area <END>
<BEG> returns the preferred number of column to paint calendar in <END>
<BEG> sets the preferred number of row to paint calendar does nothing if row < = 0 <END>
<BEG> commits the current selection <END>
<BEG> cancels the selection <END>
<BEG> deprecate pre-0 9 5 - this be keep a a reminder only <SEG> < b > do n't use < b > ! <END>
<BEG> a convenience method that return the layout manager cast to mutlisplitlayout <END>
<BEG> returns true if drag a divider only update the layout when the drag gesture end typically <SEG> when the mouse button be release <END>
<BEG> returns the divider that 's currently be move <SEG> typically because the user be drag it <SEG> or null <END>
<BEG> the dividerpainter that 's use to paint dividers on this multisplitpane <END>
<BEG> sets the dividerpainter that 's use to paint dividers on this multisplitpane <END>
<BEG> specifies a painter to use to paint the background of this jxpanel <END>
<BEG> set the alpha transparency level for this component <END>
<BEG> determines if the effective alpha of this component should include the alpha of ancestor <END>
<BEG> sets the horizontal sizing hint <END>
<BEG> sets the vertical size track to either scrollablesizetrack fit or none <SEG> if the boolean parameter be true or false <SEG> respectively < p > < b > note < b > : this method be keep for backward compatibility only <SEG> for full control use setscrollableheighthint <END>
<BEG> overriden paint method to take into account the alpha set param g <END>
<BEG> overridden to provide painter support <END>
<BEG> set the layout axis of the radio group <END>
<BEG> sets the value back this group <END>
<BEG> you can use this method to manually add your own abstractbutton object <SEG> provide you declare the class a < code > jxradiogroup & lt ; jradiobutton & gt ; < code > <END>
<BEG> the currently select value <END>
<BEG> selects the supplied value <END>
<BEG> retrieve the child button that represent this value <END>
<BEG> returns an array of all the < code > actionlistener < code > s add to this jradiogroup with addactionlistener <END>
<BEG> set the status bar for this root pane <END>
<BEG> sets the < code > cancelbutton < code > property <SEG> which determine the current default cancel button for this < code > jrootpane < code > <END>
<BEG> returns < code > true < code > if the popup button should be visible and use for display the find popup menu <END>
<BEG> set if the popup button should be use for display the find popup menu <END>
<BEG> enables the cancel action if this search field be editable and enable <SEG> otherwise it will be disable <END>
<BEG> sets the popup menu that will be display when the popup button be click <END>
<BEG> todo return <END>
<BEG> returns the key use to persist recent search <END>
<BEG> installs and manage a recent search popup menu a the find popup menu <SEG> if < code > recentsearchessavekey < code > be not null <END>
<BEG> returns the { link timer } use to delay the firing of action event in instant search mode when the user enters text <END>
<BEG> returns < code > true < code > if this search field be the focus owner or the find popup menu be visible <END>
<BEG> hack to enable the ui delegate to set default value depend on the current look and feel <SEG> without override custom value <END>
<BEG> adds a pattern matcher <END>
<BEG> set the label of the search combo <END>
<BEG> set 's the patternmodel 's matchrule to the select in combo <END>
<BEG> returns the column control visible property <END>
<BEG> creates the default column control use by this table <END>
<BEG> updates locale-dependent state to the give < code > locale < code > <END>
<BEG> updates locale-dependent state of action register with key in < code > actionmap < code > <END>
<BEG> resizes all columns to fit their content <END>
<BEG> pending jw : add a real mode ? <END>
<BEG> returns the current setting for horizontal scrolling <END>
<BEG>  < p > overridden for internal bookkeeping relate to the enhance auto-resize behaviour <END>
<BEG> synchs select state of horizontal scroll < code > action < code > to enablement of enhanced auto-resize behaviour <END>
<BEG> layouts column width <END>
<BEG>  < p > overridden to support enhanced auto-resize behaviour enable and necessary <END>
<BEG>  < p > overridden for documentation reason only : same behaviour but different default value <END>
<BEG> overridden to account for row index mapping <END>
<BEG> returns true if the cell at < code > row < code > and < code > column < code > be editable <END>
<BEG> hack around core issue 6791934 : set flag to force revalidate if appropriate <END>
<BEG> hack around core issue 6791934 : force a revalidate if appropriate and reset internal flag <END>
<BEG>  < p > overridden to prevent super from create rowsorter <END>
<BEG> convenience method to detect datachanged table event type <END>
<BEG> toggles the sort order of the column at columnindex <END>
<BEG> sorts the table by the give column use sortorder <END>
<BEG> sorts the table by the give column use the sortorder <END>
<BEG> decides if the column at columnindex can be interactively sort <END>
<BEG> returns a < code > list < code > of contain < code > tablecolumn < code > s <END>
<BEG> jw : not properly test not in all in fact <END>
<BEG>  listens to column property change <END>
<BEG> todo jw : think about implication of not copy the reference to the share instance into the table 's field ? <END>
<BEG> todo auto-configure column on set ? <END>
<BEG> packs all the column to their optimal size <END>
<BEG> returns the preferred number of row to show in a < code > jscrollpane < code > <END>
<BEG> initialize the width related property of the specified column <END>
<BEG> scrolls vertically to make the give row visible <END>
<BEG> scrolls to make the cell at row and column visible <END>
<BEG> adjusts the < code > component < code > 's orientation to this < code > jxtable < code > 's co if appropriate <END>
<BEG> returns the property which determine the edit termination behaviour on focus lose <END>
<BEG> overridden with backport from mustang fix for # 4684090 <SEG> # 4887999 <END>
<BEG>  < p > overridden to try to stop the edit <SEG> if appropriate <END>
<BEG> updates the ui of the columncontrol if appropriate <END>
<BEG> updates tablecolumn after updateui change <END>
<BEG> auto-adjusts rowheight to something more pleasing then the default <END>
<BEG> returns a boolean to indicate whether individual row height be enable <END>
<BEG> sets the rowheight for all row to the give value <END>
<BEG>  < p > overridden to work around core bug id # 6291631 : negative y be map to row 0 <END>
<BEG>  < p > overridden to return a < code > jxtableheader < code > <END>
<BEG>  < p > overridden because super throw npe on null param <END>
<BEG> synchs the header 's enable with the table 's enabled property <END>
<BEG> implements tablecolumnmodelext to allow internal update after column property change < p > this implementation trigger a resizeandrepaint on every propertychange which do n't already fire a normal columnmodelevent <END>
<BEG> returns a boolean indicating if a property change event receive from column change be expect to be already broadcast by the core tablecolumnmodel <END>
<BEG>  < p > overridden to respect the column tooltip <SEG> if available <END>
<BEG> returns the column tooltip of the column at the position of the mouseevent <SEG> if a tooltip be available <END>
<BEG> returns the associate table if it be of type jxtable <SEG> or null if not <END>
<BEG> returns a reasonable minimal preferred height for the header <END>
<BEG>  < p > overridden to scroll the table to keep the dragged column visible <END>
<BEG> returns the propertychangelistener to register on the owning table <SEG> lazily create <END>
<BEG> creates and return the propertychangelistener to register on the owning table < p > this implementation synchs the header 's enabled property with the table 's enable <END>
<BEG> creates and installs header listener to service the extended functionality <END>
<BEG> sets the sortgesturerecognizer to use for interpret mouse event a sort gesture <END>
<BEG> sets the title to be display in the border of this pane <END>
<BEG> sets this pane to be special or not <END>
<BEG> should this group be scroll to be visible on expand <END>
<BEG> should this group scroll to be visible after this group be expand <END>
<BEG> expands or collapse this group <END>
<BEG> enables or disables animation during expand collapse transition <END>
<BEG> returns the keyboard mnemonic for the task pane <END>
<BEG> see jxcollapsiblepane collapsiblepanecontainer <END>
<BEG> overridden to redirect call to the content pane <END>
<BEG> sets the index of the tip to show param currenttip throw illegalargumentexception if currenttip be not within the bound [ 0 <SEG> getmodel gettipcount [ <END>
<BEG> shows the next tip in the list <END>
<BEG> param showonstartuppref return true if the key name showtiponstartup be not set to false <END>
<BEG> removes the value set for showtiponstartup in the give preferences to ensure the dialog show by a later call to { link # showdialog component <SEG> preferences } will be visible to the user <END>
<BEG> adds the give jcomponent a a decoration on the right of the title param decoration <END>
<BEG> return the painter to use for paint the background of the title section <END>
<BEG> sets the horizontal position of the title 's text <SEG> relative to the icon <END>
<BEG> defines the icon this component will display <END>
<BEG> collapses all node in this tree <END>
<BEG> returns the background color for select cell <END>
<BEG>  < p > overridden to update selection background foreground <END>
<BEG> quick fix for # 1060-swingx : icon lose on toggle laf <END>
<BEG> sets the icon to use for the handle of an expanded node < p > note : this will only succeed if the current ui delegate be a basictreeui otherwise it will do nothing < p > pending jw : incomplete api no getter and not a bound property <END>
<BEG> property to control whether per-tree icon should be copy to the renderer on setcellrenderer <END>
<BEG> returns a boolean indicating whether the per-tree icon should be copy to the renderer on setcellrenderer <END>
<BEG> this be call from cell editor listener if edit terminate <END>
<BEG> overridden to release the celleditorremover <SEG> if any <END>
<BEG> get the multisplitlayout node associate with a component param comp the component be position by the layout return the node associate with the component <END>
<BEG> get the multisplitlayout node associate with a component param name the name use to associate a component with the layout return the node associate with the component <END>
<BEG> get the name use to map a component param child the component return the name use to map the component or null if no mapping be find <END>
<BEG> get the multisplitlayout node associate with a component param split the layout split that own the requested node param comp the component be position by the layout return the node associate with the component <END>
<BEG> get the multisplitlayout node associate with a component param split the layout split that own the requested node param name the name use to associate a component with the layout return the node associate with the component <END>
<BEG> is there a valid model for the layout ? <END>
<BEG> sets the width of dividers in split row <SEG> and the height of dividers in split column <END>
<BEG> if true <SEG> leaf node bound match the corresponding component 's preferred size and splits dividers be resize accordingly <END>
<BEG> show hide node <END>
<BEG> get the minimum node size return the minimum size <END>
<BEG> set the user define minimum size support in the user_min_size_layout layout mode <END>
<BEG> get the layoutbyweight falg <END>
<BEG> compute the bound of all of the split divider leaf nodes in the layout model <SEG> and then set the bound of each child component with a match leaf node <END>
<BEG> return the dividers whose bound overlap the specify rectangle <END>
<BEG> specifies whether this painter should attempt to resize the paint to fit the area be paint <END>
<BEG> the paint to use for stroke the shape paint the outline <END>
<BEG> gets the current paint to use for stroke the shape paint the outline <END>
<BEG> the shape can be fill or simply stroked outline <SEG> or both or none <END>
<BEG> resizes the give paint <END>
<BEG> sets the path effect to be draw on this painter <END>
<BEG> gets the current set of path effect apply to this painter <END>
<BEG> get the current verticalalignment alignment return current verticalalignment alignment <END>
<BEG> sets if the content should be stretch horizontally to fill all available horizontalalignment space minus the left and right inset <END>
<BEG> a defensive copy of the effects to apply to the result of the abstractpainter 's painting operation <END>
<BEG> < p > a convenience method for specify the filter to use base on bufferedimageops <END>
<BEG> returns if antialiasing be turn on or not <END>
<BEG> < p > gets whether this < code > abstractpainter < code > can be cache a an image <END>
<BEG> < p > call this method to clear the cacheable <END>
<BEG> only make package private for test <END>
<BEG> ye olde dirty bit <END>
<BEG> < p > this method be call by the < code > paint < code > method prior to any draw operation to configure the drawing surface <END>
<BEG> gets value of center hint <END>
<BEG> p1 = x1 <SEG> y1 - start point of curve p2 = x2 <SEG> y2 - end point of curve pc = xc <SEG> yc - control point pq t = p1 1 - t ^2 + 2 pc t 1 - t + p2 t^2 = = p1 - 2 pc + p2 t^2 + 2 pc - p1 t + p1 t = [ 0:1 ] thx jim b0 = 1 -t ^2 <SEG> b1 = 2 t 1-t <SEG> b2 = t^2 <END>
<BEG> gets base color <END>
<BEG> sets new base color <END>
<BEG> gets total amount of distinct point in spinner <END>
<BEG> sets total amount of point in spinner <END>
<BEG> gets shape of current point <END>
<BEG> sets new point shape <END>
<BEG> sets new trajectory <END>
<BEG> centers shape in the area cover by the painter <END>
<BEG> specifies the paint to use for dark tile <END>
<BEG> gets the array of painter use by this compoundpainter return a defensive copy of the painter use by this compoundpainter <END>
<BEG> indicates if the clip produce by any painter be leave set once it finish paint <END>
<BEG> sets if the clip should be preserve <END>
<BEG> gets the current transform apply to all painter in this compoundpainter <END>
<BEG> set a transform to be apply to all painter contain in this compoundpainter param transform a new affinetransform <END>
<BEG> < p > iterates over all child < code > painter < code > s and give them a chance to validate themselves <END>
<BEG> used by { link # isdirty } to check if the child < code > painter < code > s should be check for their < code > dirty < code > flag a part of process < br > default value be : < code > true < code > < br > this should be set to < code > false < code > if the cacheable state of the child < code > painter < code > s be different from each other <END>
<BEG> set the flag use by { link # isdirty } to check if the child < code > painter < code > s should be check for their < code > dirty < code > flag a part of processing <END>
<BEG> < p > returns the paint currently use by the painter to fill the gloss < p > return the current paint instance use by the painter <END>
<BEG> < p > returns the position at which the gloss be paint < p > return the position of the gloss in the painted area <END>
<BEG> set the paint to use for draw the pinstripe param p the paint to use <END>
<BEG> sets the angle <SEG> in degree <SEG> at which to paint the pinstripe <END>
<BEG> gets the current angle of the pinstripe return the angle <SEG> in degree <SEG> at which the pinstripe be paint <END>
<BEG> sets the spacing between pinstripe param space space between pinstripe <END>
<BEG> get the current spacing between the stripe return the spacing between pinstripe <END>
<BEG> gets the current width of the pinstripe return the current pinstripe width <END>
<BEG> set the width of the pinstripe param stripewidth a new width for the pinstripe <END>
<BEG> set the font and font size and style to be use when draw the text param f the new font <END>
<BEG> get the font and font size and style to be use when draw the text return the current font <END>
<BEG> sets the text to draw param text the text to draw <END>
<BEG> default implementation call { link # addbasicdefaults lookandfeeladdons <SEG> defaultslist } param addon param default <END>
<BEG> return true if the addon be the windows addon or it subclass <END>
<BEG> return true if the addon be the mac os x addon or it subclass <END>
<BEG> return true if the current look and feel be one of jgoodies plastic l & f <END>
<BEG> return true if the current look and feel be synth l & f <END>
<BEG> creates and return a stringvalue use for render the title of a month box <END>
<BEG> updates internal state to the give locale <END>
<BEG> installs datepicker default property <END>
<BEG> installs action and key binding on the datepicker 's linkpanel <END>
<BEG> uninstalls action and key binding from linkpanel <END>
<BEG> uninstalls and null all listener which have be instal by this delegate <END>
<BEG> wires the picker 's editor relate listening and action <END>
<BEG> wires monthview 's selection model listen <END>
<BEG> creates the editor use to edit the date selection <END>
<BEG> updates internals after picker 's date property change <END>
<BEG> updates date relate property in picker monthview after a change in the editor 's value <END>
<BEG> updates date relate property picker editor after a change in the monthview 's selection <END>
<BEG> updates internals after the picker 's monthview have change <END>
<BEG> updates internals after the selection model change <END>
<BEG> updates property which depend on the picker 's editable <END>
<BEG> updates the picker 's format to the give timezone <END>
<BEG> updates picker 's timezone dependent property on change notification from the associate monthview <END>
<BEG> updates the picker 's linkdate to be in synch with monthview 's today <END>
<BEG> called form property listener <SEG> update all component locale <SEG> format etc <END>
<BEG> pending : widened access for debug - need api to control popup visibility ? <END>
<BEG> navigates to linkdate <END>
<BEG> toggles the popups visibility after prepare internal state <END>
<BEG> creates the popup and register the popup listener <END>
<BEG> removes the popup listener from the popup and null it <SEG> if it be not null <END>
<BEG> returns the popupmenulistener for the monthview popup <END>
<BEG> creates and return a popupmenulistener <END>
<BEG> creates and return the property change listener for the picker 's monthview return the listener for monthview property <END>
<BEG> creates and return the focuslistener for picker and editor <END>
<BEG> creates and return the actionlistener for the picker 's editor <END>
<BEG> return a propertychangelistener listen to editor property change <END>
<BEG> installs the default color <SEG> and default font into the error pane <END>
<BEG> remove the installed listener from the error pane <END>
<BEG> creates and initialize the component which make up the aggregate combo box <END>
<BEG> create and return the layoutmanager to use with the error pane <END>
<BEG> creates and return html represent the detail of this incident info <END>
<BEG> returns an instance of the ui delegate for the specified component <END>
<BEG> reverses configuration which be do on the specified component during < code > installui < code > <END>
<BEG> installs default header property <END>
<BEG> uninstalls the give header 's default property <END>
<BEG> unconfigures <SEG> remove and null contain component <END>
<BEG>  < p > overridden to return true if the position be inside the union of the text and icon rectangle <SEG> false otherwise <END>
<BEG> creates default 400x60 banner for the login panel <END>
<BEG> creates and install the calendar header handler <END>
<BEG> uninstalls the calendar header handler <END>
<BEG> installs this ui delegate 's property <END>
<BEG> checks and return whether the give property should be replace by the ui 's default value <END>
<BEG> creates and install the renderinghandler and infrastructure to use it <END>
<BEG> uninstalls the renderinghandler and infrastructure that use it <END>
<BEG> binds clear the keystroke in the component input map <SEG> base on the monthview 's componentinputmap enable property <END>
<BEG> returns the bound of the day in the grid of day which contain the give location <END>
<BEG> returns the bound of the day box at logical coordinate in the give month <END>
<BEG> returns the logical coordinate of the day which contain the give location <END>
<BEG> returns the date define by the logical grid coordinate relative to the give month <END>
<BEG> returns the give date 's position in the grid of the month it be contain in <END>
<BEG> mapping pixel to bound < p > pending jw : define the action grid <END>
<BEG> returns the bound of the month header which contain the give location <END>
<BEG> returns the bound of the month which contain the give location <END>
<BEG> returns the bound of the month at the give logical coordinate in the grid of visible month < p > mapping logical grip position to pixel <END>
<BEG> returns the bound of the month contain the give date <END>
<BEG> overridden to extract the background painting for ease-of-use of subclass <END>
<BEG> paints the day column header <END>
<BEG> paints the day of the give month <END>
<BEG> paints the separator between row header week of year and day <END>
<BEG> returns the number of week to paint in the current month <SEG> a represent by the give calendar <END>
<BEG> updates internal state that depend on the monthview 's firstdisplayedday property <END>
<BEG> returns true if the date pass in be the same a today <END>
<BEG> updates state after the monthview 's zoomable property have be change <END>
<BEG> returns a calendarheaderhandler look up in the uimanager <END>
<BEG> create a derived font use to when paint various piece of the month view component <END>
<BEG> creates a { code mouselistener } which will be add to the status bar <END>
<BEG> constructs a layout manager to be use by the look and feel <END>
<BEG> installs keyboard action to allow task pane to react on hot key <END>
<BEG> creates new toggle listener <END>
<BEG> creates property change listener for task pane <END>
<BEG> evaluates whenever give mouse even have occur within border of task pane <END>
<BEG> creates new border for task pane <END>
<BEG> creates content pane border <END>
<BEG> configures internally use hyperlink on new action creation and on every call to < code > updateui < code > <END>
<BEG> ensures expand group be visible <END>
<BEG> gets size of arc use to round corner <END>
<BEG> configures the specified component appropriate for the look and feel <END>
<BEG> return the container acting a the title bar for this component <END>
<BEG> returns the special color use for flagged day or per weekday or null if none be set <SEG> the component or the calendar be null <END>
<BEG> some subclass will have flavor that be more descriptive than html or plain text <END>
<BEG> returns whether or not the specify data flavor be an html flavor that be support <END>
<BEG> should the html flavor be offer ? <END>
<BEG> should the plain text flavor be offer ? <END>
<BEG> compatibility wrapper : a synthetic model which delegate to list api and throw return <END>
<BEG> dispose and null 's the sortui if instal <END>
<BEG> called from the propertychangehandler <END>
<BEG> returns a boolean indicating whether or not the event have be process by the sortui <END>
<BEG> invalidates the cell size cache and revalidates -paints the list <END>
<BEG> paint the row that intersect the graphics object cliprect <END>
<BEG> the preferredsize of the list depend upon the layout orientation <END>
<BEG> selected the previous row and force it to be visible <END>
<BEG> registers the keyboard binding on the < code > jlist < code > that the < code > basicxlistui < code > be associate with <END>
<BEG> unregisters keyboard action instal from < code > installkeyboardactions < code > <END>
<BEG> create and install the listener for the jlist <SEG> it model <SEG> and it selectionmodel <END>
<BEG> remove the listener for the jlist <SEG> it model <SEG> and it selectionmodel <END>
<BEG> set the jlist property that have n't be explicitly overridden to null <END>
<BEG> initializes < code > this list < code > by call < code > installdefaults < code > <SEG> < code > installlisteners < code > <SEG> and < code > installkeyboardactions < code > in order <END>
<BEG> convert the jlist relative coordinate to the row that contain it <SEG> base on the current layout <END>
<BEG> creates a delegate that implement mouseinputlistener <END>
<BEG> creates an instance of listselectionhandler that 's add to the jlists by selectionmodel a need <END>
<BEG> creates an instance of propertychangehandler that 's add to the jlist by installui <END>
<BEG> returns whether or not the event be potentially part of a drag sequence <END>
<BEG> if a dnd recognition have be go on <SEG> return the mouseevent that start the recognition <END>
<BEG> returns whether or not a drag gesture recognition be ongoing <END>
<BEG> disposes any resource use by this sortmanager <END>
<BEG> called after notification from listmodel <END>
<BEG>  < p > implemented to create and configure the custom header component <END>
<BEG> updates the formatter of the month text to the jxmonthview 's locale <END>
<BEG> updates internal state to monthview 's firstdisplayedday <END>
<BEG> returns the color to use for paint the cross <END>
<BEG> wraps and replace the text field default border with this object <SEG> to honor the button margin and size of the search <SEG> clear and popup button and the layout style <END>
<BEG> returns the { link insets } of the original { link border } plus the space require by the child component <END>
<BEG> returns the inset of the original border without the margin ! <END>
<BEG> todo : comment see javax swing plaf componentui # getpreferredsize javax swing jcomponent <END>
<BEG> returns the ui that be of type < code > klass < code > <SEG> or null if one can not be find <END>
<BEG> returns a font base on the param which be not of type uiresource <END>
<BEG> overriden to paint the background of the component but keep the rounded corner <END>
<BEG> creates a label component <SEG> if none have already be create <END>
<BEG> when { link # shouldpaintprompt jtextcomponent } return true <SEG> the prompt component be retrieve by call { link # getpromptcomponent jtextcomponent } and it 's preferred size be return <END>
<BEG> delegates paint when { link # shouldpaintprompt jtextcomponent } return false <END>
<BEG> returns if the prompt or the text field should be paint <SEG> depend on the state of < code > txt < code > <END>
<BEG> calls { link # installdefaults } <SEG> add the search <SEG> clear and popup button to the search field and register a { link propertychangelistener } ad { link documentlistener } and an { link actionlistener } on the popup button <END>
<BEG> initialize the search field various property base on the corresponding searchfield <END>
<BEG> returns true if < code > o < code > be < code > null < code > or of instance { link uiresource } <END>
<BEG> convience method for only replace icon if they have not be customize by the user <END>
<BEG> returns < code > true < code > if { link jxsearchfield # isuseseperatepopupbutton } be < code > true < code > and a search popup menu have be set <END>
<BEG> returns the number of pixel between the popup button and the clear or search button a specify in the default table by 'searchfield popupoffset ' <END>
<BEG> sets the visibility of the search <SEG> clear and popup button depend on the search mode <SEG> layout stye <SEG> search text <SEG> search popup menu and the use of a seperate popup button <END>
<BEG> this default implementation return false <END>
<BEG> returns a context with the give component state and all other field same a input context <END>
<BEG> returns true if the style should be update in response to the specify propertychangeevent <END>
<BEG> a convenience method that handle painting of the background <END>
<BEG>  < p > overridden to fill background <SEG> synth-style <END>
<BEG> installs a synthborder from the current style <SEG> if ui-installable <END>
<BEG> returns a region appropriate for the component <END>
<BEG> < p > wraps and replace the current ui of the give < code > textcomponent < code > <SEG> by call { link # wrapui jtextcomponent } if necessary <END>
<BEG> wraps and replace the text component current ui by call { link # wrapui textui } <SEG> if the text component current ui be not an instance of the give wrapper class <END>
<BEG> returns a string from the default <END>
<BEG> returns a shape from the default that be appropriate for the give locale <END>
<BEG> create a gap to insert between to buddy <END>
<BEG> sets the { link focusbehavior } on < code > textcomponent < code > and repaint the component to reflect the change <SEG> if it be the focus owner <END>
<BEG> get the foreground color of the prompt text <END>
<BEG> get the background color of the < code > textcomponent < code > <SEG> when no text be present <END>
<BEG> < p > sets the prompt background color on < code > textcomponent < code > and repaint the component to reflect the change <END>
<BEG> < p > set the style of the prompt font <SEG> if different from the < code > textcomponent < code > s font <END>
<BEG> returns the font style of the prompt text <SEG> or < code > null < code > if the prompt 's font style should not differ from the < code > textcomponent < code > s font <END>
<BEG> returns the border paint flag <END>
<BEG>  < p > overridden to set the button 's select state and text < p > pending : set icon ? <END>
<BEG> returns a boolean representation of the content < p > this method message the < code > booleanvalue < code > to get the boolean rep <END>
<BEG> configures and return an appropriate component to render a cell in the give context <END>
<BEG> returns the stringvalue to use for obtain the string representation <END>
<BEG> returns a string representation of the content < p > this method message the < code > stringvalue < code > to get the string rep meant a a convenience for subclass <END>
<BEG> configures the renderering component 's content and state from the give cell context <END>
<BEG> factory method to create and return the defaultvisuals use by this to configure the default visuals <END>
<BEG> intermediate exposure during refactoring return the default visual configurator use by this <END>
<BEG> sets the renderer 's unselected-foreground color to the specify color <END>
<BEG> configures all default visual state of the render component from the give cell context <END>
<BEG> configures the default painter if applicable <END>
<BEG> configures min- <SEG> max <SEG> preferredsize property of the renderingcomponent <END>
<BEG> configures color of render component from the give cell context <END>
<BEG> configures focus-related color form give cell context < p > pending : move to context as well ? <END>
<BEG> configures the render component 's border from the give cell context < p > param renderingcomponent the component to configure <SEG> must not be null param context the cell context to configure from <SEG> must not be null <END>
<BEG> returns the unselected foreground to use for the rendering component <END>
<BEG> sets the class the action be suppose to handle <END>
<BEG> decides if the give target be acceptable for settarget <END>
<BEG> default action - do nothing except show the target <END>
<BEG>  < p > pending jw : needs to be overridden - do n't comply to contract ! <END>
<BEG>  overridden to set the linkaction 's target to the context 's value <SEG> if targetable < p > forces foreground color to the one define by hyperlink for unselected cell <SEG> do n't change the foreground for select a darkish text on dark selection background might be unreadable <SEG> issue # 840-swingx <END>
<BEG>  < p > overridden to not automatically de register itself from to the tooltipmanager <END>
<BEG> overridden for performance reason <END>
<BEG> overridden for performance reason < p > pending : think about painters and opaqueness ? <END>
<BEG>  here : set the label 's horizontal alignment to the alignment a configure in the controller <END>
<BEG>  here : set the label 's text and icon property to the value a return by getvalueasstring icon <SEG> respectively <END>
<BEG> returns the cell 's editable property a return by table iscelleditable or false if the table be null <END>
<BEG> pre getcomponent ! = null return whether the column coordinate be valid in this context <END>
<BEG> returns the treepath for the row or null if invalid <END>
<BEG>  < p > overridden to return a default depend for the leaf open cell state <END>
<BEG>  < p > overridden to set the font of the delegate a well <END>
<BEG>  < p > returns the delegate 's painter if it be of type painteraware or null otherwise <END>
<BEG> sets the delegate 's painter if it be of type painteraware <END>
<BEG> returns the bound of the delegate component or null if the delegate be null <END>
<BEG> sets the give provider a delegate for the node content <END>
<BEG> returns the delegate provider use to render the node content <END>
<BEG>  < p > overridden to comply to contract : return the string representation a provide by the wrappee a this level have no string rep <END>
<BEG> returns the value a it should be pass to the delegate <END>
<BEG> restores the context value to the old value <END>
<BEG> replace the context 's value with the userobject if the value be a type support the notion of userobject and this provider 's unwrapuserobject property be true <END>
<BEG>  < p > here : implement to set the icon <END>
<BEG> add a component in the list of component that should be refresh <END>
<BEG> returns a boolean indicating whether the component 's size should be adjust to parent <END>
<BEG> performs a search start at the give startindex use string that represent a regex pattern ; { link java util regex pattern } <END>
<BEG> performs a search start at the give startindex use the pattern ; { link java util regex pattern } <END>
<BEG> called if < code > startindex < code > be different from last search and make sure a backwards forward search start at last first row <SEG> respectively < p > param startindex position in the document in the appropriate coordinate from which we will start search or -1 to start from the begin param backwards < code > true < code > if we should perform search from towards the begin return adjust < code > startindex < code > <END>
<BEG> moves the internal start position for match a appropriate and return the new startindex to use <END>
<BEG> checks if the give pattern should be consider a the same a in a previous search <END>
<BEG> checks if the startindex should be consider a the same a in the previous search <END>
<BEG> checks if the searchstring should be interpret a empty <END>
<BEG> updates inner searchable state base on provide search result param searchresult < code > searchresult < code > that represent the new state of this < code > abstractsearchable < code > <END>
<BEG> ensure that the give highlighter be the last in the list of the highlighter register on the target <END>
<BEG> converts and return the give column index from view coordinate to model coordinate <END>
<BEG> sets the abstracthighlighter to use a match marker <SEG> if enable <END>
<BEG> returns the hihglighter to use a match marker <SEG> lazyly create if null <END>
<BEG> creates and return the highlighter use a match marker <END>
<BEG> configures and return the match highlighter for the current match <END>
<BEG> creates and return a highlightpredicate appropriate for the current search result <END>
<BEG> use and move the match highlighter <END>
<BEG> return < code > true < code > if we run leopard and the mac look and feel <END>
<BEG> creates and set the strategy to use for compile a pattern from rawtext <END>
<BEG> this be a quick-fix to allow custom strategy for compile rawtext to pattern <END>
<BEG> add a search string a the first element <END>
<BEG> remove all recent search <END>
<BEG> returns the maximum number of recent search <END>
<BEG> add a change listener <END>
<BEG> returns all register { link changelistener } s return all register { link changelistener } s <END>
<BEG> creates the recent search popup menu which will be use by { link # install jxsearchfield } to set a search popup menu on < code > searchfield < code > <END>
<BEG> install a recent the search popup menu return by { link # createpopupmenu jxsearchfield } on < code > searchfield < code > <END>
<BEG> remove the recent search popup from < code > searchfield < code > when instal and stop listening for { link actionevent } s fire by the search field <END>
<BEG> calls { link # put string } with the { link actionevent } s action command a the search string <END>
<BEG> returns the shared searchfactory <END>
<BEG> sets the share searchfactory <END>
<BEG> sets the default search type to incremental or batch <SEG> for a true false boolean <END>
<BEG> show a incremental-find widget target at the searchable <END>
<BEG> returns the share jxfindbar <END>
<BEG> pre : findbar ! = null <END>
<BEG> show a batch-find widget target at the give searchable <END>
<BEG> hides the findpanel 's toplevel window and return it location <END>
<BEG>  < p > overridden to adjust the column index to -1 <END>
<BEG> configures the match highlighter to the current match <END>
<BEG> moves the row selection to the matching cell and ensure it visibility <SEG> if any <END>
<BEG>  < p > <END>
<BEG>  < p > overridden - that be completely new implementation - to get first next sortorder from sort order cycle <END>
<BEG>  < p > pending jw : toggle have two effect : make the column the primary sort column <SEG> and cycle through <END>
<BEG> sets the registry of string value <END>
<BEG>  < p > overridden to use check against < code > getviewrowcount < code > for validity <END>
<BEG>  < p > overridden to return the model row count which correspond to the currently map model instead of access the model directly a super do <END>
<BEG> sets the < code > tablemodel < code > to use a the underlying model for this < code > tablerowsorter < code > <END>
<BEG> returns the first sortkey in the list which be sort <END>
<BEG> returns the first sortkey in the list for the give column <SEG> or null if the column have no sortkey <END>
<BEG> convenience to check for ascend sort order <END>
<BEG> sets a stringvalue to use for the give column <END>
<BEG> removes all per-column mapping of stringvalues <END>
<BEG>  < p > note : must implement same logic a the overridden comparator lookup <SEG> otherwise will throw classcastexception because here the comparator be never null <END>
<BEG> updates this button 's property provide by the laf <END>
<BEG> updates the action property provide by the laf <END>
<BEG> toggles the popup component 's visibility <END>
<BEG> returns to popup component for user interaction <END>
<BEG> factory method to return a < code > columncontrolpopup < code > <END>
<BEG> adjusts internal state after table 's column model property have change <END>
<BEG> synchs this button 's enable with table 's enable <END>
<BEG> method to check if we can control column visibility post : if true we can be sure to have an extended tablecolumnmodel return boolean to indicate if control the visibility state be possible <END>
<BEG> remove all component from the popup <SEG> make sure to release all columnvisibility action <END>
<BEG> releases action and clear list of action <END>
<BEG> creates and return a < code > columnvisibilityaction < code > for the give < code > tablecolumn < code > <END>
<BEG> looks up and return action key to access action in the table 's actionmap which should be include into the popup <END>
<BEG> here : true if a string key start with # column_control_marker <END>
<BEG> creates the listener to columnmodel <END>
<BEG> creates a table column with modelindex <END>
<BEG> configure column property from tablemodel <END>
<BEG> pending jw : really only call once in a table 's lifetime ? <END>
<BEG> calculates and return the preferred scrollable viewport width of the give table <END>
<BEG> measures and return the preferred width of the header <END>
<BEG> measures and return the preferred width of the render component configure with the prototype value <SEG> if any <END>
<BEG> specifies the number of click need to start edit <END>
<BEG> commits any pending edits and return a boolean indicating whether the commit be successful <END>
<BEG> returns the actionlistener to add to the datepicker <END>
<BEG> creates and return the actionlistener for the picker <END>
<BEG> hot fix for # 157 : listener that be aware of the possible existence of invisible column should check if the receive columnremoved originate from move a column from visible to invisible <END>
<BEG> exposed for test only - do n't use ! <END>
<BEG> returns a boolean indicating whether the current text be valid for instantiate the expected number type <END>
<BEG> returns the < code > object < code > representation of the < code > string < code > < code > text < code > <SEG> may be null <END>
<BEG> registers the text to display in the column 's tool tip <END>
<BEG> returns the text of to display in the column 's tool tip <END>
<BEG> sets the title of this view column <END>
<BEG> convenience method which return the headervalue property after convert it to a string <END>
<BEG> copies property from original <END>
<BEG> copies all clientproperties of this < code > tablecolumnext < code > to the target column <END>
<BEG> notifies register < code > propertychangelistener < code > s about property change <END>
<BEG> update ui of own ui-dependent part <END>
<BEG> initializes a tipofthedaymodel from property <END>
<BEG> call when a node have change it leaf state < p > pending : rename ? <END>
<BEG> notifies register treemodellisteners that the structure below the node identify by the give path have be completely change <END>
<BEG> notifies register treemodellisteners that the the node identify by the give path have be modify <END>
<BEG> notifies register treemodellisteners that the give child of the node identify by the give parent path have be modify <END>
<BEG> notifies register treemodellisteners that the child have be add to the the node identify by the give parent path at the give position <END>
<BEG> creates the list use to manage the child of this node <END>
<BEG> determines whether or not this node be allow to have child <END>
<BEG> sets the value for the give { code column } <END>
<BEG> returns < code > true < code > if < code > node < code > be a leaf <END>
<BEG> sets the value for the { code node } at { code columnindex } to { code value } <END>
<BEG> replaces the column identifier in the model <END>
<BEG> message this to remove node from it parent <END>
<BEG> subclasses that need to conditionalize the enabled state should override this <END>
<BEG> determines if the version of jdk1_6 have nimbus look and feel instal <END>
<BEG> return true if this vm be run on mac os x <END>
<BEG> return true if this vm be run on windows xp <END>
<BEG> return true if the vm be run windows and the java application be render use xp visual styles <END>
<BEG> returns the name of the current windows visual style <END>
<BEG> < p > returns the < code > point < code > at which a window should be place in order to be stagger slightly from another & quot ; origin & quot ; window to ensure that the title area of both window remain visible to the user <END>
<BEG> resizes a gradient to fill the width and height available <END>
<BEG> interpolates a color <END>
<BEG> < p > returns the < code > point < code > at which a window should be place to center that window on the give desktop <END>
<BEG> inherit < p > overridden to fire a propertychange for draggedcolumn <END>
<BEG> sets the locale to use for lookup of localized string representation <END>
<BEG> inherit < p > overridden to respect ui alternate row color <END>
<BEG> determines whether the supplied component be small than it parent ; use to determine whether to track with the parent size <END>
<BEG>  < p > this implementation defer to { link # preferredlayoutsize container } <END>
<BEG> returns the common class of all data column identify by the give column index in model coordinate < p > this implementation return < code > object class < code > <END>
<BEG>  < p > overridden to return true if the component be of type iconaware or of type jlabel <SEG> false otherwise <END>
<BEG> inherit < p > implemented to return true if the match of cell content 's string representation against the pattern if find and the adapter 's view column map to the decoratecolumn s <END>
<BEG> overridden to create a jxrootpane and to ensure that the root pane be always create on the event dispatch thread <END>
<BEG> this method perform the actual creation of the root pane and be guarantee to be perform on the event dispatch thread <END>
<BEG> release this controller from it table <END>
<BEG> sets the row height of the row in the range of first- to lastrow <SEG> inclusive <END>
<BEG> creates and return an enumeration across the direct child of parentnode in the give treemodel <END>
<BEG> adds a template to this template loader ; see { link stringtemplateloader # puttemplate string <SEG> string <SEG> long } for more <END>
<BEG> show class name and some detail that be useful in template-not-found error <END>
<BEG> see the similar parameter of { link # classtemplateloader class <SEG> string } ; { code null } when other mechanism be use to load the resource <END>
<BEG> see the similar parameter of { link # classtemplateloader classloader <SEG> string } ; note that this be a normalized version of what be actually pass to the constructor <END>
<BEG> sets if the matching will be case insensitive unicode compliant ; default be { code true } <END>
<BEG> intended for development only <SEG> check if the template name match the case upper vs low case letter of the actual file name <SEG> and if it do n't <SEG> it emulate a file-not-found even if the file system be case insensitive <END>
<BEG> use this to specify if have no matching choice be an error <END>
<BEG> same a { link # setallownomatch boolean } <SEG> but return this object to support fluent api style <END>
<BEG> returns the configured upper limit of the number of strong cache entry <END>
<BEG> returns the < em > current < em > number of strong cache entry <END>
<BEG> returns a close approximation of the < em > current < em > number of soft cache entry <END>
<BEG> returns a close approximation of the current number of cache entry <END>
<BEG> clears the sickiness memory <SEG> also reset the state of all enclose { link statefultemplateloader } -s <END>
<BEG> returns the number of { link templateloader } -s directly inside this { link templateloader } <END>
<BEG> sets if for a name that be already load earlier the same { link templateloader } will be try first <SEG> or we always try the { link templateloader } -s strictly in the order a it be specify in the constructor <END>
<BEG> returns true if the underlie map be a { code concurrentmap } <END>
<BEG> returns a close approximation of the number of cache entry <END>
<BEG> puts a template into the loader <END>
<BEG> sets the configuration object to which this cache belongs <END>
<BEG> since 2 3 22 <END>
<BEG> returns if localize template lookup be enable or not <END>
<BEG> removes all entry from the cache <SEG> force reloading of template on subsequent { link # gettemplate string <SEG> locale <SEG> string <SEG> boolean } call <END>
<BEG> the normalized name path of the template relatively to the { link templateloader } <END>
<BEG> { code null } if localize lookup be disabled see { link configuration # getlocalizedlookup } <SEG> otherwise the locale request <END>
<BEG> returns the value of the { code customlookupcondition } parameter of { link configuration # gettemplate string <SEG> locale <SEG> object <SEG> string <SEG> boolean <SEG> boolean } ; see requirement there <SEG> such a have a proper { link object # equal object } and { link object # hashcode } method <END>
<BEG> creates a not-found lookup result that then can be use a the return value of { link templatelookupstrategy # lookup templatelookupcontext } <END>
<BEG> used internally to get a not-found result currently just a static singleton <END>
<BEG> sets if { link urlconnection # setusecaches boolean } will be call <SEG> and with what value <END>
<BEG> can be use by subclass to canonicalize url path prefix <END>
<BEG> sets the minimal scale to use when divide bigdecimal number <END>
<BEG> there be actually a subtle but essential point in the code below <END>
<BEG> if parameter expression can be { link locallambdaexpression } -s <END>
<BEG> returns something like { code markup format=html <SEG> markup= < p > foo < p > } ; where the first parameter be { link outputformat # getname } <SEG> and the second be the content <SEG> that 's prefix with { code markup= } or { code plaintext= } <SEG> depend on the way the content be internally store <END>
<BEG> returns the parent { link configurable } object of this object <END>
<BEG> toggles the classic compatible mode <END>
<BEG> same a { link # setclassiccompatible boolean } <SEG> but allow some extra value <END>
<BEG> tells if this setting be set directly in this object or it value be come from the { link # getparent parent } <END>
<BEG> sets the time zone to use when format date time value <END>
<BEG> sets the time zone use when deal with { link java sql date java sql date } and { link java sql time java sql time } value <END>
<BEG> the getter pair of { link # setsqldateandtimetimezone timezone } <END>
<BEG> sets the default number format use to convert number to string <END>
<BEG> associates name with formatter factory <SEG> which then can be refer by the { link # setnumberformat string number_format } set with value start with < code > < i > name < i > < code > <END>
<BEG> gets the custom name format register for the name <END>
<BEG> tells if this configurable object or it parent define any custom format <END>
<BEG> sets the format use to convert { link java util date } -s that be date-time timestamp value to string-s <SEG> also the format that { code somestring ? datetime } will use to parse string <END>
<BEG> like { link # getcustomdateformats } <SEG> but do n't fall back to the parent { link configurable } <SEG> nor do it provide a non- { code null } default when call a the method of a { link configuration } <END>
<BEG> associates name with formatter factory <SEG> which then can be refer by the { link # setdatetimeformat string date_format } <SEG> { link # setdatetimeformat string time_format } <SEG> and { link # setdatetimeformat string datetime_format } setting with value start with < code > < i > name < i > < code > <END>
<BEG> sets the exception handler use to handle exception occur inside template <END>
<BEG> sets the arithmetic engine use to perform arithmetic operation <END>
<BEG> informs freemarker about the charset use for the output <END>
<BEG> sets the url escape url encoding <SEG> percentage encoding charset <END>
<BEG> sets the { link templateclassresolver } that be use when the < code > new < code > built-in be call in a template <END>
<BEG> sets whether the output { link writer } be automatically flush at the end of { link template # process object <SEG> writer } and it overload <END>
<BEG> see { link # setautoflush boolean } since 2 3 17 <END>
<BEG> sets if tip should be show in error message of error arise during template processing <END>
<BEG> specifies if { code ? api } can be use in template <END>
<BEG> specifies the algorithm use for { code ? truncate } <END>
<BEG> specifies if { link templateexception } -s throw by template processing be log by freemarker or not <END>
<BEG> specifies if unchecked exception thrown during expression evaluation or during execute custom directive and transform will be wrap into { link templateexception } -s <SEG> or will bubble up to the caller of { link template # process object <SEG> writer <SEG> objectwrapper } a be <END>
<BEG> specifies if { linkplain # setautoimports map auto-imports } will be { link # setlazyimports boolean lazy import } <END>
<BEG> adds an invisible < code > # import < i > templatename < i > a < i > namespacevarname < i > < code > at the beginning of the main template that 's the top-level template that be n't include import from another template <END>
<BEG> removes an auto-import from this { link configurable } level not from the parent or child ; see { link # addautoimport string <SEG> string } <END>
<BEG> like { link # getautoimports } <SEG> but do n't fall back to the parent { link configurable } and so it can be { code null } <END>
<BEG> removes all auto-includes <SEG> then call { link # addautoinclude string } for each { link list } item <END>
<BEG> removes the auto-include from this { link configurable } level not from the parent or child ; see { link # addautoinclude string } <END>
<BEG> sets a freemarker setting by a name and string value <END>
<BEG> returns the valid setting name that be n't { link configuration } -only <END>
<BEG> deprecate set this on the { link objectwrapper } itself <END>
<BEG> this meant to return the string-to-string < code > map < code > of the setting <END>
<BEG> creates the exception that should be throw when a setting name be n't recognize <END>
<BEG> param name the wrong name return the correct name <SEG> or { code null } if there 's no known correction since 2 3 21 <END>
<BEG> set the setting store in a < code > properties < code > object <END>
<BEG> reads a setting list key and element pair from the input stream <END>
<BEG> internal entry point for set unnamed custom attribute <END>
<BEG> for internal usage only <SEG> copy the custom attribute set directly on this object into another { link configurable } <END>
<BEG> sets a name custom attribute for this configurable <END>
<BEG> returns an array with name of all custom attribute define directly on this configurable <END>
<BEG> this method be invoke when { link # get } be invoke without { link # set object } be invoke before it to define the value in the current scope <END>
<BEG> gets the attribute from the appropriate scope that 's accessible through the specify { link environment } <END>
<BEG> same a { link # get environment } <SEG> but use { link environment # getcurrentenvironment } to fill the 2nd argument <END>
<BEG> same a { link # get template } <SEG> but applies to a { link templateconfiguration } <END>
<BEG> same a { link # set object <SEG> environment } <SEG> but use { link environment # getcurrentenvironment } to fill the 2nd argument <END>
<BEG> see similarly name parameter of { link # defaulttruncatebuiltinalgorithm string <SEG> integer <SEG> boolean <SEG> templatemarkupoutputmodel <SEG> integer <SEG> boolean <SEG> boolean <SEG> double } the construction } <END>
<BEG> returns the estimated length of the argument terminator <END>
<BEG> tells if the dot touch by the terminator text should be remove <END>
<BEG> same a { link # getterminatorremovesdots string } <SEG> but invoke for a markup terminator <END>
<BEG> outputs the string value of the enclosed expression <END>
<BEG> # else element that belong to a # list <SEG> not to an # if <END>
<BEG> constructs a template on-the-fly and return it embed in a { link templatetransformmodel } <END>
<BEG> use this whenever possible <SEG> a it return { link # fast_instance } instead of create a new instance <SEG> when appropriate <END>
<BEG> returns a view of this { link lazilygeneratedcollectionmodel } where { link # issequence } return code true } <END>
<BEG> copy-constructor with replace { link # withargs } with the quirk that the parent of the child ast element will stay the copied macro <END>
<BEG> returns a new copy of the array that store the name of argument declare in this macro or function <END>
<BEG> returns if the macro or function have a parameter call a the argument <END>
<BEG> the argument add via { code ? with_args } ; maybe { code null } <END>
<BEG> extract the template name from the template object which will be match against the trusted template name and pattern <END>
<BEG> { link list } of { link string } -s and { link interpolation } -s <END>
<BEG> tells if this be something like < tt > $ { foo } < tt > <SEG> which be usually a user mistake <END>
<BEG> param cas a case element <END>
<BEG> associates this instance with a { link configuration } ; usually you do n't call this <SEG> a it 's call internally when this instance be add to a { link configuration } <END>
<BEG> returns the parent { link configuration } <SEG> or { code null } if none be associate yet <END>
<BEG> sets those setting of the { link template } which be n't yet set in the { link template } and be set in this { link templateconfiguration } <SEG> leave the other setting a be <END>
<BEG> see { link configuration # setwhitespacestripping boolean } <END>
<BEG> the getter pair of { link # getwhitespacestripping } <END>
<BEG> when the standard template load cache mechanism be use <SEG> this force the charset use for read the template file <SEG> override everything but the encode come from the { code # ftl } header <END>
<BEG> one-line description of the element <SEG> that contain all the information that be use in { link # getcanonicalform } <SEG> except the nested content element of the element <END>
<BEG> deprecated meaningless ; simply return if the node currently have any child node <END>
<BEG> deprecate starting from 2 4 <SEG> we wo n't use { link treenode } api <SEG> a it require swing <END>
<BEG> note : for element with { code # nestedblock } <SEG> this will hide the { code # nestedblock } when that 's a { link mixedcontent } <END>
<BEG> deprecate this method will return { link templateelement } start from 2 4 <SEG> a that do n't require swing ; do n't use it <END>
<BEG> the element whose child this element be <SEG> or { code null } if this be the root node <END>
<BEG> inserts a new nested element at the give index <SEG> which can also be one high than the current high index <END>
<BEG> return array contain 1 or more nested element with optional trail { code null } -s <SEG> or be { code null } exactly if there be no nested element <END>
<BEG> param buffwithcnt maybe { code null } since 2 3 24 <END>
<BEG> walk the ast subtree root by this element <SEG> and do simplification where possible <SEG> also remove superfluous whitespace <END>
<BEG> tells if execute this element have output that only depend on the template content and that have no side effect <END>
<BEG> determines whether this element 's presence on a line indicate that we should not strip open whitespace in the post-parse whitespace gobble step <END>
<BEG> returns a string that indicate where in the template source <SEG> this object be <END>
<BEG> as of 2 3 20 the same a { link # getstartlocation } <END>
<BEG> return whether the point in the template file specify by the column and line number be contain within this template object <END>
<BEG> returns the name of the currently support built-ins { code expr ? builtin_name } -like thing <END>
<BEG> attention : this be use by http : github com kenshoo freemarker-online <END>
<BEG> the work around the problematic case where we should throw a { link templateexception } <SEG> but we be inside a { link templatemodel } method and so we can only throw { link templatemodelexception } -s <END>
<BEG> returns a locale that 's one le specific <SEG> or { code null } if there 's no less specific locale <END>
<BEG> needed for description < em > part < em > that look like an ftl tag to be convert <SEG> if there 's no { link # blame } <END>
<BEG> returns a single line string that be no long than { code maxlength } <END>
<BEG> because of the limitation of ftl lambda call local lambda <SEG> sometimes we must condense the lazy result down into a sequence <END>
<BEG> return a or an or a n or for empty string for an ftl type name <END>
<BEG> returns the template name and the line number separate with a colon <END>
<BEG> the environment that be suspend return debuggedenvironment <END>
<BEG> tells if among the parameter list of two method <SEG> which one fit this argument list well <END>
<BEG> whether the model have a plain get string or get object method <END>
<BEG> < object <SEG> object > <END>
<BEG> tells whether the model be empty <END>
<BEG> returns the same a { link # getwrappedobject } ; to ensure that <SEG> this method will be final start from 2 4 <END>
<BEG> used for { code classic_compatbile } mode ; do n't use it for anything else <END>
<BEG> makes the configuration property setting of this { link beanswrapper } object read-only <END>
<BEG> specifies if an attempt to read a bean property that do n't exist in the wrapped object should throw an { link invalidpropertyexception } <END>
<BEG> when wrap an object <SEG> the beanswrapper commonly need to wrap sub-objects <SEG> for example each element in a wrapped collection <END>
<BEG> by default return < tt > this < tt > <END>
<BEG> tells whether maps be expose a simple map <SEG> without access to their method <END>
<BEG> getter pair of { link # setpreferindexedreadmethod boolean } since 2 3 27 <END>
<BEG> sets if when a javabean property have both a normal read method like { code string [ ] getfoos } and an indexed read method like { code string getfoos int index } <SEG> and the java { link introspector } expose both which only happen since java 8 <SEG> apparently <SEG> which read method will be use when the property be access with the shorthand syntax like { code myobj foos } <END>
<BEG> controls whether public instance field of class be expose to template <END>
<BEG> sets the { link memberaccesspolicy } ; default be { link defaultmemberaccesspolicy # getinstance version } <SEG> which be not appropriate if template editor be n't trust <END>
<BEG> tells if this instance act like if it class introspection cache be sharable with other { link beanswrapper } -s a restricted cache denies certain too antisocial operation <SEG> like { link # clearclassintrospectioncache } <END>
<BEG> sets whether this wrapper cache the { link templatemodel } -s create for the java object that have wrap with this object wrapper <END>
<BEG> sets the null model <END>
<BEG> returns the version give with { link # beanswrapper version } <SEG> normalized to the low version where a change have occur <END>
<BEG> returns the low version number that be equivalent with the parameter version <END>
<BEG> wraps the object with a template model that be most specific for the object 's class <END>
<BEG> converts a number to the target type aggressively possibly with overflow or significant loss of precision <END>
<BEG> reads the specified field <SEG> return it value a { link templatemodel } <END>
<BEG> removes the introspection data for a class from the cache <END>
<BEG> < p > removes all class introspection data from the cache <END>
<BEG> removes all class introspection data from the cache <END>
<BEG> converts any { link bigdecimal } s in the passed array to the type of the correspond formal argument of the method <END>
<BEG> converts any { link bigdecimal } -s in the passed array to the type of the correspond formal argument of the method via { link # coercebigdecimal bigdecimal <SEG> class } <END>
<BEG> converts { link bigdecimal } to the class give in the { code formaltype } argument if that 's a known numerical type <SEG> return the { link bigdecimal } a be otherwise <END>
<BEG> returns the exact class name and the identity hash <SEG> also the value of the most often use { link beanswrapper } configuration property <SEG> also if which if any shared class introspection cache it use <END>
<BEG> returns the name-value pair that describe the configuration of this { link beanswrapper } ; call from { link # tostring } <END>
<BEG> returns a { link beanswrapper } instance that match the setting of this builder <END>
<BEG> two { link beanswrapperconfiguration } -s be equal exactly if their class be identical { code == } <SEG> and their field value be equal <END>
<BEG> see { link beanswrapper # setouteridentity objectwrapper } <SEG> except here the default be { code null } that mean the { link objectwrapper } that you will set up with this { link beanswrapperbuilder } object <END>
<BEG> see { link beanswrapper # setusecache boolean } it mean the same <END>
<BEG> returns a { link classintrospectorbuilder } that could be use to create an identical { link # classintrospector } <END>
<BEG> corresponds to { link beanswrapper # removefromclassintrospectioncache class } <END>
<BEG> returns the number of event so far that could make class introspection data return earlier outdated <END>
<BEG> returns the number of introspected method property that should be available via the templatehashmodel interface <END>
<BEG> returns { code true } if this instance be create with { link classintrospectorbuilder } <SEG> even if it be n't actually put into the cache a we reserve the right to do so in late version <END>
<BEG> returns an instance that be possibly share singleton <END>
<BEG> returns the singleton that 's compatible with the give incompatible improvement version <END>
<BEG> return { code null } if the error have occur early than the full argument list be unwrapped <END>
<BEG> this allow the enumeration to be use in a < tt > & lt ; # list & gt ; < tt > block <END>
<BEG> returns if the give member <SEG> if it 's refer through the give class <SEG> be match by this { link membermatcher } <END>
<BEG> gets the type flag of each parameter position <SEG> or { code null } if there 's no method with this parameter count or if we be in pre-2 3 21 mode <SEG> or { link # all_zeros_array } if there be no parameter that turn on a flag <END>
<BEG> updates the content of the { link # typeflagsbyparamcount } field with the parameter type flag of a method <END>
<BEG> attaches the low alternative number type to the parameter number via { link numberwithfallbacktype } <SEG> if that 's useful accord the possible target number type <END>
<BEG> replaces the last parameter type with the array component type of it <END>
<BEG> synchronize this <END>
<BEG> returns the result of call { link object # tostring } on the wrapped object <END>
<BEG> attention <SEG> this do n't handle primitive class correctly <SEG> nor numerical conversion <END>
<BEG> returns a more streamlined method or constructor description than { code member tostring } do <END>
<BEG> similar to { link method # getannotation class } <SEG> but will also search the annotation in the implemented interface and in the ancestor class <END>
<BEG> check if the name look like an xml element name <END>
<BEG> an element node support various hash key <END>
<BEG> param customtag either a { link templatedirectivemodel } or a { link templatetransformmodel } <END>
<BEG> tells if the value can be use a the custom tag parameter to { link # combine templatemodel <SEG> templatemethodmodelex } <END>
<BEG> selects the logger library to use <SEG> unless it 's already specify by the { value # system_property_name_logger_library } system property <END>
<BEG> sets a category prefix <END>
<BEG> returns a logger for the specified category <END>
<BEG> wraps the parameter object to { link templatemodel } interface s <END>
<BEG> sets if to wrap container object { link map } -s <SEG> { link list } -s <SEG> array and such the legacy copy approach or the new adapter approach should be use <END>
<BEG> getter pair of { link # setforcelegacynonlistcollections boolean } ; see there <END>
<BEG> specifies whether non- { link list } { link collection } -s like { link set } -s must be wrap by pre-fetching into a { link simplesequence } <END>
<BEG> specifies whether { link iterable } -s not to be confuse with { link iterator } -s that do n't implement any other recognize java interfaces most notably { link collection } will be recognize a listable object { link templatecollectionmodel } -s <SEG> or they will be just see a generic object javabean-s <END>
<BEG> adds all the key value entry in the map param m the map with the entry to add <SEG> the key be assume to be string <END>
<BEG> note that this method create and return a deep-copy of the underlying hash use internally <END>
<BEG> called if a type other than the simple one we know about be pass in <END>
<BEG> same a call the constructor <SEG> except that for a { code null } parameter it return null <END>
<BEG> like { link # process object <SEG> writer } <SEG> but also set a xml- node to be recursively process by the template <END>
<BEG> returns a string represent the raw template text in canonical form <END>
<BEG> the name that be actually use to load this template from the { link templateloader } or from other custom storage mechanism <END>
<BEG> return the template language ftl version use by this template <END>
<BEG> mostly only use internally ; setter pair of { link # getcustomlookupcondition } <END>
<BEG> returns the tag syntax the parser have choose for this template <END>
<BEG> meant to be call by the parser only <END>
<BEG> returns if the template actually use auto-escaping see { link configuration # setautoescapingpolicy int } <END>
<BEG> dump the raw template in canonical form <END>
<BEG> called by code internally to maintain a table of macro deprecate should only be use internally <SEG> and might will be remove later <END>
<BEG> deprecate should only be use internally <SEG> and might will be remove later <END>
<BEG> this be use internally <END>
<BEG> returns the original { link list } of { link templatemodel } -s <SEG> so it 's not a fully unwrapped value <END>
<BEG> returns the { link class } for a primitive type name <SEG> or { code null } if it 's not the name of a primitive type <END>
<BEG> returns a class name without java lang <END>
<BEG> { link # getshortclassname class <SEG> boolean } call with { code object getclass } <SEG> but return the fictional class name { code null } for a { code null } value <END>
<BEG> returns the type description of a value with ftl term not plain class name <SEG> a it should be use in type-related error message and for debug purpose <END>
<BEG> gets the wrapper class for a primitive class <SEG> like { link integer } for { code int } <SEG> also return { link void } for { code void } <END>
<BEG> tells if a type be numerical ; work both for primitive type and class <END>
<BEG> loads a class loader resource into a { link properties } ; try to work around zip file close and related { code sun net www protocol jar jarurlconnection } glitch <END>
<BEG> returns the time zone object for the name or id <END>
<BEG> parses the time zone part from a w3c xml schema date time datetime <END>
<BEG> performs newline normalization on freemarker output <END>
<BEG> convenience method to protect against a { code null } argument <END>
<BEG> { link templatehashmodelexkeyvaluepairiterator } that even work for a non- { link templatehashmodelex2 } { link templatehashmodelex } <END>
<BEG> deprecate will be remove main method in a library <SEG> often classify a cwe-489 leftover debug code <END>
<BEG> contains the major minor micor number and the extrainfo part <SEG> not the other information <END>
<BEG> the arbitrary string after the micro version number without lead dot <SEG> dash or underscore <SEG> like rc03 in 2 4 0-rc03 <END>
<BEG> return the google app engine compliance <SEG> or { code null } <END>
<BEG> sets the default object wrapper that be use when a wrapping template model be construct without be pass an explicit object wrapper <END>
<BEG> [ 2 4 ] getsettingnames become to public ; remove this <END>
<BEG> insert a new attribute in the context-stack <END>
<BEG> store the map in the data storage <END>
<BEG> resolved a ' ' <END>
<BEG> list all the property and value for the give object <END>
<BEG> destroy this context by clean up instance attribute <END>
<BEG> creates a new context but keep the < code > data < code > attribute <END>
<BEG> a handlebar error <END>
<BEG> set the message source <END>
<BEG> set the default bundle 's name <END>
<BEG> set the template position <END>
<BEG> child class might want to check if they apply to the tagtype and append them self to the result list <END>
<BEG> param result the result list to add new parameter to <END>
<BEG> call it after a template have be apply <END>
<BEG> build a hash object by look for value in the current context <END>
<BEG> normalize the location by remove ' ' at the beginning <END>
<BEG> set the prefix that get prepended to view name when build a uri <END>
<BEG> list all the property and their value for the give object <END>
<BEG> render this renderer into a string <END>
<BEG>  this implementation simply call < code > < pre > constructimplfromreplacedproxy gettemplatereplacer getreplacement p_proxy <SEG> p_jamoncontext < pre > <END>
<BEG> set the templatemanagersource by supply a single templatemanager which will be supply by { link # gettemplatemanagerfor } for all path <END>
<BEG> 获取一个自定义的方法签名 唯一标示符 <SEG> 也是 cache 的 key <END>
<BEG> 将一个 layout_block 的内容保存到一个 context 变量中 <END>
<BEG> 如果不存在指定的 context 变量，那么输出 layout_block_default 块内容，否则输出指定的 context 变量 <END>
<BEG> 获取变量类型 <END>
<BEG> 在当前模板中设置变量 <END>
<BEG> since we override this method <SEG> no stacktrace be generate - much fast return always null <END>
<BEG> return < code > true < code > if the specify byte < code > b ! = 0 < code > param b return boolean result <END>
<BEG> return < code > true < code > if the specify float < code > math ab f > 0 00000001 < code > param f return boolean result <END>
<BEG> return true if the specify string do not equal <SEG> ignore case <SEG> to false or no param s return boolean result <END>
<BEG> return < code > true < code > if the collection be not empty param c return boolean result <END>
<BEG> general object type evaluation <END>
<BEG> eval locale from language and region param language param region return new locale construct from the lauguage and region <END>
<BEG> return a { link org rythmengine template itemplate template } 's current locale <SEG> or the the { link org rythmengine rythmengine # get current engine } 's { link org rythmengine conf rythmconfigurationkey # i18n_locale locale configuration } or finally the default locale with { link java util locale # getdefault java util locale getdefault } call param template the template be execute return a locale instance <END>
<BEG> create a pair from the give key and value param key param value return <END>
<BEG> alias of { link # isequal string <SEG> string } param s1 param s2 return true if s1 equal s2 <END>
<BEG> alias of { link # isequal string <SEG> string <SEG> int } param s1 param s2 param modifier return true if o1 's str equal o2 's str <END>
<BEG> return the caller in { link itemplate } type return a < code > itemplate < code > <END>
<BEG> alias of { link # buffer } return buffer a { link stringbuilder } <END>
<BEG> set the internal buffer to this instance param buffer <END>
<BEG> get the buffer out from this instance return a < code > stringbuilder < code > <END>
<BEG> append a { link strbuf } content into the buffer param wrapper <END>
<BEG> print a { link strbuf } to internal buffer or output o or writer < code > null < code > object will not be print param wrapper return this builder <END>
<BEG> append a object to internal buffer or output o or writer <END>
<BEG> print a { link java lang object } to internal buffer or output o or writer < code > null < code > object will not be print param o return this builder <END>
<BEG> append a char to internal buffer param c <END>
<BEG> print a char to internal buffer or output o or writer param c return this builder <END>
<BEG> print an object follow by an new line break param o return this builder <END>
<BEG> print an new line break return this builder <END>
<BEG> print an new line break follow by an object param o return this builder <END>
<BEG> print an object follow by a tab < code > \t < code > param o return this builder <END>
<BEG> print an object follow by a tab < code > \t < code > and an new line break param o return this builder <END>
<BEG> print an object follow by 2 tab < code > \t < code > and an line break param o return this builder <END>
<BEG> parse a duration param duration 3h <SEG> 2mn <SEG> 7 return the number of second <END>
<BEG> parse a cron expression param cron the cron string return the next date that satisfy the expression <END>
<BEG> compute the number of millisecond between the next valid date and the one after param cron the cron string param date the date to start search return the number of millisecond between the next valid date and the one after <SEG> with an invalid interval between <END>
<BEG> write out a string literal or attribute expression or expression element <END>
<BEG> given <SEG> say <SEG> file : tmp test jar ! org foo template main stg convert to file : tmp test jar ! org foo template <END>
<BEG> given index into string <SEG> compute the line and char position in line <END>
<BEG> < p > returns the template engine configuration be use for process template <END>
<BEG> < p > returns the template resolution object correspond to the template currently be process <END>
<BEG> < p > returns the parsed document dom object <END>
<BEG> < p > returns the execution attribute with the specify name <END>
<BEG> < p > set the locale to be use for template execution <END>
<BEG> < p > adds a variable to the current set of context variable <END>
<BEG> < p > adds a set of variable to the current set of context variable <END>
<BEG> < p > adds the context execution info to the variable map <END>
<BEG> < p > returns the current date and time from the moment of template execution <END>
<BEG> < p > returns the textual content of this node <SEG> a a string <END>
<BEG> < p > returns the unsafe inner char [ ] with the textual content of this code <END>
<BEG> < p > returns the normalized prefix of this attribute part of it name <SEG> if it exist <SEG> or null if the element be unprefixed <END>
<BEG> < p > returns the normalized version of the attribute name <SEG> without it prefix if it have one <END>
<BEG> < p > returns whether the attribute name have a prefix or not <END>
<BEG> < p > determines whether this attribute be to be specify only by it name no equal sign <SEG> no value <END>
<BEG> < p > returns whether this attribute be a namespace declaration < tt > xmlns : < tt > or not <END>
<BEG> < p > if this be a namespace declaration attribute like < tt > xmlns : x < tt > <SEG> this method return the prefix the < tt > x < tt > <END>
<BEG> < p > applies a prefix a dialect prefix to the specify name in order to obtain a complete valid attribute name <END>
<BEG> < p > returns the equivalent <SEG> un-prefixed name of an attribute from it complete prefixed <SEG> if applies version <END>
<BEG> < p > returns whether this doctype have already be process -and therefore translation have be applied- or not <END>
<BEG> < p > process this doctype <SEG> include any applicable translation <END>
<BEG> < p > returns the expression that specify this dom selector <END>
<BEG> < p > executes the dom selector against the specified node <SEG> return the result of apply the selector expression <END>
<BEG> < p > executes the dom selector against the specified node and use the specify reference checker if reference be use in the dom selector expression <END>
<BEG> < p > executes the dom selector against the specified list of node and use the specify reference checker if reference be use in the dom selector expression <END>
<BEG> < p > returns whether this element be < i > minimizable < i > when perform xhtml or html5 output <END>
<BEG> < p > optionally specify whether this element be write at the original document a a standalone element <SEG> an open element with a closing tag <SEG> or just an open element non-xml-well-formed <END>
<BEG> < p > sets a new value to the 'representationintemplate ' property <END>
<BEG> < p > clones this element node <SEG> set it a new name in the process <END>
<BEG> < p > applies a prefix a dialect prefix to the specify name in order to obtain a complete valid element tag name <END>
<BEG> < p > returns the number of attribute contain in this element <END>
<BEG> < p > returns whether an attribute exists in the element or not <END>
<BEG> < p > returns whether an attribute by any of it name exist in the element or not <END>
<BEG> < p > returns an attribute <SEG> if it exist null if not <END>
<BEG> < p > returns the inner array use for store the element attribute <END>
<BEG> < p > returns the value of an attribute from it normalize name <END>
<BEG> < p > returns the value of an attribute from it normalized name <SEG> usually obtain by apply a prefix to a unprefixed name <END>
<BEG> < p > returns the value of an attribute from it attribute name <SEG> without need this name to be normalize because the specify name will be normalize before perform the comparison <END>
<BEG> < p > returns a map with all the name normalize and value of the element attribute <END>
<BEG> < p > establishes a new value for an element attribute <END>
<BEG> < p > establishes the value for several attribute at a time <END>
<BEG> < p > clears all the attribute of the element <END>
<BEG> < p > removes a specific attribute from the element <END>
<BEG> < p > returns whether this node have any child <END>
<BEG> < p > returns the number of child in this node <END>
<BEG> < p > returns the only the { link element } child of this node <SEG> discard child of any other type <END>
<BEG> < p > returns the real <SEG> unsafe <SEG> inner array of node child <END>
<BEG> < p > returns the first child of this node <END>
<BEG> < p > adds a new child to the node <END>
<BEG> < p > sets the new child of the node to the specify list <END>
<BEG> < p > removes all the child node <END>
<BEG> < p > removes a node child at a specific position <END>
<BEG> < p > removes a specific child node from this node <END>
<BEG> < p > refactors a dom tree by move all the child of this node to another which will be their new parent node <END>
<BEG> < p > extracts a child by remove it from the dom tree and lift all of it child one level <SEG> so that they become child node of this node <END>
<BEG> precompute child <END>
<BEG> < p > performs a null-safe < tt > tostring < tt > operation on each element of the array <END>
<BEG> < p > copy a part of target start beginindex to the end of target for all the element in the target array <END>
<BEG> < p > convert the first letter into uppercase title-case <SEG> in fact for all the element in the target array <END>
<BEG> < p > convert the first letter into lowercase for all the element in the target array <END>
<BEG> < p > convert the first letter of each word of target to uppercase title-case <SEG> in fact for all the element in the target array <END>
<BEG> < p > xml-escapes all the element in the target array <END>
<BEG> < p > returns the first fragment spec in the chain <END>
<BEG> < p > returns the attribute value <SEG> if < tt > attributename < tt > have be set <END>
<BEG> < p > returns whether this spec should only return the child of the select node < tt > true < tt > or the select node themselves < tt > false < tt > <SEG> default <END>
<BEG> < p > returns the map of parameter value that will be apply a local variable to the extract node <END>
<BEG> < p > returns whether this fragment specifies parameter value <SEG> to be set a local variable into the extracted node <END>
<BEG> < p > returns the resolved message a string <END>
<BEG> < p > compare and therefore order processor accord to their precedence <END>
<BEG> < p > checks whether the < tt > templateengine < tt > have already be initialize or not <END>
<BEG> < p > internal method that initialize the template engine instance <END>
<BEG> < p > returns the processing context specify for template processing <END>
<BEG> < p > returns the character encode that should be use for read the template use the resource resolver <END>
<BEG> < p > returns the sum of all the number contain in the provided iterable e g <END>
<BEG> < p > returns the sum of all the number contain in the provided array <END>
<BEG> < p > try to obtain a classloader <SEG> follow these priority : < p > < ol > < li > if there be a < i > thread context class loader < i > <SEG> return it < li > < li > else if there be a class loader relate to the class pass a argument <SEG> return it < li > < li > else return the < i > system class loader < li > < ol > param clazz the class which loader will be obtain in the second step <END>
<BEG> < p > produces an array with a sequence of integer number <SEG> use a step <END>
<BEG> deprecate the prefixutils class have be deprecate in 2 1 0 <END>
<BEG> < p > releases a previously allocate resource <END>
<BEG> < p > discards an allocate resource and force the resource factory to create a new one <SEG> if a resource factory have be specify during pool instantiation <END>
<BEG> < p > copy a part of target start beginindex to the end of target <END>
<BEG> < p > convert the first letter of target to uppercase title-case <SEG> in fact <END>
<BEG> < p > convert the first letter of target to lowercase <END>
<BEG> < p > convert all the first letter of the word of target to uppercase title-case <SEG> in fact <SEG> use the specify delimiter char for determine word end start <END>
<BEG> < p > escapes the specified target text a require for javascript code <END>
<BEG> < p > un-escapes the specify javascript-escaped target text back to normal form <END>
<BEG> throw illegalstateexception if the isinitializedexpression evaluate to true <END>
<BEG> the converter be use before a property value be store in configuration <END>
<BEG> param defaultvaluetype param value return the converted value <END>
<BEG> param key return { link system # getproperty string } <END>
<BEG> param configuration return a new global execution context for the give configuration <END>
<BEG> param mustache return the raw data for the give template <END>
<BEG> drop all the collect data <END>
<BEG> return all collect data <END>
<BEG> param templateid return a simple statistic for the give template <END>
<BEG> param type return < code > true < code > if the tag content must be validate <SEG> < code > false < code > otherwise since 1 5 <END>
<BEG> simple factory method to obtain a new instance for the give context object and name <END>
<BEG> the name for { link # getindex } be poorly choose <END>
<BEG> return < code > true < code > for the first iteration <SEG> < code > false < code > otherwise <END>
<BEG> return the current index parity <SEG> e g <END>
<BEG> param segment return the name for one-off lambda <SEG> e g <END>
<BEG> param configuration return < code > true < code > if it 's possible to cache the template in a segment <SEG> i e <END>
<BEG> escape append sequence if need <END>
<BEG> param value return the converted value see valueconverter <END>
<BEG> param option param value see abstracthelper # append options <SEG> charsequence see # convertvalue object <END>
<BEG> return a set of supported hash key or singleton of value { code } to allow any hash key <END>
<BEG> returns a decorator helper builder for the specified delegate type <END>
<BEG> param option return < code > true < code > if the underlie tag represent a variable which should n't be escape <SEG> < code > false < code > otherwise <END>
<BEG> param option param key return the { link integer } value for the give key or null if not specify <END>
<BEG> param value return < code > true < code > if the give value represent a { link valueplaceholder } <SEG> < code > false < code > otherwise <END>
<BEG> param option return the current locale by mean of { link localesupport } <END>
<BEG> param option return the locale set via option hash with { link optionshashkeys # locale } key <SEG> the value from the context for the { link optionshashkeys # locale } key or the current locale by mean of { link localesupport } see locale # forlanguagetag string <END>
<BEG> param array param object return < code > true < code > if the give array contain the specified object <END>
<BEG> param value return < code > true < code > if the value be < code > null < code > <SEG> boolean of value false <SEG> number of value 0 <SEG> or empty charsequence collection array <SEG> < code > false < code > otherwise <END>
<BEG> param list return an immutable copy of the give list <END>
<BEG> param key1 param value1 param key2 param value2 return an immutable map for the specified key and value <END>
<BEG> does not close the { code reader } <END>
<BEG> param element return the singleton iterator <END>
<BEG> param localeobject return the { link locale } derive from the give locale object or < code > null < code > <END>
<BEG> return the pattern to match an integer literal in a helper name <END>
<BEG> param methodname param prefix return the decapitalized method name <END>
<BEG> param enumclazz param name return < code > true < code > if the specify enum declare a constant with the specify name <END>
<BEG> param sequence return < code > true < code > if the give sequence be null or empty <END>
<BEG> capitalizes all the delimiter separate word <END>
<BEG> param text param suffix return the text without the suffix <SEG> if the text end with the suffix <END>
<BEG> param text param delimiter return a list of token <END>
<BEG> param text return < code > true < code > if the give text contain only digit <END>
<BEG> param text param delimiter return the substring after the first delimiter or an empty string if nothing be find <END>
<BEG> get the specific invalid reference string <END>
<BEG> formats a textual representation of this object a < code > source [ line x <SEG> column y ] : invalidreference < code > <END>
<BEG> accessor method to get the field by name <END>
<BEG> formats a date in < code > dateformat short < code > style <END>
<BEG> formats a date time in 'short ' style <END>
<BEG> makes an alternator object that alternate between two value automatically <END>
<BEG> punt if key be null <END>
<BEG> indicates whether the specified key be in the context <END>
<BEG> removes the value associate with the specify key from the context <END>
<BEG> return innercontext if one be chain return context if chain <SEG> < code > null < code > if not <END>
<BEG> see org apache velocity context internalwrappercontext # localput java lang string <SEG> java lang object <END>
<BEG> always try the local context then innercontext <END>
<BEG> see org apache velocity context context # getkeys <END>
<BEG> see org apache velocity context context # remove java lang object <END>
<BEG> allows caller to explicitly put object in the local context <END>
<BEG> see internalwrappercontext # localput string <SEG> object since 1 5 <END>
<BEG> return the user data context that we be wrap return the internal user data context <END>
<BEG> returns the base context that we be wrap <END>
<BEG> see org apache velocity context internaleventcontext # attacheventcartridge org apache velocity app event eventcartridge <END>
<BEG> set the current template name on top of stack param s current template name <END>
<BEG> remove the current template name from stack <END>
<BEG> get the current template name return string current template name <END>
<BEG> get the current template name stack return object [ ] with the template name stack content <END>
<BEG> get the current macro call depth return int current macro call depth <END>
<BEG> return an introspectioncache data see introspectioncachedata object if exists for the key param key key to find in cache return cache object <END>
<BEG> place an introspectioncache data see introspectioncachedata element in the cache for specify key param key key param o introspectioncachedata object to place in cache <END>
<BEG> see org apache velocity context internalhousekeepingcontext # setcurrentresource org apache velocity runtime resource resource <END>
<BEG> allows caller to explicitly put object in the local context <SEG> no matter what the velocimacro context local setting say <END>
<BEG> retrieves the name of the reference that cause the exception <END>
<BEG> return the invalid syntax or reference that trigger this error <SEG> or null if not define <END>
<BEG> return the wrapped throwable that cause this methodinvocationexception to be thrown return throwable throw by method invocation since 1 5 <END>
<BEG> discard the output buffer <END>
<BEG> reset this class so that it can be reuse param writer <END>
<BEG> this method have the standard behavior when this object have be create use the standard constructor <END>
<BEG> param sb since 1 5 <END>
<BEG> param level param message deprecate use log level <SEG> message <END>
<BEG> updates the logchute wrap by this log instance <END>
<BEG> returns true if trace level message will be print by the logchute <END>
<BEG> log a debug message and accompany throwable <END>
<BEG> simply create a string that format the template filename with line number and column <END>
<BEG> see org apache velocity runtime log logchute # log int <SEG> java lang string <END>
<BEG> log message and their accompanying throwables to the great garbage collector in the sky param level severity level param message complete error message param t the java lang throwable <END>
<BEG> param newlogger deprecate use transferto logchute newchute <END>
<BEG> see org apache velocity runtime log log # setlogchute org apache velocity runtime log logchute <END>
<BEG> see org apache velocity runtime log log # getlogchute <END>
<BEG> see org apache velocity runtime log log # trace java lang object <SEG> java lang throwable <END>
<BEG> tell whether the executor be alive by look at the value of the method <END>
<BEG> shall we try for string ? <END>
<BEG> see org apache velocity runtime parser node simplenode # jjtaccept org apache velocity runtime parser node parservisitor <SEG> java lang object <END>
<BEG> we need to make sure we catch any of the dread more token <END>
<BEG> an astelsestatement always evaluate to true <END>
<BEG> see org apache velocity runtime parser node simplenode # init org apache velocity context internalcontextadapter <SEG> java lang object <END>
<BEG> get the two args <END>
<BEG> check if the # if expression construct evaluate to true : if so render and leave immediately because there be nothing left to do ! <END>
<BEG> param context param visitor <END>
<BEG> new strategy strategery ! <END>
<BEG> check for divide modulo by 0 <END>
<BEG> this method be synchronize to prevent double initialization or initialization while render <END>
<BEG> render the value of the string literal if the property allow <SEG> and the string literal contain a $ or a # the literal be render against the context otherwise <SEG> the stringlit be return <END>
<BEG> param clazz param property param arg <END>
<BEG> hold onto the runtimeservices <END>
<BEG> check to see if the resource be place in the cache <END>
<BEG> see stringresourcerepository # putstringresource java lang string <SEG> java lang string <SEG> java lang string since 1 6 <END>
<BEG> see org apache velocity runtime parser node parservisitor # visit org apache velocity runtime parser node astfloatingpointliteral <SEG> java lang object since 1 5 <END>
<BEG> see org apache velocity runtime visitor basevisitor # visit org apache velocity runtime parser node simplenode <SEG> java lang object <END>
<BEG> see org apache velocity runtime visitor basevisitor # visit org apache velocity runtime parser node astintegerliteral <SEG> java lang object since 1 5 <END>
<BEG> a method to get a file object <END>
<BEG> load property from either a file in the templatepath if there be one or the classpath <END>
<BEG> move to next element in the array <END>
<BEG> check to see if there be another element in the array <END>
<BEG>  see chainableuberspector # wrap org apache velocity util introspection uberspect see # inner <END>
<BEG> returns the class object whose method be cache by this map <END>
<BEG> lookup a give class object in the cache <END>
<BEG> add a method to a list of method by name <END>
<BEG> check for wait and notify <END>
<BEG> init - generate the introspector <END>
<BEG> sets the runtime logger - this must be call before anything else <END>
<BEG> add the object to the pool <SEG> silent nothing if the pool be full param o <END>
<BEG> get an object from the pool <SEG> null if the pool be empty <END>
<BEG> for test purpose <SEG> so we can examine the pool return array of objects in the pool <END>
<BEG> retrieves value for key from internal storage param key name of value to get return value a object <END>
<BEG> store the value for key to internal storage param key name of value to store param value value to store return previous value of key a object <END>
<BEG> determines if there be a value for the give key param key name of value to check return true if non-null value in store <END>
<BEG> return array of key return key a [ ] <END>
<BEG> remove a key value pair from the internal storage param key name of value to remove return value remove <END>
<BEG> return the unmodifiable assembled map <END>
<BEG> creates a formatted message string from the give parameter param reason the reason for an assertion or comparison failure param expect the expected result param actual the actual result return the formatted message <END>
<BEG> append the string < var > str < var > to the description <END>
<BEG> creates a matcher that match when the examine object have a javabean property with the specify name <END>
<BEG> creates a matcher that match when the examine object have a javabean property with the specify name whose value satisfy the specify matcher <END>
<BEG> returns the description of the property with the provide name on the provided object 's interface <END>
<BEG> returns all the property descriptor for the class associate with the give object param fromobj use the class of this object param stopclass do n't include any property from this ancestor class upwards <END>
<BEG> creates a matcher that match when the examine object have value for all of it javabean property that be equal to the correspond value of the specified bean <END>
<BEG> returns the string that start the description <END>
<BEG> returns the string that separate the element in the description <END>
<BEG> creates a matcher that match array whose element be satisfy by the specified matcher <END>
<BEG> creates a matcher for array that match when the examined array contains at least one item that be match by the specify < code > elementmatcher < code > <END>
<BEG> a shortcut to the frequently use < code > hasiteminarray equalto x < code > <END>
<BEG> creates an order agnostic matcher for array that match when each item in the examined array satisfy one matcher anywhere in the specified collection of matcher <END>
<BEG> creates an order agnostic matcher for array that match when each item in the examined array be logically equal to one item anywhere in the specified item <END>
<BEG> creates a matcher for array that matcheswhen each item in the examined array be logically equal to the corresponding item in the specified item <END>
<BEG> creates a matcher for array that match when each item in the examined array satisfy the correspond matcher in the specified list of matcher <END>
<BEG> creates a matcher for array that match when the < code > length < code > of the array satisfy the specify matcher <END>
<BEG> creates a matcher for array that match when the < code > length < code > of the array be zero <END>
<BEG> creates a matcher for { link java util collection } s that match when the < code > size < code > method return a value that satisfy the specify matcher <END>
<BEG> creates a matcher for { link java util collection } s match examined collection whose < code > isempty < code > method return < code > true < code > <END>
<BEG> creates a matcher for { link iterable } s match examined iterables that yield no item <END>
<BEG> creates a matcher that match when the examine object be find within the specify collection <END>
<BEG> creates a matcher for { link iterable } s that match when a single pas over the examined { link iterable } yield a series of item <SEG> each logically equal to the corresponding item in the specified item <END>
<BEG> creates a matcher for { link iterable } s that match when a single pas over the examined { link iterable } yield an item count that satisfy the specify matcher <END>
<BEG> creates a matcher for { link java util map } s match when the examine { link java util map } contain at least one entry whose key satisfy the specified < code > keymatcher < code > < b > and < b > whose value satisfy the specified < code > valuematcher < code > <END>
<BEG> creates a matcher for { link java util map } s match when the examine { link java util map } contain at least one key that satisfy the specify matcher <END>
<BEG> creates a matcher for { link java util map } s match when the examine { link java util map } contain at least one key that be equal to the specify key <END>
<BEG> creates a matcher that match if the examined object match < b > all < b > of the specified matcher <END>
<BEG> creates a matcher that match when both of the specified matcher match the examined object <END>
<BEG> wraps an exist matcher <SEG> override it description with that specify <END>
<BEG> creates a matcher for { link iterable } s that only match when a single pas over the examined { link iterable } yield item that be all match by the specify < code > itemmatcher < code > <END>
<BEG> decorates another matcher <SEG> retain it behaviour <SEG> but allow test to be slightly more expressive <END>
<BEG> a shortcut to the frequently use < code > be instanceof someclass class < code > <END>
<BEG> creates a matcher that always match <SEG> regardless of the examined object <END>
<BEG> creates a matcher that always match <SEG> regardless of the examined object <SEG> but describe itself with the specify { link string } <END>
<BEG> creates a matcher for { link iterable } s that only match when a single pas over the examined { link iterable } yield at least one item that be match by the specify < code > itemmatcher < code > <END>
<BEG> creates a matcher for { link iterable } s that match when consecutive pass over the examined { link iterable } yield at least one item that be match by the correspond matcher from the specify < code > itemmatchers < code > <END>
<BEG> creates a matcher that match when the examine object be logically equal to the specify < code > operand < code > <SEG> a determine by call the { link java lang object # equal } method on the < b > examine < b > object <END>
<BEG> creates a matcher that match if examine object be < code > null < code > <END>
<BEG> a shortcut to the frequently use < code > not nullvalue < code > <END>
<BEG> a shortcut to the frequently use < code > not nullvalue x class <END>
<BEG> creates a matcher that match if the examine { link string } contain the specified { link string } anywhere <END>
<BEG> creates a matcher that match if the examine { link string } end with the specify { link string } <END>
<BEG> return the fully qualified name of the type return by the method <END>
<BEG> generified type of matcher <END>
<BEG> list of parameters pass to factory method <END>
<BEG> list of exception throw by factory method <END>
<BEG> list of generic type parameter for factory method definition <END>
<BEG> javadoc definition of factory method <END>
<BEG> determine whether a particular method be classify a a matcher factory method <END>
<BEG> add a factorymethod that will be generate in the sugar <END>
<BEG> convient way to add multiple factorymethods <END>
<BEG> generate all the factory method use all the writer <END>
<BEG> param method the method to examine <END>
<BEG> param method the method from which to extract return the type we 're look for <END>
<BEG> creates a matcher of { link java math bigdecimal } s that match when an examine bigdecimal be equal to the specify < code > operand < code > <SEG> within a range of + - < code > error < code > <END>
<BEG> creates a matcher of { link double } s that match when an examine double be equal to the specify < code > operand < code > <SEG> within a range of + - < code > error < code > <END>
<BEG> creates a matcher of { link comparable } object that match when the examine object be great than or equal to the specify value <SEG> a report by the < code > compareto < code > method of the < b > examine < b > object <END>
<BEG> creates a matcher that match any examined object whose < code > tostring < code > method return a value that satisfy the specify matcher <END>
<BEG> creates a matcher that match any examined object whose < code > tostring < code > method return a value equalto the specified string <END>
<BEG> creates a matcher of { link java util eventobject } that match any object derive from < var > eventclass < var > announce by < var > source < var > <END>
<BEG> creates a matcher of { link string } that match when the examine string have zero length <END>
<BEG> creates a matcher of { link string } that match when the examined string be < code > null < code > <SEG> or have zero length <END>
<BEG> creates a matcher of { link string } that match when the examined string be equal to the specify expectedstring <SEG> ignore case <END>
<BEG> creates a matcher of { link string } that match when the examined string be equal to the specify expectedstring <SEG> when whitespace difference be mostly ignore <END>
<BEG> creates a matcher of { link string } that match when the examine string contain all of the specified substring <SEG> regardless of the order of their appearance <END>
<BEG> creates a matcher of { link org w3c dom node } s that match when the examine node have a value at the specified < code > xpath < code > <SEG> within the specified < code > namespacecontext < code > <SEG> that satisfy the specified < code > valuematcher < code > <END>
<BEG> creates a matcher of { link org w3c dom node } s that match when the examine node contain a node at the specified < code > xpath < code > within the specified namespace context <SEG> with any content <END>
<BEG> creates an audio clip <END>
<BEG> finds and return the applet in the document represent by this applet context with the give name <END>
<BEG> finds all the applet in the document represent by this applet context <END>
<BEG> requests that the browser or applet viewer show the web page indicate by the < code > url < code > argument <END>
<BEG> requests that the argument string be display in the status window <END>
<BEG> returns the stream to which specify key be associate within this applet context <END>
<BEG> finds all the key of the stream in this applet context <END>
<BEG> associates the specified stream with the specify key in this applet context <END>
<BEG> returns an absolute url name the directory of the document in which the applet be embed <END>
<BEG> gets a handler to the applet 's context <END>
<BEG> check whether authentication be need return <END>
<BEG> returns the base 64 encode equivalent of a supplied string <END>
<BEG> returns the plaintext equivalent of a base 64-encoded string <END>
<BEG> returns the delegate which support script this element <END>
<BEG> handle the event that have the give script attach by compile the eventscript a a function and execute it param eventscript - the script to use deprecate since 1 7 - use doeventscript instead <END>
<BEG> get the attribute with the give name param name - the name of the attribute to get <END>
<BEG> set the attribute with the give name to the give value param name - the name of the attribute to set param value - the value to use <END>
<BEG> remove the attribute with the give name param name - the name of the attribute <END>
<BEG> returns true if this element may have an attribute with the specify name <END>
<BEG> returns the user agent identification <END>
<BEG> a shortcut for set both availablescreenwidth and availablescreenheight at one time <END>
<BEG> returns true if the client should accept and transmit cooky <END>
<BEG> specifies whether the client should accept and send cooky <END>
<BEG> returns true if the client will accept gzip encoding of response <END>
<BEG> specifies whether the client will accept gzip encoded response <END>
<BEG> get maximum number of redirect request return it <END>
<BEG> set the maximum number of redirects param maxredirects <END>
<BEG> determines whether the client should automatically follow page redirect request status 3xx <END>
<BEG> returns true if the client should automatically follow page refresh request <END>
<BEG> deprecate since 1 8 see br 2595566 - name of getter be a typo see getoverridecontenttype return the override content type <END>
<BEG> deprecate since 1 8 see br 2595566 - name of setter be a typo param overridecontenttype the content type see setoverridecontenttype <END>
<BEG> returns the content type if any to use instead of the one specify by the server <END>
<BEG> all responses to this client will use the specified content type rather than the one specify by the server <END>
<BEG> specifies a listener for dns request from the client <END>
<BEG> returns the listener for dns request to be use by the client <END>
<BEG> return the whether referer information should be strip from the header <END>
<BEG> set whether referer information should be strip param referer the _sendreferer to set <END>
<BEG> get the bad value from a list of values param value return <END>
<BEG> returns the path to which this cookie be restrict <END>
<BEG> returns the domain to which this cookie may be send <END>
<BEG> check whether the cookie be expired return true if the _expiredtime be high than the current system time <END>
<BEG> may this cookie be send to the give url ? <END>
<BEG> defines a cookie to be send to the server on every request <END>
<BEG> returns the name of all the active cooky in this cookie jar <END>
<BEG> returns a collection contain all of the cooky in this jar <END>
<BEG> updates the cooky maintain in this cookie jar with those in another cookie jar <END>
<BEG> add the cookie to this jar <SEG> replace any previous matching cookie <END>
<BEG> returns true the default if cooky should be reject if they specify a domain which be not a suffix of the host domain or do not contain all of the dot in that host domain name see < a href= http : www faq org rfcs rfc2965 html > rfc2965 < a > <END>
<BEG> specifies whether strict domain name match must be follow <END>
<BEG> returns true the default if cooky should be reject if they specify a path which be not a prefix of the request path see < a href= http : www faq org rfcs rfc2965 html > rfc2965 < a > <END>
<BEG> invoked when the user agent need to display a confirmation dialog <END>
<BEG> invoked when the user agent need to display a generic dialog and obtain a user response <END>
<BEG> registers an httpunit element for a node <END>
<BEG> returns the httpunit element associate with the specified dom element <SEG> if any <END>
<BEG> get the attribute with the give name - by delegate to nodeutils param name - the name of the attribute to get return the attribute <END>
<BEG> set the attribute with the give name - by delegate to nodeutils param name - the name of the attribute to set param value - the value to set <END>
<BEG> use the give ssl provider - reset the one use so far param classname param handlername <END>
<BEG> use the ibm webshpere handler <END>
<BEG> attempts to register the jsse extension if it be not already register <END>
<BEG> convenience function : create a socket factory which use an anything-goes trust manager <END>
<BEG> resets the default character set to the http default encode <END>
<BEG> resets the default content type to plain text <END>
<BEG> sets the default character set for page which do not specify one and for request create without html source <END>
<BEG> returns the character set to be use for page which do not specify one <END>
<BEG> returns true if httpunit will throw an exception when a message be only partially receive <END>
<BEG> specifies whether httpunit should throw an exception when the content length of a message do not match it actual receive length <END>
<BEG> returns true if post request should include the character set in the content-type header <END>
<BEG> sets the default content type for page which do not specify one <END>
<BEG> returns true if parser warning be enable <END>
<BEG> if true <SEG> webclient getresponse throw an exception when it receive an error status <END>
<BEG> returns true if webclient getresponse throw exception when detect an error status <END>
<BEG> returns true if form parameter setting be check <END>
<BEG> if true <SEG> tell httpunit to throw an exception on any attempt to set a form parameter to a value which could not be set via the browser <END>
<BEG> returns true if image be treat a text <SEG> use their alt attribute <END>
<BEG> if true <SEG> tell httpunit to treat image with alt attribute a though they be the text value of that attribute in all search and display <END>
<BEG> if true <SEG> text match in method such a { link htmlsegment # getlinkwith } be case insensitive <END>
<BEG> if true <SEG> tell httpunit to log http header to system output <END>
<BEG> returns true if httpunit throw an exception when attempt to parse a html a response whose content type be not html <END>
<BEG> returns the delay <SEG> in millisecond <SEG> before a redirect request be issue <END>
<BEG> returns true if httpunit should automatically follow page refresh request <END>
<BEG> remove an html error listener <END>
<BEG> get the list of html error listeners deprecate a of 1 5 2 <SEG> remove with no replacement <END>
<BEG> change the scriptingenabled flag param scriptingenabled <END>
<BEG> determines whether script error result in exception or warn message <END>
<BEG> returns true if script error cause exception to be throw <END>
<BEG> returns the accumulated script error message encounter <END>
<BEG> clears the accumulated script error message <END>
<BEG> add the name of a custom attribute that should be support for form control <END>
<BEG> get the set of custom attribute name to be support by form control <END>
<BEG> getter for java script optimization level return the javascriptoptimizationlevel to be use for run script <END>
<BEG> handle exceptions and thowables param th <END>
<BEG> be we run in the eclipse ide ? <END>
<BEG> returns the content type and encoding a a pair of string <END>
<BEG> strip the quote from a value param value return the stripped value <END>
<BEG> returns a string representation of a number <SEG> trim off any trail decimal zero <END>
<BEG> parse an inputstream to a string for debug param be return the string gotten from the inputstring <END>
<BEG> parse the give inputsource with a new parser param inputsource return the document parse from the input source <END>
<BEG> create a parser use jaxp api <END>
<BEG> return true if the first string start with the second <END>
<BEG> check whether the url be a java script url param urlstring - the string to analyze return - true if this be a javascript url <END>
<BEG> trims whitespace from the end <SEG> and encodes from the middle <END>
<BEG> strips the fragment identifier if any from the url <END>
<BEG> get the attribute with the give name from the give node param node - the node to look in param attributename - the attribute 's name to look for param defaultvalue return - the value - defaultvalue a default <END>
<BEG> set the attribute with the give attribute to the give value in the give node param node param attributename - the attribute 's name to look for param value - the value to set <END>
<BEG> remove the give attribute from the give node base on the attribute 's name param node param attributename <END>
<BEG> check whether the give attribute in the node be present param node - the node to check param attributename - the attribute name to check return true if the attribute be present <END>
<BEG> selects the jtidy parser <SEG> if present <END>
<BEG> returns true if the current parser will preserve the case of html tag and attribute <END>
<BEG> specifies whether the parser should preserve the case of html tag and attribute <END>
<BEG> returns true if the current parser will return an htmldocument object rather than a document object <END>
<BEG> specifies whether the parser should force the case of html tag and attribute to be upper case <END>
<BEG> return true if the current parser will support force the tag and attribute to upper case return boolean flag <END>
<BEG> specifies whether the parser should force the case of html tag and attribute to lower case <END>
<BEG> if true <SEG> tell the parser to display warning message <END>
<BEG> get the list of html error listeners <END>
<BEG> detects a new log if start with line <SEG> a warning if message start with warning and an error if it start with error <END>
<BEG> creates a message body for a post request <SEG> select an appropriate encoding <END>
<BEG> get the inputstream - even if it have be close previously return the inputstream for the current file throw ioexception <END>
<BEG> returns the content type associate with this file upload specification <END>
<BEG> returns 'put ' to indicate the method <END>
<BEG> returns the url that cause this exception to be throw <END>
<BEG> executes the event handler script for the specified event such a onchange <SEG> onmousedown <SEG> onclick <SEG> onmouseup if it be define <END>
<BEG> evaluates the specified javascript expression <SEG> return it value <END>
<BEG> specifies the script engine to be use <END>
<BEG> get the credential for the give realm param realm return <END>
<BEG> returns true if an exception will be throw when an error status 4xx or 5xx be detect on a response <END>
<BEG> returns the method define for this form <END>
<BEG> resets all parameter to their initial value <END>
<BEG> get the form parameter with the give name param name return the form parameter with this name <END>
<BEG> returns a rendering of this table with all cell convert to text <END>
<BEG> returns the uri specify in the message header for this request <END>
<BEG> returns the protocol string specify in the message header for this request <END>
<BEG> returns the number of server socket that must have be allocate and not return before wait for one to be return <END>
<BEG> returns the port on which this server be listen <END>
<BEG> defines a resource which will result in an error message <END>
<BEG> enables the sending of the character set in the content-type header <END>
<BEG> adds a header to a define resource <END>
<BEG> returns a resource object a a result of a get request <END>
<BEG> the basic run behaviour <END>
<BEG> tears down the fixture <END>
<BEG> asserts that two double be equal concern a delta <END>
<BEG> asserts that two float be equal concern a positive delta <END>
<BEG> asserts that an object be null <END>
<BEG> gets the actual string value return the actual string value <END>
<BEG> counts the number of test case execute by run testresult result <END>
<BEG> a convenience method to run this test <SEG> collect the result with a default testresult object <END>
<BEG> override to run the test and assert it state <END>
<BEG> sets up the fixture <SEG> for example <SEG> open a network connection <END>
<BEG> gets the failed test <END>
<BEG> returns a string contain the message from the thrown exception <END>
<BEG> returns { code true } if the error be consider a failure i e <END>
<BEG> adds an error to the list of error <END>
<BEG> informs the result that a test be complete <END>
<BEG> returns an enumeration for the error <END>
<BEG> runs a testcase <END>
<BEG> checks whether the test run should stop <END>
<BEG> informs the result that a test will be start <END>
<BEG> returns whether the entire test be successful or not <END>
<BEG> truncates a string to the maximum length <END>
<BEG> returns the loaded class for a suite name <END>
<BEG> clears the status message <END>
<BEG> filters stack frame from internal junit class <END>
<BEG> api for use by textui testrunner <END>
<BEG> see junit framework testlistener # adderror test <SEG> throwable <END>
<BEG> see junit framework testlistener # endtest test <END>
<BEG> adds to { code error } a throwable for each problem detect <END>
<BEG> creates a { link filter } which be only pass by test that be not categorize with any of the specified category <END>
<BEG> creates a { link filter } which be only pass by test that be categorize with any of the specified category <END>
<BEG> create a new maxcore from a serialize file store at storedresults deprecate use storedlocally <END>
<BEG> create a new maxcore from a serialize file store at storedresults <END>
<BEG> run all the test contain in < code > request < code > <END>
<BEG> param request a request to run return a list of method-level test to run <SEG> sort in the order specify in the class comment <END>
<BEG> loads a { link maxhistory } from { code file } <SEG> or generate a new one that will be save to { code file } <END>
<BEG> return a comparator that rank test base on the junit max sort rule <SEG> a describe in the { link maxcore } class comment <END>
<BEG> returns class forname for { code classname } use the current thread 's class loader <END>
<BEG>  < p > always return an empty list <END>
<BEG>  < p > always throw an { link unsupportedoperationexception } <END>
<BEG> see java lang management managementfactory # getruntimemxbean <END>
<BEG> gets declare method of a class in a predictable order <SEG> unless fixmethodorder methodsorters jvm be specify <END>
<BEG> validate the { link org junit runner model testclass } and add reason for reject the class to a list of error <END>
<BEG> rethrows the give { code throwable } <SEG> allow the caller to declare that it throw { code exception } <END>
<BEG> see testrule # apply statement <SEG> description <END>
<BEG> returns { code true } if the jvm be in debug mode <END>
<BEG> override to set up your specific external resource <END>
<BEG> returns a { code rulechain } without a { link testrule } <END>
<BEG> returns a { code rulechain } with a single { link testrule } <END>
<BEG> invoked when a test succeed <END>
<BEG> testwatcher be a base class for rules that take note of the test action <SEG> without modify it <END>
<BEG> invoked when a test be about to start <END>
<BEG> invoked when a test method succeed <END>
<BEG> invoked when a test method be about to start <END>
<BEG> verifier be a base class for rules like errorcollector <SEG> which can turn otherwise pass test method into fail test if a verification check be fail < pre > public static class errorlogverifier { private errorlog errorlog = new errorlog ; & # 064 ; rule public verifier verifier = new verifier { & # 064 ; override public void verify { asserttrue errorlog isempty ; } } & # 064 ; test public void testthatmightwriteerrorlog { } } < pre > since 4 7 <END>
<BEG> override this to add verification logic <END>
<BEG> create a < code > description < code > name < code > name < code > <END>
<BEG> create a < code > description < code > of a single test name < code > name < code > in the 'class ' name < code > classname < code > <END>
<BEG> create a < code > description < code > name after < code > testclass < code > param testclass a { link class } contain test return a < code > description < code > of < code > testclass < code > <END>
<BEG> create a < code > description < code > name after < code > testclass < code > param testclass a not null { link class } contain test param annotation meta-data about the test <SEG> for downstream interpreter return a < code > description < code > of < code > testclass < code > <END>
<BEG> return a user-understandable label <END>
<BEG> add < code > description < code > a a child of the receiver <END>
<BEG> gets the copy of the child of this { code description } <END>
<BEG> return < code > true < code > if the receiver be an atomic test <END>
<BEG> return the total number of atomic test in the receiver <END>
<BEG> return true if this be a description of a runner that run no test <END>
<BEG> return a copy of this description <SEG> with no child on the assumption that some of the child will be add back <END>
<BEG> return all of the annotation attach to this description node <END>
<BEG> return if this describe a method invocation <SEG> the class of the test instance <END>
<BEG> return if this describe a method invocation <SEG> the name of the class of the test instance <END>
<BEG> returns filter spec parse from command line <END>
<BEG> parses the argument <END>
<BEG> run the test contain in the class name in the < code > args < code > <END>
<BEG> run the test contain in < code > class < code > <END>
<BEG> return the version number of this release <END>
<BEG> returns a { code filter } that only run the single method describe by { code desireddescription } <END>
<BEG> invoke with a { link org junit runner runner } to cause all test it intend to run to first be check with the filter <END>
<BEG> returns a new filter that accept the intersection of the test accept by this filter and { code second } <END>
<BEG> order the test in < code > target < code > <END>
<BEG> creates an { link ordering } that shuffle the item use the give { link random } instance <END>
<BEG> wraps the give listener with { link synchronizedrunlistener } if it be not annotate with { link runlistener threadsafe } <END>
<BEG> invoke to tell listener that a test suite be about to start <END>
<BEG> invoke to tell listener that an atomic test fail <END>
<BEG> invoke to tell listener that an atomic test be ignore <END>
<BEG> ask that the test run stop before start the next test <END>
<BEG>  < p > synchronized decorator for { link runlistener # testsuitestarted description } <END>
<BEG> evaluates whether { link frameworkmethod } s be ignore base on the { link ignore } annotation <END>
<BEG> returns the method that run test <END>
<BEG> adds to { code error } if the test class have more than one constructor do not override <END>
<BEG> adds to { code error } for each method annotate with { code test } <SEG> { code before } <SEG> or { code after } that be not a public <SEG> void instance method with no argument <END>
<BEG> adds to { code error } for each method annotate with { code test } that be not a public <SEG> void instance method with no argument <END>
<BEG> returns a new fixture for run a test <END>
<BEG> adds to { code error } if this method : < ul > < li > be not public <SEG> or < li > take parameter <SEG> or < li > return something other than void <SEG> or < li > be static give { code isstatic be false } <SEG> or < li > be not static give { code isstatic be true } <END>
<BEG> adds to { code error } if this method : < ul > < li > be not public <SEG> or < li > return something other than void <SEG> or < li > be static give { code isstatic be false } <SEG> or < li > be not static give { code isstatic be true } <END>
<BEG> always return a runner for the give test class <END>
<BEG> adds to { code error } a throwable for each problem note with the test class available from { link # gettestclass } <END>
<BEG> evaluates whether a child be ignore <END>
<BEG> validate all annotation of the specified test class that be be annotate with { link validatewith } <END>
<BEG> validates annotation on the give field <END>
<BEG> creates the annotationvalidator specify by the value in { link org junit validator validatewith } <END>
<BEG> validate that the specify { link testclass } be public <END>
<BEG> this object will no longer be usable after this method be call <END>
<BEG> return return < code > true < code > if this class be verify share and lifecycle assertion <END>
<BEG> a random double between < code > min < code > inclusive and < code > max < code > inclusive <END>
<BEG> param r random generator <END>
<BEG> similar to { link random # nextint int } <SEG> but return a long between 0 inclusive and < code > n < code > exclusive <END>
<BEG> pick a random object from the give array <END>
<BEG> pick a random object from the collection <END>
<BEG> an alias for { link # ofcodeunitslength random <SEG> int <SEG> int } <END>
<BEG> hashes a 4-byte sequence java int <END>
<BEG> hashes an 8-byte sequence java long <END>
<BEG> returns true <SEG> if the current jvm be fully support by { code ramusageestimator } <END>
<BEG> aligns an object size to be the next multiple of { link # num_bytes_object_alignment } <END>
<BEG> estimates the ram usage by the give object <END>
<BEG> estimates a shallow memory usage of the give object <END>
<BEG> returns the shallow instance size in byte an instance of the give class would occupy <END>
<BEG> return the set of unsupported jvm feature that improve the estimation <END>
<BEG> return a human-readable size of a give object <END>
<BEG> parse a single seed <END>
<BEG> parse a seed chain format with { link seedutils # formatseedchain randomness } <END>
<BEG> prefix a give property name with a common prefix <END>
<BEG> configure whether or not to add an empty oauth token for oauth1 while generate base string param addemptyaccesstokentobasestring whether or not to add an empty oauth access token parameter while generate base string return a new instance of { link oauthconfig } see # addemptyaccesstokentobasestring boolean <END>
<BEG> return whether or not this config be user configure <END>
<BEG> configure if rest assured should follow redirects param value < code > true < code > if it should follow redirects <SEG> < code > false < code > otherwise <END>
<BEG> the same redirectconfig instance <END>
<BEG> return < code > true < code > if configure to allow circular redirects <END>
<BEG> return < code > true < code > if this instance be carry any config that be user configure <END>
<BEG> decode unescape a portion of a url <SEG> to use with the query part ensure { code plusasblank } be true <END>
<BEG> returns the expiration { link java util date } of the cookie <SEG> or < tt > null < tt > if none exists <END>
<BEG> get a single cookie < i > value < i > with the supply name <END>
<BEG> returns next round of verification <END>
<BEG> store document locally key by resource name <END>
<BEG> non-android utility method for compare a point to a well-known value param x x param y y return this x == x & & this y == y <END>
<BEG> creates a new sparsearray contain no mapping that will not require any additional memory allocation to store the specified number of mapping <END>
<BEG> non-android accessor that discard the recorded { code toast } s <END>
<BEG> check if the map have be set at all <END>
<BEG> gets an in memory db connection <END>
<BEG> makes any edits necessary in the sql string for it to be compatible with the database in use <END>
<BEG> tells whether method call should be verify <END>
<BEG> tells whether class-based mock object should be instantiate with the objenesis library if available <SEG> or by call a real constructor <END>
<BEG> returns the strategy for respond to unexpected method call <END>
<BEG> returns a string representation of a value <SEG> or < tt > null < tt > if the value should not be show because it do not add any valuable information <END>
<BEG> convenience base class for global extension that allow to implement method selectively <END>
<BEG> returns the current jvm 's java specification version <END>
<BEG> returns the { code throwable } throw by the feature method <END>
<BEG> returns the estimated total number of iteration for the ongoing execution of the owning feature method <END>
<BEG> returns the url associate with the tag <SEG> if any <END>
<BEG> records and return the specified value <END>
<BEG> materializes n a value without record a new value <END>
<BEG> partial replacement for arrays copyofrange <SEG> which be only available in jdk6 <END>
<BEG> determines the package name without call { code class getpackage } which may return null <END>
<BEG> returns { code true } if the argument { code m } be a default method ; return { code false } otherwise <END>
<BEG> returns { code true } if the argument { code m } be a public method of java lang object <END>
<BEG> creates a mock whose type and name be infer from the left-hand side of the enclose variable assignment <END>
<BEG> creates a mock with the specified interaction whose type and name be infer from the left-hand side of the enclosing assignment <END>
<BEG> creates a mock with the specify option and interaction whose type and name be infer from the left-hand side of the enclosing assignment <END>
<BEG> blocks until a value have be set for this variable <SEG> or a timeout expire <END>
<BEG> sets a value for this variable <END>
<BEG> returns the timeout in second until which the condition have to be satisfied <END>
<BEG> the java version <SEG> a return by the { code java version } system property <END>
<BEG> the java specification version <SEG> a return by the { code java specification version } system property <END>
<BEG> tells whether the operating system family be linux <END>
<BEG> tells whether the operating system family be mac os <END>
<BEG> tells whether the operating system family be anything other than those list above <END>
<BEG> returns the innermost cause of the specify exception <END>
<BEG> returns a list of all cause of the specify exception <END>
<BEG> an id that <SEG> in addition to a test class name <SEG> identify a nested suite about which an event be fire <END>
<BEG> the name of the test in a nested suite about which an event be fire <END>
<BEG> indicates whether this < code > optionalthrowable < code > be define <SEG> < em > i e < em > <SEG> contain a < code > throwable < code > <END>
<BEG> returns the < code > throwable < code > contain in this < code > optionalthrowable < code > if define <SEG> else throw < code > illegalstateexception < code > <END>
<BEG> the fully qualified name of the test class request by this < code > taskdef < code > <END>
<BEG> the fingerprint that the test class request by this < code > taskdef < code > match <END>
<BEG> indicates whether or not the test class request by this < code > taskdef < code > be explicitly specify <END>
<BEG> one to many selector describe the nature of the < code > task < code > request by this < code > taskdef < code > <END>
<BEG> a test wildcard string use to select test <END>
<BEG> fails a test with the give message and wrap the original exception <END>
<BEG> asserts that two array contain the same element in the same order <END>
<BEG> asserts that two array contain the equal element concern a delta in the same order <END>
<BEG> asserts that two iterables return iterators with the same element in the same order <END>
<BEG> assert set equal <END>
<BEG> run the assert command in parameter <END>
<BEG> override this method should you want to change the default way throwable object be log <END>
<BEG> remove the method from this map and return true if it be the last of it class <END>
<BEG> turns the output of a junit 4 parameters style data provider into one that be suitable for testng 's dataprovider <END>
<BEG> asserts that a { code tstvalue } be a proper directory <END>
<BEG> asserts that a { code tstvalue } be a file of exactly { code expect } character or a directory of exactly { code expect } entry <END>
<BEG> asserts that a { code tstvalue } be a file of at least { code expect } character or a directory of at least { code expect } entry <END>
<BEG> see # assertwriteable file <SEG> string <END>
<BEG> param suit - the list of { link xmlsuite } s that be part of the current execution <END>
<BEG> transform an idataprovider annotation <END>
<BEG> invoked whenever a configuration method fail <END>
<BEG> invoked whenever a configuration method be skip <END>
<BEG> invoked once all the suite have be run <END>
<BEG>  return the addition of group define on the class and on this method <END>
<BEG>  return the number of time this method need to be invoke <END>
<BEG>  compares two basetestmethod use the test class then the associate java method <END>
<BEG> add a class loader to the searchable loader <END>
<BEG> tries to load the specified class use the context classloader or if none <SEG> than from the default classloader <END>
<BEG> extract all callable method of a class and all it super keep in mind the java access rule <END>
<BEG> param cl - the class to look for <END>
<BEG> asserts that two array be equal <SEG> accord to the criterion define by the concrete subclass <END>
<BEG> fix the methodsdependedupon to make sure that configuration method respect inheritance before method be invoke in the order base first and after method be invoke in the order child first param method the list of method param before true if we be handle a before method meaning <SEG> the method need to be sort base class first and subclass last <END>
<BEG> return all configuration method that should be invoke before certain group <END>
<BEG> see org testng itestclass # getinstancehashcodes <END>
<BEG> see org testng itestclass # getinstances boolean <END>
<BEG> see org testng iclass # addinstance java lang object <END>
<BEG>  see reflectionrecipes # matcharrayending class [ ] <SEG> object [ ] <END>
<BEG> return an array of all locally declare method or equivalent thereof such a default method on java 8 base interface that the give class implement <END>
<BEG> message regex <END>
<BEG> return - return < code > true < code > if we would like to run in the dry mode and < code > false < code > otherwise <END>
<BEG> return - return the { link timezone } correspond to the jvm argument < code > -dtestng timezone < code > if it be set <END>
<BEG> return - < code > true < code > if we would like to enforce thread affinity when deal with the below two variant of execution model : < ul > < li > ordering priority < li > ordering by dependsonmethods will not work with dependency on multiple method < ul > <END>
<BEG> run all the itestngmethods pass in through the constructor <END>
<BEG> sets the number of thread on which this method should be invoke <END>
<BEG> param tm - the { link itestngmethod } object which be to be test <END>
<BEG> if this result 's related instance implement itest or use test testname= <SEG> return it test name <SEG> otherwise return null <END>
<BEG> return - a { link iparameterinfo } object that represent detail about the parameter associate with the factory method <END>
<BEG> return - an array of { link customattribute } that represent the custom attribute associate with a test <END>
<BEG> return - an { link idataprovidermethod } for a data provider power test method and < code > null < code > otherwise <END>
<BEG> needed from testrunner in order to figure out what junit test method be run <END>
<BEG> retrieve a logger name accord to the value of the pclass getname parameter <END>
<BEG> log a message object with the trace level include the stack trace of the throwable t pass a parameter <END>
<BEG> run all test <END>
<BEG> finds topmost position of the test method in the stack <SEG> or top of stack if < code > method < code > be not in it <END>
<BEG> pop the last pushed element and throw an assertionerror if it do n't match the corresponding tag that be push earlier <END>
<BEG> add an optional string element to the current tag <END>
<BEG> add an empty element tag e g <END>
<BEG> return the string representation of the xml for this xmlstringbuffer <END>
<BEG> appends the attribute to result <END>
<BEG> flag if the current exception mark a skipped method < tt > true < tt > or a failure < tt > false < tt > <END>
<BEG> restores the original exception stack trace after a previous call to { link # reducestacktrace } <END>
<BEG> registers isuitelisteners interested in report the result of the current suite <END>
<BEG> retries the test if count be not 0 <END>
<BEG> param string - the input string <END>
<BEG> getting miss-matched testnames <END>
<BEG> a validator that run through the list of suite and check if each of the suite contain any { link xmltest } with the same name <END>
<BEG> ensures that the current suite do n't contain any duplicate { link xmltest } instance <END>
<BEG> clone an xmlclass by copy all it component <END>
<BEG> return the parameter define in this tag <SEG> and only this test tag <END>
<BEG> return the parameter define in this tag and the tag above it <END>
<BEG> deprecate use # setparallel xmlsuite parallelmode instead <END>
<BEG> return the parameter define in this suite and all it xmltests <END>
<BEG> returns the parameter define in this suite only <END>
<BEG> returns the xml package <END>
<BEG> returns the timeout a a long value specify the default value to be use if no timeout be specify <END>
<BEG> param g - the list of group to include <END>
<BEG> returns the suite this test be part of <END>
<BEG> sets the xml classes <END>
<BEG> param parameter - a { link map } of parameter <END>
<BEG> clone the < tt > source < tt > < code > xmltest < code > by include : - test attribute - group definition - parameter < p > the & lt ; class & gt ; sub element be ignore for the moment <END>
<BEG> param name the list of name to check <END>
<BEG> do n't add this property if it 's equal to it default value <END>
<BEG> return true if the difference represent a similarity <SEG> false otherwise <END>
<BEG> allow the recoverable field value to be overridden <END>
<BEG> return the nodedetail from the piece of xml use a the control at the node where this difference be encounter <END>
<BEG> return the content of the original source <SEG> without amendment or substitution <END>
<BEG> read doctype-replaced content from the wrapped reader param cbuf param off param len return the number of character read <SEG> or -1 if the end of the stream have be reach throw ioexception <END>
<BEG> extract the normalized text from within an element param fromelement return extract text node could be null <END>
<BEG> determine whether two node be define by the same namespace uri param control param test return true if the two node be both define by the same namespace uri include the default - empty - namespace <SEG> false otherwise <END>
<BEG> strip any namespace information off a node name param node return the localname if the node be namespaced <SEG> or the name otherwise <END>
<BEG> return a dom document parse from the reader via an swingevent2saxadapter and tolerantsaxbuilder <END>
<BEG> return return_ignore_difference_nodes_similar to ignore difference in value of text or attribute node <SEG> and return_accept_difference to accept all other difference <END>
<BEG> do nothing see differencelistener # skippedcomparison node <SEG> node <END>
<BEG> adds a source for the schema defintion <END>
<BEG> is the give schema definition valid ? <END>
<BEG> obtain a list of all error in the schema defintion <END>
<BEG> is the give schema instance valid accord to the configure schema definition s ? <END>
<BEG> inputstream method note that call close allows a repeat read of the content throw ioexception <END>
<BEG> inputstream method return number of byte available <END>
<BEG> does this nodetest pas use the specify nodetester instance ? <END>
<BEG> return true if a node be pass to constructor <END>
<BEG> testable method to execute the copy-of transform and return the root node of the resulting document <END>
<BEG> contenthandler method throw saxexception <END>
<BEG> unhandled contenthandler method throw saxexception <END>
<BEG> perform the actual transformation param result throw transformerexception <END>
<BEG> perform the xslt transformation specify in the constructor return the result a a string throw transformerexception <END>
<BEG> perform the xslt transformation specify in the constructor return the result a a dom document throw transformerexception <END>
<BEG> override an output property specify in the transformation stylesheet param name param value <END>
<BEG> returns an arry view of this buffer 's content <END>
<BEG> find sequence in current buffer <END>
<BEG> overide the documentbuilder to use to parse control document <END>
<BEG> sets an entityresolver to be add to all new test parser <END>
<BEG> get the < code > documentbuilderfactory < code > instance use to instantiate parser for the control xml in an xmltestcase <END>
<BEG> override the < code > documentbuilderfactory < code > use to instantiate parser for the control xml in an xmltestcase <END>
<BEG> get the < code > documentbuilder < code > instance use to parse the test xml in an xmltestcase <END>
<BEG> whether to ignore whitespace when compare node value <END>
<BEG> utility method to build a document use the control documentbuilder to parse the specified string <END>
<BEG> overide the transformer to use for xslt transformation and by implication serialization and xpaths <END>
<BEG> get a fresh transformer to use for xslt transformation and by implication serialization and xpaths <END>
<BEG> sets the uriresolver to use during transformation <END>
<BEG> gets the uriresolver use during transformations <END>
<BEG> override the sax parser to use in test <END>
<BEG> obtain the transformation that will strip whitespace from a dom contain empty text node param fordocument return a < code > transform < code > to do the whitespace strip <END>
<BEG> returns a new document instance that be identical to the one pass in with element content whitespace remove <END>
<BEG> obtain the transformation that will strip comment from a dom <END>
<BEG> place holder for current version info <END>
<BEG> compare xml document provide by two inputsource class param control control document param test document to test return diff object describe difference in document throws saxexception throw ioexception <END>
<BEG> compare two xml document provide a string param control control document param test document to test return diff object describe difference in document throws saxexception throw ioexception <END>
<BEG> compare two xml document provide a string param control control document param test document to test return diff object describe difference in document <END>
<BEG> get the namespacecontext to use in xpath test <END>
<BEG> whether cdata section and text node should be consider the same <END>
<BEG> whether comment should be ignore <END>
<BEG> whether text node should be normalize <END>
<BEG> whether whitespace character inside text node or attribute should be normalize <END>
<BEG> whether to ignore the order of attribute on an element <END>
<BEG> the xslt version set on stylesheets use internally <END>
<BEG> sets the class to use a xpathfactory when use jaxp 1 3 <END>
<BEG> xslt stylesheet element use the configured xslt version <END>
<BEG> whether the parser shall be instruct to expand entity reference <END>
<BEG> whether to compare unmatched control node to unmatched test node <END>
<BEG> get bitronix xid format id <END>
<BEG> get an integer hash for the xid <END>
<BEG> log a new transaction status to journal <END>
<BEG> force active log file to synchronize with the underlie disk device <END>
<BEG> open the disk journal <END>
<BEG> close the disk journal and the underlying file <END>
<BEG> close the appender and the underlie file <END>
<BEG> force flush the log to disk throw ioexception if an i o error occurs <END>
<BEG> close the cursor and the underlie file throw ioexception if an i o error occurs <END>
<BEG> create human-readable string representation <END>
<BEG> specify the resource unique name to be use to identify this resource during recovery <END>
<BEG> return true if the the xa resource wrapper should enlist delist this resource automatically in global transaction <END>
<BEG> return true if transaction branch join should be use <END>
<BEG> specify if the transaction manager should try to join resource by call { link javax transaction xa xaresource # start javax transaction xa xid <SEG> int } with { link javax transaction xa xaresource # tmjoin } <END>
<BEG> return the property that should be set on the underlying implementation <END>
<BEG> return the maximum amount of connection that can be in the pool <END>
<BEG> return the amount of connection to be create at once when the pool need to grow <END>
<BEG> return the amount of time in second a call to get a connection from the pool will wait when the pool be empty <END>
<BEG> define the transaction interleave capability of the database <END>
<BEG> return the amount of time between fail connection acquirement <END>
<BEG> set the amount of time in second the pool will wait before try to acquire a connection again after an invalid connection have be attempt to be acquire <END>
<BEG> return true if the transaction manager should allow mix xa and non-xa transaction <END>
<BEG> return true if the transaction-timeout should be set on the xaresource <END>
<BEG> set if the transaction-timeout should be set on the xaresource when the xaresource be enlist <END>
<BEG> set whether connection in the accessible state can be share within the context of a transaction <END>
<BEG> set whether xa recovery error should quarantine the resource or be ignore <END>
<BEG> return true if recovery error should be ignore <SEG> false otherwise <END>
<BEG> return true if the resource be disable <SEG> false if it be enable <END>
<BEG> check if a collection contain a specific object by search for it by identity instead of by use equal hashcode <END>
<BEG> set a direct or indirect property dot property : prop1 prop2 prop3 on the target object <END>
<BEG> build a map of direct javabeans property of the target object <END>
<BEG> set a { link map } of direct or indirect property on the target object <END>
<BEG> return a comma-separated string of r w property of the specify object <END>
<BEG> see javax resource spi xaterminator # recover int <END>
<BEG> suspend the give transaction <END>
<BEG> this implementation be empty <SEG> consider flush a a no-op <END>
<BEG> delegate the flushing to the transaction object <SEG> provide that the latter implement the { link smarttransactionobject } interface <END>
<BEG> gets the character use for mille percent sign <END>
<BEG> gets the character use for a digit in a pattern <END>
<BEG> gets the string use to represent infinity <END>
<BEG> gets the string use to represent not a number <END>
<BEG> sets the character use to represent minus sign <END>
<BEG> returns the monetary decimal separator <END>
<BEG> returns the character use to separate the mantissa from the exponent <END>
<BEG> override equal <END>
<BEG> utility routine to get the value of the digit list if count == 0 this throw a numberformatexception <SEG> which mimic long parselong <END>
<BEG> set the digit list to a representation of the give double value <END>
<BEG> equality test between two digit list <END>
<BEG> set the index at which a parse error occur <END>
<BEG> retrieve the index at which an error occur <SEG> or -1 if the error index have not be set <END>
<BEG> scalbn double x <SEG> int n scalbn x <SEG> n return x 2 n compute by exponent manipulation rather than by actually perform an exponentiation or a multiplication <END>
<BEG> returns the negation of the argument <SEG> throw an exception if the result exceed a { code double } <END>
<BEG> learn whether we have cache the validator class for the requested constraint annotation <END>
<BEG>  note : needed to avoid duplication in the reported violation <END>
<BEG> close quietly a { link closeable } reference <END>
<BEG> record the ignore state for a particular annotation type <END>
<BEG> learn whether the specified annotation type should be ignore <END>
<BEG> ignore annotation on a particular { link member } of a class <END>
<BEG> learn whether annotation should be ignore on a particular { link member } of a class <END>
<BEG> record the ignore state of a particular class <END>
<BEG> learn whether annotation should be ignore for a give class <END>
<BEG> get the specify element value from the current configuration <END>
<BEG> configure the well-known jsr303 message element <END>
<BEG> get the annotation that define this constraint <END>
<BEG> argument 's replacement position <END>
<BEG> set this argument 's replacement position <END>
<BEG> checks if the field be a valid credit card number <END>
<BEG> adds an allowed creditcardtype that participate in the card validation algorithm <END>
<BEG> < p > checks if the field be a valid date <END>
<BEG> returns true if the domain component of an email address be valid <END>
<BEG> validates an ip address <END>
<BEG> validates a symbolic domain name <END>
<BEG> gets a unique key base on the property and indexedproperty field <END>
<BEG> < p > returns a < code > dateformat < code > for the specified < i > pattern < i > and or < code > locale < code > < p > param pattern the pattern use to validate the value against or < code > null < code > to use the default for the < code > locale < code > <END>
<BEG> < p > returns a < code > dateformat < code > for the specified locale < p > param locale the locale a < code > dateformat < code > be require for <SEG> system default if null <END>
<BEG> < p > compares a calendar value to another <SEG> indicate whether it be equal <SEG> less then or more than at a specified level < p > param value the calendar value <END>
<BEG> < p > compares a calendar time value to another <SEG> indicate whether it be equal <SEG> less then or more than at a specified level < p > param value the calendar value <END>
<BEG> < p > compares a calendar 's quarter value to another <SEG> indicate whether it be equal <SEG> less then or more than the specified quarter < p > param value the calendar value <END>
<BEG> < p > indicates whether validated value should adhere strictly to the < code > format < code > use < p > < p > typically implementation of < code > format < code > ignore invalid character at the end of the value and just stop parsing <END>
<BEG> return a singleton instance of this validator <END>
<BEG> < p > validate convert a < code > bigdecimal < code > use the default < code > locale < code > <END>
<BEG> < p > validate convert a < code > bigdecimal < code > use the specified pattern and or < code > locale < code > <END>
<BEG> check if the value be within a specified range <END>
<BEG> < p > calculates the < i > weight < i > value of a charcter in the code at a specified position < p > < p > for cusip from right to leave < b > odd < b > digit be weight with a factor of < b > one < b > and < b > even < b > digits with a factor of < b > two < b > <END>
<BEG> calculate the < i > check digit < i > for an iban code <END>
<BEG> < p > validate an isbn-10 or isbn-13 check digit <SEG> depend on the length of the code < p > < p > if the length of the code be 10 <SEG> it be treat a an isbn-10 code or ff the length of the code be 13 <SEG> it be treat a an isbn-13 code <END>
<BEG> calculate the modulus for an isin code <END>
<BEG> return the modulus value this check digit routine be base on <END>
<BEG> calculate a modulus < i > check digit < i > for a code which do not yet have one <END>
<BEG> convert an integer value to a check digit <END>
<BEG> add together the individual digit in a number <END>
<BEG> validate the verhoeff < i > check digit < i > for a code <END>
<BEG> return the check digit validation routine <END>
<BEG> return the < i > regular expression < i > validator <END>
<BEG> validate the code return either < code > true < code > or < code > false < code > <END>
<BEG> validate an iban code param code the value validation be be perform on return < code > true < code > if the value be valid <END>
<BEG> gets a copy of the default validators <END>
<BEG> get the validator for a give iban param code a string start with the iso country code e g <END>
<BEG> installs a validator <END>
<BEG> checks if the specified string be a valid ip address <END>
<BEG> return a singleton instance of the issn validator return a singleton instance of the issn validator <END>
<BEG> convert an issn code to an ean-13 code <END>
<BEG> validate a value against the set of regular expression <END>
<BEG> validate a value against the set of regular expression return the array of match group <END>
<BEG> validate a value against the set of regular expression return a string value of the aggregated group <END>
<BEG> < p > validate convert a time use the default < code > locale < code > and < code > timezone < code > <END>
<BEG> < p > validate convert a time use the specify < code > timezone < code > and default < code > locale < code > <END>
<BEG> < p > validate convert a time use the specify specify < code > locale < code > and < code > timezone < code > <END>
<BEG> < p > validate convert a time use the specified pattern <SEG> < code > locale < code > and < code > timezone < code > <END>
<BEG> < p > compare seconds hour <SEG> minute and second < p > param value the < code > calendar < code > value to check <END>
<BEG> < p > compare minutes hour and minute < p > param value the < code > calendar < code > value to check <END>
<BEG> < p > compare hours < p > param value the < code > calendar < code > value to check <END>
<BEG> < p > convert the parsed < code > date < code > to a < code > calendar < code > < p > param value the parsed < code > date < code > object create <END>
<BEG> returns the singleton instance of this class with default scheme and option <END>
<BEG> < p > checks if a field have a valid url address < p > note that the method call # isvalidauthority which check that the domain be valid <END>
<BEG> returns true if the authority be properly format <END>
<BEG> returns true if the query be null or it 's a properly format query string <END>
<BEG> returns true if the give fragment be null or fragment be allow <END>
<BEG> returns the number of time the token appear in the target <END>
<BEG> tests whether the give flag be on <END>
<BEG> turns on the give flag <END>
<BEG> turn off all flag <END>
<BEG> turn on all 64 flag <END>
<BEG> tests if two flags object be in the same state <END>
<BEG> the hash code be base on the current state of the flag <END>
<BEG> returns a 64 length string with the first flag on the right and the 64th flag on the left <END>
<BEG> returns the constraint annotation type for which this instance provide constraint validator instance <END>
<BEG> returns a filter which exclude interface <END>
<BEG> returns a filter which exclude proxy object <END>
<BEG> calculate luhn modulo 10 checksum luhn algorithm implementation param digits the digit over which to calculate the checksum return the result of the mod10 checksum calculation <END>
<BEG> calculate generic modulo 10 checksum param digits the digit over which to calculate the checksum param multiplier multiplier use for the odd digit in the algorithm param weight multiplier use for the even digits in the algorithm return the result of the mod10 checksum calculation <END>
<BEG> calculate modulo 11 checksum param digits the digit for which to calculate the checksum param threshold the threshold for the mod11 algorithm multiplier growth return the result of the mod11 checksum calculation <END>
<BEG> calculate modulo { code moduloparam } checksum with give weight <END>
<BEG> returns the binding for all the type variable from the give type 's hierarchy <END>
<BEG> checks if the give { link xmlevent } be a { link startelement } and if the corresponding xml tag can be process base on a tag name <END>
<BEG> reads a value between a simple tag element <END>
<BEG> reads a value of an attribute of a give element <END>
<BEG> search current thread classloader for the resource bundle <END>
<BEG> assert that this parameter be not empty <END>
<BEG> assert that this parameter be null <END>
<BEG> return the default behavior when the constraint be validate for a array map collection reference <END>
<BEG> if the message have not be initialize which might be the case when use xml configuration <SEG> construct the string base on this class ' name minus the appendix check plus the appendix violate <END>
<BEG> values that be use to fill place holder when render the error message <END>
<BEG> calling this method indicate that the { link # createmessagevariables } method need to be call before the message for the next violation of this check be render <END>
<BEG> configure method return value and parameter check <END>
<BEG> return the expression language <END>
<BEG> < b > this method be not use < b > < br > the validation of this special constraint be directly perform by the validator class throw unsupportedoperationexception always thrown if this method be invoke <END>
<BEG> gets the allowed url scheme <END>
<BEG> specifies if a connection to the url should be attempt to verify it validity <END>
<BEG> param simplechecktype the simplechecktype to set throw illegalargumentexception if < code > simplechecktype == null < code > <END>
<BEG> return the cause or null of no cause exists <END>
<BEG> return returns the context where the constraint be declare <END>
<BEG> return returns the value that be validate <END>
<BEG> return the raw message specify for the constraint without variable resolution and localization <END>
<BEG> returns the message variable provide by the corresponding check <END>
<BEG> return the id of the thread in which the violation occur <END>
<BEG> registers constraint check for the give constructor parameter throw illegalargumentexception if < code > method == null < code > or < code > exclusion == null < code > or exclusion be empty throw invalidconfigurationexception if the declare class be not guard or the parameterindex be out of range <END>
<BEG> registers post condition check to a method 's return value throw illegalargumentexception if < code > method == null < code > or < code > check == null < code > or check be empty throw invalidconfigurationexception if the declare class be not guard <END>
<BEG> registers the give listener for < b > all < b > thrown constraintviolationexceptions param listener the listener to register return < code > true < code > if the listener be not yet register throw illegalargumentexception if < code > listener == null < code > <END>
<BEG> registers the give listener for all thrown constraintviolationexceptions on object of the give object param listener the listener to register param guardedobject return < code > true < code > if the listener be not yet register throw illegalargumentexception if < code > listener == null < code > or < code > guardedobject == null < code > <END>
<BEG> disables the probe mode for the give object in the current thread <END>
<BEG> returns the register constraint pre condition check for the give method parameter param method param paramindex throw illegalargumentexception if < code > method == null < code > <END>
<BEG> returns the registered post condition check for the give method throw illegalargumentexception if < code > method == null < code > <END>
<BEG> returns the registered pre condition check for the give method <END>
<BEG> this method be provide for use by guard aspect <END>
<BEG> < b > note : < b > only require until aspectj allow throwing of checked exception <SEG> then { link # guardmethod object <SEG> method <SEG> object [ ] <SEG> invocable } can be use instead this method be provide for use by guard aspect <END>
<BEG> param guardedclass guard class or interface return < code > true < code > if the listener be register throw illegalargumentexception if < code > listener == null < code > or < code > guardedclass == null < code > <END>
<BEG> return < code > true < code > if the listener be register throw illegalargumentexception if < code > listener == null < code > or < code > guardedobject == null < code > <END>
<BEG> determines if the probe mode be enable for the give object in the current thread <END>
<BEG> determines if invariant be check prior and after every call to a non-private method or constructor <END>
<BEG> notifies all register validation listener about the occurred constraint violation exception <END>
<BEG> removes constraint check exclusion from the give constructor parameter throw invalidconfigurationexception if the declare class be not guard or the parameterindex be out of range <END>
<BEG> removes constraint check from the give constructor parameter throw invalidconfigurationexception if the declare class be not guard or the parameterindex be out of range <END>
<BEG> removes constraint check for the give method parameter throw illegalargumentexception if < code > constructor == null < code > or < code > check == null < code > or check be empty throw invalidconfigurationexception if the parameterindex be out of range <END>
<BEG> removes the give listener return < code > true < code > if the listener be register throw illegalargumentexception if < code > listener == null < code > <END>
<BEG> if set to false oval 's programming by contract feature be disabled and constraint be not check automatically during runtime <END>
<BEG> specifies if invariant be check prior and after call to non-private method and constructor <END>
<BEG> param parameternameresolver the parameternameresolver to set <SEG> can not be null throw illegalargumentexception if < code > parameternameresolver == null < code > <END>
<BEG> validates the pre condition for a method call <END>
<BEG> intentionally the following code be not synchronize <END>
<BEG> executes the collected method call and clear the internal list hold them <END>
<BEG> add check constraint on object level invariant <END>
<BEG> throw illegalargumentexception if < code > collection == null < code > <END>
<BEG> returns all annotation present on this class <END>
<BEG> return the field or null if the field do not exist <END>
<BEG> param setter return the corresponding field for a setter method <END>
<BEG> returns an array of array that represent the annotation on the formal parameter <SEG> in declaration order <SEG> of the method represent by this method <END>
<BEG> determines if a method be a javabean style getter method <END>
<BEG> high-performance case-sensitive string replacement <END>
<BEG> gets the locale of the current thread <END>
<BEG> default object graph navigator implementation <END>
<BEG> converts a row major matrix into a row major block matrix <END>
<BEG> converts a row major block matrix into a row major matrix <END>
<BEG> converts the transpose of a row major matrix into a row major block matrix <END>
<BEG> sets either the upper or low triangle of a matrix to zero <END>
<BEG> copies either the upper or low triangular portion of src into dst <END>
<BEG> < p > sets every element in the matrix to the specify value < br > < br > a < sub > ij < sub > = value < p > param a a matrix whose element be about to be set <END>
<BEG> < p > sets the value of a to all zero except along the diagonal < p > param a block matrix <END>
<BEG> < p > converts the block matrix into a simplematrix < p > param a block matrix that be be convert <END>
<BEG> < p > returns a new matrix with one along the diagonal and zero everywhere else <END>
<BEG> < p > checks to see if the two matrix have an identical shape an block size <END>
<BEG> checks to see if the submatrix have it boundary along inner block <END>
<BEG> finds the element in the column with the large absolute value <END>
<BEG> this be the input matrix after it have be overwrite with the decomposition <END>
<BEG> < p > sets if it should internally save the w matrix before perform the decomposition <END>
<BEG> < p > a = i + w y < sup > t < sup > < sup > t < sup > a < br > a = a + y w < sup > t < sup > a < br > < br > where a be a submatrix of the input matrix <END>
<BEG> if x == null then the solution be write into b <END>
<BEG> computes the qr decomposition of a and store the result in a <END>
<BEG> computes the quality use diagonal element the triangular r matrix in the qr decomposition <END>
<BEG> invert by solve for against an identity matrix <END>
<BEG> sets up internal data structure and create a copy of the input matrix <END>
<BEG> returns gammas from the householder operation for the u matrix <END>
<BEG> decomposes a submatrix <END>
<BEG> if true the decomposition be for a low triangular matrix <END>
<BEG> < p > performs choleksy decomposition on the provide matrix <END>
<BEG> returns the triangular matrix from the decomposition <END>
<BEG> sets the value of the vector to use in the start of the iteration <END>
<BEG> param maxiterations param tolerance <END>
<BEG> computes the most dominant eigen vector of a use a shifted matrix <END>
<BEG> computes the most dominant eigen vector of a use an invert shift matrix <END>
<BEG> first look for zero and then perform the implicit single step in the qr algorithm <END>
<BEG> exchanges the internal array of the diagonal element for the provided one <END>
<BEG> exchanges the internal array of the off diagonal element for the provided one <END>
<BEG> sets which submatrix be be process <END>
<BEG> checks to see if the specify off diagonal element be zero use a relative metric <END>
<BEG> performs a similar transform on a-pi <END>
<BEG> computes the eigenvalue of the 2 by 2 matrix <END>
<BEG> tells it to process the submatrix at the next split <END>
<BEG> decomposes the matrix use the qr algorithm <END>
<BEG> perform a shift in a random direction that be of the same magnitude a the element in the matrix <END>
<BEG> performs an implicit double step use the value contain in the low right hand side of the submatrix for the estimated eigenvector value <END>
<BEG> performs an implicit double step give the set of two imaginary eigenvalue provide <END>
<BEG> an orthogonal matrix that have the following property : h = q < sup > t < sup > aq param q if not null then the result will be store here <END>
<BEG> returns the interal matrix where the decomposed result be stored <END>
<BEG> extracts the tridiagonal matrix find in the decomposition <END>
<BEG> decomposes the provided symmetric matrix <END>
<BEG> performs the householder operation on left and right and side of the matrix <END>
<BEG> if need declares and set up internal data structure <END>
<BEG> this be a modified version of what be find in the jama package <END>
<BEG> determines if the decomposed matrix be singular <END>
<BEG> computes the determinant from the lu decomposition <END>
<BEG> computes the q matrix from the information store in the qr matrix <END>
<BEG> < p > to decompose the matrix ' a ' it must have full rank <END>
<BEG> < p > computes the householder vector u for the first column of submatrix j <END>
<BEG> returns the combined qr matrix in a 2d array format that be column major <END>
<BEG> returns an upper triangular matrix which be the r in the qr decomposition <END>
<BEG> converts the standard row-major matrix into a column-major vector that be advantageous for this problem <END>
<BEG> < p > takes the result from the householder computation and update the ' a ' matrix < br > < br > a = i - & gamma ; u u < sup > t < sup > a < p > param w the submatrix <END>
<BEG> a = q a param a matrix that be be multiply by q <END>
<BEG> a = q < sup > t < sup > a param a matrix that be be multiply by q < sup > t < sup > <END>
<BEG> < p > in order to decompose the matrix ' a ' it must have full rank <END>
<BEG> normalizes element in ' u ' by divide by max and compute the norm2 of the normalized array u <END>
<BEG> declares the internal data structure so that it can process matrix up to the specify size <END>
<BEG> < p > adjusts the value of the q and r matrix to take in account the effect of insert a row to the ' a ' matrix at the specify location <END>
<BEG> perform a sequence of step base off of the singular value provide <END>
<BEG> given the lambda value perform an implicit qr step on the matrix <END>
<BEG> performs a similar transform on b < sup > t < sup > b-pi <END>
<BEG> computes the eigenvalue of the 2 by 2 matrix b < sup > t < sup > b <END>
<BEG> checks to see if either the diagonal element or off diagonal element be zero <END>
<BEG> it be possible for the qr algorithm to get stick in a loop because of symmetry <END>
<BEG> < p > using the decomposition <SEG> find the value of ' x ' in the linear equation below : < br > a x = b < br > where a have dimension of n by n <SEG> x and b be n by m dimension <END>
<BEG> sets the matrix 'inv ' equal to the inverse of the matrix that be decompose <END>
<BEG> only convert the b matrix and pass that onto solve <END>
<BEG> converts ' a ' into a block matrix and call seta on the block matrix solver <END>
<BEG> converts b and x into block matrix and call the block matrix solve routine <END>
<BEG> creates a block matrix the same size a a_inv <SEG> invert the matrix and copy the result back onto a_inv <END>
<BEG> an other implementation of solve that process the matrix in a different order <END>
<BEG> compute the a matrix from the q and r matrix <END>
<BEG> < p > upgrades the basic solution to the optimal 2-norm solution <END>
<BEG> performs qr decomposition on a param a not modify <END>
<BEG> specify the relative threshold use to select singular value <END>
<BEG> < p > computes the determinant of the matrix use leibniz 's formula < p > < p > a direct implementation of leibniz determinant equation <END>
<BEG> < p > a simple and inefficient algorithm for compute the determinant <END>
<BEG> computes n factorial <END>
<BEG> creates a list of all permutation for a set with n element <END>
<BEG> a straight forward transpose <END>
<BEG> < p > performs a matrix vector multiply < br > < br > c = a b < br > and < br > c = a b < sup > t < sup > < br > < br > c < sub > i < sub > = sum { j=1 : n <SEG> a < sub > ij < sub > b < sub > j < sub > } < br > < br > where a be a matrix <SEG> b be a column or transpose row vector <SEG> and c be a column vector <END>
<BEG> an alternative implementation of { link # multtransa_small } that performs well on large matrix <END>
<BEG> < p > performs a matrix vector multiply < br > < br > c = c + a < sup > t < sup > b < br > or < br > c = c < sup > t < sup > + a < sup > t < sup > b < sup > t < sup > < br > < br > c < sub > i < sub > = sum { j=1 : n <SEG> c < sub > i < sub > + a < sub > ji < sub > b < sub > j < sub > } < br > < br > where a be a matrix <SEG> b be a column or transpose row vector <SEG> and c be a column vector <END>
<BEG> < p > computes the inner product of the two vector <END>
<BEG> < p > x < sup > t < sup > ay < p > param x a vector with n element <END>
<BEG> < p > sets a & isin ; & real ; < sup > m & time ; n < sup > equal to an out product multiplication of the two vector <END>
<BEG> < p > adds to a & isin ; & real ; < sup > m & time ; n < sup > the result of an out product multiplication of the two vector <END>
<BEG> < p > performs the following operation : < br > < br > c = a + b < br > c < sub > ij < sub > = a < sub > ij < sub > + b < sub > ij < sub > < br > < p > < p > matrix c can be the same instance a matrix a and or b <END>
<BEG> < p > performs the following operation : < br > < br > a = a + b < br > a < sub > ij < sub > = a < sub > ij < sub > + b < sub > ij < sub > < br > < p > param a a matrix <END>
<BEG> performs an in-place transpose <END>
<BEG> < p > performs the following operation : < br > < br > c = a b < br > < br > c < sub > ij < sub > = & sum ; < sub > k=1 : n < sub > { a < sub > ik < sub > b < sub > kj < sub > } < p > param a the left matrix in the multiplication operation <END>
<BEG> < p > performs the following operation : < br > < br > c = a < sup > t < sup > b < br > < br > c < sub > ij < sub > = & sum ; < sub > k=1 : n < sub > { a < sub > ki < sub > b < sub > kj < sub > } < p > param a the left matrix in the multiplication operation <END>
<BEG> < p > performs matrix to vector multiplication : < br > < br > c = a b < br > < br > c < sub > i < sub > = & sum ; < sub > k=1 : n < sub > { a < sub > ik < sub > b < sub > k < sub > } < p > param a the left matrix in the multiplication operation <END>
<BEG> < p > performs the vector dot product : < br > < br > c = a b < br > < br > c > = & sum ; < sub > k=1 : n < sub > { b < sub > k < sub > a < sub > k < sub > } < p > param a the left vector in the multiplication operation <END>
<BEG> sets all the diagonal element equal to one and everything else equal to zero <END>
<BEG> inverts matrix ' a ' use minor matrix and store the result in 'inv ' <END>
<BEG> computes the determinant use minor matrix <END>
<BEG> < p > this compute the trace of the matrix : < br > < br > trace = & sum ; < sub > i=1 : n < sub > { a < sub > ii < sub > } < p > < p > the trace be only define for square matrix <END>
<BEG> < p > extracts all diagonal element from 'input ' and place them inside the 'out ' vector <END>
<BEG> < p > returns the value of the element in the matrix that have the large value < br > < br > max { a < sub > ij < sub > } for all i and j < br > < p > param a a matrix <END>
<BEG> < p > returns the absolute value of the element in the matrix that have the large absolute value < br > < br > max { |a < sub > ij < sub > | } for all i and j < br > < p > param a a matrix <END>
<BEG> < p > performs the an element by element multiplication operation : < br > < br > a < sub > ij < sub > = a < sub > ij < sub > b < sub > ij < sub > < br > < p > param a the left matrix in the multiplication operation <END>
<BEG> < p > performs an in-place element by element scalar multiplication < br > < br > a < sub > ij < sub > = & alpha ; a < sub > ij < sub > < p > param a the matrix that be to be scale <END>
<BEG> < p > performs an element by element scalar multiplication < br > < br > b < sub > ij < sub > = & alpha ; a < sub > ij < sub > < p > param alpha the amount each element be multiply by <END>
<BEG> < p > performs an in-place element by element scalar division < br > < br > a < sub > ij < sub > = a < sub > ij < sub > & alpha ; < p > param a the matrix whose element be to be divide <END>
<BEG> < p > changes the sign of every element in the matrix < br > < br > a < sub > ij < sub > = -a < sub > ij < sub > < p > param a a matrix <END>
<BEG> returns true if the provided matrix be have a value of 1 along the diagonal element and zero along all the other element <END>
<BEG> used to get a reference to the internal data <END>
<BEG> changes the internal array reference <END>
<BEG> sets the value of this matrix to be the same a the value of the provide matrix <END>
<BEG> returns the value of the matrix at the specify internal array index <END>
<BEG> sets the element 's value at the specified index <END>
<BEG> < p > adds the specify value to the internal data array at the specified index < br > < br > equivalent to : this data [ index ] += val ; < p > < p > intended for use in highly optimize code <END>
<BEG> which element in the submatrix be return by next return submatrix element 's index <END>
<BEG> true if it be iterate through the matrix by row and false if by column <END>
<BEG> creates a new iterator for traverse through a submatrix inside this matrix <END>
<BEG> assigns the value of 'this ' matrix to be the same a ' a ' <END>
<BEG> < p > returns a { link org ejml alg dense decomposition chol choleskydecompositionldl_d64 } that have be optimize for the specified matrix size <END>
<BEG> < p > returns an { link eigendecomposition } which be specialize for symmetric matrix or the general problem <END>
<BEG> < p > computes a metric which measure the the quality of an eigen value decomposition <END>
<BEG> checks to see if the pass in tridiagonal decomposition be of the appropriate type for the matrix of the provided size <END>
<BEG> a simple convinience function that decompose the matrix but automatically check the input ti make sure be not be modify <END>
<BEG> creates a general purpose solver <END>
<BEG> creates a solver for linear system <END>
<BEG> creates a good general purpose solver for over determined system and return the optimal least-squares solution <END>
<BEG> creates a solver for symmetric positive definite matrix <END>
<BEG> < p > returns a solver which use the pseudo inverse <END>
<BEG> create a solver which can efficiently add and remove element instead of recomputing everything from scratch <END>
<BEG> < p > computes the matrix multiplication inner product : < br > < br > c = a < sup > t < sup > a < br > < br > c < sub > ij < sub > = & sum ; < sub > k=1 : n < sub > { a < sub > ki < sub > a < sub > kj < sub > } < p > < p > is faster than use a generic matrix multiplication by take advantage of symmetry <END>
<BEG> < p > performs the following operation : < br > < br > c = c + a b < br > c < sub > ij < sub > = c < sub > ij < sub > + & sum ; < sub > k=1 : n < sub > { a < sub > ik < sub > b < sub > kj < sub > } < p > param a the left matrix in the multiplication operation <END>
<BEG> < p > performs the following operation : < br > < br > c = c + a < sup > t < sup > b < br > c < sub > ij < sub > = c < sub > ij < sub > + & sum ; < sub > k=1 : n < sub > { a < sub > ki < sub > b < sub > kj < sub > } < p > param a the left matrix in the multiplication operation <END>
<BEG> < p > solves for x in the following equation : < br > < br > a x = b < p > < p > if the system could not be solve then false be return <END>
<BEG> < p > performs an in-place transpose < p > < p > for square matrix the transpose be truly in-place and do not require additional memory <END>
<BEG> < p > performs a matrix inversion operation on the specify matrix and store the result in the same matrix < br > < br > a = a < sup > -1 < sup > < p > < p > if the algorithm could not invert the matrix then false be return <END>
<BEG> < p > computes the moore-penrose pseudo-inverse : < br > < br > pinv a = a < sup > t < sup > a < sup > -1 < sup > a < sup > t < sup > < br > or < br > pinv a = a < sup > t < sup > aa < sup > t < sup > < sup > -1 < sup > < br > < p > < p > internally it use { link org ejml alg dense linsol svd solvepseudoinversesvd } to compute the inverse <END>
<BEG> < p > creates an identity matrix of the specified size < br > < br > a < sub > ij < sub > = 0 if i & ne ; j < br > a < sub > ij < sub > = 1 if i = j < br > < p > param width the width and height of the identity matrix <END>
<BEG> < p > the kronecker product of two matrix be define a : < br > c < sub > ij < sub > = a < sub > ij < sub > b < br > where c < sub > ij < sub > be a sub matrix inside of c & isin ; & real ; < sup > m k & time ; n l < sup > <SEG> a & isin ; & real ; < sup > m & time ; n < sup > <SEG> and b & isin ; & real ; < sup > k & time ; l < sup > <END>
<BEG> inserts matrix 'src ' into matrix 'dest ' with the 0<SEG>0 of src at row <SEG> col in dest <END>
<BEG> < p > computes the sum of the absolute value all the element in the matrix : < br > < br > sum i=1 : m <SEG> j=1 : n ; |a < sub > ij < sub > | < p > param mat an m by n matrix <END>
<BEG> < p > performs the following operation : < br > < br > a = a + & beta ; b < br > a < sub > ij < sub > = a < sub > ij < sub > + & beta ; b < sub > ij < sub > < p > param beta the number that matrix ' b ' be multiply by <END>
<BEG> < p > performs the following operation : < br > < br > c = a + & beta ; b < br > c < sub > ij < sub > = a < sub > ij < sub > + & beta ; b < sub > ij < sub > < br > < p > < p > matrix c can be the same instance a matrix a and or b <END>
<BEG> < p > performs the following operation : < br > < br > c = & alpha ; a + & beta ; b < br > c < sub > ij < sub > = & alpha ; a < sub > ij < sub > + & beta ; b < sub > ij < sub > < br > < p > < p > matrix c can be the same instance a matrix a and or b <END>
<BEG> < p > performs an in-place scalar addition : < br > < br > a = a + val < br > a < sub > ij < sub > = a < sub > ij < sub > + val < br > < p > param a a matrix <END>
<BEG> < p > performs the following subtraction operation : < br > < br > a = a - b < br > a < sub > ij < sub > = a < sub > ij < sub > - b < sub > ij < sub > < p > param a a matrix <END>
<BEG> < p > puts the augmented system matrix into reduce row echelon form rref <END>
<BEG> generic <SEG> but slow <SEG> conversion function <END>
<BEG> converts { link fixedmatrix2x2_64f } into { link densematrix64f } <END>
<BEG> converts { link densematrix64f } into { link fixedmatrix2x2_64f } param input input matrix <END>
<BEG> performs a variety of test to see if the provided matrix be a valid covariance matrix <END>
<BEG> makes a draw on the distribution <END>
<BEG> computes the likelihood of the random draw return the likelihood <END>
<BEG> < p > given matrix a and an eigen vector of a <SEG> compute the correspond eigen value <END>
<BEG> < p > given an eigenvalue it compute an eigenvector use inverse iteration : < br > for i=1 : max { < br > a - & mu ; i z < sup > i < sup > = q < sup > i-1 < sup > < br > q < sup > i < sup > = z < sup > i < sup > ||z < sup > i < sup > || < br > & lambda ; < sup > i < sup > = q < sup > i < sup > < sup > t < sup > a q < sup > i < sup > < br > } < br > < p > < p > note : if there be another eigenvalue that be very similar to the provide one then there be a chance of it converge towards that one instead <END>
<BEG> < p > generates a bound for the large eigen value of the provided matrix use perron-frobenius theorem <END>
<BEG> < p > a diagonal matrix where real diagonal element contain a real eigenvalue <END>
<BEG> < p > puts all the real eigenvectors into the column of a matrix <END>
<BEG> < p > checks to see if a and b have the same shape <END>
<BEG> < p > checks to see if the matrix have the specify number of row and column <END>
<BEG> < p > checks to see if each element in the matrix be within tolerance of each other and countable : < p > < p > the two matrix be identical with in tolerance if : < br > |a < sub > ij < sub > - b < sub > ij < sub > | & le ; tol < p > < p > the test will fail if any element in either matrix be nan or infinite <END>
<BEG> < p > checks to see if the transpose of b be equal to a and countable : < p > < p > |a < sub > ij < sub > - b < sub > ji < sub > | & le ; tol < p > < p > the test will fail if any element in either matrix be nan or infinite <END>
<BEG> checks to see if any element in the matrix be nan <END>
<BEG> checks to see if any element in the matrix be nan of infinite <END>
<BEG> checks to see if the matrix be a vector or not <END>
<BEG> < p > checks to see if the matrix be positive semidefinite : < p > < p > x < sup > t < sup > a x > = 0 < br > for all x where x be a non-zero vector and a be a symmetric matrix <END>
<BEG> checks to see if it be a square matrix <END>
<BEG> < p > checks to see if a matrix be skew symmetric with in tolerance : < br > < br > -a = a < sup > t < sup > < br > or < br > |a < sub > ij < sub > + a < sub > ji < sub > | & le ; tol < p > param a the matrix be test <END>
<BEG> checks to see if the two matrix be inverse of each other <END>
<BEG> < p > checks to see if each element in the two matrix be equal : a < sub > ij < sub > == b < sub > ij < sub > < p > < p > note : if any of the element be nan then false be return <END>
<BEG> < p > checks to see if each correspond element in the two matrix be within tolerance of each other or have the some symbolic meaning <END>
<BEG> < p > checks to see if a matrix be orthogonal or isometric <END>
<BEG> < p > checks to see if the two matrix be the negative of each other : < br > < br > a < sub > ij < sub > = -b < sub > ij < sub > < p > param a first matrix <END>
<BEG> < p > checks to see if a matrix be upper triangular or hessenberg <END>
<BEG> computes the rank of a matrix use the specify tolerance <END>
<BEG> creates a window visually show the matrix 's state <END>
<BEG> < p > the condition number of a matrix be use to measure the sensitivity of the linear system < b > ax=b < b > <END>
<BEG> < p > the condition p = 2 number of a matrix be use to measure the sensitivity of the linear system < b > ax=b < b > <END>
<BEG> < p > this implementation of the frobenius norm be a straight forward implementation and can be susceptible for overflow underflow issue <END>
<BEG> < p > computes the frobenius matrix norm : < br > < br > normf = sqrt { & sum ; < sub > i=1 : m < sub > & sum ; < sub > j=1 : n < sub > { a < sub > ij < sub > < sup > 2 < sup > } } < p > < p > this be equivalent to the element wise p=2 norm <END>
<BEG> < p > element wise p-norm : < br > < br > norm = { & sum ; < sub > i=1 : m < sub > & sum ; < sub > j=1 : n < sub > { |a < sub > ij < sub > | < sup > p < sup > } } < sup > 1 p < sup > < p > < p > this be not the same a the induced p-norm use on matrix <SEG> but be the same a the vector p-norm <END>
<BEG> same a { link # elementp } but run faster by not mitigate overflow underflow relate problem <END>
<BEG> computes either the vector p-norm or the induced matrix p-norm depend on a be a vector or a matrix respectively <END>
<BEG> an unsafe but fast version of { link # normp } that call routine which be faster but more prone to overflow underflow problem <END>
<BEG> computes the p=1 norm <END>
<BEG> < p > computes the induced p = 1 matrix norm < br > < br > ||a|| < sub > 1 < sub > = max j=1 to n ; sum i=1 to m ; |a < sub > ij < sub > | < p > param a matrix <END>
<BEG> < p > induced matrix p = infinity norm < br > < br > ||a|| < sub > & # 8734 ; < sub > = max i=1 to m ; sum j=1 to n ; |a < sub > ij < sub > | < p > param a a matrix <END>
<BEG> < p > creates a randomly generate set of orthonormal vector <END>
<BEG> < p > creates a random orthogonal or isometric matrix <SEG> depend on the number of row and column <END>
<BEG> returns a matrix where all the element be select independently from a uniform distribution between 0 and 1 inclusive <END>
<BEG> < p > adds random value to each element in the matrix from an uniform distribution < br > < br > a < sub > ij < sub > = a < sub > ij < sub > + u min <SEG> max < br > < p > param a the matrix who be to be randomize <END>
<BEG> < p > sets each element in the matrix to a value drawn from an uniform distribution from 'min ' to 'max ' inclusive <END>
<BEG> creates a random symmetric positive definite matrix <END>
<BEG> sets the provide square matrix to be a random symmetric matrix whose value be select from an uniform distribution from min to max <SEG> inclusive <END>
<BEG> returns the reader that it be use internally <END>
<BEG> reads in a densematrix64f from the io stream <END>
<BEG> reads in a densematrix64f from the io stream where the user specify the matrix dimension <END>
<BEG> checks to see if all the provide matrix be the expected size for an svd <END>
<BEG> extracts the rank of a matrix use a preexisting decomposition <END>
<BEG> < p > creates a reflector from the provide vector < br > < br > q = i - & gamma ; u u < sup > t < sup > < br > & gamma ; = 2 ||u|| < sup > 2 < sup > < p > < p > in practice { link org ejml alg dense mult vectorvectormult # householder double <SEG> org ejml data d1matrix64f <SEG> org ejml data d1matrix64f <SEG> org ejml data d1matrix64f } multhouseholder } should be use for performance reason since there be no need to calculate q explicitly <END>
<BEG> < p > creates a reflector from the provide vector and gamma < br > < br > q = i - & gamma ; u u < sup > t < sup > < br > < p > < p > in practice { link org ejml alg dense mult vectorvectormult # householder double <SEG> org ejml data d1matrix64f <SEG> org ejml data d1matrix64f <SEG> org ejml data d1matrix64f } multhouseholder } should be use for performance reason since there be no need to calculate q explicitly <END>
<BEG> creates a copy of a matrix but swap the row a specify by the order array <END>
<BEG> copies just the upper or low triangular portion of a matrix <END>
<BEG> < p > computes the p=1 p-norm of the difference between the two matrices : < br > < br > & sum ; < sub > i=1 : m < sub > & sum ; < sub > j=1 : n < sub > | a < sub > ij < sub > - b < sub > ij < sub > | < br > < br > where |x| be the absolute value of x <END>
<BEG> < p > performs the following operation : < br > < br > b = a + & alpha ; i < p > param a a square matrix <END>
<BEG> < p > extracts a row or column vector from matrix a <END>
<BEG> takes a matrix and split it into a set of row or column vector <END>
<BEG> < p > creates a pivot matrix that exchange the row in a matrix : < br > a ' = p a < br > < p > < p > for example <SEG> if element 0 in 'pivots ' be 2 then the first row in a ' will be the 3rd row in a <END>
<BEG> computes the product of the diagonal element <END>
<BEG> computes the quality of a triangular matrix <SEG> where the quality of a matrix be define in { link org ejml interface linsol linearsolver # quality } <END>
<BEG> sums up the square of each element in the matrix <END>
<BEG> < p > returns a matrix which be the result of matrix multiplication : < br > < br > c = a b < br > < br > where c be the returned matrix <SEG> a be this matrix <SEG> and b be the pass in matrix <END>
<BEG> < p > returns the result of matrix addition : < br > < br > c = a + b < br > < br > where c be the returned matrix <SEG> a be this matrix <SEG> and b be the pass in matrix <END>
<BEG> < p > performs a matrix addition and scale operation < br > < br > c = a + & beta ; b < br > < br > where c be the returned matrix <SEG> a be this matrix <SEG> and b be the pass in matrix <END>
<BEG> computes the dot product a k a <END>
<BEG> < p > returns the result of scale each element by 'val ' : < br > b < sub > i <SEG> j < sub > = val a < sub > i <SEG> j < sub > < p > see commonops # scale double <SEG> org ejml data d1matrix64f param val the multiplication factor <END>
<BEG> < p > returns the result of divide each element by 'val ' : b < sub > i <SEG> j < sub > = a < sub > i <SEG> j < sub > val < p > see commonops # divide double <SEG> org ejml data d1matrix64f param val divisor <END>
<BEG> < p > returns the inverse of this matrix < br > < br > b = a < sup > -1 < sup > < br > < p > < p > if the matrix could not be invert then singularmatrixexception be throw <END>
<BEG> < p > computes the moore-penrose pseudo-inverse < p > return inverse compute use the pseudo inverse <END>
<BEG> < p > solves for x in the following equation : < br > < br > x = a < sup > -1 < sup > b < br > < br > where ' a ' be this matrix and ' b ' be an n by p matrix <END>
<BEG> < p > sets all the element in this matrix equal to the specify value < br > < br > a < sub > ij < sub > = val < br > < p > see commonops # fill org ejml data d1matrix64f <SEG> double param val the value each element be set to <END>
<BEG> < p > assigns consecutive element inside a row to the provided array < br > < br > a row <SEG> offset : offset + value length = value < p > param row the row that the array be to be write to <END>
<BEG> returns the value of the matrix at the specified index of the 1d row major array <END>
<BEG> creates and return a matrix which be idential to this one <END>
<BEG> < p > converts the array into a string format for display purpose <END>
<BEG> < p > creates a new simplematrix which be a submatrix of this matrix <END>
<BEG> < p > extracts a row or column from this matrix <END>
<BEG> < p > extracts the diagonal from this matrix and return them inside a column vector <END>
<BEG> computes a full singular value decomposition svd of this matrix with the eigenvalue order from large to smallest <END>
<BEG> computes the svd in either compact format or full format <END>
<BEG> returns the eigen value decomposition evd of this matrix <END>
<BEG> copy matrix b into this matrix at location insertrow <SEG> insertcol <END>
<BEG> < p > returns a matrix which be the result of an element by element multiplication of 'this ' and ' b ' : c < sub > i <SEG> j < sub > = a < sub > i <SEG> j < sub > b < sub > i <SEG> j < sub > < p > param b a simple matrix <END>
<BEG> < p > loads a new matrix from a serialized binary file <END>
<BEG> returns true of the specify matrix element be valid element inside this matrix <END>
<BEG> prints the number of row and column in this matrix <END>
<BEG> returns the underlying decomposition that this be a wrapper around <END>
<BEG> returns the index of the eigenvalue which have the large magnitude <END>
<BEG> < p > creates a new simplematrix with random element draw from a uniform distribution from minvalue to maxvalue <END>
<BEG> < p > returns the orthogonal ' u ' matrix <END>
<BEG> returns a diagonal matrix with the singular value <END>
<BEG> give a string of number it return a densematrix <END>
<BEG> returns true if the give index be within the band <END>
<BEG> checks that the index be within the band <END>
<BEG> checks the pass row and column index <END>
<BEG> checks that a matrix inversion be legal for the give argument <END>
<BEG> checks that the size of this matrix and the give conform <END>
<BEG> checks that the matrix may be transpose <END>
<BEG> checks that this matrix can be transpose into the give matrix <END>
<BEG> returns the large element of the passed array <END>
<BEG> checks for conformant size <END>
<BEG> computes < code > a\b < code > <SEG> overwrite < code > b < code > <END>
<BEG> computes < code > a < sup > t < sup > \b < code > <SEG> overwrite < code > b < code > <END>
<BEG> solves for < code > b < code > <SEG> overwrite it on return <END>
<BEG> return the netlib character version of this designation <SEG> for use with f2j <END>
<BEG> applies the givens rotation to two element in a matrix column param h matrix to apply to param column column index param i1 row index of first element param i2 row index of second element <END>
<BEG> returns < code > true < code > if the matrix be in coordinate format <SEG> else < code > false < code > <END>
<BEG> returns < code > true < code > if the matrix do not store any number <SEG> else < code > false < code > <END>
<BEG> reads the matrix info for the matrix market exchange format <END>
<BEG> checks if a matrix market header be present % % matrixmarket return true if a header be find <SEG> else false throw ioexception <END>
<BEG> reads all the comment line start with ' % ' <END>
<BEG> reads in the size of a matrix <END>
<BEG> reads in the size of an array matrix <END>
<BEG> reads the array data <END>
<BEG> reads a pattern matrix <END>
<BEG> prints the matrix info <END>
<BEG> prints the vector size <END>
<BEG> prints an array to the underlying stream <END>
<BEG> prints the coordinate format to the underlying stream <END>
<BEG> < code > max 1 <SEG> m < code > provide a a convenience for 'leading dimension ' calculation <END>
<BEG> returns a dense array contain a copy of the give vector <END>
<BEG> returns the identity matrix of the give size param size number of row column of the matrix return matrix of the give size <SEG> with one on the main diagonal <END>
<BEG> populates a vector with random number draw from a uniform distribution between 0 and 1 param x vector to populate <END>
<BEG> returns a view into the give matrix <END>
<BEG> creates a continuous linear index <END>
<BEG> finds the number of non-zero entry on each row <END>
<BEG> finds the number of diagonal below the main diagonal <END>
<BEG> sets the select row of < code > a < code > equal zero <SEG> and put < code > diagonal < code > on the diagonal of those row <END>
<BEG> returns the orthogonal part of the factorization <END>
<BEG> checks size of input data for { link # solve matrix <SEG> vector <SEG> vector } <END>
<BEG> solve the eigensystem for the number of eigenvalue request <END>
<BEG> searches for a key in a sorted array <SEG> and return an index to an element which be great than or equal key <END>
<BEG> sets the eigenvalue estimate <END>
<BEG> returns the column pointer <END>
<BEG> returns the diagonal offset <END>
<BEG> sets maximum number of iteration to permit param maxiter maximum number of iteration <END>
<BEG> sets the relative tolerance param rtol relative convergence tolerance to initial residual <END>
<BEG> sets the give column equal the pass vector <END>
<BEG> tries to store the matrix as compactly a possible <END>
<BEG> sets the restart parameter param restart gmres iteration be restart after this number of iteration <END>
<BEG> returns final compute residual <END>
<BEG> sets the norm of the right hand side vector param normb norm of the vector b <END>
<BEG> gets the eigenvectors <SEG> if available <END>
<BEG> true if the eigenvectors have be compute <END>
<BEG> determines if a file or folder should be select <END>
<BEG> determines whether the file should be select <END>
<BEG> sets the root uri of the file system <END>
<BEG> checks if option exists <END>
<BEG> checks the name setting specify <END>
<BEG> gets name option a byte <END>
<BEG> throws a filesystemexception when the give object be null <END>
<BEG> retrieves error code of the exception <END>
<BEG> retrieves array of complementary info context <END>
<BEG> returns true if file of this type may contain other file <END>
<BEG> returns true if file of this type may have attribute <END>
<BEG> copies the content from a source file to a destination file <END>
<BEG> checks to see if the file name start with the prefix <END>
<BEG> checks to see if the file name match one of the regular expression <END>
<BEG> checks to see if the file be a symbolic link <END>
<BEG> checks to see if the file name match one of the wildcards <END>
<BEG> checks a file name to see if it match the specified wildcard matcher allow control over case-sensitivity <END>
<BEG> returns a composed { code consumer } that performs <SEG> in sequence <SEG> this operation follow by the { code after } operation <END>
<BEG> gets the singleton builder <END>
<BEG> sets the user authenticator to get authentication information <END>
<BEG> see # setuserauthenticator param opt the filesystemoptions <END>
<BEG> resolves a uri <SEG> relative to base file <END>
<BEG> find the scheme for the provider of a layer file system <END>
<BEG> returns an attribute of the package contain the resource <END>
<BEG> returns the data for this resource a a byte array <END>
<BEG> return an instance of fileobject which this fileoperation be operate on <END>
<BEG> add new fileoperation to list of known operation <END>
<BEG> returns the absolute path of the file <SEG> relative to the root of the file system that the file belongs to <END>
<BEG> find the root of the file system <END>
<BEG> returns the absolute uri of the file <END>
<BEG> converts a file name to a relative name <SEG> relative to this file name <END>
<BEG> returns the root uri of the file system this file belong to <END>
<BEG> returns the depth of this file name <SEG> within it file system <END>
<BEG> returns the extension of this file name <END>
<BEG> determines if another file name be an ancestor of this file name <END>
<BEG> returns the requested or current type of this name <END>
<BEG> sets the type of this file e g <END>
<BEG> checks whether a path fit in a particular scope of another path <END>
<BEG> compares two fileobjects ignore case <END>
<BEG> vfs-210 if gettype ! = filetype imaginary & & ! gettype hascontent { throw new filesystemexception vfs provider write-not-file error <SEG> name ; } if ! iswriteable { throw new filesystemexception vfs provider write-read-only error <SEG> name ; } <END>
<BEG> returns the root uri specify for this file system <END>
<BEG> returns an input stream for read the content <END>
<BEG> returns an output stream for write the content in append mode <END>
<BEG> writes this content to another filecontent <END>
<BEG> attaches or detach the target file <END>
<BEG> int getstate { return state ; } void setstate int state { this state = state ; } <END>
<BEG> returns the user name part of this name <END>
<BEG> returns the default port for this file name <END>
<BEG> appends query string to the uri <END>
<BEG> returns the jar manifest <END>
<BEG> retrieve a instance to this parser <END>
<BEG> factory method for create name instance <END>
<BEG> param content the buffer <END>
<BEG> resize the buffer param newsize the new buffer size <END>
<BEG> non-javadoc see java io dataoutput # write int <END>
<BEG> non-javadoc see org apache common vfs2 randomaccesscontent # getfilepointer <END>
<BEG> non-javadoc see org apache common vfs2 randomaccesscontent # seek long <END>
<BEG> build a long from first 8 byte of the array <END>
<BEG> build a 8-byte array from a long <END>
<BEG> encodes and append a string to a stringbuilder <END>
<BEG> decodes the string <END>
<BEG> removes % nn encoding from a string <END>
<BEG> converts special character to their % nn value <END>
<BEG> extracts the first element of a path <END>
<BEG> normalises the separator in a name <END>
<BEG> normalises a path <END>
<BEG> deletes all data store within this authenticator <END>
<BEG> this class can be call with encrypt password a the argument where encrypt be a literal and password be replace with the clear text password to be encrypt <END>
<BEG> gets access to the base object even if decorate <END>
<BEG> gets the content of a file object <SEG> a a byte array <END>
<BEG> checks if the give fileobject be instance of give class argument <END>
<BEG> reads the give file into a new give { link properties } <END>
<BEG> returns 0 if the stream be at eof <SEG> else the underlie inputstream will be query <END>
<BEG> gets the number of byte read by this input stream <END>
<BEG> param b the character to write <END>
<BEG> param b the byte array <END>
<BEG> check if file be still open <END>
<BEG> locates an osfamily by name case-insensitive <END>
<BEG> cleans up the data in the uerauthenticationdata null-safe <END>
<BEG> converts the give data to a string null-safe <END>
<BEG> check if url param be already vfs url <END>
<BEG> add a jar suffix param suffix the suffix return true when add throw illegalargumentexception for a null suffix <END>
<BEG> get the li of jar suffix return the list of suffix <END>
<BEG> whether this be an archive param name the name return true when an archive throw illegalargumentexception for a null name <END>
<BEG> if the filename match any string in the prefix <SEG> suffix <SEG> or match array <SEG> return false <END>
<BEG> get the matched file return the matched file <END>
<BEG> accept any file that end with one of the filter suffix <END>
<BEG> get protocol name length <END>
<BEG> whether to visit leaf only < p > default : false return the visit leave only <END>
<BEG> set the leaf only <END>
<BEG> whether to recurse into the non-leaf file < p > <END>
<BEG> get the recurse filter <END>
<BEG> whether to include the root of the visit < p > default : false return the includeroot <END>
<BEG> whether to ignore individual error < p > default : false return the ignoreerrors <END>
<BEG> return get jvm pid <END>
<BEG> convert a medium type express a string into a { link mediatype } <END>
<BEG> convert one or more medium type express a string into a { link mediatype } <END>
<BEG> return map contain all request attribute <END>
<BEG> return return the integer value of this status code <END>
<BEG> return true <SEG> for status code & gt ; = 400 <END>
<BEG> returns the asset forthe specifid id <END>
<BEG> write to an appendable <END>
<BEG> renders an iterable of { link compilationerror } in the specify appendable <END>
<BEG> a simplistic implementation <SEG> it may not handle all case but it should handle enough <END>
<BEG> parse a dot separate name <END>
<BEG> create a name from the specified class type argument <END>
<BEG> returns the name identifier or null when the name be empty <END>
<BEG> resolve a path with respect to this name and return an absolute path <END>
<BEG> returns the common prefix between this qualify name and the provide qualify name <END>
<BEG> returns the path directory a a name <END>
<BEG> returns the path extension <END>
<BEG> returns the path simple name : the raw name follow by the extension <END>
<BEG> decode a single char <END>
<BEG> append a segment to the path <END>
<BEG> append a query parameter to the parameter set <END>
<BEG> reset the writer for reuse <END>
<BEG> perform the processor initialization <END>
<BEG> we subclass this in order to have the correct name in the stack trace <END>
<BEG> decode the message key and return a corresponding message code object <END>
<BEG> returns the source path <SEG> this may return null <END>
<BEG> resolve a resource from the provide context and key <END>
<BEG> load a service <SEG> this be a replacement method for { link serviceloader # load class <SEG> classloader } <END>
<BEG> returns the annotation member if present <SEG> otherwise the default value <END>
<BEG> get an annotation state from the specify element and annotation type element <SEG> or null when it can not be find <END>
<BEG> returns the plugin descriptor or null <END>
<BEG> encapsulate application descriptor load from an application name <END>
<BEG> associate a resource with a physical path in the application <END>
<BEG> remove a resource association from the application <END>
<BEG> resolve a relative resource for this application <SEG> this method do not modify the current application <END>
<BEG> a method match the filter when it have the render phase and the name < code > index < code > <END>
<BEG> a method match the filter when it match the phase and the method id <END>
<BEG> a method match the filter when it match the type name <SEG> the method name and contain all the parameter <END>
<BEG> returns the list of bean to install <END>
<BEG> compute and return the { link element } reference this template <END>
<BEG> compute the reference to this template <END>
<BEG> returns a builder match any expression <END>
<BEG> set a boolean property to false <END>
<BEG> the exact string of the parameter such a { id : [ 0-9 ] + } in { id : [ 0-9 ] + } return the parameter token <END>
<BEG> parse a path such a user { id : [ 0-9 ] + } email { addr } for the name parameter <END>
<BEG> param map the data to encode <END>
<BEG> constant time for same length string comparison <SEG> to prevent timing attack <END>
<BEG> a http content type should contain a character set like application json ; charset=utf-8 <END>
<BEG> parse a duration from string to second <END>
<BEG> this setter be only use by validationimpl to keep backward compatibility between ninja 5 8 0 and 6 x <END>
<BEG> encodes the specified cooky into a single cookie header value <END>
<BEG> create a path to targetpath that 's relative to the give startpath <END>
<BEG> create a canonical path that do not contain parent directory <SEG> current directory <SEG> or superfluous directory separator <END>
<BEG> gets the stack trace from a throwable a a string <END>
<BEG> constructs a tuple of a <SEG> b param a the a value param b the b value param < a > a 's type param < b > b 's type return the tuple <END>
<BEG> constructs a tuple of a <SEG> b <SEG> c param a the a value param b the b value param c the c value param < a > a 's type param < b > b 's type param < c > c 's type return the tuple <END>
<BEG> constructs a tuple of a <SEG> b <SEG> c <SEG> d param a the a value param b the b value param c the c value param d the d value param < a > a 's type param < b > b 's type param < c > c 's type param < d > d 's type return the tuple <END>
<BEG> constructs a tuple of a <SEG> b <SEG> c <SEG> d <SEG> e param a the a value param b the b value param c the c value param d the d value param e the e value param < a > a 's type param < b > b 's type param < c > c 's type param < d > d 's type param < e > e 's type return the tuple <END>
<BEG> checks if one { code class } can be assign to a variable of another { code class } <END>
<BEG> converts the specify primitive class object to it correspond wrapper class object <END>
<BEG> returns whether a { link member } be accessible <END>
<BEG> xxx default access superclass workaround <END>
<BEG> compares the relative fitness of two methods in term of how well they match a set of runtime parameter type <SEG> such that a list order by the result of the comparison would return the best match first least <END>
<BEG> returns an accessible method that be <SEG> one that can be invoke via reflection that implement the specified method <END>
<BEG> return the key part of this entry <END>
<BEG> directly validate simple field <SEG> call completevalidation on definition field <END>
<BEG> empty implementation so that all subclass do not need to implement this method if they have no local validation to perform <END>
<BEG> this element be use to define a set of workflowpropertygroups <SEG> which be use to specify which document property should be serialize during the document serialization process <END>
<BEG> return exportkey associate with this instance <END>
<BEG> if the give map be not null <SEG> add the exportmap 's exportkey and exportdata a a key <SEG> value pair to this map <END>
<BEG> adds the give key <SEG> value pair to this map param key param value <END>
<BEG> associates the give string with the give map value <END>
<BEG> masks a data value with the configured maskformatter ; param value of the object return string value of the masked object <END>
<BEG> param maskformatter instance to be use for mask field value <END>
<BEG> param maskformatterclass element be use when a custom mask algorithm be desire <END>
<BEG> specify the string that will be show instead of the actual value when mask <END>
<BEG> sets the type of information be store by the property <END>
<BEG> retrieves the type of information be store <END>
<BEG> the value type class or primitive type of the be attribute return the value type <END>
<BEG> returns true if valuetype <SEG> type <SEG> and name match param obj return true if valuetype <SEG> type <SEG> and name match <END>
<BEG> sets the class represent by the defined tag <END>
<BEG> retrieves the class represent by the tag <END>
<BEG> sets the default parent for the associated tag <END>
<BEG> retrieves the bean parent store for the represent tag <END>
<BEG> retrieves the class of the bean define by the xml element <END>
<BEG> attributename be the name of a reference object that must exist and not be null <END>
<BEG> returns whether this attribute should appear in the search criterion return the showattributeinsearchcriteria <END>
<BEG> sets whether this attribute should appear in the search criterion param showattributeinsearchcriteria the showattributeinsearchcriteria to set <END>
<BEG> the sortattribute element defines one part of the sort key <END>
<BEG> generates a comma separate string of the allowed set of character <SEG> for the { 0 } parameter to be use within it validation message return the validationmessageparams <END>
<BEG> parameters to be use in the string retrieve by this constraint 's messagekey <SEG> order by number of the param return the validationmessageparams <END>
<BEG> setter for property name param propertyname a valid property name <END>
<BEG> parameters to be use in the string retrieve by this constraint 's messagekey return the validationmessageparams <END>
<BEG> uses the key return by { link # getpatterntypekey } to fetch the validationpattern 's regex string from the configurationservice which should not include the start ^ and end $ symbol return string regex validation string <END>
<BEG> returns a regex represent all the allow format in the system <END>
<BEG> this overridden method see org kuali rice krad datadictionary validation constraint validdatapatternconstraint # getvalidationmessageparams <END>
<BEG> initialize the constraint < p > by do initialization here <SEG> and not in a constructor <SEG> constraint be only place in memory when they be utilized < p > <END>
<BEG> provide information use to display error message to the user concern a constraint validation param errorkey - a key use to fetch an error message to show the user param errorparameters - parameter to substitute into the error message <END>
<BEG> the error key be use to retrieve a message to display to the user return the errorkey see org kuali rice core api util ricekeyconstants <END>
<BEG> check whether this object have a single constraint validation result return true if only one result find <SEG> false if not <END>
<BEG> check whether a data dictionary definition be present return true if definition be present <SEG> false otherwise <END>
<BEG> this overridden method see org kuali rice krad datadictionary datadictionarydefinition # completevalidation java lang class <SEG> java lang class <END>
<BEG> returns a list of workflow property group <SEG> which be use to determine which property should be serialize when generate rout xml return a list of { link workflowpropertygroup } object <SEG> in the order in which they be add <END>
<BEG> returns the path to the property that be serializable <SEG> relative to the { link workflowpropertygroup } that contain this object return path <END>
<BEG> the list of { link workflowproperty } object return list < workflowproperty > <END>
<BEG> setter for the base path param basepath - the base path <END>
<BEG> get the actual collection size if the collection be truncate < p > for non-truncated collection the < code > getactualsizeiftruncated < code > be zero <END>
<BEG> set the actual collection size if the collection be truncate param actualsizeiftruncated the actualsizeiftruncated to set <END>
<BEG> see org kuali rice krad uif component componentsecurity # iseditauthz <END>
<BEG> setter for { link # iseditauthz } param editauthz property value <END>
<BEG> setter for the edit authorization flag param editauthz <END>
<BEG> namespace code that should be send a permission detail when do a permission check on this field < p > when the namespace code be a detail for a permission check <SEG> this property can be configure to override the namespace derive by the system < p > return namespace code <END>
<BEG> setter for the namespace code to use for detail param namespaceattribute <END>
<BEG> component code that should be send a permission detail when do a permission check on this field < p > when the component code be a detail for a permission check <SEG> this property can be configure to override the component code derive by the system < p > return component code <END>
<BEG> id that should be send a permission detail when do a permission check on this field < p > by default they system will send the component id a a permission detail <SEG> this property can be configure to send a different id for the permission check < p > return id <END>
<BEG> setter for the id to use for detail param idattribute <END>
<BEG> setter for the map of additional permission detail param additionalpermissiondetails <END>
<BEG> indicates whether the collection group line have edit authorization and kim should be consult return true if the line have edit authorization <SEG> false if not <END>
<BEG> setter for the edit line authorization flag param editlineauthz <END>
<BEG> replaces parameter in the give css string with the corresponding parameter value give param style string with parameter to replace param parameter one or more parameter value return give string with filled parameter <END>
<BEG> indicates whether or not to perform action auth <END>
<BEG> indicates whether or not to perform line action auth <END>
<BEG> indicates whether the action field have take action authorization and kim should be consult return true if the action field have perform action authorization <SEG> false if not <END>
<BEG> indicates whether the line action field have take action authorization and kim should be consult return true if the line action field have perform action authorization <SEG> false if not <END>
<BEG> setter for the perform line action authorization flag param performlineactionauthz <END>
<BEG> attribute security instance configure or pick up for the field return attributesecurity instance <END>
<BEG> map contain the path for the component at each lifecycle phase <END>
<BEG> map of property path whose lifecycle will be run when the component be refresh <END>
<BEG> adds a new data entry to the component post data <END>
<BEG> retrieves a post data value for the component <END>
<BEG> overrides the get method to return boolean false if the key do not exist in the map <END>
<BEG> copy a list of component param < t > component type param components the list of component to copy return the copied list <END>
<BEG> mix-in copy implementation for object that implement the { link copyable } interface } param < t > copyable type param obj the object to copy <END>
<BEG> prepare a copyable object for cache by call { link copyable # preventmodification } on all copyable instance locate by a deep traversal of the object <END>
<BEG> get an instance of the give class that have previously be recycle on the same thread <SEG> if an instance of available <END>
<BEG> get an instance of the give class that have previously be recycle on the same thread <SEG> or a new instance use a default constructor if a recycled instance be not available <END>
<BEG> recycle a instance <SEG> for late retrieval in the same thread <END>
<BEG> clean all instance field <SEG> walk up the class hierarchy to the indicate super class <END>
<BEG> the href to navigate to for this suggestion return the href url <END>
<BEG> indicates whether the give class be a { link org kuali rice krad uif element header } component class <END>
<BEG> indicates whether the give class be a { org kuali rice krad uif component listaware } component class <END>
<BEG> get the href value for this url object <END>
<BEG> indicates whether the name dialog have alread be answer by the user param dialogid name of the dialog in question return true if the dialog have be answer by the user <END>
<BEG> sets the answer choose by the user when respond to the dialog param dialogid id of the dialog param answer value choose by the user <END>
<BEG> gets the text string value of the explanation input field param dialogid dialog identifier return string represent user text input enter into the dialog <END>
<BEG> retrieves the target method to redirect to when return from a lightbox param dialogid identify the dialog currently be handle return controller method to call <END>
<BEG> removes a dialog from the list of dialog use in this vew <END>
<BEG> sets the status of the dialog track record to indicate that this dialog have not yet be ask or answer <END>
<BEG> gets the map use to track dialog interaction relate to the view return a map of dialoginfo record <END>
<BEG> sets the name of the currently active dialog param currentdialogid the name of the dialog <END>
<BEG> the formkey of the form in the view param formkey the formkey to set <END>
<BEG> indicates when a session timeout occur the user should be redirect to the application home url determine by the configuration parameter 'application url ' return true if the user should be redirect to the home url <END>
<BEG> setter for indicate whether the user should be redirect to the home url on session timeout param redirecttohome <END>
<BEG> url the user should be redirect to when a session timeout occur return url to redirect user to <END>
<BEG> indicates the user should be show the timeout message view when a session timeout occur return true if the timeout view should be show on session timeout <END>
<BEG> setter to indicate the timeout view should be show on session timeout param rendertimeoutview <END>
<BEG> enables the session timeout warn dialog and timeout dialog for the view < p > when enable <SEG> a timer will be keep on the client to warn the user when their session be about to timeout <SEG> and if the timeout actually occur <END>
<BEG> setter for enable the session timeout warn dialog param enabletimeoutwarning <END>
<BEG> setter for the number of second before timeout to give a warning dialog param timeoutwarningseconds <END>
<BEG> the number of property element in this state object <END>
<BEG> removes the last added serialize property <END>
<BEG> the name of this property <SEG> relative to the parent node i e <END>
<BEG> see org kuali rice krad util documentserializer propertyserializabilitymetadata # getpathstring <END>
<BEG> marks that all primitive of this object will be serialize <END>
<BEG> interpolates a message base on parameter index <SEG> assume message be format use a $ { 0 } $ { n } syntax param message the message to be interpolate param data varargs to be use for interpolation return the interpolated message <END>
<BEG> interpolates a message which require only a single property replacement <END>
<BEG> returns a set < string > of all interpolation target field within a string <END>
<BEG> gets the property value a a string suitable for presentation to a human to edit return the property value a a string suitable for presentation to a human to edit <END>
<BEG> sets the property value by parse a give string < p > the text be compare against the configured acceptable string value for boolean true and false < p > param text the string to be parse <END>
<BEG> this overridden method see java bean propertyeditorsupport # getastext <END>
<BEG> this overridden method set the property value by parse a give string <END>
<BEG> this overridden method use the < code > org kuali rice core api datetime datetimeservice < code > to convert the date object to the display string <END>
<BEG> this overridden method convert the display string to a < code > org kuali rice core api util type kualiinteger < code > object use local currency format <END>
<BEG> this overridden method convert < code > org kuali rice core api util type kualipercent < code > object to the display string <END>
<BEG> converts the time object to the display string format <END>
<BEG> this overridden method use the < code > org kuali rice core api datetime datetimeservice < code > to convert the time stamp object to the display string <END>
<BEG> this be an expensive method <SEG> never use it when live use best at startup <END>
<BEG> tests for null or emptiness of a string <SEG> throw an { link illegalargumentexception } if one be encounter <END>
<BEG> param string any string to test for emptiness <END>
<BEG> raises a notsupportedexception for the provided class name and feature name <END>
<BEG> returns exception mapper instance use in servlet mode return servlet instance <END>
<BEG> maps the give handler to the provide exception type <END>
<BEG> wraps the filter in filterimpl param path the path param accepttype the accept type param filter the filter return the wrapped route <END>
<BEG> tells the system that spark be run from an external web application server <END>
<BEG> return true if spark be run from an external web application server <END>
<BEG> returns an element from the specify key <END>
<BEG> return the request body send by the client <END>
<BEG> used to create a request and no routematch be available <END>
<BEG> this implementation determine the underlie file or jar file <SEG> in case of a resource in a jar zip <END>
<BEG> this implementation throw a filenotfoundexception <SEG> assume that the resource can not be resolve to a url <END>
<BEG> this implementation build a uri base on the url return by { link # geturl } <END>
<BEG> this implementation throw a filenotfoundexception <SEG> assume that the resource can not be resolve to an absolute file path <END>
<BEG> this implementation read the entire inputstream to calculate the content length <END>
<BEG> this implementation always return { code null } <SEG> assume that this resource type do not have a filename <END>
<BEG> this implementation return the description of this resource <END>
<BEG> this implementation compare description string <END>
<BEG> this implementation create a classpathresource <SEG> apply the give path relative to the path of the underlie resource of this descriptor <END>
<BEG> this implementation return a description that include the class path location <END>
<BEG> this implementation compare the underlying class path location <END>
<BEG> this implementation return a url for the underlying class path resource <END>
<BEG> sets the body param body the body <END>
<BEG> map the route for http get request param path the path param route the route <END>
<BEG> maps a filter to be execute before any matching route param path the path param filter the filter <END>
<BEG> map the route for http get request param path the path param accepttype the accept type param route the route <END>
<BEG> maps a filter to be execute before any matching route param path the path param accepttype the accept type param filter the filter <END>
<BEG> maps a filter to be execute after any matching route even if the route throw any exception param filter the filter <END>
<BEG> map the route for http get request param path the path param accepttype the accept type param route the route param transformer the response transformer <END>
<BEG> maps one or many filter to be execute before any matching route param path the path param accepttype the accept type param filter the filter <END>
<BEG> assert a boolean expression <SEG> throw { code illegalargumentexception } if the test result be { code false } <END>
<BEG> return the default classloader to use : typically the thread context classloader <SEG> if available ; the classloader that load the classutils class will be use a fallback <END>
<BEG> given an input class object <SEG> return a string which consist of the class 's package name a a pathname <SEG> i e <SEG> all dot ' ' <END>
<BEG> get the content of an < code > inputstream < code > a a string use the default character encoding of the platform <END>
<BEG> get the content of an < code > inputstream < code > a a bytearray < p > this method buffer the input internally <SEG> so there be no need to use a < code > bufferedinputstream < code > <END>
<BEG> copy byte from an < code > inputstream < code > to char on a < code > writer < code > use the default character encoding of the platform <END>
<BEG> finds best match param support the supported type param header the header return the best match <END>
<BEG> return whether the give resource location be a url : either a special classpath pseudo url or a standard url <END>
<BEG> resolve the give resource location to a { code java net url } <END>
<BEG> resolve the give resource location to a { code java io file } <SEG> i e <END>
<BEG> determine whether the give url point to a resource in the file system <SEG> that be <SEG> have protocol file or vfs <END>
<BEG> determine whether the give url point to a resource in a jar file <SEG> that be <SEG> have protocol jar <SEG> zip <SEG> wsjar or code-source <END>
<BEG> extract the url for the actual jar file from the give url which may point to a resource in a jar file or to a jar file itself <END>
<BEG> create a uri instance for the give location string <SEG> replace space with % 20 uri encode first <END>
<BEG> set the { link urlconnection # setusecaches usecaches } flag on the give connection <SEG> prefer { code false } but leave the flag at { code true } for jnlp base resource <END>
<BEG> check whether the give string be empty <END>
<BEG> checks if the give string be not empty param str the candidate string return if the string be not empty <END>
<BEG> check that the give charsequence be neither { code null } nor of length 0 <END>
<BEG> extract the filename from the give path <END>
<BEG> returns the id of the flow definition that could not be construct <END>
<BEG> adds a new binding to this binding configuration <END>
<BEG> gets the binding with the specify name <SEG> or return null if no such binding be find <END>
<BEG> gets the converterid for the binding with the specify name <END>
<BEG> actions be not mergeable param model the model to test <END>
<BEG> actions be not mergeable param model the render action to merge into this render <END>
<BEG> merge two model element <END>
<BEG> returns the id of the state definition where the exception occur <END>
<BEG> returns the string key of the flow execution that could not be parse <END>
<BEG> returns key of the flow execution that could not be access <END>
<BEG> sets the maximum number of snapshot allow in this group <END>
<BEG> the id of the snapshot that be not find <END>
<BEG> returns a string with the name of the event for which the instance hold context <SEG> and the set of validation error <SEG> if any <END>
<BEG> gets the size of the file that be uploaded <END>
<BEG> gets a reader to read character from the uploaded file use the give charset <END>
<BEG> returns the name of the file and the content type in a string format <END>
<BEG> generated equal method which will return true if the other object be of the same type a this instance <SEG> and would produce the same user message <END>
<BEG> method that will work for this class and subclass ; return a string contain the class name <SEG> and the path to which it will send the user <END>
<BEG> uses the string message pass in a the message template and combine it with any replacement parameter provide to construct a message for display to the user <END>
<BEG> simply return the message pass in at construction time <END>
<BEG> allows subclasses to access the replacement parameter for this message <END>
<BEG> returns the name with all indexing and mapping component strip <END>
<BEG> checks for equality as efficiently a possible <END>
<BEG> uses the original name a the string representation of the class <END>
<BEG> get all the url binding on exist actionbeans that match the path <END>
<BEG> sets the format type to be use to render date a strings <END>
<BEG> sets the name format string or date pattern to use to format the date <END>
<BEG> gets the date format that will format the date <END>
<BEG> a simple formatter for enum class that always return the value of enum name <END>
<BEG> formats the supplied value a a string <END>
<BEG> converts the supplied parameter to a string use string valueof <END>
<BEG> main method that do what the class level javadoc state <END>
<BEG> sets the value at the index specify by the current node to the supply value <END>
<BEG> < p > compares two javabeans for order <END>
<BEG> sets the specify property value to the supply value <END>
<BEG> gets the value store in the map under the key specify by the current node <END>
<BEG> attempts to convert the key to from the expression node to the correct type a determine by reflection use generic to find the map key type <END>
<BEG> returns the java type of this node in the expression <END>
<BEG> returns the propertyaccessor instance that should be use to access property of this type <END>
<BEG> fetches the original 'source ' of the expression - the string value that be parse to create the propertyexpression object <END>
<BEG> performs the internal parsing of the expression and store the result in a chain of node internally <END>
<BEG> fetches the root first node in the evaluation <SEG> which can be use to traverse through the node in series <END>
<BEG> fetches the type of value that can be get set with this expression evaluation <END>
<BEG> < p > fetches the value of this expression evaluate against the bean <END>
<BEG> checks to see if the array contain any value that be non-null non empty-string value <END>
<BEG> < p > checks to see if an event be applicable give an array of event name <END>
<BEG> converts an object reference that be know to be an array into an object [ ] <END>
<BEG> < p > converts an object reference that be know to be an array into a list <END>
<BEG> converts an iterable into a list that can be navigate in way other than simple iteration <END>
<BEG> returns a new list instance contain the supplied element <END>
<BEG> retrieves end of the range <END>
<BEG> checks whether an item be contain in this range <END>
<BEG> < p > a well more concise tostring method for annotation type that yield a string that should look more like the actual usage of the annotation in a class <END>
<BEG> splits apart the input string on any whitespace and or commas <END>
<BEG> url-encodes { code value } use the utf-8 charset <END>
<BEG> encode a uri fragment a require by rfc 3986 <END>
<BEG> return the specified url or path string with the fragment part remove <END>
<BEG> adds a handler to the set of registered handler <SEG> override an exist handler if one be already register for the target type <END>
<BEG> returns the url compose thus far a a string <END>
<BEG> does nothing currently due to the fact that there be no localization support for booleans in java <END>
<BEG> overridden to return integer instance instead <END>
<BEG> converts the input string to a character by take the first character in the string and return it <END>
<BEG> validates the user input to ensure that it look like a valid credit card number <END>
<BEG> determines the type of card from the card number pass in <END>
<BEG> generated equal method that compare each field and super equal <END>
<BEG> used by stripes to tell the converter what locale the incoming text be in <END>
<BEG> returns the locale set on the object use setlocale <END>
<BEG> fetches one or more numberformat instance that can be use to parse number for the current locale <END>
<BEG> pre-processes the string to give the numberformats a good shot at parse the input <END>
<BEG> simple return the input string un-modified in any way <END>
<BEG> returns a single percentage instance of numberformat <END>
<BEG> converts the input to a subclass of number base on the targettype provide <END>
<BEG> overrides getmessagetemplate to perform a scoped search for a message template a define in the class level javadoc <END>
<BEG> generated equal method that ensure the message <SEG> field <SEG> parameter and action path be all equal <END>
<BEG> adds an error message for the field specify <END>
<BEG> synonym for put string field <SEG> validationerror error <END>
<BEG> add multiple error for a particular field <END>
<BEG> synonym for putall <END>
<BEG> replaces the list of error for a give field with the list supply <END>
<BEG> returns true if there be field-specific error present <SEG> and false if there be only global error <SEG> or no error at all <END>
<BEG> returns the name of the property this validation metadata represent <END>
<BEG> sets the trim flag of this field <END>
<BEG> sets the minimum acceptable length for property value <END>
<BEG> sets the minimum acceptable < b > value < b > for numeric property value <END>
<BEG> sets the mask which the string form of the property must match <END>
<BEG> sets the overridden typeconveter to use to convert value <END>
<BEG> sets the expression that should be use to validate value <END>
<BEG> sets the set of event for which the field in question be require <SEG> if it be at all <END>
<BEG> sets the action 's application context <END>
<BEG> gets the map of conversion error which occur when execute the action <END>
<BEG> sets the name of the current action in the actioncontext <END>
<BEG> returns a map of the httpservletrequest parameter when in a servlet environment or a generic map of parameter otherwise <END>
<BEG> sets a map of action session value <END>
<BEG> sets the ognl value stack <END>
<BEG> gets the container for this request param cont the container <END>
<BEG> todo : this a temporary solution <SEG> maybe we should consider stop inject container into bean <END>
<BEG> it will consult each individual { link textprovider } s and return true if either one of the { link textprovider } have such a < code > key < code > else false <END>
<BEG> an interceptorstackconfig object be equal with < code > o < code > only if < ul > < li > o be an interceptorstackconfig object < li > < li > both name be equal < li > < li > all of their < code > interceptormapping < code > s be equal < li > < ul > param o the give object to check return true if object match the rule <END>
<BEG> given a start node <SEG> and a destination <SEG> add an arc from the start node to the destination <END>
<BEG> removes the edge from start to dest from the graph <END>
<BEG> given two node in the graph <SEG> return whether there be an edge from the first node to the second node <END>
<BEG> tells whether the configurationprovider should reload it configuration <END>
<BEG> upon creation <SEG> the { link container } will inject static field and method into the give class <END>
<BEG> param type type of class param name name of class return true if this builder contain a mapping for the give type and name <END>
<BEG> recursively add injector for field and method from the give class to the give list <END>
<BEG> finds the { link inject } annotation in an array of annotation <END>
<BEG> gets a constructor function for a give implementation class <END>
<BEG> cancels the current { link # create object } <END>
<BEG> non-javadoc see com opensymphony xwork2 interceptor abstractinterceptor # intercept com opensymphony xwork2 actioninvocation <END>
<BEG> discovers annotate method on the action and call them accord to the workflow see com opensymphony xwork2 interceptor interceptor # intercept com opensymphony xwork2 actioninvocation <END>
<BEG> gets the held exception stack trace use { link exception # printstacktrace } <END>
<BEG> wrapper around ognl setvalue to handle type conversion for collection element <END>
<BEG> see com opensymphony xwork2 util valuestack # setvalue java lang string <SEG> java lang object <SEG> boolean <END>
<BEG> param clazz a clazz to use for read the resource bundle <END>
<BEG> get a text from the resource bundle associate with this action <END>
<BEG> gets a message base on a key use the supplied args <SEG> a define in { link java text messageformat } <SEG> or <SEG> if the message be not find <SEG> a supply default value be return <END>
<BEG> get the name bundle <END>
<BEG> < p > load all resource with a give name <SEG> potentially aggregate all result from the searched classloaders <END>
<BEG> prints the current classloader hierarchy - useful for debug <END>
<BEG> param pattern the string pattern for compare filename <END>
<BEG> builds a { link java util vector } contain strings which each name a file who 's name match the pattern set by setpattern string <END>
<BEG> param patternmatcher the patternmatcher implementation to use when compare filename <END>
<BEG> add location attribute to a set of sax attribute <END>
<BEG> returns the { link location } of an element sax flavor <END>
<BEG> returns the location of an element sax flavor <END>
<BEG> returns the uri of an element sax flavor param attrs the element 's attribute that hold the location information return the element 's uri or < code > [ unknown location ] < code > if < code > attrs < code > have no location information <END>
<BEG> returns the line number of an element sax flavor param attrs the element 's attribute that hold the location information return the element 's line number or < code > -1 < code > if < code > attrs < code > have no location information <END>
<BEG> returns the location of an element that have be process by this pipe dom flavor <END>
<BEG> returns the uri of an element dom flavor param elem the element that hold the location information return the element 's uri or < code > [ unknown location ] < code > if < code > elem < code > have no location information <END>
<BEG> returns the line number of an element dom flavor param elem the element that hold the location information return the element 's line number or < code > -1 < code > if < code > elem < code > have no location information <END>
<BEG> remove the location attribute from a dom element <END>
<BEG> builds a string representation of a location <SEG> in the < code > < em > descripton < em > - < em > uri < em > : < em > line < em > : < em > column < em > < code > format e g <END>
<BEG> parse a location string of the form < code > < em > uri < em > : < em > line < em > : < em > column < em > < code > e g <END>
<BEG> add a { link locationfinder } to the list of finder that will be query for an object 's location by { link # getlocation object <SEG> string } <END>
<BEG> get the location of an object <END>
<BEG> formats message use parameter <END>
<BEG> < p > gets the current property path but not completely <END>
<BEG> param context the context map <END>
<BEG> determines if the pattern contain any character param pattern the pattern return true if no wildcards be find <END>
<BEG> < p > translate the give < code > string < code > into a < code > int [ ] < code > represent the pattern matchable by this class <END>
<BEG> match a pattern agains a string and isolate wildcard replacement into a < code > stack < code > <END>
<BEG> get the offset of a part of an int array within a char array <END>
<BEG> convert wildcard pattern to pattern param pattern string contain wildcard pattern return compile regular expression a a pattern <END>
<BEG> clears field error map <END>
<BEG> clears action error list <END>
<BEG> clears message list <END>
<BEG> clears all error list map <END>
<BEG> clears all error and message list map <END>
<BEG> return returns the defaultmessage for the validator <END>
<BEG> return returns the configured params to set on the validator <END>
<BEG> gets the location of a property from the property file <END>
<BEG> lists all key in the property file <END>
<BEG> removes all entry from the map and remove all attribute from the servlet context <END>
<BEG> creates a set of all servlet context attribute as well a context init parameter <END>
<BEG> sets a servlet context attribute give a attribute name and value <END>
<BEG> access to this method will be restrict with the next versiob deprecate since 2 5 6 <SEG> do not use it todo : reduce access level to ` private ` <END>
<BEG> param result the result <END>
<BEG> param method the method name to call on the action <END>
<BEG> param params the extra parameter for this mapping <END>
<BEG> param extension the extension use in the request <END>
<BEG> returns a set of attribute from the http request <END>
<BEG> saves an attribute in the request <END>
<BEG> checks if the specify session attribute with the give key exists <END>
<BEG> called after the background thread determine the result code from the actioninvocation <SEG> but before the background thread be mark a do <END>
<BEG> gets the result of the background process <END>
<BEG> checks the map in the session for the key and the token <END>
<BEG> stores the defaultactioninvocation and actioncontext into the session use the provided key for load later use { link # loadinvocation } param key the name the defaultactioninvocation and actioncontext be save a param token token for check param invocation the action invocation <END>
<BEG> determine whether a give object can be make into an < code > iterator < code > param object the object to check return < code > true < code > if the object can be convert to an iterator and < code > false < code > otherwise <END>
<BEG> < ! -- start snippet : javadoc -- > < p > base class for type converter use in struts <END>
<BEG> hook to perform a fallback conversion if every default option fail <END>
<BEG> returns true if the specify ascii character be upper or low case <END>
<BEG> returns true if the specify ascii character be upper case <END>
<BEG> reset the decoder state <END>
<BEG> convert the give byte to character <END>
<BEG> returns true if the message bytes start with the specify string <END>
<BEG> returns the first instance of the give character in the give byte array between the specified start and end <END>
<BEG> param node the node return adapter to wrap the proxied node <END>
<BEG> invoked by the subclass after internal state of the object change <END>
<BEG> set the path for the cookie to be create <END>
<BEG> set how long the cookie should live <END>
<BEG> when disable <SEG> this prevent any part of the tool from render <END>
<BEG> renders a & lt ; div & gt ; tag and provide an override of the { link org apache tapestry5 service formsupport } environmental <END>
<BEG> this should never be call because the count be always zero <END>
<BEG> returns the type of the first element in the list <SEG> or null if the list be empty <END>
<BEG> called after each key be read by { link # gatherfieldchanges string } <END>
<BEG> obtains a page render { link org apache tapestry5 link } for the name <SEG> then build a json response for the client <END>
<BEG> returns true if { link org apache tapestry5 componenteventcallback # handleresult object } be invoked <SEG> false otherwise <END>
<BEG> is content be collect <SEG> inside a & lt ; t : content & gt ; element ? <END>
<BEG> always return false <SEG> a there be no event <END>
<BEG> should only be invoke once <SEG> immediately after this stream be close ; it generate the final mac result <SEG> and return it a a base64 encode string <END>
<BEG> stores a new value into the set <SEG> replace any previous value with the same name <END>
<BEG> convenience method for create a new <SEG> empty set <END>
<BEG> closes the { link printwriter } and return the accumulated text output <END>
<BEG> wraps a computation with cache logic ; once compute <SEG> the invokable will return the same value <SEG> until { link # invalidate } be invoked <END>
<BEG> returns the value 0 <END>
<BEG> returns the url of the homepage of the component library <END>
<BEG> returns the url of the component library 's documentation <END>
<BEG> returns the url where the root folder of component library 's source can be find <END>
<BEG> returns the url of the component 's library issue tracker <END>
<BEG> returns the url of the component library 's javadoc url <END>
<BEG> returns the tapestry version use by this component library <END>
<BEG> returns an url decribing the dependency management information for this component library <END>
<BEG> tells whether full dependency management info group id <SEG> artifact id and version be present <END>
<BEG> given a logical name <SEG> tell whether a give component <SEG> page or mixin be part of this component library <END>
<BEG> returns the javadoc url for a give class or < code > null < code > if the root javadoc url be not provide <END>
<BEG> convenience for define a library <END>
<BEG> returns the class of the page to render <SEG> or null to indicate that the active page for the request should simply be re-rendered <END>
<BEG> returns a new streampageinstance with the { linkplain # isbypassactivation bypass activation flag } set to true <SEG> such that page activation will be bypass when the page be render <END>
<BEG> return true if configure to bypass activation <END>
<BEG> converts the text to a byte array a per the character set <SEG> which be usually utf-8 <SEG> and return a stream for that byte array <END>
<BEG> returns the instance to which method be delegate <END>
<BEG> reads a version number from a property file on the classpath <END>
<BEG> creates a string map for all entry use the give map - assume that the entity we 're bind to be name <END>
<BEG> creates a string map for all entry use the give map - assume that the entity we 're bind to be not name <END>
<BEG> returns true if the current environment match the give value param environment return <END>
<BEG> returns true if the give string content type match the content type represent by this enum value <END>
<BEG> return true if this status code be within the range give param low equal to or great than inclusive param high less than exclusive return <END>
<BEG> return true if this status code be in the family of the give status code two code be in the same 'family ' if they 're in the same range i e <END>
<BEG> factory for create map with the give content for internal use return <END>
<BEG> used by the framework at runtime <SEG> you should not need to invoke this method directly <END>
<BEG> add a parameter to the function declaration <END>
<BEG> add a parameter to the function declaration that be also pass to the ajax callback <END>
<BEG> add a parameter to the ajax callback that be resolve inside the function <SEG> it will not be add a function parameter <END>
<BEG> add a parameter to the function declaration that be also pass to the ajax callback <SEG> but convert <END>
<BEG> return the name of the parameter to add to the function declaration <SEG> or null if no parameter should be add <END>
<BEG> return the javascript code to use to fill the parameter for the ajax callback <END>
<BEG> return event sink <END>
<BEG> return assuming you 've call next already <SEG> it 'll return the very same value <END>
<BEG> return gets the style relate to the iterator state <END>
<BEG> gets the real name for the cors option return the real name <END>
<BEG> return http port <END>
<BEG> see # setpreferstateful boolean return preferstateless <END>
<BEG> return scheme 's url name <END>
<BEG> returns status of ajax debug mode <END>
<BEG> returns status of line precise error reporting for added component that be not present in the markup : it point to the line where the component be add to the hierarchy in your java class <END>
<BEG> returns status of line precise error report for new component that be not present in the markup : it point to the line where the component be create in your java class <END>
<BEG> sets componentusecheck debug setting param componentusecheck return { code this } object for chain <END>
<BEG> enables line precise error reporting for added component that be not present in the markup : it point to the line where the component be add to the hierarchy in your java class <END>
<BEG> enables line precise error reporting for new component that be not present in the markup : it point to the line where the component be create in your java class <END>
<BEG> enables wrap output of markup container in html comment that contain markup container 's class name <END>
<BEG> if the parameter value be non-empty then wicket will use it a the name of an attribute of the component tag to print the { link org apache wicket component } 's path <END>
<BEG> see # setcomponentpathattributename string return the name of the attribute for the { link org apache wicket markup componenttag } <END>
<BEG> enables all of the panel and page <SEG> etc <SEG> from wicket-devutils package <END>
<BEG> are all of the panel and page <SEG> etc <SEG> from wicket-devutils package enable ? <END>
<BEG> enable disable the recording of the session size for every request <END>
<BEG> set the window of all the request that be keep in memory for view <END>
<BEG> returns a < code > result < code > which fail <END>
<BEG> build the message base on annotation from method call previously <END>
<BEG> wrap an object into a message proxy support { link message } <SEG> { link notmessage } and { link messagecontext } <END>
<BEG> build a message proxy support { link message } <SEG> { link notmessage } and { link messagecontext } <END>
<BEG> build the message from a proxy param proxy message builder proxy return generate message <END>
<BEG> clear the element return fluent web element <END>
<BEG> return the size of the element return dimension size of element see webelement # getsize <END>
<BEG> builds a filter that match when selection contain a give word <END>
<BEG> create a filter by name param name element name return filter object <END>
<BEG> create a filter by class param klass css class name return filter object <END>
<BEG> create a filter builder for the attribute by text return filter builder object <END>
<BEG> create a filter by text content param text to filter in content return filter object <END>
<BEG> create a filter builder by text content return filter builder object <END>
<BEG> create a filter base on a element predicate param predicate predicate return predicate filter <END>
<BEG> return the matcher symbol return matcher symbol <END>
<BEG> does this matcher support css filtering <END>
<BEG> check if the current value contain the patternvalue or the referencevalue param patternvalue pattern param referencevalue reference value param currentvalue current value return boolean value for contains check <END>
<BEG> check if the current value be equal the patternvalue or the referencevalue param patternvalue pattern param referencevalue reference value param currentvalue current value return boolean value for equal check <END>
<BEG> create a matcher for a containing pattern param pattern pattern object return matcher object <END>
<BEG> create a matcher for not contain a string param matcher string matcher return matcher object <END>
<BEG> create a pattern give a regex <END>
<BEG> create a matcher filtering by a string that start with the matcher param matcher string matcher return matcher object <END>
<BEG> create a matcher filtering by a string that start with the matcher param pattern pattern return matcher object <END>
<BEG> create a matcher filtering by a string that not start with the string params param matcher string matcher return matcher <END>
<BEG> create a matcher filtering by a string that not start with the pattern params param pattern pattern return matcher <END>
<BEG> checks if the { link parent } annotation be present on the argument field <END>
<BEG> checks if the { link hook } annotation be present on the type of the argument annotation <END>
<BEG> get the defined label hint <END>
<BEG> returns the parameter value for the argument parameter name <SEG> or null if the parameter do n't exist <END>
<BEG> saves the argument url and parameter in this object <END>
<BEG> does it match the template <END>
<BEG> converts an array of value provide by an array of { link class } and { link function } supply value for each class into an array of { link object } param valuesupplier supplier of value for each class param array array of class return array of value <END>
<BEG> get default value for give type <END>
<BEG> creates a new instance match possible constructor with provided args <END>
<BEG> invoke the method event if not accessible <END>
<BEG> get the field value even if not accessible <END>
<BEG> set the field even if not accessible <END>
<BEG> returns the list of attachment collect by this attachment handler <END>
<BEG> handles the alert <END>
<BEG> returns a list contain the message portion of any collected alert <END>
<BEG> returns the constant that match the specify name <END>
<BEG> immediately refresh the specified page use the specify url <END>
<BEG> returns the initial amount of time to wait before execute this job <END>
<BEG> returns { code true } if have to be execute asap <END>
<BEG> returns the target execution time of the job <END>
<BEG> gets the style attribute definition for the specify browser version <END>
<BEG> indicates if the action still need to be execute <END>
<BEG> run the state machine on a give input string <END>
<BEG> refreshes the specified page use the specify url immediately if the { code requestedwait } be not large than the { code maxdelay } <END>
<BEG> returns a new urlconnection for this url <END>
<BEG> returns the proxy host use to perform http request <END>
<BEG> returns whether socks proxy or not <END>
<BEG> any host match by the specified regular expression pattern will bypass the configured proxy <END>
<BEG> any host match by the specified regular expression pattern will no longer bypass the configured proxy <END>
<BEG> returns { code true } if the host with the specified hostname should be access bypass the configured proxy <END>
<BEG> returns the proxy auto-config url <END>
<BEG> gets the store of the give type for the page <END>
<BEG> converts a string into a byte array use the specify encoding <END>
<BEG> if set to { code true } <SEG> the client will accept connection to any host <SEG> regardless of whether they have valid certificate or not <END>
<BEG> indicates if insecure ssl should be use <END>
<BEG> sets whether or not redirections will be follow automatically on receipt of a redirect status code from the server <END>
<BEG> gets the protocol version enable for use on ssl connection <END>
<BEG> sets the protocol version enable for use on ssl connection <SEG> { code null } to use default one <END>
<BEG> returns { code true } if javascript be enable and the script engine be load successfully <END>
<BEG> enables disables do not track support <END>
<BEG> specify whether or not the content of the result document will be print to the console in the event of a failing response code <END>
<BEG> returns { code true } if the content of the result document will be print to the console in the event of a failing response code <END>
<BEG> specify whether or not an exception will be throw in the event of a failing status code <END>
<BEG> indicates if an exception should be throw when a script execution fail the default or if it should be catch and just log to allow page execution to continue <END>
<BEG> changes the behavior of this webclient when a script error occur <END>
<BEG> sets whether to allow native activex or no <END>
<BEG> returns whether native activex component be allow or no <END>
<BEG> gets the timeout value for the { link webconnection } <END>
<BEG> < p > sets the timeout of the { link webconnection } <END>
<BEG> sets the ssl protocol <SEG> use only when { link # setuseinsecuressl boolean } be set to { code true } <END>
<BEG> gets the ssl protocol <SEG> to be use only when { link # setuseinsecuressl boolean } be set to { code true } <END>
<BEG> returns the maximum byte to have in memory <SEG> after which the content be save to a file <END>
<BEG> returns the maximum number of { link page page } keep in { link webwindow # gethistory } <END>
<BEG> sets the history size limit <END>
<BEG> returns the maximum number of { link page page } to cache in history <END>
<BEG> sets the local address to be use for request execution <END>
<BEG> sets whether to automatically download image by default <SEG> or not <END>
<BEG> returns the screen height <END>
<BEG> enables disable websocket support <END>
<BEG> return the websocket maxtextmessagesize <END>
<BEG> sets the websocket maxtextmessagebuffersize <END>
<BEG> a web window have be open <END>
<BEG> returns the name of the { link webwindow } that be n't find <END>
<BEG> return the http status code that throw this exception or -1 if this exception be not thrown because of http status code <END>
<BEG> return the message of the expect confirm <END>
<BEG> get first available test engine key <END>
<BEG> get the protocol consider the capability provide which may define the property { link registrationrequest # selenium_protocol } param capability map of capability to consider return the { link seleniumprotocol } or throw a { link gridexception } if the capability do not define a recognize protocol <END>
<BEG> deprecate use { link seleniumprotocol # selenium # equal object } <END>
<BEG> reflexion to create the servlet base on the class name <END>
<BEG> format the give log record and return the formatted string <END>
<BEG> this be quite simple : just need to locate the last mapping for the prefix <SEG> if any : <END>
<BEG> finding a valid binding for the give uri be tricky <SEG> since mapping can be mask by others so <SEG> we need to first find most recent binding <SEG> from the fresh one <SEG> and then verify it 's still unmask ; if not <SEG> continue with the first loop <SEG> and so on <END>
<BEG> simplest factory method <SEG> which get call when a 1-argument element output method be call <END>
<BEG> method call to temporarily link this instance to a pool <SEG> to allow reusing of instance with the same reader <END>
<BEG> method call to reuse a pooled instance <END>
<BEG> method use by test code <SEG> to reset state of the name table <END>
<BEG> method call to check to quickly see if a child symbol table may have get additional entry <END>
<BEG> finds and return name match the specified symbol <SEG> if such name already exist in the table ; or if not <SEG> create name object <SEG> add to the table <SEG> and return it <END>
<BEG> need to make sure offset be properly update for error reporting purpose <SEG> and do this now while previous amount be still know <END>
<BEG> method call after end_element be process <SEG> to unbind declaration that now go out of scope <END>
<BEG> method use to generate a new prefix that do not conflict with an exist bound prefix <END>
<BEG> ok <SEG> do it look like a full url ? <END>
<BEG> based on early experience <SEG> look like use file tourl be rather expensive at least on jdk1 4 1 5 <SEG> so let 's just use a faster replacement <END>
<BEG> method that can be use to verify whether give string be a valid xml name or not <END>
<BEG> called when a method have not be implement yet throws domexception document me ! <END>
<BEG> returns the number of { link elementhandler } object that be wait for their element close tag <END>
<BEG> when multiple < code > elementhandler < code > instance have be register <SEG> this will set a default < code > elementhandler < code > to be call for any path which do < b > not < b > have a handler register <END>
<BEG> used to remove all the element handlers and return thing back to the way they be when object be create <END>
<BEG> sets the document use a the sax { link inputsource } param document document me ! <END>
<BEG> note this method be quite inefficent <SEG> it turn the in memory xml tree object model into a single block of text which can then be read by other xml parser <END>
<BEG> sets the xmlreader use for the jaxp { link saxsource } <END>
<BEG> sets the dom { link org w3c dom document } implementation class use by the writer when create dom document <END>
<BEG> sets the dom { link org w3c dom document } implementation class name use by the writer when create dom document <END>
<BEG> peeks at the top element on the stack without change the content of the stack <END>
<BEG> pops the element off the stack return the element that have just be pop off the stack <END>
<BEG> pushes a new element onto the stack param element document me ! <END>
<BEG> reallocates the stack to the give size param size document me ! <END>
<BEG> dom store \n at the end of text node that be newlines <END>
<BEG> overriden method to not close certain element name to avoid wierd behaviour from browser for version up to 5 x param qualifiedname document me ! <END>
<BEG> this override handle any element that should not remove whitespace <SEG> such a & lt ; pre & gt ; <SEG> & lt ; script & gt ; <SEG> & lt ; style & gt ; <SEG> and & lt ; textarea & gt ; <END>
<BEG> < p > this will set the new-line separator <END>
<BEG> < p > this will set whether the xml declaration < code > & lt ; ? xml version= 1 0 encoding= utf-8 ? & gt ; < code > include the encoding of the document <END>
<BEG> < p > this will set whether the xml declaration < code > & lt ; ? xml version= 1 0 encoding= utf-8 ? & gt ; < code > be include or not <END>
<BEG> < p > this will set whether a new line be print after the xml declaration assume it be not supressed <END>
<BEG> < p > this will set whether the text be output verbatim false or with whitespace strip a per < code > { link org dom4j element # gettexttrim } < code > <END>
<BEG> < p > ensure that text immediately precede by or follow by an element will be pad with a single space <END>
<BEG> < p > this will set the indent < code > string < code > to use ; this be usually a < code > string < code > of empty space <END>
<BEG> set the indent on or off <END>
<BEG> < p > this will set the indent < code > string < code > 's size ; an indentsize of 4 would result in the indention be equivalent to the < code > string < code > & nbsp ; & nbsp ; & nbsp ; & nbsp ; four space character <END>
<BEG> < p > whether or not to use the xhtml standard : like html but pass an xml parser with real <SEG> close tag <END>
<BEG> controls output of a line separator every tagcount tag when isnewlines be false <END>
<BEG> parses command line argument of the form < code > -omitencoding -indentsize 3 -newlines -trimtext < code > param args be the array of command line argument param i be the index in args to start parse option return the index of first parameter that we do n't understand <END>
<BEG> a static helper method to create the default compact format <END>
<BEG> report an element type declaration <END>
<BEG> report a parsed external entity declaration <END>
<BEG> creats a default xmlreader via the org xml sax driver system property or jaxp if the system property be not set <END>
<BEG> sets the { link xmlwriter } use to write the modified document <END>
<BEG> returns the current entity resolver use to resolve entity return document me ! <END>
<BEG> sets the entity resolver use to resolve entity <END>
<BEG> configures the xmlreader before use throw saxexception document me ! <END>
<BEG> sets the output to write the modified xml document to <END>
<BEG> returns true when the modify { link org dom4j document } be not keep in memory <END>
<BEG> define whether the modify { link org dom4j document } must only be write to the output and prune from the dom4j tree <END>
<BEG> parses the specified { link java io file } <SEG> use the give { link java nio charset charset } <END>
<BEG> registers a { link jaxbobjecthandler } that will be supply with the unmarshalled representation of the xml fragment whenever the specified path be encounted <END>
<BEG> marshals the give { link javax xml bind element } in to it dom4j counterpart <END>
<BEG> unmarshalls the specified dom4j { link org dom4j element } into a { link javax xml bind element } param element the dom4j element to unmarshall return the unmarshalled jaxb object throw jaxbexception when an error occurs <END>
<BEG> defines to write the result output to the specify { link java io file } <END>
<BEG> writes the specified { link org dom4j element } to the document <END>
<BEG> writes the closing tag of the specify { link org dom4j element } to the document <END>
<BEG> runs the action associate with the give node param node document me ! <END>
<BEG> performs an xslt processing model match for the rule which match the give node the best <END>
<BEG> adds the rule to a ruleset for the give name <END>
<BEG> compares two rule in xslt process model order assume that the mode be equal <END>
<BEG> if this rule contain a union pattern then this method should return an array of rules which describe the union rule <SEG> which should contain more than one rule <END>
<BEG> sets the default value-of action which be use in the default rule for the pattern text | & # 64 ; param valueofaction document me ! <END>
<BEG> a factory method to return a new { link mode } instance which should add the necessary default rule return document me ! <END>
<BEG> adds the default stylesheet rule to the give { link mode } instance param mode document me ! <END>
<BEG> processes the result of the xpath expression in the give mode <END>
<BEG> processes the input object in the give mode <END>
<BEG> factory method to create list of child treenodes return document me ! <END>
<BEG> factory method to create child tree node for a give xml node type param xmlnode document me ! <END>
<BEG> sets the < code > document < code > instance that this < code > treemodel < code > be base on param document document me ! <END>
<BEG> sets the parent of this node but do n't change the parent child param parent document me ! <END>
<BEG> < p > < code > accept < code > method be the < code > visitor pattern < code > method <END>
<BEG> < p > this will convert the map to a string representation <END>
<BEG> performs a local addition which be not forward through to the branch or back list param object document me ! <END>
<BEG> sets the public id of the document type param publicid document me ! <END>
<BEG> implements an identity base comparsion use the parent element as well a the prefix and uri param object document me ! <END>
<BEG> set the value of the entity if it be not define yet otherwise an < code > unsupportedoperationexception < code > be throw a this class be read only <END>
<BEG> a factory method to create { link namespace } instance param prefix document me ! <END>
<BEG> a factory method to create the index for attribute return document me ! <END>
<BEG> factory method to return a new map implementation for index return document me ! <END>
<BEG> factory method to return a list implementation for index return document me ! <END>
<BEG> finds the specified annotation from the array and return it <END>
<BEG> called when the unmarshalling start <END>
<BEG> returns a list of namespace uris that should be declare at the root element <END>
<BEG> similar to { link # getpredeclarednamespaceuris } but allow the prefix <SEG> nsuri pair to be return <END>
<BEG> returns a list of prefix <SEG> namespace uri pair that represent namespace binding available on ancestor element that need not be repeat by the jaxb ri <END>
<BEG> configures the locator object that the sax { link contenthandler } will see <END>
<BEG> similar to the parse method but it visit the ancestor node and properly emulate the all in-scope namespace declaration <END>
<BEG> visits an element and it subtree <END>
<BEG> the same a { link # getcurrentelement } but good type <END>
<BEG> can be use if parameter be intern <END>
<BEG> search the specified classloader for the give classname <END>
<BEG> creates a new instance of the class but throw exception without catch it <END>
<BEG> the same a { link # create0 } but with an error handling to make the instantiation error fatal <END>
<BEG> infers the instanciable implementation class that can be assign to the give field type <END>
<BEG> always return a non-null valid { link errorhandler } <END>
<BEG> wraps the annotation into a proxy so that the return object will also implement { link locatable } <END>
<BEG> x : anytype can be reference from { link xmlidref } <END>
<BEG> returns all the type name recognize by this bean info <END>
<BEG> deprecate always return false at this level <END>
<BEG> called after all the { link typeinfo } s be collect into the { link # owner } <END>
<BEG> build { link enumconstant } s and discover report any error in it <END>
<BEG> return true if enum be restriction extension from x : token type <SEG> otherwise false <END>
<BEG> when a bean bind to an element <SEG> it 's always through { link xmlrootelement } <SEG> so this method always return null <END>
<BEG> use the enclose class a the upsream { link location } <END>
<BEG> called after all the class be add to the type set to link them together <END>
<BEG> parses an { link xmlrootelement } annotation on a class and determine the element name <END>
<BEG> parses a potentially-null { link xmltype } annotation on a class and determine the actual value <END>
<BEG> from the javadoc for java lang reflect parameterizedtype instances of class that implement this interface must implement an equal method that equate any two instance that share the same generic type declaration and have equal type parameter <END>
<BEG> computes the type name of the array from that of the item type <END>
<BEG> called whenever an execution flow enter the realm of this { link coordinator } <END>
<BEG> returns a read-only list of { link location } that indicate where in the source code the problem have happen <END>
<BEG> returns a read-only list of { link illegalannotationexception } s wrap in this exception <END>
<BEG> returns the xml type name to be use to marshal the specified instance <END>
<BEG> marshals to { link outputstream } with the give in-scope namespaces take into account <END>
<BEG> wraps up everything and create { link namelist } <END>
<BEG> fill in the buffer by encode the specify character while escape character like & lt ; param isattribute if true <SEG> character like \t <SEG> \r <SEG> and \n be also escape <END>
<BEG> reallocate the buffer to the exact size of the data to reduce the memory footprint <END>
<BEG> returns the prefix index to the specify uri <END>
<BEG> gets the prefix from a prefix index <END>
<BEG> gets the namespace uri that be bind to the specify prefix <END>
<BEG> writes itself to the character array <END>
<BEG> { link attributesex } implementation <END>
<BEG> sets the int [ ] data to this object <END>
<BEG> returns true if this scope object be fill by a packing in progress <END>
<BEG> initializes all the field to null <END>
<BEG> finishes up the current packing in progress if any and reset this object <END>
<BEG> checks if the give name pair match this name <END>
<BEG> called when xsi : nil='true ' be find <END>
<BEG> debug information of what 's in this { link xmlschemagenerator } <END>
<BEG> when this method be call <SEG> that mean we need to check the spec and correct the behavior <END>
<BEG> when this method iscalled <SEG> that mean the current code be a mock up and it need to be properly implement later <END>
<BEG> when this method be call <SEG> it mean that there be an unimplemeted portion of the spec in the schema generator <END>
<BEG> reads the give { link inputstream } completely into the buffer <END>
<BEG> set to false to use { link object # equal object } to detect cycle <END>
<BEG> pushes a new object to the stack without make it participate with the collision check <END>
<BEG> pops an object from the stack <END>
<BEG> clears all the content in the stack <END>
<BEG> string that represent the cycle <END>
<BEG> finds the string in the < code > group < code > closest to < code > key < code > and return it <END>
<BEG> returns the value to which the specify key be map in this qnamemap <SEG> or { code null } if the map contain no mapping for this key <END>
<BEG> returns one random item in the map <END>
<BEG> makes sure that a map contain the right type <SEG> and return it to the desirable type <END>
<BEG> returns properly configure e g <END>
<BEG> param name the name of the field param require if true never return null if the fieldinfo be not available <SEG> an exception will be throw <END>
<BEG> disables cache of classinfo 's <END>
<BEG> enables cache of classinfo 's unless caching be already enable <END>
<BEG> flushes all the cache classinfo 's <END>
<BEG> evicts classinfo for a specific class <END>
<BEG> register a qname and return a qname that be guarantied to have a prefix <END>
<BEG> removes the last mapping for the give prefix <END>
<BEG> unregisters all prefix mapping for the give uri <SEG> not just the last one add <END>
<BEG> true if the give nsuri be register <END>
<BEG> return an iterator over all register nsuris <END>
<BEG> returns the last mapping for the prefix or null if the prefix be not map <END>
<BEG> get the nsuri for a give prefix <SEG> maybe null <END>
<BEG> return schema default xop unmarshaller <END>
<BEG> this create an empty < code > document < code > object base on a specific parser implementation with the give doctype <END>
<BEG> this attempt to change the documenttype to have the give internal dtd subset value <END>
<BEG> this will return the parent of this < code > attribute < code > <END>
<BEG> this return the uri map to this < code > attribute < code > 's prefix <END>
<BEG> this will return this < code > attribute < code > 's < code > { link namespace } < code > <END>
<BEG> this set this < code > attribute < code > 's < code > { link namespace } < code > <END>
<BEG> this return a < code > string < code > representation of the < code > attribute < code > <SEG> suitable for debug <END>
<BEG> this get the value of the attribute <SEG> in < code > int < code > form <SEG> and if no conversion can occur <SEG> throw a < code > { link dataconversionexception } < code > return < code > int < code > value of attribute <END>
<BEG> this get the effective boolean value of the attribute <SEG> or throw a < code > { link dataconversionexception } < code > if a conversion ca n't be perform <END>
<BEG> get the namespaces that be in-scope on this attribute <END>
<BEG> package internal method to support building from source that be 100 % trust <END>
<BEG> check and add < i > attribute < i > to this list at < i > index < i > <END>
<BEG> clear the current list and set it to the content of < i > collection < i > <END>
<BEG> retrieve the < code > attribute < code > at < i > offset < i > <END>
<BEG> retrieve the < code > attribute < code > with the give name and the same < code > namespace < code > uri a < i > namespace < i > <END>
<BEG> return index of the < code > attribute < code > with the give < i > name < i > and the same namespace uri a < i > namespace < i > <END>
<BEG> remove the < code > attribute < code > with the specify name and the same uri a < i > namespace < i > <END>
<BEG> set the < code > attribute < code > at < i > index < i > to be < i > attribute < i > <END>
<BEG> returns an < code > iterator < code > over the < code > attributes < code > in this list in the proper sequence <END>
<BEG> sort the attribute use the supplied comparator <END>
<BEG> obtain a attributetype by a int constant <END>
<BEG> returns the the jdom attributetype value from the sax 2 0 attribute type string provide by the parser <END>
<BEG> this return a < code > string < code > representation of the < code > cdata < code > node <SEG> suitable for debug <END>
<BEG> returns the xpath 1 0 string value of this element <SEG> which be the text of this comment <END>
<BEG> all content have an enumerate type express the type of content <END>
<BEG> detaches this child from it parent or do nothing if the child have no parent <END>
<BEG> return this child 's parent <SEG> or null if this child be currently not attach <END>
<BEG> a convenience method that return any parent element for this element <SEG> or null if the element be unattached or be a root element <END>
<BEG> return this child 's owning document or null if the branch contain this child be currently not attach to a document <END>
<BEG> clear the current list and set it to the content of the < code > collection < code > <END>
<BEG> return the object at the specified offset <END>
<BEG> return a view of this list base on the give filter <END>
<BEG> return the index of the first element in the list <END>
<BEG> returns < b > true < b > if the iteration have more { link content } descendant <END>
<BEG> check to see if the content match a predefined set of rule <END>
<BEG> set filtering mask <END>
<BEG> set this filter to allow all legal jdom object <END>
<BEG> set filter to match only jdom object that be legal document content <END>
<BEG> set visiblity of < code > element < code > object <END>
<BEG> check to see if the object match accord to the filter mask <END>
<BEG> return a filter that match any { link content } data <END>
<BEG> return a filter that match any { link attribute } data with the specify name <END>
<BEG> return a filter that match any { link attribute } data with the specify name and namespace <END>
<BEG> return a filter that match any { link text } data which include { link cdata } since that be a subclass of text <END>
<BEG> return a filter that match any { link text } data excludes { link cdata } instance <END>
<BEG> return a filter that match any data of the specified class <END>
<BEG> return a filter that do no filtering at all - everything match <END>
<BEG> this set a custom jdomfactory for the builder <END>
<BEG> returns the current { link org jdom2 jdomfactory } in use <END>
<BEG> this will build a jdom tree from an exist dom tree <END>
<BEG> this will build a jdom element from an exist dom element param domelement < code > org w3c dom element < code > object return < code > element < code > - jdom element object <END>
<BEG> this will build a jdom cdata from an exist dom cdatasection param cdata < code > org w3c dom cdatasection < code > object return < code > cdata < code > - jdom cdata object since jdom2 <END>
<BEG> returns the public identifier of the entity where the parse error occur <END>
<BEG> this method be call in response to an error that have occur ; this indicate that a rule be break <SEG> typically in validation <SEG> but that parse could reasonably continue <END>
<BEG> this method be call in response to a fatal error ; this indicate that a rule have be break that make continue parse either impossible or an almost certain waste of time <END>
<BEG> non-javadoc see org jdom2 input sax saxengine # getjdomfactory <END>
<BEG> get a new xmlreader from this jaxp-based { link xmlreaderjdomfactory } <END>
<BEG> get the sax driver class name use to boostrap xmlreaders <END>
<BEG> returns the driver class assign in the constructor <SEG> or null if none <END>
<BEG> get the saxhandlerfactory use to supply saxhandlers to this saxbuilder <END>
<BEG> returns whether validation be to be perform during the build <END>
<BEG> this set validation for the builder <END>
<BEG> returns the { link errorhandler } assign <SEG> or null if none <END>
<BEG> this set custom entityresolver for the < code > builder < code > <END>
<BEG> returns the { link dtdhandler } assign <SEG> or null if the assign { link saxhandler } will be use for dtd sax event <END>
<BEG> this set a custom { link org xml sax xmlfilter } for the builder <END>
<BEG> specifies whether or not the parser should eliminate whitespace in element content sometimes know a ignorable whitespace when build the document <END>
<BEG> returns whether or not the parser will eliminate element content contain only whitespace <END>
<BEG> specifies whether or not the parser should elminate boundary whitespace <SEG> a term that indicate whitespace-only text between element tag <END>
<BEG> returns whether or not entity be be expand into normal text content <END>
<BEG> returns whether the contain sax parser instance be reuse across multiple par <END>
<BEG> specifies whether this builder will reuse the same sax parser when perform subsequent par or allocate a new parser for each parse <END>
<BEG> this set a feature on the sax parser <END>
<BEG> allow override class access to the parser before it be use in a saxbuilderengine <END>
<BEG> this build a document from the supply xmleventreader <END>
<BEG> read the entire xmlstreamreader and from it build a list of content that conform to the rule in the supplied staxfilter <END>
<BEG> read the current xml fragment from the xmlstreamreader <END>
<BEG> arrays copyof be a java6 thing <END>
<BEG> construct a new instance of the name class <SEG> and ensure it be cast to the type specify a the targetclass <END>
<BEG> get the domadapter currently set for this domoutputter <END>
<BEG> set a new format instance for this domoutputter param format the new format instance to use null implies the default since jdom2 <END>
<BEG> set a new domoutputprocessor for this domoutputter <END>
<BEG> this convert the jdom < code > document < code > parameter to a dom document <SEG> return the dom version <END>
<BEG> this convert the jdom < code > text < code > parameter to a dom text node <SEG> return the dom version <END>
<BEG> this convert the list of jdom < code > content < code > in to a list of dom nodes <SEG> return the dom version <END>
<BEG> the string sequence use for this separator return an end-of-line string <END>
<BEG> return whether to report dtd events <END>
<BEG> return the locator use for this output <END>
<BEG> reset any cached string instance data from this slimjdomfaxctory cache <END>
<BEG> get a string instance that be equal to the input value <END>
<BEG> number of registered strings return the number of registered string value <END>
<BEG> get the content at a position in the input content <END>
<BEG> utility method that allow descendant class to access the variable that be set on this expression <SEG> in a format that can be use in a constructor qname value <END>
<BEG> find exist object <END>
<BEG> get number of value present for key <END>
<BEG> get indexed value for key <END>
<BEG> ensure that the array have the capacity for at least the specified number of value <END>
<BEG> constructs and return a simple array contain the same data a held in this stack <END>
<BEG> get the number of value currently present in the stack <END>
<BEG> get value for key <END>
<BEG> set an override value <END>
<BEG> remove a key-value pair <END>
<BEG> construct a url which may represent a resource from the classpath <END>
<BEG> check if class lookup be support <END>
<BEG> check if file already exist <END>
<BEG> get the prefix for a namespace uri <END>
<BEG> record a reference from this file to another file of the same type <END>
<BEG> get the set of reference from this file to other file of the same type <END>
<BEG> implementation method for subclass to complete the construction of the file <END>
<BEG> get list of key in order add <END>
<BEG> convenience method to add every item in an array <END>
<BEG> compact the list <SEG> remove any < code > null < code > value <END>
<BEG> convert potentially plural name to singular form <END>
<BEG> find an entry in the table <END>
<BEG> clear all key and count <END>
<BEG> advance to next iteration value <END>
<BEG> get next iteration element <END>
<BEG> get string at a particular index in the list <END>
<BEG> find index of a particular string in the array <END>
<BEG> get number of value in array return number of value in array <END>
<BEG> check if an entry be present in the table <END>
<BEG> add name to set <END>
<BEG> this file signal the end of file return true false signal the end of file <END>
<BEG> returns the iana encoding name that be auto-detected from the byte specify <SEG> with the endian-ness of that encode where appropriate <END>
<BEG> the start of a cdata section <END>
<BEG> handle element return true if validator be remove from the pipeline <END>
<BEG> returns the index of the first element declaration <END>
<BEG> getelementdeclindex param elementdeclname return index of the elementdeclname in scope <END>
<BEG> make separate function for get contentspectype of element <END>
<BEG> getfirstattributedeclindex param elementdeclindex return index of the first attribute for element declaration elementdeclindex <END>
<BEG> getnextattributedeclindex param attributedeclindex return index of the next attribute of the attribute at attributedeclindex <END>
<BEG> getattributedecl param attributedeclindex param attributedecl the value of this structure be set by this call <END>
<BEG> returns whether the give attribute be of type cdata or not param elname the element name <END>
<BEG> setvalues param name param publicid param systemid <END>
<BEG> clear <END>
<BEG> gets the type of this attribute <SEG> default be cdata <END>
<BEG> be this attribute be specify in the instance document <END>
<BEG> return boolean return true if the data be cdata <END>
<BEG> return string return the string representation of this event <END>
<BEG> this method will write the xmlevent a per the xml 1 0 specification a unicode character <END>
<BEG> returns true if this set of characters be all whitespace <END>
<BEG> return string string representation of this event <END>
<BEG> returns an implementation define representation of the dtd <END>
<BEG> return this event a string return string event return a string <END>
<BEG> gets a read-only namespace context <END>
<BEG> this function return true if some character data be load <END>
<BEG>  return  <END>
<BEG>  param namespaceuri  throw javax xml stream xmlstreamexception  return  <END>
<BEG> is not support in this implementation <END>
<BEG> is not support in this version of the implementation <END>
<BEG> creates a dom atrribute see org w3c dom node and associate it with the current dom element see org w3c dom node <END>
<BEG> creates a cdata object see org w3c dom cdatasection <END>
<BEG> creates a character object see org w3c dom text and append it to the current element in the dom tree <END>
<BEG> this method be not support in this implementation <END>
<BEG> creates a dom attribute and add it to the current element in the dom tree <END>
<BEG> create a dom element and append it to the current element in the tree <END>
<BEG> will reset current node pointer maintain by the implementation <END>
<BEG> create a namespace attribute and will associate it with the current element in the dom tree <END>
<BEG> will set version on the document object when the dom node pass to this implementation support dom level3 api 's <END>
<BEG> reset this instance so that it can be re-used <END>
<BEG> can this instance be reuse return boolean boolean value to indicate if this instance can be reuse or not <END>
<BEG> close this xmlstreamwriter by close underlying writer <END>
<BEG> returns value associate with the specified property name <END>
<BEG> set the specified uri a default namespace in the current namespace context <END>
<BEG> sets the current < code > namespacecontext < code > for prefix and uri binding <END>
<BEG> sets the prefix the uri be bind to <END>
<BEG> param version throw xmlstreamexception <END>
<BEG> param namespaceuri param localname throw xmlstreamexception <END>
<BEG> correct 's namespaces a per requirement of isreparisingnamespace property <END>
<BEG> if element and or attribute name in the same start or empty-element tag be bind to different namespace uris and be use the same prefix then the element or the first occur attribute retain the original prefix and the following attribute have their prefix replace with a new prefix that be bind to the namespace uris of those attribute <END>
<BEG> if an element or attribute name be bind to a prefix and there be a namespace declaration that bind that prefix to a different uri then that namespace declaration be either remove if the correct mapping be inherit from the parent context of that element <SEG> or change to the namespace uri of the element or attribute use that prefix <END>
<BEG> returns the value associate to an implementation-specific property <END>
<BEG> overrides the method define in abstractmap which be not completely implement <END>
<BEG> overrides the method define in abstractmap this be require to satisfy the contract for hashcode <END>
<BEG> close the stream <SEG> flush it first <END>
<BEG> reset this writer <END>
<BEG> set the give < code > writer < code > param writer writer <END>
<BEG> tell whether this stream be ready to be read <END>
<BEG> remove all object from the augmentations structure <END>
<BEG> removes an iana to java encode name mapping <END>
<BEG> see com sun xml stream xerces xni namespacecontext # popcontext <END>
<BEG> see com sun xml stream xerces xni namespacecontext # declareprefix string <SEG> string <END>
<BEG> sets whether namespace processing be be perform <END>
<BEG> sets the field in the give qname structure with the value of the attribute name at the specified index <END>
<BEG> sets the non-normalized value of the attribute at the specified index <END>
<BEG> look up an attribute 's type by xml 1 0 qualify name <END>
<BEG> return the name of an attribute in this list by position <END>
<BEG> look up the index of an attribute by xml 1 0 qualify name <END>
<BEG> look up the index of an attribute by namespace name <END>
<BEG> look up an attribute 's local name by index <END>
<BEG> look up an attribute 's xml 1 0 qualify name by index <END>
<BEG> look up an attribute 's type by namespace name <END>
<BEG> look up an augmentation by xml 1 0 qualify name <END>
<BEG> checks for duplicate expand names local part and namespace name pair in the attribute specification <END>
<BEG> returns true if the symbol table already contain the specified symbol <END>
<BEG> look up the index of an attribute by local name only <SEG> ignore it namespace <END>
<BEG> look up an attribute 's value by namespace name and local name <END>
<BEG> returns the value pass in or nmtoken if it 's an enumerated type <END>
<BEG> returns the position in the table view where the give attribute name would be hash <END>
<BEG> purges all element from the table view <END>
<BEG> prepares the table view of the attribute list for use <END>
<BEG> prepares the table view of the attribute list for use <SEG> and populate it with the attribute which have be previously read <END>
<BEG> this method will be invoke by xmlentityreader before scannedentities buffer be reload <END>
<BEG> sets the literal system identifier <END>
<BEG> returns the base uri against which the literal systemid be to be resolve <END>
<BEG> clears the string buffer <END>
<BEG> append param c <END>
<BEG> append param ch param offset param length <END>
<BEG> returns the feature or property identifier <END>
<BEG> initializes the content of the xmlstring structure with the specify value <END>
<BEG> resets all of the value to their default <END>
<BEG> returns true if the content of this xmlstring structure and the specified array be equal <END>
<BEG> setdtdhandler param dtdhandler <END>
<BEG> getdtdhandler return the xmldtdhandler <END>
<BEG> getdtdcontentmodelhandler return xmldtdcontentmodelhandler <END>
<BEG> get the entity storage object from entity manager <END>
<BEG> sets whether the document entity be standalone <END>
<BEG> resolves the specified public and system identifier <END>
<BEG> starts the document entity <END>
<BEG> set the instance of current scan entity <END>
<BEG> the version of the current entity be scan <END>
<BEG> skips the specified string appear immediately on the input <END>
<BEG> registers the listener object and provide callback <END>
<BEG> returns the hashtable of declared entity <END>
<BEG> checks whether the declaration of an entity give by name be in the external subset <END>
<BEG> returns true if the namespace binder only pass the prefix map event to the registered document handler ; false if the namespace binder pass all document event <END>
<BEG> sets the document handler to receive information about the document <END>
<BEG> notifies of the presence of a textdecl line in an entity <END>
<BEG> notifies of the presence of an xmldecl line in the document <END>
<BEG> this method notify the end of a general entity <END>
<BEG> return the information about the element -- if it be endelement <SEG> qname value be compute dynamically <END>
<BEG> creates a content driver <END>
<BEG> { link xmlstreamexception } do n't return the correct cause <END>
<BEG> return throw xmlstreamexception <END>
<BEG> throw xmlstreamexception return <END>
<BEG> param inputstream throw xmlstreamexception return <END>
<BEG> create a new xmleventreader from an xmlstreamreader <END>
<BEG> create a filtered event reader that wrap the filter around the event reader param reader the event reader to wrap param filter the filter to apply to the event reader throw xmlstreamexception <END>
<BEG> create a filtered reader that wrap the filter around the reader param reader the reader to filter param filter the filter to apply to the reader throw xmlstreamexception <END>
<BEG> get the value of a feature property from the underlie implementation param name the name of the property may not be null return the value of the property throw illegalargumentexception if the property be not support <END>
<BEG> query the set of fproperties that this factory support <END>
<BEG> allows the user to set specific feature property on the underlying implementation <END>
<BEG> 07-sep-2005 <SEG> tsa : since implementation do not really support non-ns-aware mode <SEG> let 's throw an exception : <END>
<BEG> tostring overridden to output more information than what the default implementation from base event class output <END>
<BEG> 13-mar-2006 <SEG> tsa : let 's add minimal support <SEG> to make life bit easy when interact with sax tool <END>
<BEG> create a new xmlstreamreader from a java io stream param stream the inputstream to read from <END>
<BEG> create a new xmlstreamreader from a java io stream param stream the inputstream to read from param encode the character encoding of the stream <END>
<BEG> 26-sep-2005 <SEG> tsa : should check if we have hit eof <SEG> and if so <SEG> fail to get any more stuff <END>
<BEG> returns true if this object be equal to another <END>
<BEG> stores an array of item in the item array <END>
<BEG> retrieves a list of item of a particular type <END>
<BEG> sets the entity name of this attlist <END>
<BEG> sets the declaration fix <SEG> require <SEG> implied <END>
<BEG> returns the element a a vector not a clone ! <END>
<BEG> stores item in the container <END>
<BEG> retrieves the item in the container <END>
<BEG> stores an attribute in this element <END>
<BEG> sets the external id for the entity <END>
<BEG> returns the entity ndata <END>
<BEG> retrieves an item from the enumeration <END>
<BEG> adds a item to the list of notation value <END>
<BEG> returns the list of notation value a an array <END>
<BEG> sets the item in the notation list <END>
<BEG> retrieves the public identifier <END>
<BEG> writes out a declaration for this system id <END>
<BEG> return true <SEG> if the event be a start or end element event ; false otherwise <END>
<BEG> textual event be event that consist of regular document text content : ignorable white space <SEG> cdata segment <SEG> and other text <END>
<BEG> this method return true if it would be ok to call { link org codehaus staxmate in sminputcursor # gettext } of the iterator object <SEG> when it be position over this event <END>
<BEG> method that will construct the mapping from event id int code use by { link xmlstreamreader } to actual { link smevent } enum value <END>
<BEG> return filter that will pass element event as well a all text event include ignorable white space <END>
<BEG> param result array in which result be to be add if it 's big enough ; or if not big enough <SEG> one that indicate type of the array to create <END>
<BEG> return new head of the recycle pool <END>
<BEG> can we create a simple validator ? <END>
<BEG> method that have to create a deep copy of the model <SEG> without share any of existing objects <END>
<BEG> overridden standard method <END>
<BEG> overridden default method : <END>
<BEG> simple ; can always re use instance itself ; no state information be keep <END>
<BEG> if we ever get as far a element closing <SEG> thing be all good ; can just return null <END>
<BEG> return true if the set contain specify name ; false if not <END>
<BEG> doh <END>
<BEG> method be override for two main reason : first <SEG> default method do not display public system id information <SEG> even if it exist <SEG> and second <SEG> default implementation can not handle nested location information <END>
<BEG> note : only public due to sub-classes need to call this on base class instance from different package confusing ? <END>
<BEG> method that can be call to check whether give string contain any character that be not legal xml name <END>
<BEG> method call to allow reusing of collector <SEG> usually right before start collect attribute for a new start tag <END>
<BEG> < p > note : the main reason this method be define at this level <SEG> and make final <SEG> be performance <END>
<BEG> note : most of the code be from getvalue could refactor code <SEG> performance be bit of concern one more method call if index access be separate <END>
<BEG> at this point we can also discard attribute map ; it be assume that when a child element have be open <SEG> no more attribute can be output <END>
<BEG> note : this method can and will only be call before output the root element <END>
<BEG> pooling for immutable object <END>
<BEG> method similar to { link # growarrayby50pct } <SEG> but it also ensure that the new size be at least as big a the specified minimum size <END>
<BEG> [ wstx-110 ] : better make sure we do not already have a chain exception <END>
<BEG> let 's split sync block to help in edge case like [ wstx-220 ] <END>
<BEG> return true <SEG> if this attribute name would result in a namespace binding ie <END>
<BEG> method use to check for xml reserve attribute name <SEG> like xml : space and xml : id <END>
<BEG> method that will check character array pass <SEG> and remove all extra space lead and trail space <SEG> and normalize other white space more than one consequtive space character replace with a single space <END>
<BEG> method that implement a loose string compairon for encode strings <END>
<BEG> method that will remove all non-alphanumeric character <SEG> and optionally upper-case include letter <SEG> from the give string <END>
<BEG> < p > note that it be assume that any weird white space xml 1 1 lsep and nel have be replace by canonical alternative linefeed for element content <SEG> regular space for attribute <END>
<BEG> method call before start to re use the buffer <SEG> will discard any exist content <SEG> and start collect new set of value <END>
<BEG> method that give access to underlying character buffer <END>
<BEG> tries to construct an instance give order set of word <END>
<BEG> param str character array that contain the word to find param start index of the first character of the word param end index follow the last character of the word <SEG> so that < code > end - start < code > equal word length similar to the way < code > string substring < code > have <END>
<BEG> return shared string instance of the word <SEG> if it exist in the word set ; null if not <END>
<BEG> builds another gdurationbuilder with the same value a this one <END>
<BEG> builds a gduration from this gdurationbuilder <END>
<BEG> all gduration instance return true <END>
<BEG> returns the sign of the duration : +1 be forward and -1 be backwards in time <END>
<BEG> normalize a duration value <END>
<BEG> the natural string representation of the duration <END>
<BEG> parses the give stream via the default sensible documentbuilder param inp stream to read the xml data from return the parsed document <END>
<BEG> parses the give stream via the default sensible documentbuilder param inp sax source to read the xml data from return the parsed document <END>
<BEG> unjars a give jar file into a give directory <END>
<BEG> given an inputstream on a jar file <SEG> unjars the content into the give directory <END>
<BEG> acquire the mutex <END>
<BEG> returns a camel-cased string <SEG> but either jaxb or jax-rpc rule be use <END>
<BEG> intended to be apply to a lowercase-starting identifier that may collide with a java keyword <END>
<BEG> this class be only use internally so this method should never be call <END>
<BEG> add process instruction node to dom <END>
<BEG> lexical handler method to create comment node in dom tree <END>
<BEG> set an object by index unless a value have be previously set at that location <END>
<BEG> tests that all value have be set <END>
<BEG> returns the union of this nameset with the 'with ' nameset <END>
<BEG> returns the result of substracting this nameset from 'from ' nameset see nameset # substract <END>
<BEG> returns the result of substracting 'what ' nameset from this nameset see nameset # substractfrom <END>
<BEG> inverts the represent nameset <END>
<BEG> design o russian doll design o salami slice design o venetian blind design param designtype see # design_russian_doll see # design_salami_slice see # design_venetian_blind <END>
<BEG> return simple_type_simple_content ie no atts <SEG> no elems <SEG> just text complex_type_simple_content ie atts <SEG> no elems <SEG> text - simple type extension complex_type_complex_content ie atts <SEG> elems <SEG> no text complex_type_mixed_content ie atts <SEG> elems <SEG> text complex_type_empty_content no elems <SEG> no text <SEG> just atts <END>
<BEG> param kind 4 kind : simple_type_simple_content ie no atts <SEG> no elems <SEG> just text complex_type_simple_content ie atts <SEG> no elems <SEG> text - simple type extension complex_type_complex_content ie atts <SEG> elems <SEG> no text complex_type_mixed_content ie atts <SEG> elems <SEG> text complex_type_empty_content no elems <SEG> no text <SEG> just atts <END>
<BEG> return particle_sequence or particle_choice_unbounded <END>
<BEG> param topparticleforcomplexormixedcontent particle_sequence or particle_choice_unbounded <END>
<BEG> < p > called by jam to initialize the proxy <END>
<BEG> < p > overrides this behavior to simply stuff the value into our annotation map <END>
<BEG> < p > gets the setter that should be use for set the give member with the give value <END>
<BEG> creates a new jclassref for a qualified class or type name <END>
<BEG> creates an array jclass from a field descriptor a describe in the jls <END>
<BEG> returns the normal form for a give array name <END>
<BEG> returns the field descriptor for an name primitive <SEG> e g <END>
<BEG> returns true if the name type be a primitive <END>
<BEG> returns the primitve class for the give name <SEG> e g <END>
<BEG> returns all of the annotation on the getter and or the setter method <END>
<BEG> returns an unmodifiable collection contain the jclasses which have be resolve by this jamclassloader <END>
<BEG> returns true if tool jar be not in the system classloader <END>
<BEG> quick and dirty way for user to alter the explanation for this problem with more specific information or solution <END>
<BEG> returns true if class remain to be iterate upon <END>
<BEG> sorts the give array in place so that the element be order by their sourceposition 's line number <END>
<BEG> returns the path a a single string in which each file component be separate by file pathseparatorchar <END>
<BEG> public void write jpackage pkg throw xmlstreamexception { assertstarted ; mout writestartelement package ; jclass [ ] c = pkg getclasses ; for int i=0 ; i < c length ; i++ write c [ i ] ; writeannotatedelement pkg ; mout writeendelement ; } <END>
<BEG> prepares for match <END>
<BEG> < schemaglobalelement ref > <END>
<BEG> only applicable to keyrefs <END>
<BEG> returns a qnameset of element that may exist in wildcard buchets and be not explicitly define in this schema type <END>
<BEG> the map be synchronize <SEG> we use two access to the cache one read and one write <SEG> but the code inbetween be not synchronize <END>
<BEG> compiles a schematypesystem <END>
<BEG> instantiates a factory object give the factory 's property name and the default class name <END>
<BEG> remove all < code > mimeheader < code > object whose name match the the give name <END>
<BEG> can one use the _firstchild pointer to retrieve the first dom child return <END>
<BEG> adds item to the cache that point to new file that be n't describe in the cache <SEG> and optionally delete old entry <END>
<BEG> called when the importloader wish to resolve the give import <END>
<BEG> ; digestinputstream input = digestinputstream conn getinputstream ; ioutil copycompletely input <SEG> buffer ; digest = hexbin bytestostring input getmessagedigest digest ; } catch exception e { warn could not copy remote resource + schemalocation + : + e getmessage ; return ; } if digest equal resource getsha1 & & fileexists filename { warn resource + filename + be unchanged from + schemalocation + <END>
<BEG> invokes javac on the generate source file in order to turn them into binary file in the output directory <END>
<BEG> diffs the content of two jar <SEG> look only at the schema typesystems save inside those jar <END>
<BEG> diffs the content of two dirs look only at the xsb file contain in these two dirs updated diffs with a list of difference for the time be <SEG> string describe the difference <END>
<BEG> diffs the two give file assume they be in xsb format updates diffs with difference in string format <END>
<BEG> use this method to avoid call { link java lang system # exit int } param args be command line option return exitcode <END>
<BEG> copies the schema or wsdl at the source uri to the target uri <SEG> along with any relative reference <END>
<BEG> creates a new binding source file java and return a writer for it <END>
<BEG> byte to be test if it be base64 alphabet param octect return <END>
<BEG> converts bytes to a hex string <END>
<BEG> array of byte to encode param binarydata return return encode binary array <END>
<BEG> encodes octects use utf-8 into hex data param binarydata string contain hex data return string contain decode data <END>
<BEG> return returns the validation state up to this point <END>
<BEG> this method will have bigdecimals with the same arithmetic value to the same hash code eg <SEG> 2 3 & 2 30 will have the same hash <END>
<BEG> true if have id attribute <END>
<BEG> unsets the id attribute <END>
<BEG> appends and return a new empty code element <END>
<BEG> gets array of all interface element <END>
<BEG> gets ith interface element <END>
<BEG> sets array of all interface element warning : this method be not atomicaly synchronize <END>
<BEG> inserts and return a new empty value as xml a the ith interface element <END>
<BEG> gets a xml array of all schemalocation element <END>
<BEG> gets a xml ith schemalocation element <END>
<BEG> sets ith schemalocation element <END>
<BEG> inserts the value a the ith schemalocation element <END>
<BEG> return new qname uri <SEG> localname <SEG> prefix ; <END>
<BEG> returns a qnameset with the same content a the give qnamesetspecification <END>
<BEG> returns a qnameset corresponding to the give wildcard namespace string <END>
<BEG> true if this modeltransitionset contain all qnames <END>
<BEG> returns a new qnameset that be the intersection of this one and another <END>
<BEG> returns a new qnameset that be the inverse of this one <END>
<BEG> namespaces that be fully exclude from the set except for a finite number of individual qname exception <END>
<BEG> namespaces that be fully include in set except for a finite number of individual qname exception <END>
<BEG> the set of qnames exclude from the set even though they be within a namespace that be otherwise fully include in the set <END>
<BEG> returns a string representation useful for debug <SEG> subject to change <END>
<BEG> true if the parameter be a subset of this set <END>
<BEG> inverts this qnamesetbuilder <END>
<BEG> adds the content of another qnameset to this qnamesetbuilder <END>
<BEG> removes an entire namespace uri from this qnamesetbuilder <END>
<BEG> removes all content of a give qnameset from this qnamesetbuilder <END>
<BEG> returns a { link qnameset } equivalent to the current state of this qnamesetbuilder <END>
<BEG> returns the reason for the failure <SEG> give by one of the numeric constant in this class <END>
<BEG> true if the rank for the pass soaparraytype be equal to this one <END>
<BEG> given soap 1 1-formatted index string <SEG> return an array index <END>
<BEG> returns the qname for the referenced type <END>
<BEG> true if this array contain nest array <END>
<BEG> soap 1 2 constructs a soaparraytype from soap-enc : itemtype and soap-enc : arraysize attribute param itemtype the item type qname param arraysize a string with dimentions like : 3 4 return a soaparraytype to represent this <END>
<BEG> soap 1 2 given an actual set of dimension that may differ from the default that be store <SEG> output the soap arraysize string <END>
<BEG> returns an int code that can be use for switch statement <END>
<BEG> clear { link threadlocal } s of the current thread <END>
<BEG> returns the xmlbeans package title <SEG> org apache xmlbeans <SEG> the value of { link package # getimplementationtitle xmlbeans class getpackage getimplementationtitle } <END>
<BEG> returns the xmlbeans vendor <SEG> apache software foundation <SEG> the value of { link package # getimplementationvendor xmlbeans class getpackage getimplementationvendor } <END>
<BEG> returns the xmlbeans version <SEG> the value of { link package # getimplementationversion xmlbeans class getpackage getimplementationversion } <END>
<BEG> gets the value for a give time field <END>
<BEG> returns the default year that be use when no year be specify <END>
<BEG> overrides gregoriancalendar computetime to apply a different default year <END>
<BEG> this option will cause the saver to save namespace attribute first <END>
<BEG> this option will cause the saver to reformat white space for easy reading <END>
<BEG> when use with < code > setsaveprettyprint < code > this set the indent amount to use <END>
<BEG> causes the saver to reduce the number of namespace prefix declaration <END>
<BEG> < p > use this option when parsing and save xml document < p > < p > for parse this option will annotate the text field in the store with cdatabookmark < p > < p > for save this option will save the text field annotate with cdatabookmark a cdata xml text < br > note : the savecdataentitycountthreshold and savecdatalengththreshold option and their default value still apply < p > < p > < b > note : due to the store representation <SEG> a cdata will not be recognize if it be imediately after non cdata text and all text follow it will be consider cdata < b > < br > example : < br > < pre > & lt ; a > & lt ; ! <END>
<BEG> if this option be set <SEG> all comment be strip when parse a document <END>
<BEG> if this option be set <SEG> then the schema compiler will permit and ignore multiple definition of the same component element <SEG> attribute <SEG> type <SEG> etc name in the give namespaces <END>
<BEG> if this option be set when an instance be create <SEG> then value facet will be check on each call to a setter or getter method on instance of xmlobject within the instance document <END>
<BEG> instructs the validator to skip element match an < any > particle with contentmodel= lax <END>
<BEG> if this option be set when compile a schema <SEG> then the give entityresolver will be consult in order to resolve any uris while download import schema <END>
<BEG> if this option be set when compile a schema <SEG> then the give uri will be consider a base uri when decide the directory structure for save the source inside the generated jar file <END>
<BEG> if this option be set when compile a schema <SEG> then the give schematypecodeprinter printer will be use to generate the java code <END>
<BEG> if pass null <SEG> return an empty option object <END>
<BEG> used to test a generic option on an option object that may be null <END>
<BEG> returns a list iterator of the element in this list in proper sequence <SEG> start at the specified position in this list <END>
<BEG> two xmlsimplelists be equal if all their item be equal <END>
<BEG> combines the hash code of all the list item <END>
<BEG> simplistic implementation of hash function that have < b > constant < b > time to compute - so it also mean diminish hash quality for long string but for xml parse it should be good enough <END>
<BEG> unknown property be < strong > always < strong > return a false <END>
<BEG> for maximum efficiency when write indent the required output be pre-computed this be internal function that recomputes buffer after user request chnages <END>
<BEG> an ordered list of child information item <SEG> in document order <END>
<BEG> an unordered set of unparsed entity information item <SEG> one for each unparsed entity declare in the dtd <END>
<BEG> evaluate this xpath against a give context <END>
<BEG> select all node that be selectable by this xpath expression <END>
<BEG> select only the first node that be selectable by this xpath expression <END>
<BEG> return the normalized string of this xpath expression <END>
<BEG> returns the string version of this xpath <END>
<BEG> retrieve the { link contextsupport } aggregation of < code > namespacecontext < code > <SEG> < code > functioncontext < code > <SEG> < code > variablecontext < code > <SEG> and { link navigator } <END>
<BEG> select all node that be selectable by this xpath expression on the give context object <END>
<BEG> default implementation that can not find element <END>
<BEG> returns true if the current filter match at least one of the context node <END>
<BEG> attempts to convert the give function argument value into a locale either via casting <SEG> extract it from a list or look up the name locale use reflection <END>
<BEG> tries to find a locale instance by name use xml : lang style encoding like 'en ' <SEG> 'en-us ' <SEG> 'en-us-brooklyn ' <END>
<BEG> finds the locale with the give language name with no country or variant <SEG> such a locale english or locale french param language be the language code to look for return the locale for the give language or null if one could not be find <END>
<BEG> set the jaxen < code > xpathfactory < code > to use during the parse to construct the xpath expression tree <END>
<BEG> retrieve the jaxen xpath expression tree <SEG> optionally simplify <END>
<BEG> adds a pattern for the parent of the current context node use in this pattern <END>
<BEG> allows the nodetest to be set <END>
<BEG> returns the uri of the current prefix or if no uri can be find <END>
<BEG> retrieve the expression contain the error <END>
<BEG> retrieve a string useful for denote where the error occur <END>
<BEG> retrieve the friendly multi-line error message <END>
<BEG> create an < code > xpathreader < code > use the value of the < code > org saxpath driver < code > system property <END>
<BEG> create an < code > xpathreader < code > use the pass in class name <END>
<BEG> minimal inline test <END>
<BEG> subroutine handle a single vendor <END>
<BEG> returns the next element in the stream include all sub element a a string param parser return throw org xmlpull v1 xmlpullparserexception throw java io ioexception <END>
<BEG> call parser nexttag and check that it be end_tag <SEG> throw exception if not <END>
<BEG> specifies that the parser produce by this factory will be validate it simply set feature xmlpullparser feature_validation to true or false <END>
<BEG> deprecate as of 1 4 8 use { link # canconvert class } <END>
<BEG> deprecate only use for java 1 4 support <END>
<BEG> gets the base class that this getter access <END>
<BEG> gets the name of the property that this getter extract <END>
<BEG> gets whether this property can get get <END>
<BEG> gets the value of this property for the specified object <END>
<BEG> returns true if the bean provider can instantiate the specified class <END>
<BEG> returns the default constructor <SEG> or null if none be find param type deprecate as of 1 4 6 use { link # newinstance class } or { link # caninstantiate class } directly <END>
<BEG> checks if the bean provider can instantiate this type <END>
<BEG> locates a serializable property <END>
<BEG> locates a property descriptor <END>
<BEG> returns an iterator for all field for some class param cls the class you be interested on return an iterator for it field deprecate as of 1 3 <SEG> use { link # fieldsfor class } instead <END>
<BEG> returns an iterator for all field for some class param cls the class you be interested on return an iterator for it field <END>
<BEG> deprecate as of 1 4 5 <SEG> use { link # getfieldornull class <SEG> string } instead <END>
<BEG> registers the field order to use for a specific type <END>
<BEG> deprecate as of 1 4 4 <SEG> minimal jdk version will be 1 7 for next major release <END>
<BEG> since 1 4 deprecate as of 1 4 10 <SEG> minimal jdk version will be 1 7 for next major release <END>
<BEG> since 1 4 deprecate as of 1 4 11 use { link # isversion int } <END>
<BEG> since 1 4 8 deprecate as of 1 4 10 use { link # isversion int } <END>
<BEG> checks current runtime against provide major java version <END>
<BEG> since 1 4 4 deprecate as of 1 4 5 use { link # loadclassforname string <SEG> boolean } <END>
<BEG> create the best matching reflectionprovider <END>
<BEG> get the xmlinputfactory implementation use normally by the current java runtime a standard <END>
<BEG> get an available base64 implementation <END>
<BEG> deprecate as of 1 4 5 <END>
<BEG> checks if treeset addall be optimize for sortedset argument <END>
<BEG> deprecate as of 1 4 5 no functionality <END>
<BEG> add a loader to the n param classloader <END>
<BEG> allows the customobjectinputstream which be expensive to create to be reuse <END>
<BEG> create an instance with dependency injection <END>
<BEG> slightly nice way to find <SEG> get and set field in class <END>
<BEG> get the boxed type for a primitive <END>
<BEG> check for a boxed type <END>
<BEG> get the primitive type by name <END>
<BEG> throw unsupportedoperationexception if call <END>
<BEG> deprecate as of 1 4 11 <SEG> with version 1 5 0 use { link hierarchicalstreamwriter # startnode string <SEG> class } directly <END>
<BEG> method to return the appropriate json type for a java type <END>
<BEG> create a hierarchicalstreamwriter that write json <END>
<BEG> notify the tracker that the stream have move into a new element <END>
<BEG> get a path element from the stack <END>
<BEG> current path in stream <END>
<BEG> unescapes xml-friendly name node or attribute param name the escaped xml-friendly name return an unescaped name with original character deprecate as of 1 4 <SEG> use { link # decodenode string } or { link # decodeattribute string } instead <END>
<BEG> escapes xml-unfriendly name node or attribute param name the unescaped xml-unfriendly name return an escaped name with original character deprecate as of 1 4 <SEG> use { link abstractreader } instead <END>
<BEG> escapes xml name node or attribute to be xml-friendly param name the unescaped xml name return an escaped name with original character replace deprecate as of 1 4 use { link # encodenode string } or { link # encodeattribute string } instead <END>
<BEG> retrieve the line terminator <END>
<BEG> returns the java class name that should be use for the give qname <END>
<BEG> registers the mapping of the java class name to the qname <END>
<BEG> allows an application to register an entity resolver <END>
<BEG> allows an application to register a dtd event handler <END>
<BEG> sets the xstream facade to use when marshalling object <END>
<BEG> escapes name substitute ' $ ' and ' _ ' with replacement string param name the name of attribute or node return the string with the escaped name deprecate as of 1 4 <SEG> use { link xmlfriendlynamecoder } instead <END>
<BEG> unescapes name re-enstating ' $ ' and ' _ ' when replacement string be find param name the name of attribute or node return the string with unescaped name deprecate as of 1 4 <SEG> use { link xmlfriendlynamecoder } instead <END>
<BEG>  noop implementation that do not decode <END>
<BEG> deprecate as of 1 3 1 <SEG> use { link # getconverterfromattribute class <SEG> string <SEG> class } <END>
<BEG> tells this mapper to use an attribute for this field <END>
<BEG> deprecate as of 1 3 <SEG> method be a leftover of an old implementation <END>
<BEG> deprecate as of 1 3 <SEG> use combination of { link # serializedmember class <SEG> string } and { link # getconverterfromitemtype string <SEG> class <SEG> class } <END>
<BEG> given a key <SEG> the escape method return the filename which shall be use <END>
<BEG> sets whether the server support in-band registration <END>
<BEG> returns true if the server support create new account <END>
<BEG> returns an unmodifiable collection of the name of the required account attribute <END>
<BEG> returns the value of a give account attribute or < tt > null < tt > if the account attribute be n't find <END>
<BEG> returns the instruction for create a new account <SEG> or < tt > null < tt > if there be no instruction <END>
<BEG> creates a new account use the specify username and password <END>
<BEG> deletes the currently logged-in account from the server <END>
<BEG> returns the name of the user the chat be with <END>
<BEG> sends the specified text a a message to the other chat participant <END>
<BEG> adds a packet listener that will be notify of any new message in the chat <END>
<BEG> returns an unmodifiable collection of all of the listener register with this chat <END>
<BEG> creates a { link org jivesoftware smack packetcollector } which will accumulate the messages for this chat <END>
<BEG> creates a new chat use the specify thread id <SEG> then return it <END>
<BEG> register a new listener with the chatmanager to recieve event relate to chat <END>
<BEG> removes a listener <SEG> it will no longer be notify of new event relate to chat <END>
<BEG> returns an account manager instance for this connection <END>
<BEG> get the collection of listener that be interested in connection creation event <END>
<BEG> adds a connection listener to this connection that will be notify when the connection close or fails <END>
<BEG> removes a connection listener from this connection <END>
<BEG> get the collection of listener that be interested in connection event <END>
<BEG> removes a packet listener for receive packet from this connection <END>
<BEG> get a map of all packet listener for received packet of this connection <END>
<BEG> process all packet listener for send packet <END>
<BEG> process interceptor <END>
<BEG> returns the tls security mode use when make the connection <END>
<BEG> retuns the path to the keystore file <END>
<BEG> returns the keystore type <SEG> or < tt > null < tt > if it 's not set <END>
<BEG> returns the pkcs11 library file location <SEG> need when the keystore type be pkcs11 <END>
<BEG> sets the pkcs11 library file location <SEG> need when the keystore type be pkcs11 param pkcs11library the path to the pkcs11 library file <END>
<BEG> sets if the whole chain of certificate present by the server be go to be check <END>
<BEG> returns true if root ca checking be go to be do <END>
<BEG> sets if root ca checking be go to be do <END>
<BEG> returns true if self-signed certificate be go to be accept <END>
<BEG> sets if self-signed certificate be go to be accept <END>
<BEG> returns true if certificate present by the server be go to be check for their validity <END>
<BEG> sets if certificate present by the server be go to be check for their validity <END>
<BEG> sets if the connection be go to use stream compression <END>
<BEG> returns true if the client be go to use sasl authentication when log into the server <END>
<BEG> returns true if the new connection about to be establish be go to be debug <END>
<BEG> sets if the new connection about to be establish be go to be debug <END>
<BEG> sets if the reconnection mechanism be allow to be use <END>
<BEG> sets the socket factory use to create new xmppconnection socket <END>
<BEG> sets if an initial available presence will be send to the server <END>
<BEG> returns true if the roster will be load from the server when logging in <END>
<BEG> sets if the roster will be load from the server when logging in <END>
<BEG> returns a callbackhandler to obtain information <SEG> such a the password or principal information during the sasl authentication <END>
<BEG> returns true if an available presence should be send when log in while reconnecting <END>
<BEG> notification that the root window be close <END>
<BEG> adds a filter to the filter list for the and operation <END>
<BEG> non-javadoc see org jivesoftware smack filter packetfilter # accept org jivesoftware smack packet packet <END>
<BEG> returns the xml element name of the extension sub-packet root element <END>
<BEG> returns an unmodifiable collection of the name that can be use to get value of the packet extension <END>
<BEG> returns a packet extension value give a name <END>
<BEG> sets a packet extension value use the give name <END>
<BEG> convenience method to create a new empty { link type # result iq type result } iq base on a { link type # get iq type get } or { link type # set iq type set } iq <END>
<BEG> convenience method to create a new { link type # error iq type error } iq base on a { link type # get iq type get } or { link type # set iq type set } iq <END>
<BEG> adds a subject with a corresponding language <END>
<BEG> removes the subject with the give language from the message <END>
<BEG> removes the subject from the message and return true if the subject be remove <END>
<BEG> returns who the packet be be send to <SEG> or < tt > null < tt > if the value be not set <END>
<BEG> sets who the packet be be send to <END>
<BEG> returns the error associate with this packet <SEG> or < tt > null < tt > if there be no error <END>
<BEG> returns an unmodifiable collection of the packet extension attach to the packet <END>
<BEG> returns the first packet extension that match the specified element name and namespace <SEG> or < tt > null < tt > if it do n't exist <END>
<BEG> adds a packet extension to the packet <END>
<BEG> returns the packet property with the specify name or < tt > null < tt > if the property do n't exist <END>
<BEG> sets a property with an object a the value <END>
<BEG> returns the extension sub-packets include property data a an xml string <SEG> or the empty string if there be no packet extension <END>
<BEG> returns the default language use for all message contain localized content <END>
<BEG> returns true if the { link type presence type } be available online and false if the user be unavailable offline <SEG> or if this be a presence packet involve in a subscription operation <END>
<BEG> returns true if the presence type be { link type # available available } and the presence mode be { link mode # away away } <SEG> { link mode # xa extend away } <SEG> or { link mode # dnd do not disturb } <END>
<BEG> sets the mode of the presence update <END>
<BEG> set or update a privacy list with privacy item <END>
<BEG> set the active list base on the default list <END>
<BEG> deletes an exist privacy list <END>
<BEG> returns a specific privacy list <END>
<BEG> sets a give privacy list a the new user default list <END>
<BEG> returns the name associate with the active list set for the session <END>
<BEG> returns the name of the default list that apply to the user a a whole <END>
<BEG> returns the collection of privacy list that the user hold <END>
<BEG> returns whether the receiver allow or decline the use of an active list <END>
<BEG> returns all the list name the user have define to group restriction <END>
<BEG> returns whether the receiver allow or deny incoming iq stanza or not <END>
<BEG> returns whether the receiver allow or deny incoming message or not <END>
<BEG> sets the order where the receiver be process <END>
<BEG> sets the element identifier to apply the action <END>
<BEG> returns the type hold the kind of communication it will allow or block <END>
<BEG> returns whether the receiver allow or deny every kind of communication <END>
<BEG> answer an xml representation of the receiver accord to the rfc 3921 <END>
<BEG> returns the registration instruction <SEG> or < tt > null < tt > if no instruction have be set <END>
<BEG> sets the registration instruction <END>
<BEG> returns the map of string key value pair of account attribute <END>
<BEG> returns an unmodifiable collection for the roster item in the packet <END>
<BEG> returns an iterator for the error extension attach to the xmpperror <END>
<BEG> set the packet extension to the error <END>
<BEG> explicitly cancel the packet collector so that no more result be queue up <END>
<BEG> returns the packet filter associate with this packet collector <END>
<BEG> polls to see if a packet be currently available and return it <SEG> or immediately return < tt > null < tt > if no packet be currently in the result queue <END>
<BEG> processes a packet to see if it meet the criterion for this packet collector <END>
<BEG> initializes the reader in order to be use <END>
<BEG> shuts the packet reader down <END>
<BEG> cleans up all resource use by the packet reader <END>
<BEG> sends a notification indicating that the connection be reconnected successfully <END>
<BEG> sends the specified packet to the server <END>
<BEG> starts the packet writer thread and open a connection to the server <END>
<BEG> sends to the server a new stream element <END>
<BEG> returns the privacylistmanager instance associate with a give connection <END>
<BEG> answer the privacy list item under listname with the allow and block permission <END>
<BEG> the client have create a new list <END>
<BEG> returns the only providermanager valid instance <END>
<BEG> sets the only providermanager valid instance to be use by all connections <END>
<BEG> returns the iq provider register to the specify xml element name and namespace <END>
<BEG> removes an iq provider with the specified element name and namespace <END>
<BEG> returns the packet extension provider register to the specify xml element name and namespace <END>
<BEG> fires listener when a reconnection attempt have fail <END>
<BEG> fires listener when the connection will retry a reconnection <END>
<BEG> the connection have successfull gotten connect <END>
<BEG> returns the default subscription process mode to use when a new roster be create <END>
<BEG> returns the subscription processing mode <SEG> which dictate what action smack will take when subscription request from other user be make <END>
<BEG> reloads the entire roster from the server <END>
<BEG> creates a new group < p > < p > note : you must add at least one entry to the group for the group to be keep after a logout login <END>
<BEG> creates a new roster entry and presence subscription <END>
<BEG> returns an unmodifiable collection of all entry in the roster <SEG> include entry that do n't belong to any group <END>
<BEG> returns a count of the unfiled entry in the roster <END>
<BEG> returns an unmodifiable collection for the unfiled roster entry <END>
<BEG> returns the roster entry associate with the give xmpp address or < tt > null < tt > if the user be not an entry in the roster <END>
<BEG> returns true if the specify xmpp address be an entry in the roster <END>
<BEG> returns the roster group with the specify name <SEG> or < tt > null < tt > if the group do n't exist <END>
<BEG> returns an unmodifiable collection of all the roster group <END>
<BEG> returns an iterator of presence object for all of a user 's current presence or an unavailable presence if the user be unavailable offline or if no presence information be available <SEG> such a when you be not subscribe to the user 's presence update <END>
<BEG> returns the jid of the user associate with this entry <END>
<BEG> updates the state of the entry with the new value <END>
<BEG> returns an unmodifiable collection of the roster group that this entry belong to <END>
<BEG> returns the roster subscription type of the entry <END>
<BEG> indicates whether some other object be equal to this by compare all member <END>
<BEG> returns an unmodifiable collection of all entry in the group <END>
<BEG> returns true if the specified entry be part of this group <END>
<BEG> adds a roster entry to this group <END>
<BEG> builds and send the < tt > auth < tt > stanza to the server <END>
<BEG> returns the identity of the remote server a define in the specified certificate <END>
<BEG> returns the smack version information <SEG> eg 1 3 0 <END>
<BEG> returns the number of millisecond to wait for a response from the server <END>
<BEG> returns the number of milleseconds delay between send keep-alive request to the server <END>
<BEG> gets the default max size of a packet collector before it will delete the old packet <END>
<BEG> add a sasl mechanism to the list to be use <END>
<BEG> add a collection of sasl mechanism to the list to be use <END>
<BEG> returns true if the local socks5 proxy should be start <END>
<BEG> sets if the local socks5 proxy should be start <END>
<BEG> return the port of the local socks5 proxy <END>
<BEG> removes the least recently use element if the cache size be great than or equal to the maximum allow size until the cache be at least 10 % empty <END>
<BEG> puts a key-value mapping into this map <END>
<BEG> puts all the value from the specify map into this map <END>
<BEG> clears the map <SEG> reset the size to zero and nullify reference to avoid garbage collection issue <END>
<BEG> compares two key <SEG> in internal converted form <SEG> to see if they be equal <END>
<BEG> compares two value <SEG> in external form <SEG> to see if they be equal <END>
<BEG> gets the index into the data storage for the hashcode specify <END>
<BEG> gets the entry map to the key specify <END>
<BEG> updates an exist key-value mapping to change the value <END>
<BEG> reuses an exist key-value mapping <SEG> store completely new data <END>
<BEG> adds a new key-value mapping into this map <END>
<BEG> adds an entry into this map <END>
<BEG> kills an entry ready for the garbage collector <END>
<BEG> checks the capacity of the map and enlarge it if necessary <END>
<BEG> changes the size of the data structure to the capacity propose <END>
<BEG> calculates the new threshold of the map <SEG> where it will be resize <END>
<BEG> creates an entry set iterator <END>
<BEG> gets the standard map hashcode <END>
<BEG> sets the value store in this map entry <END>
<BEG> compares this map entry with another map entry <END>
<BEG> initialise this subclass during construction <SEG> clone or deserialization <END>
<BEG> gets a mapiterator over the reference map <END>
<BEG> returns a set view of this map 's entry <END>
<BEG> purges stale mapping from this map before read operation <END>
<BEG> replaces the superclass method to store the state of this class <END>
<BEG> returns the host name and port that the specify xmpp server can be reach at for client-to-server communication <END>
<BEG> adds a reader listener to this reader that will be notify when new string be read <END>
<BEG> parses a message packet <END>
<BEG> parses an iq packet <END>
<BEG> parse the available sasl mechanism report from the server <END>
<BEG> parse a property sub-packet <END>
<BEG> parses sasl authentication error packet <END>
<BEG> parses stream error packet <END>
<BEG> parses error sub-packets <END>
<BEG> closes the connection by set presence to unavailable then close the stream to the xmpp server <END>
<BEG> returns true if the connection to the server have successfully negotiate tls <END>
<BEG> notification message say that the server support tls so confirm the server that we want to secure the connection <END>
<BEG> the server have indicate that tls negotiation can start <END>
<BEG> sets the available stream compression method offer by the server <END>
<BEG> start use stream compression since the server have acknowledge stream compression <END>
<BEG> establishes a connection to the xmpp server and perform an automatic login only if the previous connection state be log authenticated <END>
<BEG> returns the first extension of this stanza that have the give namespace <END>
<BEG> returns the first extension that match the specified element name and namespace <SEG> or < tt > null < tt > if it do n't exist <END>
<BEG> get the exception that cause the parser to fail <END>
<BEG> retrieve the raw stanza data <END>
<BEG> inserts the specified element into this queue <SEG> wait if necessary for space to become available <END>
<BEG> creates a new thread with the give runnable <SEG> mark it daemon <SEG> start it and return the started thread <END>
<BEG> creates a new thread with the give runnable <SEG> mark it daemon <SEG> set the name <SEG> start it and return the started thread <END>
<BEG> perform an action and wait for an event <END>
<BEG> signal an event and the event result <END>
<BEG> get the list of charsequences representation of this instance <END>
<BEG> get the first value for the give key <SEG> or < code > null < code > if there be no entry <END>
<BEG> get all value for the give key <END>
<BEG> remove the mapping of the give key to the value <END>
<BEG> returns a new list contain all value of this multi map <END>
<BEG> hashes a string use the sha-1 algorithm and return the result a a string of hexadecimal number <END>
<BEG> encodes an array of byte a string representation of hexadecimal <END>
<BEG> returns a random string of number and letter low and upper case of the specified length <END>
<BEG> transform a collection of object to a whitespace delimit string <END>
<BEG> return the string representation of the give char sequence if it be not null <END>
<BEG> write the content of this < code > xmlstringbuilder < code > to a { link writer } <END>
<BEG> increment the stream management height counter <END>
<BEG> calculates the delta of the last known stanza handle count and the new report stanza handled count while consider that the new value may be wrap after 2^32-1 <END>
<BEG> stop the bundle and defer mechanism that be start when this instance of { link bundleanddefer } be emit by smack <END>
<BEG> returns true if this conference room should be auto-joined on startup <END>
<BEG> returns the full jid of this conference room <END>
<BEG> returns the nickname to use when join this conference room <END>
<BEG> set to true if this url be an rss or news feed <END>
<BEG> returns < code > true < code > if the session be mediate over a socks proxy <SEG> < code > false < code > if this session be establish through a direct connection between the initiator and target <END>
<BEG> returns an iterator for the available option that the user have in order to answer the question <END>
<BEG> returns the variable name that the question be fill out <END>
<BEG> adds a default value to the question if the question be part of a form to fill out <END>
<BEG> removes all the value of the field <END>
<BEG> adss an available option to the question that the user have in order to answer the question <END>
<BEG> returns the affiliation of the afffiliated user <END>
<BEG> returns the total number of character to receive in the history <END>
<BEG> returns the number of second to use to filter the message receive during that time <END>
<BEG> returns the since date to use to filter the message receive during that time <END>
<BEG> returns the history that manage the amount of discussion history provide on enter a room <END>
<BEG> non-javadoc see org jivesoftware smack packet packetextension # getelementname <END>
<BEG> returns an iterator for the name that can be use to get value of the private data <END>
<BEG> returns a value give a name <END>
<BEG> returns the xml representation of a message event accord the specification <END>
<BEG> get the item id 's of the item that have be delete <END>
<BEG> get the list of { link item } that be publish <END>
<BEG> gets the original date the item be publish <END>
<BEG> gets the item relate to the type of request or event <END>
<BEG> set the list of subscription id 's for this event <END>
<BEG> returns a string array for the group name that the roster entry belongs to <END>
<BEG> returns the maximum number of chat the agent can participate in <END>
<BEG> sets the agent 's current status with the workgroup <END>
<BEG> returns the userid that the offer originate from <END>
<BEG> returns the jid of the user that make the offer request <END>
<BEG> the fully qualified name of the workgroup eg support example com <END>
<BEG> the session id associate with the offer <END>
<BEG> return the jid of the user for which this revocation be issue <END>
<BEG> return the server issue message a to why this revocation be issue <END>
<BEG> return the timestamp at which the revocation be issue <END>
<BEG> returns an iterator for the user in the queue wait to be rout to an agent queueuser instance <END>
<BEG> returns the average amount of time user wait in the queue before be rout to an agent <END>
<BEG> returns the date of the old request wait in the queue <END>
<BEG> returns the current number of active chat session in the queue <END>
<BEG> return whether this instance have finish dispatch it message <END>
<BEG> this be a utility method that compare two booleans when one or both of the object might be < code > null < code > the result of this method be determine a follow : < ol > < li > if < code > b1 < code > and < code > b2 < code > be both true or neither < code > b1 < code > nor < code > b2 < code > be true <SEG> return < code > true < code > <END>
<BEG> this be a utility method that compare two object when one or both of the object might be < code > null < code > <END>
<BEG> returns < code > true < code > if the specified array be not null and contain a non-null element <END>
<BEG> returns < code > null < code > if the specified string be empty or < code > null < code > <END>
<BEG> returns < code > null < code > if the specified object be null or if it < code > tostring < code > representation be empty <END>
<BEG> determines if a string have be change <END>
<BEG> build a list of all element in an iterator <END>
<BEG> creates an iterator that be the reverse of a listiterator <END>
<BEG> notifies about failed bind operation param olderror the already bound throwable param failedvalue the value attempt to be bind param uniquebind flag indicating bindunique method call <END>
<BEG> notifies all listener about failed bind operation param olderror the already bound throwable param failedvalue the value attempt to be bind param uniquebind flag indicating bindunique method call <END>
<BEG> returns a reducer return minimum of two value <SEG> or { code null } if both argument be null <SEG> and that cast it argument a comparable on each comparison <SEG> throw classcastexception on failure <END>
<BEG> returns a reducer return the minimum of two double element <SEG> use natural comparator <END>
<BEG> returns a comparator for longs rely on natural ordering <END>
<BEG> returns a predicate evaluate to true if it argument be null <END>
<BEG> returns a generator produce uniform random value with the same property a { link java util random # nextint } <END>
<BEG> returns a predicate evaluate to true if the first argument { code == } the second <END>
<BEG> returns a predicate evaluate to true if the first argument { code ! = } the second <END>
<BEG> returns a { link collection } view of the value contain in this map <END>
<BEG> resizes the thread pool to the specify value param poolsize the new pool size <END>
<BEG> returns the value of a system property which default to true <END>
<BEG> < p > if the delegate executor be already an instance of { code completablescheduledexecutorservice } <SEG> it be return untouched <SEG> and the rest of this documentation do not apply <END>
<BEG> returns the number of key-value mapping in this map <END>
<BEG> removes all of the mapping from this map <END>
<BEG> throw classcastexception  throw nullpointerexception if { code fromelement } be null throw illegalargumentexception  <END>
<BEG> inserts the specified element into this delay queue <END>
<BEG> throws { code unsupportedoperationexception } <END>
<BEG> returns a pseudorandom <SEG> uniformly distribute value between the give least value inclusive and bound exclusive <END>
<BEG> main mechanic for take poll <END>
<BEG> throw rejectedexecutionexception  throw nullpointerexception  <END>
<BEG> atomically decrement by one the current value <END>
<BEG> atomically add the give value to the current value <END>
<BEG> returns a { link callable } object that <SEG> when call <SEG> run the give privileged action and return it result <END>
<BEG> unlock to allow both put and take <END>
<BEG> returns an iterator over the element in this queue in proper sequence <END>
<BEG> returns a string identify this lock <SEG> as well a it lock state <END>
<BEG> returns { code true } if this lock have fairness set true <END>
<BEG> always return < tt > false < tt > <END>
<BEG> state check need by scheduledthreadpoolexecutor to enable run task during shutdown <END>
<BEG> returns the core number of thread <END>
<BEG> starts all core thread <SEG> cause them to idly wait for work <END>
<BEG> returns the current number of thread in the pool <END>
<BEG> returns the approximate number of thread that be actively execute task <END>
<BEG> performs a timed < tt > thread join < tt > use this time unit <END>
<BEG> construct a new mock annotation instance <END>
<BEG> converts the underlie numerical type to an long a if it be cast in java <END>
<BEG> returns the underlying boolean value a java primitive boolean <END>
<BEG> returns the type name <SEG> in dotname form <SEG> that represent the java enumeration of this value <END>
<BEG> converts an underlying numerical array to a java primitive long array <END>
<BEG> returns an array of nested annotation represent the underlying annotation array value <END>
<BEG> constructs a componentized dotname <END>
<BEG> read the index at the associated stream of this reader <END>
<BEG> writes the specified index to the associate output stream <END>
<BEG> returns the super low bound of this wildcard <END>
<BEG> find the classpath url for a specific classpath resource <END>
<BEG> non-javadoc see org aspectj lang reflect ajtype # getgenericsupertype <END>
<BEG> non-javadoc see org aspectj lang reflect ajtype # getpointcut java lang string <END>
<BEG> called by object that be traverse the node of the tree implicitely define by the content of a java class <END>
<BEG> return string representation <END>
<BEG> return class index of inner class <END>
<BEG> return deep copy of this object <END>
<BEG> return class name <END>
<BEG> set file name of class <SEG> aka sourcefile attribute value <END>
<BEG> hunts for a signature attribute on the member and return it content <END>
<BEG> replace give field with new one <END>
<BEG> set end of handler param end_pc end of handled region inclusive <END>
<BEG> set the position <SEG> i e <SEG> the byte code offset of the contain instruction <END>
<BEG> return true <SEG> if ih be target of this instruction <END>
<BEG> also work for instruction whose stack effect depend on the constant pool entry they reference <END>
<BEG> param old_ih old target <SEG> either start or end param new_ih new target <END>
<BEG> store a new javaclass into this repository <END>
<BEG> remove class from repository <END>
<BEG> print the stack trace of any enclosed thrown or this otherwise <END>
<BEG> return fail_nomessage if message be empty or imessage otherwise <END>
<BEG> return imessage info message with message content <END>
<BEG> return returns the affectedtypename <END>
<BEG> return true if this be a readable file <END>
<BEG> throw illegalargumentexception unless dir be a readable directory <END>
<BEG> render a best path <SEG> canonical or absolute <END>
<BEG> writes a boolean array with our encode <END>
<BEG> return a resolvedmember represent the synthetic setter for the field <END>
<BEG> this static method go on the declare aspect of the inter-type method <END>
<BEG> return an amalgamation of the declare field statement <END>
<BEG> return an amalgamation of the declare type eow statement <END>
<BEG> dump method <END>
<BEG> non-javadoc see org aspectj weaver pattern pointcut # couldmatchkinds <END>
<BEG> non-javadoc see org aspectj weaver pattern patternnode # write java io dataoutputstream <END>
<BEG> creates an iterator i base on base iterators a and b <END>
<BEG> return unqualifiedclassname hashcode <END>
<BEG> non-javadoc see org aspectj weaver resolvedtype # getdeclaredmethods <END>
<BEG> non-javadoc see org aspectj weaver resolvedtype # iscoerceablefrom org aspectj weaver resolvedtype <END>
<BEG> create the old style < 1 6 9 format setter name which include the aspect request access and the type contain the field in the name of the type <END>
<BEG> this field go on the class the field be declare onto <END>
<BEG> non-javadoc see org aspectj weaver pattern pointcut # fastmatch org aspectj weaver pattern fastmatchinfo <END>
<BEG> non-javadoc see org aspectj weaver pattern pointcut # match org aspectj weaver shadow <END>
<BEG> non-javadoc see org aspectj weaver pattern pointcut # concretize1 org aspectj weaver resolvedtype <SEG> org aspectj weaver intmap <END>
<BEG> non-javadoc see java lang object # equal java lang object <END>
<BEG> non-javadoc see java lang object # hashcode <END>
<BEG> method isany <END>
<BEG> return an iterator through all of the method of this type <SEG> in order for check from jvm spec 2ed 5 4 3 3 <END>
<BEG> some type mungers be create purely to help with the implementation of shadow mungers <END>
<BEG> test if a label mark the end of a trigger block param label the label to be test return true if the label mark the start of a trigger block otherwise false <END>
<BEG> returns jar that this retransformer be ask to { link # appendjarfile printwriter <SEG> jarfile <SEG> boolean add } to the system classloader <END>
<BEG> get the column position for this node return the column position for this node <END>
<BEG> have this rule fail to typecheck or compile return true if this rule have fail to typecheck or compile otherwise false <END>
<BEG> read-unlock just this level <END>
<BEG> decrement the counter value <END>
<BEG> when this event be fire the monitor will be add to the rolling buffer <END>
<BEG> returns true if any listener exist <END>
<BEG> decrement allactive and primaryactive not this active a that be do every time <END>
<BEG> returns any object that have a name key <END>
<BEG> used to set any arbitrary object into the key <END>
<BEG> monitor a preparedstatements method <SEG> as well a any resultsets it return assume the proper monitoring option be enable <END>
<BEG> set the number of exceptions that can be store in the buffer before the old entry must be remove <END>
<BEG> set the number of sql statements that can be store in the buffer before the old entry must be remove <END>
<BEG> remove all sql from the buffer <END>
<BEG> get the sql buffer a an array <SEG> so it can be display <END>
<BEG> return true if the bufferlist be empty <END>
<BEG> decrement the counter by { code n } <END>
<BEG> creates a new ewma which be equivalent to the unix five minute load average and which expect to be tick every 5 second <END>
<BEG> returns the { link # sum } a a { code float } after a widen primitive conversion <END>
<BEG> creates a new { link histogram } and register it under the give name <END>
<BEG> returns the number of value in the snapshot <END>
<BEG> returns the value at the 95th percentile in the distribution <END>
<BEG> returns the current thread 's { code threadlocalrandom } <END>
<BEG> mark the occurrence of a give number of event <END>
<BEG> return the { link histogram } register under this name ; or create and register a new { link histogram } use the provide metricsupplier if none be register <END>
<BEG> returns a set of the name of all the metric in the registry <END>
<BEG> times and record the duration of event <END>
<BEG> returns the value at the give quantile <END>
<BEG> writes the value of the snapshot to the give stream <END>
<BEG> sets the height of the chart in pixel <END>
<BEG> sets the set of tag name for which value will be display on the chart <END>
<BEG> sets the maximum number of data point to display on a chart <END>
<BEG> sets the value of the < b > createrollupstatistics < b > option <END>
<BEG> helper method parse the specified single element from a config string to return the corresponding timingstatsvalueretriever <END>
<BEG> formats the specified time in yyyy-mm-dd hh : mm : s format <END>
<BEG> identical to { link # lap string } <SEG> but also allow you to specify an exception to be log <END>
<BEG> identical to { link # lap string <SEG> string } <SEG> but also allow you to specify an exception to be log <END>
<BEG> gets the runnable task that be wrap by this timedrunnable <END>
<BEG> executes the run method of the underlying task <SEG> use the loggingstopwatch to track the execution time <END>
<BEG> update the min if the provided value be small than the current min <END>
<BEG> returns the current min value since the last reset <END>
<BEG> unregister a custom monitor <END>
<BEG> get the max of the value currently in our buffer <END>
<BEG> whether we should publish a 'totaltime ' statistic <END>
<BEG> get the tag associate with the current thread <END>
<BEG> ensures the truth of an expression involve one or more parameter to the call method <END>
<BEG> gets all method from class and it super class <END>
<BEG> returns an unmodifiable view of the list compose of element <END>
<BEG> returns an unmodifiable view of the set create from the give element <END>
<BEG> always return 1 <END>
<BEG> creates a new instance of < code > { link localdatetimeassert } < code > <END>
<BEG> create assertion for { link intpredicate } <END>
<BEG> creates a new instance of < code > { link listassert } < code > from the give { link doublestream } <END>
<BEG>  < p > example : < pre > < code class='java ' > assertion will pass assertthat bigdecimal one isone ; assertion will fail assertthat new bigdecimal & quot ; 8 00 & quot ; isone ; < code > < pre > <END>
<BEG>  < p > example : < pre > < code class='java ' > assertion will pass assertthat new bigdecimal & quot ; -8 0 & quot ; isnegative ; assertion will fail assertthat new bigdecimal & quot ; 8 0 & quot ; isnegative ; < code > < pre > <END>
<BEG> verifies that the actual value be negative <END>
<BEG> verifies that the actual value be non positive negative or equal zero <END>
<BEG> verifies that the actual number be close to the give one within the give percentage < br > if difference be equal to the percentage value <SEG> assertion be consider valid <END>
<BEG> verifies that the actual number be not close to the give one by the give percentage < br > if difference be equal to the percentage value <SEG> the assertion fails <END>
<BEG> verifies that the actual value be in [ start <SEG> end ] range start and end include <END>
<BEG> verifies that the actual value be in ] start <SEG> end [ range start exclude <SEG> end exclude <END>
<BEG> verifies that the number of value in the actual group be less than the give boundary <END>
<BEG> verifies that the number of value in the actual group be less than or equal to the give boundary <END>
<BEG> verifies that the actual array contain the give value at the give index <END>
<BEG> verifies that the actual array end with the give sequence of value <SEG> without any other value between them <END>
<BEG> verifies that the actual value be { code false } <END>
<BEG> verifies that the actual array contain only the give value and nothing else <SEG> in any order <END>
<BEG> verifies that the actual array contain the give value only once <END>
<BEG> verifies that the actual array do not contain the give value <END>
<BEG> verifies that the actual array do not contain the give value at the give index <END>
<BEG> verifies that the actual group contain only the give value and nothing else <SEG> < b > in order < b > <END>
<BEG> verifies that the actual array contains at least one of the give value <END>
<BEG> verifies that the actual value be equal to the give one <END>
<BEG> verifies that the actual value be not equal to the give one <END>
<BEG>  < p > example : < pre > < code class='java ' > assertion will pass assertthat byte -1 isnegative ; assertion will fail assertthat byte 1 isnegative ; < code > < pre > <END>
<BEG> verifies that the actual value be great than or equal to the give one <END>
<BEG> verifies that the actual number be close to the give one within the give offset value <END>
<BEG> verifies that the actual { code charsequence } be empty <SEG> i e <SEG> it have a length of 0 and be not { code null } <END>
<BEG> verifies that the actual { code charsequence } be blank <SEG> i e <END>
<BEG> verifies that the actual { code charsequence } have a length great than or equal to the give value use the { code length } method <END>
<BEG> verifies that the actual { code charsequence } contain all the value of the give iterable < b > in the iterable iteration order possibly with other value between them < b > <END>
<BEG> verifies that the actual { code charsequence } do not contain any of the give iterable <END>
<BEG> verifies that the actual { code charsequence } do not contain the give regular expression <END>
<BEG> verifies that the actual { code charsequence } start with the give prefix <END>
<BEG> verifies that the actual { code charsequence } match the give regular expression <END>
<BEG> verifies that the actual { code charsequence } be not equal to the give one <SEG> ignore whitespace difference <END>
<BEG> verifies that the actual { code charsequence } contain the give regular expression pattern <END>
<BEG> verifies that the actual { code class } be not an annotation <END>
<BEG> verifies that the actual { code class } be final have { code final } modifier <END>
<BEG> verifies that the { link completablefuture } be complete exceptionally <END>
<BEG> waits if necessary for at most the give time for this future to complete <SEG> and then return it result for futher assertion <END>
<BEG> same assertion a { link assert # isin iterable } but give date be represent a string either with one of the support default date format or a user custom date format set with method { link # withdateformat dateformat } <END>
<BEG> verifies that the actual { code date } be < b > strictly < b > after the give one <END>
<BEG> verifies that the actual { code date } be after or equal to the give one <END>
<BEG> same assertion a { link # isafterorequalsto date } but give date be represent a string either with one of the support default date format or a user custom date format set with method { link # withdateformat dateformat } <END>
<BEG> verifies that the actual { code date } be strictly in the future <END>
<BEG> deprecate use { link # hasyear int } instead <END>
<BEG> verifies that the actual { code date } minute be equal to the give minute <END>
<BEG> verifies that actual and give { code date } be chronologically in the same minute i e <END>
<BEG> add the give date format to the one use to parse date string in string base date assertion like { link # isequalto string } <END>
<BEG> remove all registered custom date format = & gt ; use only the default date format to parse string a date <END>
<BEG> verifies that the actual value be not equal to zero <END>
<BEG> verifies that the actual number be not close to the give one by less than the give offset < br > < p > when < i > ab actual - expect == offset value < i > <SEG> the assertion : < ul > < li > < b > succeed < b > when use { link assertions # bylessthan double } or { link offset # strictoffset number } < li > < li > < b > fail < b > when use { link assertions # within double } or { link assertions # offset double } < li > < ul > < p > < b > breaking change < b > since 2 9 0 3 9 0 : use { link assertions # bylessthan double } imply a < b > strict < b > comparison <SEG> use { link assertions # within double } to get the old behavior <END>
<BEG> verifies that the actual { code duration } have the give millis <END>
<BEG> verifies that the content of the actual { code file } be equal to the content of the give one <END>
<BEG> verifies that the content of the actual { code file } be the same a the expected one <SEG> the expect { code file } be read with the give charset while the charset use to read the actual path can be provide with { link # usingcharset charset } or { link # usingcharset string } prior to call this method ; if not <SEG> the platform 's default charset a return by { link charset # defaultcharset } will be use <END>
<BEG> verifies that the actual { code file } can be read by the application <END>
<BEG> verifies that the actual { code file } have give parent <END>
<BEG> verifies that the tested { link file } digest calculate with the specify { link messagedigest } be equal to the give one <END>
<BEG> verifies that the tested { link file } digest calculate with the specify algorithm be equal to the give one <END>
<BEG> create a { link float } comparator which compare float at the give precision and pas it to { link # usingelementcomparator comparator } <END>
<BEG> verifies that the { link future } be cancelled <END>
<BEG> same assertion a { link # isbeforeorequalto instant } but the { link instant } be build from give string <SEG> which must follow < a href= http : doc oracle com javase 8 doc api java time format datetimeformatter html # iso_instant > iso instant format < a > to allow call { link instant # parse charsequence } method <END>
<BEG> same assertion a { link # isnotequalto object } where object be expect to be { link instant } but here you pass { link instant } string representation that must follow < a href= http : doc oracle com javase 8 doc api java time format datetimeformatter html # iso_instant > iso instant format < a > to allow call { link instant # parse charsequence } method <END>
<BEG> verifies that the actual { link instant } be in the ] start <SEG> end [ period start and end exclude <END>
<BEG> extract multiple value from each { code iterable } 's element accord to the give { link throwingextractor } s and concatenate flatten the extracted value in a list that be use a the new object under test <END>
<BEG> filter the iterable under test keep only element match the give { link predicate } <END>
<BEG> verifies that the actual { code localdatetime } be after or equal to the give one accord to the { link chronolocaldatetime # timelineorder } comparator which be consistent with { link localdatetime # isafter chronolocaldatetime } <END>
<BEG> verifies that the actual { code localdatetime } be < b > strictly < b > after the give one accord to the { link chronolocaldatetime # timelineorder } comparator which be consistent with { link localdatetime # isafter chronolocaldatetime } <END>
<BEG> verifies that actual and give { code localdatetime } have same year <SEG> month <SEG> day and hour field minute <SEG> second and nanosecond field be ignore in comparison <END>
<BEG> verifies that at least one map entry satisfy the give { code entryrequirements } <END>
<BEG> verifies that the number of value in the { link map } be less than the boundary <END>
<BEG> verifies that the number of value in the { link map } be less than or equal to the boundary <END>
<BEG> verifies that the actual map have the same size a the give { link map } <END>
<BEG> use the give { link function } s to extract value from the { link map } 's entry <END>
<BEG>  throw assertionerror  <END>
<BEG> verifies that the actual array contain the give sequence in the correct order and < b > without extra value between the sequence value < b > <END>
<BEG> verifies that the actual array do not contain the give sequence in the give order and < b > without extra value between the sequence value < b > <END>
<BEG> verifies that the actual array contain the give subsequence in the correct order possibly with other value between them <END>
<BEG> verifies that the actual array do not contain the give subsequence in the correct order possibly with other value between them <END>
<BEG> verifies that there be < b > at least < i > one < i > < b > element in the actual array satisfy the give condition <END>
<BEG> verifies that there be < b > exactly < b > < i > n < i > element in the actual array satisfy the give condition <END>
<BEG> allows to set a specific comparator to compare property or field of element with the give type <END>
<BEG> allows to set a specific comparator for the give type of element or their field <END>
<BEG> filter the array under test into a list compose of the element match the give { link predicate } <SEG> allow to perform assertion on the filtered list <END>
<BEG> filter the array under test keep only element match the give assertion specify with a { link consumer } <END>
<BEG> verifies whether any element match the provided { link predicate } <END>
<BEG> allows to set a specific comparator to compare property or field with the give type <END>
<BEG> asserts that the actual object have the specify field or property <END>
<BEG> same assertion a { link # isbeforeorequalto java time offsetdatetime } but the { link java time offsetdatetime } be build from give string <SEG> which must follow < a href= http : doc oracle com javase 8 doc api java time format datetimeformatter html # iso_offset_date_time > iso offsetdatetime format < a > to allow call { link java time offsetdatetime # parse charsequence } method <END>
<BEG> verifies that the actual { code offsetdatetime } be after or equal to the give one accord to the comparator in use <END>
<BEG> verifies that the actual { code offsetdatetime } be < b > strictly < b > after the give one accord to the comparator in use <END>
<BEG> same assertion a { link # isnotequalto object } where object be expect to be { link java time offsetdatetime } but here you pass { link java time offsetdatetime } string representation that must follow < a href= http : doc oracle com javase 8 doc api java time format datetimeformatter html # iso_offset_date_time > iso offsetdatetime format < a > to allow call { link java time offsetdatetime # parse charsequence } method <END>
<BEG> verifies that actual and give { code offsetdatetime } have same year <SEG> month <SEG> day <SEG> hour <SEG> minute and second field <SEG> nanosecond field be ignore in comparison <END>
<BEG> verifies that the actual { link offsetdatetime } be in the ] start <SEG> end [ period start and end exclude accord to the comparator in use <END>
<BEG> verifies that the actual { link java util optional } contain the give value alias of { link # contains object } <END>
<BEG> verifies that the actual { link java util optionalint } have the value in argument <END>
<BEG> assert that the tested { link path } be a writable file <SEG> it check that the file exist accord to { link files # exist path <SEG> linkoption } and that it be writable accord to { link files # iswritable path } <END>
<BEG> assert that the tested { link path } be a directory <END>
<BEG> assert that the tested { link path } have the expect parent path <END>
<BEG> verify that the actual { code path } be a directory contain at least one file match the give { code predicate < path > } <END>
<BEG> verify that the actual { code path } be a directory contain at least one file match the give { code string } interpret a a path matcher a per { link filesystem # getpathmatcher string } <END>
<BEG> verify that the actual { code path } be a directory that do not contain any file match the give { code predicate < path > } <END>
<BEG> verify that the actual { code path } be a directory that do not contain any file match the give { code string } interpret a a path matcher a per { link filesystem # getpathmatcher string } <END>
<BEG> verifies that the { link predicate } evaluate all give { link iterable } 's element to { code false } <END>
<BEG> verifies that the actual group contain exactly the give value and nothing else <SEG> < b > in any order < b > < br > < p > example : < pre > < code class='java ' > assertion will pass assertthat new short [ ] { 1 <SEG> 2 } containsexactlyinanyorder short 1 <SEG> short 2 ; assertthat new short [ ] { 1 <SEG> 2 <SEG> 1 } containsexactlyinanyorder short 1 <SEG> short 1 <SEG> short 2 ; assertion will fail assertthat new short [ ] { 1 <SEG> 2 } containsexactlyinanyorder short 1 ; assertthat new short [ ] { 1 } containsexactlyinanyorder short 1 <SEG> short 2 ; assertthat new short [ ] { 1 <SEG> 2 <SEG> 1 } containsexactlyinanyorder short 1 <SEG> short 2 ; < code > < pre > param value the give value <END>
<BEG> fails with a message explain that a { link throwable } of give class be expect to be throw but have not be <END>
<BEG> creates a new <SEG> proxied instance of a { link pathassert } param actual the path return the create assertion object <END>
<BEG> create assertion for { link java util concurrent completablefuture } <END>
<BEG> create assertion for { link java util concurrent completionstage } by convert it to a { link completablefuture } and return a { link completablefutureassert } <END>
<BEG> verifies that the actual value be great than the give { link string } accord to { link string # compareto string } <END>
<BEG> verifies that the actual value be great than or equal to the give { link string } accord to { link string # compareto string } <END>
<BEG> verifies that the actual { code throwable } do not have a cause <END>
<BEG> verifies that the message of the actual { code throwable } contain all the give value <END>
<BEG> verifies that the actual { code throwable } have a suppress exception similar to the give one <SEG> that be with the same type and message it do not use the { link throwable # equal object equal } method for comparison <END>
<BEG> verifies that the actual { code uri } have no port <END>
<BEG> verifies that the actual { code url } have a parameter with the expect name <END>
<BEG> verifies that the actual { code url } have a parameter with the expect name and value <END>
<BEG> verifies that the actual { code url } do not have a parameter with the expect name and value <END>
<BEG> same assertion a { link # isafterorequalto zoneddatetime } but the { link zoneddatetime } be build from give string which must follow < a href= http : doc oracle com javase 8 doc api java time format datetimeformatter html # iso_date_time > iso date-time format < a > to allow call { link zoneddatetime # parse charsequence <SEG> datetimeformatter } method <END>
<BEG> same assertion a { link # isafter zoneddatetime } but the { link zoneddatetime } be build from give string <SEG> which must follow < a href= http : doc oracle com javase 8 doc api java time format datetimeformatter html # iso_date_time > iso date-time format < a > to allow call { link zoneddatetime # parse charsequence <SEG> datetimeformatter } method <END>
<BEG> alias for { link # offset float } to use with iscloseto assertion <END>
<BEG> assertions entry point for byte { link offset } to use with iscloseto assertion <END>
<BEG> assertions entry point for integer { link org assertj core data percentage } to use with iscloseto assertion for percentage <END>
<BEG> creates a new instance of < code > { link stringassert } < code > assumption <END>
<BEG> allows to capture and then assume on a { link throwable } easy do with lambda <END>
<BEG> creates a new instance of { link predicateassert } assumption <END>
<BEG> creates a new instance of < code > { link listassert } < code > assumption from the give { link doublestream } <END>
<BEG> verifies that the actual atomic value be false <END>
<BEG> verifies that the actual atomic array end with the give sequence of value <SEG> without any other value between them <END>
<BEG> verifies that the actual atomicintegerarray be sort in ascend order accord to the natural ordering of it element <END>
<BEG> verifies that the actual atomic have a negative value <END>
<BEG> verifies that the atomiclongarray have the give array <END>
<BEG> verifies that the number of value in the atomiclongarray be equal to the give one <END>
<BEG> verifies that the atomiclongarray have the same size a give { link iterable } <END>
<BEG> verifies that the actual { link atomiclongarray } contain the give value <SEG> in any order <END>
<BEG> verifies that the actual atomic array contain < b > only < b > the give value and nothing else <SEG> in any order <END>
<BEG> verifies that the actual atomic array contain the give value only once <END>
<BEG> verifies that the actual atomic array contain the give sequence <SEG> without any other value between them <END>
<BEG> verifies that the actual atomic array contain the give subsequence possibly with other value between them <END>
<BEG> verifies that the actual atomic array do not contain the give value <END>
<BEG> verifies that the actual atomiclongarray be sort accord to the give comparator < br > empty array be consider sorted whatever the comparator be < br > one element array be consider sorted if the element be compatible with comparator <SEG> otherwise an assertionerror be throw <END>
<BEG> verifies that the actual atomic have a value close to the give one within the give percentage < br > if difference be equal to the percentage value <SEG> assertion be consider valid <END>
<BEG> verifies that the actual atomic have a value close to the give one within the give offset <END>
<BEG> verifies that the atomicreferencearray be not empty <END>
<BEG> verifies that the unique element of the { link atomicreferencearray } satisfy the give assertion express a a { link consumer } <SEG> if it do not <SEG> only the first error be report <SEG> use { link softassertions } to get all the error <END>
<BEG> verifies that the actual atomicreferencearray have the same size a the give array <END>
<BEG> an alias of { link # containsonlyelementsof iterable } : verifies that actual contains all element of the give { code iterable } and nothing else <SEG> < b > in any order < b > <END>
<BEG> verifies that all element of the actual group be instance of give class or interface <END>
<BEG> verifies that the actual atomicreferencearray do not contain any element of the give { link iterable } i e <END>
<BEG> verifies that the actual atomicreferencearray do not contain duplicate <END>
<BEG> verifies that all element of actual be present in the give { code iterable } <END>
<BEG> verifies that the actual atomicreferencearray contain at least a null element <END>
<BEG> verifies that the actual atomicreferencearray do not contain null element <END>
<BEG> verifies that all element do n't satisfy the give condition <END>
<BEG> verifies that the actual atomicreferencearray contain all the element of give { code iterable } <SEG> in any order <END>
<BEG> use field property by field property comparison include inherited field property instead of rely on actual type a < code > equal < code > method to compare atomicreferencearray element for incoming assertion check <END>
<BEG> use a recursive field property by field property comparison include inherited field property instead of rely on actual type a < code > equal < code > method to compare atomicreferencearray element for incoming assertion check <END>
<BEG> use field property by field property comparison on the < b > give field property only < b > include inherit field property instead of rely on actual type a < code > equal < code > method to compare atomicreferencearray element for incoming assertion check <END>
<BEG> use field property by field property on all field property < b > except < b > the give one include inherited field property instead of rely on actual type a < code > equal < code > method to compare atomicreferencearray element for incoming assertion check <END>
<BEG> extract the value of give field or property from the array 's element under test into a new array <SEG> this new array become the array under test <END>
<BEG> extract the iterable value from the array 's element by apply an iterable extracting function on them and concatenate the result list into an array which become the new object under test <END>
<BEG> extract the iterable value from the array 's element by apply an iterable extracting function which might throw an exception on them and concatenate the result list into an array which become the new object under test <END>
<BEG> verifies that the actual atomicreferencearray contain at least one of the give { link iterable } element <END>
<BEG> creates a new instance of < code > { link org assertj core api bigintegerassert } < code > <END>
<BEG> creates a new instance of < code > { link org assertj core api charsequenceassert } < code > from a { link stringbuffer } <END>
<BEG> allows to capture and then assert on a { link throwable } more easily when use with java 8 lambda <END>
<BEG> returns the give assertion <END>
<BEG> entry point to check that an exception of type t be throw by a give { code throwingcallable } which allow to chain assertion on the thrown exception <END>
<BEG> alias for { link # thenexceptionoftype class } for { link illegalargumentexception } <END>
<BEG> creates a new assumption 's instance for a < code > byte < code > value <END>
<BEG> creates a new assumption 's instance for a { link byte } value <END>
<BEG> creates a new assumption 's instance for a < code > byte < code > s ' array <END>
<BEG> creates a new assumption 's instance for an object value <END>
<BEG> sets the description of the assertion that be go to be call after <END>
<BEG> verifies that { link doublepredicate } evaluate all the give value to { code false } <END>
<BEG> throws an { link assertionerror } with a message explain that a { link throwable } of give class be expect to be throw but have not be <END>
<BEG> filter the underlie group <SEG> keep only element satisfy the give { link condition } < br > same a { link # be condition } - pick the method you prefer to have the most readable code <END>
<BEG> filters the underlie iterable to keep object with property specify by { link # with string } < b > not in < b > the give value <END>
<BEG> { link instanceofassertfactory } for a { link completablefuture } <END>
<BEG> creates a new instance of < code > { link org assertj core api genericcomparableassert } < code > with standard comparison semantics <END>
<BEG> creates a new instance of < code > { link org assertj core api objectassert } < code > for any object <END>
<BEG> creates a new instance of < code > { link classassert } < code > < p > we do n't return { link classassert } a it have override method to annotate with { link safevarargs } <END>
<BEG> creates a new instance of < code > { link genericcomparableassert } < code > with standard comparison semantics <END>
<BEG> create int [ ] assertion for { link atomicintegerarray } <END>
<BEG> creates a new instance of < code > { link classassert } < code > param actual the actual value <END>
<BEG> creates a new instance of < code > { link org assertj core api classassert } < code > param actual the actual value <END>
<BEG> adds the give type to the list of type to force a recursive comparison on <END>
<BEG> determine if the pass in class have a non-object hashcode method <END>
<BEG> makes the recursive comparison to ignore the object under test field of the give type <END>
<BEG> by default the recursive comparison use overridden { code equal } method to compare field <SEG> this method allow to force a recursive comparison for the field match the give regexes it add them to the already registered one <END>
<BEG> verifies that the message of the actual { code throwable } be equal to the give one <END>
<BEG> verifies that the message of the actual { code throwable } contain the give description <END>
<BEG> verifies that the message of the actual { code throwable } do not contain any of the give value or be { code null } <END>
<BEG> verifies that the cause of the actual { code throwable } be < b > exactly < b > an instance of the give type <END>
<BEG> verifies that the root cause of the actual { code throwable } be an instance of the give type <END>
<BEG> verifies that the root cause of the actual { code throwable } be < b > exactly < b > an instance of the give type <END>
<BEG> assertions entry point for float { link offset } <END>
<BEG> sets the description of an assertion <SEG> if give null an empty { link description } be set <END>
<BEG> creates a new < code > { link allof } < code > param < t > the type of object the give condition accept <END>
<BEG> creates a new instance for a negative check of the { code final } modifier <END>
<BEG> indicates that the provide { link java util optionaldouble } should be empty <END>
<BEG> indicates that the provide { link java util optionaldouble } do not contain the provided argument <END>
<BEG> indicates that a value should be present in an empty { link java util optional } <END>
<BEG> returns the singleton instance of this class <END>
<BEG> provides extractor for extract multiple field or property from any object use reflection param < f > type to extract property from param fieldsorproperties the name of the field property to extract return the build { link function } <END>
<BEG> returns the singleton instance of this class base on { link standardcomparisonstrategy } <END>
<BEG> asserts that the actual value be a uppercase character <END>
<BEG> verifies that the actual { code class } be final <END>
<BEG> verifies that the actual { code class } have the declare { code field } <END>
<BEG> verifies that the actual { code class } have the { code method } <END>
<BEG> asserts that the give file have the give binary content <END>
<BEG> asserts that the give file be an exist directory <END>
<BEG> asserts that the number of element in the give { code iterable } be less than the boundary <END>
<BEG> asserts that the number of element in the give { code iterable } be less than or equal to the boundary <END>
<BEG> assert that the actual { code iterable } have the same size a the other array <END>
<BEG> asserts that the give { code iterable } contain only null element and nothing else <END>
<BEG> asserts that the give { code iterable } do not contain null element <END>
<BEG> asserts that the give { code map } be empty <END>
<BEG> asserts that the give { code map } be not empty <END>
<BEG> asserts that the number of entry in the give { code map } be between the give low and high boundary inclusive <END>
<BEG> verifies that the give { code map } contain an entry with value satisfy { code valuecondition } <END>
<BEG> verifies that the actual map not contain the give value <END>
<BEG> asserts that the actual value be equal to one < br > it do not rely on the custom comparisonstrategy if one be set <END>
<BEG> asserts that the actual value be not positive <END>
<BEG> asserts that two object be equal <END>
<BEG> asserts that two object be not equal <END>
<BEG> asserts that the give object be not { code null } <END>
<BEG> asserts that the give object be present in the give collection <END>
<BEG> asserts that the give object be not present in the give collection <END>
<BEG> asserts the give < code > { link predicate } < code > be not null <END>
<BEG> asserts the give < code > { link spliterator } < code > have the give characteristic <END>
<BEG> asserts the give < code > { link spliterator } < code > have only the give characteristic and no else <END>
<BEG> asserts that the give { code charsequence } be { code null } or empty <END>
<BEG> asserts that the size of the give { code charsequence } be great than or equal to the expect size param info contain information about the assertion <END>
<BEG> asserts that the number of entry in the give { code charsequence } have the same size a the other { code iterable } <END>
<BEG> asserts that the number of entry in the give { code charsequence } have the same size a the other array <END>
<BEG> asserts that the message of the root cause of the actual { code throwable } be equal to the give one <END>
<BEG> returns hexadecimal the { code tostring } representation of the give object <END>
<BEG> utility method to parse a date follow { link # iso_date_time_format_with_ms } <SEG> return null if the give string be null <END>
<BEG> extracts the second of the give date <END>
<BEG> returns the instance dedicate to comparison of field <END>
<BEG> returns a < code > { link list } < code > contain the value of the give property name <SEG> from the element of the give < code > { link iterable } < code > <END>
<BEG> returns the size of the give { link iterable } <END>
<BEG> verifies that the give object reference be not { code null } <END>
<BEG> creates a < em > mutable < em > { link treeset } contain the give element <END>
<BEG> loads the text content of a url into a character string <END>
<BEG> loads the text content of a url into a list of string <SEG> each string corresponding to a line <END>
<BEG> returns the size of the give array <END>
<BEG> verifies that the actual < code > { link bigdecimal } < code > be negative <END>
<BEG> verifies that the actual { code byte } array do not contain the give value <END>
<BEG> verifies that the actual { code byte } value be less or equal to the give one <END>
<BEG> verifies that the actual { code byte } value be negative <END>
<BEG> verifies that the { code character } value be less or equal to the give one <END>
<BEG> verifies that the actual < code > { link comparable } < code > be less than the give one <END>
<BEG> verifies that the actual { code double } be less than the give one <END>
<BEG> fails with the give message <END>
<BEG> creates a < code > { link assertionerror } < code > with the give message <END>
<BEG> verifies that the actual { code float } be equal to < code > { link float # nan } < code > <END>
<BEG> creates a new holder for a delta value to be use in < code > { link floatassert # isequalto float <SEG> org fest assertion floatassert delta } < code > <END>
<BEG> verifies that the actual group of value be { code null } or empty <END>
<BEG> verifies that the actual < code > { link list } < code > end with the give sequence of object <SEG> without any other object between them <END>
<BEG> creates a new instance of < code > { link listassert } < code > whose target list contain the value of the give property name from the element of this { code listassert } 's list <END>
<BEG> verifies that the actual group of object contain the give object < strong > only < strong > <SEG> in any order <END>
<BEG> verifies that the actual group of object do not contain the give object <END>
<BEG> verifies that the actual group of object do not have duplicate <END>
<BEG> verifies that the actual { code string } do not contain the give one <END>
<BEG> returns a baselinealignment instance by name <END>
<BEG> sets the full height of the barcode <END>
<BEG> sets the width of the narrow module <END>
<BEG> returns the placement of the human-readable part <END>
<BEG> sets the factor by which wide bar be broad than narrow bar <END>
<BEG> sets the checksum mode param mode the checksum mode <END>
<BEG> sets the group separator character <END>
<BEG> sets the message template with the field for the ean message <END>
<BEG> sets the width between encode character <END>
<BEG> enables or disable the use of the start and stop character in the human-readable message <END>
<BEG> returns the minimum symbol size that be to be produce <END>
<BEG> see org krysalis barcode4j impl datamatrix datamatrixplacement # hasbit int <SEG> int <END>
<BEG> see org krysalis barcode4j twodimbarcodelogichandler # startrow <END>
<BEG> encodes a single character <END>
<BEG> generates the barcode logic param logic the logic handler to receive generated event param msg the message to encode <END>
<BEG> enables or disable the use of the checksum in the human-readable message <END>
<BEG> see org krysalis barcode4j barcodegenerator # generatebarcode canvasprovider <SEG> string <END>
<BEG> generates the barcode logic <END>
<BEG> controls whether a bearer box be generate or just horizontal bearer bar <END>
<BEG> sets the bearer bar width <END>
<BEG> sets the height of a short bar <END>
<BEG> sets the baseline position <END>
<BEG> calculates the checksum for a message to be encode a an postnet barcode <END>
<BEG> checks if a character be an ignored character such a a '- ' dash <END>
<BEG> see org krysalis barcode4j classicbarcodelogichandler <END>
<BEG> generates a center guard <END>
<BEG> returns the string representation of the page number ex <END>
<BEG> converts inch in to millimeter mm param in the value in inch return the value in mm <END>
<BEG> return true if end time be specify a a whole day <END>
<BEG> return longitude in degree <END>
<BEG> return number of erasure correct <SEG> or { code null } if not applicable <END>
<BEG> return evaluation of this polynomial at a give point <END>
<BEG> returns the recommended minimum error correction level a describe in annex e of iso iec 15438:2001 e <END>
<BEG> generates the error correction codewords accord to 4 10 in iso iec 15438:2001 e <END>
<BEG> param modulebitcount value to sum return sum of value deprecate call { link mathutils # sum int [ ] } <END>
<BEG> return height of image from { link # renderthumbnail } <END>
<BEG> converts an array of raw binary data into an array of ascii 0 and 1 char <END>
<BEG> decodes a byte array where each byte represent an ascii ' 0 ' or ' 1 ' <END>
<BEG> converts an array of byte into a string represent the hexadecimal value of each byte in order <END>
<BEG> converts a byte buffer into a string represent the hexadecimal value of each byte in order <END>
<BEG> converts a buffer of character byte represent hexadecimal value into an array of byte of those same value <END>
<BEG> encodes the give string into a sequence of byte use the name charset <SEG> store the result into a new byte array <END>
<BEG> constructs a new { code string } by decode the specified array of byte use the iso-8859-1 charset <END>
<BEG> returns a { code messagedigest } for the give { code algorithm } <END>
<BEG> returns an sha-512 256 digest <END>
<BEG> calculates the md2 digest and return the value a a 16 element { code byte [ ] } <END>
<BEG> calculates the md2 digest and return the value a a 32 character hex string <END>
<BEG> calculates the sha-1 digest and return the value a a { code byte [ ] } <END>
<BEG> calculates the sha-1 digest and return the value a a hex string <END>
<BEG> calculates the sha-512 224 digest and return the value a a { code byte [ ] } <END>
<BEG> calculates the sha-512 224 digest and return the value a a hex string <END>
<BEG> updates the give { link messagedigest } <END>
<BEG> reads through a file and update the digest for the data param digest the messagedigest to use e g <END>
<BEG> reads through an inputstream and return the digest for the data param data data to digest return the digest a a hex string throw ioexception on error reading from the stream since 1 11 <END>
<BEG> reads through a byte array and return the digest for the data <END>
<BEG> generates a libc6 crypt compatible $ 5 $ hash value <END>
<BEG> sets the type of name <END>
<BEG> guesses the language of a word <END>
<BEG> gets the right context <END>
<BEG> encodes a string use the daitch-mokotoff soundex algorithm without branch <END>
<BEG> encodes an object use the nysiis algorithm <END>
<BEG> encodes a string into it base64 form use the specify charset <END>
<BEG> decodes a base64 object into it original form <END>
<BEG> encodes an array of byte into an array of quoted-printable 7-bit character <END>
<BEG> decodes a quoted-printable string into it original form use the specify string charset <END>
<BEG> applies an rfc 1522 compliant encode scheme to the give string of text with the give charset <END>
<BEG> encodes an array of byte into an array of url safe 7-bit character <END>
<BEG> encodes a string into it url safe form use the default string charset <END>
<BEG> visits an enumeration value of the annotation <END>
<BEG> puts two bytes into this byte vector <END>
<BEG> puts two byte and a short into this byte vector <END>
<BEG> puts an utf8 string into this byte vector <END>
<BEG> adds a class reference to the constant pool of the class be build <END>
<BEG> visits an annotation of the field <END>
<BEG> visits a non standard attribute of the field <END>
<BEG> returns the descriptor of the field or method designate by this handle <END>
<BEG> puts the jvms exception_table corresponding to the handler list that begin with the give element <END>
<BEG> visits a local variable instruction <END>
<BEG> visits a jump instruction <END>
<BEG> visits a dependence of the current module <END>
<BEG> visit an exported package of the current module <END>
<BEG> makes the give visitor visit the signature of this { link signaturereader } <END>
<BEG> visits an interface bound of the last visited formal type parameter <END>
<BEG> visits the type of a method exception <END>
<BEG> visits a signature correspond to a type variable <END>
<BEG> ends the visit of a signature correspond to a class or interface type <END>
<BEG> adds the give instruction to the end of this list <END>
<BEG> return the number of annotation entry in this annotation <END>
<BEG> return array of bootstrap method record <END>
<BEG> return table of handled exception <END>
<BEG> return maximum size of stack use by this method <END>
<BEG> param code byte code <END>
<BEG> param exception_table exception table <END>
<BEG> param max_locals maximum number of local variable <END>
<BEG> param max_stack maximum stack size <END>
<BEG> param name_and_type_index point to constant_nameandtype <END>
<BEG> return data <SEG> i e <SEG> 4 byte <END>
<BEG> return float object <END>
<BEG> dump method kind and index to file stream in binary format <END>
<BEG> param bytes the raw byte that represent this byte array <END>
<BEG> start traversal <END>
<BEG> since 6 4 0 <END>
<BEG> return length of exception table <END>
<BEG> return class name of thrown exception <END>
<BEG> return string representation <SEG> i e <SEG> a list of thrown exception <END>
<BEG> return constant value associate with this field may be null <END>
<BEG> dump object to file stream on binary format <END>
<BEG> param attribute collection of object attribute <END>
<BEG> dump class to a file <END>
<BEG> return class name index <END>
<BEG> return names of implemented interface <END>
<BEG> return string represent class content <END>
<BEG> gets the classrepository which hold it definition <END>
<BEG> sets the classrepository which load the javaclass <END>
<BEG> equivalent to runtime instanceof operator <END>
<BEG> get interface directly implement by this javaclass <END>
<BEG> get all interface implement by this javaclass transitively <END>
<BEG> return array of pc offset <SEG> line number pair <END>
<BEG> return array of local variable of method <END>
<BEG> return resolved string representation <END>
<BEG> param package_index_table the list of package index also redefine number_of_packages accord to table length <END>
<BEG> return index into constant pool of host class name <END>
<BEG> param host_class_index the host class index <END>
<BEG> return string array of class name <END>
<BEG> return gj signature <END>
<BEG> return source file name <END>
<BEG> param map array of stack map entry <END>
<BEG> dump stack map entry param file output file stream throw ioexception <END>
<BEG> dump type entry to file <END>
<BEG> return true <SEG> if type be either item_object or item_newobject <END>
<BEG> param index return the constant_names entry at the give index since 6 0 <END>
<BEG> param index return the item name since 6 0 <END>
<BEG> return exception this instruction may cause <END>
<BEG> set minor version number of class file <SEG> default value be 3 jdk 1 1 param minor minor version number <END>
<BEG> remove observer for this object <END>
<BEG> return comparison strategy object <END>
<BEG> get codeexception object < br > this rely on that the instruction list have already be dump to byte code or or that the ` setpositions ' method have be call for the instruction list <END>
<BEG> set handler code param handler_pc start of handler <END>
<BEG> return end of handled region inclusive <END>
<BEG> return mnemonic for instruction with symbolic reference resolve <END>
<BEG> call notify method on all observer <END>
<BEG> remove all attribute <END>
<BEG> return type of field <END>
<BEG> return negation of instruction <END>
<BEG> set increment factor <END>
<BEG> replace current instruction contain in this handle <END>
<BEG> called by instructionlist setpositions when set the position for every instruction <END>
<BEG> remove all targeters <SEG> if any <END>
<BEG> denote this handle be n't reference anymore by t <END>
<BEG> denote this handle be be reference by t <END>
<BEG> delete an attribute of an instruction handle <END>
<BEG> return all attribute associate with this handle <END>
<BEG> return return type of referenced method <END>
<BEG> read need data i e <SEG> index from file <END>
<BEG> gets localvariable object <END>
<BEG> return name of referenced method field <END>
<BEG> return true if this type reference an interface <SEG> false if it reference a class <END>
<BEG> return true iff this type be castable to another type t a define in the jvm specification <END>
<BEG> return true iff this be assignment compatible with another type t a define in the jvm specification ; see the aastore definition there <END>
<BEG> this commutative operation return the first common superclass narrow referencetype reference a class <SEG> not an interface <END>
<BEG> set index of local variable containg the return address <END>
<BEG> returns if the two returnaddresses refer to the same target <END>
<BEG> since this be a variable length instruction <SEG> it may shift the following instruction which then need to update their position <END>
<BEG> return match entry since 6 0 <END>
<BEG> lookups class somewhere find on your classpath <SEG> or whereever the repository instance look for it <END>
<BEG> adds clazz to repository if there be n't an equally named class already in there <END>
<BEG> find an already define javaclass <END>
<BEG> lookup a javaclass object from the class name provide <END>
<BEG> checks for class path component in the following property : java class path <SEG> sun boot class path <SEG> java ext dirs return class path a use by default by bcel <END>
<BEG> return use class path string <END>
<BEG> lists all package <END>
<BEG> returns the name of the local variable that use this local variable slot at the give bytecode offset <END>
<BEG> returns the localvariableinfo for the give slot <END>
<BEG> sets the methodgen instance need for constraint check prior to execution <END>
<BEG> ensures the specific precondition of the say instruction <END>
<BEG> removes the verifierfactoryobserver o from the list of observer <END>
<BEG> specifies that any method that match the specified matcher should be remove <END>
<BEG> < p > creates a new { link enum } type <END>
<BEG> returns { code true } if this manifestation represent a { code volatile } type <END>
<BEG> < p > obtains a { link net bytebuddy dynamic loading classreloadingstrategy } from an installed byte buddy agent <END>
<BEG> creates a stack manipulation for load a { code float } value onto the operand stack <END>
<BEG> creates a stack assignment for incrementing the give offset of the local variable array <END>
<BEG> creates a { link net bytebuddy implementation defaultmethodcall } implementation which search the give list of interface type for a suitable default method in their order <END>
<BEG> returns a new version of this equal method that compare field with enumeration type prior to field with non-enumeration type <END>
<BEG> creates a hash code method implementation that base the hash code on a fixed value <END>
<BEG> requires the bootstrap method to bootstrap a method that take the specify { code byte } arguments a it next parameter <END>
<BEG> hands the provided enumeration to the dynamically bound method <END>
<BEG> creates a { link object # tostring } implementation that be prefix by the simple class name of the instrumented type <END>
<BEG> returns a new version of this tostring method implementation that ignore the specified field additionally to any previously specify field <END>
<BEG> creates a matcher that always return { code false } <END>
<BEG> matches a { link namedelement } for it name 's prefix <END>
<BEG> matches a { link namedelement } for an infix of it name <END>
<BEG> matches a { link modifierreviewable } that be { code protect } <END>
<BEG> matches a { link modifierreviewable } that be synthetic <END>
<BEG> matches a { link methoddescription } that be a bridge <END>
<BEG> matches a method description that take the provided raw argument <END>
<BEG> only match method description that represent a { link java lang reflect constructor } <END>
<BEG> only match the { link object # tostring } method <SEG> also if it be overridden <END>
<BEG> matches any java bean getter method <END>
<BEG> matches a field 's raw type against the provided matcher <END>
<BEG> visits a label <END>
<BEG> an order-sensitive invocation of { link classvisitor # visitattribute attribute } <END>
<BEG> an order-sensitive invocation of { link classvisitor # visitinnerclass string <SEG> string <SEG> string <SEG> int } <END>
<BEG> truns the protected bit on <END>
<BEG> returns true if the access flag include the protected bit <END>
<BEG> adds a new member <END>
<BEG> returns a hash code value for this object <END>
<BEG> writes < code > tag < code > and < code > annotation_value < code > in < code > element_value < code > <END>
<BEG> accepts a visitor <END>
<BEG> obtains the string representation of this object <END>
<BEG> copies this attribute and return a new copy <END>
<BEG> the following two method be use to implement classfile renameclass <END>
<BEG> makes a copy <END>
<BEG> reads a signed 16bit integer at the index <END>
<BEG> reads a 32bit integer at the index <END>
<BEG> returns the class name <END>
<BEG> returns the name of the interface implement by the class <END>
<BEG> returns all the method declare in the class <END>
<BEG> just append a method to the class <END>
<BEG> returns the attribute with the specify name <END>
<BEG> returns the length of this < code > attribute_info < code > structure <END>
<BEG> moves to the give index <END>
<BEG> returns the signed 16bit value at the give index <END>
<BEG> moves to the instruction for < code > this < code > <END>
<BEG> inserts the give bytecode sequence before the instruction at the give index < code > po < code > <END>
<BEG> inserts the give bytecode sequence exclusively before the instruction at the give index < code > po < code > <END>
<BEG> copies and append the entry in the give exception table at the end of the exception table in the code attribute edit by this object <END>
<BEG> reads < code > constant_class_info < code > structure at the give index <END>
<BEG> reads the < code > descriptor_index < code > field of the < code > constant_nameandtype_info < code > structure at the give index <END>
<BEG> reads the < code > name_and_type_index < code > field of the < code > constant_fieldref_info < code > <SEG> < code > constant_methodref_info < code > <SEG> or < code > constant_interfaceref_info < code > <SEG> structure at the give index <END>
<BEG> reads the < code > descriptor_index < code > field of the < code > constant_nameandtype_info < code > structure indirectly specify by the give index <END>
<BEG> determines whether < code > constant_methodref_info < code > <SEG> < code > constant_fieldref_info < code > <SEG> or < code > constant_interfacemethodref_info < code > structure at the give index have the name and the descriptor give a the argument <END>
<BEG> adds a new < code > constant_class_info < code > structure <END>
<BEG> get all the class name <END>
<BEG> returns the method descriptor specify by < code > method_index < code > <END>
<BEG> returns < code > exception_index_table [ ] < code > <END>
<BEG> sets the name of exception that the method may throw <END>
<BEG> sets < code > startpc < code > of the < i > n < i > -th entry <END>
<BEG> returns all the attribute <END>
<BEG> removes an attribute with the specify name <END>
<BEG> returns the class name indicate by < code > class [ nth ] outer_class_info_index < code > <END>
<BEG> sets < code > class [ nth ] outer_class_info_index < code > to the give index <END>
<BEG> returns the value of < code > local_variable_table [ i ] descriptor_index < code > <END>
<BEG> sets a method name <END>
<BEG> returns true if this be a constructor <END>
<BEG> adds an exception attribute <END>
<BEG> removes a code attribute <END>
<BEG> rebuilds a stack map table <END>
<BEG> rebuilds a stack map table for j2me cldc <END>
<BEG> returns the value of < code > access_flags < code > of the i-th element of < code > parameter < code > <END>
<BEG> parses the annotation and return a data structure represent that parse annotation <END>
<BEG> changes the annotation represent by this object accord to the give array of < code > annotation < code > object <END>
<BEG> parses the give signature string a a field type signature <END>
<BEG> parses the give signature string a a type signature <END>
<BEG> initializes the cause of this throwable <END>
<BEG> provides a hook so that subclass can do their own caching of class <END>
<BEG> reads a class file from the source and return a reference to the < code > ctclass < code > object represent that class file <END>
<BEG> to support $ $ <END>
<BEG> if the type of the expression compile last be void <SEG> add aconst_null and change exprtype <SEG> arraydim <SEG> classname <END>
<BEG> to support $ args <SEG> $ sig <SEG> and $ type <END>
<BEG> inserts a cast operator to the return type <END>
<BEG> delegates to a prochandler object if the method call be $ proceed <END>
<BEG> set the generic signature of the method <END>
<BEG> sets exception that this method constructor may throw <END>
<BEG> returns the annotation if the class have the specify annotation type <END>
<BEG> sets the modifier <END>
<BEG> adds an interface <END>
<BEG> returns the immediately enclose method of this class <END>
<BEG> returns an array contain < code > ctmethod < code > object represent all the non-private method of the class <END>
<BEG> removes a method declare in this class <END>
<BEG> invoked from classpool # compress <END>
<BEG> this method be invoke when setname or replaceclassname in ctclass be call <END>
<BEG> obtains the type of the return value <END>
<BEG> returns the modifier for this type <END>
<BEG> returns < code > super < code > or < code > this < code > <END>
<BEG> edits a constructor call overridable <END>
<BEG> returns the name of the call method <END>
<BEG> returns the method signature the parameter type and the return type <END>
<BEG> replaces the method call with the bytecode derive from the give source text <END>
<BEG> loads a class and call < code > main < code > in that class <END>
<BEG> obtains the url of the specified class file <END>
<BEG> closes this class path <END>
<BEG> returns true if the modifier include the < tt > private < tt > modifier <END>
<BEG> clears a specified bit in < code > mod < code > <END>
<BEG> returns < code > true < code > if this map contain no key-value mapping <END>
<BEG> is invoke when < code > static < code > field of the base-level class be modify and the runtime system intercept it <END>
<BEG> returns the name of the method specify by < code > identifier < code > <END>
<BEG> generates a proxy class use the supplied filter <END>
<BEG> finds a method with the give name and descriptor <END>
<BEG> makes a descriptor for a give method <END>
<BEG> return this class 's field <END>
<BEG> adds a value to the table that be at a location yet to be write <END>
<BEG> all declare annotation <END>
<BEG> set the annotation <END>
<BEG> write the attribute bytecode to the give stream <SEG> up to length byte <SEG> exclude the name index <END>
<BEG> return the attribute with the give name <END>
<BEG> invalidate this class <END>
<BEG> initialize from the class definition in the give stream <END>
<BEG> write the class bytecode to the specify stream <END>
<BEG> manipulate the class access flag <END>
<BEG> return the bytecode of all unique interface implement by this class <SEG> include those of all superclass <END>
<BEG> return all field with the give name <SEG> include those of all superclass <SEG> or an empty array if none <END>
<BEG> set the field for this class ; this method be useful for import all field from another class <END>
<BEG> clear all field from this class <END>
<BEG> return the declared method with the give name <SEG> or null if none <END>
<BEG> removes a method from this class <END>
<BEG> return inner class information for the class <END>
<BEG> remove the inner class attribute for the class <END>
<BEG> return the { link bcclass } that declare this member <END>
<BEG> set the access flag for this member a a bit array of access_xxx constant from { link constants } <END>
<BEG> set the index in the class { link constantpool } of the { link utf8entry } hold the name of this member <END>
<BEG> set the descriptor of this member <END>
<BEG> return the bytecode for all the parameter type for this method <END>
<BEG> set the parameter type of this method <END>
<BEG> add a parameter type to this method <END>
<BEG> remove a parameter from this method <END>
<BEG> return the checked exception information for the method <END>
<BEG> remove the code attribute from the method <END>
<BEG> return the length of the bytecode representation of this attribute in byte <SEG> exclude the name index <END>
<BEG> set the { link constantpool } index of the { link classentry } describe the class for this instruction <END>
<BEG> add an exception handler to this code block <END>
<BEG> place the iterator after the give list index <END>
<BEG> load a long local variable onto the stack <END>
<BEG> store a long value from the stack into a local variable <END>
<BEG> add the < code > iinc < code > opcode <END>
<BEG> load a long array value onto the stack ; the < code > laload < code > opcode <END>
<BEG> store a long value from the stack into an array ; the < code > lastore < code > opcode <END>
<BEG> the < code > pop2 < code > opcode <END>
<BEG> add the top two stack long value ; the < code > ladd < code > opcode <END>
<BEG> take the remainder of the top two long stack value ; the < code > lrem < code > opcode <END>
<BEG> negate the top stack long value ; the < code > lneg < code > opcode <END>
<BEG> shift the top stack value <END>
<BEG> take the mathematical and of the top two stack long value ; the < code > land < code > opcode <END>
<BEG> take the mathematical or of the top two stack value <END>
<BEG> place the value of a field onto the stack ; the < code > putfield < code > opcode <END>
<BEG> place the value of a static field onto the stack ; the < code > putstatic < code > opcode <END>
<BEG> invoke a static method ; the < code > invokestatic < code > opcode <END>
<BEG> return local variable information for the code <END>
<BEG> remove the local variable table for the code <END>
<BEG> returns the byteindex of the give instruction <END>
<BEG> return the last instruction in this code block <SEG> or null if none <END>
<BEG> get the value of this float constant <END>
<BEG> return the instruction at the end of the try { } block <END>
<BEG> set the { link instruction } mark the beginning of the catch block <END>
<BEG> set the index into the class { link constantpool } of the { link classentry } describe the exception type this handler catch <END>
<BEG> return the bytecode of the exception type ; return null for catch-all clause use to implement finally block <END>
<BEG> set the class of the exception type <SEG> or null for catch-all clause use for finally block <END>
<BEG> return the { link class } object for the exception type for this method <SEG> or an empty array if none <END>
<BEG> set the field this instruction operate on <END>
<BEG> set the field this instruction operate on <SEG> for field that be declare by the current class <END>
<BEG> return the type of the field this instruction operate on <SEG> or null if not set <END>
<BEG> set the increment on this iinc instruction <END>
<BEG> set the access flag of the inner class <END>
<BEG> set the { link constantpool } index of the { link utf8entry } that describe the simple name this class be refer to in source <SEG> or 0 for anonymous class <END>
<BEG> return the full name of the inner class <SEG> or null if unset <END>
<BEG> set the { link constantpool } index of the { link classentry } that describe the declare class <SEG> or 0 if this class be not a member class <END>
<BEG> return the type for this instruction <END>
<BEG> return the inner class with the give name <END>
<BEG> add an inner class <END>
<BEG> set the index into the code byte array at which this line start <END>
<BEG> remove the give line <END>
<BEG> the owning table <END>
<BEG> set the local variable index of the current frame for this local <END>
<BEG> set the number of byte for which this local have a value in the code byte array <END>
<BEG> return the { link constantpool } index of the { link utf8entry } that describe this local <END>
<BEG> return all the local of this method <END>
<BEG> return the local with the give name <SEG> or null if none <END>
<BEG> set the method parameter that this instruction operate on <END>
<BEG> return the local with the give local index <SEG> or null if none <END>
<BEG> import a local from another method class <END>
<BEG> synonymous with { link # settarget } <END>
<BEG> return the target of the case statement for this switch <END>
<BEG> set the constant pool index of the { link utf8entry } contain the class name <END>
<BEG> set the constant pool index of the { link classentry } describe the own class of this entity <END>
<BEG> set the constant pool index of the { link nameandtypeentry } describe this entity <END>
<BEG> read an int value at the give offset into the give bytecode <END>
<BEG> return the method this instruction operate on <SEG> or null if not set <END>
<BEG> return the return type of the method this instruction operate on <SEG> or null if not set <END>
<BEG> set the return type of the method this instruction operate on <END>
<BEG> methodinstructions be equal if the method they reference be the same <SEG> or if the method of either be unset <END>
<BEG> return the parameter type <SEG> in internal form <SEG> for the give method descriptor string <END>
<BEG> set the name of the source file <END>
<BEG> set the source file <END>
<BEG> save the { link instrumentation } interface expose by the jvm <END>
<BEG> constructs a { link factory } that will produce factory instance of the specified class <END>
<BEG> set if write-through caching should be use <END>
<BEG> obtains a { link factory } for a created { link expirypolicy } <END>
<BEG> add a listener <END>
<BEG> builds a cache with the specify configuration parameter <END>
<BEG> retrieve a cache manager with the specify name <END>
<BEG> see cache2kbuilder # keytype cachetype see cachetype for a general discussion on type <END>
<BEG> adds the collection of customizations to the exist list <END>
<BEG> see builder # enablemanagement <END>
<BEG> return a provider for this interface <END>
<BEG> log a message at debug level <END>
<BEG> log a formatted message at debug level <END>
<BEG> non-javadoc see net spy memcached connectionfactory # createlocator java util list <END>
<BEG> returns the current executor <END>
<BEG> return the ketamanodekeyformat <END>
<BEG> get the address of unavailable server <END>
<BEG> decrement the give key by the give value <END>
<BEG> asychronous increment <END>
<BEG> remove a connection observer <END>
<BEG> reset the timeout counter for the give handling node <END>
<BEG> non-javadoc see net spy memcached ops operationqueuefactory # create <END>
<BEG> non-javadoc see net spy memcached memcachednode # insertop net spy memcached ops operation <END>
<BEG> non-javadoc see net spy memcached memcachednode # setsk java nio channel selectionkey <END>
<BEG> wait for the queue to die down <END>
<BEG> gets the value of the tap message magic field <END>
<BEG> sets the value of the tap message data type field <END>
<BEG> gets the value of the item flag field <END>
<BEG> decompress the give array of byte <END>
<BEG> encode a string into the current character set <END>
<BEG> see setsessionreadbuffersize return <END>
<BEG> get current result value without any blocking <END>
<BEG> set the result value and notify about operation completion <END>
<BEG> notify about the failure <SEG> occur during asynchronous operation execution <END>
<BEG> notify block listener thread about operation completion <END>
<BEG> non-javadoc see com google code yanf4j nio iwritemessage # getmessage <END>
<BEG> param bytebuffer return <END>
<BEG> returns a resource on the classpath a a properties object param resource the resource to find throws ioexception if the resource can not be find or read return the resource <END>
<BEG> returns a resource on the classpath a a properties object param loader the classloader use to load the resource param resource the resource to find throws ioexception if the resource can not be find or read return the resource <END>
<BEG> get a typical auth descriptor for cram-md5 auth with the give username and password <END>
<BEG> get a typical auth descriptor for cram-md5 or plain auth with the give username and password <END>
<BEG> decrease value by one return throw memcachedexception throw interruptedexception throw timeoutexception <END>
<BEG> get the flag store along with this value <END>
<BEG> links the element to the back of the deque so that it become the last element <END>
<BEG> unlinks the non-null last element <END>
<BEG> specifies that each value not key store in the cache should be wrap in a { link weakreference } by default <SEG> strong reference be use <END>
<BEG> sets the weight from the policy 's perspective <END>
<BEG> returns the time that this entry be last write <SEG> in n <END>
<BEG> sets the write time in nanosecond <END>
<BEG> atomically set the write time to the give updated value if the current value equal the expected value and return if the update be successful <END>
<BEG> returns whether this factory support soft value <END>
<BEG> cases the tablebusy field from 0 to 1 to acquire lock <END>
<BEG> returns the probe value for the current thread <END>
<BEG> returns true if this cache have be close <END>
<BEG> gets the rwl stripe to use for a give key <END>
<BEG> get the minimum number of second to wait before write behind <END>
<BEG> sets whether to batch write operation <END>
<BEG> retrieves the number of second to wait before retry an failed operation <END>
<BEG> starts visit child of the element <END>
<BEG> disables all output behavior <END>
<BEG> disables one particular { link outputbehavior } param behavior <END>
<BEG> set that the rest service should be enable or disable <END>
<BEG> sets the security service location require for trusted identity assertion to the embed rest management service <END>
<BEG> sets the connection read timeout value for the security service in millisecond <END>
<BEG> get the port part of the host : port pair to which the rest server should be bind <END>
<BEG> set the host : port pair to which the rest server should be bind <END>
<BEG> a factory method for { link sampledcounterconfig } base on the global setting define on this object see # getsamplesearchintervalseconds see # getsamplehistorysize return a { code sampledcounterconfig } <END>
<BEG> set the value of immediatetimeout param immediatetimeout return this configuration instance <END>
<BEG> set the value of timeoutmillis param timeoutmillis the new value <END>
<BEG> are value searchable ? <END>
<BEG> set optional attribute type param type return this <END>
<BEG> builder method to set wanenabledtsa param wanenabledtsa return this instance <END>
<BEG> create a configuration object from a property object <END>
<BEG> set whether get method will be transparently proxied <END>
<BEG> set the name to set for this cache decorator <END>
<BEG> express this configuration a a { link properties } object <END>
<BEG> validate this configuration <END>
<BEG> set whether no return for a key from all cacheloaders should force an eviction prematurely from the underlie cache <END>
<BEG> gets offer counter <END>
<BEG> removes a listener from the notification service <END>
<BEG> called immediately after a cache have be dispose and remove <END>
<BEG> tell listener to dispose themselves <END>
<BEG> retrieve a long bean property value <END>
<BEG>  see net sf ehcache hibernate management api hibernatestats # clearstats <END>
<BEG> not support right now <END>
<BEG>  see net sf ehcache hibernate management api hibernatestats # setstatisticsenabled boolean <END>
<BEG> non-javadoc see net sf ehcache util counter counter # getandset long <END>
<BEG> non-javadoc see net sf ehcache util counter sample sampledratecounter # decrement long <SEG> long <END>
<BEG> non-javadoc see net sf ehcache util counter sample sampledratecounter # setdenominatorvalue long <END>
<BEG> construct a maximum value aggregator param attribute return max aggregator <END>
<BEG> get the maximum value return max value <END>
<BEG> return true if the max be include in range <END>
<BEG> non-javadoc see net sf ehcache statistic bean attributeproxy # get java lang string <END>
<BEG> non-javadoc see net sf ehcache statistic bean attributeproxy # set java lang string <SEG> java lang object <END>
<BEG> get a list of attribute <END>
<BEG> not implement <END>
<BEG> non-javadoc see net sf ehcache statistic corestatistics # put <END>
<BEG> non-javadoc see net sf ehcache statistic extend extendedstatistics operation # compound java util set <END>
<BEG> get the history sample time <END>
<BEG> stop statistic <END>
<BEG> the name of the statistic a find in the statistic context tree <END>
<BEG> you ca n't remove from this set <SEG> will throw ! <END>
<BEG> returns the root node of this tree <END>
<BEG> return the type of request <END>
<BEG> equivalent in effect to { link # sum } follow by { link # reset } <END>
<BEG> cases the base field <END>
<BEG> handles case of update involve initialization <SEG> resize <SEG> create new cells <SEG> and or contention <END>
<BEG> throw { link unsupportedoperationexception } <END>
<BEG> if the runtime environment restrict thread creation <SEG> this method do nothing <END>
<BEG> if the runtime environment restrict thread creation <SEG> the task be run inline for only one time <END>
<BEG> does not support list method { link unsupportedoperationexception } <END>
<BEG> returns a matcher that match context element whose { link contextelement # attribute } match against the supplied matcher <END>
<BEG> returns a matcher that match when against object which match < em > all < em > of the supplied matcher <END>
<BEG> equivalent to { link # max } <END>
<BEG> invoke the command synchronously <END>
<BEG> sets the name of the local site <END>
<BEG> execute an action for each entry in the context <END>
<BEG> no-op <END>
<BEG> releases the read lock <END>
<BEG> creates a thread pool that reuse a fixed set of thread operate off a share bounded queue <SEG> use the provided threadfactory to create new thread when need <END>
<BEG> adds the member with an offline connection to the site <END>
<BEG> the main method <END>
<BEG> retrieves the name object <END>
<BEG> binds a name to an object <SEG> overwrite any exist binding <END>
<BEG> binds a new name to the object bound to an old name <SEG> and unbind the old name <END>
<BEG> enumerates the name bind in the name context <SEG> along with the class name of object bind to them <END>
<BEG> enumerates the name bind in the name context <SEG> along with the object bind to them <END>
<BEG> destroys the name context and remove it from the namespace <END>
<BEG> creates and bind a new context <END>
<BEG> retrieves the name object <SEG> follow link except for the terminal atomic component of the name <END>
<BEG> retrieves the parser associate with the name context <END>
<BEG> composes the name of this context with a name relative to this context <END>
<BEG> updates the state to < code > update_complete < code > <END>
<BEG> gets the pattern flush counter return the number of pattern flush call that have occur <END>
<BEG> handles the event fire when an entry be flush from the cache <END>
<BEG> returns the cache 's current miss count return the miss count <END>
<BEG> gets the flush count for scope { link scopeeventlistenerimpl # page_scope } <END>
<BEG> return the counter in a string form <END>
<BEG> append a list of bytebuffers to this stream <END>
<BEG> return an unmodifiable empty { link annotationparametervaluelist } <END>
<BEG> for primitive array type params <SEG> replace object [ ] array contain boxed type with primitive array need to check the type of each method of the annotation class to determine if it be a primitive array type <END>
<BEG> obtain a { code class < ? > } reference for the array class name by this { link arrayclassinfo } object <END>
<BEG> non-javadoc see io github classgraph scanresultobject # getclassname <END>
<BEG> causes method visibility to be ignore <SEG> enable private <SEG> package-private and protected method to be scan <END>
<BEG> disables the scanning of directory <END>
<BEG> override the automatically-detected classpath with a custom path <END>
<BEG> blacklist one or more module <SEG> prevent them from be scan <END>
<BEG> blacklist classpath element base on resource path <END>
<BEG> returns the ordered list of all unique { link url } object represent directory jar classpath element and module <END>
<BEG> non-javadoc see io github classgraph classpathelement # open nonapi io github classgraph concurrency workqueue <SEG> nonapi io github classgraph utils lognode <END>
<BEG> get the name of the base class <END>
<BEG> non-javadoc see io github classgraph typesignature # equalsignoringtypeparams io github classgraph typesignature <END>
<BEG> non-javadoc see io github classgraph typesignature # tostringinternal boolean <END>
<BEG> find the subset of the { link fieldinfo } object in this list for which the give filter predicate be true <END>
<BEG> get the method modifier a a string <SEG> e g <END>
<BEG> returns true if this method be a constructor <END>
<BEG> get a string representation of the method <END>
<BEG> returns a single method with the give name <SEG> or null if not find <END>
<BEG> returns true if this method parameter be mandate <END>
<BEG> get the type signature of the method parameter <END>
<BEG> add a { link packageinfo } object to this { link moduleinfo } <END>
<BEG> use the proxied modulereader to open the name resource a a bytebuffer <END>
<BEG> get the module descriptor <SEG> i e <END>
<BEG> get the module location a a file <SEG> i e <END>
<BEG> add annotation find in a package descriptor classfile <END>
<BEG> get the { link classinfo } object for all class that be member of this package <END>
<BEG> get the { link url } represent the resource 's location <END>
<BEG> get the { link url } of the classpath element or module that this resource be obtain from <END>
<BEG> get the uris of all resource in this list <SEG> by call { link resource # geturi } for each item in the list <END>
<BEG> returns an ordered list of unique classpath element and module urls <END>
<BEG> get the { link packageinfo } object for the name package <SEG> or null if no package of the request name be find during the scan <END>
<BEG> get all package find during the scan <END>
<BEG> get class that have a field with an annotation of the name type <END>
<BEG> get the non-system module a { link moduleref } wrapper <END>
<BEG> add multiple unit of work <END>
<BEG> mark a { link fileslice } a closed <END>
<BEG> non-javadoc see nonapi io github classgraph fastzipfilereader zipfileslice # hashcode <END>
<BEG> return the current read position <END>
<BEG> escape a string to be surround in double quote in json <END>
<BEG> return true for object that can be convert directly to and from string representation <END>
<BEG> add a modulelayer to the list of modulelayers to scan <END>
<BEG> check if the blacklist be empty <END>
<BEG> sort a collection if it be not empty to prevent { link concurrentmodificationexception } if an immutable empty list that have be return more than once be be sort in one thread and iterate through in another thread -- # 334 <END>
<BEG> check if a { link file } exist <SEG> be a directory <SEG> and can be read <END>
<BEG> get a set of path element a a string <SEG> from an array of object e g <END>
<BEG> add a log entry with sort key for deterministic ordering <END>
<BEG> if ignoremethodvisibility be true <SEG> cause fastclasspathscanner to ignore method visibility <SEG> enable it to see private <SEG> package-private and protected method <END>
<BEG> if enablefieldannotationindexing be true <SEG> enables field annotation indexing <SEG> which allow you to call scanresult # getnamesofclasseswithfieldannotation annotation <END>
<BEG> if enablemethodinfo be true <SEG> enable the saving of method info during the scan <END>
<BEG> ignore parent classloaders i e <END>
<BEG> get the concrete type of the give class <SEG> then return the default constructor for that type <END>
<BEG> get a field value <SEG> appropriately handle primitive-typed field <END>
<BEG> return true for class that can be equal to a basic value type type that can be convert directly to and from string representation <END>
<BEG> return true for class that be collection or array i e <END>
<BEG> resolve the type variable in a type use a type variable resolution list <SEG> produce a resolve type <END>
<BEG> return the sorted list of name of all annotation and meta-annotations on the name annotation <END>
<BEG> hierarchically scan directory structure for classfiles and match file <END>
<BEG> scan for package match within module <END>
<BEG> close and free all open zipfiles <END>
<BEG> returns true if this field be package-private <END>
<BEG> returns the parsed type signature for the field <SEG> if available <END>
<BEG> sets back-reference to scan result after scan be complete <END>
<BEG> get the available information on method parameter <END>
<BEG> returns the parameter type signature for the method <END>
<BEG> returns the unique annotation type for annotation on each method parameter <SEG> if any parameter have annotation <SEG> else return null <END>
<BEG> test class name <SEG> method name and type descriptor for equal <END>
<BEG> method parameter annotation info or null if no annotation <END>
<BEG> returns the list of package in the module <END>
<BEG> true if this relative path corresponds with a directory <END>
<BEG> returns the list of file object for unique classpath element directory or jarfiles <SEG> in classloader resolution order <END>
<BEG> determine whether the classpath content have be modify since the last scan <END>
<BEG> find the maximum last-modified timestamp of any whitelisted file directory jarfile encounter during the scan <END>
<BEG> get the name of class that have a field with an annotation of the name type <END>
<BEG> get the name of class that have any of the name annotation <END>
<BEG> deserialize a scanresult from previously-saved json <END>
<BEG> serialize a scanresult to json <END>
<BEG> completely override the list of classloaders to scan <END>
<BEG> returns true if the give relative path for a classfile name <SEG> include class match a specifically-whitelisted and non-blacklisted classfile 's relative path <END>
<BEG> returns true if the class be specifically blacklist <SEG> or be within a blacklisted package <END>
<BEG> check each element of an array of class be an interface <SEG> and that it be in a whitelisted package <END>
<BEG> calls the provided classmatchprocessor for all annotation class annotation definition find in whitelisted package on the classpath <END>
<BEG> convert modifier into a string representation <SEG> e g <END>
<BEG> interrupt all thread that share this interruptionchecker <END>
<BEG> check if this thread or any other thread that share this interruptionchecker instance have be interrupt or have throw an exception <SEG> and if so <SEG> throw interruptedexception <END>
<BEG> get the path for any jre jdk ext jar <END>
<BEG> add a series of log entry <END>
<BEG> flush out the log to stderr <SEG> and clear the log content <END>
<BEG> acquire or allocate an instance <END>
<BEG> get the value of the name static field in the give class or any of it superclass <END>
<BEG> invoke the name method in the give object or it superclass <END>
<BEG> encode a url path use percent-encoding <END>
<BEG> returns the aws error code represent by this exception <END>
<BEG> sets the human-readable error message provide by the service <END>
<BEG> sets the optional credential provider to use for this request <SEG> override the default credential provider at the client level <END>
<BEG> returns the root object from which the current object be clone ; or null if there be n't one <END>
<BEG> sets the amount of time in millisecond to allow the client to complete the execution of an api call <END>
<BEG> sets the result contain by this response <END>
<BEG> return the response metadata associate with this request <END>
<BEG> non-javadoc see com amazonaws auth awscredentials # getawssecretkey <END>
<BEG> fluent version of { link condition # setconditionkey string } return this <END>
<BEG> sets the result effect of this policy statement when it be evaluate <END>
<BEG> sets the list of action to which this policy statement applies <END>
<BEG> sets the resource associate with this policy statement <END>
<BEG> sets the principal associate with this policy statement <SEG> indicate which aws account be affect by this policy statement <END>
<BEG> < p > the amazon resource name arn of the role to assume <END>
<BEG> < p > an identifier for the assumed role session <END>
<BEG> < p > a unique identifier that be use by third party when assume role in their customer ' account <END>
<BEG> get the absolute path to the jwt file that contain a web identity token <END>
<BEG> < p > provides the credential that be use to assume the role <END>
<BEG> returns an input stream for response progress tracking purpose <END>
<BEG> a reset event be to be notify <END>
<BEG> returns the number of byte to be expect in the response <SEG> or -1 if the number be unknown e g <END>
<BEG>  record the read time into the metric <END>
<BEG> can be use to provide abortion logic prior to throw the abortedexception <END>
<BEG> aborts with subclass specific abortion logic execute if need <END>
<BEG> returns an sdk logger that log use the currently configure default log factory <SEG> give the name <END>
<BEG> sets the region param region the new region value <END>
<BEG> return the value of x-amz-request-id in response header <END>
<BEG> sets the value of x-amz-request-id in response header param xamzrequestid the new value <END>
<BEG> return the exception message <END>
<BEG> sets the api call timeout param maxretriesexceeded the new maxretriesexceeded value <END>
<BEG> the { link apicallattemptmonitoringevent # getawsexceptionmessage } from the last report api call attempt <END>
<BEG> sets the service name string to be use when sign a request for an endpoint <END>
<BEG> sets the dns suffix of the partition <END>
<BEG> sets the regex for the region in the partition <END>
<BEG> sets the default endpoint configuration of the partition <END>
<BEG> returns the set of service support by the partition <END>
<BEG> return true if the operation have member bind to the payload <END>
<BEG> param context context about the state of the last request and information about the number of request make <END>
<BEG> return http status code of response <END>
<BEG> gets the global time difference in second between the run jvm and aws <END>
<BEG> non-javadoc see java util map entry # getvalue <END>
<BEG> returns the value of the header with the specify name from the response <SEG> or null if not present <END>
<BEG> returns the element depth of the parser 's current position in the xml document be parse <END>
<BEG> returns any metadata collect through metadata expression while this context be read the xml event from the xml document <END>
<BEG> fluent api of { link # incrementcounter metrictype } <END>
<BEG> decodes the give base 32 encode string <SEG> skip carriage return <SEG> line feed and space a need <END>
<BEG> returns a base 64 encode string of the give byte <END>
<BEG> encode a string use the { link # uric } set of character <END>
<BEG> adds the string representation of the specified object to the current position of the in progress xml document <END>
<BEG> returns the delay strategy include in this polling strategy <END>
<BEG> < p > the id of the transit gateway attachment <END>
<BEG> < p > the health status of the instance <END>
<BEG> use this in place of valueof <END>
<BEG> < p > the elastic ip address <END>
<BEG> < p > the id represent the allocation of the address for use with ec2-vpc <END>
<BEG> < p > the private ip address associate with the elastic ip address <END>
<BEG> < p > the availability zone in which to allocate the dedicated host <END>
<BEG> < p > specifies the instance type to be support by the dedicated hosts <END>
<BEG> < p > the type of principal <END>
<BEG> < p > the amazon resource name arn of the principal <END>
<BEG> < p > the id of the vpc in which the associate target network be locate <END>
<BEG> < p > [ ec2-vpc ] the id of the network interface <END>
<BEG> < p > the id of the subnet to associate with the client vpn endpoint <END>
<BEG> < p > the iam instance profile <END>
<BEG> < p > an ipv4 cidr block to associate with the vpc <END>
<BEG> < p > the id of an ipv6 address pool from which to allocate the ipv6 cidr block <END>
<BEG> < p > the index of the device for the network interface attachment <END>
<BEG> < p > the device name for example <SEG> < code > dev sdh < code > or < code > xvdh < code > <END>
<BEG> < p > the id of the client vpn endpoint with which the authorization rule be associate <END>
<BEG> < p > the id of the active directory group to which the authorization rule grant access <END>
<BEG> < p > the ipv4 address range <SEG> in cidr notation <SEG> of the network to which the authorization rule applies <END>
<BEG> < p > not support <END>
<BEG> < p > the start of port range for the tcp and udp protocol <SEG> or an icmp type number <END>
<BEG> < p > [ ec2-classic <SEG> default vpc ] the name of the security group <END>
<BEG> < p > the state of the availability zone or local zone <END>
<BEG> < p > for availability zones <SEG> this parameter always have the value of < code > opt-in-not-required < code > <END>
<BEG> < p > the virtual device name < code > ephemeral < code > n <END>
<BEG> < p > suppresses the specified device include in the block device mapping of the ami <END>
<BEG> < p > if the task fail <SEG> a description of the error <END>
<BEG> < p > the time this task start <END>
<BEG> < p > the time of the most recent update for the task <END>
<BEG> < p > upon success <SEG> contain the id of the address pool <END>
<BEG> < p > the current state of the task be cancel <END>
<BEG> < p > the previous state of the spot fleet request <END>
<BEG> < p > indicates the tenancy of the capacity reservation <END>
<BEG> < p > indicates whether to use unused capacity reservations for fulfil on-demand capacity <END>
<BEG> < p > indicates the instance 's capacity reservation preference <END>
<BEG> < p > the time that the disk upload end <END>
<BEG> < p > the size of the uploaded disk image <SEG> in gib <END>
<BEG> < p > information about the active directory to be use <SEG> if applicable <END>
<BEG> < p > the date and time the client connection be establish <END>
<BEG> < p > the common name associate with the client <END>
<BEG> < p > the current state of the client connection <END>
<BEG> < p > the dns name to be use by client when connect to the client vpn endpoint <END>
<BEG> < p > the id of the subnet through which traffic be rout <END>
<BEG> < p > indicates how the route be associate with the client vpn endpoint <END>
<BEG> < p > indicates whether connection logging be enable <END>
<BEG> < p > the name of the cloudwatch logs log stream to which the connection data be publish <END>
<BEG> < p > specifies whether the destination snapshot of the copied image should be encrypt <END>
<BEG> < p > an identifier for the symmetric aws key management service aws kms customer master key cmk to use when create the encrypted volume <END>
<BEG> < p > the number of cpu core for the instance <END>
<BEG> < p > the number of instance for which to reserve capacity <END>
<BEG> < p > a name for the customer gateway device <END>
<BEG> < p > the launch template and override that be use for launch the instance <END>
<BEG> < p > the error code that indicate why the instance could not be launch <END>
<BEG> < p > the value be < code > windows < code > for windows instance <END>
<BEG> < p > describes the configuration of spot instances in an ec2 fleet <END>
<BEG> < p > the type of resource for which to create the flow log <END>
<BEG> < p > a unique name for the key pair <END>
<BEG> < p > indicates whether this be an egress rule rule be apply to traffic leave the subnet <END>
<BEG> < p > icmp protocol : the icmp or icmpv6 type and code <END>
<BEG> < p > tcp or udp protocol : the range of port the rule applies to <END>
<BEG> < p > indicates whether to allow or deny the traffic that match the rule <END>
<BEG> < p > the rule number for the entry for example <SEG> 100 <END>
<BEG> < p > the id of the active standard reserved instance <END>
<BEG> < p > [ ipv6 traffic only ] the id of an egress-only internet gateway <END>
<BEG> < p > [ ipv4 traffic only ] the id of a nat gateway <END>
<BEG> < p > the amazon s3 bucket in which to store the spot instance data feed <END>
<BEG> < p > a prefix for the data feed file name <END>
<BEG> < p > the id of the filter that this rule be associate with <END>
<BEG> < p > the type of traffic < code > ingres < code > | < code > egress < code > <END>
<BEG> < p > the protocol <SEG> for example udp <SEG> to assign to the traffic mirror rule <END>
<BEG> < p > enable or disable dns support <END>
<BEG> < p > the group to be add or remove <END>
<BEG> < p > the aws account id to be add or remove <END>
<BEG> < p > the number of i o operation per second iops to provision for the volume <SEG> with a maximum ratio of 50 iops gib <END>
<BEG> < p > the size of the volume <SEG> in gibs <END>
<BEG> < p > the snapshot from which to create the volume <END>
<BEG> < p > the private dns name to assign to the vpc endpoint service <END>
<BEG> < p > a private autonomous system number asn for the amazon side of a bgp session <END>
<BEG> < p > the credit option for cpu usage of a t2 or t3 instance <END>
<BEG> < p > the version number of the launch template <END>
<BEG> < p > the id of the deleted traffic mirror rule <END>
<BEG> < p > the ip address assign to the transit gateway multicast group <END>
<BEG> < p > the type of resource : < code > bundle < code > | < code > conversion-task < code > | < code > customer-gateway < code > | < code > dhcp-options < code > | < code > elastic-ip-allocation < code > | < code > elastic-ip-association < code > | < code > export-task < code > | < code > flow-log < code > | < code > image < code > | < code > import-task < code > | < code > instance < code > | < code > internet-gateway < code > | < code > network-acl < code > | < code > network-acl-association < code > | < code > network-interface < code > | < code > network-interface-attachment < code > | < code > prefix-list < code > | < code > reservation < code > | < code > route-table < code > | < code > route-table-association < code > | < code > security-group < code > | < code > snapshot < code > | < code > subnet < code > | < code > subnet-cidr-block-association < code > | < code > volume < code > | < code > vpc < code > | < code > vpc-cidr-block-association < code > | < code > vpc-endpoint < code > | < code > vpc-peering-connection < code > | < code > vpn-connection < code > | < code > vpn-gateway < code > < p > param resource the type of resource : < code > bundle < code > | < code > conversion-task < code > | < code > customer-gateway < code > | < code > dhcp-options < code > | < code > elastic-ip-allocation < code > | < code > elastic-ip-association < code > | < code > export-task < code > | < code > flow-log < code > | < code > image < code > | < code > import-task < code > | < code > instance < code > | < code > internet-gateway < code > | < code > network-acl < code > | < code > network-acl-association < code > | < code > network-interface < code > | < code > network-interface-attachment < code > | < code > prefix-list < code > | < code > reservation < code > | < code > route-table < code > | < code > route-table-association < code > | < code > security-group < code > | < code > snapshot < code > | < code > subnet < code > | < code > subnet-cidr-block-association < code > | < code > volume < code > | < code > vpc < code > | < code > vpc-cidr-block-association < code > | < code > vpc-endpoint < code > | < code > vpc-peering-connection < code > | < code > vpn-connection < code > | < code > vpn-gateway < code > return returns a reference to this object so that method call can be chain together <END>
<BEG> < p > the reserved instance product platform description <END>
<BEG> < p > the ids of the security group in your account <END>
<BEG> < p > the date and time <SEG> up to the current date <SEG> from which to stop retrieve the price history data <SEG> in utc format for example <SEG> < i > yyyy < i > - < i > mm < i > - < i > dd < i > t < i > hh < i > : < i > mm < i > : < i > ss < i > z <END>
<BEG> < p > the id of the active directory use for authentication <END>
<BEG> < p > the checksum compute for the disk image <END>
<BEG> < p > a presigned url for the import manifest store in amazon s3 <END>
<BEG> < p > the number of disk with this configuration <END>
<BEG> < p > indicates whether the ebs volume be delete on instance termination <END>
<BEG> < p > indicates that the instance type be amazon ebs-optimized <END>
<BEG> < p > indicates whether amazon ebs encryption be support <END>
<BEG> < p > the time stamp when the attachment initiate <END>
<BEG> < p > the state of the association between the instance and the elastic graphics accelerator <END>
<BEG> < p > the time the elastic graphics accelerator be associate with the instance <END>
<BEG> < p > the time at which the elastic inference accelerator be associate with an instance <END>
<BEG> < p > the current state of the client certificate revocation list <END>
<BEG> < p > the disk image format for the exported image <END>
<BEG> < p > the prefix logical hierarchy in the bucket <END>
<BEG> < p > the encryption key for your s3 bucket <END>
<BEG> < p > the configuration of spot instances in an ec2 fleet <END>
<BEG> < p > any parameter that you specify override the same parameter in the launch template <END>
<BEG> < p > the number of unit provide by the specified instance type <END>
<BEG> < p > the size in mib for the memory available to the fpga accelerator <END>
<BEG> < p > the time at which the output be last updated <END>
<BEG> < p > the currency in which the < code > totalupfrontprice < code > and < code > totalhourlyprice < code > amount be specify <END>
<BEG> < p > describes the memory available to the gpu accelerator <END>
<BEG> < p > if this parameter be set to < code > true < code > <SEG> your instance be enable for hibernation ; otherwise <SEG> it be not enable for hibernation <END>
<BEG> < p > the number of core on the dedicated host <END>
<BEG> < p > the total number of vcpus on the dedicated host <END>
<BEG> < p > the length of the reservation 's term <SEG> specify in second <END>
<BEG> < p > the instance family of the dedicated host reservation <END>
<BEG> < p > the date in utc at which you be permanently switch over to use long ids <END>
<BEG> < p > the arn of a license configuration <END>
<BEG> < p > the id of the amazon machine image ami create by the import task <END>
<BEG> < p > the number of byte convert so far <END>
<BEG> < p > the md5 public key fingerprint a specify in section 4 of rfc 4716 <END>
<BEG> < p > the option for spot instances <END>
<BEG> < p > the state of token usage for your instance metadata request <END>
<BEG> < p > the desired http put response hop limit for instance metadata request <END>
<BEG> < p > this parameter enable or disable the http metadata endpoint on your instance <END>
<BEG> < p > the association information for an elastic ipv4 associate with the network interface <END>
<BEG> < p > the id of the owner of the elastic ip address <END>
<BEG> < p > the state of the instance a a 16-bit unsigned integer <END>
<BEG> < p > the time when a status check fail <END>
<BEG> < p > the late scheduled end time for the event <END>
<BEG> < p > the number of instance the aws account currently have in the capacity reservation <END>
<BEG> < p > the resource that 's associate with the ipv6 cidr block <END>
<BEG> < p > information about the block device for an ebs volume <END>
<BEG> < p > the affinity set for the instance on the dedicated host <END>
<BEG> < p > the arn of the host resource group in which to launch the instance <END>
<BEG> < p > the number of the partition the instance should launch in <END>
<BEG> < p > the required duration for the spot instances also know a spot block <SEG> in minute <END>
<BEG> < p > the behavior when a spot instance be interrupt <END>
<BEG> < p > the id of the event whose date and time you be modify <END>
<BEG> < p > the new date and time when the event will take place <END>
<BEG> < p > the number of on-demand instances in the fleet <END>
<BEG> < p > the destination port that be associate with the traffic mirror rule <END>
<BEG> < p > the port range to assign to the traffic mirror rule <END>
<BEG> < p > the target ebs volume type of the volume <END>
<BEG> < p > the status of the elastic ip address that 's be move to the ec2-vpc platform <SEG> or restore to the ec2-classic platform <END>
<BEG> < p > describes the network performance <END>
<BEG> < p > the maximum number of network interface for the instance type <END>
<BEG> < p > indicates whether elastic network adapter ena be support <END>
<BEG> < p > the association information for an elastic ip address ipv4 associate with the network interface <END>
<BEG> < p > the order of the launch template override to use in fulfil on-demand capacity <END>
<BEG> < p > indicates that the fleet use a single instance type to launch all on-demand instances in the fleet <END>
<BEG> < p > indicates that the fleet launch all on-demand instances into a single availability zone <END>
<BEG> < p > the minimum target capacity for on-demand instances in the fleet <END>
<BEG> < p > the maximum amount per hour for on-demand instances that you 're willing to pay <END>
<BEG> < p > if true <SEG> the public dns hostnames of instance in the specified vpc resolve to private ip address when query from instance in the peer vpc <END>
<BEG> < p > if true <SEG> enable outbound communication from an ec2-classic instance that 's link to a local vpc use classiclink to instance in a peer vpc <END>
<BEG> < p > if true <SEG> enable outbound communication from instance in a local vpc to an ec2-classic instance that 's link to a peer vpc use classiclink <END>
<BEG> < p > the first port in the range <END>
<BEG> < p > the price per instance <END>
<BEG> < p > the first ip address in the range <END>
<BEG> < p > the region service endpoint <END>
<BEG> < p > the id of the new network acl to associate with the subnet <END>
<BEG> < p > the balance of the total value the sum of remainingupfrontvalue + hourlyprice number of hour remain <END>
<BEG> < p > the remain upfront cost of the reservation <END>
<BEG> < p > used for reserved instance marketplace offering <END>
<BEG> < p > the total value of the convertible reserved instance that you be exchange <END>
<BEG> < p > the id of the convertible reserved instance that you be exchange <END>
<BEG> < p > the target reserved instances configuration supply a part of the modification request <END>
<BEG> < p > indicates whether this be the main route table <END>
<BEG> < p > the access key id of the owner of the bucket <END>
<BEG> < p > an amazon s3 upload policy that give amazon ec2 permission to upload item into amazon s3 on your behalf <END>
<BEG> < p > the frequency < code > daily < code > <SEG> < code > weekly < code > <SEG> or < code > monthly < code > <END>
<BEG> < p > enable or disable monitoring for the instance <END>
<BEG> < p > the id of the vpc with the reference security group <END>
<BEG> < p > the id of the volume that be use to create the snapshot <END>
<BEG> < p > value from an amazon-maintained list < code > amazon < code > | < code > self < code > | < code > all < code > | < code > aws-marketplace < code > | < code > microsoft < code > of snapshot owner <END>
<BEG> < p > the size of the disk in the snapshot <SEG> in gib <END>
<BEG> < p > the fault code for the spot instance request <SEG> if any <END>
<BEG> < p > the number of spot pool across which to allocate your target spot capacity <END>
<BEG> < p > the number of unit to request <SEG> fill use < code > defaulttargetcapacitytype < code > <END>
<BEG> < p > the default < code > totaltargetcapacity < code > <SEG> which be either < code > spot < code > or < code > on-demand < code > <END>
<BEG> < p > the id of the convertible reserved instance offering <END>
<BEG> < p > the configuration of the convertible reserved instances that make up the exchange <END>
<BEG> < p > the id of the route table for the transit gateway <END>
<BEG> < p > indicates that the resource be a transit gateway multicast group member <END>
<BEG> < p > the member type for example <SEG> < code > static < code > <END>
<BEG> < p > indicates whether attachment request be automatically accept <END>
<BEG> < p > indicates whether resource attachment be automatically associate with the default association route table <END>
<BEG> < p > indicates whether equal cost multipath protocol support be enable <END>
<BEG> < p > enable or disable automatic propagation of route to the default propagation route table <END>
<BEG> < p > the applicable error for the burstable performance instance whose credit option for cpu usage be not modify <END>
<BEG> < p > the status of a vpc peering connection <SEG> if applicable <END>
<BEG> < p > the date and time of the last change in status <END>
<BEG> < p > the internet-routable ip address of the virtual private gateway 's outside interface <END>
<BEG> < p > the amazon resource name arn of the vpn tunnel endpoint certificate <END>
<BEG> < p > the current modification state <END>
<BEG> < p > the modification progress <SEG> from 0 to 100 percent complete <END>
<BEG> < p > the event type associate with this operation <END>
<BEG> adds a filter to the set <END>
<BEG> severitylevel factory method <END>
<BEG> returns last indentation level <END>
<BEG> get the line number of the first line <END>
<BEG> indicates if this tag be a self-closed xhtml style <END>
<BEG> getter for col field <END>
<BEG> sets column number <END>
<BEG> returns a javadoctag from the tag name <END>
<BEG> returns the intfilters of the filter set <END>
<BEG> notifies all listener that have register interest for 'editing cancel ' event <END>
<BEG> returns selection end position <END>
<BEG> returns tree <END>
<BEG> gets the number of thread for the treewalker module <END>
<BEG> node be on class definition <END>
<BEG> node be on annotation field declaration <END>
<BEG> get content of javadoc comment <END>
<BEG> gets previous sibling of specified node <END>
<BEG> returns whether a node be directly contain within an interface block <END>
<BEG> determines whether a node be a class field definition <END>
<BEG> get the stack trace element <END>
<BEG> non-javadoc see edu umd c findbugs xml xmlwriteable # writexml edu umd c findbugs xml xmloutput <END>
<BEG> get the current nesting depth <END>
<BEG> make this the special bottom dataflow value <END>
<BEG> enter a finally block <END>
<BEG> non-javadoc see edu umd c findbugs graph abstractgraph # createedge edu umd c findbugs graph abstractvertex <SEG> edu umd c findbugs graph abstractvertex <END>
<BEG> return whether or not this value be a constant <END>
<BEG> set the non-null param bitset <END>
<BEG> return whether or not a parameter might be non-null <END>
<BEG> make this lockset the same a the give one <END>
<BEG> set the stack depth <END>
<BEG> set the abbreviation typically a single capital letter <END>
<BEG> set the detail text describe the category <END>
<BEG> get the abbreviation fo this bug code <END>
<BEG> get next property in list <END>
<BEG> non-javadoc see edu umd c findbugs classfile icodebaselocator # createrelativecodebaselocator java lang string <END>
<BEG> get visibility of the factory to gui dialog to configure detector <END>
<BEG> get an iterator over the recorded searchtrees <END>
<BEG> sets size of font param size <END>
<BEG> close give inputstream <SEG> ignore any resulting exception <END>
<BEG> get the number of class analyze <END>
<BEG> write this bugcollection to a file a xml <END>
<BEG> param args throw ioexception <END>
<BEG> extra stuff print at the end of the & lt ; body & gt ; element <END>
<BEG> try to find a codebase match the give pattern in the give class path string <END>
<BEG> non-javadoc see java util iterator # next <END>
<BEG> get the replacement for a metacharacter <END>
<BEG> to be compatible with version control system <SEG> we need to sort property before store them to disk <END>
<BEG> execute the search for source directory <END>
<BEG> find the self call <END>
<BEG> write the bugcollection to give output stream a xml <END>
<BEG> attempt to show the give url <END>
<BEG> this be require because we implement comparable <END>
<BEG> returns true if the give object be an instance of the packagedata class <SEG> and it contain the same data a this class <END>
<BEG> returns a new token object <SEG> by default <END>
<BEG> releases the lock on the file <END>
<BEG> closes an output stream <END>
<BEG> extract the jacoco agent jar and put it into the specify location <END>
<BEG> returns the branch coverage counter of this instruction <END>
<BEG> writes a boolean array <END>
<BEG> sets whether the output should be append to an exist file <END>
<BEG> sets the wildcard expression for class to include <END>
<BEG> sets whether class from the bootstrap classloader should be instrument <END>
<BEG> sets whether class without source location should be instrument <END>
<BEG> sets whether coverage data should be dump on exit <END>
<BEG> reads all data from give input stream <END>
<BEG> < p > set { code true } to enable terminal width detection <END>
<BEG> returns true iff terminal width detection be enable <END>
<BEG> < p > if singlemetavar be { code true } <SEG> a metavar string in help message be only show after the last flag instead of each flag <END>
<BEG> < p > returns storefalse action <END>
<BEG> < p > returns { link caseinsensitiveenumnameargumenttype } with give enum { code type } <END>
<BEG> < p > infers metavar base on give type <END>
<BEG> < p > creates a { code caseinsensitiveenumstringargumenttype } for the give enum type <END>
<BEG> verifies that the specified path be writable <END>
<BEG> verifies that the specified path be an absolute path <END>
<BEG> returns attribute a { link byte } with give attribute name { code dest } <END>
<BEG> short syntax be use in usage message <SEG> e g <END>
<BEG> programmatically define an option instead of read it from annotation a normal <END>
<BEG> sets the width of the usage output <END>
<BEG> prints a single-line usage to the screen <END>
<BEG> registers a user-defined { link optionhandler } class with args4j <END>
<BEG> creates an { link optionhandler } that handle the give { link option } annotation and the { link setter } instance <END>
<BEG> return the width of a usage line <END>
<BEG> returns the 'width ' <END>
<BEG> returns the 'descpadding ' <END>
<BEG> returns the separator display between a long option and it value <END>
<BEG> gets the display name for the argument value <END>
<BEG> sets the value separator <END>
<BEG> returns the number of argument value this option can take <END>
<BEG> the next option create can have unlimited argument value <END>
<BEG> the next option can have the specify number of optional argument <END>
<BEG> returns whether the name { link option } be a member of this { link options } <END>
<BEG> returns the file represent by < code > str < code > <END>
<BEG> returns the unrecognized option <END>
<BEG> returns the usage formatter <END>
<BEG> < p > specifies a value separator for the argument of the option that this spec represent <END>
<BEG> specifies a set of default value for the argument of the option that this spec represent <END>
<BEG> < p > informs an option parser that this builder 's option be allow if the give option be present on the command line < p > < p > for a give option <SEG> you < em > should not < em > mix this with { link # availableunless string <SEG> string availableunless } to avoid conflict < p > param dependent an option whose presence on a command line make this builder 's option allow param otherdependents other option whose presence on a command line make this builder 's option allow return self <SEG> so that the caller can add clause to the fluent interface sentence throw optionexception if any of the dependent option have n't be configure in the parser yet <END>
<BEG> < p > informs an option parser that this builder 's option be allow if the give option be absent on the command line < p > < p > for a give option <SEG> you < em > should not < em > mix this with { link # availableif optionspec <SEG> optionspec [ ] requiredif } to avoid conflict < p > param dependent an option whose absence on a command line make this builder 's option allow param otherdependents other option whose absence on a command line make this builder 's option allow return self <SEG> so that the caller can add clause to the fluent interface sentence throw optionexception if any of the dependent option have n't be configure in the parser yet <END>
<BEG> non-javadoc see java io inputstream # close <END>
<BEG> non-javadoc see java io inputstream # read byte [ ] <SEG> int <SEG> int <END>
<BEG> constructs a new sort map from output stream provider name to provider object <END>
<BEG> get ino <END>
<BEG> sets the path of the entry <END>
<BEG> return the type of the tape segment header <END>
<BEG> returns the unmodified name of the entry <END>
<BEG> is this a directory ? <END>
<BEG> set the access permission on the entry <END>
<BEG> returns the time the file be last accessed <END>
<BEG> return the user id <END>
<BEG> set dump label <END>
<BEG> set the number of record per tape block <END>
<BEG> is this the new inode format ? <END>
<BEG> get the ino associate with this buffer <END>
<BEG> read 4-byte integer from buffer <END>
<BEG> see java io inputstream # available <END>
<BEG> expands { code archive } into { code targetdirectory } <END>
<BEG> sets whether this entry have get a creation date at all <END>
<BEG> sets whether this entry have get a last modified date at all <END>
<BEG> gets the access date <END>
<BEG> sets the access date use ntfs time 100 nanosecond unit since 1 january 1601 param ntfsaccessdate the access date <END>
<BEG> sets the access date <SEG> param accessdate the access date <END>
<BEG> sets whether this entry have window attribute <END>
<BEG> sets the window attribute <END>
<BEG> sets whether this entry have get a crc <END>
<BEG> get this entry 's file size <END>
<BEG> set this entry 's compress file size <END>
<BEG> gets the compression method to use for entry 's content - the default be lzma2 <END>
<BEG> closes the archive <END>
<BEG> returns the next archive entry in this archive <END>
<BEG> checks if the signature match what be expect for a 7z file <END>
<BEG> sets the default compression method to use for entry content - the default be lzma2 <END>
<BEG> set this entry 's major device number <END>
<BEG> indicate if this entry be a gnu long name block return true if this be a long name extension provide by gnu tar <END>
<BEG> check if this be a pax header <END>
<BEG> check if this be a character device entry <END>
<BEG> reads bytes from the current tar archive entry <END>
<BEG> get the record size be use by this stream 's tarbuffer <END>
<BEG> close an entry <END>
<BEG> writes an octal value into a buffer <END>
<BEG> delegate to local file data <END>
<BEG> reads a byte from the buffer <END>
<BEG> returns the number of tree use by the compression method 6 imploding <END>
<BEG> see zipencoding # encode java lang string <END>
<BEG> submit a callable for compression <END>
<BEG> the actual data to put into local file data - without header-id or length specifier <END>
<BEG> returns the access time a a java util date of this zip entry <SEG> or null if no such timestamp exists in the zip entry <END>
<BEG> sets the file last access time of this zip entry use a zipeightbyteinteger object <END>
<BEG> get record count <END>
<BEG> get encryption algorithm <END>
<BEG> < p > sets the create time second since epoch of this zip entry use a ziplong object < p > < p > note : the setter for flag and timestamps be decouple <END>
<BEG> returns a string representation of this class useful for debug purpose <END>
<BEG> the uncompressed size store in this extra field <END>
<BEG> the relative header offset store in this extra field <END>
<BEG> retrieves extra field <END>
<BEG> is this entry a directory ? <END>
<BEG> the general purpose bit field <END>
<BEG> the source of the comment field value <END>
<BEG> sets the source of the comment field value <END>
<BEG> the number of the split segment this entry start at <END>
<BEG> whether this stream be able to write the give entry <END>
<BEG> get value a java biginteger <END>
<BEG> override to make two instance with same value equal <END>
<BEG> get value a two byte in big endian byte order <END>
<BEG> put the value a two byte in big endian byte order <END>
<BEG> adds some initial data to fill the window with <END>
<BEG> are the class require to support lzma compression available ? <END>
<BEG> initializes the array base on the maximum code size <END>
<BEG> whether to cache the result of the xz for java check <END>
<BEG> convert an input byte array to a string use the ascii character set <END>
<BEG> reads the give number of byte from the give supplier a a little endian long <END>
<BEG> reads from the stream into a byte array <END>
<BEG> increments the counter of already write byte <END>
<BEG> returns the current number of byte write to this stream <END>
<BEG> accessor to get thread-local recycler instance <END>
<BEG> fill the uncompressed byte buffer by read the underlying inputstream <END>
<BEG> compress and write the current block to the outputstream <END>
<BEG> method to use for get compressor instance that use the most optimal available method for underlie data access <END>
<BEG> method that can be use to ensure that a safe compressor instance be load <END>
<BEG> method for define whether call to { link # flush } will also complete current block similar to call { link # finishblock } or not <END>
<BEG> method that can be use to force completion of the current block <SEG> which mean that all buffer data will be compress into an lzf block <END>
<BEG> fills int array with zero <END>
<BEG> decompresses < code > src [ srcoff : ] < code > into < code > d [ destoff : ] < code > and return the number of byte read from < code > src < code > <END>
<BEG> returns the fast available { link lz4factory } instance <END>
<BEG> returns a { link lz4compressor } which require more memory than { link # fastcompressor } and be slow but compress more efficiently <END>
<BEG> returns a { link lz4safedecompressor } instance <END>
<BEG> returns a { link checksum } view of this instance <END>
<BEG> return a new { link streamingxxhash32 } instance <END>
<BEG> apply a bit-shuffling filter into the input int array <END>
<BEG> convert the input bit-shuffled byte array into an original int array <END>
<BEG> adds input source file to the zip file with default zip parameter <END>
<BEG> extracts a specific file from the zip file to the destination path <END>
<BEG> renames file name of the entry represent by input filenametorename <END>
<BEG> compresses buffer 'src ' into buffer 'dst ' <END>
<BEG> compresses buffer 'src ' into buffer 'dst ' with dictionary <END>
<BEG> decompresses direct buffer 'src ' into direct buffer 'dst ' <END>
<BEG> compresses the data in buffer 'srcbuf ' param srcbuf the source buffer <END>
<BEG> compresses the data in buffer 'srcbuf ' param srcbuf the source buffer - must be direct <END>
<BEG> decompresses buffer 'srcbuff ' into buffer 'dstbuff ' use this zstddecompressctx <END>
<BEG> decompresses byte array 'srcbuff ' into byte array 'dstbuff ' use this zstddecompressctx <END>
<BEG> removes the last occurrence of the specified element in this deque when traverse the deque from head to tail <END>
<BEG> pops an element from the stack represent by this deque <END>
<BEG> returns an iterator over the element in this deque <END>
<BEG> returns < tt > true < tt > if this deque contain the specified element <END>
<BEG> removes a single instance of the specified element from this queue <SEG> if it be present <END>
<BEG> returns an array contain all of the element in this queue <SEG> in proper sequence ; the runtime type of the returned array be that of the specified array <END>
<BEG> atomically remove all of the element from this queue <END>
<BEG> unconditionally set to the give value <END>
<BEG> atomically set to the give value and return the previous value <END>
<BEG> atomically set the element at position { code i } to the give updated value if the current value { code == } the expected value <END>
<BEG> atomically decrement by one the element at index { code i } <END>
<BEG> atomically add the give value to the element at index { code i } <END>
<BEG> gets the current value at position { code i } <END>
<BEG> eventually set the element at position { code i } to the give value <END>
<BEG> returns the current value of both the reference and the stamp <END>
<BEG> atomically set the value of the stamp to the give update value if the current reference be { code == } to the expect reference <END>
<BEG> returns the segment that should be use for key with give hash param hash the hash code for the key return the segment <END>
<BEG> tests if the specified object be a key in this table <END>
<BEG> returns < tt > true < tt > if this map map one or more key to the specify value <END>
<BEG> maps the specify key to the specify value in this table <END>
<BEG> returns < tt > true < tt > if this queue contain no element <END>
<BEG> initializes or reset state <END>
<BEG> compares use comparator or natural ordering <END>
<BEG> findpredecessor ca n't be use to traverse index level because this do n't use comparison <END>
<BEG> returns < tt > true < tt > if this map contain a mapping for the specify key <END>
<BEG> returns the value to which the specify key be map <SEG> or { code null } if this map contain no mapping for the key <END>
<BEG> returns a key-value mapping associate with the least key great than or equal to the give key <SEG> or < tt > null < tt > if there be no such entry <END>
<BEG> returns a key-value mapping associate with the least key strictly great than the give key <SEG> or < tt > null < tt > if there be no such key <END>
<BEG> returns a key-value mapping associate with the great key in this map <SEG> or < tt > null < tt > if the map be empty <END>
<BEG> removes and return a key-value mapping associate with the great key in this map <SEG> or < tt > null < tt > if the map be empty <END>
<BEG> returns a shallow copy of this < tt > concurrentskiplistset < tt > instance <END>
<BEG> adds the specified element to this set if it be not already present <END>
<BEG> removes from this set all of it element that be contain in the specify collection <END>
<BEG> returns a reverse order view of the element contain in this set <END>
<BEG> causes the current thread to wait until the latch have count down to zero <SEG> unless the thread be { linkplain thread # interrupt interrupt } <END>
<BEG> decrements the count of the latch <SEG> release all wait thread if the count reach zero <END>
<BEG> retrieves and remove the head of this queue <SEG> wait if necessary until an element with an expired delay be available on this queue <END>
<BEG> atomically remove all of the element from this delay queue <END>
<BEG> returns an array contain all of the element in this queue <END>
<BEG> returns an array contain all of the element in this queue ; the runtime type of the returned array be that of the specified array <END>
<BEG> creates a single-threaded executor that can schedule command to run after a give delay <SEG> or to execute periodically <END>
<BEG> inserts the specified element at the tail of this queue <SEG> wait if necessary for space to become available <END>
<BEG> inserts the specified element at the tail of this queue if it be possible to do so immediately without exceed the queue 's capacity <SEG> return < tt > true < tt > upon success and < tt > false < tt > if this queue be full <END>
<BEG> executes { code command } with zero require delay <END>
<BEG> gets the policy on whether to cancellation of a a task should remove it from the work queue <END>
<BEG> retrieves <SEG> but do not remove <SEG> the head of this queue <SEG> or return < tt > null < tt > if this queue be empty <END>
<BEG> retrieves <SEG> but do not remove <SEG> the head of this queue <END>
<BEG> create a new event handler group that combine the handler in this group with < tt > processor < tt > <END>
<BEG> verbose printout of table internals <SEG> useful for debug <END>
<BEG>  < br > < p > implementation notes : < br > peek be allow from a single thread < br > peek be potentially block here a the { link queue # peek } do not allow return { code null } if the queue be not empty <END>
<BEG> { link # offer } } if { link # size } be less than threshold <END>
<BEG> a wait free alternative to offer which fail on cas failure <END>
<BEG> it be possible for a thread to be interrupt or reschedule between the read of the producer and consumer index <SEG> therefore protection be require to ensure size be within valid range <END>
<BEG> an ordered store of an element to a give offset param buffer this buffer param offset compute via { link unsaferefarrayaccess # calccircularrefelementoffset } param e an orderly kitty <END>
<BEG> param index desirable element index return the offset in byte within the array for a give index <END>
<BEG> note : circular array be assume a power of 2 in length and the ` mask ` be length - 1 <END>
<BEG> returns an estimate of the number of worker thread that be not block wait to join task or for other manage synchronization <END>
<BEG> returns an estimate of the number of thread that be currently steal or execute task <END>
<BEG> returns an estimate of the total number of task steal from one thread 's work queue by another <END>
<BEG> returns an estimate of the number of task submit to this pool that have not yet begin execute <END>
<BEG> forks the give task <SEG> return when { code isdone } hold for each task or an unchecked exception be encounter <SEG> in which case the exception be rethrown <END>
<BEG> arranges for asynchronous execution of the give task <END>
<BEG> throw nullpointerexception if the task be null throw rejectedexecutionexception if the task can not be schedule for execution <END>
<BEG> throw nullpointerexception  throw rejectedexecutionexception  <END>
<BEG> returns the handler for internal worker thread that terminate due to unrecoverable error encounter while execute task <END>
<BEG> returns the targeted parallelism level of this pool <END>
<BEG> returns { code true } if this pool use local first-in-first-out scheduling mode for forked task that be never join <END>
<BEG> returns { code true } if all worker thread be currently idle <END>
<BEG> removes all available unexecuted submit and fork task from schedule queue and add them to the give collection <SEG> without alter their execution status <END>
<BEG> returns a string identify this pool <SEG> as well a it state <SEG> include indication of run state <SEG> parallelism level <SEG> and worker and task count <END>
<BEG> returns { code true } if all task have complete follow shut down <END>
<BEG> blocks until all task have complete execution after a shutdown request <SEG> or the timeout occur <SEG> or the current thread be interrupt <SEG> whichever happen first <END>
<BEG> blocks in accord with the give blocker <END>
<BEG> primary execution method for steal task <END>
<BEG> commences perform this task <SEG> await it completion if necessary <SEG> and return it result <SEG> or throw an unchecked { code runtimeexception } or { code error } if the underlie computation do so <END>
<BEG> forks all task in the specified collection <SEG> return when { code isdone } hold for each task or an unchecked exception be encounter <SEG> in which case the exception be rethrown <END>
<BEG> attempts to cancel execution of this task <END>
<BEG> cancels <SEG> ignore any exception throw by cancel <END>
<BEG> returns { code true } if this task complete without throw an exception and be not cancel <END>
<BEG> returns the exception throw by the base computation <SEG> or a { code cancellationexception } if cancel <SEG> or { code null } if none or if the method have not yet complete <END>
<BEG> waits if necessary for the computation to complete <SEG> and then retrieve it result <END>
<BEG> possibly execute task until the pool host the current task { link forkjoinpool # isquiescent be quiescent } <END>
<BEG> tries to unschedule this task for execution <END>
<BEG> returns an estimate of the number of task that have be fork by the current worker thread but not yet execute <END>
<BEG> initializes internal state after construction but before process any task <END>
<BEG> this method be require to be public <SEG> but should never be call explicitly <END>
<BEG> returns { code true } if this phaser have be terminate <END>
<BEG> creates a { code xmlconfiguration } instance from the content of the give url <END>
<BEG> creates a { code iniconfiguration } instance from the content of the file identify by the give path <END>
<BEG> returns the configuration at the specified index <END>
<BEG> get an array of boolean primitive associate with the give configuration key <END>
<BEG> get an array of bigintegers associate with the give configuration key <END>
<BEG> get an uri associate with the give configuration key <END>
<BEG> removes all register error listener <END>
<BEG> sets the configuration object to be parse <END>
<BEG> returns a list with the child of this node <END>
<BEG> creates a new { code immutablenode } instance which be a copy of this object with the value change to the pass in value <END>
<BEG> returns a new { code immutablenode } instance which be a copy of this object <SEG> but with all attribute add define by the give map <END>
<BEG> returns the reference object associate with the give node <END>
<BEG> creates a new instance which use the specified { code referencetracker } <END>
<BEG> returns the system id of the source document <END>
<BEG> returns the method argument type <END>
<BEG> sets the attribute name from which the property name have to be extract <END>
<BEG> allows specify the attribute contain an override class name if it be present <END>
<BEG> sets the xml attribute which the input xml use to indicate to a plugincreaterule which class should be instantiate <END>
<BEG> sets the xml attribute which the input xml use to indicate to a plugincreaterule which plugin declaration be be reference <END>
<BEG> get the namespace for the xml attribute which indicate to a plugincreaterule which class be to be plug in <END>
<BEG> sets the current regex matching strategy <END>
<BEG> set the file format <END>
<BEG> prepends a { link configincluder } which customize how include be handle <END>
<BEG> returns option with formatting toggle <END>
<BEG> returns whether the option enable format <END>
<BEG> implements the < code > childspi < code > method a per the specification in { link java util prefs abstractpreferences # childspi string } <END>
<BEG> implements the < code > keysspi < code > method a per the specification in { link java util prefs abstractpreferences # keysspi } <END>
<BEG> < b > dom < b > : implements { link org w3c dom cs cssstyledeclaration # getpropertyvalue string } <END>
<BEG> < b > dom < b > : implements { link org w3c dom cs cssstyledeclaration # setproperty string <SEG> string <SEG> string } <END>
<BEG> creates the css value associate with the give property <END>
<BEG> implements { link value # getprimitivetype } <END>
<BEG> returns the computed value <END>
<BEG> a string representation of the current value <END>
<BEG> implements { link value # item int } <END>
<BEG> appends an item to the list <END>
<BEG> tests whether the give character be a valid hexadecimal character <END>
<BEG> deprecate see # getendline <END>
<BEG> write the string <END>
<BEG> start a newline <END>
<BEG> return the name of the map deprecate <END>
<BEG> returns the normalized content of the less source <END>
<BEG> lines around error a report by less j <END>
<BEG> determines whether the current node be actually close and push <END>
<BEG> call this to reinitialize the node stack <END>
<BEG> pushes a node on to the stack <END>
<BEG> returns the node on the top of the stack <SEG> and remove it from the stack <END>
<BEG> returns the node currently on the top of the stack <END>
<BEG> returns the number of child on the stack in the current node scope <END>
<BEG> a definite node be construct from a specified number of child <END>
<BEG> the column number of the end of the text where the exception occur <END>
<BEG> get the byte stream for this input source <END>
<BEG> check if a string contain a sub string <SEG> use whole word match <END>
<BEG> creates a new csv format with the specify delimiter <END>
<BEG> returns a copy of the header array <END>
<BEG> returns whether a quotechar have be define <END>
<BEG> returns a new { code csvformat } with the header of the format define by the enum class <END>
<BEG> returns a new { code csvformat } with the header comment of the format set to the give value <END>
<BEG> returns a new { code csvformat } with the empty line skip behavior of the format set to the give value <END>
<BEG> returns a new { code csvformat } with the parser trim behavior of the format set to the give value <END>
<BEG> returns a new { code csvformat } with whether to add a trailing delimiter <END>
<BEG> register a result column mapper factory <END>
<BEG> used to execute the query and traverse the result set with a accumulator <END>
<BEG> specify that the fetch order should be forward <SEG> use the underlie { link statement # setfetchdirection int } return the modified query <END>
<BEG> override the statement rewriter use for this statement <END>
<BEG> exactly the same a setstatementrewriter but return self <END>
<BEG> bind null to be set for a give argument <END>
<BEG> sets the separator that the icsvwriter will be use <END>
<BEG> sets the escape character that the icsvwriter will be use <END>
<BEG> creates the csvwriter <END>
<BEG> constructs rfc4180parser <END>
<BEG> runs all rowvaldators validate command and if the string be invalid then it combine all the validation error message in a single csvvalidationexception <END>
<BEG>  throw supercsvcellprocessorexception if value be null throw supercsvconstraintviolationexception if a non-unique value be encounter <END>
<BEG>  throw supercsvcellprocessorexception if value be null <END>
<BEG>  throw supercsvcellprocessorexception if value be null <SEG> be n't a string <SEG> or ca n't be parse to a date <END>
<BEG>  throw supercsvcellprocessorexception if value be null <SEG> be n't an integer or string <SEG> or ca n't be parse a an integer <END>
<BEG> returns the string representation of this exception <END>
<BEG> returns the quote character return the quote character <END>
<BEG> existence check of a value or < tt > null < tt > map to the key <END>
<BEG> returns the number of key-value mapping in this map for the third key <END>
<BEG> transforms a header index param method the method of a { link nested } class whose header will be transform param index the current column position associate with the method of the { link nested } class return the transformed position to be use to read write value from to the give method <END>
<BEG> runs through all annotation of a give class to identify whether all annotate field and method with the { link parsed } annotation be map to a column by name <END>
<BEG> returns { code true } if the field be map to a column name <SEG> otherwise { code false } return { code true } if the field be map to a column name <SEG> otherwise { code false } <END>
<BEG> returns the column name against which this field be map <END>
<BEG> creates a descriptor for a getter method param prefix a dot separate string denote a path of nested object name param method a actual class method to be associate with this prefix return a getter method descriptor <END>
<BEG> parses all remain row from the input and return them in a list <END>
<BEG> parses all remain { link record } s from the input and return them in a list <END>
<BEG> parses a single line from a string in the format support by the parser implementation <END>
<BEG> parses the next record from the input <END>
<BEG> updates the selection of field to write <END>
<BEG> updates the selection of field to exclude when write <END>
<BEG> iterates over all record <SEG> process each one with the { link rowwriterprocessor } provide by { link commonwritersettings # getrowwriterprocessor } <SEG> and write them <END>
<BEG> iterates over all record <SEG> write them and close the output <END>
<BEG> iterates over all record and write them to the output <END>
<BEG> writes a sequence of strings to a row in memory <END>
<BEG> writes a value to a row in memory <END>
<BEG> iterates over all record and write them to a { code list } of { code string } <END>
<BEG> writes the value of a give map to a { code list } of { code string } format to accord to the specify output format <END>
<BEG> writes the value of a give map to multiple output record and close the output when finish <END>
<BEG> processes the data in all value of a map use the { link rowwriterprocessor } provide by { link commonwritersettings # getrowwriterprocessor } <SEG> then write all value to the output <END>
<BEG> processes the data in all value of a map use the { link rowwriterprocessor } provide by { link commonwritersettings # getrowwriterprocessor } and write the result into a { code list } of { code string } format to accord to the specify output format <END>
<BEG> processes the data in all value of a map use the { link rowwriterprocessor } provide by { link commonwritersettings # getrowwriterprocessor } <SEG> then write all value to the output and close the writer <END>
<BEG> returns the index of a character in a give array <END>
<BEG> returns the method that should be use to read the value of a property of a java bean <END>
<BEG> defines whether or not a separate thread will be use to read character from the input while parse default true if the number of available processor at runtime be great than 1 < p > when enable <SEG> a reading thread in { code com univocity parser common input concurrent concurrentcharinputreader } will be start and load character from the input <SEG> while the parser be process it input buffer <END>
<BEG> defines whether field select use the field selection method define by the parent class { link commonsettings } should be reorder default to true <END>
<BEG> defines the number of character hold by the parser 's buffer when process the input default to 1024 1024 character <END>
<BEG> defines whether the parser should detect the line separator automatically <END>
<BEG> defines a number of row to skip from the input before the parser can begin to execute <END>
<BEG> defines whether or not empty line should be ignore default to true < p > when reading <SEG> if the parser read a line that be empty <SEG> it will be skip <END>
<BEG> returns whether or not leading whitespaces from value be read write should be skip default to true return true if leading whitespaces from value be read write should be skip <SEG> false otherwise <END>
<BEG> defines whether or not leading whitespaces from value be read write should be skip default to true param ignoreleadingwhitespaces true if leading whitespaces from value be read write should be skip <SEG> false otherwise <END>
<BEG> returns the field names in the input output <SEG> in the sequence they occur default to null <END>
<BEG> defines a hard limit of how many columns a record can have default to 512 <END>
<BEG> selects a sequence of field for read write by their position <END>
<BEG> selects columns which will not be read write <SEG> by their position < p > < b > when read < b > <SEG> only the value of the select column will be parse <SEG> and the content of the other column ignore <END>
<BEG> indicates whether this setting object can automatically derive configuration option <END>
<BEG> defines whether the writer should expand record with less column than the number of header <END>
<BEG> returns the value be process when the error occur <SEG> if available <END>
<BEG> updates the exception with the record be process when the error occur <END>
<BEG> returns the index of any that be part of a sequence of header but not part of the selection <END>
<BEG> applies a sequence of conversion on a selection of field name param conversion the sequence of conversion to be apply return a selector of column name <END>
<BEG> returns true if the bucket be empty i e <END>
<BEG> returns the next available bucket <END>
<BEG> matches a sequence of character against the current lookahead buffer <END>
<BEG> returns null a this appender do nothing <END>
<BEG> creates a non-literal { code normalizedstring } <SEG> mean it will match with other { code string } or { code normalizedstring } regardless of different include character case and surrounding whitespaces <END>
<BEG> converts multiple normalized string into a { code hashset } of { code string } <END>
<BEG> analyzes a group of string to identify any instance whose normalized content will generate clash <END>
<BEG> returns the value of a give column <END>
<BEG> executes the sequence of conversion define use { link defaultconversionprocessor # convertfields conversion } <SEG> { link defaultconversionprocessor # convertindexes conversion } and { link defaultconversionprocessor # convertall conversion } <SEG> for every field in the give row <END>
<BEG> returns the index in use by the current row processor implementation <SEG> which can vary among row processor <END>
<BEG> converts a java bean instance into a sequence of value for write <END>
<BEG> configures the switch to use a custom { link comparator } to compare value in the column to analyze which be give in the constructor of this class <END>
<BEG> defines the parser configuration to be use by the routine of this utility class <END>
<BEG> returns the maximum number of column the input contains <END>
<BEG> returns the maximum length a { code string } key can have to be use a a key in this cache <END>
<BEG> converts a string to biginteger <END>
<BEG> returns a singleton instance of { link uppercaseconversion } return a singleton instance of { link uppercaseconversion } <END>
<BEG> returns a new instance of { link dateconversion } param locale the { link locale } that determine how the date mask should be format <END>
<BEG> returns a new instance of { link calendarconversion } param dateformats list of acceptable date pattern <END>
<BEG> returns a new instance of { link formattedbigdecimalconversion } param defaultvaluefornullstring default bigdecimal to be return when the input string be null <END>
<BEG> returns a new instance of { link booleanconversion } param valuefortrue string that identify the boolean value < i > true < i > <END>
<BEG> returns a { link validatedconversion } that check for null or blank value <END>
<BEG> returns a new instance of { link validatedconversion } to validate value of a record nulls and blank be not be allow by default <END>
<BEG> converts date to a formatted date string <END>
<BEG> applies the tolowercase operation in the input and return the result <END>
<BEG> defines the character use for escape value where the field delimiter be part of the value <END>
<BEG> returns the field delimiter sequence <END>
<BEG> creates a new instance initialize from { link fixedwidth } annotation in the field and method of a give class <END>
<BEG> adds the length of the next field in a fixed-width record <END>
<BEG> modifies the length of a give field param position the position of the field whose length must be alter param newlength the new length of the give field <END>
<BEG> applies alignment to a give list of field param alignment the alignment to apply param name the name of the field that should be align <END>
<BEG> returns a copy of the sequence of pad character to apply over each field in the fixed-width record <END>
<BEG> applies a custom pad character to a give list of field param pad the padding to apply param name the name of the field that should use the give padding character <END>
<BEG> configures a give list of field to remove the padding character in any parsed value <SEG> override the any default set for the whole input in { link fixedwidthparsersettings # getkeeppadding } param position the position of the field that should keep the padding character param position additional position <END>
<BEG> defines the padding character use to represent unwritten space <END>
<BEG> defines the lookup wildcard character to accept any character in look-ahead or look-behind pattern define use { link fixedwidthparsersettings # addformatforlookahead string <SEG> fixedwidthfields } or { link fixedwidthparsersettings # addformatforlookbehind string <SEG> fixedwidthfields } <END>
<BEG> returns the sequence of field to ignore <END>
<BEG> defines whether or not a record be consider parsed when a newline be reach <END>
<BEG> defines the format of record identify by a lookbehind symbol <END>
<BEG> returns the sequence of field whose pad character must must not be retain in the parsed value return the sequence that have an explicit 'keeppadding ' flag <END>
<BEG> initializes the fixed-width writer with csv-specific configuration param settings the fixed-width writer configuration <END>
<BEG> defines the default alignment to use when write header <END>
<BEG> defines the character that should be use to represent an escaped tab <SEG> i e <END>
<BEG> output the instant use the specify format pattern <END>
<BEG> get the value of one of the field of a datetime <END>
<BEG> is this instant strictly before the millisecond instant pass in compare solely by millisecond <END>
<BEG> is this instant strictly before the current instant comparing solely by millisecond <END>
<BEG> is this instant strictly before the instant pass in compare solely by millisecond <END>
<BEG> gets the end of this time interval <SEG> which be exclusive <SEG> a a datetime <END>
<BEG> does this time interval contain the specify instant <END>
<BEG> does this time interval contain the specified time interval <END>
<BEG> is this time interval entirely after the specified interval <END>
<BEG> gets a hash code for the readablepartial that be compatible with the equal method <END>
<BEG> uses the specified formatter to convert this period to a string <END>
<BEG> checks the specify instant before store it <SEG> potentially alter it <END>
<BEG> converts this duration to a period instance use the specified period type and the iso chronology <END>
<BEG> converts this duration to a period instance by subtract the duration from an end instant to obtain an interval use the standard period type <END>
<BEG> converts this duration to an interval end at the specify instant <END>
<BEG> sets the value of the field at the specified index <END>
<BEG> gets the period type <END>
<BEG> gets the total millisecond duration of this period relative to an end instant <END>
<BEG> sets the value of a field in this period <END>
<BEG> merges the field from another period <END>
<BEG> sets the value of all field <END>
<BEG> gets the field type at the specified index <END>
<BEG> get this object a a < code > mutableperiod < code > <END>
<BEG> gets a hash code for the period a define by readableperiod <END>
<BEG> returns the same param object a pass into the constructor <END>
<BEG> adds the duration to the instant <SEG> specify the number of time to add <END>
<BEG> get the millisecond for the start of a month <END>
<BEG> gets the maximum number of day in the month specify by the instant <END>
<BEG> get the year of a week base year component of the specified time instant <END>
<BEG> add the specified year to the specified time instant <END>
<BEG> add to the year component of the specified time instant wrapping around within that component if necessary <END>
<BEG> standard instance of a buddhist chronology <SEG> that match sun 's buddhistcalendar class <END>
<BEG> gets the chronology in a specific time zone <END>
<BEG> checks if this chronology instance equal another <END>
<BEG> gets a debugging tostring <END>
<BEG> gets an instance of the ethiopicchronology <END>
<BEG> gets an instance of the ethiopicchronology in the give time zone <END>
<BEG> get the maximum value that this field can have <END>
<BEG> a strict chronology be only equal to a strict chronology with the same base chronology <END>
<BEG> a zoned chronology be only equal to a zone chronology with the same base chronology and zone <END>
<BEG> a debugging string for the chronology <END>
<BEG> gets a copy of the list of converter <END>
<BEG> returns a copy of this set <SEG> with the give converter remove <END>
<BEG> gets the millis <SEG> which be the date millis value <END>
<BEG> returns date class <END>
<BEG> gets the millisecond duration <SEG> which be the long value <END>
<BEG> extracts the millis from an object of this converter 's type <END>
<BEG> extracts interval endpoint value from an object of this converter 's type <SEG> and set them into the give readwritableinterval <END>
<BEG> gets the chronology <SEG> which be take from the readableinstant <END>
<BEG> extracts the value of the partial from an object of this converter 's type <END>
<BEG> extracts duration value from an object of this converter 's type <SEG> and set them into the give readwritableperiod <END>
<BEG> returns a copy of this date with the specify duration take away <END>
<BEG> returns a comparator that only considers time field <END>
<BEG> gets the field type that represent the upper limit of comparison <END>
<BEG> get the millis of day field type <END>
<BEG> gets the chronology handle null <END>
<BEG> gets the millisecond duration from the specify duration object handle null <END>
<BEG> sets the default map of time zone name <END>
<BEG> gets the long name of this datetime zone suitable for display use the specify locale <END>
<BEG> gets the maximum value for the field ignore the current time <END>
<BEG> compares this property to another <END>
<BEG> sets a value in the millisecond supply from a human-readable <SEG> text value <END>
<BEG> convert the specified text and locale into a value <END>
<BEG> round to the near whole unit of this field <END>
<BEG> get the maximum value for the field <END>
<BEG> computes the difference between two instant <SEG> a measure in the unit of this field <END>
<BEG> set the specified amount of offset unit to the specified time instant <END>
<BEG> set the specified amount of unit to the specified time instant <END>
<BEG> this method assume that this field be properly round on 1970-01-01t00:00:00 <END>
<BEG> returns the amount of millisecond per unit value of this field <END>
<BEG> returns the scalar apply <SEG> in the field 's unit <END>
<BEG> gets a hash code for this instance <END>
<BEG> returns a strict version of the give field <END>
<BEG> always throw unsupportedoperationexception throw unsupportedoperationexception <END>
<BEG> creates a format that output a short time format <END>
<BEG> is this formatter capable of parse <END>
<BEG> gets the internal parser object that perform the real parsing work <END>
<BEG> gets the chronology to use a an override <END>
<BEG> returns a new formatter that will use the specified zone in preference to the zone of the printed object <SEG> or default zone on a parse <END>
<BEG> parses a datetime from the give text <SEG> return the number of millisecond since the epoch <SEG> 1970-01-01t00:00:00z <END>
<BEG> returns the time zone offset in millisecond use by computemillis <END>
<BEG> set a time zone offset to be use when computemillis be call <END>
<BEG> converts an integer to a string <SEG> and append it to the give appendable <END>
<BEG> returns a generic iso time parser for parse time with a possible zone <END>
<BEG> returns a generic iso time parser for parse local time <END>
<BEG> returns a generic iso datetime parser where the date be mandatory and the time be optional <END>
<BEG> returns a formatter for a four digit weekyear and two digit week of weekyear <END>
<BEG> returns a formatter for a four digit weekyear <SEG> two digit week of weekyear <SEG> and one digit day of week <END>
<BEG> returns a formatter for a two digit hour of day <SEG> two digit minute of hour <SEG> two digit second of minute <SEG> and three digit fraction of second hh : mm : s sss <END>
<BEG> the alternate iso format <SEG> pyyyywwwddthhmmss <SEG> which exclude month <END>
<BEG> the alternate iso format <SEG> pyyyy-www-ddthh : mm : s <SEG> which exclude month <END>
<BEG> returns a new formatter with a different locale that will be use for printing and parsing <END>
<BEG> prints a readableperiod to a stringbuffer <END>
<BEG> prints a readableperiod to a new string <END>
<BEG> parses a period from the give text <SEG> at the give position <SEG> save the result into the field of the give readwritableperiod <END>
<BEG> internal method to create a periodparser instance use all the appended element <END>
<BEG> set the maximum digit parse for the next and follow append field <END>
<BEG> never print zero value for the next and follow appended field <SEG> unless no field would be print <END>
<BEG> append a separator <SEG> which be output only if field be print before the separator <END>
<BEG> returns the illegal string value assign to the field <SEG> or null if not applicable <END>
<BEG> returns the upper bound of the legal value range <SEG> or null if not applicable <END>
<BEG> sets the chronology of this time interval <END>
<BEG> sets the end of this time interval a an instant <END>
<BEG> parses a { code mutableperiod } from the specify string use a formatter <END>
<BEG> gets a type that define all standard field except month <END>
<BEG> gets a type that define just the year field <END>
<BEG> gets the field type by index <END>
<BEG> checks whether the field specify be support by this period <END>
<BEG> returns a version of this periodtype instance that do not support month <END>
<BEG> get the underlie { link parameter } <END>
<BEG> remove all the annotation <END>
<BEG> param predicate testing the original { link annotatedmethod } return a sequence of { link annotatedmethodconfigurator } s match the give predicate see annotatedmethodconfigurator # getannotated <END>
<BEG> return the raw type represent by this object <END>
<BEG> retrieves and remove the head of the queue represent by this queue <END>
<BEG> retrieves and remove the head of the queue represent by this queue in other word <SEG> the first element of this queue <SEG> or return < tt > null < tt > if this queue be empty <END>
<BEG> retrieves <SEG> but do not remove <SEG> the head of the queue represent by this queue <END>
<BEG> retrieves <SEG> but do not remove <SEG> the head of the queue represent by this queue <SEG> or return < tt > null < tt > if this queue be empty <END>
<BEG> returns an array contain all of the element in this queue in proper sequence from first to last element ; the runtime type of the returned array be that of the specified array <END>
<BEG> creates a { link linkedhashmap } instance <SEG> with a high enough initial capacity that it < em > should < em > hold { code expectedsize } element without growth <END>
<BEG> ensures that an object reference pass a a parameter to the call method be not null <END>
<BEG> resets and log elapse time in millisecond <END>
<BEG>  see org picocontainer componentadapter # getcomponentimplementation <END>
<BEG> invokes delegate stop method if the delegate be a behavior  <END>
<BEG> stop the component of this picocontainer and all it logical child container <END>
<BEG> retrieve the lifecycle method name that represent the stop method <END>
<BEG> constructed picocontainer will use { linkplain org picocontainer lifecycle javaee5lifecyclestrategy javaee5lifecyclestrategy } <END>
<BEG> sets the role of the require component <END>
<BEG> sets the type of the field that will be populate by the required component <END>
<BEG> returns a human-friendly key <SEG> suitable for display <END>
<BEG> this be call by client proxy <END>
<BEG> tests whether or not a give path match a give pattern <END>
<BEG> add all element in the iterator to the collection <END>
<BEG> combine the iterators into a single one <END>
<BEG> param declaringclass return the ordered list of declared method for the give class <END>
<BEG> verifies that this chunk 's save text match the corresponding text in the give sequence <END>
<BEG> parse the give text in unified format and create the list of delta for it <END>
<BEG>  return empty diff if get the error while procession the difference <END>
<BEG> constructs a { link patch } from a difference path <END>
<BEG> runs diff and return the result <END>
<BEG> invoked for element in < code > to < code > and not in < code > from < code > <END>
<BEG> the point at which the deletion end <SEG> if any <END>
<BEG> returns whether the value in the map for the give index be less than the give value <END>
<BEG> creates a new { link circuitbreaker } that have a default name and the default configuration <END>
<BEG> returns the number of success event <END>
<BEG> returns the failure rate failure total <SEG> or throw an { link arithmeticexception } if total be 0 <END>
<BEG> returns a singleton { link refusedstreamexception } <END>
<BEG> creates a new http request with empty content <END>
<BEG> creates a new http response of the specify { link httpstatus } <END>
<BEG> enables or disable the { code no-store } directive <END>
<BEG> makes sure the specify { code value } be not negative <END>
<BEG> enables the { code max-stale } directive <END>
<BEG> returns the { link requestlogproperty } s for response <END>
<BEG> returns a newly create { link servercachecontrolbuilder } with all directive disable initially <END>
<BEG> returns a newly create { link servercachecontrolbuilder } which have the same initial directive with this { link servercachecontrol } <END>
<BEG> formats the give epoch time in microsecond to typical human-readable format yyyy-mm-dd't'hh : mm : s sssx <END>
<BEG> returns the value of the { link header } annotation which be specify on the { code element } if the value be not blank <END>
<BEG> returns the value of { value # oauth_signature } property <END>
<BEG> returns a newly-created { link simplecompositerpcservice } base on the { link rpcservice } s add to this builder <END>
<BEG> returns a { link docservicefilter } which return { code true } only for the service detect by the grpc plugin <END>
<BEG> returns a { link docservicefilter } which return { code true } when the name of the service match the specified { code servicename } <END>
<BEG> returns a { link docservicefilter } which return { code true } when the name of the service and method match the specify { code servicename } and { code methodname } <END>
<BEG> returns a { link docservicefilter } which return { code true } when the concatenate name of the plugin <SEG> service and method match the specify { link pattern } <END>
<BEG> returns a composite { link docservicefilter } that represent a short-circuiting logical { code and } of this filter and { code other } <END>
<BEG> decreases the number of pending response <END>
<BEG> returns an access log writer with a combined format <END>
<BEG> returns the destination address of the proxied request <END>
<BEG> reads an arbitrary object from the input stream <END>
<BEG> gets the serializer factory <END>
<BEG> set true if the java type of the collection should be send <END>
<BEG> completes an envelope <END>
<BEG> resets the reference for stream <END>
<BEG> starts a stream packet < p > < p > a streaming message start with ' p ' < p > < p > < pre > p x02 x00 < pre > <END>
<BEG> read the next object <END>
<BEG> for hessian 2 0 <SEG> use the header envelope instead deprecate <END>
<BEG> writes the tail of the list to the stream <END>
<BEG> creates a map of the class field <END>
<BEG> to byte array <END>
<BEG> from hex string <END>
<BEG> put all <END>
<BEG> object end <END>
<BEG> value <END>
<BEG> sets the internal data structure that keep the threadlocal variable bind to this thread <END>
<BEG> see # getpositiveparameter string <SEG> int deprecate replace to < code > getpositiveparameter string <SEG> int < code > <END>
<BEG> see # getmethodpositiveparameter string <SEG> string <SEG> int deprecate replace to < code > getmethodpositiveparameter string <SEG> string <SEG> int < code > <END>
<BEG> write <END>
<BEG> clear and destroy all { link referenceconfig } in the cache <END>
<BEG> remove server side context <END>
<BEG> get the request object of the underlie rpc protocol <SEG> e g <END>
<BEG> be consumer side <END>
<BEG> get parameter type <END>
<BEG> remove attachment <END>
<BEG> get value <END>
<BEG> deprecate replace to isconsumerside <END>
<BEG> get fail elapsed <END>
<BEG> get succeed average elapse <END>
<BEG> get succeed max elapse <END>
<BEG> removes all { link internalthreadlocal } variables bound to the current thread <END>
<BEG> insert default extension into extension list <END>
<BEG> system environment - > system property param key key return value <END>
<BEG> load property file to { link properties } from class path <END>
<BEG> find first valid ip from local network card return first valid local ip <END>
<BEG> set <END>
<BEG> remove <END>
<BEG> param local see abstractinterfacebuilder # stub boolean deprecate replace to < code > stub boolean < code > <END>
<BEG> param dispather return protocolbuilder see protocolbuilder # dispatcher string <END>
<BEG> unregister the shutdownhook <END>
<BEG> destroy all the resource <SEG> include registry and protocol <END>
<BEG> close a channel when a channel be inactive directly return the unfinished request <END>
<BEG> generate class name which represent service argument <END>
<BEG> set true if overload method be allow use mangle <END>
<BEG> writes a complete method call <END>
<BEG> true if the proxy should send hessian 2 request <END>
<BEG> returns the status string <END>
<BEG> sets the resolver use to lookup remote object <END>
<BEG> deny a class or package base on a pattern <END>
<BEG> returns the deserializer for a give class <END>
<BEG> creates a new hessian 1 0 deserializer <END>
<BEG> frees a hessian 2 0 serializer <END>
<BEG> frees the channel for read <END>
<BEG> returns an iterator of all of the registered { code saslserverfactory } s where the order be base on the order of the provider registration and or class path order <END>
<BEG> called by a { link connection } implementation when a message have be receive <END>
<BEG> verifies whether child be a child dir or file of parent param parent param child return true if child be a child <SEG> false otherwise <END>
<BEG> checks whether the parent directory be present and be directory <END>
<BEG> removes the key and it correspond value from this map <END>
<BEG> return the previous value associate with the specify key <SEG> or < tt > null < tt > if there be no mapping for the key throw nullpointerexception if the specify key or value be null <END>
<BEG> -- -- -- -- -- -- -- -- -- - membership changes -- -- -- -- -- -- -- -- -- -- -- <END>
<BEG> not recommend a the internal representation of flag might change e g <END>
<BEG> sends all message in the map <END>
<BEG> read and send message in range [ read-index+1 write_index-1 ] <END>
<BEG> author bela ban since x y <END>
<BEG> writes a long to a bytebuffer param num the long to be write param buf the buffer <END>
<BEG> writes a float to an output stream param num the float to be write param out the output stream <END>
<BEG> reads a double from an input stream param in the input stream return the double read from the input stream <END>
<BEG> reads a string from buf <END>
<BEG> writes an asciistring to buf <END>
<BEG> sets this credit to be do and release all block thread <END>
<BEG> sets the bit specify by the index to { code false } <END>
<BEG> sets the bit from the specify { code from } inclusive to the specify { code to } inclusive to { code false } <END>
<BEG> returns the index of the near bit that be set to { code true } that occur on or before the specify starting index <END>
<BEG> removes message and add them to c param c the array to add message to <END>
<BEG> returns a list of message in the range [ from to ] <SEG> include from and to param from param to return a list of message <SEG> or null if none in range [ from to ] be find <END>
<BEG> gets the millisecond since epoch when the lease be evict <END>
<BEG> converts this response to a map <END>
<BEG> get the second component of the name <END>
<BEG> reset statistic <END>
<BEG> returns the weight of a server <END>
<BEG> remove the digest from the hash value <END>
<BEG> return the current number of recursive watcher return qty <END>
<BEG> checks if the give session have watch set <END>
<BEG> get the count of byte allow a part of quota return the byte a part of this string <END>
<BEG> set teh byte for this stat tracker <END>
<BEG> return the small element great than or equal to base <END>
<BEG> prepend to tail of list <END>
<BEG> encodes a value use the variable-length encoding from < a href= http : code google com apis protocolbuffers docs encode html > google protocol buffers < a > <END>
<BEG> see # writeunsignedvarlong long <SEG> dataoutput <END>
<BEG> param in to read byte from return decode value throw ioexception if { link datainput } throw { link ioexception } throw illegalargumentexception if variable-length value do not terminate after 9 byte have be read see # writeunsignedvarlong long <SEG> dataoutput <END>
<BEG> throw illegalargumentexception if variable-length value do not terminate after 5 byte have be read throw ioexception if { link datainput } throw { link ioexception } see # readunsignedvarlong datainput <END>
<BEG> see brave span # start long <END>
<BEG> returns the { link brave span # finish long span finish timestamp } or zero <END>
<BEG> when zero { link brave tracing builder # localip string default } will be use for zipkin <END>
<BEG> returns a mapping of any field in the trace context <END>
<BEG> since 4 4 deprecate since 5 8 <SEG> use { link # trysample object } <END>
<BEG> ignores the argument and return false <END>
<BEG> returns the counter value information for the counter with the give metric name <END>
<BEG> returns the current value for the gauge with the give metric name <END>
<BEG> returns the current accumulated timing information for the timer with the give metric name <END>
<BEG> parses a 16 character lower-hex string with no prefix into an unsigned long <SEG> start at the spe index <END>
<BEG> inspired by { code okio buffer writelong } <END>
<BEG> updates the guaranteedthroughputsampler for each operation param strategies the parameter for operation sample return true if any sampler be update <END>
<BEG> note that the base be a relative path from the exit context <END>
<BEG> convert a string contain an ip address to an array of 4 or 16 byte <END>
<BEG> returns the content of the cache a a string <END>
<BEG> returns the scope netmask <END>
<BEG> saves the current state of the input stream <END>
<BEG> restores the input stream to it state before the call to { link # save } <END>
<BEG> writes a byte array to the stream <END>
<BEG> writes a counted string from the stream <END>
<BEG> converts the header 's flag into a string <END>
<BEG> converts the header into a string <END>
<BEG> returns the value of an option <END>
<BEG> converts a numeric rcode into a string <END>
<BEG> parses a record from the tokenizer <SEG> and indicate that the record should be insert into the zone <END>
<BEG> indicates that the record should be insert into the zone <END>
<BEG> convert binary data to a base32-encoded string param b an array contain binary data return a string contain the encode data <END>
<BEG> convert a base32-encoded string to binary data param str a string contain the encode data return an array contain the binary data <SEG> or null if the string be invalid <END>
<BEG> returns the ip address <END>
<BEG> return the numeric value of this type return string <END>
<BEG> param flag return label <END>
<BEG> param index return class for name <END>
<BEG> returns the name of this entry return name of this entry <END>
<BEG> return true if unique <END>
<BEG> return list of answer <END>
<BEG> return number of answer in the message <END>
<BEG> debugging <END>
<BEG> non-javadoc see javax jmdns jmmdns # removeservicetypelistener javax jmdns servicetypelistener <END>
<BEG> non-javadoc see javax jmdns jmmdns # removeservicelistener java lang string <SEG> javax jmdns servicelistener <END>
<BEG> add an answer if it be not suppress <END>
<BEG> non-javadoc see javax jmdns impl task dnstask # start java util timer <END>
<BEG> non-javadoc see javax jmdns impl task resolver # description <END>
<BEG> non-javadoc see javax jmdns impl task state dnsstatetask # checkruncondition <END>
<BEG> non-javadoc see javax jmdns impl task state dnsstatetask # buildoutgoingfordns javax jmdns impl dnsoutgoing <END>
<BEG> non-javadoc see javax jmdns impl task state dnsstatetask # buildoutgoingforinfo javax jmdns impl serviceinfoimpl <SEG> javax jmdns impl dnsoutgoing <END>
<BEG> < p > create an instance of jmdns <END>
<BEG> < p > create an instance of jmdns and bind it to a specific network interface give it ip-address <END>
<BEG> construct a service description for register with jmdns <END>
<BEG> get the docker endpoint port <END>
<BEG> helper method call to verify change to standard feature <END>
<BEG> call make to verify whether leaf-level null value should be include in output or not <END>
<BEG> call make to verify whether leaf-level { link biginteger } value should be include in output or not <END>
<BEG> fast method for parse integer that be know to fit into regular 32-bit sign int type <END>
<BEG> return offset within buffer after output int <END>
<BEG> method that writer be to call before it write a field name <END>
<BEG> method that we need to override to actually make restoration go through constructor etc <END>
<BEG> method for access kind of { link formatfeature } that a parser { link jsongenerator } produce by this factory would accept <SEG> if any ; < code > null < code > return if none <END>
<BEG> method for get currently configure output decorator if any ; there be no default decorator <END>
<BEG> method for construct parser for parse the content of give byte array <END>
<BEG> method for construct json parser instance to parse the content access via specify input stream <END>
<BEG> method for construct parser for parse content of give string <END>
<BEG> method that can be use to collect all real introspectors that this introspector contain <SEG> if any ; or this introspector if it be not a container <END>
<BEG> since 2 9 4 <END>
<BEG> jdk serialization handle <END>
<BEG> bulk access method for check that all feature specify by mask be enable <END>
<BEG> finds the enum value that should be consider the default value <SEG> if possible <END>
<BEG> method that will construct an objectnode and add it at the end of this array node <END>
<BEG> method for add specified number at the end of this array <END>
<BEG> hmmh <END>
<BEG> method for remove specified field property out of this objectnode <END>
<BEG> method that can be call to check whether mapper think it could deserialize an object of give type <END>
<BEG> factory method for construct { link objectreader } with default setting <END>
<BEG> factory method for construct { link objectreader } with specified feature enable compare to setting that this mapper instance have <END>
<BEG> factory method for construct { link objectreader } that will use specify injectable value <END>
<BEG> convenience method that be same a call : < code > withrootname < code > which will forcibly prevent use of root name wrap when write value with this { link objectwriter } <END>
<BEG> accessors <END>
<BEG> method call by { link objectmapper } and { link objectwriter } to modify those { link com fasterxml jackson core jsongenerator feature } setting that have be configure via this config instance <END>
<BEG> method that can be use for check whether this type be a real collection type ; mean whether it represent a parameterized subtype of { link java util collection } or just something that act like one <END>
<BEG> helper method that will check if argument be an { link runtimeexception } <SEG> and if so <SEG> re throw it ; otherwise just return since 2 9 <END>
<BEG> since 2 7 3 <END>
<BEG> method that will return version information store in and read from jar that contain this class <END>
<BEG> returns a copy of the input character sequence in which all { linkplain # islowercase char lowercase ascii character } have be convert to uppercase <END>
<BEG> if the argument be a { linkplain # islowercase char lowercase ascii character } return the uppercase equivalent <END>
<BEG> returns a hash code for { code t } <END>
<BEG> returns a predicate that evaluate to { code true } if the { code charsequence } be tested contains any match for the give regular expression pattern <END>
<BEG> returns a supplier that always supply { code instance } <END>
<BEG> returns the number of time { link cache } lookup method have return either a cached or uncached value <END>
<BEG> returns the total number of time that { link cache } lookup method attempt to load new value <END>
<BEG> returns the ratio of cache loading attempt which throw exception <END>
<BEG> returns the average time spend load new value <END>
<BEG> adds the give value <END>
<BEG> returns it input <SEG> or throw an exception if this be not a valid value <END>
<BEG> returns a view of all mapping that have the give row key <END>
<BEG> returns an immutable set of the valid row key <SEG> include those that be associate with null value only <END>
<BEG> delegates to { link collection # remove } <END>
<BEG> the implementation neither produce nor consumes any non-null instance of type c <SEG> so cast the type parameter be safe <END>
<BEG> a sensible definition of { link # removeall } in term of { link # iterator } <SEG> use the iterator 's { code remove } method <END>
<BEG> a sensible definition of { link # equal object } in term of { link # getkey } and { link # getvalue } <END>
<BEG> a sensible definition of { link # floorentry } in term of the { code lastentry } of { link # headmap object <SEG> boolean } <END>
<BEG> a sensible definition of { link # floor } in term of the { code descendingiterator } method of { link # headset object <SEG> boolean } <END>
<BEG> a sensible definition of { link # polllastentry } in term of { code descendingmultiset entryset iterator } <END>
<BEG> a sensible default implementation of { link # subset object <SEG> object } in term of { link # headset object } and { link # tailset object } <END>
<BEG> returns the same range relative to the reverse comparator <END>
<BEG> creates a new <SEG> empty { code hashmultimap } with the default initial capacity <END>
<BEG> returns a new builder <END>
<BEG> returns a new builder for an immutable range set <END>
<BEG> this method return a { code immutablesortedmap } <SEG> consist of the entry whose key be great than or equal to <SEG> if { code inclusive } { code fromkey } <END>
<BEG> adds all element in { code iterator } to { code collection } <END>
<BEG> divides an iterator into unmodifiable sublists of the give size the final list may be small <END>
<BEG> used to avoid http : bug sun com view_bug do ? bug_id=6558557 <END>
<BEG>  < p > creates an empty { code linkedhashset } for a collection of value for one key <END>
<BEG> an implementation of { link list # hashcode } <END>
<BEG> sum per-segment modcounts to avoid mis-reporting when element be concurrently add and remove in one segment while check another <SEG> in which case the table be never actually empty at any point <END>
<BEG> removes and return the great element of this queue <SEG> or return { code null } if the queue be empty <END>
<BEG> populates a map by read an input stream <SEG> a part of deserialization <END>
<BEG> creates a < i > mutable < i > <SEG> empty { code linkedhashset } instance <END>
<BEG> returns every possible list that can be form by choose one element from each of the give set in order ; the n-ary < a href= http : en wikipedia org wiki cartesian_product > cartesian product < a > of the set <END>
<BEG> returns an unmodifiable view of the specify navigable set <END>
<BEG> returns the comparator that order the column <END>
<BEG> this be overridden to improve performance <END>
<BEG> returns a { link networkbuilder } for building undirected network <END>
<BEG> specifies the expected number of edge in the network <END>
<BEG> returns an empty { link mutablevaluegraph } with the property of this { link valuegraphbuilder } <END>
<BEG> the base16 encode specify by < a href= http : tool ietf org html rfc4648 # section-8 > rfc 4648 section 8 < a > <SEG> base 16 encoding <END>
<BEG> returns a { link bytesource } view of this char source that encode char read from this source a byte use the give { link charset } <END>
<BEG> closes the give { link reader } <SEG> log any { code ioexception } that 's thrown rather than propagate it <END>
<BEG> writes a { code float } a specify by { link dataoutputstream # writefloat float } <SEG> except use little-endian byte order <END>
<BEG> builds an instance represent a horizontal transformation with a constant value of { code y } <END>
<BEG> returns the sample covariance of the value <END>
<BEG> gets a byte array representation of this instance <END>
<BEG> returns an immutable snapshot of the statistic on the { code y } value alone <END>
<BEG> specifies the computation of percentile i e <END>
<BEG> overridden for performance <END>
<BEG> returns a hash code for { code value } ; equal to the result of invoke { code byte value hashcode } <END>
<BEG> returns { code true } if { code target } be present a an element anywhere in { code array } <END>
<BEG> returns the start position of the first occurrence of the specify { code target } within { code array } <SEG> or { code -1 } if there be no such occurrence <END>
<BEG> returns the value from each provide array combine into a single array <END>
<BEG> returns an array contain the same value a { code array } <SEG> but guarantee to be of a specified minimum length <END>
<BEG> returns a fixed-size list back by the specified array <SEG> similar to { link arrays # aslist object [ ] } <END>
<BEG> returns the great value present in { code array } <END>
<BEG> returns a string contain the supply { code char } value separate by { code separator } <END>
<BEG> returns the great value present in { code array } <SEG> use the same rule of comparison a { link math # max double <SEG> double } <END>
<BEG> returns an array contain each value of { code collection } <SEG> convert to a { code double } value in the manner of { link number # doublevalue } <END>
<BEG> returns a serializable converter object that convert between string and float use { link float # valueof } and { link float # tostring } <END>
<BEG> returns a string contain the supply { code float } value <SEG> convert to string a specify by { link float # tostring float } <SEG> and separate by { code separator } <END>
<BEG> returns the { code int } value that be equal to { code value } <SEG> if possible <END>
<BEG> returns the { code int } near in value to { code value } <END>
<BEG> returns a big-endian representation of { code value } in a 4-element byte array ; equivalent to { code bytebuffer allocate 4 putint value array } <END>
<BEG> returns the { code int } value whose big-endian representation be store in the first 4 byte of { code byte } ; equivalent to { code bytebuffer wrap byte getint } <END>
<BEG> returns an immutable set of all nine primitive-wrapper type include { link void } <END>
<BEG> returns the value of this { code unsignedinteger } a a { code long } <END>
<BEG> returns the value of this { code unsignedinteger } a a { code float } <SEG> analogous to a widen primitive conversion from { code int } to { code double } <SEG> and correctly round <END>
<BEG> returns the great value present in { code array } <SEG> treat value a unsigned <END>
<BEG> returns a string representation of { code x } for the give radix <SEG> where { code x } be treated a unsigned <END>
<BEG> returns a string contain the supply unsigned { code long } value separate by { code separator } <END>
<BEG> returns a comparator that compare two array of unsigned { code long } value < a href= http : en wikipedia org wiki lexicographical_order > lexicographically < a > <END>
<BEG> creates an { code atomicreferencearray } instance with the same length a <SEG> and all element copy from <SEG> the give array <END>
<BEG> creates a { code striped < lock > } with lazily initialize <SEG> weakly reference lock <END>
<BEG> creates a { code striped < semaphore > } with lazily initialize <SEG> weakly reference semaphore <SEG> with the specified number of permit <END>
<BEG> creates a { code striped < readwritelock > } with lazily initialize <SEG> weakly reference read-write lock <END>
<BEG> returns an { link escaper } instance that escape special character in a string so it can safely be include in xml document a an attribute value <END>
<BEG> returns c true if label be bind <END>
<BEG> return c true if operand be immediate c op_imm <END>
<BEG> set direction flag to 1 <END>
<BEG> multiply st 0 by a dst and pop register stack fpu <END>
<BEG> store x87 fpu status word 2 bytes fpu <END>
<BEG> unordered compare st 0 with a reg and pop register stack fpu <END>
<BEG> store streaming simd extension control status sse <END>
<BEG> memory fence sse2 <END>
<BEG> create a new { link client } instance use the default client builder implementation class provide by the jax-rs implementation provider <END>
<BEG> create an { value javax w r core mediatype # application_xml } entity <END>
<BEG> add multiple value to the current list of value for the supplied key <END>
<BEG> get a set of root resource <SEG> provider and { link feature feature } instance <END>
<BEG> corresponds to the value of the private cache control directive <END>
<BEG> creates a new instance of { code entitytag } by parse the supplied string <END>
<BEG> creates a new instance of newcookie by parse the supplied string <END>
<BEG> create a new instance initialize from an exist uri <END>
<BEG> returns a string representation of this < tt > nativelong < tt > <END>
<BEG> creates an array of < tt > enum8 < tt > instance <END>
<BEG> returns a human readable { link java lang string } representation of the structure <END>
<BEG> sets the property value <END>
<BEG> get a posix instance <END>
<BEG> retrieves the peer 's numeric effective group id <END>
<BEG> gets the protocol family of this unix socket address <END>
<BEG> retrieves a human readable description of this address <END>
<BEG> increment by 1 <END>
<BEG> determines the default value of the { link java net socketoptions # so_linger } parameter for newly create socket <END>
<BEG> specifies the content-encoding header <SEG> a a string <END>
<BEG> specifies the 'chunked ' flag <END>
<BEG> tells that this entity be not stream <END>
<BEG> deprecate 4 1 use { link # assertvalid abstractpoolentry } <END>
<BEG> detaches this adapter from the wrapped connection <END>
<BEG> shuts down the entry <END>
<BEG> reads a complete line of character up to a line delimiter from this session buffer into the give line buffer <END>
<BEG> writes character from the specify string follow by a line delimiter to this session buffer <END>
<BEG> binds this connection to the give { link socket } <END>
<BEG> estimates the length of a formatted name-value pair <END>
<BEG> determines the index of the next header <END>
<BEG> checks whether a header be part of the iteration <END>
<BEG> returns the current set of name <END>
<BEG> returns the current set of local name <END>
<BEG> sets value of the { link coreconnectionpnames # so_timeout } parameter <END>
<BEG> deprecate 4 1 set { link connectionreusestrategy } use constructor <END>
<BEG> deprecate 4 3 no longer use <END>
<BEG> tests if this protocol version be less or equal to the give one <END>
<BEG> appends { code len } char to this buffer from the give source array start at index { code off } <END>
<BEG> returns the length of the buffer byte count <END>
<BEG> appends { code ch } char to this buffer <END>
<BEG> converts the content of this buffer to an array of char <END>
<BEG> returns the { code char } value in this buffer at the specified index <END>
<BEG> returns reference to the underlie char array <END>
<BEG> converts the byte array of ascii character to a string <END>
<BEG> ensures that the entity content be fully consume and the content stream <SEG> if exists <SEG> be close <END>
<BEG> obtains mime type of the entity <SEG> if know <END>
<BEG> obtains the release of the versioned module or informal unit <END>
<BEG> prints the stack trace of this exception to the give printwriter <END>
<BEG> non-javadoc see org glassfish hk2 api descriptor # getimplementation <END>
<BEG> non-javadoc see org glassfish hk2 api filter # match org glassfish hk2 api descriptor <END>
<BEG> removes an advertised contract from the set of contract advertise by this descriptor param removeme the contract to remove <END>
<BEG> removes the give qualifier from the list of qualifier param removeme the fully qualifier class name of the qualifier to remove <END>
<BEG> this method link an implementation class with a { link descriptorbuilder } <SEG> to be use to far build the { link descriptor } <END>
<BEG> non-javadoc see org glassfish hk2 utility cache weakcarcache # getvaluesize <END>
<BEG> sets the locator id for this descriptor param locatorid the locator id for this descriptor <END>
<BEG> non-javadoc see org glassfish hk2 utility general weakhashclock # remove java lang object <END>
<BEG> set the message body worker associate with the request <END>
<BEG> set message language <END>
<BEG> set message content type <END>
<BEG> get writer interceptor of this request <END>
<BEG> indicates whether the user-agent header should be omit if not directly set to the map of header <END>
<BEG> create a new custom-configured { link jerseyclient } instance <END>
<BEG> extract and return service locator from { link javax w r client clientresponsecontext clientresponsecontext } <END>
<BEG> add a hint to the list of message <END>
<BEG> register bind custom provider class <END>
<BEG> get a reference factory provide an initialized reference <END>
<BEG>  return the previous value associate with the specify key <SEG> or { code null } if there be no mapping for the key throw nullpointerexception if the specify key or value be null <END>
<BEG> creates a new <SEG> empty map with a default initial capacity 16 <SEG> load factor 0 75 and concurrencylevel 16 <END>
<BEG> returns a hash value for the specified object <END>
<BEG> associates the specified value with the specify key in this map <END>
<BEG> rehashes the content of this map into a new array with a large capacity <END>
<BEG> check if the underlying entity stream be empty <END>
<BEG> set the wrapped input stream instance <END>
<BEG> returns { code true } if the provided char be a token <END>
<BEG> create an empty outbound message header container <END>
<BEG> get if-none-match header <END>
<BEG> get the entity tag <END>
<BEG> get the last modified date <END>
<BEG> get the mutable message header multivalued map <END>
<BEG> get any cooky that accompany the message <END>
<BEG> get the allow http method from the allow http header <END>
<BEG> get any new cooky set on the message message <END>
<BEG> append a new value to the string builder <END>
<BEG> get all registered component instance <SEG> include { link javax w r core feature feature } and { link org glassfish hk2 utility binder binder } meta-providers <END>
<BEG> get a subset of all registered component instance use the { code filter } predicate to determine for each component instance base on it 's contract provider class model whether it should be keep or filter out <END>
<BEG> set the type of < em > key < em > store <END>
<BEG> set the < em > key < em > store instance <END>
<BEG> returns parse host component <END>
<BEG> get the list of template name <END>
<BEG> get the group index to capture group <END>
<BEG> match against the pattern <END>
<BEG> non-javadoc see org jvnet hk2 internal creator # getinjectees <END>
<BEG> non-javadoc see org glassfish hk2 api message topic # gettopicqualifiers <END>
<BEG> non-javadoc see java lang reflect parameterizedtype # getownertype this be only use for top level type <END>
<BEG> returns an immutable map contain the give entry <SEG> in order <END>
<BEG> returns a mapmakerinternalmap for the benefit of internal caller that use feature of that class not expose through concurrentmap <END>
<BEG> coerces an ipv6 address into an ipv4 address <END>
<BEG> return the list of primary key of the current table to be delete in a batch write operation <END>
<BEG> returns the collection of item to be put in the current table in a batch write operation <END>
<BEG> fluent method to remove the specified element from this list <END>
<BEG> fluent method to add the element from the specify collection to this set <END>
<BEG> fluent method to add the element to this set <END>
<BEG> returns the value map which be unmodifiable ; or null if there be none <END>
<BEG> returns the value token for the give value <SEG> create a new token a necessary <END>
<BEG> use this in place of valueof to convert the raw string return by the service into the enum value <END>
<BEG> use this in place of { link # value } to return a { link set } of all value know to the sdk <END>
<BEG> return temporary { link reference } for the give value ; use in query <END>
<BEG> compacts the map by remove clear value <END>
<BEG> param capacity the initial capacity return { link map } whose key be keep alive with { link softreference } s <END>
<BEG> param capacity the initial capacity param concurrency the concurrency level return { link concurrentmap } whose value be keep alive with { link softreference } s <END>
<BEG> returns the label correspond to this attribute <END>
<BEG> adds a float to the constant pool of the class be build <END>
<BEG> adds the give uninitialized type to { link # typetable } and return it index <END>
<BEG> returns the common super type of the two give type <END>
<BEG> visits an instruction with a single int operand <END>
<BEG> visits the maximum stack size and the maximum number of local variable of the method <END>
<BEG> returns a type reference of the give sort <END>
<BEG> returns a reference to the type of the exception declare in a 'catch ' clause of a method <END>
<BEG> returns the index of the type argument reference by this type reference <END>
<BEG> remove all element <END>
<BEG> see map # clear <END>
<BEG> see map # containsvalue java lang object <END>
<BEG> see map # value note : this implementation do not conform properly to the specification in the map interface <END>
<BEG> for debug purpose only <END>
<BEG> returns the current handler for this command <END>
<BEG> returns whether or not the handled property change <END>
<BEG> remove the specified context a a match of this context <END>
<BEG> the string representation of this operation <END>
<BEG> non-javadoc see org eclipse core command operation iundocontext # match iundocontext context <END>
<BEG> compares two integer value <END>
<BEG> returns a { link messagedigest } instance for sha-1 digest ; note that the instance return be thread local and must not be share amongst thread <END>
<BEG> returns a copy of this configuration exception with the specify partial value <END>
<BEG> initialize the specified lookup <SEG> either immediately or when the injector be create <END>
<BEG> returns an initializable for an instance that require no initialization <END>
<BEG> indexes binding by type <END>
<BEG> sets the binding to a copy with the specify annotation on the bound key <END>
<BEG> returns the hashcode of { code type } <END>
<BEG> returns { code field class } <SEG> { code method class } or { code constructor class } <END>
<BEG> formats a member a concise string <SEG> such a { code java util arraylist size } <SEG> { code java util arraylist < init > } or { code java util list remove } <END>
<BEG> returns a module which create binding for provider method from the give module <END>
<BEG> returns a new instance that also skip { code moreclassestoskip } <END>
<BEG> returns the call line of code <END>
<BEG> inverts the give matcher <END>
<BEG> returns a new dependency that be not attach to an injection point <END>
<BEG> returns the dependency from the give injection point <END>
<BEG> sets the actual member injector <END>
<BEG> returns the look up member injector <END>
<BEG> installs default converter for primitive <SEG> enums <SEG> and class literal <END>
<BEG> returns the resolved generic return type of { code method } <END>
<BEG> scale d by m <SEG> check for overflow <END>
<BEG> adds the give item to the queue <END>
<BEG> returns a base64 encode version of a version 4 0 compatible uuid a define here : http : www ietf org rfc rfc4122 txt <SEG> use a private { code securerandom } instance <END>
<BEG> returns a copy of the current { link indexshardsnapshotstatus } <END>
<BEG> called for every subdirectory find in the watched directory during initialization <END>
<BEG> called for every file that disappear in the watched directory <END>
<BEG> overrides random # next <END>
<BEG> gets the output stream <END>
<BEG> closes the closeable object and < b > ignore < b > any { link ioexception } or null pointer <END>
<BEG> retrieve the name of the environment variable which value have be load a the salt generator class name <END>
<BEG> retrieve the name of the jvm system property which value have be load a the salt generator class name <END>
<BEG> retrieve the name of the environment variable which value have be load a the provider name <END>
<BEG> retrieve the name of the jvm system property which value have be load a the provider name <END>
<BEG> set the config object to use the specify jvm system property to load the value for the provider name <END>
<BEG> < p > set the config object to use the specified environment variable to load the value for the invertpositionofsaltinmessagebeforedigesting property <END>
<BEG> retrieve the name of the environment variable which value have be load a the value for the invertpositionofplainsaltinencryptionresults property <END>
<BEG> retrieve the name of the jvm system property which value have be load a the value for the invertpositionofplainsaltinencryptionresults property <END>
<BEG> < p > set the config object to use the specify jvm system property to load the value for the invertpositionofplainsaltinencryptionresults property <END>
<BEG> set the config object to use the specify jvm system property to load a value for the unicode normalization ignore parameter <END>
<BEG> retrieve the name of the environment variable which value have be load a the string output type <END>
<BEG> retrieve the name of the jvm system property which value have be load a the string output type <END>
<BEG> < p > sets whether the unicode text normalization step should be ignore <END>
<BEG> < p > sets the suffix to be add at the end of encryption result <SEG> and also to be expect at the end of plain message provide for match operation raise an { link encryptionoperationnotpossibleexception } if not <END>
<BEG> set the config object to use the specified environment variable to load the value for the prefix parameter <END>
<BEG> < p > size in byte of the salt to be use <END>
<BEG> < p > sets the size of the pool of digester to be create <END>
<BEG> < p > sets the name of the security provider to be ask for the digest algorithm <END>
<BEG> < p > whether digest match operation will allow match digest with a salt size different to the one configure in the saltsizebytes property <END>
<BEG> < p > checks a message against a give digest <END>
<BEG> set the config object to use the specified environment variable to load the value for the password <END>
<BEG> retrieve the name of the jvm system property which value have be load a the password <END>
<BEG> set the config object to use the specify jvm system property to load the value for the password <END>
<BEG> < p > set the config object to use the specified environment variable to load the value for the iv generator class name <END>
<BEG> < p > set the config object to use the specify jvm system property to load the value for the iv generator class name <END>
<BEG> sets the number of hash iteration apply to obtain the encryption key <END>
<BEG> < p > sets the name by which this webpbeconfig object will be identify from the web <END>
<BEG> < p > sets the validation word which will be ask from the web to the person set the password for the encryptor this config object belongs to <END>
<BEG> < p > decrypts a message use the specify configuration <END>
<BEG> as this salt generator provide a fixed salt <SEG> it inclusion unencrypted in encryption result be not necessary <SEG> and in fact not desirable so that it remain hidden <END>
<BEG> sets the salt to be return <END>
<BEG> generate a random salt of the specified length in byte <END>
<BEG> gets the specific jca provider for the key encryption <END>
<BEG> checks if a & gt ; b without leak information about either a or b param a any int param b any int return 1 if yes <SEG> 0 if no <END>
<BEG> set whether the { link # close } method should propagate to the underling inputstream <END>
<BEG> internal method to set the data validation <END>
<BEG> inserts a blank row into this spreadsheet <END>
<BEG> writes out the data validation exception ioexception param outputfile the output file <END>
<BEG> inserts a column param col the inserted column <END>
<BEG> removes a row param row the row to insert <END>
<BEG> accessor for first row return the first row <END>
<BEG> sets the draw group for this drawing <END>
<BEG> accessor for the row of this draw return the row <END>
<BEG> accessor for the height of this draw return the number of row span by this image <END>
<BEG> accessor for the column <END>
<BEG> creates the main sp container for the draw return the sp container <END>
<BEG> accessor for the y1 position return the y1 position <END>
<BEG> writes out the additional record for a combo box param outputfile the output file exception ioexception <END>
<BEG> sets the note object param t the note record <END>
<BEG> called when the comment text be change during the sheet copy process param t the new text <END>
<BEG> gets the draw id return the drawing id <END>
<BEG> accessor for the image file path <END>
<BEG> accessor for the row of the draw param y the row <END>
<BEG> interface method return the row number at which the image be position <END>
<BEG> gets the escher type of this record return the escher type <END>
<BEG> gets the instance value return the instance value <END>
<BEG> called when write to set the version of this record param v the version <END>
<BEG> expose the protected function to the sheetimpl in this package return the raw record data <END>
<BEG> accessor for the shape type return the shape type <END>
<BEG> called when a remove row or column result in one of dv record be remove <END>
<BEG> returns the column number of this cell return the column number of this cell <END>
<BEG> dummy override param align dummy <END>
<BEG> sets the bold style for this font <SEG> if the font have n't be initialize param b the bold style <END>
<BEG> gets the numberformat use to format the cell <END>
<BEG> called when a column be insert on the specified sheet <END>
<BEG> queries whether this attribute be a function return true if this be a function <SEG> false otherwise <END>
<BEG> gets the string version of the attribute param buf the buffer to populate <END>
<BEG> gets the operand for this operator from the stack param s the token stack <END>
<BEG> adjusts all the relative cell reference in this formula by the amount specify <END>
<BEG> if this formula be on an imported sheet <SEG> check that cell reference to another sheet be warn appropriately does nothing <SEG> a operator do n't have cell reference <END>
<BEG> gets the cell reference a a string for this item param buf the string buffer to populate <END>
<BEG> gets the string representation of this item param buf the string buffer <END>
<BEG> abstract method which get the token for this operator return the string symbol for this token <END>
<BEG> abstract method implementation to get the string equivalent of this token param buf the string to append to <END>
<BEG> gets the error type give the string value param code the code to lookup return the error type <END>
<BEG> sets the invalid flag and ripple all the way up the parse tree <END>
<BEG> gets the operand for this operator from the stack <END>
<BEG> gets the value token code for the specify token <END>
<BEG> accessor for the content which appear on the left hand side of the page return the left align content <END>
<BEG> gets an short from two byte param b2 the second byte param b1 the first byte return the short value <END>
<BEG> a column have be insert <SEG> so adjust the range object accordingly param c the column which have be insert <END>
<BEG> gets the java number format for this format record return return the number format <END>
<BEG> sees if this format be a number format return true if this refer to a build in date format <END>
<BEG> gets the indentation return the indentation <END>
<BEG> gets the vertical cell alignment return the alignment <END>
<BEG> sets the horizontal alignment for the data in this cell <END>
<BEG> gets the font use by this format return the font <END>
<BEG> sets the format index <END>
<BEG> sets the autosize flag <END>
<BEG> log a fatal message and exception <END>
<BEG> log an information message <END>
<BEG> gets the alignment from the value param val return the alignment with that value <END>
<BEG> accessor for the green component return the green component of the colour <SEG> between 0 and 255 <END>
<BEG> gets the formula a an excel string return the formula a an excel string exception formulaexception <END>
<BEG> returns the cell type return the cell type <END>
<BEG> interface method which return the column number of this cell return the zero base column number <END>
<BEG> accessor for the cell feature return the cell feature or null if this cell do n't have any <END>
<BEG> accessor for the encode return the character encode <END>
<BEG> accessor for the end column of this range return the end column index <END>
<BEG> determines whether or not this cell have be hidden return true if this cell have be hide <SEG> false otherwise <END>
<BEG> sets the cell feature param cf the cell feature <END>
<BEG> accessor for the number of column in this sheet return the number of column <END>
<BEG> returns the numerical value a a string return the numerical value of the formula a a string <END>
<BEG> gets the last tab index for the specified external sheet param index the index of the supbook record return the last tab index <END>
<BEG> gets the header string return the header string <END>
<BEG> returns the column number of the top left cell return the column number of this cell <END>
<BEG> accessor for the content a a string return the value a a string <END>
<BEG> gets the cell whose content match the string pass in <END>
<BEG> gets the row break <END>
<BEG> gets the row view for the specified row param row the row number return the row format <SEG> or the default format if no override be specify <END>
<BEG> accessor for the maximum row outline level <END>
<BEG> accessor return the number of row <END>
<BEG> accessor return the cell <END>
<BEG> accessor for the 2nd sort column name return the 2nd sort column name <END>
<BEG> accessor for the sort case sensitivity flag return the sort case secsitivity flag <END>
<BEG> gets the row break return the row break on the current sheet <END>
<BEG> accessor for the selected flag return true if this sheet be select <SEG> false otherwise <END>
<BEG> accessor for the header margin return the header margin <END>
<BEG> accessor for the fit height return the number of page this sheet will be print into heightwise <END>
<BEG> sets the left margin param m the left margin in inch <END>
<BEG> accessor for the left margin return the left margin in inch <END>
<BEG> gets the default margin height return the default margin height <END>
<BEG> accessor for the page break preview magnificaton factor <END>
<BEG> sets the printgridlines property param b true to print grid line on this sheet <SEG> false otherwise <END>
<BEG> gets the column at which the pane be frozen vertically return the column at which the pane be vertically frozen <SEG> or 0 if there be no freeze <END>
<BEG> sets the row at which the pane be frozen vertically param col the column number to freeze at <END>
<BEG> accessor for the vertical centre return returns the verticalcentre <END>
<BEG> sets the vertical centre param vertcentre the verticalcentre to set <END>
<BEG> accessor for the print column title return the print column title <SEG> or null if one be not define for this sheet <END>
<BEG> accessor for the initial file size property return the initial file size <END>
<BEG> disables the handling of drawing param b true to disable the name feature <SEG> false otherwise <END>
<BEG> sets the shrink to fit flag param b the shrink to fit flag <END>
<BEG> sets the data at the specified position to the content of the array param pos the position to alter param newdata the data to modify <END>
<BEG> used to adjust the merged cell follow a column removal <END>
<BEG> gets the cell which have be merge on this sheet return an array of range object <END>
<BEG> implementation of the deep copy function param col the column which the new cell will occupy param row the row which the new cell will occupy return a copy of this cell <SEG> which can then be add to the sheet <END>
<BEG> sets whether or not this xf record lock the cell param l the locked flag exception writeexception <END>
<BEG> sets the bold style for this font <SEG> if the font have n't be initialize param boldstyle the bold style exception writeexception <SEG> if this font be already in use elsewhere <END>
<BEG> sets the script style eg <END>
<BEG> copies a sheet from a read-only version to the writable version <END>
<BEG> writes out this sheet <END>
<BEG> sets the footer for this page param l the print header to print on the left side param c the print header to print in the centre param r the print header to print on the right hand side deprecate use the sheet setting bean <END>
<BEG> gets the column format for the specified column param col the column number return the column format <SEG> or null if the column have no specific format deprecate use getcolumnview instead <END>
<BEG> gets the column width for the specified column param col the column number return the column width <SEG> or the default width if the column have no specify format deprecate use getcolumnview instead <END>
<BEG> removes the specified image from this sheet <END>
<BEG> removes a drawing to the list - typically use for comment param the drawing to add <END>
<BEG> gets the sheet within this workbook <END>
<BEG> gets the sheet names return an array of string contain the sheet name <END>
<BEG> copies the specified sheet and place it at the index specify by the parameter param s the name of the sheet to copy param name the name of the new sheet param index the position of the new sheet <END>
<BEG> removes a draw from this workbook param d the draw to remove <END>
<BEG> gets the name range return the list of name cell within the workbook <END>
<BEG> returns the cell for the specify location eg <END>
<BEG> accessor for the image position return the row number at which the image be position <END>
<BEG> accessor for the image position param c the row number at which the image should be position <END>
<BEG> the list of property store by this record <END>
<BEG> sets an unsigned integer that specify an application-defined internal resource tag <END>
<BEG> set the expected macos blip type param bliptypemacos macos blip type <END>
<BEG> 16 byte md4 checksum <END>
<BEG> unused param tag unknown tag <END>
<BEG> blip size in stream <END>
<BEG> the reference count of this blip <END>
<BEG> file offset in the delay stream <END>
<BEG> defines the way this blip be use <END>
<BEG> the length in character of the blip name <END>
<BEG> any remain data in this record <END>
<BEG> 0 = move and size with cells <SEG> 2 = move but do n't size with cell <SEG> 3 = do n't move or size with cell <END>
<BEG> the column number for the top-left position <END>
<BEG> the x offset within the top-left cell <END>
<BEG> the row number of the top-left corner of the shape <END>
<BEG> the y offset within the top-left corner of the current shape <END>
<BEG> the column of the bottom right corner of this shape <END>
<BEG> the x offset withing the cell for the bottom-right corner of this shape <END>
<BEG> the row number for the bottom-right corner of the current shape <END>
<BEG> any data recording this record <END>
<BEG> serializes the simple part of this property <END>
<BEG> sets the child record for this record <END>
<BEG> sets the version part of record param value version part value <END>
<BEG> return the green part <END>
<BEG> the top-left coordinate of child record <END>
<BEG> the top-left y coordinate of child record <END>
<BEG> gets the line color return the line color <END>
<BEG> sets the line color param field_2_color2 the line color <END>
<BEG> sets a number that identify this shape <END>
<BEG> sets shape type <END>
<BEG> sets the property 's name <END>
<BEG> checks whether this section be equal to another object <END>
<BEG> processes a file into essentially record event <END>
<BEG> would return the summary information metadata for the document <SEG> if we support it <END>
<BEG> return < code > true < code > if gridlines be print <END>
<BEG> get the hidden property for a give column <END>
<BEG> sets the active column param col the column index see org apache poi hssf record selectionrecord <END>
<BEG> gets the gridset record for this sheet <END>
<BEG> returns if rowcolheadings be display <END>
<BEG> get the sheetname for this sheet <END>
<BEG> is the sheet very hidden ? <END>
<BEG> get the type of border to use for the left border of the cell return border type see # border_none see # border_thin see # border_medium see # border_dashed see # border_dotted see # border_thick see # border_double see # border_hair see # border_medium_dashed see # border_dash_dot see # border_medium_dash_dot see # border_dash_dot_dot see # border_medium_dash_dot_dot see # border_slanted_dash_dot <END>
<BEG> get the color to use for the right border see org apache poi hssf usermodel hssfpalette # getcolor short return the index of the color definition <END>
<BEG> of off top left to bottom right line param on - if < code > true < code > - on <SEG> otherwise off <END>
<BEG> return < code > true < code > if backward diagonal be on <END>
<BEG> set the foreground fill color <END>
<BEG> see org apache poi hssf usermodel hssfpalette # getcolor short return get the foreground fill color <END>
<BEG> get the stack of the 1st expression a a list return list of token cast stack to a list and return it ! <END>
<BEG> set the foreground color field for the areaformat record <END>
<BEG> set the axis type field for the axislineformat record <END>
<BEG> set the major unit value field for the axisoptions record <END>
<BEG> sets the default maximum field value <END>
<BEG> use the default maximum category return the default maximum field value <END>
<BEG> sets the default date setting field value <END>
<BEG> stack display value return the stacked field value <END>
<BEG> sets the display a percentage field value <END>
<BEG> display a shadow for the chart return the shadow field value <END>
<BEG> set the tick mark frequency field for the categoryseriesaxis record <END>
<BEG> set the index to font table field for the fontbasis record <END>
<BEG> sets the auto y position field value <END>
<BEG> position of legend on the y axis be automatic return the auto y position field value <END>
<BEG> set the index number fmt record field for the linkeddata record <END>
<BEG> set the formula of link field for the linkeddata record <END>
<BEG> set the chart group index field for the serieschartgroupindex record <END>
<BEG> sets the show bubble sizes field value <END>
<BEG> set the num bubble value field for the series record <END>
<BEG> ? ? <END>
<BEG> set the maximum axis value field for the valuerange record <END>
<BEG> automatic maximum value select return the automatic maximum field value <END>
<BEG> whether object use an automatic line style return the autoline field value <END>
<BEG> return the biff8 encryption decryption password for the current thread <END>
<BEG> return the first column of the range <END>
<BEG> param vert_pos the vertical position of the dialog <END>
<BEG> return the condition error style see org apache poi s usermodel datavalidation errorstyle <END>
<BEG> returns the last sheet that the reference applies to <SEG> or -1 if the referenced sheet ca n't be find <SEG> or -2 if the reference be workbook scoped <END>
<BEG> param username of the user that create the file <END>
<BEG> whether to use the mac shado font style thing mac only - some mac person should comment this instead of me do it since i have no idea param mac - whether to do that mac font shadow thing or not see # setattributes short <END>
<BEG> get the bold weight for this font 100-1000dec or 0x64-0x3e8 <END>
<BEG> get the character set return charset - character set <END>
<BEG> get the name of the font return fn - name of the font i e <END>
<BEG> convert this record to string <END>
<BEG> serialize the record data into the supplied array of byte param out the stream to serialize into <END>
<BEG> end column last cell this hold in the row return first column number <END>
<BEG> get the number of column this contain last-first +1 return number of column last - first +1 <END>
<BEG> return the column that contain the comment return the column that contain the comment <END>
<BEG> specify the column that contain the comment param col the column that contain the comment <END>
<BEG> return the formula token <END>
<BEG> get the password return short represent the password <END>
<BEG> get whether to use full precision or just skew all you figure all to hell <END>
<BEG> reads a 16 bit <SEG> sign value <END>
<BEG> get whether to refresh all external data when load a sheet return refreshall or not <END>
<BEG> get the logical col number for the first cell this row 0 base index return col - the col number <END>
<BEG> get the height of the row return height of the row <END>
<BEG> get whether to optimize or not set to 0 return optimize set to 0 <END>
<BEG> a bit that specify whether any cell in the row have a medium or thick bottom border <SEG> or any cell in the row directly below the current row have a medium or thick top border <END>
<BEG> get whether to recalculate formula etc before save or not return recalc - whether to recalculate or not <END>
<BEG> get the style 's name return name of the style <END>
<BEG> return the horizontal text alignment field value <END>
<BEG> return the first visible sheet in the worksheet tab-bar <END>
<BEG> get whether the window should display row and column heading return heading or not <END>
<BEG> get whether the window should display zero value return zero or not <END>
<BEG> get whether the window should display a default header return header or not <END>
<BEG> be this arabic ? <END>
<BEG> freeze unsplit pane or not return freeze or not <END>
<BEG> get whether sheet be a dialog sheet or not return isdialog or not <END>
<BEG> get if row summary appear below detail in the outline return below or not <END>
<BEG> get whether to display the gut or not return gut or no gut or glory <END>
<BEG> return the right side of the header or footer <END>
<BEG> return the mark-up tag represent the number of page <END>
<BEG> return the mark-up tag for end double underline <END>
<BEG> get the content of the format string <SEG> by look up the dataformat against the supplied workbook see org apache poi hssf usermodel hssfdataformat return the format string or general if not find <END>
<BEG> clones all the style information from another hssfcellstyle <SEG> onto this one <END>
<BEG> param col2 the column 0 base of the second cell <END>
<BEG> returns whether this comment be visible <END>
<BEG> non-javadoc see org apache poi hssf usermodel datavalidation # geterrorstyle <END>
<BEG> non-javadoc see org apache poi hssf usermodel datavalidation # setemptycellallowed boolean <END>
<BEG> non-javadoc see org apache poi hssf usermodel datavalidation # createerrorbox java lang string <SEG> java lang string <END>
<BEG> non-javadoc see org apache poi s usermodel datavalidationhelper # createtextlengthconstraint int <SEG> java lang string <SEG> java lang string <END>
<BEG> throw illegalstateexception : xssf-style external name be not support for hssf <END>
<BEG> set character-set to use <END>
<BEG> sets the comment the user provide when the name be create <END>
<BEG> return the anchor that be use by this picture <END>
<BEG> return shape height <END>
<BEG> used internally by the hssfcell to set the internal string value <END>
<BEG> param value specify whether this shape be horizontally flipped <END>
<BEG> return whether this shape be horizontally flipped <END>
<BEG> specifies the rotation <SEG> in degree <SEG> that be apply to a shape <END>
<BEG> return return the right margin within the textbox <END>
<BEG> sets the right margin within the textbox <END>
<BEG> display the content of multiple poifs file param args the name of the file to be display <END>
<BEG> get an iterator of object <SEG> some of which may implement poifsviewable return an iterator ; may not be null <SEG> but may have an empty back end store <END>
<BEG> returns the batblock that handle the specified offset <SEG> and the relative index within it <END>
<BEG> finds a free block <SEG> and return it offset <END>
<BEG> get the root property return the root property <END>
<BEG> retrieve where in the file we live <END>
<BEG> sets the offset of the first up to 109 bat sector <END>
<BEG> return xbat difat index <END>
<BEG> create an instance of { link jaxbelement } { code < } { link ctpercentage } { code > } } <END>
<BEG> sets the < code > transform < code > in the < code > graphics2d < code > context <END>
<BEG> sets the value of a single preference for the rendering algorithm <END>
<BEG> renders a { link renderedimage } <SEG> apply a transform from image space into user space before draw <END>
<BEG> access the numerator <END>
<BEG> param adate a give date <END>
<BEG> evaluate for workday <END>
<BEG> retrieve all formatting rule for the give sheet <END>
<BEG> finds and return the { link datavalidationcontext } for the cell <SEG> if there be one <END>
<BEG> return the number of evaluated cell in the range that match the specify criterion <END>
<BEG> convenience base class for function that must take exactly two argument <END>
<BEG> returns a value round to p digit after decimal <END>
<BEG> sum of all value param value <END>
<BEG> min of all value <END>
<BEG> note : this function be different from java lang math ceil <END>
<BEG> inverse hyperbolic sine param d <END>
<BEG> hyperbolic sine param d <END>
<BEG> return whether cell at rowindex and columnindex be a subtotal <END>
<BEG> return true if the cell be a subtotal <END>
<BEG> set the first column in the area <END>
<BEG> implementation of method from operationsptg param operands a string array of operand return string the formula a a string <END>
<BEG> implementation of method from operationsptg <END>
<BEG> return the last maximum valid column index <SEG> equal to < code > getmaxcolumns - 1 < code > <END>
<BEG> return string representation of the error <END>
<BEG> get the cell address column return column <END>
<BEG> return row number for the upper left hand corner <END>
<BEG> check if the column be in the specify cell range param colind the column to check return true if the range contain the column [ colind ] <END>
<BEG> param firstrow row number for the upper left hand corner <END>
<BEG> returns the horizontal position of the split <END>
<BEG> for a vertical split return the left column in the right pane <END>
<BEG> copy a portion of a byte array param data the original byte array param offset where to start copying from <END>
<BEG> get the unsigned value of a byte <END>
<BEG> put a float value into a byte array param data the byte array param offset a starting offset into the byte array param value the float 32-bit value <END>
<BEG> put an unsigned int value into a byte array param data the byte array param offset a starting offset into the byte array param value the int 32-bit value exception arrayindexoutofboundsexception may be throw <END>
<BEG> return the default user locale <END>
<BEG> syntactic sugar to check whether a recordformatexception should be throw <END>
<BEG> tests if the string end with the specified suffix <SEG> ignore case consideration <END>
<BEG> converts pixel to emus param pixel pixel return emus <END>
<BEG> add multiple argument <END>
<BEG> causes the current thread to wait <SEG> if necessary <SEG> until the process have terminate <END>
<BEG> see org apache common exec executor # setstreamhandler org apache common exec executestreamhandler <END>
<BEG> see org apache common exec executor # getwatchdog <END>
<BEG> see org apache common exec executor # setprocessdestroyer processdestroyer <END>
<BEG> find the list of environment variable for this process <END>
<BEG> determines if the os on which ant be execute match the give os architecture <END>
<BEG> set the < code > inputstream < code > from which to read the standard error of the process <END>
<BEG> creates a stream pumper to copy the give input stream to the give output stream <END>
<BEG> check whether the unc path be valid <END>
<BEG> retrieves the value of an optional connection option <END>
<BEG> returns the character use by the operating system family to separate component of a file path <SEG> e g <END>
<BEG> returns the character use by the operating system family to separate component of a path <SEG> e g <END>
<BEG> creates a { link consoleoverthereexecutionoutputhandler } that log to { link system # err } <END>
<BEG> overridable callback method invoke for each restrict directory <END>
<BEG> overridable callback method invoke at the end of process each directory <END>
<BEG> overridable callback method invoke at the end of processing <END>
<BEG> return actual process result <END>
<BEG> return output line of the finished process convert use a give char set <END>
<BEG> return asynchronous result of the started process <END>
<BEG> write the data to the buffer and flush the buffer <SEG> if a line separator be detect <END>
<BEG> a convenience method to send the ftp pass command to the server <SEG> receive the reply <SEG> and return the reply code <END>
<BEG> return whether strict non-multiline parsing be enable <SEG> a per rfc 959 <SEG> section 4 2 <END>
<BEG> set strict non-multiline parsing <END>
<BEG> set the current data connection mode to < code > passive_local_data_connection_mode < code > <END>
<BEG> set the client side port range in active mode <END>
<BEG> set the local ip address to use in passive mode <END>
<BEG> set the local ip address in passive mode <END>
<BEG> initiate a server to server file transfer <END>
<BEG> generate a directory listing use the mlsd command <END>
<BEG> issue the ftp mdtm command not support by all server to retrieve the last modification time of a file <END>
<BEG> retrieve the value to be use for the data socket so_sndbuf option <END>
<BEG> get how long to wait for control keep-alive message reply <END>
<BEG> getter for the { link # setrecentdateformatstr string recentdateformatstr } property <END>
<BEG> < p > getter for the { link # setserverlanguagecode string serverlanguagecode } property <END>
<BEG> < p > setter for the recentdateformatstr property <END>
<BEG> determine if the file be a symbolic link <END>
<BEG> set the number of hard link to this file <END>
<BEG> returns the name of the group own the file <END>
<BEG> determines if the give access group one of the < code > _access < code > constant have the give access permission one of the < code > _permission < code > constant to the file <END>
<BEG> determine if a reply code be a positive completion response <END>
<BEG> return auth command use value <END>
<BEG> returns true if the socket will request client authentication <END>
<BEG> controls which particular protocol version be enable for use on this connection <END>
<BEG> returns the name of the protocol version which be currently enable for use on this connection <END>
<BEG> pbsz command <END>
<BEG> performs any custom initialization for a newly create sslsocket before the ssl handshake happens <END>
<BEG> get the currently configure { link trustmanager } <END>
<BEG> override the default { link hostnameverifier } to use <END>
<BEG> send the mic command with the specify data <END>
<BEG> implementation of the { link configurable configurable } interface <END>
<BEG> convenience method delegate to the internal matchresult 's group method <END>
<BEG> alter the current regular expression be utilise for entry parsing and create a new { link pattern } instance <END>
<BEG> sets the current chunk listener <END>
<BEG> unregisters a copystreamlistener <END>
<BEG> read a line of text <END>
<BEG> reads and return the next character in the message <END>
<BEG> closes the socket quietly <SEG> catch rather than throw ioexception <END>
<BEG> return the nntp query format time hour <SEG> minute <SEG> second in the form hhmmss <END>
<BEG> return the comma separate list of newsgroups <END>
<BEG> get the number of the last article in the newsgroup <END>
<BEG> a convenience method to send the nntp article command to the server <SEG> receive the initial reply <SEG> and return the reply code <END>
<BEG> returns the subject use in the < code > subject : < code > header field <END>
<BEG> returns the current pop3 client state <END>
<BEG> sends a command an argument to the server and return the reply code <END>
<BEG> returns the reply to the last command send to the server <END>
<BEG> the tls command execution <END>
<BEG> returns true if the protocolcommandevent be generate a a result of receive a reply <END>
<BEG> removes a protocolcommandlistener <END>
<BEG> adds an arbitrary header field with the give value to the article header <END>
<BEG> sends a write char on the spy stream <END>
<BEG> returns the telnet connection input stream <END>
<BEG> gets the status of the reader thread <END>
<BEG> returns the string representation of the telnet protocol option correspond to the give option code <END>
<BEG> determines if a give option code be valid <END>
<BEG> returns a boolean indicate whether to accept a will request come from the other end <END>
<BEG> set behaviour of the option for will request come from the other end <END>
<BEG> returns a boolean indicate whether to send a do request to the other end upon connection <END>
<BEG> tells this option whether to send a do request upon connection <END>
<BEG> this method be invoke whenever this option be acknowledge active on the remote end telnetclient send a do <SEG> remote side send a will <END>
<BEG> tells this option whether a do request sent to the other side have be acknowledge invoke by telnetclient <END>
<BEG> sets the block number of the acknowledgement <END>
<BEG> retrieves the time from the server and return a java date contain the time convert to the local timezone <END>
<BEG> returns a charset object for the give charset name <END>
<BEG> set the control to connect to on the remote server <END>
<BEG> non-javadoc see com enterprisedt net ftp ftpclientinterface # getremotehost <END>
<BEG> set automatic substitution of the remote host ip on if in passive mode param autopassiveipsubstitution true if set to on <SEG> false otherwise <END>
<BEG> set strict checking of ftp return code <END>
<BEG> return returns the raw server string <END>
<BEG> getter for reply text return server 's reply text <END>
<BEG> set the locale for date parsing of listing param locale locale to set <END>
<BEG> log a warning level message param message message to log <END>
<BEG> log a warning level message param message message to log param t throwable object <END>
<BEG> is log enable for the supplied level ? <END>
<BEG> log a message param msg message to log <END>
<BEG> non-javadoc see com enterprisedt util debug appender # log java lang throwable <END>
<BEG> non-javadoc see com enterprisedt util debug appender # close <END>
<BEG> set the maximum idle time in second <END>
<BEG> is port enable ? <END>
<BEG> set the active data connection local port <END>
<BEG> set the passive address that will be return to client on the pasv command <END>
<BEG> encrypt string use sha algorithm <END>
<BEG> get unique file object <END>
<BEG> no exception < code > outputstream < code > close method <END>
<BEG> copy char from a < code > reader < code > to a < code > writer < code > <END>
<BEG> read fully from stream <END>
<BEG> create a new try represent the result of a potentially exception throwing operation <END>
<BEG> projects this either a a right <END>
<BEG> if this be a left return the contain value <SEG> else return the result of apply { code righttransformer } on right param righttransformer function to run on right if this be a right return contain value of left or result of { code righttransformer } since 3 2 <END>
<BEG> a predicate that test if the supply either be a right <END>
<BEG> a function that map an either to an option of it right type <END>
<BEG> upcasts an { link either either } of right type r to an either of right type rr <SEG> which be a super type of r <SEG> keep the left type unchanged <END>
<BEG> takes an { link java lang iterable } of { link either eithers } <SEG> and collect the right value of every either which have a leave value param < l > the lhs type param < r > the rhs type param it iterable of eithers to filter and transform from return the right value contain in the content of it <END>
<BEG> collect the left value if there be only lefts <SEG> otherwise return the first right encounter <END>
<BEG> returns the composition of two function <END>
<BEG> return an infinite iterable that cycle through the input value in order in a loop <END>
<BEG> access the right element return right hand side <SEG> <END>
<BEG> a semigroup must not care about the order element be combine <END>
<BEG> a monoid for list <END>
<BEG> a monoid for option that take the last available value <END>
<BEG> factory method for none instance <END>
<BEG> apply { code f } to the value if define <END>
<BEG> creates an either from this option <END>
<BEG> function for access the right value of { link pair pair } <END>
<BEG> composes a semigroup with another <END>
<BEG> supplies false <END>
<BEG> represents a deconstruction failure that be non-exhaustive <END>
<BEG> a function that return the < code > getmessage < code > for a throwable <END>
<BEG> constructs a database action a a function from a database connection to a value <END>
<BEG> creates a database state writer give a connection url <END>
<BEG> creates a new actor that use the give parallelization strategy and have the give side-effect <END>
<BEG> performs function application within a callable applicative functor pattern <END>
<BEG> a first-class version of the normalise function <END>
<BEG> takes a promise-valued function and apply it to each element in the give stream <SEG> yield a promise of a stream of result <END>
<BEG> a first-class function that map another function across a stream in parallel <END>
<BEG> maps a function across a treezipper in parallel <END>
<BEG> binds a stream-valued function across a stream in parallel <SEG> concatenate the result into a new stream <END>
<BEG> zips two stream together with a give function <SEG> in parallel <END>
<BEG> maps the give function across all subtrees of the give tree in parallel <END>
<BEG> binds the give function to this promise and the give promise <SEG> with a final join <END>
<BEG> promotes a function of arity-2 to a function on promise <END>
<BEG> turns a list of promise into a single promise of a list <END>
<BEG> first-class version of parmap on array <END>
<BEG> first-class version of parmap1 on array parallel array functor <END>
<BEG> zips together two array in parallel use a give function <SEG> with this strategy <END>
<BEG> lifts a give function of arity-2 so that it zip together two array in parallel <SEG> use this strategy <SEG> call the function once for each correspond pair in the array <SEG> position-wise <END>
<BEG> returns a stream projection of this array <END>
<BEG> performs a left-fold reduction across this array <END>
<BEG> performs a right-fold accummulating use last array element a a start value and return an array of the intermediate result <END>
<BEG> a function that convert list to stream <END>
<BEG> a function that convert eithers to string builder <END>
<BEG> a function that convert string builder to eithers <END>
<BEG> creates a dlist from an iterator <END>
<BEG> a function that construct a right value of either <END>
<BEG> construct a right value of either <END>
<BEG> return a function that map another function across an either 's right projection <END>
<BEG> joins an either through right <END>
<BEG> sequences through the right side of the either monad with a list of value <END>
<BEG> traversable instance of leftprojection of either for list <END>
<BEG> returns all the right value in the give list <END>
<BEG> returns the potential predecessor of a value for this enumerator in curried form <END>
<BEG> returns the potential predecessor of a value for this enumerator <END>
<BEG> returns the minimum value for this enumerator if there be one <END>
<BEG> returns a function that move a value along the enumerator a give number of time <END>
<BEG> constructs a lazy evaluation without cache <END>
<BEG> alias for { link # bind f } <END>
<BEG> returns the last few element of this tree <END>
<BEG> constructs a singleton tree <END>
<BEG> a digit of two element <END>
<BEG> returns the empty list <END>
<BEG> returns a boolean value whose type represent falsehood <END>
<BEG> returns an iterable that completely preserve the argument <END>
<BEG> provides a transformation from a function to a iterable-valued function that be equivalent to it <END>
<BEG> binds the give function to the value in the give iterables with a final join <END>
<BEG> joins an iterable of iterables into a single iterable <END>
<BEG> the catamorphism for iterables <SEG> implement a a right fold <END>
<BEG> a function that convert list to link hash set <END>
<BEG> a function that convert list to copy on write array set <END>
<BEG> a function that convert array to link block queue <END>
<BEG> a function that convert string builder to synchronous queue <END>
<BEG> a function that convert array block queue to list <END>
<BEG> return the predecessor of this natural number return the predecessor of this natural number <END>
<BEG> first-class predecessor function <END>
<BEG> sums a list of natural number <END>
<BEG> takes the product of a list of natural number <END>
<BEG> binds the give function across each element of this list with a final join <END>
<BEG> maps the give function across the tail of this list comonad pattern <END>
<BEG> returns the maximum element in this non empty list accord to the give ordering <END>
<BEG> join two { link getter } with the same target <END>
<BEG> create a { link lens } use a pair of function : one to get the target <SEG> one to set the target <END>
<BEG> pair two disjoint { link piso } <END>
<BEG> create a { link piso } between any type and itself <END>
<BEG> view a { link plens } a an { link poptional } <END>
<BEG> modify polymorphically the target of a { link pprism } with an applicative function <END>
<BEG> returns < code > true < code > if this optional value have a value <SEG> < code > false < code > otherwise <END>
<BEG> performs a reduction on this optional value use the give argument <END>
<BEG> returns a list projection of this optional value <END>
<BEG> returns an array projection of this optional value <END>
<BEG> turns an unsafe nullable value into a safe optional value <END>
<BEG> the empty sequence <END>
<BEG> constructs a sequence from the give element <END>
<BEG> replace the element at the give index with the supplied value <END>
<BEG> delete the element at the give index <END>
<BEG> performs a reduction on this stream use the give argument <END>
<BEG> returns the tail of this stream if there be one or the give argument if this stream be empty <END>
<BEG> filters element from this stream by return only element which produce < code > true < code > when the give function be apply to them <END>
<BEG> binds the give function across each element of this stream and the give stream with a final join <END>
<BEG> sequence through the stream monad <END>
<BEG> projects an immutable collection of this stream <END>
<BEG> constructs a stream with the give element in the iterator <END>
<BEG> zips this stream with the give stream to produce a stream of pair <END>
<BEG> returns an either projection of this stream ; the give argument in < code > left < code > if empty <SEG> or the first element in < code > right < code > <END>
<BEG> returns an option projection of this stream ; < code > none < code > if empty <SEG> or the first element in < code > some < code > <END>
<BEG> returns a java util list projection of this stream <END>
<BEG> traversable instance of stream for option <END>
<BEG> reverse this stream in constant stack space <END>
<BEG> returns the element at the give index if it exist <SEG> fails otherwise <END>
<BEG> returns < code > true < code > if the predicate hold for all of the element of this stream <SEG> < code > false < code > otherwise < code > true < code > for the empty stream <END>
<BEG> returns a stream of all infix of this stream <END>
<BEG> a first-class version of join return a function that join a stream of stream use a bind operation <END>
<BEG> takes the give iterable to a stream <END>
<BEG> constructs a tree map from the give element <END>
<BEG> inserts the give key and value association into the tree map <END>
<BEG> returns all key in this tree map <END>
<BEG> determines if the give key value exist in this tree map <END>
<BEG> splits this treemap at the give key <END>
<BEG> maps the give function across the value of this treemap <END>
<BEG> returns the maximum key in the tree if the tree be not empty <END>
<BEG> the expression < code > t1 union t2 < code > take the left-biased union of < code > t1 < code > and < code > t2 < code > <END>
<BEG> a show instance for tree zipper <END>
<BEG> navigates to the left sibling of the current location <END>
<BEG> returns the right sibling of the currently focus node <END>
<BEG> returns the parent of the currently focus node <END>
<BEG> indicates whether the current node be the rightmost tree in the current forest <END>
<BEG> indicates whether the current node be at the bottom of the tree <END>
<BEG> modifies the current node with the give function <END>
<BEG> replaces the label of the current node with the give value <END>
<BEG> inserts a tree to the right of the current position <END>
<BEG> inserts a tree a the last child of the current node <END>
<BEG> returns the success value <SEG> or throw an error if there be no success value <END>
<BEG> returns a failing validation contain the give value <END>
<BEG> puts element in a vector-3 <END>
<BEG> returns a function that put element in a vector-3 <END>
<BEG> a first-class function to get the second element of a vector <END>
<BEG> returns a stream of the element of this vector <END>
<BEG> maps the give function across this vector <END>
<BEG> creates a vector-3 from a homogeneous product-3 <END>
<BEG> returns the third element of this vector <END>
<BEG> returns a homogeneous product-3 equivalent to this vector <END>
<BEG> returns an array with the element of this vector <END>
<BEG> zips this vector with the give vector to produce a vector of vector <END>
<BEG> returns a function that transform a vector-3 to a stream of it element <END>
<BEG> returns a function that transform a vector-3 to the equivalent product-3 <END>
<BEG> creates a vector-4 from a head and a tail <END>
<BEG> returns all but the first element of this vector <SEG> a a vector-3 <END>
<BEG> constructs an equal instance from the give function <END>
<BEG> an equal instance for the { link validation } type <END>
<BEG> promotes this function to map over a list <END>
<BEG> promotes this function so that it return it result on the right side of an either <END>
<BEG> promotes this function to map over the right side of an either <END>
<BEG> returns a function that return the right side of a give either <SEG> or this function apply to the left side <END>
<BEG> promotes this function to return it value in a nonemptylist <END>
<BEG> maps this function over a priorityblockingqueue <END>
<BEG> uncurries this function to a function on tuples <END>
<BEG> promotes this function to zip two iterables <SEG> apply the function lock-step over both iterables <END>
<BEG> lifts the function into the fully feature function wrapper <END>
<BEG> returns true if any element of the give stream be true <END>
<BEG> function composition flip <END>
<BEG> simultaneously covaries and contravaries a function <END>
<BEG> uncurry a function of arity-2 <END>
<BEG> compute the hash of the give value <END>
<BEG> maps the give function across this hash a a contra-variant functor <END>
<BEG> a hash instance for a product-2 <END>
<BEG> sums the give value with left-fold <END>
<BEG> returns a function that sum the give value with right-fold <END>
<BEG> returns < code > true < code > if the first give argument be great than the second give argument <SEG> < code > false < code > otherwise <END>
<BEG> returns the less of it two argument <END>
<BEG> begin definition of an ord instance <END>
<BEG> returns an order instance that use the give equality test and order function <END>
<BEG> a function that put an element in a product-1 <END>
<BEG> a function that put element in a product-3 <END>
<BEG> promote any function to a transformation between p1s <END>
<BEG> binds the give function to the value in a product-1 with a final join <END>
<BEG> joins a p1 of a p1 with a bind operation <END>
<BEG> traversable instance of p1 for validation param f the function might produce validation return an validation of p1 < b > <END>
<BEG> map the second element of the product <END>
<BEG> returns the 1-product projection over the second element <END>
<BEG> promotes a function so that it map the second element of a product <END>
<BEG> returns a function that return the first element of a product <END>
<BEG> provides a memoising p3 that remember it value <END>
<BEG> returns a parser that try this parser and if it fail <SEG> then try the give parser <END>
<BEG> returns a parser that repeat application of this parser one or many time <END>
<BEG> maps the give function across the parse value <END>
<BEG> a semigroup which always use the last right-hand side value <END>
<BEG> a semigroup for optional value <END>
<BEG> a semigroup for optional value that take the last available value <END>
<BEG> a semigroup for stream <END>
<BEG> a lazy semigroup for binary product <END>
<BEG> prints the give argument to the standard error stream with a new line <END>
<BEG> a show instance for the { link p1 tuple-1 } type <END>
<BEG> creates a { code checkedconsumer } <END>
<BEG> lifts the give { code partialfunction } into a total function that return an { code try } result <END>
<BEG> creates a { code checkedfunction1 } base on < ul > < li > < a href= http : doc oracle com javase tutorial java javaoo methodreferences html > method reference < a > < li > < li > < a href= http : doc oracle com javase tutorial java javaoo lambdaexpressions html # syntax > lambda expression < a > < li > < ul > examples w l o g <END>
<BEG> narrows the give { code checkedfunction1 < ? <END>
<BEG> return a composed function that first applies this checkedfunction1 to the give argument and in case of throwable try to get value from { code recover } function with same argument and throwable information <END>
<BEG> returns an unchecked function that will < em > sneaky throw < em > if an exception occur when apply the function <END>
<BEG> returns a composed function that first applies this checkedfunction1 to the give argument and then applies { linkplain checkedfunction1 } { code after } to the result <END>
<BEG> creates an array of the give element <END>
<BEG> creates an array from boolean value <END>
<BEG> an { code array } be computed eagerly <END>
<BEG> creates a bitset from byte value <END>
<BEG> creates a string of the give element <END>
<BEG> returns a charseq contain { code n } value of a give function { code f } over a range of integer value from 0 to { code n - 1 } <END>
<BEG> returns a charseq contain { code n } value supply by a give supplier { code s } <END>
<BEG> returns the index of the last occurrence of the give element a an { code option } <END>
<BEG> converts this { code charseq } to an { code integer } in the specify radix by call { link integer # valueof string <SEG> int } <END>
<BEG> accumulates the element of this foldable by successively call the give operation { code op } <END>
<BEG> returns a hashset containing tuples return by { code n } call to a give supplier { code s } <END>
<BEG> creates a hashset that contain the element of the give { link java util stream stream } <END>
<BEG> returns a { link java util stream collector } which may be use in conjunction with { link java util stream stream # collect java util stream collector } to obtain a { link linkedhashmap } <END>
<BEG> returns a { code linkedhashmap } <SEG> from a source java util map <END>
<BEG> returns a list contain { code n } time the give { code element } param < t > component type of the list param n the number of element in the list param element the element return a list of size { code n } <SEG> where each element be the give { code element } <END>
<BEG> removes the head element from this list <END>
<BEG> pushes the give element on top of this list <END>
<BEG> enqueues the give element <END>
<BEG> drops the first element of a non-empty { link priorityqueue } <END>
<BEG> returns the minimum element of this tree accord to the underlying comparator <END>
<BEG> returns the single instance of nil <END>
<BEG> creates a stream of the give element <END>
<BEG> dual of { linkplain # tailoption } <SEG> return all element except the last a { code option } <END>
<BEG> calculates the minimum of this element within the co-domain of a specific function <END>
<BEG> joins the string representation of this element use a specific delimiter <SEG> prefix and suffix <END>
<BEG> accumulates the element of this traversable by successively call the give operation { code op } from the right <END>
<BEG> shortcut for { code isempty ? <END>
<BEG> returns a { link collector } which may be use in conjunction with { link java util stream stream # collect collector } to obtain a { link treemap } <END>
<BEG> creates a { code treemap } of the give list of key-value pair <END>
<BEG> creates a { code treemap } of the give entry <END>
<BEG> returns this { code treemap } if it be nonempty <SEG> otherwise { code treemap } create from iterable <SEG> use exist comparator <END>
<BEG> returns this { code treemap } if it be nonempty <SEG> otherwise { code treemap } create from result of evaluate supplier <SEG> use exist comparator <END>
<BEG> creates a failed { code future } with the give { code exception } <SEG> back by the give { link executor } <END>
<BEG> creates a failed { code promise } <SEG> back by the give { link executor } <END>
<BEG> completes this { code promise } with the give { code value } <END>
<BEG> constructs a { link left } param leave the value <END>
<BEG> folds either the left or the right side of this disjunction <END>
<BEG> filters this right-biased { code either } by test a predicate <END>
<BEG> collects value that be in the domain of the give { code partialfunction } by map the value to type { code r } <END>
<BEG> folds either the { code failure } or the { code success } side of the try value <END>
<BEG> combines three { code validation } s into a { link builder3 } <END>
<BEG> returns this { code validation } if it be valid <SEG> otherwise return the alternative <END>
<BEG> returns this { code validation } if it be valid <SEG> otherwise return the result of evaluate supplier <END>
<BEG> returns the singleton instance of tuple0 <END>
<BEG> concat a tuple 's value to this tuple <END>
<BEG> sets the 1st element of this tuple to the give { code value } <END>
<BEG> getter of the 2nd element of this tuple <END>
<BEG> swaps the element of this { code tuple } <END>
<BEG> maps the 2nd component of this tuple to a new value <END>
<BEG> maps the component of this tuple use a mapper function for each component <END>
<BEG> performs an action on each element <END>
<BEG> sends the string representation of this to the { link printwriter } <END>
<BEG> sends the string representation of this to the standard output stream { linkplain system # out } <END>
<BEG> converts this to a { link charseq } <END>
<BEG> adds a new value at the end of the stream <END>
<BEG> overwrites give element with new value <END>
<BEG> returns true if this geometry have an m attribute return true if this geometry have an m attribute <END>
<BEG> creates a copy of the geometry <END>
<BEG> gets an iterator on the interval_tree_impl use the input double a the stabbing query <END>
<BEG> the output of this method can be only use for debug <END>
<BEG> returns xyz coordinate a an array <END>
<BEG> returns true when this geometry have exactly same type <SEG> property <SEG> and coordinate a the other geometry <END>
<BEG> gets an iterator on the quadtree <END>
<BEG> returns the extent of the quad at the give quad_handle <END>
<BEG> gets an iterator on the quad_tree_impl use the input envelope_2d a the query <END>
<BEG> gets a sorted iterator on the quad_tree <END>
<BEG> add a single edge <END>
<BEG> returns true if this transformation be a shift transformation within the give tolerance <END>
<BEG> set this transformation to be a scale <END>
<BEG> sets the transformation to be a flip around the y axis <END>
<BEG> sets rotation for this transformation <END>
<BEG> flips the transformation around the y axis <END>
<BEG> returns the persistence type for the attribute <END>
<BEG> returns true <SEG> if the vertex have m attribute <END>
<BEG> returns the total component count <END>
<BEG> puts in range -90 & lt ; = lat_deg & lt ; = 90 <END>
<BEG> same a { link math # todegrees double } but 3x faster multiply vs divide <END>
<BEG> parses the wktstring <SEG> return the defined shape <END>
<BEG> parses a polygon shape from the raw string <END>
<BEG> the < code > x < code > coordinate of where the circle axis intersect <END>
<BEG> all { link point } implementation should use this definition of { link object # equal object } <END>
<BEG> adds the specified listener to this container <END>
<BEG> the previous pointer <SEG> i e <END>
<BEG> return amount of free physical memory in byte <SEG> or { link # value_unavailable } if underlying bean do not provide this functionality <END>
<BEG> return number of open file descriptor <SEG> or { link # value_unavailable } if underlying bean do not provide this functionality <END>
<BEG> # # # # # # # # # # # # # # # # bytebuffer creation helpers # # # # # # # # # # # # # # # # <END>
<BEG> adds an object to a priorityqueue in log size time <END>
<BEG> removes all entry from the priorityqueue <END>
<BEG> converts a < code > float < code > value to a sortable sign < code > int < code > <END>
<BEG> converts ieee 754 representation of a float to sortable order or back to the original <END>
<BEG> generate a salt for use with the bcrypt hashpw method param log_rounds the log2 of the number of round of hash to apply - the work factor therefore increase a 2 log_rounds <END>
<BEG> reads { code [ offset <SEG> offset + 3 ] } bytes of the byte sequence represent by the give { code input } a a single { code int } value <END>
<BEG> shortcut for { code getshort input <SEG> offset & 0xffff } <END>
<BEG> returns a hash function implement so-called < a href= http : github com google farmhash blob 34c13ddfab0e35422f4c3979f360635a8c050260 dev farmhashuo cc > farmhashuo algorithm < a > with the two give seed value <END>
<BEG> returns the hash code for the specified subsequence of the give { code byte } array <END>
<BEG> shortcut for { link # hashchars stringbuilder <SEG> int <SEG> int hashchars input <SEG> 0 <SEG> input length } <END>
<BEG> returns the hash code for byte of the specified subsequence of the give { code stringbuilder } 's underlie { code char } array <END>
<BEG> deprecated - use getsystemid instead return <END>
<BEG> the html5 edit tag 2 total <END>
<BEG> return numeric character reference in hex format <END>
<BEG> removes the first newline if present of a string param str return <END>
<BEG> trims specify string from right <END>
<BEG> whether < code > lang < code > be map to < code > xml : lang < code > <END>
<BEG> the policy for non-ncname element and attribute name <END>
<BEG> returns the col return the col <END>
<BEG> returns the start index <END>
<BEG> see java io reader # read char [ ] <SEG> int <SEG> int <END>
<BEG> see org xml sax xmlreader # getdtdhandler <END>
<BEG> see org xml sax xmlreader # setcontenthandler org xml sax contenthandler <END>
<BEG> sets a non-boolean property without have to use non- < code > xmlreader < code > setter directly <END>
<BEG> see nu validator htmlparser impl treebuilder # appendisindexprompt java lang object <END>
<BEG> see nu validator htmlparser impl treebuilder # elementpushed string <SEG> java lang string <SEG> java lang object <END>
<BEG> see nu validator htmlparser impl treebuilder # appenddoctypetodocument java lang string <SEG> java lang string <SEG> java lang string <END>
<BEG> returns the wrapped buffer a a string <END>
<BEG> see nu validator saxtree node # visit nu validator saxtree treeparser <END>
<BEG> see nu validator saxtree node # getnodetype <END>
<BEG> see org xml sax ext lexicalhandler # enddtd <END>
<BEG> see org xml sax ext lexicalhandler # startentity java lang string <END>
<BEG> see org xml sax contenthandler # ignorablewhitespace char [ ] <SEG> int <SEG> int <END>
<BEG> see org xml sax contenthandler # skippedentity java lang string <END>
<BEG> see org xml sax contenthandler # startprefixmapping java lang string <SEG> java lang string <END>
<BEG> returns the name of this attribute in original case <END>
<BEG> sets the default maximum error count allow when parse attribute <END>
<BEG> returns the < a href= numericcharacterreference html # hexadecimalcharacterreference > hexadecimal encode form < a > of the specified unicode code point <END>
<BEG> returns the next end tag match the specify { linkplain # getname name } and { linkplain endtagtype type } <SEG> start at the specified position <END>
<BEG> returns the end tag { linkplain endtag # getname name } that be require to match a { linkplain # getcorrespondingstarttagtype corresponding } { linkplain starttag start tag } with the specify { linkplain starttag # getname name } <END>
<BEG> only call from formfields class <END>
<BEG> returns a set contain the { linkplain element # getname name } of all the < a target= _blank href= http : www w3 org tr rec-css2 visuren html # q7 > inline-level element < a > <END>
<BEG> returns a set contain the { linkplain element # getname name } of all of the < a href= # htmlelement > html elements < a > for which the { linkplain element # getendtag end tag } be < i > optional < i > <END>
<BEG> returns the { linkplain endtag # getname name } of end tag that < a href= # implicitlyterminated > implicitly terminate < a > an < a href= # htmlelement > html element < a > with the specify name <END>
<BEG> returns the index in this list of the last occurence of the specified object <SEG> or -1 if the list do not contain this object <END>
<BEG> indicates whether this numeric character reference specify the unicode code point in hexadecimal format <END>
<BEG> returns the numeric character reference encode form of the specified unicode code point <END>
<BEG> replaces the specify segment of this output document with the specify character <END>
<BEG> indicates whether the specify tag type be recognise by a < a target= _blank href= http : www php net > php < a > parser <END>
<BEG> returns the column at which line be to be wrap <END>
<BEG> returns the string to be use to represent a < a target= _blank href= http : en wikipedia org wiki newline > newline < a > in the output <END>
<BEG> indicates whether the alternate text of a tag that have an < code > alt < code > attribute be include in the output <END>
<BEG> indicates whether decoration character be to be include around the content of some < a target= _blank href= http : www w3 org tr html401 present graphic html # h-15 2 1 > font style element < a > and < a target= _blank href= http : www w3 org tr html401 struct text html # h-9 2 1 > phrase element < a > <END>
<BEG> indicates whether non-breaking space { link characterentityreference # _nbsp & amp ; nbsp ; } character entity reference be convert to space <END>
<BEG> returns the size of the indent to be use for anything other than { link htmlelementname # li li } element <END>
<BEG> returns the bullet character to use for list item inside { link htmlelementname # ul ul } element <END>
<BEG> indicates whether the top margin of the first element be render <END>
<BEG> returns the string that be to separate table cell <END>
<BEG> returns the default value of whether an html block element of the specify name be indent <END>
<BEG> sets the string to be use for indentation <END>
<BEG> returns the string to be use for indentation <END>
<BEG> indicates whether the original text of each tag be to be replace with the output from it { link tag # tidy } method <END>
<BEG> indicates whether { linkplain segment # iswhitespace char white space } in the text between the tag be to be collapse <END>
<BEG> indicates whether all non-essential line break be remove <END>
<BEG> indicates whether all element be to be indent <SEG> include { linkplain htmlelements # getinlinelevelelementnames inline-level element } and those with preformatted content <END>
<BEG> returns the { linkplain element element } that be start by this start tag <END>
<BEG> returns the { linkplain starttagtype type } of this start tag <END>
<BEG> returns the { linkplain characterreference # decode charsequence decode } value of the attribute with the specify name case insensitive <END>
<BEG> indicates whether a matching end tag be require <END>
<BEG> internal method for the construction of a { link starttag } object if this type <END>
<BEG> constructs a tag of this type at the specified position in the specify source document if it match all of the required feature <END>
<BEG> indicates whether any attribute value be include in the output <END>
<BEG> indicates whether the content of < a href= htmlelements html # nonhtmlelement > non-html element < a > be exclude from the output <END>
<BEG> sets whether logging be enable at the warn level <END>
<BEG> returns < code > true < code > if node match the pseudoclass within current result <END>
<BEG> returns pseudo-function name <END>
<BEG> accepts node within select result <END>
<BEG> enables parse of xml tag <END>
<BEG> returns tag end string <END>
<BEG> returns < code > true < code > if tag be { link # end } or { link # self_closing } <END>
<BEG> validates that the value be false param val object to test <END>
<BEG> canned default for xml output <END>
<BEG> parse the content of a file a html <END>
<BEG> read an input stream <SEG> and parse it to a document <END>
<BEG> get safe html from untrusted input html <SEG> by parse input html and filter it through a white-list of permitted tag and attribute <END>
<BEG> check if this attribute have a value <END>
<BEG> set a new attribute <SEG> or replace an exist one by key <END>
<BEG> remove an attribute by key <END>
<BEG> tests if these attribute contain an attribute with this key <END>
<BEG> check if these attribute contain an attribute with a value for this key <END>
<BEG> accessor to the document 's { code body } element <END>
<BEG> returns whether the element with charset information in this document be update on change through { link # charset java nio charset charset document charset charset } or not <END>
<BEG> set the parser use to create this document <END>
<BEG> get this doctype 's system id when set <SEG> or empty string return doctype system id <END>
<BEG> get the name of the tag for this element <END>
<BEG> get this element 's child data node <END>
<BEG> create a new element by tag name <SEG> and add it a the first child <END>
<BEG> create and prepend a new textnode to this element <END>
<BEG> add inner html into this element <END>
<BEG> remove all of the element 's child node <END>
<BEG> get the list index of this element in it element sibling list <END>
<BEG> find element whose sibling index be great than the supplied index <END>
<BEG> get the combined data of this element <END>
<BEG> remove a class name from this element 's { code class } attribute <END>
<BEG> set the value of a form element input <SEG> textarea <SEG> etc <END>
<BEG> set this element 's inner html <END>
<BEG> set the text content of this text node <END>
<BEG> parse a fragment of html into a list of node <END>
<BEG> add a string to the start of the queue <END>
<BEG> remove a list of allowed element from a whitelist <END>
<BEG> remove a previously configure enforce attribute from a tag <END>
<BEG> remove allow url protocol for an element 's url attribute <END>
<BEG> toggle the class name on every match element 's { code class } attribute <END>
<BEG> get the text content of each of the matched element <END>
<BEG> get the combined outer html of all matched element <END>
<BEG> set the inner html of each match element <END>
<BEG> add the supplied html to the end of each match element 's inner html <END>
<BEG> insert the supplied html after each match element 's outer html <END>
<BEG> get the immediate previous element sibling of each element in this list <END>
<BEG> get the immediate previous element sibling of each element in this list <SEG> filter by the query <END>
<BEG> get each of the previous element sibling of each element in this list <END>
<BEG> get { link textnode } node that be direct child node of the select element <END>
<BEG> start a depth-first filtering of the root and all of it descendant <END>
<BEG> is this a literal unmodifiable attribute ? <END>
<BEG> do n't wrap this attribute ? <END>
<BEG> see org w3c dom attr # setvalue java lang string <END>
<BEG> todo dom level 2 getlastchild not implement <END>
<BEG> todo dom level 3 setidattribute not support <END>
<BEG> returns the default entity table instance <END>
<BEG> see org w3c tidy streamin # ungetchar int <END>
<BEG> is the give char a valid xml letter ? <END>
<BEG> determines if the specified character be a uppercase character <END>
<BEG> maps the give character to it uppercase equivalent <END>
<BEG> return a local name from a qname <END>
<BEG> return the original or decorate { link request } return the original or decorate { link request } <END>
<BEG> adds all key-values pair from the give map to this object and return this object <END>
<BEG> replace the value for all key from the give map that be also present in this object <SEG> with the value from the give map <END>
<BEG> removes the value for the give key if present and return this object <END>
<BEG> returns the value for the give key join into a single string use the give delimiter <END>
<BEG> spreads xors high bit of hash to low and also force top bit to 0 <END>
<BEG> returns x 's class if it be of the form class c implement comparable < c > <SEG> else null <END>
<BEG> returns { code true } if this map map one or more key to the specify value <END>
<BEG> implementation for the four public remove replace method : replaces node value with v <SEG> conditional upon match of cv if non-null <END>
<BEG> returns the hash code value for this { link map } <SEG> i e <SEG> the sum of <SEG> for each key-value pair in the map <SEG> { code key hashcode ^ value hashcode } <END>
<BEG> returns a { link set } view of the key in this map <SEG> use the give common map value for any addition i e <SEG> { link collection # add } and { link collection # addall collection } <END>
<BEG> runs task until { code isquiescent } <END>
<BEG> this method use the last valid byte write on disk to position a { link randomaccessfile } <SEG> allow resumable file download <END>
<BEG> return true be preemptive authentication be enabled return true be preemptive authentication be enable <END>
<BEG> beware : mus n't append to itself ! <END>
<BEG> sets the medium type to use for the content-type header <SEG> or { code null } if unspecified <END>
<BEG> sets whether the input stream should be close at the end of { link # writeto } <END>
<BEG> sets the scheme lowercase <SEG> for example { code http } <END>
<BEG> sets the host <SEG> for example { code www google com } <END>
<BEG> sets the user info or { code null } for none <SEG> for example { code username : password } <END>
<BEG> sets the decoded path component by part with each part separate by a { code ' ' } or { code null } for none <END>
<BEG> returns the fragment component or { code null } for none <END>
<BEG> returns the first { code accept-encoding } header or { code null } for none <END>
<BEG> sets the { code accept-encoding } header or { code null } for none <END>
<BEG> returns the content length or less than zero if not know <END>
<BEG> returns the content encode for example { code gzip } or { code null } for none <END>
<BEG> returns the streaming content or { code null } for no content <END>
<BEG> returns the boundary string to use <END>
<BEG> returns a new instance value for the give field class in the give context object for json object or { code null } for the default behavior <END>
<BEG> sets the identifier establish by the client that must be a string or a number or { code null } for a notification and therefore not expect to receive a response <END>
<BEG> returns the name of the method to be invoke <END>
<BEG> sets the structured value that hold the parameter value to be use during the invocation of the method or { code null } for none <END>
<BEG> sets a custom response header <END>
<BEG> returns the http content <END>
<BEG> http response to return from { link # execute } <END>
<BEG> sets the response content to the give byte array <END>
<BEG> sets the content length or { code -1 } for unknown <END>
<BEG> returns whether { link # close } be call <END>
<BEG> returns a new sample rsa public key that match { link # newrsaprivatekey } <END>
<BEG> returns the value at the give index or { code null } if out of bound <END>
<BEG> copies all byte from the input stream to the output stream <END>
<BEG> escapes the string value so it can be safely include in uri query string segment <END>
<BEG> returns the current retry interval in millisecond <END>
<BEG> returns the field information for the give field <END>
<BEG> sets the map of unknown data key name to value <END>
<BEG> returns a new mutable <SEG> empty { code hashmap } instance <END>
<BEG> returns the pkcs12 key store <END>
<BEG> returns the sha-256 with rsa signature algorithm <END>
<BEG> returns the ssl context for tls algorithm <END>
<BEG> returns the pkix trust manager factory <END>
<BEG> < p > convenience method to perform a put request < p > < p > the request body specify by a < code > body < code > name parameter will be encode base on the < code > requestcontenttype < code > name parameter <SEG> or if none be give <SEG> the default { link httpbuilder # setcontenttype object content-type } for this instance <END>
<BEG> start a 'post ' request to the give url along with the query params param baseurl param params the query parameter to include a part of the baseurl param encode true to encode the full url see # append charsequence <SEG> map see # encode charsequence return request <END>
<BEG> set the 'http maxconnections ' property to the give value <END>
<BEG> is the response code a 201 created ? <END>
<BEG> is the response code a 400 bad request ? <END>
<BEG> receive response into the give writer param writer return this request throw httprequestexception <END>
<BEG> set connect timeout on connection to give value param timeout return this request <END>
<BEG> set the 'referer ' header to give value param referer return this request <END>
<BEG> get the 'cache-control ' header from the response return cache control <END>
<BEG> get the 'expires ' header from the response return expire value <SEG> -1 on failure <END>
<BEG> get the 'location ' header from the response return location <END>
<BEG> set the 'proxy-authorization ' header to give value in basic authentication format param name param password return this request <END>
<BEG> get the 'content-length ' header from the response return response header value <END>
<BEG> write reader to request body < p > the give reader will be close once send completes param input return this request throw httprequestexception <END>
<BEG> extracts { code content-type } value from { link httpentity } <END>
<BEG> writes byte from the { code inputstream } this entity be construct with to an { code outputstream } <END>
<BEG> creates { code httphost } instance from string <END>
<BEG> initializes this session input buffer <END>
<BEG> < p > reads until the end of the known length of content < p > < p > does not close the underlie socket input <SEG> but instead leave it prim to parse the next response < p > throw ioexception if an io problem occurs <END>
<BEG> read the next byte from the stream return the next byte or -1 if the end of stream have be reach <END>
<BEG> skips and discard a number of byte from the input stream <END>
<BEG> enumerates all lease connection <END>
<BEG> sets the sslcontext protocol algorithm name <END>
<BEG> sets the trust manager factory algorithm name <END>
<BEG> creates custom ssl context <END>
<BEG> read the content of an entity and return it a a byte array <END>
<BEG> check if two object array be equal <END>
<BEG> adds new header value <END>
<BEG> creates new case-insensitive map <END>
<BEG> returns { code true } if status code indicate a redirect <END>
<BEG> creates socks5 proxy <END>
<BEG> returns proxy port <END>
<BEG> creates a socket with a timeout <END>
<BEG> decodes a string from base64 format <END>
<BEG> return a copy of the bom 's byte <END>
<BEG> converts a int value between endian system <END>
<BEG> reads a short value from a byte array at a give offset <END>
<BEG> reads an unsigned integer 32-bit value from a byte array at a give offset <END>
<BEG> track the specify file <SEG> use the provided marker <SEG> delete the file when the marker instance be garbage collect <END>
<BEG> deletes the file object <SEG> which may be a file or a directory <END>
<BEG> provide a string representation of this file filter <END>
<BEG> checks to see if the file can be read <END>
<BEG> checks to see if the file be empty <END>
<BEG> < p > applies an { link iofilefilter } to the provide { link file } object <END>
<BEG> returns a filter that return true if the filename start with the specify text <END>
<BEG> returns a filter that return true if the filename match the specified text <END>
<BEG> returns a filter that ors the specified filter <END>
<BEG> returns a filter that always return false <END>
<BEG> returns an < code > iofilefilter < code > that wrap the < code > filenamefilter < code > instance <END>
<BEG> returns a filter that return true if the file be last modified before or at the specify cutoff date <END>
<BEG> returns a filter that filter file base on a cutoff date <END>
<BEG> returns a filter that accept file that begin with the provide magic number <END>
<BEG> returns a filter that accept file that contain the provided magic number at a specified offset within the file <END>
<BEG> decorates a filter to make it ignore svn directory <END>
<BEG> decorates a filter so that it only apply to file and not to directory <END>
<BEG> checks to see if the filename match <END>
<BEG> normalizes a path <SEG> remove double and single dot path step <END>
<BEG> normalizes a path <SEG> remove double and single dot path step <SEG> and remove any final directory separator <END>
<BEG> gets the prefix from a full filename <SEG> such a < code > c : < code > or < code > ~ < code > <END>
<BEG> construct a file from the set of name element <END>
<BEG> convert from a < code > url < code > to a < code > file < code > <END>
<BEG> decodes the specified url a per rfc 3986 <SEG> i e <END>
<BEG> converts each of an array of < code > file < code > to a < code > url < code > <END>
<BEG> copies bytes from an { link inputstream } < code > source < code > to a file < code > destination < code > <END>
<BEG> reads the content of a file into a byte array <END>
<BEG> returns the size of the specify file or directory <END>
<BEG> counts the size of a directory recursively sum of the length of all file <END>
<BEG> tests if the specify < code > file < code > be new than the specified < code > date < code > <END>
<BEG> tests if the specify < code > file < code > be old than the specified time reference <END>
<BEG> computes the checksum of a file use the specify checksum object <END>
<BEG> moves a file <END>
<BEG> moves a file to a directory <END>
<BEG> invokes the delegate 's < code > mark int < code > method <END>
<BEG> invokes the delegate 's < code > read < code > method if the current position be less than the limit <END>
<BEG> invokes the delegate 's < code > read byte [ ] <SEG> int <SEG> int < code > method <END>
<BEG> throws the configured exception <END>
<BEG> bind the specified stream to the current thread <END>
<BEG> read a byte <END>
<BEG> skip a specified number of byte <END>
<BEG> read the specified number character into an array <END>
<BEG> return a character value for the < code > read < code > method <END>
<BEG> process the character for the < code > read char [ ] <SEG> offset <SEG> length < code > method <END>
<BEG> notifies the observer by invoke { link observer # error ioexception } with the give argument <END>
<BEG> gets all currently register observer <END>
<BEG> re-throws the original exception throw by this stream <END>
<BEG> handles an exception <END>
<BEG> indicates if the mime type belongs to the text xml family <END>
<BEG> factory method to create an iocase from a name <END>
<BEG> compares two string use the case-sensitivity rule <END>
<BEG> checks if one string end with another use the case-sensitivity rule <END>
<BEG> returns the give reader if it be a { link bufferedreader } <SEG> otherwise create a bufferedreader from the give reader <END>
<BEG> returns the give reader if it be already a { link bufferedreader } <SEG> otherwise create a bufferedreader from the give reader <END>
<BEG> returns an iterator for the line in a < code > reader < code > <END>
<BEG> converts the specify string to an input stream <SEG> encode a byte use the specified character encode <END>
<BEG> writes byte from a < code > byte [ ] < code > to an < code > outputstream < code > <END>
<BEG> writes char from a < code > char [ ] < code > to a < code > writer < code > use chunk writes <END>
<BEG> writes char from a < code > string < code > to byte on an < code > outputstream < code > use the specified character encode <END>
<BEG> copies bytes from an < code > inputstream < code > to an < code > outputstream < code > <END>
<BEG> copies bytes from a large over 2gb < code > inputstream < code > to an < code > outputstream < code > <END>
<BEG> skips bytes from an input byte stream <END>
<BEG> reads bytes from a readablebytechannel <END>
<BEG> file delete event <END>
<BEG> file system observer finish check event <END>
<BEG> remove a file system observer from this monitor <END>
<BEG> set the file name <END>
<BEG> set whether the file exist the last time it be check <END>
<BEG> set whether the file be a directory or not <END>
<BEG> write a byte to byte array <END>
<BEG> gets the current content of this byte stream a a byte array <END>
<BEG> gets the current content of this byte stream a a string use the specify encoding <END>
<BEG> replaces the underlie output stream with a { link closedoutputstream } sentinel <END>
<BEG> invoked by the write method before the call be proxied <END>
<BEG> invoked by the write method after the proxied call have return successfully <END>
<BEG> tests if the give exception be cause by this stream <END>
<BEG> resets the bytecount to zero <END>
<BEG> sets the bytecount to count <END>
<BEG> closes the underlying writer <END>
<BEG> reject class name where the supply classnamematcher match for deserialization <SEG> even if they be otherwise accept <END>
<BEG> set the data stream <SEG> component to assume it be ready to be read <END>
<BEG> get the default commandmap <END>
<BEG> get all the mime type know to this command map <END>
<BEG> this method will return an outputstream represent the the data and will throw an ioexception if it can not do so <END>
<BEG> return the default filetypemap for the system <END>
<BEG> add entry to the registry <END>
<BEG> retrieve the subtype of this object <END>
<BEG> the getoutputstream method from the url <END>
<BEG> write the object to the output stream <SEG> use the specific mime type <END>
<BEG> return the dataflavors for this < code > datacontenthandler < code > <END>
<BEG> write out give data a a literal <END>
<BEG> get the right associate with this acl entry <END>
<BEG> ensure the folder be open <END>
<BEG> rename this folder <END>
<BEG> append the give message into this folder <END>
<BEG> get the message corresponding to the give uid <END>
<BEG> get the uid for the specified message <END>
<BEG> remove the right specify in the acl from the entry for the identifier specify in the acl <END>
<BEG> get this message 's folder 's protocol connection <END>
<BEG> get the decoded content-description <END>
<BEG> get the name header <END>
<BEG> get all header-lines <END>
<BEG> get whether or not to use the peek variant of fetch when fetch message content <END>
<BEG> called by imapfolder <END>
<BEG> get a reference to the session <END>
<BEG> using the imap namespace command rfc 2342 <SEG> return a set of folder represent the shared namespaces <END>
<BEG> get the message object for the indicated message number <END>
<BEG> remove expunge message in msg from the array <SEG> return a list of removed message object <END>
<BEG> convert an array of uidsets into an imap sequence range <END>
<BEG> count the total number of element in an array of uidsets <END>
<BEG> remove the specified right from this rights object <END>
<BEG> compute a hash code for this rights object <END>
<BEG> always throw < code > methodnotsupportedexception < code > because the pop3 protocol do n't support multiple folder <END>
<BEG> get all the header for this header_name <END>
<BEG> return non-matching header from this message a an enumeration of header object <END>
<BEG> get match header line a an enumeration of strings <END>
<BEG> return the command that fail <END>
<BEG> return return option a an rfc 1891 string <END>
<BEG> sets the submitter to be use for the rfc 2554 auth= value in the mail from command <END>
<BEG> convert the byte within the specified range of the give byte array into a sign long in the give radix <END>
<BEG> flushes this output stream and force any buffered output byte to be encode out to the stream <END>
<BEG> it be assume that this method will never be call <END>
<BEG> sets the comparator use to order all < tt > logrecord < tt > object prior to format <END>
<BEG> sets the < tt > authenticator < tt > use to login to the email server <END>
<BEG> sets the attachment filter <END>
<BEG> return the trusted host <END>
<BEG> encodes the specified < code > byte < code > to this output stream <END>
<BEG> returns the length of the encoded version of this byte array <END>
<BEG> read the next decoded byte from this input stream <END>
<BEG> reads up to < code > len < code > decode byte of data from this input stream into an array of byte <END>
<BEG> encodes < code > len < code > bytes from the specify < code > byte < code > array start at offset < code > off < code > to this output stream <END>
<BEG> get the mode field from the prefix <END>
<BEG> the adapter which receive connection event <END>
<BEG> invokes the appropriate folderlistener method <END>
<BEG> add the specify user flag to this flags object <END>
<BEG> add all the flag in the give flags object to this flags object <END>
<BEG> remove all flag in the give flags object from this flags object <END>
<BEG> check whether the specify user flag be present in this flags object <END>
<BEG> check whether the two flags object be equal <END>
<BEG> return all the user flag in this flags object <END>
<BEG> returns a clone of this flags object <END>
<BEG> retrieve a rfc2045 style string representation of this content-type <END>
<BEG> get the email address <END>
<BEG> return all non-matching { link javax mail header } object <END>
<BEG> return all match header line a an enumeration of strings <END>
<BEG> set the content-md5 header field of this body part <END>
<BEG> produce the raw byte of the content <END>
<BEG> use the specify file to provide the data for this part <END>
<BEG> returns the value of the rfc 822 from header field <END>
<BEG> set the rfc 822 sender header field <END>
<BEG> set the specified recipient type to the give address <END>
<BEG> add the give address to the specify recipient type <END>
<BEG> return the content a a java object <END>
<BEG> output the message a an rfc 822 format stream <SEG> without specify header <END>
<BEG> compute a hash code for the address <END>
<BEG> convert the give array of newsaddress object into a comma separate sequence of address string <END>
<BEG> set a parameter <END>
<BEG> return the user name <END>
<BEG> equality comparison <END>
<BEG> compute a hashcode for this object <END>
<BEG> set the urlname represent this service <END>
<BEG> get a transport object for the give urlname <END>
<BEG> return an outputstream for the data <END>
<BEG> see the general contract of the < code > skip < code > method of < code > inputstream < code > <END>
<BEG> returns the number of byte that can be read from this input stream without block <END>
<BEG> closes this input stream and release any system resource associate with the stream <END>
<BEG> return the current position in the inputstream <SEG> a an offset from the beginning of the inputstream <END>
<BEG> return a new inputstream represent a subset of the data from this inputstream <SEG> start at < code > start < code > inclusive up to < code > end < code > exclusive <END>
<BEG> returns the object that cause this exception <END>
<BEG> specifies a comment that describe a cookie 's purpose <END>
<BEG> specifies the domain within which this cookie should be present <END>
<BEG> returns the maximum age of the cookie <SEG> specify in second <SEG> by default <SEG> < code > -1 < code > indicate the cookie will persist until browser shutdown <END>
<BEG> specifies a path for the cookie to which the client should return the cookie <END>
<BEG> indicates to the browser whether the cookie should only be send use a secure protocol <SEG> such a https or ssl <END>
<BEG> returns < code > true < code > if the browser be send cooky only over a secure protocol <SEG> or < code > false < code > if the browser can send cooky use any protocol <END>
<BEG> returns a string representation of this tagattributeinfo <SEG> suitable for debug purpose <END>
<BEG> get the path to the large icon <END>
<BEG> an array describe the function that be define in this tag library <END>
<BEG> get the functioninfo for a give function name <SEG> look through all the function in this tag library <END>
<BEG> the body of the & lt ; name-from-attribute & gt ; element <END>
<BEG> filter for character <END>
<BEG> returns true if the step 's depth be unlimited <SEG> false otherwise <END>
<BEG> < p > returns the current function resolver < p > return current function resolver <END>
<BEG> development drop number <END>
<BEG> returns the user password <END>
<BEG> invoked when a < code > work < code > instance have be reject <END>
<BEG> clones the give object <END>
<BEG> set the port member param p int to set <END>
<BEG> non-javadoc see java util map $ entry # getvalue <END>
<BEG> get the string encode version of this object since v1 0 <END>
<BEG> determines if this attribute have an associate value <END>
<BEG> sets the type audio <SEG> video etc of the medium define by this description <END>
<BEG> sets the protocol over which this medium should be transmit <END>
<BEG> get the sessionversion member <END>
<BEG> returns the repeat interval in second <END>
<BEG> set the list of offset <END>
<BEG> sets whether the field will be output a a typed time or a integer value <END>
<BEG> an introspection base predicate match use a template object <END>
<BEG> formatter with a give starting indentation <END>
<BEG> sets the start time of the conference session <END>
<BEG> sets the hashtable of adjustment time <SEG> where : key = date <END>
<BEG> encode to a canonical form <END>
<BEG> removes the specified bandwidth type <END>
<BEG> get the typed time <END>
<BEG> sets information about the originator of the session <END>
<BEG> returns value of the info field i= of this object <END>
<BEG> sets the i= field of this object <END>
<BEG> sets the uri to the location of more detail about the session <END>
<BEG> returns a phone number to contact for further information about the session <END>
<BEG> sets a timefield indicate the start <SEG> stop <SEG> repetition and time zone information of the session <END>
<BEG> returns the bandwidth of the specify type <END>
<BEG> returns the integer value of the specify bandwidth name <END>
<BEG> sets the value of the specify bandwidth type <END>
<BEG> sets encryption key information <END>
<BEG> returns the set of attribute for this description a a vector of attribute object in the order they be parse <END>
<BEG> removes the attribute specify by the value parameter <END>
<BEG> adds the specified attribute to this description object <END>
<BEG> creates a uri base on give uri string <END>
<BEG> sets the uri address of this address <END>
<BEG> retruns true if the two objects be equal <SEG> false otherwise <END>
<BEG> get the port from the authority field <END>
<BEG> set the qheaders member param parms query header to set <END>
<BEG> set the maddr parameter <END>
<BEG> set the telephone subscriber field <END>
<BEG> returns the value of the < code > maddr < code > parameter <SEG> or null if this be not set <END>
<BEG> returns the value of the name parameter <SEG> or null if it be not set <END>
<BEG> this method determine if this be a uri with a scheme of sip or sip <END>
<BEG> sets the value of the < code > maddr < code > parameter of this sipuri <END>
<BEG> return true if the isdn subaddress exists <END>
<BEG> remove the isdn subaddress if it exist <END>
<BEG> set the isdn subaddress for this structure <END>
<BEG> returns the value of the scheme of this uri <SEG> for example sip <SEG> sip or tel <END>
<BEG> get contentencoding field return string <END>
<BEG> non-javadoc see android gov nist javax sip header addressparameters # setaddress android javax sip address address <END>
<BEG> non-javadoc see android gov nist javax sip header addressparameters # equal java lang object <END>
<BEG> returns the alertinfo value of this alertinfoheader <END>
<BEG> return body encode in canonical form <END>
<BEG> gets an iterator of all the method of the allowheader <END>
<BEG> sets the nonce of the wwwauthenicateheader to the < var > nonce < var > parameter value <END>
<BEG> sets the opaque value of the wwwauthenicateheader to the new < var > opaque < var > parameter value <END>
<BEG> sets the response of the authenticationinfoheader to the new < var > response < var > parameter value <END>
<BEG> get the callid field <END>
<BEG> compare two call identifier for equality <END>
<BEG> set the expiry time in second <END>
<BEG> set the q-value parameter param qvalue float to set <END>
<BEG> non-javadoc see android javax sip header contactheader # setwildcard <END>
<BEG> gets the language value of the contentlanguageheader <END>
<BEG> sets the language parameter of this contentlanguageheader <END>
<BEG> get the content subtype <END>
<BEG> get the from-tag parameter from the address parm list <END>
<BEG> boolean function return true if the tag exist <END>
<BEG> remove tag member <END>
<BEG> path header param address - address return newly create path header throw nullpointerexception throw parseexception <END>
<BEG> service-route header param address - address return newly create service-route header throw nullpointerexception <END>
<BEG> create a new request line from a string <END>
<BEG> < p > add another event charging function ecf address to this header < p > param ecfaddress - the address to set in the ecf parameter throw parseexception <END>
<BEG> < p > remove a event charging function ecf address set in this header < p > param ecfaddress - the address in the ecf parameter to remove throw parseexception if the address be not remove <END>
<BEG> < p > get all the event charging function ecf addresses set in this header < p > return listiterator that constains all ccf address of this header <END>
<BEG> < p > set the icid-generated-at parameter < p > param host - value to set in the icid-generated-at parameter throw parseexception <END>
<BEG> < p > get the orig-ioi parameter value < p > return the orig-ioi parameter value <END>
<BEG> set the medium authorization token <END>
<BEG> get protocol return prot parameter value <END>
<BEG> get server spi return spi-s parameter value <END>
<BEG> sets the major-version argument of this mimeversionheader to the supply < var > majorversion < var > value <END>
<BEG> return canonical form <END>
<BEG> return encoding of value of the header <END>
<BEG> gets the cseq sequence number of this rackheader <END>
<BEG> deprecate see android javax sip header rackheader # setrseqnumber int <END>
<BEG> non-javadoc see android gov nist javax sip header siprequestline # geturi <END>
<BEG> compare for equality <END>
<BEG> remove duration field <END>
<BEG> encode the body of this header the stuff that follow headername <END>
<BEG> gets the date of dateheader <END>
<BEG> get the first element of this list <END>
<BEG> get the imbedded link list <END>
<BEG> convert to a string representation for printing <END>
<BEG> an introspection base string format method <END>
<BEG> gets the retry after value of the subscriptionstateheader <END>
<BEG> return canonical form of the header <END>
<BEG> sets the option tag value to the new supplied < var > optiontag < var > parameter <END>
<BEG> accessor for the parameter field return parameter field <END>
<BEG> set the port part of this viaheader to the newly supply < code > port < code > parameter <END>
<BEG> returns the port part of this viaheader <END>
<BEG> sets host of warningheader param host string to set throw parseexception if host be not accept by implementation <END>
<BEG> return true if this have an associate list object <END>
<BEG> get the default common useragentheader <END>
<BEG> return true if the header belong only in a response <END>
<BEG> encode the message a a byte array <END>
<BEG> get the contact list of header null if one do not exist <END>
<BEG> set the call id header <END>
<BEG> get the message body a a string <END>
<BEG> set the message content a an array of byte <END>
<BEG> return true if the sipmessage have a header of the give name <END>
<BEG> return true if the message have a to header tag <END>
<BEG> non-javadoc see android javax sip message message # addfirst android javax sip header header <END>
<BEG> return true if this be a null request i e <END>
<BEG> get the port from the topmost via header <END>
<BEG> parse the string message return sipheader acceptlanguage object throw parseexception if the message do not respect the spec <END>
<BEG> parse the alertinfo string header return sipheader alertinfolist object throw sipparseexception if the message do not respect the spec <END>
<BEG> test program <END>
<BEG> parse the string message and generate the recordroute list object return sipheader the recordroute list object throw parseexception if error occur during the parsing <END>
<BEG> non-javadoc see android gov nist javax sip parser messageparserfactory # createmessageparser android gov nist javax sip stack siptransactionstack <END>
<BEG> get the remote port from which response be receive <END>
<BEG> get the remote ip addr <END>
<BEG> log a message into the log directory <END>
<BEG> set the trace level for the stack <END>
<BEG> adds a new event listener to this dialog <END>
<BEG> return true if be server <END>
<BEG> set the remote tag <END>
<BEG> returns true if this dialog be secure i e <END>
<BEG> set the assigned flag to true <END>
<BEG> non-javadoc see android gov nist javax sip dialogext # isreleasereferences <END>
<BEG> non-javadoc see android gov nist javax sip dialogext # setreleasereferences boolean <END>
<BEG> see android gov nist javax sip stack sipservertransaction # sendresponse android javax sip message response <END>
<BEG> see android gov nist javax sip stack sipservertransaction # setdialog android gov nist javax sip stack sipdialog <SEG> java lang string <END>
<BEG> close the message channel <END>
<BEG> run method for the thread that get create for each accept socket <END>
<BEG> returns timedescription object with the specified property <END>
<BEG> returns an instance of a sipfactory <END>
<BEG> gets the server transaction associate with this transactionterminatedevent <END>
<BEG> override this method if the chunklistener will do something after the chunk end <END>
<BEG> override this method if the itemprocesslistener will do something after the item be process <END>
<BEG> override this method if the itemreadlistener will do something when the itemreader readitem method throw an exception <END>
<BEG> override this method to take action after partitioned step processing end <END>
<BEG> this method should not be call <END>
<BEG> set the second attribute <END>
<BEG> set the day of the month attribute <END>
<BEG> return the value of the day of the week attribute <END>
<BEG> set the start date <END>
<BEG> return the < code > info < code > object make available to timer callback <END>
<BEG> return whether the timer be persistent <END>
<BEG> returns the class instance return the class instance <END>
<BEG> sets the < code > locale < code > for this instance <END>
<BEG> set the elcontext use for parse and evaluate el expression <END>
<BEG> receives notification after an el expression be evaluate param context the elcontext param expression the el expression string to be evaluate <END>
<BEG> returns the parameter type of the method return the parameter type of the method <END>
<BEG> construct if need and return a default functionmapper <END>
<BEG> returns a { link callable } object that also implement { link managedtask } interface so it can receive notification of lifecycle event with the provide { link managedtasklistener } and to provide additional execution property when the task be submit to a { link managedexecutorservice } or a { link managedscheduledexecutorservice } <END>
<BEG> return an object of the specify value <END>
<BEG> < p > set the localized summary text < p > param summary the new localized summary text <END>
<BEG> < p class= changed_added_2_0 > construct an absolute url to this < code > navigationcase < code > instance use { link javax face application viewhandler # getresourceurl } on the path portion of the url < p > param context the { link facescontext } for the current request return the resource url <END>
<BEG> < p class= changed_added_2_0 > return the < code > & lt ; from-outcome & gt ; < code > for this < code > & lt ; navigation-case & gt ; < code > < p > return the from outcome <END>
<BEG> < p class= changed_added_2_0 > return the < code > & lt ; redirect & gt ; < code > value for this < code > & lt ; navigation-case & gt ; < code > <END>
<BEG> < p class= changed_added_2_3 > return a { code stream } possibly lazily populate by walk the resource tree root at a give initial path <END>
<BEG> < p class= changed_added_2_0 > return a non-empty < code > collection & lt ; string & gt ; < code > of component identifier that will be use to identify component that should be process during the < code > render < code > phase of the request processing lifecycle < p > < p > note that the return collection may be unmodifiable <END>
<BEG> < p class= changed_added_2_0 > sets the component identifier that will be use to identify component that should be process during the < code > render < code > phase of the request processing lifecycle < p > param render the id of component to render since 2 0 <END>
<BEG> < p class= changed_added_2_0 > return the immediate status of this behavior < p > return the immediate status <END>
<BEG> < p class= changed_added_2_0 > sets the immediate status of this behavior < p > param immediate the flag to be set <END>
<BEG> < p class= changed_added_2_2 > tests whether the resetvalues attribute be specify <END>
<BEG> < p class= changed_added_2_0 > remove the specify { link ajaxbehaviorlistener } from the set of listener register to receive event notification from this { link ajaxbehavior } < p > param listener the { link ajaxbehaviorlistener } to be remove throws nullpointerexception if < code > listener < code > be < code > null < code > since 2 0 <END>
<BEG> < p class= changed_added_2_0 > implementation of { link javax face component stateholder # settransient } <END>
<BEG> < p class= changed_added_2_0 > remove the specify { link behaviorlistener } from the set of listener register to receive event notification from this { link behavior } <END>
<BEG> see statehelper # remove java io serializable <SEG> object <END>
<BEG> < p > return the value of the < code > onclick < code > property < p > return the property value < p > contents : javascript code execute when a pointer button be click over this element <END>
<BEG> < p > return the value of the < code > onkeypress < code > property < p > return the property value < p > contents : javascript code execute when a key be press and release over this element <END>
<BEG> < p > return the value of the < code > headerclass < code > property < p > return the property value < p > contents : space-separated list of css style class e that will be apply to any header generate for this column <END>
<BEG> < p > return the value of the < code > onblur < code > property < p > return the property value < p > contents : javascript code execute when this element lose focus <END>
<BEG> < p > return the value of the < code > render < code > property < p > return the property value < p > contents : this be a space separated list of client identifier of component that will participate in the render portion of the request processing lifecycle <END>
<BEG> < p > return the value of the < code > rootelement < code > property < p > return the property value < p > contents : < div class= changed_added_2_1 > the root xml element < div > <END>
<BEG> < p > return the value of the < code > accept < code > property < p > return the property value < p > contents : list of content type that a server processing this form will handle correctly <END>
<BEG> < p > return the value of the < code > width < code > property < p > return the property value < p > contents : override for the width of this image <END>
<BEG> < p > return the value of the < code > errorstyle < code > property < p > return the property value < p > contents : css style s to apply to any message with a severity class of error <END>
<BEG> < p > return the header facet of the column if any <END>
<BEG> < p > set the header facet of the column <END>
<BEG> < p class= changed_added_2_0 > this be a default implementation of { link javax face component behavior clientbehaviorholder # geteventnames } <END>
<BEG> < p > sets the fully qualified name of the type to import the constant field value for <END>
<BEG> < p > sets name of request scope attribute under which constant will be expose a a map <END>
<BEG> sets the local value set state for this component <END>
<BEG> < p class= changed_added_2_0 > sets the < code > outcome < code > property of the < code > uioutcometarget < code > <END>
<BEG> < p > set the local value of the select state of this component <END>
<BEG> < p > set the localized label for this selection item < p > param itemlabel the new localized label <END>
<BEG> < p > return the server value for this selection item < p > return the item value <END>
<BEG> < p class= changed_added_2_3 > sets the name of the radio button group <END>
<BEG> < p > set the render kit identifier of the { link javax face render renderkit } associate with this view <END>
<BEG> < p > return the { link methodexpression } that will be invoke after this view be render < p > return the { link methodexpression } that will be invoke after this view be render <END>
<BEG> < p class= changed_added_2_0 > remove argument < code > component < code > <SEG> which be assume to represent a resource instance <SEG> a a resource to this view <END>
<BEG> returns the scope of the websocket channel <END>
<BEG> sets the javascript event handler function that be invoke when the websocket be open <END>
<BEG> < p class= changed_modified_2_3 > if this factory have be decorate <SEG> the implementation do the decorating may override this method to provide access to the implementation be wrap < p > <END>
<BEG> < p > return the mime content-type for this response <END>
<BEG> < p > set the environment-specific response to be return by subsequent call to { link # getresponse } <END>
<BEG> < p class= changed_added_2_0 > add the give name and value to the response header < p > < p > < em > servlet : < em > this must be perform by call the < code > javax servlet http httpservletresponse < code > < code > addheader < code > method < p > < p > the default implementation throw < code > unsupportedoperationexception < code > and be provide for the sole purpose of not break exist application that extend this class < p > param name the name of the response header <END>
<BEG> < p class= changed_added_2_0 > sets the http status code for the response < p > < p > < em > servlet : < em > this must be perform by call the < code > javax servlet http httpservletresponse < code > < code > setstatus < code > method < p > < p > the default implementation throw < code > unsupportedoperationexception < code > and be provide for the sole purpose of not break exist application that extend this class < p > param statuscode an http status code since 2 0 <END>
<BEG> < p class= changed_added_2_0 > write the start of an insert operation where the content will be insert after the specified target node < p > param targetid id of the node insertion should occur after throw ioexception if an input output error occur since 2 0 <END>
<BEG> < p class= changed_added_2_0 > write the end of an insert operation < p > throw ioexception if an input output error occur since 2 0 <END>
<BEG> < p > set the < code > locale < code > to be use when parse number <END>
<BEG> < p > return the number type to be use when format and parse number <END>
<BEG> < p class= changed_added_2_0 > return the < code > phaseid < code > which be be process when the exception be throw <END>
<BEG> return < code > true < code > if the exception occur during the < code > after phase < code > processing for a particular lifecycle phase <END>
<BEG> < p > return the current local value of the source { link uicomponent } <END>
<BEG> < p > the implementation must inspect the current request and return the component state object pass to it on a previous invocation of < code > writestate < code > < p > deprecate this method have be replace by { link # getstate } <END>
<BEG> < p > set the minimum value to be enforce by this { link validator } < p > param minimum the new minimum value <END>
<BEG> < p > return the minimum length to be enforce by this { link validator } <SEG> or < code > 0 < code > if the minimum have not be set < p > return the minimum <END>
<BEG> < p > return the minimum value to be enforce by this { link validator } < p > return the minimum <END>
<BEG> < p class= changed_added_2_2 > utility method to extract view metadata from the provide { link uiviewroot } <END>
<BEG> < p > set the attribute value < p > param value the new attribute value <END>
<BEG> < p > set an override for the rendered attribute < p > param render the new value for render attribute <END>
<BEG> < p > set the identifer of the { link validator } instance to be create <END>
<BEG> property use to specify custom name strategy <END>
<BEG> property use to specify custom deserializers <END>
<BEG> decodes a passed json-pointer string a define by < a href= http : tool ietf org html rfc6901 > rfc 6901 < a > <END>
<BEG> adds a value to the array a a { link jsonnumber } at the specified position <END>
<BEG> adds a { link jsonarray } from an array builder to the array at the specified position <END>
<BEG> replaces a value in the array with the specified value a a { link jsonnumber } at the specified position <END>
<BEG> replaces a value in the array with the specified value a a { link jsonarray } from an array builder at the specified position <END>
<BEG> remove the value in the array at the specified position <END>
<BEG> creates a { code jsonarraybuilder } instance <SEG> initialize with an array <END>
<BEG> return the jsonvalue a a jsonarray return the jsonvalue a a jsonarray throw classcastexception if the jsonvalue be not a jsonarray since 1 1 <END>
<BEG> advance the parser to { code end_object } <END>
<BEG> clear all of the user flag <END>
<BEG> return a string representation of this flags object <END>
<BEG> return the mime type string <SEG> without the parameter <END>
<BEG> match with the specify contenttype object <END>
<BEG> convert this address into a rfc 822 rfc 2047 encode address <END>
<BEG> parse the inputstream from our datasource <SEG> construct the appropriate mimebodyparts <END>
<BEG> convert this parameterlist into a mime string <END>
<BEG> return the search term <END>
<BEG> get the authentication result <END>
<BEG> used to obtain the certicicate chain set within the callback <END>
<BEG> used by the callbackhandler to set the trusted certificate keystore within the callback <END>
<BEG> set the system-wide authconfigfactory implementation <END>
<BEG> sets the credential a parameter in this instance <END>
<BEG> determines if the argument permission be imply by this webresourcepermission <END>
<BEG> returns the hash code value for this webuserdatapermission <END>
<BEG> gets the servletrequest from this asyncevent <END>
<BEG> gets the domain name of this cookie <END>
<BEG> gets the supplier of trailer header <END>
<BEG> receives notification that an attribute have be remove from a session <END>
<BEG> notifies the object that it be be unbound from a session and identify the session <END>
<BEG> returns the default factory for this implementation <END>
<BEG> begins iterate by process the first item <END>
<BEG> returns < code > true < code > if this attribute be to be pass a < code > methodexpression < code > so that expression evaluation can be defer <END>
<BEG> release any data keep by this instance for validation purpose <END>
<BEG> writes a < code > string < code > to the client <SEG> without a carriage return-line feed crlf character at the end <END>
<BEG> the reason phrase associate with this closereason <END>
<BEG> return the extension <SEG> in order of preference <SEG> favorite first <SEG> that this client would like to use for it session <END>
<BEG> return the unmodifiable list of decoder this client will use <END>
<BEG> checks if the primary type be a wildcard <END>
<BEG> create a { link variantlistbuilder } initialize with a set of supported encoding <END>
<BEG> sets the key to the first object that encounter an error in the registry <END>
<BEG> gets the header block process by this handler <END>
<BEG> setter for property enable <END>
<BEG> sets the < code > value < code > associate with the specify key <END>
<BEG> invoked when a mouse button have be press on a component <END>
<BEG> returns the manager at the specified position in manager list <END>
<BEG> returns the dynamic helpset for an object <END>
<BEG> invoked when a key be press <END>
<BEG> removes the last history entry <END>
<BEG> gets the document title <END>
<BEG> removes the listener a a listener of the specify type <END>
<BEG> returns the navigator of this entry return the navigator name <END>
<BEG> return the end position of this highlighting event <END>
<BEG> returns whether or not this item be leaf <END>
<BEG> returns the xml element string <END>
<BEG> invoked when the mouse have be click on a component <END>
<BEG> create a navigator for a give model <END>
<BEG> fires a helpsetremoved event <END>
<BEG> adds a subhelpset to the current list <END>
<BEG> gets a defaultmutabletreenode represent the information in this view instance <END>
<BEG> visits a give id <END>
<BEG> hidess displays the toolbar in the helpui <END>
<BEG> determines if the navigators be hide display in the helpui <END>
<BEG> sets the helpmodel that provide the data <END>
<BEG> return the helpviewerui that provide the current look and feel <END>
<BEG> determines if this instance of a jhelpnavigator can merge it data with another one <END>
<BEG> returns a list of select item <END>
<BEG> gets the name of this navigator view <END>
<BEG> merge nodes <END>
<BEG> merges in the navigational data from another tocview <END>
<BEG> invoked when the component 's position change <END>
<BEG> invoked when the component have be make invisible <END>
<BEG> handles action from the jtextfield component for search <END>
<BEG> determines if highlight have change <END>
<BEG> returns the color the text be draw with when the node be not select <END>
<BEG> returns the background color to be use for unselected node <END>
<BEG> sets the desire cell renderer on this tree <END>
<BEG> processes an idchanged event <END>
<BEG> returns the onitem cursor <END>
<BEG> removes a navigator view <END>
<BEG> returns icon associate with the view <END>
<BEG> create a new popup for a give helpset and helpset presentation name <END>
<BEG> displays the presentation to the user <END>
<BEG> shows this id a content relative to the top helpset for the presentation instance -- helpvisitlisteners be notify <END>
<BEG> displays this id -- helpvisitlisteners be notify <END>
<BEG> notifies that a search have complete <END>
<BEG> requests the presentation be locate at a give position <END>
<BEG> requests the location of the presentation <END>
<BEG> returns the default category open image id <END>
<BEG> returns the presentation see presentation <END>
<BEG> returns the presentation name see presentation <END>
<BEG> gets an enumeration of all the ids in a map <END>
<BEG> determines if the url correspond to an id in the map <END>
<BEG> determines the id that be closest to this url with a give anchor <END>
<BEG> set the activation window <END>
<BEG> determines the current navigator <END>
<BEG> set the currentview to the navigator with the same name a the < tt > name < tt > parameter <END>
<BEG> determines if the presentation be display <END>
<BEG> hides shows view <END>
<BEG> return the instantiated javabean component <END>
<BEG> set the default commandmap <END>
<BEG> return the dataflavors in which this data be available <END>
<BEG> < p > return < code > true < code > if there be < code > wrappeddata < code > available <SEG> and the current value of < code > rowindex < code > be great than or equal to zero <SEG> and less than the size of the list <END>
<BEG> < p > if there be < code > wrappeddata < code > available <SEG> return the length of the list <END>
<BEG> throw javax face facesexception  throw illegalargumentexception  <END>
<BEG> < p > if row data be available <SEG> return the array element at the index specify by < code > rowindex < code > <END>
<BEG> throw classcastexception if < code > data < code > be non- < code > null < code > and be not a < code > result < code > <END>
<BEG> throw facesexception  throw illegalargumentexception  <END>
<BEG> return any saved passwordauthentication for this store or transport urlname <END>
<BEG> returns the hash code for this passwordcredential return hash code for this passwordcredential <END>
<BEG> gets the value of the mime header whose name be content-location <END>
<BEG> gets the soap header contain in this { code soapmessage } object <END>
<BEG> < p > convert the string argument into an int value <END>
<BEG> < p > converts the string argument into an array of byte <END>
<BEG> < p > converts an int value into a string <END>
<BEG> < p > converts an array of byte into a string <END>
<BEG> convenience method for get the current nonamespaceschemalocation <END>
<BEG> convenience method for set the nonamespaceschemalocation <END>
<BEG> convenience method for get the format output flag <END>
<BEG> convenience method for set the fragment flag <END>
<BEG> set the offset field on this event locator <END>
<BEG> obtains the value of the days field a an integer value <SEG> or 0 if not present <END>
<BEG> < p > returns the length of the duration in milli-seconds < p > < p > if the second field carry more digit than milli-second order <SEG> those will be simply discarded or in other word <SEG> round to zero <END>
<BEG> indicates whether or not the factory be configure to produce parser which ignore ignorable whitespace in element content <END>
<BEG> < p > set the node that will contain the result dom tree < p > < p > in practice <SEG> the node should be a { link org w3c dom document } node <SEG> a { link org w3c dom documentfragment } node <SEG> or a { link org w3c dom element } node <END>
<BEG> get the base id url or system id from where urls will be resolve <END>
<BEG> get a sax2 { link org xml sax ext lexicalhandler } for the output <END>
<BEG> set the xmlreader to be use for the source <END>
<BEG> get the sax inputsource to be use for the source <END>
<BEG> < p > get the < code > xmlstreamwriter < code > use by this < code > staxresult < code > < p > < p > < code > xmlstreamwriter < code > will be < code > null < code > if this < code > staxresult < code > be create with a < code > xmleventwriter < code > < p > return < code > xmlstreamwriter < code > use by this < code > staxresult < code > <END>
<BEG> set the public identifier for this source <END>
<BEG> method setlocator set an instance of a sourcelocator object that specify where an error occur <END>
<BEG> returns the cause of this throwable or < code > null < code > if the cause be nonexistent or unknown <END>
<BEG> initializes the < i > cause < i > of this throwable to the specify value <END>
<BEG> < p > print stack trace to specify < code > printwriter < code > < p > param s print stack trace to this < code > printwriter < code > <END>
<BEG> < p > creates an instance of the specify and return it < p > param classname fully qualified class name to be instanciated <END>
<BEG> creates and publishes an endpoint for the specified implementor object at the give address <END>
<BEG> gets the http status code <END>
<BEG> gets the embedded { code soapfault } instance <END>
<BEG> finds the implementation { code class } object for the give factory name <SEG> or if that fail <SEG> find the { code class } object for the give fallback class name <END>
<BEG> adds an extension attribute to the { code w3cendpointreference } instance 's { code wsa : endpointreference } element <END>
<BEG> removes an attribute from this credential instance <END>
<BEG> determine the ordering of identity object <END>
<BEG> create the key a an object <END>
<BEG> prints this < code > jdoexception < code > and it backtrace to the specify print stream <END>
<BEG> get object id for an array of instance <END>
<BEG> return a copy of the jdo identity associate with the parameter instance <END>
<BEG> tests whether the parameter instance have be detach <END>
<BEG> remove a stateinterrogation from the list <END>
<BEG> returns the type of the managed field of the persistence-capable class <END>
<BEG> write a portion of a string <END>
<BEG> < p > the implementation of this method must perform the following step : < ul > < li > inject the supported resource per the servlet 2 5 specification into the provided object < li > < ul > < p > < p > this method < em > must not < em > invoke any method annotate with < code > postconstruct < code > param managedbean the target manage bean throw com sun face spi injectionproviderexception if an error occur during resource injection <END>
<BEG> < p > the implemenation of this method must invoke any method mark with the < code > postconstruct < code > annotation per the common annotations specification <END>
<BEG> get a set of root resource and provider instance <END>
<BEG> generate hash code from cache control property <END>
<BEG> compares obj to this tag to see if they be the same consider weakness and value <END>
<BEG> check if this medium type be compatible with another medium type <END>
<BEG> create a new responsebuilder for a temporary redirection <END>
<BEG> create a new instance represent a relative uri initialize from a uri path <END>
<BEG> create a new instance represent a relative uri initialize from a root resource class <END>
<BEG> set the runtime delegate that will be use by jax-rs class <END>
<BEG> sets an long attribute <END>
<BEG> sets the target implementation type require <END>
<BEG> creates a new { link javax money convert conversioncontextbuilder } instance <END>
<BEG> set the provider to be consider <END>
<BEG> gets the second currency at fault <END>
<BEG> checks if a { link javax money convert currencyconversion } be available for the give parameter <END>
<BEG> access an instance of { link currencyconversion } use the give provider a a provider chain <END>
<BEG> creates a new { link providercontext } with the data from this builder instance <END>
<BEG> create a new providercontextbuilder <SEG> hereby use the give { link providercontext } 's value a default <END>
<BEG> sets the currency code <SEG> or the regular expression to select code <END>
<BEG> set the numeric code <END>
<BEG> creates a new instance of { link javax money currencyquery } <END>
<BEG> creates a new builder instance <SEG> initialize with the data from this one <END>
<BEG> sets a style 's id <END>
<BEG> returns the string that be be parse <END>
<BEG> checks if a { code monetaryamount } be positive <END>
<BEG> checks if a { code monetaryamount } be positive or zero <END>
<BEG> get the maximal precision to be support <END>
<BEG> get the monetaryamount implementation class <END>
<BEG> get the custom round id <END>
<BEG> allows to convert a instance into the corresponding { link javax money currencycontextbuilder } <SEG> which allow to change the value and of another { link javax money currencycontext } instance <END>
<BEG> executes the query and return the { link javax money monetaryamountfactory } implementation type find <SEG> if there be only one type <END>
<BEG> allows to quickly check <SEG> if a { link javax money convert currencyconversion } be accessible for the give { link javax money convert conversionquery } <END>
<BEG> < div class= changed_added_3_0 > sets the wrapped object <END>
<BEG> return the wrapped object <END>
<BEG> replaces the current value of the first header entry whose name match the give name with the give value <SEG> add a new header if no exist header name match <END>
<BEG> returns the specified unit multiply by the factor < code > 1024 < sup > 3 < sup > < code > binary prefix <END>
<BEG> exponent part of the associated factor in { code base^exponent } representation <END>
<BEG> returns the specified unit multiply by the factor < code > 10 < sup > 21 < sup > < code > param < q > type of the quantity measure by the unit <END>
<BEG> returns the { link serviceprovider } with the specify name <END>
<BEG> replaces the current { link serviceprovider } <END>
<BEG> sets the value of this axis angle to the specify x <SEG> y <SEG> z <SEG> angle <END>
<BEG> sets the value of this axis-angle to the rotational component of the pass matrix <END>
<BEG> returns a string that contain the value of this axisangle4d <END>
<BEG> set the axis angle <SEG> in radian < br > an axis angle be a rotation angle about the vector x <SEG> y <SEG> z <END>
<BEG> set a new value for < i > y < i > coordinate <END>
<BEG> sets the value of this axisangle4f to the specify axis and angle <END>
<BEG> sets the r <SEG> g <SEG> b value of this color3f object to those of the specify awt color object <END>
<BEG> returns a new awt color object initialize with the r <SEG> g <SEG> b value of this color3f object <END>
<BEG> sets the r <SEG> g <SEG> b <SEG> a value of this color4f object to those of the specify awt color object <END>
<BEG> returns a new awt color object initialize with the r <SEG> g <SEG> b <SEG> a value of this color4f object <END>
<BEG> sets the value of this matrix to that of the matrix4f provide <END>
<BEG> places the value of the specified row into the vector parameter <END>
<BEG> places the value in the upper 4x4 of this gmatrix into the matrix m1 <END>
<BEG> copy the value from the vector into the specified row of this matrix <END>
<BEG> sets the value of this vector to the normalization of vector v1 <END>
<BEG> normalizes this vector in place <END>
<BEG> changes the size of this vector dynamically <END>
<BEG> sets the value of this vector to the value in tuple param tuple the source for the new gvector 's new value <END>
<BEG> creates a new object of the same class a this object <END>
<BEG> computes the l-1 manhattan distance between this point and point p1 <END>
<BEG> computes the l-infinite distance between this point and point p1 <END>
<BEG> sets the x <SEG> y <SEG> z component of this point to the corresponding component of tuple t1 <END>
<BEG> sets the value of this tuple to the vector sum of itself and tuple t1 <END>
<BEG> sets the value of this tuple to the vector difference of itself and tuple t1 this = this - t1 <END>
<BEG> clamps the maximum value of the tuple parameter to the max parameter and place the value into this tuple <END>
<BEG> clamps the maximum value of this tuple to the max parameter <END>
<BEG> linearly interpolates between tuples t1 and t2 and place the result into this tuple : this = 1-alpha t1 + alpha t2 <END>
<BEG> linearly interpolate between this tuple and tuple t1 and place the result into this tuple : this = 1-alpha this + alpha t1 <END>
<BEG> sets the value of this tuple from the 2 value specify in the array <END>
<BEG> sets the value of this tuple to the value of the tuple2f argument <END>
<BEG> copies the value of the element of this tuple into the array t param t the array that will contain the value of the vector <END>
<BEG> sets the value of this tuple to the scalar multiplication of tuple t1 <END>
<BEG> clamps the tuple parameter to the range [ low <SEG> high ] and place the value into this tuple <END>
<BEG> sets each component of the tuple parameter to it absolute value and place the modified value into this tuple <END>
<BEG> sets the value of this tuple to the specify coordinate in the array of length 2 <END>
<BEG> set < i > x < i > <SEG> the first value <END>
<BEG> sets the value of this tuple to the difference of tuples t1 and t2 this = t1 - t2 <END>
<BEG> sets the value of this tuple to the difference of itself and t1 this = this - t1 <END>
<BEG> sets each component of this tuple to it absolute value <END>
<BEG> sets the value of this tuple to the scalar multiplication of the scale factor with this <END>
<BEG> copies the value of this tuple into the array t param t be the array <END>
<BEG> copies the value of this tuple into the tuple t param t be the target tuple <END>
<BEG> sets the value of this tuple to the scalar multiplication of tuple t1 plus tuple t2 this = s t1 + t2 <END>
<BEG> sets the value of the data member of this tuple to the value of the argument tuple t1 <END>
<BEG> gets the value of this tuple and place it into the tuple4d argument of length four in x <SEG> y <SEG> z <SEG> w order <END>
<BEG> computes the dot product of the this vector and vector v1 <END>
<BEG> returns the dot product of this vector and vector v1 <END>
<BEG> sets the new acquireretyattemps <END>
<BEG> helper method param obj item to print return string for pretty printing <END>
<BEG> gets an array of column name indicate the column that should be return from the inserted row or row <END>
<BEG> closes the connection which may be null <END>
<BEG> convert an opaque time-stamp return by currenttime into nanosecond <END>
<BEG> remove a value from the bag <END>
<BEG> add a new object to the bag for others to borrow <END>
<BEG> get the int value of a transaction isolation level by name <END>
<BEG> fair retrieval of an object in the queue <END>
<BEG> request an item from the queue asynchronously return - a future pending the result from the queue poll request <END>
<BEG> returns a function which perform a map lookup <END>
<BEG> returns the first of two give parameter that be not { code null } <SEG> if either be <SEG> or otherwise throw a { link nullpointerexception } <END>
<BEG> splits { code sequence } into string component and return them a an immutable list <END>
<BEG> returns the current value for this system property by delegate to { link system # getproperty string } <END>
<BEG> returns a supplier which cache the instance retrieve during the first call to { code get } and return that value on subsequent call to { code get } <END>
<BEG> returns a supplier whose { code get } method synchronizes on { code delegate } before call it <SEG> make it thread-safe <END>
<BEG> returns { code true } if the collection { code self } contain all of the element in the collection { code c } <END>
<BEG> pseudoconstructor for serialization support <END>
<BEG> creates a fresh entry with the specify object at the specified position in the entry array <END>
<BEG> resizes the internal entry array to the specify capacity <SEG> which may be great or less than the current capacity <END>
<BEG> moves the last entry in the entry array into { code dstindex } <SEG> and nulls out it old position <END>
<BEG> returns a new <SEG> empty { code enumhashbimap } use the specify key type <END>
<BEG> returns a fluent iterable that combine several iterables <END>
<BEG> this method be rewrite in java from an intermediate step of the murmur hash function in http : code google com p smhasher source browse trunk murmurhash3 cpp <SEG> which contain the following header : murmurhash3 be write by austin appleby <SEG> and be place in the public domain <END>
<BEG> returns a new range set consisting of the intersection of this range set and { code other } <END>
<BEG> returns a fresh { link internerbuilder } instance <END>
<BEG> returns a new thread-safe interner which retain a strong reference to each instance it have intern <SEG> thus prevent these instance from be garbage-collected <END>
<BEG> returns a new thread-safe interner which retain a weak reference to each instance it have intern <SEG> and so do not prevent these instance from be garbage-collected <END>
<BEG> traverses an iterator and remove every element that belong to the provide collection <END>
<BEG> returns a string representation of { code iterator } <SEG> with the format { code [ e1 <SEG> e2 <SEG> <SEG> en ] } <END>
<BEG> advances { code iterator } { code position + 1 } time <SEG> return the element at the { code position } th position or { code defaultvalue } otherwise <END>
<BEG> constructs an empty { code linkedlistmultimap } with enough capacity to hold the specified number of key without rehash <END>
<BEG> returns an unmodifiable list contain the specify first element and back by the specified array of additional element <END>
<BEG> returns an unmodifiable list contain the specify first and second element <SEG> and back by the specified array of additional element <END>
<BEG> returns consecutive { linkplain list # sublist int <SEG> int sublists } of a list <SEG> each of the same size the final list may be small <END>
<BEG> returns a live { link map } view whose key be the content of { code set } and whose value be compute on demand use { code function } <END>
<BEG> returns a view of the sorted set a a map <SEG> map key from the set accord to the specify function <END>
<BEG> uses an hash table to map key to value collection <SEG> initialize to expect the specified number of key <END>
<BEG> uses a { link treemap } sort by the specified comparator to map key to value collection <END>
<BEG> if a value be present in { code optional } <SEG> return a stream contain only that element <SEG> otherwise return an empty stream <END>
<BEG> returns a { link longstream } contain the element of the first stream <SEG> follow by the element of the second stream <SEG> and so on <END>
<BEG> creates an empty { code treebasedtable } that use the natural ordering of both row and column key <END>
<BEG> returns an unmodifiable iterable over the node in a tree structure <SEG> use post-order traversal <END>
<BEG> registers all subscriber method on the give listener object <END>
<BEG> unregisters all subscriber on the give listener object <END>
<BEG> returns the node that be adjacent to { code node } along the origin edge <END>
<BEG> returns a view of the give { code path } a a { link bytesink } <END>
<BEG> returns a predicate that return the result of { link java nio file files # isregularfile path <SEG> linkoption } on input path with the give link option <END>
<BEG>  < p > < b > note : < b > this test exact equality of the calculated statistic <SEG> include the floating point value <END>
<BEG> returns a { code comparator < boolean > } that sort { code false } before { code true } <END>
<BEG> reverses the element of { code array } between { code fromindex } inclusive and { code toindex } exclusive <END>
<BEG> returns the value near to { code value } which be within the closed range { code [ min max ] } <END>
<BEG> sorts the element of { code array } between { code fromindex } inclusive and { code toindex } exclusive in descend order <END>
<BEG> returns the large index for which { link # get } return { code target } <SEG> or { code -1 } if no such index exists <END>
<BEG> returns { code true } if { code target } be present at any index in this array <END>
<BEG> returns a new <SEG> mutable copy of this array 's value <SEG> a a primitive { code int [ ] } <END>
<BEG> typically we cache this kind of thing <SEG> but much repeat use of this view be a performance anti-pattern anyway <END>
<BEG> returns an unspecified hash code for the content of this immutable array <END>
<BEG> returns the { code byte } value that <SEG> when treat a unsigned <SEG> be equal to { code value } <SEG> if possible <END>
<BEG> returns the { code int } value that <SEG> when treat a unsigned <SEG> be near in value to { code value } <END>
<BEG> sorts the element of { code array } in descend order <SEG> interpret them a unsigned 32-bit integer <END>
<BEG> sorts the element of { code array } between { code fromindex } inclusive and { code toindex } exclusive in descend order <SEG> interpret them a unsigned 32-bit integer <END>
<BEG> parses a serialized trie representation of a map of reversed public suffix into an immutable map of public suffix <END>
<BEG> returns a query expression for the result of the or operation on the two give expression <END>
<BEG> returns a query expression for the result of < code > v1 < code > greater-than-or-equal < code > v2 < code > <END>
<BEG> returns the expression value that represent the give number <END>
<BEG> returns a query expression for the result of the match <SEG> a contain string <SEG> between the give attribute value and the string pattern <END>
<BEG> returns the mbeanserver use by the queryexp implementation to evaluate the expression <END>
<BEG> returns the nested error <END>
<BEG> < p > set the host name of the rmi registry that the scheduler should export itself to <END>
<BEG> < p > set the port number the scheduler server will be bind to <END>
<BEG> < p > set the < code > { link threadpool } < code > for the < code > { link quartzscheduler } < code > to use <END>
<BEG> set whether to mark the quartz schedule thread a daemon <END>
<BEG> set the name under which to bind the quartzscheduler in rmi <END>
<BEG> set the name under which the quartzscheduler should be register with the local mbeanserver <END>
<BEG> set the threadexecutor which run the quartzschedulerthread <END>
<BEG> specify the time unit and interval for the trigger to be produce <END>
<BEG> set the trigger to fire on the give day of the week <END>
<BEG> set the minute 0-59 for the date that will be build by this builder <END>
<BEG> set the locale for the date that will be build by this builder if null <SEG> system default will be use <END>
<BEG> < p > get a < code > date < code > object that represent the give time <SEG> on today 's date equivalent to { link # todayat int <SEG> int <SEG> int } <END>
<BEG> < p > returns a date that be round to the next even hour above the give date <END>
<BEG> sets the time zone for which this < code > calendar < code > will be resolve <END>
<BEG> determines whether the give time in millisecond be 'included ' by the < code > basecalendar < code > param timeinmillis the date time to test return a boolean indicating whether the specified time be 'included ' by the < code > basecalendar < code > <END>
<BEG> indicates whether the time range represent an inverted time range see class description <END>
<BEG> returns a string represent the property of the < code > dailycalendar < code > return the properteis of the dailycalendar in a string format <END>
<BEG> < p > return true <SEG> if day be define to be exclude <END>
<BEG> < p > redefine the array of day exclude <END>
<BEG> < p > determine the next time in millisecond that be 'included ' by the calendar after the give time <END>
<BEG> < p > redefine a certain day of the week to be exclude true or include false <END>
<BEG> < p > determine whether the give time in millisecond be 'included ' by the calendar <END>
<BEG> < p > get the group portion of the key <END>
<BEG> < p > obtain a unique key for a give trigger <END>
<BEG> cleanup helper method that close the give < code > statement < code > while ignore any error <END>
<BEG> return whether the associated job class carry the { link disallowconcurrentexecution } annotation <END>
<BEG> create an everythingmatcher that match all trigger <END>
<BEG> create a groupmatcher that match group contain the give string <END>
<BEG> create a namematcher that match name end with the give string <END>
<BEG> < p > initialize the < code > { link org quartz schedulerfactory } < code > with the content of the < code > properties < code > file with the give name <END>
<BEG> < p > set the name of the associated < code > { link org quartz jobdetail } < code > <END>
<BEG> < p > get the < code > jobdatamap < code > that be associate with the < code > trigger < code > <END>
<BEG> < p > get the instruction the < code > scheduler < code > should be give for handle misfire situation for this < code > trigger < code > - the concrete < code > trigger < code > type that you be use will have define a set of additional < code > misfire_instruction_xxx < code > constant that may be pass to this method <END>
<BEG> < p > this method should not be use by the quartz client <END>
<BEG> < p > return a simple string representation of this object <END>
<BEG> instructs the < code > scheduler < code > whether or not the < code > job < code > should be re-executed if a 'recovery ' or 'fail-over ' situation be encounter <END>
<BEG> < p > adds the give < code > boolean < code > value a a string version to the < code > job < code > 's data map <END>
<BEG> < p > retrieve the identified < code > int < code > value from the < code > jobdatamap < code > <END>
<BEG> < p > reports whether the < code > scheduler < code > have be shutdown <END>
<BEG> < p > returns the class-name of the < code > threadpool < code > instance that be be use by the < code > scheduler < code > <END>
<BEG> called to give the classloadhelper a chance to initialize itself <SEG> include the opportunity to steal the class loader off of the call thread <SEG> which be the thread that be initialize quartz <END>
<BEG> a string of text to prepend add to the beginning to the instanceid find in the system property <END>
<BEG> the name of the system property from which to obtain the instanceid <END>
<BEG> create a simpleschedulebuilder set to repeat forever with a 1 second interval <END>
<BEG> create a simpleschedulebuilder set to repeat forever with an interval of the give number of second <END>
<BEG> create a simpleschedulebuilder set to repeat the give number of time - 1 with a 1 second interval <END>
<BEG> use a < code > triggerkey < code > with the give name and default group to identify the trigger <END>
<BEG> set the give human-meaningful description of the trigger <END>
<BEG> add the give key-value pair to the trigger 's { link jobdatamap } <END>
<BEG> appends { code value } to the end of this array <END>
<BEG> returns the value at { code index } if it exist and be a { code jsonarray } <END>
<BEG> returns the value map by { code name } if it exist and be a boolean or can be coerce to a boolean <END>
<BEG> returns the value map by { code name } if it exist and be a { code jsonarray } <END>
<BEG> begins encode a new object <END>
<BEG> encodes { code value } to this stringer <END>
<BEG> returns the bytecode of the class that be build with this class writer <END>
<BEG> puts the content of this field into the give byte vector <END>
<BEG> returns the size of the bytecode of this method <END>
<BEG> the value of a literal token <SEG> record a a string <END>
<BEG> sets parse process <END>
<BEG> returns the entry associate with the specify key in the safelyhashmap <END>
<BEG> transfers all entry from current table to newtable <END>
<BEG> removes the mapping for the specify key from this map if present <END>
<BEG> removes and return the entry associate with the specify key in the safelyhashmap <END>
<BEG> special version of remove for entryset <END>
<BEG> returns a shallow copy of this < tt > safelyhashmap < tt > instance : the key and value themselves be not clone <END>
<BEG> adds a new entry with the specify key <SEG> value and hash code to the specify bucket <END>
<BEG> decodes a base64 encode char array that be know to be resonably well format <END>
<BEG> decodes a base64 encode string that be know to be resonably well format <END>
<BEG> use to pass in configured transformer from the jsonserializer param pathtransformermap <END>
<BEG> same a { link # deserialize string <SEG> objectfactory } <SEG> but use an instance of java io reader a json input <END>
<BEG> same a { link # deserialize string <SEG> objectfactory } <SEG> it start bind into the instance of the give class at the give path <END>
<BEG> deserialize the give input into the exist object target <END>
<BEG> this take in a dot expression represent field to include when serialize method be call <END>
<BEG> return the field exclude from serialization <END>
<BEG> this method serialize the specified object into it equivalent json representation <END>
<BEG> this method serialize the specified object <SEG> include those of generic type <SEG> into it equivalent json representation <END>
<BEG> returns a new json reader configure for the setting on this gson instance <END>
<BEG> this method deserializes the json read from the specify reader into an object of the specify type <END>
<BEG> configures gson to apply the pass in exclusion strategy during deserialization <END>
<BEG> configures gson to to serialize { code date } object accord to the style value provide <END>
<BEG> returns the node at or adjacent to the give key <SEG> create it if request <END>
<BEG> removes { code node } from this tree <SEG> rearrange the tree 's structure a necessary <END>
<BEG> returns { code true } if { code type } be one of the nine primitive-wrapper type <SEG> such a { link integer } <END>
<BEG> convenience method to get this array a a { link string } if it contain a single element <END>
<BEG> convenience method to get this array a a float if it contain a single element <END>
<BEG> provide check for verify if this element represent a null value or not <END>
<BEG> convenience method to get this element a a { link jsonarray } <END>
<BEG> convenience method to get this element a a string value <END>
<BEG> convenience method to get this element a a primitive float value <END>
<BEG> creates a deep copy of this element and all it child since 2 8 2 <END>
<BEG> convenience method to add a primitive member <END>
<BEG> parses the specified json string into a parse tree param reader json text return a parse tree of { link jsonelement } s correspond to the specify json throw jsonparseexception if the specify text be not valid json <END>
<BEG> deprecate use { link jsonparser # parsereader reader } <END>
<BEG> check whether this primitive contain a string value <END>
<BEG> convenience method to get this element a a string <END>
<BEG> convenience method for convert give byte array a base64 encode string use this variant 's setting <SEG> optionally enclose in double-quotes <END>
<BEG> accessor for get brief textual name of match format if any null if none <END>
<BEG> factory method for get an instance ; this be either recycled per-thread instance <SEG> or a newly construct one <END>
<BEG> method that will quote text content use json standard quoting <SEG> and return result a a character array <END>
<BEG> method that will quote text content use json standard quoting <SEG> and append result to a supply { link stringbuilder } <END>
<BEG> method for disable specify parser feature check { link jsonfactory feature } for list of feature deprecate since 2 10 use { link jsonfactorybuilder # configure jsonfactory feature <SEG> boolean } instead <END>
<BEG> method for override currently configure output decorator deprecate since 2 10 use { link jsonfactorybuilder # inputdecorator inputdecorator } instead <END>
<BEG> overridable factory method that actually instantiate generator for give { link outputstream } and context object <SEG> use utf-8 encoding <END>
<BEG> method for define custom escape factory use for { link jsongenerator } s it create <END>
<BEG> overrides underlaying createmarshaller method and return a marshaller which be capable of json serialization <END>
<BEG> returns a list of attribute of this event <END>
<BEG> get the result return the result <END>
<BEG> convert an http header string into a jsonobject <END>
<BEG> begin append a new object <END>
<BEG> verifies if value be a valid json value <END>
<BEG> returns { link com jayway jsonpath spi mapper mappingprovider } use by this configuration return mappingprovider use <END>
<BEG> deletes the object this path point to in the provided jsonobject param jsonobject a json object param configuration configuration to use param < t > expect return type return the updated jsonobject or the path list to delete object if option as_path_list be set <END>
<BEG> encode a map into json text and write it to out <END>
<BEG> convert a map to json text <END>
<BEG> get the current value a float if the current object be null return float nan <END>
<BEG> get the current value a long if the current object be null return 0 <END>
<BEG> set current value a boolean <END>
<BEG> return the object a a json string <END>
<BEG> start a new object element <END>
<BEG> check rfc4627 json syntax from input string return if the input be valid <END>
<BEG> check json syntax from input string return if the input be valid <END>
<BEG> same a read in memory parsing <END>
<BEG> read data can not be eoi <END>
<BEG> associate an writer to a interface with low priority param interface interface to map param writer writer object deprecate use registerwriterinterfacelast <END>
<BEG> write a key : value entry to a stream <END>
<BEG> use to instantiate a new object that will be use a an array <END>
<BEG> allow a mapper to converte a temprary structure to the final data format <END>
<BEG> encodes a object into a json string <END>
<BEG> escapes a object into javascript format <END>
<BEG> decodes a json stream into a object <END>
<BEG> validates a json stream param reader source a json string to decode throw ioexception if i o error occur <END>
<BEG> set indent text for pretty printing <END>
<BEG> gets maximum depth for the nest depth <END>
<BEG> sets default number format <END>
<BEG> returns the column number where the error be find <END>
<BEG> check whether a value exist in the array <END>
<BEG> return the value at the give index in the array <END>
<BEG> return the number of item in this array map <END>
<BEG> returns a jsonvalue instance that represent the give < code > long < code > value <END>
<BEG> creates a new jsonarray that contain the json representation of the give < code > long < code > value <END>
<BEG> indicates the end of a boolean literal < code > true < code > or < code > false < code > in the json input <END>
<BEG> indicates the end of a string in the json input <END>
<BEG> indicates the beginning of the name of an object member in the json input <END>
<BEG> indicates the end of an object member value in the json input <END>
<BEG> returns an unmodifiable jsonobject for the specified one <END>
<BEG> returns the < code > long < code > value of the member with the specify name in this object <END>
<BEG> returns a list of the name in this object in document order <END>
<BEG> parses the give input string <END>
<BEG> reads the entire input from the give reader and parse it a json <END>
<BEG> reads a json value from the give reader <END>
<BEG> detects whether this value represent a json array <END>
<BEG> detects whether this value represent the json literal < code > false < code > <END>
<BEG> returns this json value a a < code > long < code > value <SEG> assume that this value represent a json number that can be interpret a java < code > long < code > <END>
<BEG> returns this json value a a < code > double < code > value <SEG> assume that this value represent a json number <END>
<BEG> print every value on a separate line <END>
<BEG> returns a new array contain the same node a { code oldtable } <SEG> but with twice a many tree <SEG> each of approximately half the previous size <END>
<BEG> assert that the give text do not contain the give substring <END>
<BEG> assert that a collection have element ; that be <SEG> it must not be < code > null < code > and must have at least one element <END>
<BEG> assert a boolean expression <SEG> throw < code > illegalstateexception < code > if the test result be < code > false < code > <END>
<BEG> return the same value a < code > { link double # hashcode } < code > <END>
<BEG> trim all occurences of the supplied trailing character from the give string <END>
<BEG> test if the give string end with the specified suffix <SEG> ignore upper low case <END>
<BEG> strip the filename extension from the give path <SEG> e g <END>
<BEG> set the jws algorithm constraint to be apply when process the jwt <END>
<BEG> require that the jwt contain an < a href= http : tool ietf org html rfc7519 # section-4 1 5 > not before nbf claim < a > <END>
<BEG> bypass the strict check on the decryption key <END>
<BEG> sets the { link providercontext } for any jwe operation to be do by the jwtconsumer be build <END>
<BEG> returns a connection use the drivermanager and all set property <END>
<BEG> < b > experimental <SEG> use at your own risk <END>
<BEG> returns the descriptor of the method describe by this object <END>
<BEG> returns the argument to pass to the bootstrap method <SEG> in order to compute the value of this constant <END>
<BEG> returns the size of the field_info jvms structure generate by this fieldwriter <END>
<BEG> puts the content of the field_info jvms structure generate by this fieldwriter into the give bytevector <END>
<BEG> adds the specify signed amount of minute to the give date <END>
<BEG> deprecate use getsourcefilehandle string instead <END>
<BEG>  return the previous value associate with the specify key <SEG> or < tt > null < tt > if there be no mapping for the key throw nullpointerexception if the specify key or value be null <END>
<BEG> return the value of this lazy var <SEG> create if necessary <END>
<BEG> creates a new lockinglazyvar base on the type of the lazyvarinit pass in <END>
<BEG> < p > appends the tostring that would be produce by < code > object < code > if a class do not override tostring itself <END>
<BEG> null safe comparison of comparables <END>
<BEG> converts the specify byte array to a string use utf-8 <END>
<BEG> returns the content of the specify reader <END>
<BEG> parse the give string to create a simplexmlnode <END>
<BEG> parse the give inputstream to create a simplexmlnode <END>
<BEG> creates a setter method with the give body <END>
<BEG> convenience method to see if an annotated node be { code vetoable } <END>
<BEG> creates a statement body similar to : < code > this firevetoablechange field <SEG> field <SEG> field = value < code > param propertynode the field node for the property param fieldexpression a field expression for set the property value return the created statement <END>
<BEG> adds the necessary field and method to support vetoable change support <END>
<BEG> this be a static access auto download enabler <END>
<BEG> marks the present position in the stream <END>
<BEG> this code be execute after the method be call <END>
<BEG> non-javadoc see groovy lang metaclass # addnewstaticmethod java lang reflect method <END>
<BEG> always 0 for an empty range <END>
<BEG> always throw < code > unsupportedoperationexception < code > for an empty range <END>
<BEG> non-javadoc see groovy lang groovyobject # setmetaclass groovy lang metaclass <END>
<BEG> non-javadoc see groovy lang groovyobject # setproperty java lang string <SEG> java lang object <END>
<BEG> get a class from the class cache <END>
<BEG> removes all class from the class cache <END>
<BEG> gets the 'to ' value a a primitive integer <END>
<BEG> get the property of the give object <END>
<BEG> this be for metaclass to patch up the object later when look for set method <END>
<BEG> gets the field of this property return the field of this property <END>
<BEG> get the class that be update <END>
<BEG> get the old metaclass return the old metaclass <END>
<BEG> returns the signature of this method return the signature of this method <END>
<BEG> return the name of the field that could not be find <END>
<BEG> return the type on which the method be attempt to be call <END>
<BEG> a method for determine from and to information when use this intrange to index an aggregate object of the specify size <END>
<BEG> compares an { link objectrange } to another { link objectrange } <END>
<BEG> decrements by one param value the value to decrement return the decremented value <END>
<BEG> use the proxymetaclass for the give closure <END>
<BEG> builds a trampolined variant of the current closure <END>
<BEG> returns a string representation of this qname return a string representation of the qname <END>
<BEG> this allow equal to be override by a closure < i > field < i > method attach to the expando object <END>
<BEG> param name the name of the variable to lookup return the variable value <END>
<BEG> sets the value of the give variable param name the name of the variable to set param value the new value for the give variable <END>
<BEG> return the explicit property map unmodifiable map <END>
<BEG> return the context of the current node <END>
<BEG> return the builder that build the current node <END>
<BEG> return the node of the parent of the current node <END>
<BEG> remove the most recently add instance of the preinstantiate delegate <END>
<BEG> add a postinstantiate delegate so it can intercept node after they be create <END>
<BEG> this be a hook for subclass to plugin a custom strategy for map name to property method <END>
<BEG> switches the builder 's proxybuilder during the execution of a closure < br > this be useful to temporary change the building context to another builder without the need for a contrived setup <END>
<BEG> prints a string <END>
<BEG> removes a child of the current node <END>
<BEG> returns a < code > list < code > of the node child <END>
<BEG> returns an < code > object < code > represent the value of the node <END>
<BEG> adds or replace the parent of the node <END>
<BEG> provides a collection of all the node in the tree use a depth-first traversal <END>
<BEG> converts the text of this gpathresult to a long object <END>
<BEG> sets the classloader use to load a node 's class <END>
<BEG> sets the current newinstanceresolver < br > it will assign defaultnewinstanceresolver if null < br > it accept a newinstanceresolver instance or a closure <END>
<BEG> sets the current referenceresolver < br > it will assign defaultreferenceresolver if null < br > it accept a referenceresolver instance <SEG> a string or a closure <END>
<BEG> gets method from all interface <END>
<BEG> a weigher where a value have a weight of < tt > 1 < tt > <END>
<BEG> a weigher where the value be a { link collection } and it weight be the number of element <END>
<BEG> sets a system property from a { code name=value } string <END>
<BEG> retrieves an long system property param name the name of the system property <END>
<BEG> set the source token text param s the text <END>
<BEG> creates a classnode use a give class <END>
<BEG> this set the code statement of the closure <END>
<BEG> for internal use only <END>
<BEG> param alias the name of interest return the import node for the give alias or null if none be available <END>
<BEG> returns an unmodifiable view of the current node metadata <END>
<BEG> return the catch statement of the give index or null <END>
<BEG> interface class node retrieve from { link org codehaus groovy ast classnode # getinterfaces } or { link org codehaus groovy ast classnode # getallinterfaces } be return with generic type argument <END>
<BEG> used to check if a type be an double or double <END>
<BEG> it be of a bigdecimal category <SEG> if the provided type be a biginteger category or a bigdecimal <END>
<BEG> gets an iterator for the referenced local variable <END>
<BEG> should be call when descend into a loop that do not define a scope <END>
<BEG> used for < code > continue foo < code > inside a loop to continue the execution of the marked loop <END>
<BEG> returns the processingunit in which the error occur <END>
<BEG> adds a set of source file to the unit <END>
<BEG> checks if the specify bytecode version string represent a jdk 1 7+ compatible bytecode version <END>
<BEG> sets the encoding to be use when read source file <END>
<BEG> gets the currently configure output writer <END>
<BEG> returns true if verbose operation have be request <END>
<BEG> turns verbose operation on or off <END>
<BEG> sets the name of the base class for script <END>
<BEG> sets the joint compilation option for this configuration <END>
<BEG> checks if groovydoc be enable <END>
<BEG> checks if runtime groovydoc be enable <END>
<BEG> sets the list of token which be whitelisted <END>
<BEG> an alternative way of set constant type <END>
<BEG> an alternative way of set { link # setreceiverswhitelist java util list receiver class } <END>
<BEG> returns the list of warning <SEG> or null if there be none <END>
<BEG> returns the specified error 's underlying syntaxexception <SEG> or null if it be n't one <END>
<BEG> returns a uri for the url of this source <END>
<BEG> sets the bug text to describe this error <END>
<BEG> return the property of the give object throw runtimeexception if the property could not be evaluate <END>
<BEG> sets the property on the give object to the new value param object on which to set the property param newvalue the new value of the property throw runtimeexception if the property could not be set <END>
<BEG> set value from int [ ] use normalized index <END>
<BEG> return true if short array have it default metaclass <END>
<BEG> close the closeable <END>
<BEG> decodes a hex string to a byte array <END>
<BEG> calculate md5 of the byte array return md5 value throw nosuchalgorithmexception if md5 algorithm not find since 2 5 0 <END>
<BEG> digest the byte array param algorithm the name of the algorithm request <SEG> e g <END>
<BEG> overloads the leftshift operator for appendable to allow an object to be append use groovy 's default representation for the object <END>
<BEG> invokes a closure that use a formatter take care of resource handling <END>
<BEG> overloads the leftshift operator to provide an append mechanism to add byte to a stream <END>
<BEG> create an object input stream for this input stream <END>
<BEG> create a new objectinputstream for this file and pas it to the closure <END>
<BEG> read the content of this inputstream and return it a a string <END>
<BEG> create a new printwriter for this outputstream <END>
<BEG> allows this autocloseable to be use within the closure <SEG> ensure that it be close once the closure have be execute and before this method return <END>
<BEG> the touch method can be use to renew an element and move it to the from of the lru queue <END>
<BEG> creates a new closure delegate to the supply one and memoizing all return value by the argument <END>
<BEG> retrieves the closure that be invoke by this metamethod return the closure <END>
<BEG> force a memory synchronization that will cause all reader to see table <END>
<BEG> continuation of remove <SEG> call only when sync lock be hold and interference have be detect <END>
<BEG> helper method for entryset remove <END>
<BEG> return true if no meta class creation handle be set and if the original byte meta class be use <END>
<BEG> set if the original byte meta class be use <END>
<BEG> non-javadoc see groovy lang metabeanproperty # getgetter <END>
<BEG> returns a string detail possible solution to a miss constructor if no good solution can be find a empty string be return <END>
<BEG> an alias method so that a process appear similar to system out <SEG> system in <SEG> system err ; you can use process in <SEG> process out <SEG> process err in a similar fashion <END>
<BEG> gets the output stream from a process and read it to keep the process from block due to a full output buffer <END>
<BEG> executes the command specify by the < code > string < code > array give in the first parameter <SEG> with the environment define by < code > envp < code > and under the work directory < code > dir < code > <END>
<BEG> executes the command specify by the give list <SEG> with the environment define by < code > envp < code > and under the work directory < code > dir < code > <END>
<BEG> append bytes to the end of a file <END>
<BEG> append binary data to the file <END>
<BEG> append the text supply by the reader at the end of the file <SEG> use a specify encoding <END>
<BEG> create a buffered writer for this file <END>
<BEG> creates a buffered input stream for this url <END>
<BEG> creates a buffered reader for this url use the give encoding <END>
<BEG> transforms a string represent a uri into a uri object <END>
<BEG> write a portion of an array of character <END>
<BEG> package private <END>
<BEG> returns true if the node 's meaning match all of the specify type <END>
<BEG> returns true if the node be a complete expression <END>
<BEG> creates a < code > reduction < code > from this node <END>
<BEG> retrieve the column upon which the error occur <END>
<BEG> writes the error to the specify < code > printwriter < code > <END>
<BEG> primary entry point for compile from the command line use the groovyc script <END>
<BEG> returns the name of the main class for this configuration <END>
<BEG> see # getmessage string <END>
<BEG> pops a binary expression from the binary expression stack <END>
<BEG> returns the closure expression which be on the top of the stack <SEG> or null if there 's no such element <END>
<BEG> returns the current stack of enclose closure expression <END>
<BEG> pushes a class into the class stack <END>
<BEG> returns the current stack of enclose class <END>
<BEG> returns true if the specified class be a trait <END>
<BEG> close reset the reader back to the start and remove any marked position <END>
<BEG> return the next element to be return by next without consume it <END>
<BEG> return if the list be empty return true if the list be empty <END>
<BEG> deprecate use { link referencebundle # getsoftbundle } <END>
<BEG> support the range subscript operator for stringbuilder <END>
<BEG> simple unit test <END>
<BEG> creates a class path name <SEG> from a class <END>
<BEG> accept for the visitor pattern <END>
<BEG> is this a literal node <END>
<BEG> rubymethod use by visitor <END>
<BEG> add the name of the instance variable be retrieve to our set of instance variable name and continue to walk child node <END>
<BEG> postexenode ca n't appear in method <SEG> so do not search for ivars <END>
<BEG> gets the next case node if any <END>
<BEG> returns a list of all value in this map <END>
<BEG> returns ruby 's local variable value this map have <END>
<BEG> removes the mapping for a key from this map if it be present in a give receiver <END>
<BEG> reads the next byte of data from the input stream <END>
<BEG> repositions this stream to the position at the time the < code > mark < code > method be last call on this input stream <END>
<BEG> skips over and discard < code > n < code > byte of data from this input stream <END>
<BEG> gets a receiver object from engine 's attribute map <END>
<BEG> returns a fully qualified property name that correspond to a give enumerated type identifier <END>
<BEG> gets a local variable behavior from system property <END>
<BEG> returns enum type of this variable define in { link bivariable } <END>
<BEG> retrieves global variable from ruby after the evaluation <END>
<BEG> returns true if a give receiver be identical to the receiver this object have <END>
<BEG> injects an instance variable value to a parsed ruby script <END>
<BEG> removes this object from { link bivariablemap } <END>
<BEG> compares this < tt > memorypointer < tt > to another < tt > memorypointer < tt > <END>
<BEG> gets the total size in byte of the memory <END>
<BEG> reads an 8 bit sign integer value from the memory address <END>
<BEG> writes a 64 bit integer value to the memory area <END>
<BEG> reads a c unsigned long integer value from the memory area <END>
<BEG> reads a 32 bit float point value from the memory address <END>
<BEG> writes data to the native unix file descriptor <END>
<BEG> creates a new jffi type descriptor for an array param arraytype the structure layout return a new struct descriptor <END>
<BEG> allocates native memory <SEG> align to a minimum boundary <END>
<BEG> gets a ruby array of the offset of all member of this struct <END>
<BEG> returns a { link field } descriptor for a struct field <END>
<BEG> given a frame and scope requirement <SEG> return the name of the appropriate callconfiguration <END>
<BEG> dummy implementation of setvisibility that do nothing <END>
<BEG> getlocalvar be save for location and should not be simplify so we still know it original depth offset <END>
<BEG> nothing to do <END>
<BEG> return a new instance of a variable for the newly clone scope <END>
<BEG> convert a ruby object to a java object <END>
<BEG> convert a java object to a ruby object <END>
<BEG> creates a class identifier of form labc abc ; <SEG> from a class <END>
<BEG> add a new variable to this current scope unless it be already define in any reachable scope <END>
<BEG> get the global runtime <END>
<BEG> evaluates a script under the current scope perhaps the top-level scope and return the result generally the last value calculate <END>
<BEG> define a new module under the object namespace <END>
<BEG> returns the false instance from the instance pool <END>
<BEG> construct a nomethoderror that format it message with an sprintf format string <END>
<BEG> mark float a reopen <END>
<BEG> get the base class # new method <END>
<BEG> will invoke a name method with the supplied argument and supply block with functional invocation <END>
<BEG> tries to convert this object to a ruby hash use the to_hash method <END>
<BEG> see org jruby runtime builtin irubyobject # datagetstruct <END>
<BEG> rb_obj_freeze call-seq : obj freeze = > obj prevents further modification to < i > obj < i > <END>
<BEG> rb_obj_frozen_p call-seq : obj frozen ? <END>
<BEG> author < a href= mailto : ola bini ki se > ola bini < a > <END>
<BEG> executes the block once for each child in the directory i e <END>
<BEG> set whether native code be enable for this config <END>
<BEG> get the maximum number of method to consider when profiling <END>
<BEG> set whether uppercase package name will be honor <END>
<BEG> mri : match_begin <END>
<BEG> get the end offset of the give region <SEG> or -1 if the region do not exist <END>
<BEG> create the math module and add it to the ruby runtime <END>
<BEG> returns the base 2 logarithm of x <END>
<BEG> see org jruby compiler constantizable <END>
<BEG> deprecate use { link # logcaller org jruby rubyarray } <END>
<BEG> deprecate use { link # checkstringtype } instead <END>
<BEG> getvalue for index 1 <SEG> depth 0 <END>
<BEG> set value two in this scope <END>
<BEG> find an encode give a ruby object <SEG> coerce it to a string in the process <END>
<BEG> update the frame base on the give value <END>
<BEG> clone this frame <END>
<BEG> set the give variable index into the specify object <END>
<BEG> retrieve the variable access for write <END>
<BEG> static entry point for set a variable in an object <END>
<BEG> get the variable accessor for the give name with intent to use it for read <END>
<BEG> retrieve the write accessor for ffi handle <END>
<BEG> get the size of the variable table <SEG> include extra var object_etc <SEG> etc <END>
<BEG> retrieve the lazy accessor variableaccessorfield for object group <END>
<BEG> set value in current dynamic scope or one of it captured scope <END>
<BEG> retrieve the runtime associate with this context <END>
<BEG> return a binding represent the current call 's state but with the specify scope and self <END>
<BEG> create a method signature from the give param type and return value <END>
<BEG> unwrap the give stream to it first non-filterinputstream <END>
<BEG> get a selector from the pool or create a new one <END>
<BEG> safe way of get the double value < br > prevents bigdecimal from call double parsedouble param bigdecimal return the double value <END>
<BEG> safe way of parse a float value from a string param s the input string return the float value <END>
<BEG> return the element with the give key <END>
<BEG> returns filter expression <SEG> or { code null } if not present <END>
<BEG> sets filter leave paren position <SEG> or -1 if no filter <END>
<BEG> sets destructuring length <END>
<BEG> used by code generator <END>
<BEG> sets catch condition node <SEG> and set it parent to this node <END>
<BEG> sets both paren position <END>
<BEG> returns expression to evaluate if test be false <END>
<BEG> sets position of ? <END>
<BEG> sets continue target <END>
<BEG> returns the intended label of this continue statement return the continue label <END>
<BEG> sets source position of while keyword <END>
<BEG> returns the wrapped expression <END>
<BEG> sets object be iterate over <SEG> and set it parent to this node <END>
<BEG> sets whether the loop be a for-each loop <END>
<BEG> returns position of each keyword <END>
<BEG> adds an argument to the list <SEG> and set it parent to this node <END>
<BEG> returns leave paren position <SEG> -1 if miss <END>
<BEG> sets whether this be a 1 8 function closure <END>
<BEG> sets loop list throw illegalargumentexception if loop be { code null } <END>
<BEG> adds a child loop node <SEG> and set it parent to this node <END>
<BEG> sets body statement or expression <END>
<BEG> set the { link scope } associate with this node <END>
<BEG> marks this node a a setter property <END>
<BEG> sets parent scope <END>
<BEG> used only for code generation <END>
<BEG> sets the symbol table for this scope <END>
<BEG> sets the uri <SEG> path or descriptive text indicate the origin of this script 's source code <END>
<BEG> sets statement list <END>
<BEG> sets symbol declaration type <END>
<BEG> sets position of { code finally } keyword <SEG> if present <SEG> or -1 <END>
<BEG> returns whether the operator be postfix <END>
<BEG> returns true if this be a { link token # let } declaration <END>
<BEG> sets both bracket position <END>
<BEG> sets whether this be part of an xml attribute value <END>
<BEG> sets namespace <SEG> and set it parent to this node <END>
<BEG> sets position of { code : : } token <SEG> or -1 if not present <END>
<BEG> sets the script that should execute in every module 's scope before the module 's own script have execute <END>
<BEG> deprecate use { link rhinoexception # linesource } from the super class <END>
<BEG> update the attribute of the give instance property <END>
<BEG> remove < i > listener < i > from < i > bag < i > of listener <END>
<BEG> get integer value assign with key <END>
<BEG> set the interface that the generated target will implement <END>
<BEG> adds a qualified name to the list of object to be exclude from serialization <END>
<BEG> sets the scopeprovider to be use <END>
<BEG> sets whether the debugger should break on function return <END>
<BEG> compiles the give script <END>
<BEG> returns an array of the property name on the give script object <END>
<BEG> workaround for basictableui anomaly <END>
<BEG> set int value of the key <END>
<BEG> todo : mark deprecate by original author <END>
<BEG> returns a slice of this buffer 's sub-region <END>
<BEG> sets the { code position } of this buffer <END>
<BEG> transfers this buffer 's data to the specify destination start at the current { code position } and increase the { code position } by the number of the transferred byte = { code length } <END>
<BEG> error be never enable <END>
<BEG> converts the input parameter to string and then delegate to the error method of the wrapped < code > org slf4j logger < code > instance <END>
<BEG> converts the first input parameter to string and then delegate to the error method of the wrapped < code > org slf4j logger < code > instance <END>
<BEG> param sarg the name of the priority <END>
<BEG> read configuration option from an inputstream <END>
<BEG> read configuration option from < code > property < code > <END>
<BEG> two priority be equal if their level field be equal <END>
<BEG> logs a message with < code > org apache avalon framework logger logger debug < code > <END>
<BEG> is log to < code > org apache avalon framework logger logger debug < code > enable ? <END>
<BEG> logs a message with < code > java util log level fine < code > <END>
<BEG> is debug log currently enable ? <END>
<BEG> return the native logger instance we be use <END>
<BEG> check whether the log4j logger use be enable for < code > fatal < code > priority <END>
<BEG> puts the value onto the context <END>
<BEG> returns the map from the context <END>
<BEG> clears the nested diagnostics context <END>
<BEG> issue a log message with parameter with a level of trace <END>
<BEG> issue a log message with parameter and a throwable with a level of trace <END>
<BEG> check to see if the debug level be enable for this logger <END>
<BEG> issue a log message with a level of debug <END>
<BEG> issue a log message and throwable with a level of debug and a specific logger class name <END>
<BEG> issue a log message with parameter with a level of info <END>
<BEG> parse the information <END>
<BEG> gets the integral value of this level <END>
<BEG> compares this level against the level pass a an argument and return true if this level be the same or be more specific <END>
<BEG> converts the string pass a argument to a level <END>
<BEG> return the level associate with the name <END>
<BEG> returns a logger use the fully qualified name of the class a the logger name <END>
<BEG> non-javadoc see org apache log log4j message messagefactory # newmessage java lang string <END>
<BEG> non-javadoc see org apache log log4j message flowmessagefactory # newexitmessage org apache log log4j message entrymessage <END>
<BEG> non-javadoc see org apache log log4j message flowmessagefactory # newexitmessage java lang object <SEG> org apache log log4j message message <END>
<BEG> formats the structured data a described in < a href= http : tool ietf org html rfc5424 > rfc 5424 < a > <END>
<BEG> this method perform a deep tostring of the give object <END>
<BEG> this message do not have any parameter <SEG> so this method return the specified array <END>
<BEG> this message do not have any parameter so this method always return zero <END>
<BEG> returns the enterprise number <END>
<BEG> sets the id from a string <END>
<BEG> formats the structured data a described in rfc 5424 <END>
<BEG> logs entry to a method with location information <END>
<BEG> returns an extendedlogger <END>
<BEG> detects if a logger with the specify name exists <END>
<BEG> gets the class name of the { link org apache log log4j spi threadcontextmap } implementation of this provider <END>
<BEG> retrieve the statuslogger <END>
<BEG> converts a digit into an lower-case hexadecimal character or the null character if invalid <END>
<BEG> gets the named property a a charset value <END>
<BEG> gets the named property a an integer <END>
<BEG> non-javadoc see org apache log log4j core appender roll action pathcondition # accept java nio file path <SEG> java nio file path <SEG> java nio file attribute basicfileattributes <END>
<BEG> non-javadoc see org apache log log4j core appender roll action pathcondition # beforefiletreewalk <END>
<BEG> non-javadoc see java util comparator # compare java lang object <SEG> java lang object <END>
<BEG> returns a string suitable for debug <END>
<BEG> perform the replacement <END>
<BEG> registers a subcommand with the specify name <END>
<BEG> prints version information from the { link command # version } annotation to the specify { code printstream } <END>
<BEG> convenience method to allow command line application author to avoid some boilerplate code in their application <END>
<BEG> non-javadoc see org apache common lang3 time dateparser # parse java lang string <END>
<BEG> < p > gets a time formatter instance use the specified style <SEG> time zone and locale < p > param timestyle time style : full <SEG> long <SEG> medium <SEG> or short param timezone optional time zone <SEG> overrides time zone of formatted date <SEG> null mean use default locale param locale optional locale <SEG> override system locale return a localized standard date time formatter throw illegalargumentexception if the locale have no date time pattern define <END>
<BEG> gets the end index to loop to <END>
<BEG> sets the value of a static { link field } <SEG> make it accessible if require <END>
<BEG> resets the configuration monitor for the give file be watch to it current last modified time <END>
<BEG> returns the current value of the < b > target < b > property <END>
<BEG> see ch qos logback core db connectionsource # getconnection <END>
<BEG> the < b > title < b > option take a string value <END>
<BEG> once the child element be also parse <SEG> now be the time to activate the appender option <END>
<BEG> instantiates an layout of the give class and set it name <END>
<BEG> returns the number of prefix component that this pattern have in common with the pattern p pass a parameter <END>
<BEG> param method to check if it be a standard java bean setter <END>
<BEG> convert < code > val < code > a string parameter to an object of a give type <END>
<BEG> returns value of the < b > remotehost < b > property <END>
<BEG> sets the event queue size use for each client connection <END>
<BEG> sets the algorithm name for the key manager factory <END>
<BEG> sets the jsse provider name for the key manager factory <END>
<BEG> gets the location of the key store resource <END>
<BEG> sets the secure random generator configuration <END>
<BEG> sets the key manager factory configuration <END>
<BEG> sets the jsse secure transport protocol to include <END>
<BEG> gets the jsse cipher suite name to exclude <END>
<BEG> creates a { link trustmanagerfactory } use the receiver 's configuration <END>
<BEG> stop this appender instance <END>
<BEG> returns a map where the default converter map be merge with the map contain in the context <END>
<BEG> given date <SEG> convert this instance to a regular expression <END>
<BEG> call the < code > doappend < code > method on all attach appenders <END>
<BEG> very similar to < code > system getproperty < code > except that the { link securityexception } be absorbed <END>
<BEG> prepares the appender for use <END>
<BEG> gets the key to match in the mdc of the loggingevent <END>
<BEG> get all attached appenders a an enumeration <END>
<BEG> look for an attached appender name a < code > name < code > <END>
<BEG> returns < code > true < code > if the specify appender be in the list of attached appenders <SEG> < code > false < code > otherwise <END>
<BEG> remove and close all previously attach appenders <END>
<BEG> remove the appender pass a parameter form the list of attached appenders <END>
<BEG> put a context value the < code > val < code > parameter a identify with the < code > key < code > parameter into the current thread 's context map <END>
<BEG> remove the the context identify by the < code > key < code > parameter <END>
<BEG> performs single argument substitution for the 'messagepattern ' pass a parameter <END>
<BEG> this method be mainly use with expression evaluators <END>
<BEG> manufacture a { link basicmarker } instance by name <END>
<BEG> returns the key in the mdc a a { link set } of { link string } s the returned value can be null <END>
<BEG> return a copy of the current thread 's context map <END>
<BEG> performs a two argument substitution for the 'messagepattern ' pass a parameter <END>
<BEG> a nop implementation <END>
<BEG> this be overload <END>
<BEG> non-javadoc see weka association associationrule # getconsequence <END>
<BEG> get the wrapped < code > associationrules < code > object <END>
<BEG> returns the tip text for this property return tip text for this property suitable for display in the explorer experimenter gui <END>
<BEG> returns a string describe this associator return a description of the evaluator suitable for display in the explorer experimenter gui <END>
<BEG> get the index of the attribute value to consider a positive for binary attribute in normal dense instance <END>
<BEG> set the metric type to use <END>
<BEG> gets the comma separate list of item that transaction must contain in order to be consider for large item set and rule <END>
<BEG> get the comma separate list of item that rule must contain in order to be output <END>
<BEG> gets the list of mine association rule <END>
<BEG> gets a list of the name of the metric output for each rule <END>
<BEG> equals <END>
<BEG> gets the associator specification string <SEG> which contain the class name of the associator and any option to the associator return the associator string <END>
<BEG> main method for test this class <END>
<BEG> get whether to pre-compute the full correlation matrix at the outset <SEG> rather than compute individual correlation lazily a need during the search <END>
<BEG> returns a string describe this attribute evaluator return a description of the evaluator suitable for display in the explorer experimenter gui <END>
<BEG> describe the attribute evaluator return a description of the attribute evaluator a a string <END>
<BEG> parses a give list of option <END>
<BEG> rest to default <END>
<BEG> evaluate an individual attribute by measure the amount of information gain about the class give the attribute <END>
<BEG> return a description of the evaluator return description a a string <END>
<BEG> this be a dummy method <END>
<BEG> return a description of the search a a string return a description of the search <END>
<BEG> get the number of instance use for estimate attribute return the number of instance <END>
<BEG> reset option to their default value <END>
<BEG> generates the classifier <END>
<BEG> get whether to use word frequency rather than binary bag of word representation <END>
<BEG> get whether to convert all token to lowercase return true true if all token be to be convert to lowercase <END>
<BEG> get the minimum word frequency <END>
<BEG> return the current filename return the current filename <END>
<BEG> delete node from the network <SEG> update instance <SEG> parentsets <SEG> distribution conditional distribution be condense by take the value for the target node to be it first value <END>
<BEG> add arc between two node distributions be update by duplication for every value of the parent node <END>
<BEG> specify distribution of a node param ntargetnode index of the node to specify distribution for param p matrix represent distribution with p [ i ] [ j ] = p node = j | parent configuration = i throw exception if parent or child can not be find in network <END>
<BEG> return array of value of a node param ntargetnode index of the node to get value from <END>
<BEG> delete node value from a node <END>
<BEG> get y position of a node param inode index of node of interest <END>
<BEG> center set of node half way between top and bottom most node in the list param node list of index of node to center <END>
<BEG> set evidence state of a node <END>
<BEG> redo the last edit action perform on the network <END>
<BEG> returns an enumeration describe the available option return an enumeration of all the available option <END>
<BEG> estimatecpts estimate the conditional probability table for the bayes net use the network structure <END>
<BEG> return a string to describe the maxcardinality option <END>
<BEG> return whether cross-over be use <END>
<BEG> param busemutation set whether mutation be use <END>
<BEG> return a string to describe the use tournament selection option <END>
<BEG> this will return a string describe the search algorithm <END>
<BEG> gets the maximum number of boost iteration return the maximum number of boost iteration <END>
<BEG> get the calculated sigma square return the sigma square <END>
<BEG> get the calculated sigma accord to the kohavi and wolpert definition return the sigma <END>
<BEG> returns description of the bias-variance decomposition result <END>
<BEG> same a size return the number of row <END>
<BEG> gets the name of one of the class <END>
<BEG> gets the number of incorrect classification that be <SEG> for which an incorrect prediction be make <END>
<BEG> calculates the prediction error <END>
<BEG> returns the prediction interval <END>
<BEG> returns the range of attribute to output <END>
<BEG> returns the tip text for this property <END>
<BEG> returns whether to output the class distribution a well <END>
<BEG> returns whether to the regular output be suppress in case the output be store in a file <END>
<BEG> prints the header <SEG> classification and footer to the buffer <END>
<BEG> performs the actual printing of the header <END>
<BEG> builds a string list the attribute value in a specified range of index <SEG> separate by comma and enclose in bracket <END>
<BEG> store the prediction make by the classifier a a string <END>
<BEG> sets the number of negative instance predict a positive <END>
<BEG> calculate the false positive rate <END>
<BEG> calculate the recall <END>
<BEG> sets how the training data will be transform <END>
<BEG> gets the ridge in the log-likelihood <END>
<BEG> gets a string describe the classifier <END>
<BEG> use this to get easy access to the output number <END>
<BEG> call this function to draw the node output connection <END>
<BEG> this will connect the specified unit to be an output to this unit <END>
<BEG> this will disconnect the output with the specific connection number from this node only on this end however <END>
<BEG> call this to get the error value of this unit <END>
<BEG> call this to get the weight value on a particular connection <END>
<BEG> call this function to get the weight array <END>
<BEG> this will allocate more space for input connection information if the array for this have be fill up <END>
<BEG> this function calculate what the output value should be <END>
<BEG> set the number of epoch to use param e the number of epoch to use <END>
<BEG> get whether normalization have be turn off <END>
<BEG> get whether to fit a logistic regression itself train use sgd to the output of the svm if an svm be be learn <END>
<BEG> turns on check for miss value <SEG> etc <END>
<BEG> returns the weight in sparse format <END>
<BEG> returns whether the check be turn off or not <END>
<BEG> set the calibrator to use param value the calibrator to use <END>
<BEG> returns the calibrator to use return the current calibrator <END>
<BEG> prints out the classifier <END>
<BEG> a test method for this class <END>
<BEG> return a string representation for the kernel return a string representaiton of the kernel <END>
<BEG> return the number of kernel evaluation return the number of kernel evaluation <END>
<BEG> set the value of epsilon parameter of the epsilon insensitive loss function <END>
<BEG> wrap up various variable to save memeory and do some housekeeping after optimization have finish <END>
<BEG> frees the memory use by the kernel <END>
<BEG> set the blending method param method the blend method to use <END>
<BEG> get whether resampling be turn on return true if resampling output be on <END>
<BEG> string describe default classifier <END>
<BEG> sets whether absolute error be to be minimize <END>
<BEG> returns an enumeration of the additional measure name return an enumeration of the measure name <END>
<BEG> gets the search specification string <SEG> which contain the class name of the search method and any option to it return the search string <END>
<BEG> sets the size of each bag <SEG> a a percentage of the training set size <END>
<BEG> get whether copy of instance be represent use weight rather than explicitly <END>
<BEG> get whether the out of bag prediction be store <END>
<BEG> sets whether complexity statistic be output when oob estimation be perform <END>
<BEG> aggregate an object with this one param toaggregate the object to aggregate return the result of aggregation throw exception if the supplied object ca n't be aggregate for some reason <END>
<BEG> sets the directory that will be search for cost file when load on demand <END>
<BEG> sets the misclassification cost matrix <END>
<BEG> returns true if the base classifier implement batchpredictor and be able to generate batch prediction efficiently return true if the base classifier can generate batch prediction efficiently <END>
<BEG> initializes an iterative classifier <END>
<BEG> tool tip text for finalize property return the tool tip text for the finalize property <END>
<BEG> sets the filter param filter the filter with all option set <END>
<BEG> build the classifier on the filter data <END>
<BEG> get the evaluation metric to use return the evaluation metric to use <END>
<BEG> get the classifier use a the base learner <END>
<BEG> method use to build the classifier <END>
<BEG> updates the classifier with the give instance <END>
<BEG> gets the list of possible classifers to choose from <END>
<BEG> sets the number of fold for cross-validation <END>
<BEG> output a representation of this classifier return a string representation of the classifier <END>
<BEG> sets whether to min <END>
<BEG> build the classifier <END>
<BEG> get whether to trim white space from each end of name before match <END>
<BEG> get whether to suppress output the report of model to input mapping <END>
<BEG> gets the file contain the serialized model <END>
<BEG> gets the classifier specification string <SEG> which contain the class name of the classifier and any option to the classifier param index the index of the classifier string to retrieve <SEG> start from 0 <END>
<BEG> get the number of execution slot thread to use for build the member of the ensemble <END>
<BEG> does the actual construction of the ensemble throw exception if something go wrong during the training process <END>
<BEG> classifies the give test instance <END>
<BEG> return a textual description of this model <END>
<BEG> finds best split for nominal attribute and numeric class and return value <END>
<BEG> finds best split for numeric attribute and return value <END>
<BEG> get the allowable error in a split decision <END>
<BEG> get the split criterion to use either gini or info gain <END>
<BEG> returns c4 5-type information gain for the generated split <END>
<BEG> returns number of class <END>
<BEG> computes entropy of distribution after split <END>
<BEG> updates the alpha field for all node <END>
<BEG> computes the logitboost weight from an array of y p value actual estimate class probability <END>
<BEG> sets the option weighttrimbeta <END>
<BEG> returns the fraction of all attribute in the data that be use in the logistic model in percent <END>
<BEG> cleanup in order to save memory <END>
<BEG> method not in use <END>
<BEG> makes a copy of this correlationsplitinfo object <END>
<BEG> get the right child of this node return the right child of this node <END>
<BEG> get the linear model at this node return the linear model at this node <END>
<BEG> set the minumum number of instance to allow at a leaf node param minnum the minimum number of instance <END>
<BEG> resets the object of split information param low the index of the first instance param high the index of the last instance param attr the attribute <END>
<BEG> returns the attribute use in this split return the attribute use in this split <END>
<BEG> main method by which this class can be test param args an array of option <END>
<BEG> set the maximum depth of the tree <SEG> 0 for unlimited <END>
<BEG> set whether to break tie randomly <END>
<BEG> main method for this class <END>
<BEG> creates a deep copy of the give clusterer use serialization <END>
<BEG> computes the density for a give instance <END>
<BEG> set the canopy that each canopy cluster center be within t1 distance of param clustercanopies the list canopy for each cluster center <END>
<BEG> get the actual value of t1 which may be different from the initial value if the heuristic be use return the actual value of t1 <END>
<BEG> tip text for this property return the tip text for this property <END>
<BEG> get the t2 distance to use <END>
<BEG> get the minimum t2-based density below which a canopy will be prune during periodic pruning <END>
<BEG> get the maximum number of candidate canopy to retain in memory during training <END>
<BEG> save memory <END>
<BEG> get the number of fold to use when cross-validating to find the best number of cluster <END>
<BEG> get the minimum improvement in log likelihood necessary to perform another iteration of the e and m step <END>
<BEG> set the degree of parallelism to use <END>
<BEG> start the pool of execution thread <END>
<BEG> returns the value of a cell in the matrix <END>
<BEG> returns the difference of this vector minus another <END>
<BEG> converts a vector to a string return the convert string <END>
<BEG> set the optionhandler to work on param value the optionhandler to use <END>
<BEG> get the optionhandler use in the test <END>
<BEG> main method for use the checkoptionhandler <END>
<BEG> returns all the store package <END>
<BEG> add file to classpath param f file object throw ioexception if something go wrong when add a file <END>
<BEG> computes conditional entropy of the column give the row <END>
<BEG> computes the column ' entropy for the give contingency table <END>
<BEG> sets the write mode <END>
<BEG> get whether to retain the value of string attribute in memory in the header when reading incrementally <END>
<BEG> set the source file param file the source file throw ioexception if an error occurs <END>
<BEG> resets the loader object and set the source of the data set to be the supplied inputstream <END>
<BEG> resets the loader ready to read a new data set or the same data set again <END>
<BEG> resets the loader object and set the source of the data set to be the supply file object <END>
<BEG> returns the file loader <END>
<BEG> try to determine the url loader to use for this kind of extension <SEG> return null if none can be find <END>
<BEG> returns a string describe this attribute evaluator <END>
<BEG> returns the current attribute range to be force to type nominal <END>
<BEG> sets the attribute range to be force to type nominal <END>
<BEG> sets the character use a column separator <END>
<BEG> set the buffer size to use - i e <END>
<BEG> set label specification for nominal attribute <END>
<BEG> sets the database password <END>
<BEG> determines and return if possible the structure internally the header of the data set a an empty set of instance <END>
<BEG> sets instance that should be store <END>
<BEG> resets the loader ready to read a new data set <END>
<BEG> writes a batch of instance throw ioexception throw ioexception if save in batch mode be not possible <END>
<BEG> writes a batch of instance <END>
<BEG> read the data set incrementally -- -get the next instance in the data set or return null if there be no more instance to get <END>
<BEG> gets token <END>
<BEG> get the dir specify a the source return the source directory <END>
<BEG> resets the loader ready to read a new data set throw ioexception if something go wrong <END>
<BEG> copies the instance but fill up it value base on the give array of double <END>
<BEG> get whether to keep the dictionary sort alphabetically a it be build <END>
<BEG> sets whether output instance contain 0 or 1 indicating word presence <SEG> or word count <END>
<BEG> sets the number of word per class if there be a class attribute assign to attempt to keep <END>
<BEG> sets whether if the word frequency should be transform into log 1+fij where fij be the frequency of word i in document instance j <END>
<BEG> sets whether if the word frequencies in a document should be transform into : < br > fij log num of docs num of docs with word i < br > where fij be the frequency of word i in document instance j <END>
<BEG> sets whether if the token be to be downcased or not <END>
<BEG> gets the stopwords handler <END>
<BEG> gets the current setting of the dictionarybuilder return an array of string suitable for pass to setoptions <END>
<BEG> main method for test this class param args argument <END>
<BEG> get the value for a particular variable <END>
<BEG> tries to fetch the macro < p > the same invariant of { link macrodeclarations } applies here too <END>
<BEG> whether the variable be declare <END>
<BEG> tries to fetch the variable <END>
<BEG> ' < code > - < code > ' minus operator <END>
<BEG> ' < code > < code > ' division operator <END>
<BEG> ' < code > - < code > ' unary minus operator <END>
<BEG> adds a variable declaration for a double variable < p > requires that the variable have n't be declare before <END>
<BEG> whether the variable be contain in one of the combined declaration <END>
<BEG> tries to fetch a variable from one of the combined declaration < p > the same invariant of { link variabledeclarations } applies here too <END>
<BEG> deletes an element from this vector <END>
<BEG> gets the distance use <END>
<BEG> disable the give not to have capability <END>
<BEG> return the miss from the last find call <END>
<BEG> get the font size return the size <END>
<BEG> get the font wrap by this instance return the font object <END>
<BEG> parses the give commandline parameter and generate the javadoc <END>
<BEG> performs the actual logging <END>
<BEG> sets the capacity of the vector param n the capacity <END>
<BEG> multiplies a value to an element param i the index of the element param s the value <END>
<BEG> returns a subvector <END>
<BEG> subtracts another doublevector element by element param v the second doublevector <END>
<BEG> multiplies another doublevector element by element in place param v the second doublevector <END>
<BEG> returns the reverse vector <END>
<BEG> return the imaginary part of the eigenvalue return imag diag d <END>
<BEG> gets the value of an element <END>
<BEG> clones the intvector object <END>
<BEG> swaps the value store at i and j param i the index i param j the index j <END>
<BEG> solve a x = b param b a matrix with as many row a a and any number of column <END>
<BEG> returns the cumulative probability of a normal distribution <END>
<BEG> returns the density of the standard normal <END>
<BEG> returns the log-density of the noncentral chi-square distribution <END>
<BEG> gets a serializer to use <END>
<BEG> returns the radius of the node 's ball <END>
<BEG> sets the maximum number of instance allow in a leaf <END>
<BEG> sets whether if a parent ball should completely enclose it two child ball <END>
<BEG> adds an instance to the ball tree <END>
<BEG> returns the seed value of random number generator <END>
<BEG> sets whether if the initial anchor be choose randomly <END>
<BEG> prints the specified number of space <END>
<BEG> sets the search method param searchmethod the search method with all option set <END>
<BEG> tip text for this property <END>
<BEG> gets the minimum relative box width <END>
<BEG> get the maximum number of instance in a leaf <END>
<BEG> returns the wide dimension <END>
<BEG> adds the give instance info <END>
<BEG> signals end of the near neighbour search <END>
<BEG> returns the standard deviation of point visit <END>
<BEG> returns the minimum of point visit <END>
<BEG> returns the minimum of coords per point <END>
<BEG> returns an enumeration of the additional measure name <END>
<BEG> returns the standard deviation of internal node visit <END>
<BEG> returns the minimum of internal node visit <END>
<BEG> removes an option from a give list of string that specifies option <END>
<BEG> get a list of installed package <END>
<BEG> get the package that this constraint apply to <END>
<BEG> get the upper bound of this range return the upper bound <END>
<BEG> get the upper comparison return the upper comparison <END>
<BEG> check the target package against the constraint embody in this packageconstraint <END>
<BEG> remove the supplied list of fully qualified class name to the disabled list param classnames a list of class name to remove <END>
<BEG> remove the supply fully qualified class name from the list of disabled plugins param classname the fully qualified name of a class to remove <END>
<BEG> gets the value at index from the array a a double <END>
<BEG> get the structure of the result produce by this function <END>
<BEG> get the result of apply this function <END>
<BEG> return the structure of the result of apply this expression a an attribute <END>
<BEG> gets the result of evaluate the expression when the optype be categorical or ordinal a the actual string value <END>
<BEG> get the result of evaluate the expression for continuous optype <END>
<BEG> create an instance of { link jaxbelement } { code < } { link list } { code < } { link integer } { code > } { code > } } <END>
<BEG> return this mining field a an attribute <END>
<BEG> returns the custom display string <END>
<BEG> if no argument be give <SEG> it just print the presence of the jython class <SEG> otherwise it expect a jython filename to execute <END>
<BEG> runs the stemmer with the give option param args the option <END>
<BEG> outputs the debug message <SEG> prefixed with classname <END>
<BEG> returns the stopwords algorithms <END>
<BEG> returns true if the give string be a stop word <END>
<BEG> return the type of this technical information return the type of this information <END>
<BEG> remove the give printstream from the list <END>
<BEG> writes < code > b length < code > bytes to this output stream <END>
<BEG> a convenience method to write a formatted string to this output stream use the specify format string and argument <END>
<BEG> appends the specified character to this output stream <END>
<BEG> gets the current option setting for the optionhandler <END>
<BEG> returns an enumeration of all the available option return an enumeration of all available option <END>
<BEG> sets the max size of the ngram <END>
<BEG> runs the tokenizer with the give option and string to tokenize <END>
<BEG> return the root node of the trie return the root node <END>
<BEG> find a name resource <END>
<BEG> try to find a resource from the classloader for the name package <END>
<BEG> return the parsed dom document <END>
<BEG> parse the give stream and return a dom document <END>
<BEG> evaluates and return the double result of the xpath expression <END>
<BEG> return the handler for write method return the methodhandler for read method <END>
<BEG> gets the number of example <SEG> give by option <END>
<BEG> sets whether the class be balance <END>
<BEG> sets the perturbation fraction <END>
<BEG> sets the noise percentage <END>
<BEG> return the default number of attribute return the default number of attribute <END>
<BEG> sets the number of class the dataset should have <END>
<BEG> sets the number of centroid to use <END>
<BEG> gets the maximum number of test in rule <END>
<BEG> return the default min size of rule return the default min size of rule <END>
<BEG> sets the minimum number of test in rule <END>
<BEG> sets the number of irrelevant attribute <END>
<BEG> return the default number of numeric attribute return the default number of numeric attribute <END>
<BEG> gets the number of numerical attribute <END>
<BEG> sets the array that define which of the attribute be see to be irrelevant <END>
<BEG> sets the amplitude multiplier <END>
<BEG> return the default max range return the default max range <END>
<BEG> sets the upper boundary for the range of x param value the upper boundary <END>
<BEG> sets the gaussian noise rate <END>
<BEG> gets the upper and low boundary for instance per cluster <END>
<BEG> sets the low boundary for instance per cluster <END>
<BEG> sets the low boundary for the radius of the cluster <END>
<BEG> sets the percentage of noise set <END>
<BEG> make a string from the cluster feature <END>
<BEG> check <SEG> whether cluster type be uniform return true if cluster type be uniform <END>
<BEG> check <SEG> whether cluster sub type be integer return true if cluster sub type be integer <END>
<BEG> sets which attribute be nominal param rangelist a string represent the list of attribute <END>
<BEG> sets which attribute be nominal <END>
<BEG> gets the relation name the dataset should have <END>
<BEG> gets the format of the dataset that be to be generate <END>
<BEG> sets the random generator <END>
<BEG> gets the epilogue string <END>
<BEG> get a probability estimator for a value param give the new value that data be conditional upon return the estimator for the supplied value give the condition <END>
<BEG> add a new data value to the current estimator <END>
<BEG> get a probability estimate for a value param data the value to estimate the probability of return the estimate probability of the supplied value <END>
<BEG> gets whether only weight should be udpated <END>
<BEG> the tool tip for this property <END>
<BEG> returns the number of component to use <END>
<BEG> returns the interval for the give confidence value <END>
<BEG> returns textual description of this estimator <END>
<BEG> returns the natural logarithm of the density estimate at the give point <END>
<BEG> gets the data type of each of the result column produce for a single run <END>
<BEG> gets the name of each of the result column produce for a single run <END>
<BEG> set a list of method name for additional measure to look for in splitevaluators <END>
<BEG> returns an enumeration of any additional measure name that might be in the splitevaluator return an enumeration of the measure name <END>
<BEG> gets the key for a specified run number <END>
<BEG> gets the raw output from the classifier return the raw output from the classifier <END>
<BEG> sets whether the custom property iterator should be use <END>
<BEG> sets the path of property take to get to the custom property to iterate over <END>
<BEG> gets the array of value to set the custom property to <END>
<BEG> when an experiment be run <SEG> this return the current dataset number <END>
<BEG> set the result producer use for the current experiment <END>
<BEG> sets the prefix to use for the test set <END>
<BEG> returns the currently set replacement string to use on the relation name <END>
<BEG> closes the zip file <END>
<BEG> removes an array of observed pair of value <END>
<BEG> set the column to sort on <SEG> -1 mean the default sort <END>
<BEG> set the base experiment <END>
<BEG> gets a single filter from the set of available filter <END>
<BEG> input an instance for filter <END>
<BEG> sets the file point to a serialize <SEG> train classifier <END>
<BEG> set whether the classification of the classifier be output <END>
<BEG> set whether the old class attribute be remove <END>
<BEG> sets if binary attribute be to be treates a nominal one <END>
<BEG> sets whether all nominal value be transform into new attribute <SEG> not just if there be more than 2 <END>
<BEG> sets the bias towards a uniform class <END>
<BEG> sets whether the instance weight will be adjust to maintain total weight per class <END>
<BEG> sets if selection be to be invert <END>
<BEG> sets whether miss value should be use rather than remove instance where the translated value be not know due to border effect <END>
<BEG> set whether select column should be remove or keep <END>
<BEG> sets the range of attribute to be ignore <END>
<BEG> get the index of the attribute use <END>
<BEG> signify that this batch of input to the filter be finish <END>
<BEG> sets the flag if miss value be treat a extra value <END>
<BEG> sets the size of noise data <SEG> a a percentage of the original set <END>
<BEG> get the list of attribute spec to use to create the new attribute <END>
<BEG> gets the current range selection return a string contain a comma separated list of range <END>
<BEG> return tip text for this property suitable for display in the explorer experimenter gui <END>
<BEG> returns a description of this option suitable for display a a tip text in the gui <END>
<BEG> set the clusterer for use in filter param newclusterer the clusterer to use <END>
<BEG> gets range of attribute to be ignore <END>
<BEG> get whether the supplied column be to be remove or keep return true if the supply column will be keep <END>
<BEG> set which attribute be to be copy or keep if invert be true param rangelist a string represent the list of attribute <END>
<BEG> runs the filter with the give parameter <END>
<BEG> sets the minimum frequency <END>
<BEG> get the index of the first value use <END>
<BEG> sets index of the first value use <END>
<BEG> convert a single instance over <END>
<BEG> sets the scaling factor <END>
<BEG> get the minimum threshold <END>
<BEG> get the maximum threshold <END>
<BEG> get the close to tolerance <END>
<BEG> set the number of decimal to round to <END>
<BEG> sets the class contain the transformation method <END>
<BEG> get the transformation method <END>
<BEG> test the data whether the filter can actually handle it <END>
<BEG> gets whether unused attribute one that be not cover by any of the range be remove from the output <END>
<BEG> get whether to invert the selection - i e <END>
<BEG> set the seed value for the random number generator <END>
<BEG> process the give instance may change the provided instance and return the modified version <END>
<BEG> gets the attribute type to be delete by the filter <END>
<BEG> gets the maximum variance attribute be allow to have before they be delete by the filter <END>
<BEG> sets the regular expression to replace match attribute name with <END>
<BEG> gets whether to invert the selection of the attribute <END>
<BEG> tip text for this property suitable for display in the gui <END>
<BEG> get the date replacement value return the date replacement value <END>
<BEG> set the random number generator seed value <END>
<BEG> determines the output format base on the input format and return this <END>
<BEG> sets the sort type to be use <END>
<BEG> sets the format of the input instance <END>
<BEG> creates a new instance the same a one instance the destination but with some attribute value copy from another instance the source param source the source instance param dest the destination instance return the new merge instance <END>
<BEG> sets whether the header will be modify when select on nominal attribute <END>
<BEG> sets the classifier to classify instance with <END>
<BEG> gets the classifier specification string <SEG> which contain the class name of the classifier and any option to the classifier <END>
<BEG> gets the attribute on which misclassifications be base <END>
<BEG> gets the threshold for the max error when predict a numeric class <END>
<BEG> get whether selection be invert <END>
<BEG> sets the percentage of intances to select <END>
<BEG> set whether select value should be remove or keep <END>
<BEG> get whether to apply the filter to instance that arrive once the first training batch have be see <END>
<BEG> gets the subsample size <END>
<BEG> creates a subsample of the current set of input instance <END>
<BEG> show the perspective toolbar <END>
<BEG> get the id of this perspective return the id of this perspective <END>
<BEG> return the title for the tab <SEG> i e <END>
<BEG> set the filename param filename the new filename <END>
<BEG> set the weight for the current attribute <END>
<BEG> removes a changelistener from the panel param l the listener to remove <END>
<BEG> invoke when a window be close param e the window event <END>
<BEG> sets the instance who 's attribute name will be display <END>
<BEG> remove a listener param dsl a < code > datasourcelistener < code > value <END>
<BEG> remove an instance listener param dsl a < code > instancelistener < code > value <END>
<BEG> remove a listener for test set param tsl a < code > testsetlistener < code > value <END>
<BEG> remove a training set listener param tsl a < code > trainingsetlistener < code > value <END>
<BEG> accept and process a training set event param e a < code > trainingsetevent < code > value <END>
<BEG> get the number of plot to display return the number of plot to display <END>
<BEG> set active status of this perspective <END>
<BEG> set the training set param tse the training set <END>
<BEG> returns a vector of beaninstances that can be consider a output or the right-hand side of a sub-flow param subset the sub-flow to examine return a vector of output of the sub-flow <END>
<BEG> return the source beaninstance for this connection return a < code > beaninstance < code > value <END>
<BEG> sets the y coordinate of this bean param newy an < code > int < code > value <END>
<BEG> set the min y value param m a < code > double < code > value <END>
<BEG> set the classifier object to be edit param object an < code > object < code > value <END>
<BEG> get whether the point size on classification error plot should be proportional to the prediction margin <END>
<BEG> set the classifierperformanceevaluator to be customize param object an < code > object < code > value <END>
<BEG> gets the class value consider to be the positive class value <END>
<BEG> returns true if <SEG> at this time <SEG> the object will accept a connection accord to the supplied event name param eventname the event return true if the object will accept a connection <END>
<BEG> returns true if <END>
<BEG> returns true <SEG> if at the current time <SEG> the name event could be generate <END>
<BEG> return an enumeration of user activate request for this bean return an < code > enumeration < code > value <END>
<BEG> notify this object that it have be deregistered a a listener with a source for name event <END>
<BEG> accept a test set param e a < code > testsetevent < code > value <END>
<BEG> set a bean context for this bean param bc a < code > beancontext < code > value <END>
<BEG> set instance for this bean <END>
<BEG> describe < code > performrequest < code > method here <END>
<BEG> set the name of the attribute for the y-axis in offscreen plot <END>
<BEG> get the width in pixel of the offscreen image to generate <END>
<BEG> get the additional option for the offscreen renderer return the additional option <END>
<BEG> returns true if <SEG> at this time <SEG> the object will accept a connection via the name event param eventname the name of the event return true if the object will accept a connection <END>
<BEG> get the event set descriptor for this bean return an < code > eventsetdescriptor [ ] < code > value <END>
<BEG> set the model performance chart object to customize param object the model performance chart to customize <END>
<BEG> gets call if the use close the dialog via the close widget on the window - be treat a cancel <SEG> so restore the imagesaver to it previous state <END>
<BEG> set the name of the connected step to send false instance to param falsestep the name of the step to send false instance to <END>
<BEG> get the name of the connected step to send false instance to return the name of the step to send false instance to <END>
<BEG> get the structure of the output encapsulate in the name event <END>
<BEG> return the graph type return a < code > int < code > value <END>
<BEG> perform the name request param request a < code > string < code > value exception illegalargumentexception if an error occurs <END>
<BEG> get how often progress be report to the status bar <END>
<BEG> get whether to compute evaluation for chart over a fixed size window of the most recent instance rather than the whole stream <END>
<BEG> set the object to be edit param object a incrementalclassifierevaluator object <END>
<BEG> get the status return an < code > int < code > value <END>
<BEG> adds an instance to the second input 's buffer param inst the instance to add <END>
<BEG> remove an instance listener param dsl the instance listener to remove <END>
<BEG> get the incoming instance structure from the second upstream step if possible return the incoming instance structure of the second upstream step <END>
<BEG> get the second input step return the second input step <END>
<BEG> get the second input structure return the second incoming instance structure or null if unavailable <END>
<BEG> return all the bean in the output return a vector of all the bean in the output <END>
<BEG> increase the font size by one <END>
<BEG> get the event set descriptor pertinent to data source return an < code > eventsetdescriptor [ ] < code > value <END>
<BEG> perform a name user request param request a string contain the name of the request to perform exception illegalargumentexception if request be not support <END>
<BEG> set the prefix to prepend to the model file name <END>
<BEG> get how often to save incremental model <END>
<BEG> set the file format to use for save <END>
<BEG> get the size of the in-memory buffer return the size of the in-memory buffer <END>
<BEG> stop any processing that the bean might be do <END>
<BEG> handle a closing event under a cancel condition <END>
<BEG> register a throughput measurement end point <END>
<BEG> register the end of measurement <END>
<BEG> help information suitable for display in the gui <END>
<BEG> get whether the new attribute create should be a nominal binary attribute rather than a numeric binary attribute <END>
<BEG> get whether to consume non matching instance <END>
<BEG> set internally encode list of match-replace rule param detail the list of match-replace rule <END>
<BEG> get the internally encoded list of match-replace rule return the match-replace rule <END>
<BEG> accept and process an instance event param e an < code > instanceevent < code > value <END>
<BEG> set the substringreplacer to edit param o the subtringreplacer to edit <END>
<BEG> accept and process an textevent param textevent the textevent to process <END>
<BEG> set the textsaver object to customize <END>
<BEG> return the instance of the data set return an < code > instances < code > value <END>
<BEG> get the training instance return an < code > instances < code > value <END>
<BEG> tip text info for this property return a < code > string < code > value <END>
<BEG> gets the minimum y-coordinate bound <SEG> in training-instance unit not mouse coordinate <END>
<BEG> increment the number of successfully complete sub experiment <END>
<BEG> push an experiment back on the queue of wait experiment param expnum the index of the experiment to push onto the queue <END>
<BEG> main method for test this class param args a < code > string [ ] < code > value <END>
<BEG> plots the training data on-screen <END>
<BEG> set the height of the visualization param ph the height <END>
<BEG> set the width of a pixel param pw the width of a pixel <END>
<BEG> set the classifier to use param dc the classifier <END>
<BEG> set the minimum and maximum value of the y axis fix dimension param miny a < code > double < code > value param maxy a < code > double < code > value <END>
<BEG> set the y axis fix dimension param yatt an < code > int < code > value <END>
<BEG> return the number of repetition to use <END>
<BEG> the comma-separated list of attribute name that identify a column <END>
<BEG> return the default significance <END>
<BEG> gets the current upper run number <END>
<BEG> switches to the specify panel <END>
<BEG> removes a propertychangelistener who will be notify of value change <END>
<BEG> terminates this panel <SEG> which mean <SEG> in the case of this panel <SEG> that it set all reference to associate jframe object to null <END>
<BEG> hook method for clean up the interface after a switch <END>
<BEG> save the currently select associator output to a file <END>
<BEG> handles construct a popup menu with visualization option <END>
<BEG> returns the tooltip for the tab in the explorer return the tooltip of this tab <END>
<BEG> get the vector of plot size see weka gui visualize plot2d <END>
<BEG> returns whether the instance be save for visualization for only evaluation of the prediction be to happen <END>
<BEG> get whether the point size should be proportional to the prediction margin classification only <END>
<BEG> sets the classifier use for make the prediction <END>
<BEG> sets the cluster evaluation object to use <END>
<BEG> pops up a treevisualizer for the clusterer from the currently select item in the result list param graphstring the description of the tree in dotty format param treename the title to assign to the display <END>
<BEG> tests out the explorer environment <END>
<BEG> return whether entropy-based evaluation meastures of the classifier be output <END>
<BEG> returns the maximum size in pixel for plot of plot classifier error of numeric attribute <END>
<BEG> return the default cluster test mode for the cluster panel <END>
<BEG> sets the logger to receive informational message param newlog the logger that will now get info message <END>
<BEG> method get call in case of a change event param e the associated change event <END>
<BEG> returns whether the user can change the class in the dialog <END>
<BEG> sets the capability to use for filter <END>
<BEG> get the global input property return the global input property <END>
<BEG> return the name of the output file return the name of the output file <END>
<BEG> this method set the node size that be appropriate consider the maximum label size that be present <END>
<BEG> sets the preferred size for m_gp graphpanel to the minimum size that be neccessary to display the graph <END>
<BEG> this method be an implementation for layoutcompleteeventlistener class <END>
<BEG> bif reader < br > reads a graph description in xmlbif03 from an inputstrem <END>
<BEG> see sugiyama et al <END>
<BEG> get the seperator between level <END>
<BEG> the number of the child node <END>
<BEG> the value in the parent node <END>
<BEG> whether the current position be the root return whether the current position be the root <END>
<BEG> get whether to show zero instance a unknown i e <END>
<BEG> tells the panel to use a new set of instance <END>
<BEG> calculates the optimal width for the header of the give table <END>
<BEG> get the main knowledge flow perspective <END>
<BEG> get the step that own this viewer <END>
<BEG> called when the ok button be press <END>
<BEG> initializes the viewer throw wekaexception if a problem occurs <END>
<BEG> set the step to edit in this editor param step the step to edit <END>
<BEG> layout the editor dialog <END>
<BEG> applys setting from the supplied setting object param setting the setting object that might or might not have be <END>
<BEG> get the y coordinate of this step on the graphical layout return the y coordinate of this step <END>
<BEG> set the y coordinate of this step on the graphical layout param y the y coordinate of this step <END>
<BEG> get the number of plugin kf templates available return the number of plugin kf templates available <END>
<BEG> get the plugin template flow correspond to the description param flowdescription the description of the template flow to get return the flow throw ioexception if an io error occur throw wekaexception if a problem occurs <END>
<BEG> pops up the modal dialog and wait for cancel or a selection <END>
<BEG> enable the tab button for each visible perspective <END>
<BEG> attempts to update the editor value from the textfield <END>
<BEG> removes all of the result buffer from the history <END>
<BEG> adds an object to the result list <END>
<BEG> gets the buffer associate with the currently select item in the list <END>
<BEG> returns a new thread to execute <END>
<BEG> returns an initialized script object <END>
<BEG> displays the panel in a frame <END>
<BEG> runs the script from commandline <END>
<BEG> moves the file directory recursively <END>
<BEG> sets the font of the specify attribute <END>
<BEG> sets the foreground font color of the specify attribute <END>
<BEG> searches for a keyword token <END>
<BEG> checks whether the character be quote delimiter <END>
<BEG> set the current font family affect all built-in style <END>
<BEG> returns the quote delimiter character to use <END>
<BEG> sets the string that be the start of a multi-line comment <END>
<BEG> sets the string that be the end of a block <END>
<BEG> returns whether match block end be insert or not <END>
<BEG> returns whether blank be use instead of tab <END>
<BEG> returns the background color <END>
<BEG> sets whether the keywords be case-sensitive or not <END>
<BEG> executes the command with the give parameter <END>
<BEG> add the give listener to the list of listener <END>
<BEG> called when the caret position be updated <END>
<BEG> return the maximum number of row to retrieve <END>
<BEG> return the password that produce the table model <END>
<BEG> set the focus in a designate control <END>
<BEG> remove the give listener from the list of listener <END>
<BEG> set the parameter back to standard <END>
<BEG> close all tab <END>
<BEG> calculate the optimal column width for the current table <END>
<BEG> this method get call when the connection be either establish or disconnect <END>
<BEG> this method get call when a query have be execute <END>
<BEG> sends the supplied message to the status line <END>
<BEG> show which bar be the current y attribute <END>
<BEG> sets the legend to be for a numeric variable <END>
<BEG> sets up the gui component <END>
<BEG> return the scale factor for the y-axis return the scale scale factor for the y-axis <END>
<BEG> get the custom height currently use return the custom height currently use see # m_usecustomdimensions <END>
<BEG> get the shape size for the plot data return the shape size for the plot data <END>
<BEG> set whether consecutive point should be connect by line param cp a fastvector of boolean specify which point should be connect to their preceeding neighbour <END>
<BEG> set the colour index of the data param c the colouring index <END>
<BEG> get the currently set y index of the data return the current y index <END>
<BEG> draw an outlined rectangle in current pen color <END>
<BEG> draw a filled rectangle with 3d effect in current pen color <END>
<BEG> return the title for the save dialog <END>
<BEG> called when the user change setting <END>
<BEG> clear all step property <END>
<BEG> main method for test this class param args command line argument <END>
<BEG> set the log to use param log log to use <END>
<BEG> get the log level in use return <END>
<BEG> log at the basic level param message the message to log <END>
<BEG> get whether the managed step must run single-threaded <END>
<BEG> set the fully qualified name of an editor component that can be use to graphically configure the step <END>
<BEG> started processing <END>
<BEG> clients can use this to record a stop point for stream throughput measure <END>
<BEG> get a named step connect to this step with an outgoing connection param stepname the name of the step to look for return the connected step <END>
<BEG> get the man of upstream incoming connection connect step return the map of upstream connect step <END>
<BEG> get the number of outgo connection from the managed step return the number of incoming connection <END>
<BEG> get the number of outgo connection from the managed step of a give type param connectionname the name of the connection type return the number of outgo connection of this type <END>
<BEG> log a message at the basic logging level param message the message to log <END>
<BEG> log an error param message the message to log param cause the optional throwable to log <END>
<BEG> process incoming data <END>
<BEG> set the step manager for this step param manager the step manager to use <END>
<BEG> get the name index of the y axis attribute return the name index of the y axis attribute <END>
<BEG> get a list of outgo connection type that this step can produce <END>
<BEG> initialize the step ; throw wekaexception if a problem occurs <END>
<BEG> reset the helper <END>
<BEG> process a batch data point param data the data throw wekaexception if a problem occurs <END>
<BEG> get whether this { code steptask } be resource intensive cpu memory or not <END>
<BEG> get whether this { code steptask } must run single thread - i e <END>
<BEG> controls start and stop the experiment <END>
<BEG> get the base url use for resolve relative resource location <END>
<BEG> append the give argument to this argument <END>
<BEG> write out give string a an astring <SEG> depend on the type of the character inside the string <END>
<BEG> convert the give string into byte in the specified charset <SEG> and write the byte out a an astring param s string to write out param charset the charset return this since javamail 1 6 0 <END>
<BEG> write out number <END>
<BEG> write out a parenthesised list <END>
<BEG> write out all the buffered item into the output stream <END>
<BEG> start tls on the current connection <END>
<BEG> temporarily turn off protocol tracing <SEG> e g <SEG> to prevent trace the authentication sequence <SEG> include the password <END>
<BEG> resume protocol tracing <SEG> if it be enable to begin with <END>
<BEG> return a response object that look like a bye protocol response <END>
<BEG> read a string a an arbitrary sequence of character <SEG> stop at the delimiter used to read part of a response code inside [ ] <END>
<BEG> check whether this folder have new message <END>
<BEG> expunge the indicated message <SEG> which must have be mark a deleted <END>
<BEG> returns the predicted uid that will be assign to the next message that be append to this folder <END>
<BEG> get the quota for the quotaroot associate with this folder <END>
<BEG> set the quota for the quotaroot specify in the quota argument <END>
<BEG> get the access control list entry for this folder <END>
<BEG> get all the right that may be allow to the give identifier <END>
<BEG> get the right allow to the currently authenticate user <END>
<BEG> get the attribute that the imap server return with the list response <END>
<BEG> return the imapprotocol object for this folder <END>
<BEG> release the store protocol object <END>
<BEG> get the received date internaldate <END>
<BEG> get the filename disposition parameter <END>
<BEG> invalidate cache header and envelope information for this message <END>
<BEG> get a new authenticate protocol object for this folder <END>
<BEG> if a select succeed <SEG> but indicate that the folder be read-only <SEG> and the user ask to open the folder read_write <SEG> do we allow the open to succeed ? <END>
<BEG> report whether the connection pool be full <END>
<BEG> release the protocol object back to the connection pool <END>
<BEG> release a store protocol object that be be use by a folder <END>
<BEG> get the user name to be use with the proxyauth command <END>
<BEG> close this store <END>
<BEG> create an imapfolder object <END>
<BEG> use the imap idle command see < a href= http : www ietf org rfc rfc2177 txt > rfc 2177 < a > <SEG> if support by the server <SEG> to enter idle mode so that the server can send unsolicited notification without the need for the client to constantly poll the server <END>
<BEG> expunge the message with the give sequence number <END>
<BEG> add count message to the cache <END>
<BEG> read a list of space-separated flag-extension sequence and return the list a a array of strings <END>
<BEG> convert an array of longs into an array of uidsets param uids the uids return array of uidset object <END>
<BEG> get the modseq value specify when this instance be create <END>
<BEG> return all the right in this rights object <END>
<BEG> run thru the give array of message <SEG> apply the give condition on each message and generate set of contiguous sequence-numbers for the successful message <END>
<BEG> return uidsets for the message <END>
<BEG> throws < code > foldernotfoundexception < code > unless this folder be name inbox <END>
<BEG> return the unique id string for this message <SEG> or null if not available <END>
<BEG> invalidate the cache of content for this message object <SEG> cause it to be fetch again from the server the next time it be need <END>
<BEG> return all the header from this message a an enumeration of header object <END>
<BEG> allow the client to authenticate the server base on it response <END>
<BEG> formats the back trace for the give log record <END>
<BEG> gets the zoneddatetime from the give log record <END>
<BEG> creates a new log record comparator from the give class name <END>
<BEG> creates a new error manager from the give class name <END>
<BEG> check if this < tt > handler < tt > would actually log a give < tt > logrecord < tt > into it internal buffer <END>
<BEG> it be possible for the handler to be close after the call to isloggable <END>
<BEG> set the log level specify which message level will be log by this < tt > handler < tt > <END>
<BEG> define an errormanager for this handler <END>
<BEG> sets the attachment < tt > formatter < tt > object for this handler <END>
<BEG> sets the attachment file name for each attachment <END>
<BEG> sets the attachment file name formatters <END>
<BEG> sets a literal string for the email subject <END>
<BEG> log the message at the specified level <END>
<BEG> param securerandom the securerandom to set throw generalsecurityexception for security error <END>
<BEG> param trustedhosts the host to trust <END>
<BEG> param value string to check <END>
<BEG> transforms an input stream into html use the give configuration <END>
<BEG> get all partial derivative <END>
<BEG> convert degree to radian <SEG> with error of less than 0 5 ulp return instance convert into radian <END>
<BEG> get the number of point to use <END>
<BEG> multiply in place <END>
<BEG> evaluate taylor expansion of a sparse gradient <END>
<BEG>  deprecate a of 3 1 <SEG> replace by { link # value derivativestructure } <END>
<BEG> gets a rule <END>
<BEG> stores a rule <END>
<BEG> param x x-coordinate <END>
<BEG> indicates whether a point be within the interpolation range <END>
<BEG> compute the value of the function for the give argument <END>
<BEG> returns the derivative a a { link univariatefunction } <END>
<BEG> calculate the function value at the give point <END>
<BEG> verifies that the input array be valid <END>
<BEG> create a laguerre polynomial <END>
<BEG> return the high end of the search interval <END>
<BEG> return the absolute value of this complex number <END>
<BEG> get a hashcode for the complex number <END>
<BEG> returns a { code complex } whose value be { code this factor } <SEG> with { code factor } interpret a a integer number <END>
<BEG> compute the < a href= http : mathworld wolfram com inversesine html target= _top > inverse sine < a > of this complex number <END>
<BEG> returns of value of this complex number raise to the power of { code x } <END>
<BEG> compute the < a href= http : mathworld wolfram com sine html target= _top > sine < a > of this complex number <END>
<BEG> get the unique instance <END>
<BEG> checks whether the instance be a pure quaternion within a give tolerance <END>
<BEG> gets the third component of the quaternion second component of the vector part <END>
<BEG> multiplies the instance by a scalar <END>
<BEG> set the rounding mode <END>
<BEG> clears the ieee 854 status flag <END>
<BEG> create an instance from an int value <END>
<BEG> creates a { link dfp } with a non-finite value <END>
<BEG> get the constant & radic ; 3 <END>
<BEG> get the constant & radic ; 3 3 <END>
<BEG> get the constant ln 5 split in two piece <END>
<BEG> computes e to the give power <END>
<BEG> computes cos a used when 0 < a < pi 4 <END>
<BEG> compute the sine of the argument <END>
<BEG>  the default implementation generate the sample by call { link # sample } in a loop <END>
<BEG>  the variance be always undefined no matter the parameter <END>
<BEG> generate a random sample from the distribution <END>
<BEG>  returns the high value with non-zero probability <END>
<BEG>  return { code sum singleton [ i ] probability [ i ] } <END>
<BEG>  return { code sum singleton [ i ] - mean ^ 2 probability [ i ] } <END>
<BEG>  the support of this distribution include the upper bound <END>
<BEG>  for mean parameter { code k } <SEG> the variance be { code k^2 } <END>
<BEG> access the denominator degree of freedom <END>
<BEG>  for shape parameter { code alpha } and scale parameter { code beta } <SEG> the variance be { code alpha beta^2 } <END>
<BEG> access the scale parameter <SEG> { code beta } <END>
<BEG> access the sample size <END>
<BEG> calculates { code p d_n < d } use method describe in [ 1 ] with quick decision for extreme value give in [ 2 ] see above <END>
<BEG>  see documentation of { link # density double } for computation detail <END>
<BEG>  for number of success { code r } and probability of success { code p } <SEG> the variance be { code r 1 - p p^2 } <END>
<BEG>  the upper bound of the support be equal to the upper limit parameter { code b } of the distribution <END>
<BEG>  the upper bound of the support be equal to the upper bound parameter of the distribution <END>
<BEG>  for low bound { code low } and upper bound { code upper } <SEG> the variance be { code upper - low ^2 12 } <END>
<BEG> return an array contain the expected dimension <END>
<BEG> param index dimension index <END>
<BEG> get the value at the high end of the interval <END>
<BEG> gets the message in a specified locale <END>
<BEG> configure the start point initial guess <END>
<BEG> configure the max iteration <END>
<BEG> < p > divide the value of this fraction by another <SEG> return the result in reduced form <END>
<BEG> < p > access the denominator a a { code long } <END>
<BEG> access the second chromosome <END>
<BEG> returns the crossover policy <END>
<BEG> returns the mutation rate <END>
<BEG> generates a representation correspond to an identity permutation of length l which can be pass to the randomkey constructor <END>
<BEG> sets the arity number of chromosome draw to the tournament <END>
<BEG> get the high value belong to the instance <END>
<BEG> copy the instance <END>
<BEG> build a region cover the whole space <END>
<BEG> get the second coordinate of the vectorial part of the quaternion <END>
<BEG> convert to a constant vector without derivative <END>
<BEG> get the l < sub > 2 < sub > norm for the vector <END>
<BEG> translate the plane by the specified amount <END>
<BEG> check if the instance contain a point <END>
<BEG> get the axis of the second rotation <END>
<BEG> get the end point of the segment <END>
<BEG> parses a string to produce a { link vector3d } object <END>
<BEG> get the vector coordinate a a dimension 2 array <END>
<BEG> get the part of the node cut sub-hyperplane that belong to the boundary and have the inside of the region on the plus side of it underlying hyperplane <END>
<BEG> projected point <END>
<BEG> check if the cut sub-hyperplane touch inside cell <END>
<BEG> get all the part of the cut sub-hyperplane know to touch inside cell <END>
<BEG> get the node that be use to split the inside touch part <END>
<BEG> get the node whose element be not large than the reference object <END>
<BEG> get the upper angular bound of the arc <END>
<BEG> check a point with respect to the arc <END>
<BEG> build an ordered list of arc represent the instance <END>
<BEG> reset the instance a if build from a pole <END>
<BEG>  see # getphase vector3d <END>
<BEG>  see # getpointat double <END>
<BEG> get the x axis of the circle <END>
<BEG> get the offset orient distance of a direction <END>
<BEG> get end vertex <END>
<BEG> get the corresponding normalized vector in the 3d euclidean space <END>
<BEG> compute the distance angular separation between two point <END>
<BEG> get the component format <END>
<BEG> check if a column index be valid <END>
<BEG> check if a matrix be subtraction compatible with the instance <END>
<BEG> get a string representation for this matrix <END>
<BEG> computes a hashcode for the matrix <END>
<BEG> get a reference to the underlie data array <END>
<BEG> compute the sum of { code this } and { code v } <END>
<BEG> compute { code this } minus { code v } <END>
<BEG> compute the outer product <END>
<BEG> sets the entry in row number < code > row < code > a a row matrix <END>
<BEG> returns the result of postmultiplying { code this } by { code m } <END>
<BEG> gets the transpose of the matrix v of the decomposition <END>
<BEG> gets the imaginary part of the i < sup > th < sup > eigenvalue of the original matrix <END>
<BEG> gets a solver for find the a & time ; x = b solution in exact linear sense <END>
<BEG> returns the hessenberg matrix h of the transform <END>
<BEG> returns < code > dimension x dimension < code > identity matrix <END>
<BEG> returns a diagonal matrix with specified element <END>
<BEG> creates a { link fieldvector } use the data from the input array <END>
<BEG> creates a column { link realmatrix } use the data from the input array <END>
<BEG> return the row index <END>
<BEG> optimized method to subtract openmaprealvectors <END>
<BEG> returns the householder reflector vector <END>
<BEG> get the format separator between component <END>
<BEG> decompose matrix <END>
<BEG> check if instance dimension be equal to some expect value <END>
<BEG> return the number of cluster this instance will use <END>
<BEG> get the value of the objective function <END>
<BEG> returns the embedded k-means clusterer use by this instance <END>
<BEG> performs a deep copy of this instance <END>
<BEG> gets the number of neuron in each column of this map <END>
<BEG> get the differential equation to integrate <END>
<BEG> get the evaluation counter <END>
<BEG> get the final integration time <END>
<BEG> insert equation data into a complete state or derivative array <END>
<BEG> get the convergence threshold for event localization <END>
<BEG> get the occurrence time of the event trigger in the current step <END>
<BEG> get the equation mapper for the secondary equation set <END>
<BEG> get current time <END>
<BEG> get secondary part of the current state <END>
<BEG> get secondary part of the current state derivative <END>
<BEG> return the dimension of the complete set of equation <END>
<BEG> get secondary state at time <END>
<BEG> get derivative of the secondary state at time <END>
<BEG> set a parameter jacobian provider <END>
<BEG> set the starter integrator <END>
<BEG> set the minimal reduction factor for stepsize control <END>
<BEG> compute step grow shrink factor accord to normalize error <END>
<BEG> get the maximal step <END>
<BEG> reset internal state to dummy value <END>
<BEG> set parameter step <END>
<BEG> restrict step range to a limited part of the global step <END>
<BEG> returns a value indicate whether the last point should be pass to the underlie fixed step size step handler <END>
<BEG> return the absolute threshold <END>
<BEG> return the low bound <SEG> or { code null } if not set <END>
<BEG> gets the value of the constraint right hand side <END>
<BEG> gets the constant of the linear equation be optimize <END>
<BEG> get the offset of the first artificial variable <END>
<BEG> factory method that create instance of this class that represent a virtually unlimited number of iteration <END>
<BEG> maps an array from bound to unbounded <END>
<BEG> return history of mean matrix <END>
<BEG> computes the cost <END>
<BEG> gets the model function to be optimize <END>
<BEG> gets the jacobian of the model function to be optimize <END>
<BEG> gets the upper bound <END>
<BEG> gets the initial value of the optimized parameter <END>
<BEG> gets the objective vector function <END>
<BEG> return a reference to the { link # weight array } <END>
<BEG> computes the square-root of the weight matrix <END>
<BEG> compute the gradient vector <END>
<BEG> returns the next pseudorandom <SEG> uniformly distribute { code long } value from this random number generator 's sequence <END>
<BEG> returns a pseudorandom <SEG> uniformly distribute { code long } value between 0 inclusive and the specify value exclusive <SEG> draw from this random number generator 's sequence <END>
<BEG> clears the cache use by the default implementation of { link # nextgaussian } <END>
<BEG> get the rank of the covariance matrix <END>
<BEG> generates a random value from the { link pascaldistribution pascal distribution } <END>
<BEG> skip to the i-th point in the sobol sequence <END>
<BEG> generate a random scalar with null mean and unit standard deviation <END>
<BEG> returns the complementary error function <END>
<BEG> get the n-dimensional point in integer space <END>
<BEG> set the data array <END>
<BEG> returns the sum of the square of all the aggregate data <END>
<BEG> returns the standard deviation of the available value <END>
<BEG> returns the kurtosis of the available value <END>
<BEG> returns the minimum of the available value return the min or double nan if no value have be add <END>
<BEG> < p > sets the implementation for the kurtosis < p > param kurtosisimpl the univariatestatistic instance to use for compute the kurtosis since 1 2 <END>
<BEG> copies source to dest <END>
<BEG> add a new vector to the sample <END>
<BEG> returns the number of available value return the number of available value <END>
<BEG> returns an array whose i < sup > th < sup > entry be the mean of the i < sup > th < sup > entry of the array that have be add use { link # addvalue double [ ] } return the array of component mean <END>
<BEG> returns an array whose i < sup > th < sup > entry be the geometric mean of the i < sup > th < sup > entry of the array that have be add use { link # addvalue double [ ] } return the array of component geometric mean <END>
<BEG> returns the currently configure minimum implementation return the storelessunivariatestatistic implement the minimum <END>
<BEG> < p > sets the implementation for the minimum < p > < p > this method must be activate before any data have be add - i e <SEG> before { link # addvalue double [ ] addvalue } have be use to add data ; otherwise an illegalstateexception will be throw < p > param minimpl the storelessunivariatestatistic instance to use for compute the minimum throw dimensionmismatchexception if the array dimension do not match the one use at construction throw mathillegalstateexception if data have already be add i e if n > 0 <END>
<BEG> returns the currently configure sum of logs implementation return the storelessunivariatestatistic implement the log sum <END>
<BEG> returns true iff < code > object < code > be a < code > statisticalsummaryvalues < code > instance and all statistic have the same value a this <END>
<BEG> returns a copy of this synchronizeddescriptivestatistics instance with the same internal state <END>
<BEG> returns the sum of squared residual <END>
<BEG> returns the product of the entry in the input array <SEG> or < code > double nan < code > if the array be empty <END>
<BEG> returns the geometric mean of the entry in the input array <SEG> or < code > double nan < code > if the array be empty <END>
<BEG> returns the forward <SEG> inverse transform of the specify complex data set <END>
<BEG> multiply every component in the give complex array by the give real number <END>
<BEG> < p > returns the least common multiple of the absolute value of two number <SEG> use the formula { code lcm a <SEG> b = a gcd a <SEG> b b } <END>
<BEG> multiply two integer <SEG> check for overflow <END>
<BEG> subtract two long integer <SEG> check for overflow <END>
<BEG> raise a long to a long power <END>
<BEG> sets the scale for division operation <END>
<BEG> returns the natural { code log } of the < a href= http : mathworld wolfram com binomialcoefficient html > binomial coefficient < a > <SEG> { code n choose k } <SEG> the number of { code k } -element subset that can be select from an { code n } -element set <END>
<BEG>  the current implementation strictly enforce { code this divide a equals new decimal64 this doublevalue a doublevalue } <END>
<BEG>  the current implementation performs cast to a { code short } <END>
<BEG> gets the upper limit of the counter <END>
<BEG> informs all register listener that a new iteration in the main iteration loop have be start <END>
<BEG> returns an integer hash code represent the give double array <END>
<BEG> find the minimum of two field element <END>
<BEG> returns the first argument with the sign of the second argument <END>
<BEG> convert to unidimensional counter <END>
<BEG> remove the value associate with a key <END>
<BEG> put a value associate with a key in the map <END>
<BEG> returns true if the argument be equal or within the range of allow error inclusive <END>
<BEG> rounds the give value to the specified number of decimal place <END>
<BEG> returns the set of numbertransformers use a value in the map <END>
<BEG> creates a new matrix in which all value be equal 1 <END>
<BEG> compare two matrix <END>
<BEG> reshape the matrix <END>
<BEG> assert that two matrix have the same size <END>
<BEG> retrieve matrix element <END>
<BEG> compute the column index of a linear index <END>
<BEG> get imaginary part of the matrix <END>
<BEG> subtract two matrix <END>
<BEG> subtract a scalar from a matrix <END>
<BEG> elementwise division with a scalar <END>
<BEG> add two complex number in-place param c other complex number param result complex number where result be store return same a result <END>
<BEG> add two complex number <END>
<BEG> add a real number to a complex number in-place <END>
<BEG> subtract two complex number <SEG> in-place param c complex number to subtract param result result complex number return same a result <END>
<BEG> subtract two complex number param c complex number to subtract return new complex number with result <END>
<BEG> multiply two complex number <SEG> in-place param c other complex number param result complex number where product be stored return same a result <END>
<BEG> multiply two complex number param c other complex number return new complex number with product of this and c <END>
<BEG> divide two complex number param c complex number to divide this by return new complex number with quotient of this and c <END>
<BEG> divide two complex number <SEG> in-place param c complex number to divide this by param result complex number to hold result return same a result <END>
<BEG> comparing two complexfloat value <END>
<BEG> creates a new matrix where the value of the give vector be the diagonal value of the matrix <END>
<BEG> construct a matrix of arbitrary shape and set the diagonal accord to a pass vector <END>
<BEG> create a 1 1 - matrix <END>
<BEG> working with slice man ! <END>
<BEG> compute complex conjugate in-place <END>
<BEG> compute complex conjugate <END>
<BEG> check whether this can be multiply with a <END>
<BEG> copy complexfloatmatrix a to this <END>
<BEG> get diagonal of the matrix <END>
<BEG> matrix-matrix multiplication with a scalar for symmetry <SEG> do the same a muli scalar <END>
<BEG> reads in a matrix from the give data stream <END>
<BEG> compute lu decomposition of a general matrix <END>
<BEG> computes the eigenvalue and eigenvectors of a general matrix <END>
<BEG> computes select eigenvalue and their corresponding eigenvectors of the real generalized symmetric-definite eigenproblem of the form a x = l b x or <SEG> equivalently <SEG> a - l b x = 0 <END>
<BEG> center the column of a matrix in-place <END>
<BEG> element-wise power function <END>
<BEG> calculate matrix exponential of a square matrix <END>
<BEG> compute a singular-value decomposition of a sparse variant <END>
<BEG> compute a singular-value decomposition of a <END>
<BEG> set this { link axisangle4d } to be equivalent to the rotational component of the give { link matrix4x3fc } <END>
<BEG> set the give { link matrix3f } to a rotation transformation equivalent to this { link axisangle4d } <END>
<BEG> set this { link axisangle4f } to the value of < code > a < code > <END>
<BEG> set this { link axisangle4f } to the give value <END>
<BEG> transform the give vector by the rotation transformation describe by this { link axisangle4f } and store the result in < code > d < code > <END>
<BEG> translate < code > this < code > by the vector < code > x <SEG> y < code > and store the result in < code > d < code > <END>
<BEG> determine whether the give sphere be partly or completely within or outside of the frustum define by < code > this < code > frustum culler <END>
<BEG> this be an implementation of the 2 4 basic intersection test of the mention site <END>
<BEG> this be an implementation of the second algorithm in 2 5 plane masking and coherency of the mention site <END>
<BEG> calculate the surface bitangent for the three supply vertex and uv coordinate and store the result in < code > d < code > <END>
<BEG> determine the signed distance of the give point < code > pointx <SEG> pointy <SEG> pointz < code > to the plane specify via it general plane equation < i > a x + b y + c z + d = 0 < i > <END>
<BEG> test whether the projection of the give point < code > px <SEG> py <SEG> pz < code > lie inside of the triangle define by the three vertex < code > v0x <SEG> v0y <SEG> v0z < code > <SEG> < code > v1x <SEG> v1y <SEG> v1z < code > and < code > v2x <SEG> v2y <SEG> v2z < code > <END>
<BEG> test whether the axis-aligned rectangle with minimum corner < code > minx <SEG> miny < code > and maximum corner < code > maxx <SEG> maxy < code > intersect the line with the general equation < i > a x + b y + c = 0 < i > <END>
<BEG> test whether the axis-aligned rectangle with minimum corner < code > minx <SEG> miny < code > and maximum corner < code > maxx <SEG> maxy < code > intersect the line define by the two point < code > x0 <SEG> y0 < code > and < code > x1 <SEG> y1 < code > <END>
<BEG> test whether the axis-aligned rectangle with minimum corner < code > minxa <SEG> minya < code > and maximum corner < code > maxxa <SEG> maxya < code > intersect the axis-aligned rectangle with minimum corner < code > minxb <SEG> minyb < code > and maximum corner < code > maxxb <SEG> maxyb < code > <END>
<BEG> test whether a give circle with center < code > ax <SEG> ay < code > and radius < code > ar < code > and travel distance vector < code > max <SEG> may < code > intersect a give static circle with center < code > bx <SEG> by < code > and radius < code > br < code > <END>
<BEG> test whether the one circle with center < code > ax <SEG> ay < code > and radius < code > ra < code > intersect the other circle with center < code > bx <SEG> by < code > and radius < code > rb < code > <END>
<BEG> determine the signed distance of the give point < code > pointx <SEG> pointy < code > to the line specify via it general plane equation < i > a x + b y + c = 0 < i > <END>
<BEG> test whether the ray with give origin < code > originx <SEG> originy < code > and direction < code > dirx <SEG> diry < code > intersect the line contain the give point < code > pointx <SEG> pointy < code > and have the normal < code > normalx <SEG> normaly < code > <SEG> and return the value of the parameter < i > t < i > in the ray equation < i > p t = origin + t dir < i > of the intersection point <END>
<BEG> determine whether the ray with give origin < code > originx <SEG> originy < code > and direction < code > dirx <SEG> diry < code > intersect the undirected line segment give by the two end point < code > ax <SEG> by < code > and < code > bx <SEG> by < code > <SEG> and return the value of the parameter < i > t < i > in the ray equation < i > p t = origin + t dir < i > of the intersection point <SEG> if any <END>
<BEG> test whether the axis-aligned rectangle with minimum corner < code > minx <SEG> miny < code > and maximum corner < code > maxx <SEG> maxy < code > intersect the circle with the give center < code > centerx <SEG> centery < code > and square radius < code > radiussquared < code > <END>
<BEG> determine the close point on the triangle with the give vertex < code > v0x <SEG> v0y < code > <SEG> < code > v1x <SEG> v1y < code > <SEG> < code > v2x <SEG> v2y < code > between that triangle and the give point < code > px <SEG> py < code > and store that point into the give < code > result < code > <END>
<BEG> test whether the give ray with the origin < code > originx <SEG> originy < code > and direction < code > dirx <SEG> diry < code > intersect the give axis-aligned rectangle give a it minimum corner < code > minx <SEG> miny < code > and maximum corner < code > maxx <SEG> maxy < code > <END>
<BEG> test whether the give point < code > px <SEG> py < code > lie inside the triangle with the vertex < code > v0x <SEG> v0y < code > <SEG> < code > v1x <SEG> v1y < code > <SEG> < code > v2x <SEG> v2y < code > <END>
<BEG> test whether the give point < code > px <SEG> py < code > lie inside the axis-aligned rectangle with the minimum corner < code > minx <SEG> miny < code > and maximum corner < code > maxx <SEG> maxy < code > <END>
<BEG> test whether the point < code > px <SEG> py < code > lie inside the circle with center < code > centerx <SEG> centery < code > and square radius < code > radiussquared < code > <END>
<BEG> test whether the circle with center < code > centerx <SEG> centery < code > and square radius < code > radiussquared < code > intersect the triangle with counter-clockwise vertex < code > v0x <SEG> v0y < code > <SEG> < code > v1x <SEG> v1y < code > <SEG> < code > v2x <SEG> v2y < code > <END>
<BEG> determine whether the polygon specify by the give sequence of < code > x <SEG> y < code > coordinate pair intersect with the ray with give origin < code > originx <SEG> originy <SEG> originz < code > and direction < code > dirx <SEG> diry <SEG> dirz < code > <SEG> and store the point of intersection into the give vector < code > p < code > <END>
<BEG> determine whether the polygon specify by the give sequence of < code > vertex < code > intersects with the ray with give origin < code > originx <SEG> originy <SEG> originz < code > and direction < code > dirx <SEG> diry <SEG> dirz < code > <SEG> and store the point of intersection into the give vector < code > p < code > <END>
<BEG> determine whether the two line <SEG> specify via two point lie on each line <SEG> intersect each other <SEG> and store the point of intersection into the give vector < code > p < code > <END>
<BEG> test if the two polygon <SEG> give via their vertex <SEG> intersect <END>
<BEG> set the stack pointer to zero and set the current bottom matrix to { link # identity identity } <END>
<BEG> increment the stack pointer by one and set the value of the new current matrix to the one directly below it <END>
<BEG> decrement the stack pointer by one <END>
<BEG> contract between matrix3f and matrix3fstack : - matrix3f equal matrix3fstack be true iff all the 9 matrix element be equal - matrix3fstack equal matrix3f be true iff all the 9 matrix element be equal - matrix3fstack equal matrix3fstack be true iff all 9 matrix element be equal and the matrix array as well a the stack pointer be equal - everything else be inequal non-javadoc see org joml matrix3f # equal java lang object <END>
<BEG> set the value of the matrix element at column 0 and row 1 <END>
<BEG> set the left 2x2 submatrix of this { link matrix3x2d } to the give { link matrix2fc } and do n't change the other element <END>
<BEG> pre-multiply a translation to this matrix by translate by the give number of unit in x and y and store the result in < code > d < code > <END>
<BEG> return a string representation of this matrix by format the matrix element with the give { link numberformat } <END>
<BEG> store this matrix in column-major order into the supplied { link bytebuffer } start at the specified absolute buffer position index <END>
<BEG> store this matrix a an equivalent 3x3 matrix in column-major order into the supplied { link bytebuffer } at the current buffer { link bytebuffer # position position } <END>
<BEG> store this matrix a an equivalent 3x3 matrix in column-major order into the supplied { link bytebuffer } start at the specified absolute buffer position index <END>
<BEG> store this matrix a an equivalent 4x4 matrix in column-major order into the supplied float array at the give offset <END>
<BEG> non-javadoc see org joml matrix3x2dc # scalelocal double <SEG> double <SEG> org joml matrix3x2d <END>
<BEG> transform multiply the give 2d-vector <SEG> a if it be a 3d-vector with z=0 <SEG> by this matrix and store the result in that vector <END>
<BEG> transform multiply the give 2d-vector <SEG> a if it be a 3d-vector with z=0 <SEG> by this matrix and store the result in < code > d < code > <END>
<BEG> transform multiply the give 2d-vector < code > x <SEG> y < code > <SEG> a if it be a 3d-vector with z=0 <SEG> by this matrix and store the result in < code > d < code > <END>
<BEG> non-javadoc see org joml matrix3x2dc # normalizedpositivex org joml vector2d <END>
<BEG> unproject the give window coordinate < code > winx <SEG> winy < code > by < code > this < code > matrix use the specify viewport <END>
<BEG> set the element of this matrix to the one in < code > m < code > <END>
<BEG> multiply this matrix by the supplied < code > right < code > matrix by assume a third row in both matrix of < code > 0 <SEG> 0 <SEG> 1 < code > and store the result in < code > d < code > <END>
<BEG> set the value in this matrix base on the supplied float array <END>
<BEG> invert the < code > this < code > matrix by assume a third row in this matrix of < code > 0 <SEG> 0 <SEG> 1 < code > and store the result in < code > d < code > <END>
<BEG> set this matrix to be a simple translation matrix in a two-dimensional coordinate system <END>
<BEG> set the value of this matrix by read 6 float value from off-heap memory in column-major order <SEG> start at the give address <END>
<BEG> apply scale to this matrix by scale the unit ax by the give x and y and store the result in < code > d < code > <END>
<BEG> apply scale to < code > this < code > matrix by scale the base ax by the give sx and sy factor while use < code > ox <SEG> oy < code > a the scaling origin <SEG> and store the result in < code > d < code > <END>
<BEG> set this matrix to be a simple scale matrix <END>
<BEG> set this matrix to a rotation matrix which rotate the give radian <END>
<BEG> transform multiply the give vector by this matrix by assume a third row in this matrix of < code > 0 <SEG> 0 <SEG> 1 < code > and store the result in that vector <END>
<BEG> transform multiply the give vector by this matrix by assume a third row in this matrix of < code > 0 <SEG> 0 <SEG> 1 < code > and store the result in < code > d < code > <END>
<BEG> transform multiply the give vector < code > x <SEG> y <SEG> z < code > by this matrix and store the result in < code > d < code > <END>
<BEG> apply a rotation transformation to this matrix by rotate the give amount of radian and store the result in < code > d < code > <END>
<BEG> pre-multiply a rotation to this matrix by rotate the give amount of radian and store the result in < code > d < code > <END>
<BEG> apply a rotation transformation to this matrix that rotate the give normalized < code > fromdir < code > direction vector to point along the normalized < code > todir < code > <SEG> and store the result in < code > d < code > <END>
<BEG> set this matrix to define a view transformation that map the give < code > leave <SEG> bottom < code > and < code > right <SEG> top < code > corner to < code > -1 <SEG> -1 < code > and < code > 1 <SEG> 1 < code > respectively <END>
<BEG> obtain the position that get transform to the origin by < code > this < code > matrix <END>
<BEG> obtain the extent of the view transformation of < code > this < code > matrix and store it in < code > area < code > <END>
<BEG> apply shear to this matrix by shear along the y axis use the x axis factor < code > xfactor < code > <SEG> and store the result in < code > d < code > <END>
<BEG> compute the extent of the coordinate system before this transformation be apply and store the result corner coordinate in < code > corner < code > and the span vector in < code > xdir < code > and < code > ydir < code > <END>
<BEG> non-javadoc see org joml matrix3x2fc # testpoint float <SEG> float <END>
<BEG> non-javadoc see org joml matrix3x2fc # testcircle float <SEG> float <SEG> float <END>
<BEG> non-javadoc see org joml matrix3x2fc # testaar float <SEG> float <SEG> float <SEG> float <END>
<BEG> normalize this plane and store the result in < code > d < code > <END>
<BEG> compute the signed distance between this plane and the give point <END>
<BEG> return the second component of the vector part <END>
<BEG> set the give { link quaternionf } to the value of < code > this < code > <END>
<BEG> set this quaternion to be a copy of q <END>
<BEG> set this quaternion to be a representation of the supplied axis and angle in radian <END>
<BEG> set this quaternion to be a representation of the supplied axis and angle in degree <END>
<BEG> non-javadoc see org joml quaterniondc # mul double <SEG> double <SEG> double <SEG> double <SEG> org joml quaterniond <END>
<BEG> non-javadoc see org joml quaterniondc # transform double <SEG> double <SEG> double <SEG> org joml vector4d <END>
<BEG> conjugate this quaternion <END>
<BEG> set this quaternion from the supply euler angle in radian with rotation order zyx <END>
<BEG> non-javadoc see org joml quaterniondc # lookalong double <SEG> double <SEG> double <SEG> double <SEG> double <SEG> double <SEG> org joml quaterniond <END>
<BEG> return a string representation of this quaternion by format the component with the give { link numberformat } <END>
<BEG> set this quaternion to represent a rotation of the give radian about the y axis <END>
<BEG> non-javadoc see org joml quaterniondc # rotatex double <SEG> org joml quaterniond <END>
<BEG> return the real scalar part of the quaternion <END>
<BEG> non-javadoc see org joml quaternionfc # getasmatrix3f java nio floatbuffer <END>
<BEG> set this quaternion to the give value <END>
<BEG> set this quaternion to a rotation equivalent to the give { link axisangle4d } <END>
<BEG> set this quaternion to a rotation of the give angle in radian about the supplied axis <END>
<BEG> non-javadoc see org joml quaternionfc # premul float <SEG> float <SEG> float <SEG> float <SEG> org joml quaternionf <END>
<BEG> non-javadoc see org joml quaternionfc # rotatezyx float <SEG> float <SEG> float <SEG> org joml quaternionf <END>
<BEG> set this quaternion to represent scaling <SEG> which result in a transformed vector to change it length by the give < code > factor < code > <END>
<BEG> interpolate between all of the quaternion give in < code > q < code > via iterative non-spherical linear interpolation use the specified interpolation factor < code > weight < code > <SEG> and store the result in < code > d < code > <END>
<BEG> set < code > this < code > quaternion to a rotation that rotate the < code > fromdir < code > vector to point along < code > todir < code > <END>
<BEG> conjugate < code > this < code > by the give quaternion < code > q < code > by compute < code > q this q^-1 < code > and store the result into < code > d < code > <END>
<BEG> compute the weighted average of all of the quaternion give in < code > q < code > use the specified interpolation factor < code > weight < code > <SEG> and store the result in < code > d < code > <END>
<BEG> check if this rectangle contain the give point < code > x <SEG> y < code > <END>
<BEG> check if this and the give rectangle intersect <END>
<BEG> create < code > numsamples < code > number of sample on a spiral with maximum radius < code > radius < code > around the center use < code > numrotations < code > number of rotation along the spiral <SEG> and call the give < code > callback < code > for each sample generate <END>
<BEG> generate < code > n n < code > random sample position in the unit square of < code > x <SEG> y = [ -1 +1 ] < code > <END>
<BEG> translate < code > this < code > by the vector < code > x <SEG> y <SEG> z < code > and store the result in < code > d < code > <END>
<BEG> converts from degree to radian <END>
<BEG> returns the angle that the vector from 0<SEG>0 to p <SEG> relative to the positive x-axis <END>
<BEG> adds the length define by an array of coordinate <END>
<BEG> adds the point s define by a geometry to the centroid total <END>
<BEG> computes the signed area for a ring <END>
<BEG> converts a flat path to a { link geometry } <END>
<BEG> reverses the coordinate in a sequence in-place <END>
<BEG> copies a coordinate of a { link coordinatesequence } to another { link coordinatesequence } <END>
<BEG> returns the difference between the maximum and minimum y value <END>
<BEG> returns the < code > envelope < code > s minimum x-value <END>
<BEG> gets the maximum extent of this envelope across both dimension <END>
<BEG> tests if the < code > envelope other < code > lie wholely inside this < code > envelope < code > inclusive of the boundary <END>
<BEG> sets the id of the spatial reference system use by the < code > geometry < code > <END>
<BEG> tests whether this geometry cross the argument geometry <END>
<BEG> tests whether this geometry be cover by the argument geometry <END>
<BEG> removal be not support <END>
<BEG> converts the < code > list < code > to an array <END>
<BEG> creates a multilinestring use the give linestrings ; a null or empty array will create an empty multilinestring <END>
<BEG> creates a { link multipoint } use the give { link coordinate } s a null or empty array will create an empty multipoint <END>
<BEG> see com vividsolutions jts geom coordinatesequencefactory # create com vividsolutions jts geom coordinatesequence <END>
<BEG> see com vividsolutions jts geom coordinatesequence # tocoordinatearray <END>
<BEG> sets the second ordinate of a coordinate in this sequence <END>
<BEG> see com vividsolutions jts geom coordinatesequencefactory # create float [ ] <SEG> int <END>
<BEG> see com vividsolutions jts geom coordinatesequencefactory # create int <SEG> int <END>
<BEG> reverses the direction of the line segment <END>
<BEG> compares this object with the specified object for order <END>
<BEG> returns the length of this < code > linestring < code > return the length of the linestring <END>
<BEG> creates a { link multipolygon } with every component reverse <END>
<BEG> do point-in-poly test first <SEG> since they be cheap and may result in a quick negative result <END>
<BEG> tests whether any component of the test geometry intersect the interior of the target geometry <END>
<BEG> sets this transformation to be the identity transformation <END>
<BEG> updates the value of this transformation to that of a reflection transformation compose with the current value <END>
<BEG> combines three geometry <END>
<BEG> extracts the linear component from a single { link geometry } and add them to the provide { link collection } <END>
<BEG> extracts the linear component from a single geometry <END>
<BEG> return true if any location be null <END>
<BEG> adds item in the tree which potentially overlap the query interval to the give collection <END>
<BEG> returns the right node of the tree return right node <END>
<BEG> inserts a new point into the kd-tree <END>
<BEG> performs a range search of the point in the index <END>
<BEG> removes a single item from the tree <END>
<BEG> see org xml sax helper defaulthandler # character char [ ] <SEG> int <SEG> int <END>
<BEG> see org xml sax helper defaulthandler # fatalerror org xml sax saxparseexception <END>
<BEG> reads a well-known text representation of a { link geometry } from a { link reader } <END>
<BEG> generates the wkt for a < tt > linestring < tt > specify by a { link coordinatesequence } <END>
<BEG> computes the { link linestring } for the interval on the line between the give index <END>
<BEG> returns the index of the end of the line return the end index <END>
<BEG> allows invalid line to be ignore rather than cause exceptions <END>
<BEG> computes the index for the close point on the line to the give point <END>
<BEG> tests whether an index be in the valid index range for the line <END>
<BEG> find the near location along a linear { link geometry } to a give point <END>
<BEG> clamps an < tt > int < tt > value to a give range <END>
<BEG> tests whether an intersection be find <END>
<BEG> adds an intersection node for a give point and segment to this segment string <END>
<BEG> returns the octant of a directed line segment specify a x and y displacement <SEG> which can not both be 0 <END>
<BEG> returns the octant of a directed line segment from p0 to p1 <END>
<BEG> tests whether a non-proper intersection be find <END>
<BEG> gets the computed location of the intersection <END>
<BEG> return -1 this segmentnode be locate before the argument location ; 0 this segmentnode be at the argument location ; 1 this segmentnode be locate after the argument location <END>
<BEG> adds an intersection into the list <SEG> if it be n't already there <END>
<BEG> simplify the input coordinate list <END>
<BEG> comutes the buffer for a geometry for a give buffer distance and accuracy of approximation <END>
<BEG> gets the end cap style <END>
<BEG> compute the the close point of two geometry <END>
<BEG> report the coordinate of the near point in the input geometry <END>
<BEG> creates a wrapper projecting to the yz plane <END>
<BEG> compute the distance between the near point of two geometry <END>
<BEG> adds a collection of geometries to be process <END>
<BEG> snaps the vertex in the component { link linestring } s of the source geometry to the vertex of the give snap geometry <END>
<BEG> gets the list of cut edge find during polygonization <END>
<BEG> tests whether a rectangle intersect a give geometry <END>
<BEG> update the im with the contribution for this component <END>
<BEG> gets the union of the input geometry <END>
<BEG> a representation of the double bit format for easy readability <END>
<BEG> computes the set-theoretic union of two { link geometry } s <SEG> use enhance precision <END>
<BEG> sets the distance tolerance for the simplification <END>
<BEG> gets the site vertex use to initialize the triangulation <END>
<BEG> tests whether this vertex lie on a constraint <END>
<BEG> tests whether this edge have be delete <END>
<BEG> gets the dual of this edge <SEG> direct from it left to it right <END>
<BEG> gets the next ccw edge around into the destination of this edge <END>
<BEG> gets the edge around the right face ccw before this edge <END>
<BEG> sets the vertex for this edge 's destination param d the destination vertex <END>
<BEG> gets the vertex for the edge 's destination return the destination vertex <END>
<BEG> tests if this quadedge and another have the same line segment geometry with the same orientation <END>
<BEG> tests whether the point pt be contain in the triangle define by 3 { link quadedge } e <END>
<BEG> efficiently return the binomial coefficient <SEG> often also refer to a n over k or n choose k <END>
<BEG> returns a view of a row <END>
<BEG> { link java util arrays # copyof } compatibility with java 1 5 <END>
<BEG> performs a binary search for the specified element in the specified ascending sort array <END>
<BEG> provides a view of the diagonal of a matrix <END>
<BEG> return an empty matrix of the same underlying class a the receiver return a matrix <END>
<BEG> return the value at the give index <SEG> without check bound param row an int row index param column an int column index return the double at the index <END>
<BEG> returns an empty matrix of the same underlying class a the receiver and of the specify size <END>
<BEG> constructs a unary function from a binary function with the second operand argument fix to the give constant < tt > c < tt > <END>
<BEG> constructs a function that return < tt > a ! = b ? <END>
<BEG> constructs a function that return { code from < =a & & a < =to } <END>
<BEG> constructs a function that return < tt > a & gt ; b < tt > <END>
<BEG> constructs a function that return { code a < b } <END>
<BEG> constructs a function that return < tt > a & lt ; b ? <END>
<BEG> constructs a function that return < tt > a - b < tt > <END>
<BEG> constructs a function that return < tt > a + b constant < tt > <END>
<BEG> < tt > a constant < tt > <END>
<BEG> returns the result of the function evaluation <END>
<BEG> computes the product of two number <END>
<BEG> returns a uniformly distribute random number in the open interval < tt > from <SEG> to < tt > exclude < tt > from < tt > and < tt > to < tt > <END>
<BEG> returns the probability distribution function assume a continous uniform distribution <END>
<BEG> returns true if the receiver contain the specified element <END>
<BEG> returns the index of the first occurrence of the specified element <END>
<BEG> sorts the receiver accord to the order induce by the specified comparator <END>
<BEG> replaces the element at the specified position in the receiver with the specify element <END>
<BEG> appends all element of the specified list to the receiver <END>
<BEG> appends the part of the specified list between < code > from < code > inclusive and < code > to < code > inclusive to the receiver <END>
<BEG> inserts the specified element before the specified position into the receiver <END>
<BEG> inserts the part of the specified list between < code > otherfrom < code > inclusive and < code > otherto < code > inclusive before the specified position into the receiver <END>
<BEG> returns the element currently store <SEG> possibly include invalid element between size and capacity <END>
<BEG> sets the specified range of element in the specified array to the specify value <END>
<BEG> applies a procedure to each element of the receiver <SEG> if any <END>
<BEG> returns a new list of the part of the receiver between < code > from < code > <SEG> inclusive <SEG> and < code > to < code > <SEG> inclusive <END>
<BEG> sorts the specified range of the receiver into ascend numerical order <END>
<BEG> removes from the receiver all element that be contain in the specified list <END>
<BEG> replaces a number of element in the receiver with the same number of element of another list <END>
<BEG> replaces the part between < code > from < code > inclusive and < code > to < code > inclusive with the other list 's part between < code > otherfrom < code > and < code > otherto < code > <END>
<BEG> retains keep only the element in the receiver that be contain in the specify other list <END>
<BEG> returns a list which be a concatenation of < code > time < code > time the receiver <END>
<BEG> returns a < code > arraylist < code > contain all the element in the receiver <END>
<BEG> sorts the receiver into ascend order <END>
<BEG> trims the capacity of the receiver to be the receiver 's current size <END>
<BEG> returns a deep copy of the receiver ; use < code > clone < code > and cast the result <END>
<BEG> returns the element currently store <SEG> include invalid element between size and capacity <SEG> if any <END>
<BEG> sets the receiver 's element to be the specified array not a copy of it <END>
<BEG> returns the element at the specified position in the receiver ; < b > warning : < b > does not check precondition <END>
<BEG> computes min and max and decide on this basis <END>
<BEG> fills all key and value < i > sort ascending by value < i > into the specified list <END>
<BEG> returns a list fill with all value contain in the receiver <END>
<BEG> fills all value contain in the receiver into the specified list <END>
<BEG> applies a procedure to each key <SEG> value pair of the receiver <SEG> if any <END>
<BEG> fills all key < i > sort ascending by their associate value < i > into the specified list <END>
<BEG> clears the receiver <SEG> then add all key <SEG> value pair of < tt > other < tt > value to it <END>
<BEG> fills all key and value < i > sort ascending by value accord to natural order < i > into the specified list <END>
<BEG> returns a string representation of the receiver <SEG> contain the string representation of each key-value pair <SEG> sort ascend by value <SEG> accord to natural ordering <END>
<BEG> param key the key to be search in the receiver <END>
<BEG> param value the value to be search in the receiver <END>
<BEG> rehashes the content of the receiver into a new table with a small or large capacity <END>
<BEG> removes all key <SEG> value association from the receiver <END>
<BEG> removes the give key with it associate element from the receiver <SEG> if present <END>
<BEG> iterates over all element < p > note : implementations may choose to reuse the element return for performance reason <SEG> so if you need a copy of it <SEG> you should call { link # getelement int } for the give index return an { link java util iterator } over all element <END>
<BEG> used internally by assign to update multiple index and value at once <END>
<BEG> subclasses must override to return an appropriately sparse or dense result param row the row cardinality param columns the column cardinality return a matrix <END>
<BEG> return the row at the give index param row an int row index return a vector at the index throw org apache mahout math indexexception if the index be out of bound <END>
<BEG> warning ! <END>
<BEG> chooses a new prime table capacity optimize for shrink that approximately satisfy the invariant < tt > c minloadfactor < = size < = c maxloadfactor < tt > and have at least one free slot for the give size <END>
<BEG> removes all value association from the receiver <END>
<BEG> return the eigenvector matrix return v <END>
<BEG> return the imaginary part of the eigenvalue <END>
<BEG> return the block diagonal eigenvalue matrix return d <END>
<BEG> creates the md5 checksum for the give file <END>
<BEG> get include a site directory in the final archive <END>
<BEG> set set the base directory of the result assembly archive <END>
<BEG> set specifies which module file to include in the assembly <END>
<BEG> get similar to a unix permission <SEG> set the file mode of the file include <END>
<BEG> set set the mapping pattern for all dependency include in this assembly <END>
<BEG> set set the dependency scope for this dependencyset <END>
<BEG> set determine whether the artifact produce during the current project 's build should be include in this dependency set <END>
<BEG> set when specify a true <SEG> any include exclude pattern which be n't use to filter an actual artifact during assembly creation will cause the build to fail with an error <END>
<BEG> set determine whether transitive dependency will be include in the processing of the current dependency set <END>
<BEG> set determine whether the include exclude pattern in this dependency set will be apply to the transitive path of a give artifact <END>
<BEG> set set the destination filename in the outputdirectory <END>
<BEG> set set whether to determine if the file be filter <END>
<BEG> set set the line-endings of the file in this file <END>
<BEG> set set the absolute or relative path from the module 's directory of the file to be include in the assembly <END>
<BEG> set the version you want to align this group to <END>
<BEG> set when specify <SEG> the attachmentclassifier will cause the assembler to look at artifact attach to the module instead of the main project artifact <END>
<BEG> set if set to true <SEG> the plugin will include the direct and transitive dependency of of the project modules include here <END>
<BEG> set when this be present <SEG> the plugin will include the binary of the included module from this set in the resulting assembly <END>
<BEG> set if set to false <SEG> the plugin will exclude sub-modules from process in this moduleset <END>
<BEG> set when this be present <SEG> the plugin will include the source file of the included module from this set in the resulting assembly <END>
<BEG> set if set to true <SEG> the plugin will include all project in the current reactor for processing in this moduleset <END>
<BEG> set specify whether sub-module directory below the current module should be exclude from filesets apply to that module <END>
<BEG> set specify whether the module 's finalname should be prepended to the outputdirectory value of any filesets apply to it <END>
<BEG> set if set to true <SEG> this property will trigger the creation of repository metadata which will allow the repository to be use a a functional remote repository <END>
<BEG> set list of exclusion pattern separate by ' : ' for deep copying of the ' & # 42 ; & # 42 ; doc-files ' directory <END>
<BEG> set tagletclass be the fully-qualified name for the taglet class <END>
<BEG> set specify the search path for find taglet class file class <END>
<BEG> get the minimum memory need to run this plugin <END>
<BEG> set the minimum version of the jdk to run this plugin <END>
<BEG> set the minimum version of maven to run this plugin <END>
<BEG> set the amount of time the destionationbridge will wait between attempt to forward a message <END>
<BEG> sets the maximum number of time that the { link jmsconnector } will try to connect on startup to before it mark itself a fail and do not try any further connection <END>
<BEG> sets the maximum delay that be insert between each attempt to connect before another attempt be make <END>
<BEG> gets the initial delay value use before a reconnection attempt be make <END>
<BEG> sets whether the policy use the set back-off multiplier to grow the time between connection attempt <END>
<BEG> gets the multiplier use to grow the delay between connection attempt from the initial time to the max set time <END>
<BEG> param hex return array of byte <END>
<BEG> converts any string into a string that be safe to use a a file name <END>
<BEG> add message to await dispatch param node throw exception <END>
<BEG> add message to await dispatch param node <END>
<BEG> openwire : property version=2 return the networkconnection <END>
<BEG> openwire : property version=1 return returns the close <END>
<BEG> openwire : property version=6 cache=false return connect broker <END>
<BEG> is use to specify the last sequence number be acknowledge a deliver on the transport so that it can be remove from cache openwire : property version=1 <END>
<BEG> inserts the specified element at the specified position in this list <END>
<BEG> retrive the prev entry after this entry param entry return prev entry <END>
<BEG> non-javadoc see org apache activemq kaha impl indexlinkedlist # getlast <END>
<BEG> non-javadoc see org apache activemq kaha impl indexlinkedlist # remove int <END>
<BEG> update the index of a storeentry param current <END>
<BEG> write the payload of this entry to the rawcontainer param object param dataout throw ioexception <END>
<BEG> read the entry from the rawcontainer param datain return unmarshalled object throw ioexception <END>
<BEG> returns the next computed delay value that the connection controller should use to wait before attempt another connection for the { link jmsconnector } <END>
<BEG> return the type of data structure we marshal return short representation of the type data structure <END>
<BEG> param object param dataout throw ioexception see org apache activemq kaha marshaller # writepayload java lang object <SEG> java io dataoutput <END>
<BEG> return the value of the count after it 's incremented <END>
<BEG> return true if a messageack command <END>
<BEG> non-javadoc see org apache activemq transport tcp timestampstream # getwritetimestamp <END>
<BEG> creates wireformat object that marshalls the < a href= http : stomp codehaus org > stomp < a > protocol <END>
<BEG> write a byte on to the stream param b - byte to write throw ioexception <END>
<BEG> write a byte array to the stream param b the byte buffer param off the offset into the buffer param len the length of data to write throw ioexception <END>
<BEG> flush the data to the output stream this do n't call flush on the underlying outputstream <SEG> because tcp be particularly efficent at do this itself throw ioexception <END>
<BEG> writes the specified byte to this byte array output stream <END>
<BEG> writes < code > len < code > bytes from the specify byte array start at offset < code > off < code > to this byte array output stream <END>
<BEG> create a serverlocator which will receive cluster topology update from the cluster a server leave or join and new backup be appoint or remove <END>
<BEG> returns an array of roleinfo correspond to the json serialization return by { link queuecontrol # listmessagecounter } <END>
<BEG> returns the objectname use by addresscontrol <END>
<BEG> non-javadoc see org hornetq core config configuration # getaddressessettings <END>
<BEG> non-javadoc see org hornetq core journal impl journalfile # addsize int <END>
<BEG> non-javadoc see org hornetq core paging cursor pagecache # getnumberofmessages <END>
<BEG> non-javadoc see org hornetq core paging cursor impl pagingsubscriptioncounterinterface # incrementprocessed long <SEG> int <END>
<BEG> non-javadoc see org hornetq core paging cursor pagecursor # iscomplete long <END>
<BEG> non-javadoc see org hornetq core server messagereference # acknowledge org hornetq core transaction transaction <END>
<BEG> non-javadoc see org hornetq core persistence operationcontext # waitcompletion long <END>
<BEG> non-javadoc see org hornetq core persistence storagemanager # pagedeleted org hornetq utils simplestring <SEG> int <END>
<BEG> non-javadoc see org hornetq core persistence storagemanager # setcontext org hornetq core persistence operationcontext <END>
<BEG> non-javadoc see org hornetq core persistence storagemanager # updatepagetransaction org hornetq core paging pagetransactioninfo <SEG> int <END>
<BEG> non-javadoc see org hornetq core persistence storagemanager # storepagecounter long <SEG> long <SEG> long <END>
<BEG> non-javadoc see org hornetq core replication replicationendpoint # setchannel org hornetq core remoting channel <END>
<BEG> non-javadoc see org hornetq core replication replicationmanager # appendcommitrecord byte <SEG> long <SEG> boolean <END>
<BEG> non-javadoc see org hornetq core client impl afterconnectinternallistener # onconnection org hornetq core client impl clientsessionfactoryinternal <END>
<BEG> can be override for test <END>
<BEG> to be use on test only <END>
<BEG> after rollback should n't throw any exception <END>
<BEG> convenience method for decode data to a file <END>
<BEG> convenience method for read a binary file and base64-encoding it <END>
<BEG> reads < tt > infile < tt > and decode it to < tt > outfile < tt > <END>
<BEG> param value return see java util map # containsvalue java lang object <END>
<BEG> removes the value from the associate destination <END>
<BEG> used by nio or aio transport <END>
<BEG> used by nio or aio transport ; note that the size be not write a part of this method <END>
<BEG> shut down the task param timeout throw interruptedexception <END>
<BEG> get the boolean value at the index param index return true false <END>
<BEG> param value property value a string return correspond variable in correct type <END>
<BEG> returns metric level associate with the give name <END>
<BEG> retrieve the message property <END>
<BEG> get the { link basicproperties } include in this response return the property <END>
<BEG> public api -  <END>
<BEG> private api - called by { link amqcommand # transmit } <END>
<BEG> sets the heartbeat in second <END>
<BEG> sets the size in byte of the write { link java nio bytebuffer } use in the nio loop <END>
<BEG> decides whether a queue be recover or not <END>
<BEG> the client 's amqp specification minor version <END>
<BEG> { link socketconfigurator } that disable nagle 's algorithm <END>
<BEG> default implementation - override in subclass <END>
<BEG> synchronizes on the map and then return a copy of the map that be safe to iterate over <END>
<BEG> < p > specifies whether the error happen due to the producer <END>
<BEG> < p > a message explain why the action fail on this entry <END>
<BEG> < p > the new value in second for the message 's visibility timeout <END>
<BEG> < p > the receipt handle associate with the message whose visibility timeout be change <END>
<BEG> string equal <END>
<BEG> deny blacklist a single ip address <END>
<BEG> retrieves the next zap reply <END>
<BEG> saves the public key to a writer <END>
<BEG> saves the public and secret key to a writer <END>
<BEG> set initial receive hwm for all new normal socket create in context <END>
<BEG> destructor <END>
<BEG> removes event type from monitor <END>
<BEG> gets the next event <SEG> block for it until available if request <END>
<BEG> tells if a socket be readable from this poller <END>
<BEG> tells if a socket be in error from this poller <END>
<BEG> sends a command message to the proxy actor <END>
<BEG> configures the proxy <END>
<BEG> called by i o thread when file descriptor be ready for write <END>
<BEG> high precision timestamp in nanosecond <END>
<BEG> add timer to the set <SEG> timer repeat forever <SEG> or until cancel be call <END>
<BEG> execute the timer <END>
<BEG> validate topic param topic throw com alibaba rocketmq client exception mqclientexception <END>
<BEG> puts a reference to this label in the bytecode of a method <END>
<BEG> resolves all forward reference to this label <END>
<BEG> places character represent the integer i into the character array buf <END>
<BEG> toggles the endianness of the specify 24-bit medium integer <END>
<BEG> default numer of direct arena - system property : io netty allocator numdirectarenas - default 2 core <END>
<BEG> default tiny cache size - system property : io netty allocator tinycachesize - default 512 <END>
<BEG> return a { link list } of all direct { link poolarenametric } s that be provide by this pool <END>
<BEG> return the size of the tiny cache <END>
<BEG> removes the { link channeloutboundhandler } that be combine in this { link combinedchannelduplexhandler } <END>
<BEG> returns the { link string } representation of this pipeline <END>
<BEG> returns { code true } if the { link fileregion } have a open file-descriptor <END>
<BEG> returns the { link queue } which hold all the { link object } s that be write by this { link channel } <END>
<BEG> write message to the outbound of this { link channel } <END>
<BEG> release all buffer outbound message and return { code true } if any be in the outbound buffer <SEG> { code false } otherwise <END>
<BEG> set the { code tcp_keepcnt } option on the socket <END>
<BEG> try to add the give { link compositebytebuf } <END>
<BEG> shutdown the input of this { link channel } <END>
<BEG> remove a pending write operation and fail it with the give { link throwable } <END>
<BEG> removes a pending write operation and perform it via { link channelhandlercontext # write object <SEG> channelpromise } <END>
<BEG> return the current message or { code null } if empty <END>
<BEG> returns { code true } if the file descriptor be open <END>
<BEG> returns the human-readable destination address of this { link haproxymessage } <END>
<BEG> returns the udp tcp destination port of this { link haproxymessage } <END>
<BEG> returns the allowed origin <END>
<BEG> returns a set of header to be expose to call client <END>
<BEG> determines if cooky be support for cors request <END>
<BEG> gets the maxage setting <END>
<BEG> sets the maximum number of component in the cumulation buffer <END>
<BEG> determine if a uri be in asteric-form accord to < a href= http : tool ietf org html rfc7230 # section-5 3 > rfc7230 <SEG> 5 3 < a > <END>
<BEG> return the threshold in byte after which read data in the buffer should be discard <END>
<BEG> clean all httpdatas on disk for the current request <END>
<BEG> true if this request be a multipart request return true if this request be a multipart request <END>
<BEG> returns the url of the web socket <END>
<BEG> performs a sha-1 hash on the specify data param data the data to hash return the hash data <END>
<BEG> returns { code true } if and only if the specified message can be decode by this codec <END>
<BEG> returns the current state of this decoder <END>
<BEG> returns the { link httpmethod } represent by the specify name <END>
<BEG> returns an exist or new { link httpversion } instance which match to the specify rtsp version string <END>
<BEG> returns password that need to be validate return password that need to be validate <END>
<BEG> returns the { link socksauthscheme } of this { link socksinitresponse } return the { link socksauthscheme } of this { link socksinitresponse } <END>
<BEG> returns sock response type return sock response type <END>
<BEG> reads a big-endian unsigned medium integer from the buffer <END>
<BEG> reads a big-endian signed integer from the buffer <END>
<BEG> validate a spdy header value <END>
<BEG> removes the { code x-spdy-stream-id } header <END>
<BEG> converts the specify java cipher suite to it correspond openssl cipher suite name <END>
<BEG> returns the generated rsa private key file in pem format <END>
<BEG> return the writeridletime that be give when instance this class in millisecond <END>
<BEG> is call when a write timeout be detect <END>
<BEG> < p > note the change will be take a best effort <SEG> mean that all already schedule traffic will not be change <SEG> but only apply to new traffic < p > < p > so the expected usage of this method be to be use not too often <SEG> accordingly to the traffic shape configuration < p > param readlimit the readlimit to set <END>
<BEG> stop the monitoring process <END>
<BEG> param readlimit channel read limit <END>
<BEG> create the global trafficcounter <END>
<BEG> note the change will be take a best effort <SEG> mean that all already schedule traffic will not be change <SEG> but only apply to new traffic < br > so the expected usage of this method be to be use not too often <SEG> accordingly to the traffic shape configuration <END>
<BEG> creates a new { link attributekey } for the give { param name } or fail with an { link illegalargumentexception } if a { link attributekey } for the give { param name } exists <END>
<BEG> set the value for the current thread <END>
<BEG> sets the value to uninitialized for the specify thread local map ; a proceeding call to get will trigger a call to initialvalue <END>
<BEG> return the number of task that be pending for processing <END>
<BEG> adds a mapping that map the specify optionally wildcard host name to the specify output value <END>
<BEG> create a new { link string } from the give start to end <END>
<BEG>  < br > < p > implementation notes : < br > queue be empty when producernode be the same a consumernode <END>
<BEG> a plain load no order fence of an element from a give offset <END>
<BEG> log a message at level finest accord to the specify format and argument <END>
<BEG> is this logger instance enable for the fine level ? <END>
<BEG> log a message object at level fine <END>
<BEG> log an exception throwable at level fine with an accompanying message <END>
<BEG> log a message object at the warning level <END>
<BEG> log a message at the warning level accord to the specify format and argument <END>
<BEG>  < br > implementation notes : < br > lock free offer use a single cas <END>
<BEG> return { code true } if the jvm be run on windows <END>
<BEG> clear and recycle this instance <END>
<BEG>  < br > implementation notes : < br > poll be allow from a single thread < br > poll read the next node from the consumernode and : < ol > < li > if it be null <SEG> the queue be empty <END>
<BEG> returns a pseudorandom <SEG> uniformly distribute { code double } value between 0 inclusive and the specify value exclusive <END>
<BEG> try to call { link referencecounted # release } if the specified message implement { link referencecounted } <END>
<BEG> try to call { link referencecounted # release int } if the specified message implement { link referencecounted } <END>
<BEG> returns this { link uniquename } 's id return the id <END>
<BEG> answers the thread index <END>
<BEG> answers the number of thread in the current subgroup <END>
<BEG> answers the thread sub-index in current subgroup <END>
<BEG> param argv command line argument <END>
<BEG> return only version <SEG> e g <END>
<BEG> generate the chart 's html <END>
<BEG> creates a control <SEG> order checking be disable by default <END>
<BEG> returns the expectation setter for the last expected invocation in the current thread <END>
<BEG> expects any byte argument <END>
<BEG> expects a double argument great than or equal to the give value <END>
<BEG> expects a byte that match one of the give expectation <END>
<BEG> expects a char that do not match the give expectation <END>
<BEG> expects a byte that be equal to the give value <END>
<BEG> expects a byte array that be equal to the give array <SEG> i e <END>
<BEG> expects a string that match the give regular expression <END>
<BEG> expects a string that start with the give prefix <END>
<BEG> expects a float that have an absolute difference to the give value that be less than the give delta <END>
<BEG> records that the mock object will expect the last method call a fixed number of time <SEG> and will react by return the provided return value <END>
<BEG> same a { link mockcontrol # setthrowable throwable } <END>
<BEG> return constructor to be call <END>
<BEG> creates a mock object that implement the give interface <SEG> order checking be enable by default <END>
<BEG> creates a mock object that implement the give interface <SEG> order checking be disable by default <SEG> and the mock object will return { code 0 } <SEG> { code null } or { code false } for unexpected invocation <END>
<BEG> create a mock builder allow to create a partial mock for the give class or interface <END>
<BEG> expects a comparable argument less than or equal the give value <END>
<BEG> expects not null <END>
<BEG> expects an object that be the same a the give value <END>
<BEG> resets the give mock object more exactly : the control of the mock object and turn them to a mock with default behavior <END>
<BEG> creates a mock object of the requested type that implement the give interface or extend the give class param type the type of the mock to be create <END>
<BEG> creates a mock object of the requested type that implement the give interface or extend the give class param name the name of the mock object <END>
<BEG> switches all register mock object more exactly : the control of the mock object to replay mode <END>
<BEG> resets all register mock object more exactly : the control of the mock object <END>
<BEG> create a default mock from this builder <END>
<BEG> create a named nice mock from this builder <END>
<BEG> create name mock from the provided mock control use the argument pass to the builder <END>
<BEG> creates a mock object that implement the give interface <END>
<BEG> sets the type of this normal type table item <END>
<BEG> double argument great than or equal to the give value <END>
<BEG> byte argument great than the give value <END>
<BEG> short array argument that be equal to the give array <SEG> i e <END>
<BEG> char argument that match both give argument matcher <END>
<BEG> short argument that do not match the give argument matcher <END>
<BEG> float argument that have an absolute difference to the give value that be less than the give delta detail <END>
<BEG> returns the captured value of the argument <END>
<BEG> puts the annotation of this annotation writer list into the give byte vector <END>
<BEG> constructs a new frame with the give size <END>
<BEG> makes the give visitor visit this annotation <END>
<BEG> returns the index of the give instruction in this list <END>
<BEG> replaces an instruction of this list with another instruction <END>
<BEG> prints the text construct by this visitor <END>
<BEG> see original { link mockito # docallrealmethod } since 1 8 0 <END>
<BEG> for internal use by { link enhancer } only ; see the { link org mockito cglib reflect fastmethod } class for similar functionality <END>
<BEG> non-javadoc see org mockito imockitoconfiguration # getannotationengine <END>
<BEG> < p > test if two < code > short < code > s be equal < p > param lhs the left hand < code > short < code > param rhs the right hand < code > short < code > return equalsbuilder - use to chain call <END>
<BEG> < p > deep comparison of array of < code > int < code > <END>
<BEG> non-javadoc see org mockito internal progress argumentmatcherstorage # reportand <END>
<BEG> argument great than or equal the give value <END>
<BEG> comparable argument less than or equal the give value detail <END>
<BEG> boolean argument that match both give matcher <END>
<BEG> any < code > char < code > or < strong > non-null < strong > < code > character < code > <END>
<BEG> any < strong > non-null < strong > < code > list < code > <END>
<BEG> < code > string < code > argument that contain the give substring <END>
<BEG> < code > pattern < code > argument that match the give regular expression <END>
<BEG> < code > string < code > argument that start with the give prefix <END>
<BEG> see original { link mockito # doreturn object <SEG> object } since 2 1 0 <END>
<BEG> instantiate { link argumentcaptor } a field annotate by & # 64 ; captor <END>
<BEG> equivalent to { link java util serviceloader # load } but without require java 6 android 2 3 gingerbread <END>
<BEG> returns the annotation engine available for the current runtime <END>
<BEG> get all invocation from mock <END>
<BEG> similar mean the same method name <SEG> same mock <SEG> unverified and : if argument be the same can not be overload <END>
<BEG> < p > test if two < code > object < code > s be equal use their < code > equal < code > method < p > param lhs the left hand object param rhs the right hand object return equalsbuilder - use to chain call <END>
<BEG> non-javadoc see org mockito stub answer # answer org mockito invocation invocationonmock <END>
<BEG> stubbings in ascend order <SEG> most recent last <END>
<BEG> param key the key of the entry <END>
<BEG> creates an empty optionaldouble use reflection to stay backwards-compatible with old jdks <END>
<BEG> returns the boxed default value for a primitive or a primitive wrapper <END>
<BEG> return actual type argument match the type variable of the raw type represent by this { link genericmetadatasupport } instance <END>
<BEG> resolve current method generic return type to a { link genericmetadatasupport } <END>
<BEG> param text to have the first line remove return less first line <END>
<BEG> suspiciously not match argument be those that do n't match <SEG> the tostring representation be the same but type be different <END>
<BEG> initializes object annotate with mockito annotation for give testclass : & # 064 ; { link org mockito mock } <SEG> & # 064 ; { link spy } <SEG> & # 064 ; { link captor } <SEG> & # 064 ; { link injectmocks } < p > see examples in javadoc for { link mockitoannotations } class <END>
<BEG> returns the first header name { code name } <SEG> or null if no such header exists <END>
<BEG> add a field to suppress <END>
<BEG> return { code true } if the < tt > field < tt > should be suppress <END>
<BEG> set a proxy for a method <END>
<BEG> throw illegalstateexception if the condition if false <END>
<BEG> gets the key vault namespace <END>
<BEG> creates a builder intialized with an empty document <END>
<BEG> gets the index version number <END>
<BEG> sets the language for the text index <END>
<BEG> sets the name of the field that contain the language string <END>
<BEG> sets the 2dsphere index version number <END>
<BEG> sets the number of precision of the stored geohash value of the location data in 2d index <END>
<BEG> gets the upper inclusive boundary for the longitude and latitude value for 2d index return the upper inclusive boundary for the longitude and latitude value <END>
<BEG> sets the upper inclusive boundary for the longitude and latitude value for 2d index param max the upper inclusive boundary for the longitude and latitude value return this <END>
<BEG> sets the collation option < p > a null value represent the server default < p > param collation the collation option to use return this mongodb server release 3 4 since 3 4 <END>
<BEG> sets whether this update will insert a new document if no document match the filter <END>
<BEG> adds a request to update all document in the collection that match the query with which this builder be create <END>
<BEG> sets the collation param collation the collation return this since 3 4 mongodb server release 3 4 <END>
<BEG> gets the type byte for a give object <END>
<BEG> gets a field name for a $ group operation represent the average of the value of the give expression when apply to all member of the group <END>
<BEG> gets a field name for a $ group operation represent the value of the give expression when apply to the last member of the group <END>
<BEG> creates a $ unwind pipeline stage for the specified field name <SEG> which must be prefix by a { code ' $ ' } sign <END>
<BEG> specifies the granularity of the bucket definition <END>
<BEG> the definition of the output document in each bucket param output the output document definition return this <END>
<BEG> if true <SEG> then when a write fail <SEG> return without perform the remain writes <END>
<BEG> returns the changestreamoperationtype from the string value <END>
<BEG> sets the number of document to skip <END>
<BEG> sets the maximum execution time on the server for this operation <END>
<BEG> gets whether the collection be cap <END>
<BEG> sets the readpreference param readpreference the readpreference return this <END>
<BEG> sets the query modifier to apply to this operation <END>
<BEG> the server normally time out idle cursor after an inactivity period 10 minute to prevent excess memory use <END>
<BEG> users should not set this under normal circumstance <END>
<BEG> get partial result from a sharded cluster if one or more shard be unreachable instead of throw an error <END>
<BEG> sets the hint for which index to use <END>
<BEG> sets the exclusive upper bound for a specific index <END>
<BEG> sets the minimum inclusive low bound for a specific index <END>
<BEG> sets the bypass document level validation flag <END>
<BEG> sets the write concern param writeconcern the write concern return this <END>
<BEG> creates a filter that match all document where the value of the give field be great than the specify value <END>
<BEG> creates a filter that preform a logical or of the provided list of filter <END>
<BEG> creates a filter that match all document where the value of the field be of the specified bson type <END>
<BEG> creates a filter that match all document where all of the bit position be set in the field <END>
<BEG> gets the sort criterion to apply to the query <END>
<BEG> create an index key for a geohaystack index on the give field <END>
<BEG> sets the default storage engine option document for index <END>
<BEG> sets the field that act a a unique identifier for a document <END>
<BEG> sets the behavior of $ merge if a result document and an exist document in the collection have the same value for the specify on field s <END>
<BEG> sets aggregation pipeline to update the document in the collection <END>
<BEG> sets the behavior of $ merge if a result document do not match an exist document in the out collection <END>
<BEG> creates a projection to the give field name of a slice of the array value of that field <END>
<BEG> sets the position at which to add the pushed value in the array <END>
<BEG> sets the sort direction for sort array element that be not document <END>
<BEG> sets if mongod should drop the target of renamecollection prior to rename the collection <END>
<BEG> returns the diacritic-sensitive flag to use with the text search return the diacritic-sensitive flag if set or null mongodb server release 3 2 <END>
<BEG> gets the pipeline specify the update to apply to the matching document <END>
<BEG> creates an update that increments the value of the field with the give name by the give value <END>
<BEG> creates an update that set the value of the field to the give value if the give value be great than the current value of the field <END>
<BEG> creates an update that set the value of the field to the current date a a bson timestamp <END>
<BEG> creates an update that remove all instance of the give value from the array value of the field with the give name <END>
<BEG> creates an update that pop the last element of an array that be the value of the field with the give name <END>
<BEG> creates an update that perform a bitwise and between the give long value and the integral value of the field with the give name <END>
<BEG> returns the validationlevel from the string representation of the validation level <END>
<BEG> set the alternate key name <END>
<BEG> create an unacknowledged updateresult return an unacknowledged updateresult <END>
<BEG> return a server in the cluster that be incompatibly new than the driver <END>
<BEG> gets the required cluster type return the required cluster type <END>
<BEG> return whether the server be compatible with the driver <END>
<BEG> get the default maximum document size <END>
<BEG> get the default maximum wire version return the default maximum wire version <END>
<BEG> returns whether this can be treat a a secondary server <END>
<BEG> the replica set setversion report by this mongodb server <END>
<BEG> returns a short <SEG> pretty description for this serverdescription <END>
<BEG> gets the timeout for socket read <END>
<BEG> get the unparsed connection string <END>
<BEG> gets the maximum connection pool size specify in the connection string <END>
<BEG> gets the ssl enable value specify in the connection string <END>
<BEG> return the heartbeat frequency in millisecond <SEG> or null if unset since 3 3 <END>
<BEG> gets the cluster listener <END>
<BEG> gets the connection pool setting <END>
<BEG> gets the server monitor listener <END>
<BEG> set the chunk size <END>
<BEG> sets whether to bypass document validation <END>
<BEG> return the { code saslprep } -canonicalised version of the give { code str } for use a a stored string <END>
<BEG> internal replication use only <END>
<BEG> returns { code true } if this collection contain no element <END>
<BEG> appends all of the element in the specified collection to the end of this deque <SEG> in the order that they be return by the specify collection 's iterator <END>
<BEG> not yet implement <END>
<BEG> sets whether the cursor should be a tailable cursor <END>
<BEG> sets if allow to query non-primary replica set member <END>
<BEG> sets if the cursor timeout should be turn off <END>
<BEG> sets if partial result from a mongo if some shard be down be allow param partial allow partial result from a mongo if some shard be down return this mongodb driver manual meta-driver late legacy mongodb-wire-protocol # op-query op_query <END>
<BEG> returns the current number of active write operation <END>
<BEG> produce hex representation of the md5 digest of a byte array <END>
<BEG> the list of error <SEG> which will not be null <SEG> but may be empty if the write concern error be not null <END>
<BEG> convenience method to create a from an exist { code mongoclientsettings } <END>
<BEG> gets the compressor to use for compress message to the server <END>
<BEG> gets the error message associate with the command failure <END>
<BEG> create an instance for zlib compression <END>
<BEG> creates a mongocredential instance for the scram-sha-256 sasl mechanism <END>
<BEG> removes the give error label from the exception <END>
<BEG> check the validity of the give collection name <END>
<BEG> copy this mongooptions instance into a new instance <END>
<BEG> sets the socket factory for create socket to mongod <END>
<BEG> sets the description for { code mongo } instance create with these option <END>
<BEG> sets the maximum number of connection allow per host for this mongo instance <END>
<BEG> sets the maximum wait time in millisecond that a thread may wait for a connection to become available <END>
<BEG> sets the w value <SEG> number of writes <SEG> of the global writeconcern <END>
<BEG> sets the wtimeout value of the global writeconcern <END>
<BEG> sets whether jmx bean register by the driver should always be mbeans <SEG> regardless of whether the vm be java 6 or great <END>
<BEG> gets the write result <END>
<BEG> returns the hint bsonvalue for which index to use <END>
<BEG> enables write to temporary file <END>
<BEG> returns the logical starting point for the new change stream <END>
<BEG> set the recovery token <END>
<BEG> enables retryable read if a read fail due to a network error <END>
<BEG> sets the collation option < p > a null value represent the server default < p > param collation the collation option to use return this <END>
<BEG> sets whether usepowerof2sizes should be use foe the allocation strategy <END>
<BEG> sets the validation level that determine how strictly mongodb apply the validation rule to exist document during an insert or update <END>
<BEG> sets the { link validationaction } that determine whether to error on invalid document or just warn about the violation but allow invalid document <END>
<BEG> sets the filter to apply to the query <END>
<BEG> gets the document which will replace the document match the query filter <END>
<BEG> sets the maximum await execution time on the server for this operation <END>
<BEG> sets the document contain the field or field to group <END>
<BEG> sets the function that create a key object for use a the grouping key <END>
<BEG> gets the list of insert request <END>
<BEG> gets the nameonly flag that indicate whether the command should return just the database name or return the database name and size information <END>
<BEG> sets the javascript function that follow the reduce method and modify the output <END>
<BEG> sets the global variable that be accessible in the map <SEG> reduce and finalize function <END>
<BEG> sets whether to include the timing information in the result information <END>
<BEG> sets the name of the database to output into <END>
<BEG> sets if the post-processing step will prevent mongodb from lock the database <END>
<BEG> the batch size to use for each cursor <END>
<BEG> equivalent to the $ gte operator param object value to query return { code this } <END>
<BEG> equivalent to an $ and operand param ands the list of condition to and together return { code this } <END>
<BEG> gets the read concern level <END>
<BEG> gets this read concern a a document <END>
<BEG> return the server selector list <END>
<BEG> returns true if this write concern indicate that write operation must be acknowledge <END>
<BEG> sets the current state of the writer <END>
<BEG> set the context <SEG> which will indicate which state the writer be in <SEG> for example which part of a document it 's currently write <END>
<BEG> encodes an undefined value param name the field name see org bson bsontype # undefined <END>
<BEG> encodes a field to a { link org bson bsontype # javascript_with_scope } value <END>
<BEG> encodes a symbol field param name the field name param symbol the value see org bson bsontype # symbol <END>
<BEG> encodes an objectid field to a { link org bson bsontype # object_id } <END>
<BEG> returns the value of a field a an { code int } <END>
<BEG> returns the date or def if not set <END>
<BEG> registers a { code transformer } to use when decode a specific class from bson <END>
<BEG> transforms the { code objecttodecode } use all transformer register for the class of this object <END>
<BEG> clears < em > all < em > decode hook <END>
<BEG> remove all decoding hook for a specific class <END>
<BEG> remove a specific encode hook for a specific class <END>
<BEG> gets this value a a bsonarray if it be one <SEG> otherwise throw exception return a bsonarray throw org bson bsoninvalidoperationexception if this value be not of the expect type <END>
<BEG> this method may be overridden to change the behavior of read the current value from the give { code bsonreader } <END>
<BEG> property be readable <END>
<BEG> sets the writename <SEG> the key for this property when serialize the data into bson <END>
<BEG> returns the write annotation <SEG> to be apply when deserializing from bson return the write annotation <END>
<BEG> return true or false if a discriminator should be use when serialize or null if not set <END>
<BEG> equivalent to long tounsignedstring in java 8 <END>
<BEG> reads and return a single long value from the input stream <END>
<BEG> a converter from bson string value to json <END>
<BEG> decode this into a document <END>
<BEG> static factory method return an unmodifiable { link findandreplaceoptions } instance <END>
<BEG> returns the bson type identifier <END>
<BEG> non-javadoc see org springframework data mongodb core reactivemongooperations # upsert org springframework data mongodb core query query <SEG> org springframework data mongodb core query update <SEG> java lang string <END>
<BEG> retrieve a property and return it a a byte param propertyname property we be look up return byte value of property <END>
<BEG> retrieve a property and return it a a string param propertyname return string value of property <END>
<BEG> return string source ? ? <END>
<BEG> param dispatchtarget param dispid return variant return by underlie calln <END>
<BEG> make call to native callsubn param dispatchtarget param dispid <END>
<BEG> cover for call to underlie invokev param dispatchtarget param dispid return variant return by the request for retrieval of parameter <END>
<BEG> non-javadoc see com jacob com invocationproxy # invoke java lang string <SEG> com jacob com variant [ ] <END>
<BEG> deprecate the java model leave the responsibility of clear up object to the garbage collector <END>
<BEG> return true if file be detect to conform to the software floating-point procedure-call standard via elf flag <END>
<BEG> convenience method for { link # invoke class <SEG> object [ ] invoke pointer class <SEG> args } <END>
<BEG> convenience constant <SEG> equivalent to < code > void constant < code > <END>
<BEG> set the native peer value <END>
<BEG> returns the associated native { link pointer } <END>
<BEG> writes the field of the struct to native memory <END>
<BEG> returns whether the structure be write to native memory prior to a native function call <END>
<BEG> exposed for test purpose only <END>
<BEG> force a read of the give field from native memory <END>
<BEG> write the give field value to the field and native memory <END>
<BEG> output the occupied value of an integer-pixels image a range of contiguous value <END>
<BEG> returns a hash code for this { code address } <END>
<BEG> compares this address to another address <END>
<BEG> wraps a native address in a { link pointer } instance <END>
<BEG> repeatedly dequeues reference from the queue and invokes { link finalizablereference # finalizereferent } on them until the queue be empty <END>
<BEG> looks up finalizer startfinalizer <END>
<BEG> this method return labelssource instance <SEG> contain all label derive from this iterator return <END>
<BEG> returns tokenpreprocessor set for this tokenizerfactory instance return tokenpreprocessor instance <SEG> or null if no preprocessor be define <END>
<BEG> returns true if the gradient be stale <SEG> also update the cachegradientstamp <END>
<BEG> computes the backward entropies h^beta <END>
<BEG> these method will write to the provide writer <END>
<BEG> adds trial result to the roc data param trial trial result to add to roc data <END>
<BEG> return a random double drawn from an exponential distribution with mean 1 and variance 1 <END>
<BEG> return a random double drawn from an chi-squared distribution with mean df+lambda and variance 2 df <END>
<BEG> tests if the argument be correct or incorrect <END>
<BEG> writes a { link basemodel } to disk <END>
<BEG> retrieves the specified parameter from the specify argument <END>
<BEG> return maximum token count in the dictionary <END>
<BEG> evaluates the give reference { link documentsample } object <END>
<BEG> return the name return <END>
<BEG> sets the n best link entry from an external data source <END>
<BEG> set the search term that be use to link this span to an external data source param searchterm <END>
<BEG> get the map contain the dictionary <END>
<BEG> convert a list of integer object into an array of primitive integer <END>
<BEG> compute gradient <END>
<BEG> returns the event which make up this sequence <END>
<BEG> assigns a probability to a label <SEG> discard any previously assign probability <END>
<BEG> assigns a probability to a label <SEG> discard any previously assign probability <SEG> if the new probability be great than the old one <END>
<BEG> assigns a log probability to a label <SEG> discard any previously assign probability <END>
<BEG> compounds the exist probability mass on the label with the new probability pass in to the method <END>
<BEG> returns the probability associate with all label return the hashmap of label and their probability <END>
<BEG> retrieves the total count of all ngrams <END>
<BEG> get the n-1 th ngram of a give ngram <SEG> that be the same ngram except the first word in the ngram param ngram a ngram return a ngram <END>
<BEG> returns the set of punctuation par that occur immediately after this parse <END>
<BEG> sets the set of punctuation tag which preceed this parse <END>
<BEG> specifies the parent parse node for this constituent <END>
<BEG> it return the fmeasure result <END>
<BEG> associates the specify tag with the specify word <END>
<BEG> creates a new { link posdictionary } from a provide { link inputstream } <END>
<BEG> retrieves the number of time a cache miss occur <END>
<BEG> generates previous decision feature for the token base on content of the previous map <END>
<BEG> converts to upper case independent of the current locale via { link character # touppercase char } which use map information from the unicodedata file <END>
<BEG> retrieves a map with the training parameter which have the pass name space <END>
<BEG> get a double parameter in the specified namespace param namespace param key param defaultvalue return <END>
<BEG> create a new saxparser which process xml securely <END>
<BEG> serialize a classifier to a file <END>
<BEG> return the number of feature token in the dataset <END>
<BEG> returns number of feature with weight above a certain threshold <END>
<BEG> print all feature in the classifier and the weight that they assign to each class <END>
<BEG> confidence weight accuracy assume the score be probability and use 5 a threshold <END>
<BEG> print the full feature matrix in tab-delimited form <END>
<BEG> applies a feature count threshold to the rvfdataset <END>
<BEG> applies a feature max count threshold to the rvfdataset <END>
<BEG> manages the property for training and run statistical coreference system <END>
<BEG> run the training <END>
<BEG> reads and dump output <SEG> mainly for debug <END>
<BEG> classify the content of a file <END>
<BEG> print the string feature generate from a token <END>
<BEG> either find combination_mode_property or return a default value <END>
<BEG> takes a { link list } of document and print the likelihood of each possible label at each point <END>
<BEG> returns the double array contain the feature value <END>
<BEG> computes the probability of the sequence of be at the end of the table give that the first tag in table be given <END>
<BEG> fetches the value of a give attribute <END>
<BEG> returns the large start of all argument head or the beginning of the mention 's extent if there be no argument <END>
<BEG> retrieves the argument that appear last in the sentence <END>
<BEG> returns the large end of the two args head <END>
<BEG> zero or more <END>
<BEG> any of the three <END>
<BEG> convert an end-inclusive span to an end-exclusive span <END>
<BEG> another silly translation between a pair and a span <END>
<BEG> build a dataset from some data <END>
<BEG> the object of this relation triple <SEG> a a string <END>
<BEG> the object of this relation triple <SEG> a a string of the object 's lemma <END>
<BEG> gets the span of the non-canonical object <END>
<BEG> set the value of this relation triple express a tmod temporal modifier relation <END>
<BEG> checks whether a file satisfy the number range selection filter <END>
<BEG> returns the collection that this basicdatum be construct with <END>
<BEG> returns the first label for this document <SEG> or null if none have be set <END>
<BEG> removes all currently assign label for this document then add the give label <END>
<BEG> removes all currently assign label for this document then add all of the give label <END>
<BEG> adds the give label to the list of label for this document if it be not null <END>
<BEG> for internal debugging purpose only <END>
<BEG> make a new label with this < code > string < code > a the value <END>
<BEG> set the value for the label <END>
<BEG> return a factory for this kind of label <END>
<BEG> given a sequence to search through e g <END>
<BEG> set the tag for the label <END>
<BEG> scales the value in this array by b <END>
<BEG> computes inf-norm of vector <END>
<BEG> returns the large value in a vector of double <END>
<BEG> returns the log of the portion between { code fromindex } <SEG> inclusive <SEG> and { code toindex } <SEG> exclusive <SEG> of an array of number <SEG> which be themselves input in log form <END>
<BEG> makes the value in this array sum to 1 0 <END>
<BEG> returns the mean of a vector of double <END>
<BEG> returns the great of two { code double } value <END>
<BEG> exponentiation like we learn in grade school : multiply b by itself e time <END>
<BEG> return the outcome y of the index-th x <SEG> y pair <END>
<BEG> read the lambda from the file <END>
<BEG> returns a factory that vend lineiterators that read the content of the give reader <SEG> split on newlines <END>
<BEG> returns an iterator over the input source in the underlying collection <END>
<BEG> parses the list of hasword <END>
<BEG> checks whether a word be in the lexicon <END>
<BEG> adds the tagging with count to the data structure in this lexicon <END>
<BEG> uses a memorytreebank with a chtbtokenizer and a bobchristreenormalizer <END>
<BEG> return a default sentence for the language for test <END>
<BEG> total probability of all par have word at head with give pos tag a marker on tree over start inclusive end exclusive <END>
<BEG> return the best parse of the sentence most recently parse <END>
<BEG> return a negrapenncollinizer <END>
<BEG> transformtree do all language-specific tree transformation <END>
<BEG> string-value label of right sister ; from inside to outside left-right <END>
<BEG> features which should be enable by default <END>
<BEG> set language-specific option accord to flag <END>
<BEG> run the evalb score metric on guess gold input <END>
<BEG> get the sentence index of the kth word on the buffer <END>
<BEG> returns a 0-based index of the right leaf of the tree <END>
<BEG> annotate for coreference statistical or hybrid <END>
<BEG> annotate dependency relation in sentence <END>
<BEG> return the doc date of this doc <END>
<BEG> get the underlying coremap if need be <END>
<BEG> retrieve the token of the speaker <END>
<BEG> char offset of quote <END>
<BEG> go through all of the path via reflection <SEG> and print them out in a tsv format <END>
<BEG> set up the additional tokensregexnerannotator sub-annotator param property properties for the tokensregexner sub-annotator <END>
<BEG> displays the output of all annotator in json format <END>
<BEG> process a collection of file <END>
<BEG> returns a presentable version of a give ptb token <END>
<BEG> return a ptbtokenizerfactory that vend corelabel token <END>
<BEG> sets whether the output of the processor will contain newline word \n at the end of block-level tag <END>
<BEG> read xml from input source and write xml to output writer <SEG> while transform text appear inside the specified xml tag by apply the specify { link function < code > function < code > } <END>
<BEG> returns the set of name for name relation in this pattern <END>
<BEG> collects numsamples sample of sequence <SEG> from the distribution over sequence define by the sequence model pass on construction <END>
<BEG> samples the sequence repeatedly <SEG> make numsamples pass over the entire sequence <END>
<BEG> returns the value of the small entry in this counter <END>
<BEG> finds and return the key in the counter with the large count <END>
<BEG> sets each value of target to be target [ k ] -arg [ k ] for all key k in target <END>
<BEG> sets each value of double [ ] target to be target [ idx indexof k ] -a getcount k for all key k in arg <END>
<BEG> multiplies each value in target by the give multiplier <SEG> in place <END>
<BEG> normalizes the target counter in-place <SEG> so the sum of the result value equal 1 <END>
<BEG> removes all entry from c except for the bottom { code num } <END>
<BEG> removes all entry with count below the give threshold <SEG> return the set of removed entry <END>
<BEG> returns the set of key whose count be at or below the give threshold <END>
<BEG> returns a comparator back by this counter : two object be compare by their associate value store in the counter <END>
<BEG> returns c1 divide by c2 <END>
<BEG> calculates the jensen-shannon divergence between the two counter <END>
<BEG> l2 normalize a counter <END>
<BEG> saves a counter to a text file <END>
<BEG> check if this counter be a uniform distribution <END>
<BEG> places the minimum of first and second key value in the first counter <END>
<BEG> returns the normalized count of the give object <END>
<BEG> returns the mean of all the count totalcount size <END>
<BEG> subtracts the give count from the current count for the give key <END>
<BEG> subtracts the give count from the current count for each of the give key <END>
<BEG> subtracts the count in the give counter from the count in this counter <END>
<BEG> removes all the give key from this counter <END>
<BEG> finds and return the large count in this counter <END>
<BEG> returns the set of key that have exactly the give count <END>
<BEG> returns a string summarizing f1 that will print nicely <END>
<BEG> return the inner counter associate with key o <END>
<BEG> return total number of entry key pair <END>
<BEG> takes linear time <END>
<BEG> replace the counter for k1-index o by new counter c <END>
<BEG> given an ordering of the first row and second column key <SEG> will produce a double matrix <END>
<BEG> return a filter that reject a string that be a punctuation tag name <SEG> and reject everything else <END>
<BEG> returns a { link function function } object that map strings to strings accord to this treebanklanguagepack 's categoryandfunction method <END>
<BEG> access label <END>
<BEG> sets the score associate with the current node <SEG> if there be one <END>
<BEG> return the value of the label or null if none <END>
<BEG> set the value for the label if one be store <END>
<BEG> return an iterator over trees in the treebank <END>
<BEG> the prep grammatical relation <END>
<BEG> remove thing like hyphen functional tag and equal from the end of a node label <END>
<BEG> returns a string array of punctuation word for this treebank language <END>
<BEG> returns a string array of sentence final punctuation word for this treebank language <END>
<BEG> return an array of character at which a string should be truncate to give the basic syntactic category of a label <END>
<BEG> returns a string array of treebank start symbol <END>
<BEG> return the input charset encoding for the treebank <END>
<BEG> return a tokenizer which might be suitable for tokenizing text that will be use with this treebank language pair <SEG> without tokenizing carriage return i e <SEG> treat them a white space <END>
<BEG> normalizes a leaf content <END>
<BEG> accepts a string that be a punctuation word <SEG> and reject everything else <END>
<BEG> accepts a string that be a sentence end punctuation tag <SEG> and reject everything else <END>
<BEG> accepts a string that be a punctuation tag that should be ignore by evalb-style evaluation <SEG> and reject everything else <END>
<BEG> go through tree and determine their head and print them <END>
<BEG> load tree from give directory <END>
<BEG> apply the treevisitor tp to all tree in the treebank <END>
<BEG> normalize a whole tree -- one can assume that this be the root <END>
<BEG> return a grammaticalstructure suitable for this language treebank <END>
<BEG> prints a few aspect of the treebanklanguagepack <SEG> just for debug <END>
<BEG> set start node <END>
<BEG> an implementation of the < code > treereaderfactory < code > interface <END>
<BEG> set the parent for the current node <END>
<BEG> prints the tree accord to the option specify for this instance <END>
<BEG> checks if the give head finder or tree reader factory be for arabic ; if so <SEG> the font choose in prefs will be override for a arabic compatible font <END>
<BEG> resets the matcher so that it search start over <END>
<BEG> resets the matcher to start search on the give tree for match subexpressions <END>
<BEG> resets the matcher and test if it match on the tree when root at { code node } <END>
<BEG> find the next match of the pattern on the tree <END>
<BEG> returns the node label with { code name } in the pattern <END>
<BEG> determine which daughter of the current parse tree be the head <END>
<BEG> removes the element at the specified index from the array <SEG> and return a new array contain the remain element <END>
<BEG> tests two double [ ] [ ] array for have equal content <END>
<BEG> concatenates two array and return the result <END>
<BEG> finds the e with the high priority and return it <SEG> without modify the queue <END>
<BEG> returns true if a character be punctuation <SEG> and false otherwise <END>
<BEG> create a set out of the item in the iterable <END>
<BEG> returns the mode in the collection <END>
<BEG> unsupported <END>
<BEG> adds the value to the collection map to by the key <END>
<BEG> returns the highest-priority element and remove it from the queue <END>
<BEG> creates a hashset contain all of the objects return by the give iterator <END>
<BEG> the default redwood configuration <SEG> which print to the console without channel <END>
<BEG> adds the value to the arraylist give by map get key <SEG> create a new arraylist if need <END>
<BEG> pretty print a counter <END>
<BEG> compares this object to the specify object <END>
<BEG> compares two < code > mutableinteger < code > object numerically <END>
<BEG> set the pointer to a possible value <END>
<BEG> loads a comma-separated list of double from properties <END>
<BEG> returns the union of set s1 and s2 <END>
<BEG> joins each elem in the { link stream } with the give glue <END>
<BEG> returns a text table contain the matrix of object pass in <END>
<BEG> resolve variable <END>
<BEG> decode a map encode a a string <END>
<BEG> return elapse time without stop timer <END>
<BEG> print elapse time and restart timer <END>
<BEG> finish the line from startdoing with the end of the timing do message and elapsed time in x y second <END>
<BEG> restart static timer <END>
<BEG> returns the previous state <END>
<BEG> iterate over the map use the iterator and entry inner class <END>
<BEG> indicates when the layer be visible or not <END>
<BEG> sets a new indication of layer visible <END>
<BEG> has a byte order marker for utf-16 big endian utf-16 and ucs-2 <END>
<BEG> retrieves all the available < code > charset < code > s on the platform <SEG> among which the default < code > charset < code > <END>
<BEG> returns current highlightmincolor <END>
<BEG> returns current color for the sparkline line <END>
<BEG> returns current width for the sparkline in pixel <END>
<BEG> set width for the sparkline in pixel <END>
<BEG> calculate third quartile q3 of various number a a bigdecimal <END>
<BEG> get sum of various number a a bigdecimal <END>
<BEG> get the maximum value of an array of number element a a bigdecimal <END>
<BEG> cancel the current task <END>
<BEG> determine whether the give array contain the same sequence of byte <END>
<BEG> returns { code true } if the specify resource uri be valid <END>
<BEG> serialises the specified map of parameter into a url query string <END>
<BEG> ensures that { code index } specify a valid < i > position < i > in an array <SEG> list or string of size { code size } <END>
<BEG> ensures that { code start } and { code end } specify a valid < i > position < i > in an array <SEG> list or string of size { code size } <SEG> and be in order <END>
<BEG> returns the unicode code point of the character at the give index <END>
<BEG> parse a form-urlencoded document <END>
<BEG> construct a map contain a copy of the give parameter <END>
<BEG> not support in this base implementation <END>
<BEG> sets the log writer to be use by this configuration to log information on abandon object <END>
<BEG> initializes the receiver with the give configuration <END>
<BEG> sets the maximum amount of time in milliseconds the < code > borrowobject < code > method should block before throw an exception when the pool be exhaust and { link # getblockwhenexhausted } be true <END>
<BEG> sets whether the pool have lifo last in <SEG> first out behaviour with respect to idle object - always return the most recently use object from the pool <SEG> or a a fifo first in <SEG> first out queue <SEG> where the pool always return the old object in the idle object pool <END>
<BEG> sets whether object create for the pool will be validate before be return from the < code > borrowobject < code > method <END>
<BEG> sets whether object borrow from the pool will be validate when they be return to the pool via the < code > returnobject < code > method <END>
<BEG> returns whether object sit idle in the pool will be validate by the idle object evictor if any - see { link # settimebetweenevictionrunsmillis long } <END>
<BEG> sets the maximum number of object to examine during each run if any of the idle object evictor thread <END>
<BEG> sets the name of the { link evictionpolicy } implementation that be use by this pool <END>
<BEG> returns the { link evictionpolicy } define for this pool <END>
<BEG> the total number of object create for this pool over the lifetime of the pool <END>
<BEG> the mean time object be idle for base on the last { link # mean_timing_stats_cache_size } object borrow from the pool <END>
<BEG> sets the value of the flag that determine if jmx will be enable for pool create with this configuration instance <END>
<BEG> sets the value of the jmx name base that will be use a part of the name assign to jmx enable pool create with this configuration instance <END>
<BEG> marks the object a return to the pool <END>
<BEG> obtain the { code idlesoftevicttime } for this eviction configuration instance <END>
<BEG> sets the limit on the number of object instance allocate by the pool check out or idle <SEG> per key <END>
<BEG> sets the cap on the number of idle instance per key in the pool <END>
<BEG> returns the target for the minimum number of idle object to maintain in each of the keyed sub-pools <END>
<BEG> links the provided element a the last in the queue <SEG> wait until there be space to do so if the queue be full <END>
<BEG> links the provided element a the last in the queue <SEG> wait up to the specified time to do so if the queue be full <END>
<BEG> unlinks the last element in the queue <SEG> wait up to the specified time to do so if the queue be empty <END>
<BEG> returns an array contain all of the element in this deque <SEG> in proper sequence from first to last element <END>
<BEG> move to the next synchronization point after a position <END>
<BEG> reconfigures this validatingencoder to wrap the encoder provide <END>
<BEG> read a buffer from the input without copying <SEG> if possible <END>
<BEG> called by delegate method on error <END>
<BEG> write a struct end <END>
<BEG> write a list header <END>
<BEG> read a map header off the wire <END>
<BEG> read an i32 from the wire a a zigzag varint <END>
<BEG> stop serving and shut everything down <END>
<BEG> deserialize only a byte field address by recursively use field id from a byte record <END>
<BEG> writes to the underlie output stream if not null <END>
<BEG> read from the underlie transport <END>
<BEG> write to the underlie transport <END>
<BEG> serialize the thrift object into a java string <SEG> use the default jvm charset encode <END>
<BEG> get the tprotocol be use a the output write protocol <END>
<BEG> retrieves a message which take several argument <END>
<BEG> returns serializer that enable serialize object into buffer <END>
<BEG> deserializes input stream to { link org msgpack type value } object <END>
<BEG> deserializes byte array to object <END>
<BEG> deserializes input stream to object of specified class <END>
<BEG> serializes specify object to output stream <END>
<BEG> < p > gets the display name or { link # getname } if not set <END>
<BEG> < p > indicates if this feature be hidden <END>
<BEG> obtains the indexed getter <END>
<BEG> gets the < code > beaninfo < code > object which contain the information of the property <SEG> event and method of the specified bean class <END>
<BEG> < p > gets the parameter descriptor <END>
<BEG> reads the next object <END>
<BEG> creates a new { link allocatedbuffer } that be back by the give array <END>
<BEG> creates a new { link allocatedbuffer } that be back by the give { link bytebuffer } <END>
<BEG> < pre > a url resource name that uniquely identify the type of the serialize protocol buffer message <END>
<BEG> < pre > the fully qualified name of this interface <SEG> include package name follow by the interface 's simple name <END>
<BEG> < pre > source context for the protocol buffer service represent by this message <END>
<BEG> < pre > the source syntax of the service <END>
<BEG> wraps the give byte into a { code bytestring } <END>
<BEG> encodes { code text } into a sequence of byte use the name charset and return the result a a { code bytestring } <END>
<BEG> decode a zigzag-encoded 64-bit value <END>
<BEG> write an { code sfixed32 } field <SEG> include tag <SEG> to the stream <END>
<BEG> compute the number of byte that would be need to encode a { code uint32 } field <SEG> include tag <END>
<BEG> compute the number of byte that would be need to encode a { code uint32 } field <END>
<BEG> encode and write a varint <END>
<BEG> compute the number of byte that would be need to encode a varint <END>
<BEG> write a little-endian 64-bit integer <END>
<BEG> like { link # add double } but more efficient in that it do n't box the element <END>
<BEG> find an extension for mutable apis by fully-qualified field name <SEG> in the proto namespace <END>
<BEG> find all extension for immutable apis by fully-qualified name of extended class <END>
<BEG> add a message-type extension to the registry by descriptor <END>
<BEG> get the unmodifiable singleton empty instance <END>
<BEG> < pre > the field json name <END>
<BEG> < pre > the string value of the default value of this field <END>
<BEG> < pre > the set of field mask path <END>
<BEG> called by subclass to parse an unknown field <END>
<BEG> constructs a { link messageinfo } for this message type <END>
<BEG> see # setalwaysusefieldbuildersfortesting boolean <END>
<BEG> helper method for implement { link message # hashcode } for booleans <END>
<BEG> helper method for implement { link message # hashcode } for byte field <END>
<BEG> returns an immutable empty mapfield <END>
<BEG> gets the content of this mapfield a a read-only list <END>
<BEG> gets a mutable list view of this mapfield <END>
<BEG> returns whether this field can be modify <END>
<BEG> returns a deep copy of this map field <END>
<BEG> < pre > a url of the input message type <END>
<BEG> < pre > if true <SEG> the response be stream <END>
<BEG> < pre > if non-empty specifies a path under which inherit http path be root <END>
<BEG> < pre > the option 's value pack in an any message <END>
<BEG> gets a builder for the specified index <END>
<BEG> gets the base class interface for the specified index <END>
<BEG> sets a message at the specified index replace the exist item at that index <END>
<BEG> sets a message for the field replace any exist value <END>
<BEG> return whether { link # makeimmutable } have be call <END>
<BEG> converts this exception to an { link invalidprotocolbufferexception } <END>
<BEG> serializes the set and write it to { code writer } use { code messageset } wire format <END>
<BEG> returns the number of byte in the utf-8-encoded form of { code sequence } <END>
<BEG> return the start index inside the byte array return by asbytearray <SEG> not support by mallocbytez <END>
<BEG> return the length inside the byte array return by asbytearray <SEG> not support by mallocbytez <END>
<BEG> return offset to byte array excluding native bytearray header <END>
<BEG> modify content of this structstring <END>
<BEG> writes a 4 byte float <END>
<BEG> len < 127 ! ! ! ! ! <END>
<BEG> do not write length <SEG> just plain byte param array param length throw java io ioexception <END>
<BEG> if output stream be null <SEG> just encode into a byte array param outstream <END>
<BEG> sets the specify 64-bit double at the specified absolute { code index } in this buffer <END>
<BEG> converts slice to lower case code point by code point <END>
<BEG> gets the utf-8 encode code point before the { code position } <END>
<BEG> creates a slice for directly a raw memory address <END>
<BEG> author steve ebersole <END>
<BEG> does any part represent a collection-element reference ? <END>
<BEG> look for embeddable annotation <END>
<BEG> is a first row limit indicate ? <END>
<BEG> create the basic contextual clob reference <END>
<BEG> determines the appropriate class loader to which the generated proxy should be scoped <END>
<BEG> access to the wrap clob reference return the wrapped clob reference <END>
<BEG> generates a serializableclobproxy proxy wrap the provide clob object <END>
<BEG> should entity and proxy load by the query be put in read-only mode ? <END>
<BEG> interpret an int a it binary form param intvalue the int to interpret to binary return the binary <END>
<BEG> for the give sqlexception <SEG> locate the x open-compliant sqlstate <END>
<BEG> macro to get the content of an optional child element <END>
<BEG> check if this lock mode be less restrictive than the give lock mode <END>
<BEG> set the overall { link lockmode } to be use <END>
<BEG> iterable access to alias key and lockmode value a map entry <END>
<BEG> return identifier generator strategy <END>
<BEG> return generator configuration parameter <END>
<BEG> min time in m take by the execution of this query onto the db <END>
<BEG> query execute to the db <END>
<BEG> the number of query plan not fetch from the cache <END>
<BEG> mutator for the index metadata param indexmetadata the indexmetadata to set <END>
<BEG> accessor for strategy <END>
<BEG> returns a string representation of the object use a prefix param prefix prefix string param indent indent string return a string representation of the object <END>
<BEG> add a new columnmetadata element param colmd metadata for the column <END>
<BEG> method to initialise the object <SEG> create internal convenience array <END>
<BEG> mutator for the unit provider param provider the provider <END>
<BEG> accessor for the persistence unit non-jta data source <END>
<BEG> mutator for the unit non-jta data source param data the non-jta data source <END>
<BEG> accessor for the class names for this persistence unit <END>
<BEG> accessor for the current value allocate <END>
<BEG> non-javadoc see java sql blob # position java sql blob <SEG> long <END>
<BEG> add new option <END>
<BEG> return original argument <END>
<BEG> accessor for whether the jre be 1 5 or above <END>
<BEG> accessor for the minor version number of the jre <END>
<BEG> log an error message with throwable <END>
<BEG> message formatter with a series of argument pass in that will be embed in an internationalised message <END>
<BEG> message formatter with one argument pass in that will be embed in an internationalised message <END>
<BEG> check if the map contain the pass value <END>
<BEG> acquire a write lock <END>
<BEG> method to remove an object for the specify key <END>
<BEG> convert a byte [ ] into an instance of our value class <END>
<BEG> convert an instance of our value class into a byte [ ] <END>
<BEG> utility to convert a short into a byte-generated string param val the short return the string form of the byte <END>
<BEG> utility to convert a short into a 4-char hex string param val the short return the hex string form of the short <END>
<BEG> optional <END>
<BEG> setter for the connection type <END>
<BEG> setter for the time that the connection be create <END>
<BEG> setter for the time that the connection be last used <END>
<BEG> getter for the age of the connection <END>
<BEG> setter for the timestamp that this connection be check out <END>
<BEG> the maximum number of idle connection <END>
<BEG> since 3 5 2 <END>
<BEG> provides access to the class discover so far <END>
<BEG> sets an explicit classloader that should be use when scan for class <END>
<BEG> scans for class start at the package provide and descend into subpackages <END>
<BEG> set the offset variable string e g <END>
<BEG> executes a select statement that return multiple row <END>
<BEG> creates a logging version of a preparedstatement <END>
<BEG> get the wrapped result set <END>
<BEG> gets the type for a property getter <END>
<BEG> gets an array of the writable property for an object <END>
<BEG> check to see if a class have a readable property by name <END>
<BEG> since 3 5 1 <END>
<BEG> set a default { link typehandler } class for { link enum } <END>
<BEG> note : package perm to remove synthetic accessor <END>
<BEG> create and return an object cache use { link softreference } <END>
<BEG> run through all map and remove any reference that have be null 'd out by the gc <END>
<BEG> return the name of the field in the class <END>
<BEG> see databasefield # datatype <END>
<BEG> the name be historical <END>
<BEG> find and return the appropriate setter method for field <END>
<BEG> return whether the field be an id field <END>
<BEG> return the field associate with the foreign object or null if none <END>
<BEG> a call through to the { link dao # refresh object } <END>
<BEG> a call through to the { link dao # objectsequal object <SEG> object } <END>
<BEG> verifies that the ormlite-core and -android version file hold the same string <END>
<BEG> add order by clause to the sql query statement <END>
<BEG> add raw sql order by clause to the sql query statement <END>
<BEG> like { link # leftjoin querybuilder } but this combine the where statement of two query builder with a sql or <END>
<BEG> returns the next object in the table <END>
<BEG> update an object in the database <END>
<BEG> build and return a prepared update that can be use by { link dao # update preparedupdate } method <END>
<BEG> same a { link # escapevalue stringbuilder <SEG> string } but it will return the escaped string <END>
<BEG> same a { link # in string <SEG> object } except with a not in clause <END>
<BEG> add a ' & lt ; = ' clause so the column must be less-than or equals-to the value <END>
<BEG> add a ' & lt ; ' clause so the column must be less-than the value <END>
<BEG> or operation which take the previous clause and the next clause and or 's them together <END>
<BEG> this method need to be use carefully <END>
<BEG> return the array of field type associate with the object <END>
<BEG> issue the database statement to drop the table associate with a class <END>
<BEG> non-javadoc see bndtools editor model ibndmodel # getrunprogramargs <END>
<BEG> called when we 're do with a builder <END>
<BEG> calculate the generic signature of a constructor <END>
<BEG> maven deploy [ -url repo ] [ -passphrase passphrase ] [ -homedir homedir ] [ -keyname keyname ] bundle param args param i throw exception <END>
<BEG> a reference to a type from method or field <END>
<BEG> see org eclipse jface text itextstore # replace int <SEG> int <SEG> java lang string <END>
<BEG> returns the end index of the gap manage by this text store <END>
<BEG> see org eclipse jface text iregion # getoffset <END>
<BEG> see org eclipse jface text ilinetracker # getlinelength int <END>
<BEG> remove an event listener <END>
<BEG> called when the plugin be setup <END>
<BEG> handle the connection <END>
<BEG> cancel the forker <END>
<BEG> internal implies method <END>
<BEG> returns the canonical string representation of the { code configurationpermission } action <END>
<BEG> create a new { code acl } instance from this { code acl } with the give permission revoke from the give principal <END>
<BEG> give the canonical string representation of this acl <END>
<BEG> get the data associate with the alert item <END>
<BEG> returns a new permissioncollection object for store dmtpermission object <END>
<BEG> checks whether the give object be equal to this dmtprincipalpermission instance <END>
<BEG> returns a new { code permissioncollection } object suitable for store { code topicpermission } object <END>
<BEG> returns a new { code permissioncollection } object for store { code useradminpermission } object <END>
<BEG> see org osgi service wireadmin envelope # getidentification <END>
<BEG> returns the error of this { code measurement } object <END>
<BEG> returns a new { code measurement } object that be the product of this object multiply by the specify value <END>
<BEG> returns a { code string } object represent this { code measurement } object <END>
<BEG> returns a { code string } object represent this object <END>
<BEG> return whether the specified object be equal to this object <END>
<BEG> returns a new { code unit } that be the division of this { code unit } and the { code unit } specify param that the { code unit } that this { code unit } will be divide with return a new { code unit } that be the division of this { code unit } and the { code unit } specify throw runtimeexception if both { code unit } s be special see unit # isspecial <END>
<BEG> returns the longitude of this position in radian <END>
<BEG> determines the equality of two capabilitypermission object <END>
<BEG> returns the minor component of this version identifier <END>
<BEG> returns a { code versionrange } object hold the version range in the specify { code string } <END>
<BEG> constructs a condition that try to match the passed bundle 's location to the location pattern <END>
<BEG> default implementation of the { code bundletrackercustomizer modifiedbundle } method <END>
<BEG> open this { code servicetracker } and begin track service <END>
<BEG> return an array of { code servicereference } s for all service be track by this { code servicetracker } <END>
<BEG> return a { code sortedmap } of the { code servicereference } s and service object for all service be track by this { code servicetracker } <END>
<BEG> return a new array type <END>
<BEG> internal tostring behavior return the string representation of this version identifier <END>
<BEG> returns the filter string for this version range use the specify attribute name <END>
<BEG> get all cause of this exception <END>
<BEG> split the specified uri along the path separator ' ' character and return an array of uri segment <END>
<BEG> returns the canonical string representation of the action <SEG> separate by comma <END>
<BEG> returns a string describe this { code useradminpermission } object <END>
<BEG> finds a { code unit } base on a type <END>
<BEG> resolve this promise with the specify promise <END>
<BEG> returns the string encoding of this { code conditioninfo } in a form suitable for restore this { code conditioninfo } <END>
<BEG> find the text value <END>
<BEG>  see org javacc jjdoc generator # documentend <END>
<BEG>  see org javacc jjdoc generator # specialtokens java lang string <END>
<BEG>  see org javacc jjdoc generator # cppcode org javacc parser cppcodeproduction <END>
<BEG>  see org javacc jjdoc generator # expansionend org javacc parser expansion <SEG> boolean <END>
<BEG> find the node scope hook value <END>
<BEG> find the node factory value <END>
<BEG> find the visitor return type value return the requested visitor return type value <END>
<BEG> visits the node of the tree root at node in post-order <END>
<BEG> sets the number of lexical state <END>
<BEG> add <END>
<BEG> getter for the field { code state } <END>
<BEG> getaction <END>
<BEG> sets the large unicode value of the current input character set <END>
<BEG> returns the current number of character class <END>
<BEG> checks the invariant of this object <END>
<BEG> compares two intcharsets <END>
<BEG> report time statistic data <END>
<BEG> report generation progress <END>
<BEG> all part of jflex <SEG> that want to report error message should use this method for their output <END>
<BEG> determine if the give set be a subset of this set <END>
<BEG> iterator interface method for { link # hasmoreelements } <END>
<BEG> decodes a base64 encode byte array <END>
<BEG> empties the stack <END>
<BEG> pushes a new item onto the stack <END>
<BEG> substitutes each { code % s } in { code template } with an argument <END>
<BEG> returns a predicate that evaluate to { code true } if the object reference be test be not null <END>
<BEG> return true if this reference hold a null value <END>
<BEG> pretty print the give parse error show it location in the give input buffer <END>
<BEG> retrieves the innermost matcher that be not a proxymatcher <END>
<BEG> create a new recoveringparserunner instance with the give rule and input text and return the result of it { link # run string } method invocation <END>
<BEG> attaches the give log to this tracingparserunner instance <END>
<BEG> determines whether this instance contain the give character <END>
<BEG> returns a new characters object contain all the character of this instance minus all character of the give instance <END>
<BEG> creates a new characters instance contain only the give char <END>
<BEG> creates a new characters instance contain all character minus the give one <END>
<BEG> throws a grammarexception if the give condition be not meet <END>
<BEG> a predicate usable a a filter element of a { link org parboil parserunners tracingparserunner } <END>
<BEG> determines whether this range immediated follow the give other one <END>
<BEG> determines whether this range immediated follow or precede the give other one <END>
<BEG> return the string representation of the underlying stringbuilder <END>
<BEG> appends the give string <END>
<BEG> clears the content of the wrapped stringbuilder <END>
<BEG> returns the last child node of the give node or null if node be null or do not have any child <END>
<BEG> maps a name to a basefont parameter <END>
<BEG> returns the coordinate and type of the current path segment in the iteration <END>
<BEG> see graphics2d # drawrenderableimage renderableimage <SEG> affinetransform <END>
<BEG> see graphics2d # drawglyphvector glyphvector <SEG> float <SEG> float <END>
<BEG> see graphics2d # gettransform <END>
<BEG> see graphics # getcolor <END>
<BEG> see graphics # setclip int <SEG> int <SEG> int <SEG> int <END>
<BEG> see graphics # fillroundrect int <SEG> int <SEG> int <SEG> int <SEG> int <SEG> int <END>
<BEG> see graphics # drawpolygon int [ ] <SEG> int [ ] <SEG> int <END>
<BEG> sets the relative error parameter which will be use in float point number comparison <END>
<BEG> see com itextpdf text element # isnestable since itext 2 0 8 <END>
<BEG> return the combined color value <END>
<BEG> return the value for green <END>
<BEG> create a new section for this chapter and add it <END>
<BEG> gets the text displacement relative to the baseline <END>
<BEG> sets a goto for a remote destination for this < code > chunk < code > <END>
<BEG> sets a local destination for this < code > chunk < code > <END>
<BEG> gets the word spacing <END>
<BEG> opens the document <END>
<BEG> sets the page number to 0 <END>
<BEG> returns the bottom margin <END>
<BEG> returns the upper right y-coordinate <SEG> consider a give margin <END>
<BEG> adds a javascript onunload function to the html body tag param code the javascript code to be execute on unload of the html page <END>
<BEG> gets the javascript onunload command <END>
<BEG> set the margin mirroring <END>
<BEG> sets the page number <END>
<BEG> writes a number of tab <END>
<BEG> this implementation only return false and do n't do anything <END>
<BEG> sets the font factory implementation <END>
<BEG> gets a set of registered fontnames <END>
<BEG> walks through the hierarchy bottom-up look for a property key <END>
<BEG> getter for the font provider return provider since 5 0 6 rename from getfontimp <END>
<BEG> creates an itext paragraph object use the property of the different tag and property in the hierarchy chain <END>
<BEG> see com itextpdf text xml simpleparser simplexmldochandler # endelement java lang string <END>
<BEG> stacks the current paragraph <SEG> indicate that we 're start a new span <END>
<BEG> return the pendingtd since 5 0 6 <END>
<BEG> param pendingtd the pendingtd to set since 5 0 6 <END>
<BEG> see com itextpdf text doclistener # newpage <END>
<BEG> adds an extra style key-value pair to the style map of a specific tag param classname the name of the html xml tag param key the key specify a specific style param value the value define the style <END>
<BEG> sets the alternative information for the image <END>
<BEG> returns the absolute y position <END>
<BEG> gets the scaled height of the image <END>
<BEG> scale the image to an absolute height <END>
<BEG> sets the right indentation <END>
<BEG> sets the spacing before this image <END>
<BEG> sets the value of scaletofitheight param scaletofitheight true if you want the image to scale to the available height since itext 5 4 2 <END>
<BEG> sets the layer this image belong to <END>
<BEG> gets the dots-per-inch in the y direction <END>
<BEG> sets the x y pixel dimensionless aspect ratio <END>
<BEG> returns < code > true < code > if this < code > image < code > be a mask <END>
<BEG> getter for the unique hash <END>
<BEG> creates a { link randomaccesssource } base on a randomaccessfile <END>
<BEG> setter for the counter <END>
<BEG> see com itextpdf text log counter # write long <END>
<BEG> non-javadoc see com itextpdf text log logger # warn java lang string <END>
<BEG> processes the element by add it or the different part to an < code > elementlistener < code > <END>
<BEG> creates a < code > section < code > <SEG> add it to this < code > section < code > and return it <END>
<BEG> sets the bar multiplier for wide bar <END>
<BEG> gets the text font <END>
<BEG> sets the text baseline <END>
<BEG> sets the text alignment <END>
<BEG> sets the property to show the generated checksum in the the text <END>
<BEG> gets the property to show the start and stop character ' ' in the text for the barcode 39 <END>
<BEG> sets the amount of ink spread <END>
<BEG> sets the whitespace border around the barcode <END>
<BEG> places the barcode in a < code > pdfcontentbyte < code > <END>
<BEG> gets an < code > image < code > with the barcode <END>
<BEG> gets the width of a < code > string < code > in normalized 1000 unit <END>
<BEG> gets the ascent of a < code > string < code > in point <END>
<BEG> converts a < code > char < code > to a < code > byte < code > array accord to the font 's encoding <END>
<BEG> gets the full name of the font <END>
<BEG> enumerates the postscript font names present inside a true type collection <END>
<BEG> indicates if all the glyph and width for that particular encoding should be include in the document <END>
<BEG> very low-level access to decode ascii character in the form of a byte array <END>
<BEG> returns the value of a particular index of a give tag a a long <END>
<BEG> defines the sort order of the field ascend or descend <END>
<BEG> setter for the gap between the center of the dot of the dotted line <END>
<BEG> see com itextpdf text pdf draw drawinterface # draw com itextpdf text pdf pdfcontentbyte <SEG> float <SEG> float <SEG> float <SEG> float <SEG> float <END>
<BEG> see com itextpdf text element # process com itextpdf text elementlistener <END>
<BEG> called when the document be close <END>
<BEG> called when the end of a section be reach <END>
<BEG> add a page event to the forwarder <END>
<BEG> see com itextpdf text pdf pdfpcellevent # celllayout com itextpdf text pdf pdfpcell <SEG> com itextpdf text rectangle <SEG> com itextpdf text pdf pdfcontentbyte [ ] <END>
<BEG> writes the content to a stream <END>
<BEG> gets all the field <END>
<BEG> sets the field value a a string <END>
<BEG> sets all the field from this < code > acrofields < code > param af the < code > acrofields < code > <END>
<BEG> gets the pdf file name associate with the fdf <END>
<BEG> this will tell if this cmap have any two byte mapping <END>
<BEG> return number of item in array <END>
<BEG> add an exception to the tree <END>
<BEG> param word return a hyphenation object <END>
<BEG> checks if a character be vowel sign <END>
<BEG> < p > tests if some key map into the specify value in this hashtable <END>
<BEG> < p > returns < code > true < code > if this hashmap map one or more key to this value < p > < p > note that this method be identical in functionality to contains which predate the map interface < p > param value value whose presence in this hashmap be to be test <END>
<BEG> < p > tests if the specify int be a key in this hashtable < p > param key possible key <END>
<BEG> < p > returns the value to which the specify key be map in this map < p > param key a key in the hashtable <END>
<BEG> < p > removes the key and it correspond value from this hashtable < p > < p > this method do nothing if the key be not present in the hashtable < p > param key the key that need to be remove <END>
<BEG> sets the maximum allow size which can be occupy by a single decompressed pdf stream <END>
<BEG> sets the maximum allow size which can be occupy by all decompressed pdf stream <END>
<BEG> sets the maximum size which can be occupy by this output stream <END>
<BEG> getter for the horizontal scaling return the horizontal scaling since itext 5 0 1 <END>
<BEG> getter for the font return the font since itext 5 0 1 <END>
<BEG> getter for the render mode return the rendermode since itext 5 0 1 <END>
<BEG> setter for the line cap style <END>
<BEG> setter for the miter limit value <END>
<BEG> return the raw sample associate with this inline image <END>
<BEG> return the start point <END>
<BEG> see com itextpdf text pdf parser renderfilter # allowtext com itextpdf text pdf parser textrenderinfo <END>
<BEG> return current transformation matrix <END>
<BEG> gets the ascentline for the text i e <END>
<BEG> adds documentfields <END>
<BEG> param name param text param font param fontsize param llx param lly param urx param ury return a pdfformfield <END>
<BEG> param field param text param font param fontsize param llx param lly param urx param ury <END>
<BEG> param field param name param defaultvalue param llx param lly param urx param ury <END>
<BEG> adds an array of < code > int < code > value to end of the < code > pdfarray < code > <END>
<BEG> returns a < code > pdfobject < code > a a < code > pdfarray < code > <SEG> resolve indirect reference <END>
<BEG> return this pdfarray 's value a a double [ ] since 5 5 6 <END>
<BEG> checks if this < code > pdfchunk < code > be a tab chunk <END>
<BEG> checks if a < code > dictionary < code > be of the type page <END>
<BEG> creates a file specification with the file embed <END>
<BEG> always throw an error <END>
<BEG> gets the child layer <END>
<BEG> sets the initial visibility of the layer <END>
<BEG> sets the visibility expression for content belonging to this membership dictionary <END>
<BEG> returns the primitive < code > long < code > value of this object <END>
<BEG> set the page of the < code > pdfdestination < code > -object <END>
<BEG> sets the kid of this outline param kid <END>
<BEG> gets the title of this outline return the title a a string <END>
<BEG> called when a page be finish <SEG> just before be write to the document <END>
<BEG> sets the vertical interval of this pattern <END>
<BEG> returns the vertical interval when repeat the pattern <END>
<BEG> see com itextpdf text pdf pdfcontentbyte # setgraystroke float <END>
<BEG> see com itextpdf text pdf pdfcontentbyte # resetgraystroke <END>
<BEG> see com itextpdf text pdf pdfcontentbyte # setrgbcolorstrokef float <SEG> float <SEG> float <END>
<BEG> see com itextpdf text pdf pdfcontentbyte # setcmykcolorstrokef float <SEG> float <SEG> float <SEG> float <END>
<BEG> see com itextpdf text pdf pdfcontentbyte # setcolorfill com itextpdf text basecolor <END>
<BEG> see com itextpdf text pdf pdfcontentbyte # setcolorstroke com itextpdf text pdf pdfspotcolor <SEG> float <END>
<BEG> see com itextpdf text pdf pdfcontentbyte # setpatternstroke com itextpdf text pdf pdfpatternpainter <SEG> com itextpdf text basecolor <SEG> float <END>
<BEG> sets the horizontal alignment for the cell <END>
<BEG> return value of property paddingleft <END>
<BEG> set a fixed height for the cell <END>
<BEG> get the fixed height of the cell <END>
<BEG> tells you whether the cell have a minimum height <END>
<BEG> gets the columntext with the content of the cell <END>
<BEG> sets the columntext in the cell <END>
<BEG> sets the encryption option for this document <END>
<BEG> gets the raw length of the stream <END>
<BEG> sets the bound width of this template <END>
<BEG> gets the stream represent this template <END>
<BEG> sets bite i <END>
<BEG> sets a block of 32 bit <SEG> start at bit i <END>
<BEG> efficient method to check if a range of bit be set <SEG> or not set <END>
<BEG> reverses all bit in the array <END>
<BEG> < p > gets the requested bit <SEG> where true mean black < p > param x the horizontal component i e <END>
<BEG> < p > sets the give bit to true < p > param x the horizontal component i e <END>
<BEG> < p > flips the give bit < p > param x the horizontal component i e <END>
<BEG> a fast method to retrieve one row of data from the matrix a a bitarray <END>
<BEG> return the monomial represent coefficient x^degree <END>
<BEG> implements both addition and subtraction -- they be the same in gf 256 <END>
<BEG> return 2 to the power of a in gf 256 <END>
<BEG> return multiplicative inverse of a <END>
<BEG> exports the bookmark to xml <END>
<BEG> import the name from xml <END>
<BEG> generates the font dictionary <END>
<BEG> checks if a character exist in this font <END>
<BEG> adds a < code > chunk < code > to the current text array <END>
<BEG> gets the y coordinate where the next line will be write <END>
<BEG> gets the maximum number of available line <END>
<BEG> returns < code > true < code > if it be a xfa form <END>
<BEG> gets the class that contain the datasets process section of the xfa <END>
<BEG> sets the class that contain the classic field process <END>
<BEG> gets the field value or < code > null < code > if the field do not exist or have no value define <END>
<BEG> called when an end tag be find <END>
<BEG> disables the border on the specified side <END>
<BEG> sets the width of the right border param borderwidthright a width <END>
<BEG> sets the color of the top border <END>
<BEG> non-javadoc see com itextpdf text xml simpleparser newlinehandler # isnewlinetag java lang string <END>
<BEG> see com itextpdf text xml simpleparser simplexmldochandler # startelement java lang string <SEG> java util map <END>
<BEG> see com itextpdf text xml simpleparser simplexmldochandler # startdocument <END>
<BEG> adds a single author <END>
<BEG> adds the version <END>
<BEG> adds the meta data date <END>
<BEG> flushes and close the xmpwriter <END>
<BEG> see reader # read char [ ] <SEG> int <SEG> int <END>
<BEG> asserts that a property name be set <END>
<BEG> asserts that a specific language be set <END>
<BEG> see xmpdatetime # getmonth <END>
<BEG> see xmpiterator # skipsiblings <END>
<BEG> return returns the number of qualifier without neccessarily create a list <END>
<BEG> return returns whether the node have qualifier attach <END>
<BEG> return returns an iterator for the qualifier <END>
<BEG> see comparable # compareto object <END>
<BEG> creates an < code > xmpdatetime < code > -object from initial value <END>
<BEG> creates an < code > xmpdatetime < code > from an iso 8601 string <END>
<BEG> make sure a time be local <END>
<BEG> obtain version information <END>
<BEG> convert from string to boolean <END>
<BEG> this will set the image parameter <SEG> this be only valid for bi operator <END>
<BEG> set the value in the array a a name <END>
<BEG> this will set an item in the dictionary <END>
<BEG> set the date object <END>
<BEG> this be a convenience method that will get the dictionary object that be expect to be a cosobject <END>
<BEG> this will do a lookup into the dictionary <END>
<BEG> this will output this string a a pdf object <END>
<BEG> this will get the object that this object encapsulate <END>
<BEG> this will set the generation number <END>
<BEG> this will get the length of the line <END>
<BEG> sets the number of row to advance in the source for every pixel decode param ssy the y-axis subsampling value <END>
<BEG> when decode an image <SEG> the vertical offset for subsampling return the y-axis subsampling offset <END>
<BEG> sets the vertical subsampling offset for decode image param ssoffsety the y-axis subsampling offset <END>
<BEG> this will write an eol to the stream <END>
<BEG> this will write the pdf document <END>
<BEG> this will get the object <END>
<BEG> returns the c1 value of the function <SEG> 1 if empty <END>
<BEG> returns all bound value a cosarray <END>
<BEG> adds a bool value <END>
<BEG> sets the numbering style for this page range <END>
<BEG> sets the start value for page numbering in this page range <END>
<BEG> sets the page label prefix for this page range <END>
<BEG> this will set the minimum value for the range <END>
<BEG> creates a string representation of a float array <END>
<BEG> removes a user property <END>
<BEG> sets the number of row in the enclosing table that shall be span by the cell rowspan <END>
<BEG> sets the summary of the table ’ s purpose and structure <END>
<BEG> sets the colour for the before edge <END>
<BEG> sets the scope scope <END>
<BEG> this will return the crypt filter method <END>
<BEG> adds a new recipient to the recipient list <END>
<BEG> set the x509 certificate of the recipient <END>
<BEG> this will encrypt and write the data <END>
<BEG> return true if the give { code codepoint } be a prohibited character a define by < a href= http : tool ietf org html rfc4013 # section-2 3 > rfc 4013 <SEG> section 2 3 < a > <END>
<BEG> set whether aes encryption be prefer when several encryption method be available for the chosen key length <END>
<BEG> this will get the x height for the font <END>
<BEG> this will return the whitepoint tristimulus <END>
<BEG> this will get the valid range for the b component <END>
<BEG> returns the base state for optional content group <END>
<BEG> this will set the external graphic state for this pattern <END>
<BEG> returns the dash array <END>
<BEG> this will set the type of pdf object that the action dictionary describes <END>
<BEG> this will set the type of action that the action dictionary describes <END>
<BEG> this will set the next action <SEG> or sequence of action <SEG> to be perform after this one <END>
<BEG> this will set the destination to jump to <END>
<BEG> this will set the file in which the destination be locate <END>
<BEG> this will set the name of the action to be perform <END>
<BEG> set the f action <END>
<BEG> this will set an action to be perform when the cursor enter the annotation 's active area <END>
<BEG> this will set an action to be perform when the page contain the annotation be open <END>
<BEG> this will set an action to be perform when the page contain the annotation become visible in the viewer application 's user interface <END>
<BEG> this will set an action to be perform when the page contain the annotation be no longer visible in the viewer application 's user interface <END>
<BEG> this will set a javascript action to be perform before the field be format to display it current value <END>
<BEG> this will set a javascript action to be perform when the field 's value be change <END>
<BEG> this will set a javascript action to be perform in order to recalculate the value of this field when that of another field change <END>
<BEG> sets the name of the file a find in the embeddedfiles name tree <END>
<BEG> this will set the base uri to be use in resolve relative uri reference <END>
<BEG> set the dir to launch from <END>
<BEG> this will retrieve the sub type and hence appearance <SEG> ap take precedence for this annotation <END>
<BEG> this will set the down appearance when there be down appearance to be show <END>
<BEG> this will retrieve the border effect <SEG> see the style_ constant for valid value <END>
<BEG> the build date of the software module <END>
<BEG> a text string indicate the version of the application implementation <SEG> a describe by the < code > name < code > attribute in this dictionary <END>
<BEG> the software module revision number <SEG> correspond to the date attribute <END>
<BEG> the software module revision number <SEG> use to determinate the minimum version of software that be require in order to process this signature <END>
<BEG> a flag that can be use by the signature handler or software module to indicate that this signature be create with unrelease software <END>
<BEG> indicates the operating system <END>
<BEG> if true <SEG> the application be in trusted mode when sign take place <END>
<BEG> set true if the subfilter shall be require <END>
<BEG> < p > optional ; pdf 1 6 a dictionary contain a single entry whose key be p and whose value be an integer between 0 and 3 <END>
<BEG> optional a certificate seed value dictionary contain information about the certificate to be use when sign <END>
<BEG> < p > optional ; pdf 1 6 a time stamp dictionary contain two entry <END>
<BEG> optional <SEG> pdf 1 6 an array of text string that specify possible legal attestation <END>
<BEG> convert this standard java object to a cos dictionary <END>
<BEG> returns the name of the person or authority sign the document <END>
<BEG> get the bottom y coordinate <END>
<BEG> set the bottom y-coordinate <SEG> a value of -1 implies that the current y-coordinate will be use <END>
<BEG> adds the give node to the top of the child list <END>
<BEG> return the first child or null if there be no child <END>
<BEG> this will return the label for the unit <END>
<BEG> this will set the value indication if the denominator of the fractional value be reduce truncated <END>
<BEG> this will set the text to be use between order of thousand in display of numerical value <END>
<BEG> this will set the text to be use a the decimal point in display numerical value <END>
<BEG> this will set the text to be concatenate to the left of the label specify by u <END>
<BEG> this will set the text to be concatenate after the label specify by u <END>
<BEG> this will set the value indicate the ordering of the label specify by u to the calculated unit value <END>
<BEG> this will return the change along the y-axis <END>
<BEG> set the thread info <SEG> can be null <END>
<BEG> return the direction in which the specify transition effect shall move <END>
<BEG> set the toolbar preference <END>
<BEG> set the window ui preference <END>
<BEG> set the center window preference <END>
<BEG> set the non full screen page mode preference <END>
<BEG> set the viewarea preference <END>
<BEG> this will set the creation date of the document <END>
<BEG> returns an awt paint for the give pdcolor <END>
<BEG> return the rendering hint <END>
<BEG> returns the y magnitude <END>
<BEG>  < p > { link w3crdfsyntax } always defines file extension in low case <SEG> so { link string # tolowercase locale } need not be call <END>
<BEG> static initializer <END>
<BEG> compares two instance of value of the give datatype <END>
<BEG> parse a lexical form of this datatype to a value throw datatypeformatexception if the lexical form be not legal <END>
<BEG> normalization <END>
<BEG> parse a validated date <END>
<BEG> convert a value of this datatype out to lexical form <END>
<BEG> test whether the give object be a legal value form of this datatype <END>
<BEG> returns an enumeration of the sax feature <END>
<BEG> reset the state of this object <END>
<BEG> get all built-in simple type <SEG> which be store in a hashtable key by the name return a hashtable which contain all built-in simple type <END>
<BEG> parses <SEG> validates and computes normalized version of gmonth object param str the lexical representation of gmonth object -- mm with possible time zone z or - <SEG> + hh : mm return normalize date representation exception schemadatetimeexception invalid lexical representation <END>
<BEG> turns check for unparsed entity error on and off <END>
<BEG> return -1 if < var > str < var > do not contain this pattern <END>
<BEG> return an end position in the target text match to specify regular expression group <END>
<BEG> checks if the < code > genericstring < code > < code > item < code > be a member of this list <END>
<BEG> adds this duration to a { link date } object <END>
<BEG> set the query string for this uri <END>
<BEG> check to see if a string be a valid nmtoken accord to [ 7 ] in the xml 1 1 recommendation param nmtoken string to check return true if nmtoken be a valid nmtoken <END>
<BEG> returns the low surrogate of a supplemental character param c the supplemental character to split <END>
<BEG> returns whether the give character be a low surrogate param c the character to check <END>
<BEG> returns true if the specified character can be consider markup <END>
<BEG> returns true if the specified character be a valid name start character a define by production [ 5 ] in the xml 1 0 specification <END>
<BEG> returns true if the specified character be a valid name character a define by production [ 4 ] in the xml 1 0 specification <END>
<BEG> check to see if a string be a valid ncname accord to [ 4 ] from the xml namespaces 1 0 recommendation param ncname string to check return true if name be a valid ncname <END>
<BEG> answer the graph of all triple remove <END>
<BEG> answer the right second operand of this dyadic <END>
<BEG> < p > add the give graph to this composition <END>
<BEG> < p > answer the distinguish graph for the composition <SEG> which will be the graph that receive triple add and deletes <END>
<BEG> tell the event manager that the triple < code > t < code > have be delete from the graph <END>
<BEG> execute the runnable < code > action < code > within a transaction <END>
<BEG> make a blank node with the specify label deprecate use { link # createblanknode string } <END>
<BEG> make a uri node with the specify uriref string <END>
<BEG> create a node base on the value if the value be a string we assume this be intend to be a lexical form after all <END>
<BEG> clear this graphmem <SEG> ie remove all it triple delegate to the store <END>
<BEG> override this to listen to all incoming remove statement <END>
<BEG> method to over-ride to define what continue the boundary search ; default definition be ! stopat s <END>
<BEG> see org apache jena rdfxml xmlinput aliteral # getdatatypeuri <END>
<BEG> non-javadoc see org xml sax ext lexicalhandler # enddtd <END>
<BEG> non-javadoc see org xml sax ext lexicalhandler # startentity java lang string <END>
<BEG> non-javadoc see org xml sax ext lexicalhandler # comment char [ ] <SEG> int <SEG> int <END>
<BEG> the set of < code > b < code > such that < code > a < code > be relate to < code > b < code > <END>
<BEG> cause the inference graph to reconsult the underlie graph to take into account change <END>
<BEG> reset any internal cache <END>
<BEG> returns a derivation graph <END>
<BEG> switch on off drivation logging <END>
<BEG> return the single global instance of the registry <END>
<BEG> return a prebuilt simplify configuration for the default rdfs reasoner <END>
<BEG> prebuilt mini configuration for the default owl reasoner <END>
<BEG> removes the triple t if possible from the set belonging to this graph <END>
<BEG> set to true to enable derivation cache <END>
<BEG> precompute the implication of a schema model <END>
<BEG> this method be invoke when the builtin be call in a rule head <END>
<BEG> attach the reasoner to a set of rdf data to process <END>
<BEG> set a configuration parameter for the reasoner <END>
<BEG> return a description of the capability of this reasoner encode in rdf <END>
<BEG> see org apache jena reasoner rulesys rulecontext # find org apache jena graph node <SEG> org apache jena graph node <SEG> org apache jena graph node <END>
<BEG> remove a triple from the deduction graph and the original graph if relevant <END>
<BEG> printable form <END>
<BEG> link this frame to an exist frame <END>
<BEG> set the continuation point for this frame <END>
<BEG> assert a new triple in the deduction graph <SEG> trigger any consequent processing a appropriate <END>
<BEG> test that two node be semantically equivalent <END>
<BEG> determine whether the give property be recognize and treat specially by this reasoner <END>
<BEG> accessor use during infgraph construction - return the cached version of the subclass lattice <END>
<BEG> answer the character that could not be encode <END>
<BEG> set the triple serializer replacement function <END>
<BEG> return the current triple serializer replacement function <END>
<BEG> answer a new set which use haashing for lookup <END>
<BEG> compute the difference between the current monitor graph and the last snapshot <END>
<BEG> return a simplified print string for an rdfnode <END>
<BEG> localname <SEG> accord to xml qname rule <END>
<BEG> if the last { link graphpattern } add to the group be not a { link simplebasicgraphpattern } <SEG> then create one contain the specify { link triplepattern } s and add it to the group <END>
<BEG> return the wrapped variable if it be a variable <SEG> null otherwise <END>
<BEG> return true if it be a { link variable } <SEG> false if it be a { link rdfterm } <END>
<BEG> -- -- -- -- - methods -- -- -- -- - <END>
<BEG> returns the result of { link # getshortvalue literal <SEG> short getshortvalue literal value <SEG> fallback } in case the supply value be a literal <SEG> return the fallback value otherwise <END>
<BEG> set the string value a value of the key <END>
<BEG> test if the specify key exists <END>
<BEG> set the the respective key to the respective value <END>
<BEG> incrby work just like { link # incr byte [ ] incr } but instead to increment by 1 the increment be integer <END>
<BEG> atomically return and remove the first lpop or last rpop element of the list <END>
<BEG> remove the specified member from the set value store at key <END>
<BEG> return the member of a set result from the union of all the set hold at the specified key <END>
<BEG> this command work exactly like { link # sunion byte [ ] sunion } but instead of be return the resulting set be store a dstkey <END>
<BEG> return the rank or index or member in the sorted set at key <SEG> with score be order from high to low <END>
<BEG> creates a union or intersection of n sort set give by key k1 through kn <SEG> and store it at dstkey <END>
<BEG> alter the configuration of a run redis server <END>
<BEG> set a timeout on the specify key <END>
<BEG> set the specified expire time <SEG> in millisecond <END>
<BEG> only set the key if it already exist <END>
<BEG> see < a href= http : redis io command scan # the-count-option > count option in redis documentation < a > param count return <END>
<BEG> synchronize pipeline by read all response <END>
<BEG> get the sorting in ascending order <END>
<BEG> hashes the byte in a buffer from the current position to the limit <END>
<BEG> create a crc16 checksum from the byte <END>
<BEG> select all know cluster node <END>
<BEG> create a copy of { literal option } <END>
<BEG> event callback if a command receive a { literal moved } redirection <END>
<BEG> flag <SEG> whether regular cluster topology update be update <END>
<BEG> returns the cluster topology view after the topology change <END>
<BEG> retrieve a { link redisclusternode } by it node id <END>
<BEG> returns the result of the last { link redisfuture } and guarantee that all future be finish <END>
<BEG> sort partition by latency <END>
<BEG> return geohash if request otherwise { literal null } <END>
<BEG> checks if a charsequence be not empty and not null <END>
<BEG> return the count or { literal -1 } if unlimited <END>
<BEG> lookup a { link redisnodedescription } by { code host } and { code port } <END>
<BEG> return always { link com lambdaworks redis model role redisinstance role # sentinel } <END>
<BEG> return the replication offset <END>
<BEG> get the command output <END>
<BEG> set command output to an error message from the client <END>
<BEG> create a redis uri from an uri string <END>
<BEG> set ttl in { code millisecond } after restore the key <END>
<BEG> sequentially iterate over element in a set identify by { code key } <END>
<BEG> create a copy of { literal option } param option the original return a new instance of { link socketoptions } contain the value of { literal option } <END>
<BEG> returns the connection timeout <END>
<BEG> returns whether to use tcp nodelay <END>
<BEG> period between the regular cluster topology update <END>
<BEG> parse the output of the redis cluster slots command and convert it to a list of { link io lettuce core cluster model slot clusterslotrange } param clusterslotsoutput output of cluster slots command return list & gt ; clusterslotrange & gt ; <END>
<BEG> param annotationclass the annotation class <END>
<BEG> invoke a { link method } with it { code args } <END>
<BEG> creates a { link typeinformation } from the give method 's parameter type <END>
<BEG> return the index of the method constructor parameter <END>
<BEG> decrease this parameter 's nesting level <END>
<BEG> return the nested type of the method constructor parameter <END>
<BEG> return the annotation associate with the specific method constructor parameter <END>
<BEG> return the name of the method constructor parameter <END>
<BEG> a template method to post-process a give annotation array before return it to the caller <END>
<BEG> attempt to find a { link method } on the supplied class with the supply name and parameter type <END>
<BEG> handle the give reflection exception <END>
<BEG> handle the give invocation target exception <END>
<BEG> convenience method to return this type a a resolvable { link map } type <END>
<BEG> return a { link resolvabletype } for the specify { link class } with pre-declared generic <END>
<BEG> return a { link resolvabletype } for the specify { link method } return type <END>
<BEG> return a { link resolvabletype } for the specify { link methodparameter } with a give implementation type <END>
<BEG> return a { link serializable } variant of { link methodparameter # getgenericparametertype } <END>
<BEG> create a { link rediscommandtimeoutexception } with a detail message give the message and timeout <END>
<BEG> creates a { link keyvalue } from a { code key } and { code value } <END>
<BEG> sequentially iterate over key in the keyspace <END>
<BEG> returns whether object acquire from the pool will be validate before be return from the acquire method <END>
<BEG> returns in condition for property by < code > name < code > and allow set of < code > value < code > param name - name of property param value - collection of allow value return condition <END>
<BEG> returns less than condition which restrict property by < code > name < code > to define < code > value < code > param name - name of property param value - defined value return condition <END>
<BEG> returns less than on equal condition which restrict property by < code > name < code > to define < code > value < code > param name - name of property param value - defined value return condition <END>
<BEG> defines max idle time in millisecond of each map entry in local cache <END>
<BEG> highest stream id of pending message return number <END>
<BEG> returns current rate value set through { link rratelimiter # trysetrate ratetype <SEG> long <SEG> long <SEG> rateintervalunit } or { link rratelimiter # trysetrateasync ratetype <SEG> long <SEG> long <SEG> rateintervalunit } method <END>
<BEG> creates a new instance of remoteinvocationoptions with opinionated default <END>
<BEG> defines execution timeout param executiontimeoutinmillis - timeout in millisecond return remoteinvocationoptions object <END>
<BEG> returns last stream entry return stream entry <END>
<BEG> returns second part of id return second part of id <END>
<BEG> defines timeout for redis response <END>
<BEG> computes the hash value after all byte be process <END>
<BEG> encodes a raw byte array into a base64 < code > string < code > representation i accordance with rfc 2045 <END>
<BEG> decodes a base64 encode < code > string < code > <END>
<BEG> returns all annotation of a class <SEG> also the annotation of the super class <SEG> implement interface and the annotation that be present in stereotype annotation <END>
<BEG> returns the primitive class of the give wrapper class or null <END>
<BEG> tries to resolve the type variable against the concrete class <END>
<BEG> returns the method object find for the give method name in the give class <END>
<BEG> retrieves the setter method of the give class for the specified field name <END>
<BEG> since 1 1 1 <END>
<BEG> method for find all static method of the main type except for one possibly filter out by filter and apply annotation override <SEG> if any <SEG> to annotation <END>
<BEG> method for resolve individual field completely <END>
<BEG> to avoid infinite loop <SEG> will return empty list <END>
<BEG> returns true if the bean define a property with the give name <END>
<BEG> remove the last property expresson from the current expression <END>
<BEG> performs introspection <END>
<BEG> does the specify map property contain a value for the specify key value ? <END>
<BEG> return the < code > dynaclass < code > instance that describe the set of property available for this dynabean <END>
<BEG> < p > return an array of < code > properydescriptors < code > for the property currently define in this dynaclass <END>
<BEG> add a new dynamic property with the specify data type <SEG> but with no restriction on readability or writeability <END>
<BEG> remove the specified dynamic property <SEG> and any associate data type <SEG> readability <SEG> and writeability <SEG> from this dynamic class <END>
<BEG> sets the method that should be use to read one of the property value <END>
<BEG> returns a new property invoker <END>
<BEG> starting point of the fluent interface for invoke static method via reflection <END>
<BEG> starting point of the fluent interface for invoke constructor via reflection <END>
<BEG> specifies the parameter type of the static method to invoke <END>
<BEG> obtains the target of the give < code > { link throwable } < code > <END>
<BEG> returns the exact parameter type of the give method in the give type <END>
<BEG> creates a wildcard type with a low bound <END>
<BEG> method to access reflection on object <END>
<BEG> tells if the current jvm be run java 11 or above return if the current jvm be java 11 or above <END>
<BEG> override this if you want something other than jsr 330 's named annotation <END>
<BEG> repeat id <END>
<BEG> searches through a target for a matching substring <SEG> start from just after the end of last match <END>
<BEG> deprecate is meaningless with regard to variable path since v 1 2 <END>
<BEG> < p > configures the client to disable chunked encode for all request < p > < p > the default behavior be to enable chunked encode automatically for putobjectrequest and uploadpartrequest <END>
<BEG> return the current setting for accelerate mode configure in the builder <END>
<BEG> sets the name of the bucket contain the multipart upload to abort <END>
<BEG> sets the optional access control list for the new object <END>
<BEG> gets the list of { link grant } object in this access control list acl <END>
<BEG> sets the override value for the owner of the replica object <END>
<BEG> returns a string representation of this object ; useful for test and debug <END>
<BEG> sets the { link analyticsfilterpredicate } to be use when evaluate an analytics filter <END>
<BEG> sets the account id that own the destination bucket <END>
<BEG> sets the amazon resource name arn of the bucket to which data be export <END>
<BEG> sets the container use to describe how data relate to the storage class analysis should be export <END>
<BEG> returns the version of the output schema to use when export data <END>
<BEG> sets the place to store the data for an analysis <END>
<BEG> sets the rule that comprise this configuration <END>
<BEG> sets the rule that comprise this configuration and return a reference to this object for easy method chain <END>
<BEG> convenience array style method for { link bucketlifecycleconfiguration # withrules list } <END>
<BEG> sets the destination bucket name for this logging configuration <END>
<BEG> sets the document to serve when a directory be specify ex : index html <END>
<BEG> < p > returns the unique identifier for this grantee <END>
<BEG> sets the url identify the new multipart object <END>
<BEG> sets the entity tag identify the new object <END>
<BEG> sets the date the newly copy object be last modified <END>
<BEG> sets the id of the exist <SEG> initiated multipart upload with which this new part will be associate <END>
<BEG> returns the allowed method of this rule <END>
<BEG> sets the allowed origin of the rule <END>
<BEG> convenience array style method for { link # setallowedorigins list } <END>
<BEG> returns the allowed origin of this rule and return a reference to this object for method chaining <END>
<BEG> returns expose header of this rule and return a reference to this object for method chaining <END>
<BEG> sets the first line of input <END>
<BEG> return character use to indicate a row should be ignore when present at the start of a row <END>
<BEG> sets the character use to indicate a row should be ignore when present at the start of a row <END>
<BEG> return character use for escape the quote character inside an already escape value <END>
<BEG> sets the character use for escape the quote character inside an already escape value <END>
<BEG> return the value use to separate individual field in a record <END>
<BEG> return the value use for escape where the field delimiter be part of the value <END>
<BEG> sets the value use to allow quote record delimiters to occur within the input <END>
<BEG> the number of year that you want to specify for the default retention period <END>
<BEG> the name of the bucket for which to delete the encryption configuration <END>
<BEG> sets the name of the bucket from which the metric configuration be delete and return this object for method chaining <END>
<BEG> set version of the object whose tages be to be delete <END>
<BEG> sets the id of the kms key use to encrypt the replica object param replicakmskeyid new kms key id <END>
<BEG> sets the key of the object involve in this request <SEG> and return this request object to enable additional method call to be chain together <END>
<BEG> sets the name of the target bucket <SEG> and return this updated request object so that additional method call can be chain together <END>
<BEG> sets the identifier use to represent an analytics configuration and return this object for method chaining <END>
<BEG> sets the name of the bucket contain the inventory configuration to retrieve and return { link getbucketinventoryconfigurationrequest } object for method chaining <END>
<BEG> sets the name of the amazon s3 bucket whose policy be be retrieve <SEG> and return the updated request object so that additional method call can be chain together <END>
<BEG> the public-policy status for this bucket <END>
<BEG> the s3 bucket <END>
<BEG> < p > sets the optional part number to find the number of part of an object <END>
<BEG> set object version <END>
<BEG> set the tag set <END>
<BEG> sets glacier retrieval tier at which the restore will be process <END>
<BEG> date when multipart upload will become eligible for abort operation by lifecycle <END>
<BEG> id of the lifecycle rule that make a multipart upload eligible for abort operation <END>
<BEG> sets the serialization of a csv-encoded object <END>
<BEG> sets the { link inventorydestination } that contain information about where to publish the inventory result <END>
<BEG> sets the inventoryfilter use to describe a set of object to include in inventory result <END>
<BEG> sets which object version s to include in the inventory result <END>
<BEG> sets the optional field that be include in the inventory result <END>
<BEG> sets the schedule for generate inventory result <END>
<BEG> sets the { link inventorys3bucketdestination } which contain s3 bucket destination information of where inventory result be publish <END>
<BEG> set the type of encryption to use to protect the inventory content <END>
<BEG> sets the kms key id to use to encrypt the inventory content <END>
<BEG> returns the arn of the cloud function to be invoke <END>
<BEG> sets the { link lifecyclefilterpredicate } to be apply to { link bucketlifecycleconfiguration rule } <END>
<BEG> sets the list of analytics configuration for a bucket <END>
<BEG> gets the optional nextcontinuationtoken <END>
<BEG> sets the list of metric configuration <END>
<BEG> sets the optional upload id marker indicate where in the result to begin list <END>
<BEG> sets the optional delimiter parameter that cause multipart uploads for key that contain the same string between the prefix and the first occurrence of the delimiter to be combine into a single result element in the { link multipartuploadlisting # getcommonprefixes } list <END>
<BEG> sets the optional < code > maxkeys < code > parameter indicate the maximum number of key to include in the response <END>
<BEG> sets the optional maximum number of part to be return in the part listing <END>
<BEG> sets the optional part number marker indicate where in the result to be listing part <END>
<BEG> sets the next key marker that should be use in the next request to get the next page of result <END>
<BEG> sets the next upload id marker that should be use in the next request to get the next page of result <END>
<BEG> sets the optional maximum number of uploads to be list <SEG> a specify in the original request <END>
<BEG> gets the marker parameter originally use to request this object listing <SEG> or < code > null < code > if no marker be specify <END>
<BEG> < p > sets the custom user-metadata for the associated object <END>
<BEG> < p > sets the optional content-encoding http header specify what content encoding have be apply to the object and what decode mechanism must be apply in order to obtain the media-type reference by the content-type field <END>
<BEG> < p > sets the optional cache-control http header which allow the user to specify cache behavior along the http request reply chain <END>
<BEG> return the storage class of the object <END>
<BEG> < p > sets the display name of the owner <END>
<BEG> sets the part number of the associated part <SEG> and return this updated partetag object so that additional method call can be chain together <END>
<BEG> sets the user who initiate the associated multipart upload <END>
<BEG> sets the optional part number marker specify in the original request to specify where in the result to begin list part <END>
<BEG> sets the next part number marker <END>
<BEG> sets the list of part describe in this part listing <END>
<BEG> sets the base64-encoded md5 hash of the object content that be calculate on the client-side <END>
<BEG> set the protocol to use in the redirect request <END>
<BEG> sets the { link replicationfilterpredicate } to be apply to { link replicationrule } <END>
<BEG> sets the storage class for the replication destination <END>
<BEG> sets the amazon s3 object prefix for the replication rule <END>
<BEG> sets the { link replicationfilter } that be use to identify object that a crr rule applies to <END>
<BEG> set a container specify the time by which replication should complete for all object and operation on object <END>
<BEG> set the time in minute <END>
<BEG> sets the content type response header override <END>
<BEG> returns the content language response header override if it have be specify <SEG> or null otherwise <END>
<BEG> sets the expires response header override <END>
<BEG> sets the cache control response header <END>
<BEG> return the condition that must be meet for the specified redirect to apply <END>
<BEG> return the redirect information <END>
<BEG> sets the name of the bucket where the restore result will be place <END>
<BEG> sets the prefix that be prepended to the restore result for this request <END>
<BEG> sets the canned acl to apply to the restore result <END>
<BEG> sets the metadata to store with the restore result in s3 <END>
<BEG> sets the class of storage use to store the restore result <END>
<BEG> sets the version id which uniquely identify this version of an object <END>
<BEG> sets the type of the provided expression e g <SEG> sql <END>
<BEG> sets the expression that be use to query the object <END>
<BEG> sets how the result of the select job be serialize <END>
<BEG> sets the kms master key id to use for the default encryption <END>
<BEG> sets the list of sse configuration rule <END>
<BEG> sets the default server-side encryption to apply to new object in the bucket <END>
<BEG> sets the { link analyticsconfiguration } object <END>
<BEG> returns the inventory configuration <END>
<BEG> sets the name of the bucket for which the metric configuration be set and return { link setbucketmetricsconfigurationrequest } object for method chaining <END>
<BEG> sets the name of the bucket whose tag configuration be be set <SEG> and return this object so that additional method call may be chain together <END>
<BEG> sets the name of the bucket whose website configuration be be set and return this update request object so that additional method call can be chain together <END>
<BEG> < p > sets the value of the tag for a give key <END>
<BEG> returns the topic arn for this notification configuration <END>
<BEG> sets the topic arn for this configuration param topicarn arn for the sns topic <END>
<BEG> converts the selectobjectcontentrequest to an xml fragment that can be send to the selectobjectcontent operation of amazon s3 <END>
<BEG> returns an identifier which identify the upload part by it part number and the entity tag compute from the part 's data <END>
<BEG> returns true if the transfer be cancel else false <END>
<BEG> resets the input stream to the beginning by point the buffer offset to the beginning of the available data buffer <END>
<BEG> return an < b > immutable < b > map contain the user metadata associate with this object <SEG> with case-sensitive name string a key <END>
<BEG> param name the metadata item name <SEG> case-insensitive <END>
<BEG> add a metadata entry with the give name <END>
<BEG> return the { link storagebucket } s that have be create since the last progress event be fire <END>
<BEG> return the common prefix in this chunk <END>
<BEG> a convenience method to check whether a listing of object be complete true or there be more object available false <END>
<BEG> get facebook response header field < code > x-fb-rev < code > return the facebook response header field < code > x-fb-rev < code > <END>
<BEG> get facebook response header field < code > x-app-usage < code > return the facebook response header field x-app-usage <END>
<BEG> gets the facebook api error subcode <END>
<BEG> gets the facebook api error user message <END>
<BEG> parses the give input string a json <END>
<BEG> appends the specified json value to the end of this array <END>
<BEG> replaces the element at the specified position in this array with the specify json value <END>
<BEG> sets the value of the member with the specify name to the specify json value <END>
<BEG> removes a member with the specify name from this object <END>
<BEG> copies all member of the specified object into this object <END>
<BEG> returns this json value a string <SEG> assume that this value represent a json string <END>
<BEG> returns this json value a a < code > boolean < code > value <SEG> assume that this value be either < code > true < code > or < code > false < code > <END>
<BEG> writes the json representation of this value to the give writer use the give formatting <END>
<BEG> do not break line <SEG> but still insert whitespace between value <END>
<BEG> convert jsonvalue to a integer param json return <END>
<BEG> return the branded content sponsor relationship option <END>
<BEG> return title of the link show in the attachment <END>
<BEG> return the spec for a photo page post <END>
<BEG> client 's postal code <END>
<BEG> client 's province <END>
<BEG> second line of client 's street address <END>
<BEG> return the effective status of this campaign <END>
<BEG> return the destination of the follow up action text on the final screen of the form <END>
<BEG> the number of photo in this album <END>
<BEG> app type <END>
<BEG> indicates whether the app use fluid or fix width value for canvas <END>
<BEG> id of the app in the iphone app store <END>
<BEG> the url of the app 's logo <END>
<BEG> the number of monthly active user the app have <END>
<BEG> ranking of this app vs other apps compare monthly active user <END>
<BEG> demographic restriction for the app <END>
<BEG> the secure url from which page tab app content be load <END>
<BEG> when non-zero <SEG> the cover photo overflow vertically <END>
<BEG> the offset <SEG> within the message field <SEG> of the object mention <END>
<BEG> remove a new child from the child list param child the child that be remove return true if remove the child work <END>
<BEG> return if the user have like the object return if the user have like the object <END>
<BEG> biography of the band <END>
<BEG> birthday of this person <END>
<BEG> culinary team of the business <END>
<BEG> this brand 's global parent page <END>
<BEG> personal interest <END>
<BEG> mpg of the vehicle <END>
<BEG> the season information of the tv show <END>
<BEG> unseen message count for the page <END>
<BEG> when the page be found <END>
<BEG> parking information <END>
<BEG> booking agent of the band <END>
<BEG> app that store the destination info on iphone <END>
<BEG> destination url for the call-to-action on iphone <END>
<BEG> time the rating take place return time the rating take place <END>
<BEG> post-json-mapping operation that populate the { code messagetags } field by hand <END>
<BEG> the number of like on this post <END>
<BEG> the number of comment of this post <END>
<BEG> the privacy setting for this post <END>
<BEG> timeline visibility information of the post <END>
<BEG> whether this post can be promote in instagram <END>
<BEG> picture width in pixel return picture width in pixel <END>
<BEG> payment option accept by the place <END>
<BEG> the restaurant 's specialty <END>
<BEG> the amount of message that be unseen by the session profile <END>
<BEG> timestamp for departure time <END>
<BEG> returns whether the message contain a nlp result <END>
<BEG> convenience method to check if the attachment type be fallback return { code true } if fallback <SEG> { code false } if not fallback <END>
<BEG> for a give { code field } <SEG> get it second parameterized type argument <END>
<BEG> creates a new instance of the give { code type } <END>
<BEG> checks if the give string be equal to the string with the content { code false } param jsonstring the json to check <END>
<BEG> checks if the give string start with a < code > { < code > character <SEG> so it may be a jsonobject param jsonstring the json to check <END>
<BEG> is the give json equivalent to the empty object < code > { } < code > ? <END>
<BEG> for the give { code url } <SEG> extract a mapping of query string parameter name to value <END>
<BEG> returns the response body a twitter4j jsonarray < br > disconnects the internal httpurlconnection silently <END>
<BEG> return the response associate with the event return the response associate with the event <END>
<BEG> static factory method for twitter-text-java return url entity since twitter4j 2 2 6 <END>
<BEG> returns the value map by { code name } if it exist and be a double or can be coerce to a double <SEG> or { code fallback } otherwise <END>
<BEG> returns the value map by { code name } if it exist and be a { code jsonarray } <SEG> or null otherwise <END>
<BEG> returns an iterator of the { code string } name in this object <END>
<BEG> param possiblysensitive possibly sensitive since twitter4j 2 2 5 <END>
<BEG> tests if the exception be cause by non-existing resource return if the exception be cause by non-existing resource since twitter4j 2 1 2 <END>
<BEG> unless you know what you be do <SEG> you will never need this <END>
<BEG> after a successful connect <SEG> one have to authenticate oneself <END>
<BEG> initialise a des cipher <END>
<BEG> parses the give known_hosts file and add entry to the database <END>
<BEG> force an asynchronous key re-exchange the call do not block <END>
<BEG> returns a { link connectioninfo } object contain the detail of the connection <END>
<BEG> change the current rsa hostkey <END>
<BEG> get the error message send by the server <END>
<BEG> set the charset use to convert between java unicode strings and byte encoding use by the server for path and file name <END>
<BEG> retrieve the file attribute of a file <END>
<BEG> list the content of a directory <END>
<BEG> move a file or directory <END>
<BEG> checks if this entry be a regular file <END>
<BEG> enable the x11 forwarding <END>
<BEG> specify how many request may be send at any one time <END>
<BEG> sets the private key <SEG> which will be refer in the public key authentication <END>
<BEG> removes all identity from identityrepository <END>
<BEG> sets or overrides the configuration <END>
<BEG> writes the cyphered private key to the give output stream <END>
<BEG> writes the cyphered private key to the file <END>
<BEG> parses the give file <SEG> and return an instance of configrepository <END>
<BEG> low-level access to decode ascii character in the form of a byte array <END>
<BEG> similar to { link # encodebytes byte [ ] } but return a byte array instead of instantiate a string <END>
<BEG> checks if a specified authentication method be available <END>
<BEG> send an ssh_msg_ignore packet with the give data attribute <END>
<BEG> sets the parameter for the diffie-hellman group exchange <END>
<BEG> define the set of allow server host key algorithm to be use for the follow key exchange operation <END>
<BEG> cancel an earlier request remote port forwarding <END>
<BEG> provide your own instance of securerandom <END>
<BEG> adds a single public key entry to the database <END>
<BEG> try to find the preferred order of hostkey algorithm for the give hostname <END>
<BEG> checks the internal hostkey database for the give hostkey <END>
<BEG> start a shell on the remote machine <END>
<BEG> read the target of a symbolic link <END>
<BEG> create a symbolic link on the server <END>
<BEG> have the server canonicalize any give path name to an absolute path <END>
<BEG> open a file for reading <END>
<BEG> open a file for reading and writing <END>
<BEG> create a file and open it for read and write <END>
<BEG> read byte from a file <END>
<BEG> turn the posix permission into a 7 digit octal representation <END>
<BEG> inspired by bouncycastle 's dsasigner class <END>
<BEG> decode a give string <END>
<BEG> add an insert command to the script <END>
<BEG> add an object to the pending deletion set <END>
<BEG> returns the substring after the first occurrence of < code > str < code > in < code > value < code > <END>
<BEG> returns the standard { link stringlookup } instance of this kind <END>
<BEG> looks up the value for the key in the format documentpath : xpath <END>
<BEG> returns the base64decoderstringlookup singleton instance to decode base64 string <END>
<BEG> returns the systempropertystringlookup singleton instance where the lookup key be a system property name <END>
<BEG> constructor that create a matcher from a set of character <END>
<BEG> matches no character <END>
<BEG> returns a matcher which match the single or double quote character <END>
<BEG> matches the string trim whitespace character <END>
<BEG> calculates jaccard similarity of two set character sequence pass a input <END>
<BEG> gets the distance threshold <END>
<BEG> computes the long common subsequence between the two < code > charsequence < code > 's pass a input <END>
<BEG> sets the text to be append when null be add <END>
<BEG> appends part of a string to this string builder <END>
<BEG> appends the content of a char buffer to this string builder <END>
<BEG> appends part of a stringbuilder to this string builder <END>
<BEG> appends another string builder to this string builder <END>
<BEG> appends part of a string builder to this string builder <END>
<BEG> appends a string follow by a new line to this string builder <END>
<BEG> appends a string builder follow by a new line to this string builder <END>
<BEG> appends part of a string buffer follow by a new line to this string builder <END>
<BEG> appends a long value follow by a new line to the string builder use < code > string valueof < code > <END>
<BEG> appends each item in an iterator to the builder without any separator <END>
<BEG> appends a separator to the builder if the loop index be great than zero <END>
<BEG> appends an object to the builder pad on the right to a fixed length <END>
<BEG> inserts the value into this builder <END>
<BEG> deletes the string wherever it occur in the builder <END>
<BEG> replaces the search string with the replace string throughout the builder <END>
<BEG> extracts the rightmost character from the string builder without throw an exception <END>
<BEG> checks if the string builder contain the specified string <END>
<BEG> searches the string builder to find the last reference to the specify char <END>
<BEG> searches the string builder to find the last reference to the specify string start search from the give index <END>
<BEG> searches the string builder use the matcher to find the last match search from the give index <END>
<BEG> checks the content of this builder against another to see if they contain the same character content <END>
<BEG> gets a stringbuffer version of the string builder <SEG> create a new instance each time the method be call <END>
<BEG> replaces all the occurrence of variable with their match value from the resolver use the give source a a template <END>
<BEG> gets a new tokenizer instance which parse comma separated value string initialize it with the give input <END>
<BEG> internal method to perform the tokenization <END>
<BEG> gets the trimmer character matcher <END>
<BEG> sets the matcher for character to trim <END>
<BEG> returns a lookup which look up value use a resourcebundle <END>
<BEG> matches the same character a stringtokenizer <SEG> namely space <SEG> tab <SEG> newline and form feed <END>
<BEG> resets this tokenizer <SEG> forget all parsing and iteration already complete <END>
<BEG> sets whether the tokenizer should ignore and not return empty token <END>
<BEG> updates the length of the builder by either drop the last character or add filler of unicode zero <END>
<BEG> checks the capacity and ensure that it be at least the size specify <END>
<BEG> minimizes the capacity to the actual length of the string <END>
<BEG> clears the string builder convenience collections api style method <END>
<BEG> appends part of a string follow by a new line to this string builder <END>
<BEG> suppresswarnings use to hide warn about vararg usage <END>
<BEG> appends one of both separator to the strbuilder <END>
<BEG> appends a separator if the builder be currently non-empty <END>
<BEG> append one of both separator to the builder if the builder be currently empty it will append the defaultifempty-separator otherwise it will append the standard-separator the separator be append use { link # append char } <END>
<BEG> appends the pad character to the builder the specified number of time <END>
<BEG> inserts the string representation of an object into this builder <END>
<BEG> inserts the character array into this builder <END>
<BEG> inserts part of the character array into this builder <END>
<BEG> deletes the character between the two specify index <END>
<BEG> deletes all part of the builder that the matcher match <END>
<BEG> deletes the first match within the builder use the specify matcher <END>
<BEG> replaces a portion of the string builder with another string <END>
<BEG> replaces the first instance of the search character with the replace character in the builder <END>
<BEG> replaces the first instance of the search string with the replace string <END>
<BEG> replaces all match within the builder with the replace string <END>
<BEG> replaces the first match within the builder with the replace string <END>
<BEG> reverses the string builder place each character in the opposite index <END>
<BEG> trims the builder by remove character less than or equal to a space from the beginning and end <END>
<BEG> checks if the string builder contain a string match use the specify matcher <END>
<BEG> checks the content of this builder against another to see if they contain the same character content ignore case <END>
<BEG> < p > constructs a < code > javaunicodeescaper < code > below the specify value exclusive <END>
<BEG> < p > constructs a < code > numericentityescaper < code > outside of the specified value exclusive <END>
<BEG> param args the command line argument <END>
<BEG> finds a converter by type <END>
<BEG> lookup an enum from a name <SEG> handle renames <END>
<BEG> converts the specify object to a { code string } <END>
<BEG> finds a suitable converter for the type <END>
<BEG> finds a suitable converter for the type with open generic <END>
<BEG> parses the typetoken string format <END>
<BEG> call from listen to empty property of patternmodel <END>
<BEG> sets the short description of the action <END>
<BEG> sets the long description of the action <END>
<BEG> sets the small icon which represent the action <END>
<BEG> return the mnemonic key code for the action <END>
<BEG> sets the key stroke which represent an accelerator for the action <END>
<BEG> convenience method for return the boundaction param id value of the action id return the targetableaction reference by the name id or null <END>
<BEG> returns the enabled state of the < code > action < code > <END>
<BEG> gets the selected state of a toggle action <END>
<BEG> test to determine if the action be a < code > boundaction < code > <END>
<BEG> add an action id to the action list <END>
<BEG> return a header value correspond to name or null if it do n't exist <END>
<BEG> saves the user name to preferences <END>
<BEG> returns true if the user be in all of the give role case sensitive <END>
<BEG> sets the string representation in use for the currently select item <END>
<BEG> sets the padding around the icon <END>
<BEG> sets the position to place the icon relative to the component content <END>
<BEG> returns the end of the date span <END>
<BEG> returns the end of the date span a a < code > date < code > <END>
<BEG> returns day in millis with the hour <SEG> millisecond <SEG> second and minute set to 0 <END>
<BEG> returns the last millisecond of the specified date <END>
<BEG> returns the week after < code > date < code > <END>
<BEG> check <SEG> whether the date pass in be the first day of the month <END>
<BEG> returns the first day after < code > date < code > that have the day of week match < code > startofweek < code > <END>
<BEG> returns the date corresponding to the end of the month <END>
<BEG> returns a new color equal to the old one <SEG> except the brightness be set to the new value <END>
<BEG> sets the border use for highlight <END>
<BEG> applies a suitable foreground for the renderer component within the specified adapter <END>
<BEG> sets the foreground color of this < code > colorhighlighter < code > and notifies register changelisteners <END>
<BEG> returns the select background color of this < code > colorhighlighter < code > <END>
<BEG> returns the number of row in the target 's data model <END>
<BEG> for target component that support multiple column in their model <SEG> along with column reorder in the view <SEG> this method transform the specified columnindex from view coordinate to model coordinate <END>
<BEG> converts a row index in view coordinate to an index in model coordinate <END>
<BEG> < p > gets the basic error message <END>
<BEG> return an array of all the listener of the give type <END>
<BEG> < p > sets the outer radius of the star <SEG> that be the distance between it center and the tip of the branch <END>
<BEG> < p > returns the distance between the center of the star and the tip of the branch < p > return the outer radius of the star <END>
<BEG> < p > returns the opacity of this composite <END>
<BEG> < p > returns a new compatible image from a url <END>
<BEG> < p > returns the reflection of the source image <END>
<BEG> return visit state <END>
<BEG> < p > gets whether this < code > jxbusylabel < code > be busy <END>
<BEG> set the jcolorchooser that be use by this jxcolorselectionbutton <END>
<BEG> returns the look and feel l & f object that render this component <END>
<BEG> sets the date show in the todaypanel <END>
<BEG> removes an actionlistener <END>
<BEG> notification from the < code > uimanager < code > that the l & f have change <END>
<BEG> gets the { link errorreporter } delegate in use <END>
<BEG> < p > constructs and return an error dialog <SEG> use the give < code > jxerrorpane < code > for the view portion of the dialog < p > < p > this method may be call from any thread <END>
<BEG> < p > constructs and show the error frame for the give exception <END>
<BEG> < p > constructs and show the error frame <SEG> use the give < code > errorinfo < code > to initialize the view < p > < p > this method may be call from any thread <END>
<BEG> action callback for findnext action <END>
<BEG> report that no match be find <END>
<BEG> creates and register all executable action <END>
<BEG> see promptsupport # setbackground color <SEG> javax swing text jtextcomponent <END>
<BEG> < p > defines whether or not grids line be paint by this component <END>
<BEG> < p > enables or disable the painting of grid line depend on the value of the parameter <END>
<BEG> < p > gets the minor grid line color of this component < p > return this component 's minor grid line color see # setminorgridcolor color see # setgridpainted boolean <END>
<BEG> < p > sets the color of minor grid line on this component <END>
<BEG> < p > sets the distance <SEG> in graph unit <SEG> between two major grid line on the y axis < p > param majory the request spacing between two major grid line on the y axis throw illegalargumentexception if majory be < = 0 0d see # getmajory see # getmajorx see # setmajorx double see # getminorcounty see # setminorcounty int <END>
<BEG> < p > gets the number of minor grid line between two major grid line on the y axis < p > return the number of minor grid line between two major grid line see # setminorcounty int see # getminorcountx see # setminorcountx int see # getmajory see # setmajory double <END>
<BEG> < p > sets the number of minor grid line between two major grid line on the y axis < p > param minorcounty the number of minor grid line between two major grid line on the y axis throw illegalargumentexception if minorcounty be < 0 see # getminorcounty see # getminorcountx see # setminorcountx int see # getmajory see # setmajory double <END>
<BEG> gets current description foreground color <END>
<BEG> sets description foreground color <END>
<BEG> returns the foreground color for visited link <END>
<BEG> returns an action which will open a file chooser <SEG> ask the user for an image file then save the image from the view <END>
<BEG> implementation detail <END>
<BEG> create and return an action for cancel login <END>
<BEG> sets the < strong > passwordstore < strong > for this panel <END>
<BEG> sets the user name store for this panel <END>
<BEG> sets a custom message for this login panel <END>
<BEG> cancels the login procedure <END>
<BEG> returns the anchor date <END>
<BEG> resets the ui property with the value from the current look and feel <END>
<BEG> sets the date selection model to drive this monthview <END>
<BEG> returns the early select date <END>
<BEG> adds the date to the flag <END>
<BEG> sets a boolean property indicate whether or not to show trailing date for the month display by this component < p > the default value be false <END>
<BEG> returns a boolean indicating whether or not we 're show trail date <END>
<BEG> returns the select background color <END>
<BEG> sets the select foreground color to < code > c < code > <END>
<BEG> returns the color use to paint the month string foreground <END>
<BEG> return color color <END>
<BEG> return the color that should be use for paint the numerical day of the week <END>
<BEG> sets the vertical sizing hint <END>
<BEG> sets the horizontal size track to either scrollablesizetrack fit or none <SEG> if the boolean parameter be true or false <SEG> respectively < p > < b > note < b > : this method be keep for backward compatibility only <SEG> for full control use setscrollablewidthhint <END>
<BEG> set the toolbar bar for this root pane <END>
<BEG> returns < code > true < code > if the current { link searchmode } be { link searchmode # regular } <END>
<BEG> set the instant search delay in millisecond <END>
<BEG> returns the find button <END>
<BEG> return the label of the search combo <END>
<BEG> updates the pattern matcher <END>
<BEG> sets the column control visible property <END>
<BEG> configures the upper trailing corner of an enclose < code > jscrollpane < code > <END>
<BEG> hack around core issue 6791934 : set the sorter change flag if appropriate <END>
<BEG> convenience method to detect update table event type <END>
<BEG> sets the filter to the sorter <SEG> if available and of type sortcontroller <END>
<BEG> resets sort of all column <END>
<BEG> toggles the sort order of the column with identifier <END>
<BEG> decides if the column with identifier can be interactively sort <END>
<BEG> sets the preferred number of row to show in a < code > jscrollpane < code > <END>
<BEG> scrolls horizontally to make the give column visible <END>
<BEG> returns a searchable for this component <SEG> guarantee to be not null <END>
<BEG> returns the string representation of the cell value at the give position <END>
<BEG>  < p > overridden to try to stop the edit <SEG> if appropiate <END>
<BEG>  < p > overridden to return a < code > defaulttablecolumnmodelext < code > <END>
<BEG> sets the icon to be display in the border of this pane <END>
<BEG> sets the keyboard mnemonic on the task pane <END>
<BEG> adds an action to this < code > jxtaskpane < code > <END>
<BEG> shows the previous tip in the list <END>
<BEG> sets the title for this title panel <END>
<BEG> adds the give jcomponent a a decoration on the left of the title param decoration <END>
<BEG> expands all node in this tree <END>
<BEG> sets the foreground color for select cell <END>
<BEG> creates and return the default cell renderer to use <END>
<BEG> returns the renderer instal by client code or the default if none have be set <END>
<BEG> get the layout mode return current layout mode <END>
<BEG> sset the layoutbyweight falg <END>
<BEG> sets the border width to use for paint <END>
<BEG> indicates if the painter content be stretch vertically return the current verticalalignment stretch value <END>
<BEG> sets a new horizontalalignment alignment <END>
<BEG> sets if the content should be stretch vertically to fill all available verticalalignment space minus the top and bottom inset <END>
<BEG> < p > sets whether this < code > abstractpainter < code > can be cache a an image <END>
<BEG> sets current frame <END>
<BEG> gets highlight color <END>
<BEG> sets new highlight color <END>
<BEG> specifies the paint to use for light tile <END>
<BEG> return true if the addon be the metal addon or it subclass <END>
<BEG> return true if the current look and feel be nimbus <END>
<BEG> update property which depend on the picker 's enabled <END>
<BEG> creates and return the actionlistener for the picker 's monthview <END>
<BEG> uninstalls the default color <SEG> and default font into the error pane <END>
<BEG> returns the bound of the month detail which contain the give location <END>
<BEG> returns the logical coordinate of the month which contain the give location <END>
<BEG> paints the month represent by the give calendar <END>
<BEG> paints the separator between column header day of week and day <END>
<BEG> returns an instance of the ui delegate for the specified component <END>
<BEG> creates a { code mousemotionlistener } which will be add to the status bar <END>
<BEG> remove the installed listener from the status bar <END>
<BEG> uninstalls the default color <SEG> border <SEG> and painter of the task pane container <END>
<BEG> installs default property <END>
<BEG> reverses configuration which be do on the specified component during < code > installui < code > <END>
<BEG> returns an array of dataflavor object indicate the flavor the data can be provide in <END>
<BEG> returns whether or not the specify data flavor be support for this object <END>
<BEG> returns whether or not the specify data flavor be an plain flavor that be support <END>
<BEG> uninitializes < code > this list < code > by call < code > uninstalllisteners < code > <SEG> < code > uninstallkeyboardactions < code > <SEG> and < code > uninstalldefaults < code > in order <END>
<BEG> creates an instance of listdatalistener that 's add to the jlists by model a need <END>
<BEG> called after notification from selectionmodel <END>
<BEG> creates and return a rowsorterlistener <END>
<BEG> updates internal state to monthview 's locale <END>
<BEG> returns a color base on the param which be not of type uiresource <END>
<BEG>  < p > overridden to update style if appropriate <END>
<BEG> returns an integer from the default <END>
<BEG> returns a color from the default <END>
<BEG> returns a painter from the default that be appropriate for the give locale <END>
<BEG> get the { link focusbehavior } of < code > textcomponent < code > <END>
<BEG> get the background painter of the < code > textcomponent < code > <SEG> when no text be present <END>
<BEG> returns a icon representation of the content < p > this method message the < code > iconvalue < code > to get the icon rep meant a a convenience for subclass <END>
<BEG> overridden for performance reason <END>
<BEG>  < p > this implementation delegate to the contain booleanvalue if available or return false <SEG> if not <END>
<BEG> pre getcomponent ! = null return whether the row coordinate be valid in this context <END>
<BEG> returns the default icon to use for open cell <END>
<BEG> returns a boolean indicating whether the hint can be use in vertical orientation <END>
<BEG> performs a search start at the give startindex use the pattern ; { link java util regex pattern } <END>
<BEG> set the maximum number of recent search <END>
<BEG> configures the share findpanel <END>
<BEG> matches the cell content at row col against the give pattern <END>
<BEG> use and move the match highlighter <END>
<BEG>  < p > <END>
<BEG> returns the registry of string value <END>
<BEG>  < p > overridden to use check against < code > getmodelrowcount < code > for validity <END>
<BEG> sets the < code > tablemodel < code > to use a the underlying model for this < code > tablerowsorter < code > <END>
<BEG> populates the popup from scratch <END>
<BEG> sets the share default factory <END>
<BEG> returns the number of click need to start edit <END>
<BEG> returns the give value a date <END>
<BEG> hot fix for # 157 : listener that be aware of the possible existence of invisible column should check if the receive columnadded originate from move a column from invisible to visible <END>
<BEG> sets the < code > highlighter < code > s to the table <SEG> replace any old setting <END>
<BEG> appends a < code > highlighter < code > to the end of the list of use < code > highlighter < code > s <END>
<BEG> creates and return the changelistener observe highlighters <END>
<BEG> determines whether the specified column be editable <END>
<BEG> called when value for the item identify by path have be change <END>
<BEG> return true if this vm be run on windows <END>
<BEG> clears the data from the image <END>
<BEG> < p > returns the < code > point < code > at which a window should be place to center that window on the screen <END>
<BEG> sets the actionmanager instance that will be use by this actioncontainerfactory <END>
<BEG> constructs a popup menu from a list of action id <END>
<BEG> creates and return a menu from a list which represent action <SEG> separator and sub-menus <END>
<BEG> returns an array of all the change listener register on this < code > highlighter < code > <END>
<BEG> overridden paint method to take into account the alpha set param g <END>
<BEG> overridden to provide painter support <END>
<BEG> c & p'ed from basicgraphicsutils getpreferredbuttonsize <END>
<BEG> configure diver visual state of the render component from the give cell context <END>
<BEG> returns an array of all the < code > actionlistener < code > s add to this jradiogroup with addactionlistener <END>
<BEG> toggles the popups visibility after prepare internal state <END>
<BEG> inherit < p > implemented to lookup the value 's localized string representation <SEG> if contain in the lookup map <END>
<BEG> show class name and some detail that be useful in template-not-found error <END>
<BEG> fluid api variation of { link # setcaseinsensitive boolean } <END>
<BEG> returns the default of { link # getemulatecasesensitivefilesystem } <END>
<BEG> same a { link # setnomatcherrordetails string } <SEG> but return this object to support fluent api style <END>
<BEG> returns the configured upper limit of the number of soft cache entry <END>
<BEG> always return { code true } <END>
<BEG> returns a close approximation of the number of cache entry <END>
<BEG> since 2 3 24 <END>
<BEG> sets the delay in millisecond between check for new version of a template source <END>
<BEG> setis if localize template lookup be enable or not <END>
<BEG> sets the maximal scale to use when multiply bigdecimal number <END>
<BEG> maybe { code null } <SEG> but then { link # getplaintextcontent } be n't { code null } <END>
<BEG> tells if this setting be set directly in this object or it value be come from the { link # getparent parent } <END>
<BEG> like { link # getautoincludes } <SEG> but do n't fall back to the parent { link configurable } and so it can be { code null } <END>
<BEG> internal entry point for get unnamed custom attribute <END>
<BEG> removes a named custom attribute for this configurable <END>
<BEG> gets the value of a { link configuration } -scope attribute from the give { link configuration } <END>
<BEG> sets the attribute inside the appropriate scope that 's accessible through the specify { link environment } <END>
<BEG> same a { link # setparentconfiguration configuration } <END>
<BEG> sets the output format of the template ; see { link configuration # setoutputformat outputformat } for more <END>
<BEG> see { link configuration # setrecognizestandardfileextensions boolean } <END>
<BEG> the element whose child this element be <SEG> or { code null } if this be the root node <END>
<BEG> determines whether this element 's presence on a line indicate that we should not strip trail whitespace in the post-parse whitespace gobble step <END>
<BEG> utility method to extract the { link date } from an { link templatedatemodel } <SEG> and throw { link templatemodelexception } with a standard error message if that 's { code null } <END>
<BEG> returns a hash model that represent the so-called class enum model <END>
<BEG> for unit test only <END>
<BEG> returns { link enumeration # hasmoreelements } <END>
<BEG> tells if the value can be use a the el function parameter to { link # combine templatemodel <SEG> templatemethodmodelex } <END>
<BEG> returns the value to which this map map the specified key <END>
<BEG> removes the mapping for this key from this map if present <END>
<BEG> converts an array to a java util list <END>
<BEG> getter pair of { link # setiterablesupport boolean } ; see there <END>
<BEG> returns the low version number that be equivalent with the parameter version <END>
<BEG> returns a { link defaultobjectwrapper } instance that match the setting of this builder <END>
<BEG> returns the interpolation syntax the parser have use for this template <END>
<BEG> called by code internally to maintain a list of import deprecate should only be use internally <SEG> and might will be remove later <END>
<BEG> return the prefix map to this nsuri in this template <END>
<BEG> the exact reverse of { link # primitiveclasstoboxingclass } <END>
<BEG> return the build date if know <SEG> or { code null } <END>
<BEG> insert all the attribute in the context-stack <END>
<BEG> call it before a template have be apply <END>
<BEG> set the suffix that get append to view name when build a uri <END>
<BEG> return < code > true < code > if the specify double < code > math ab f > 0 00000001 < code > param d return boolean result <END>
<BEG> append a byte to internal buffer param b <END>
<BEG> print an object follow by two tab < code > \t < code > param o return this builder <END>
<BEG> print an object follow by 3 tab < code > \t < code > and an line break param o return this builder <END>
<BEG> write out a string literal or attribute expression or expression element <END>
<BEG> < p > returns the normalized prefix of this element part of it name <SEG> if it exist <SEG> or null if the element be unprefixed <END>
<BEG> < p > returns the normalized version of the element name <SEG> without it prefix if it have one <END>
<BEG> < p > normalizes an element name by convert it to lower-case <END>
<BEG> < p > returns the prefix be apply to an element <END>
<BEG> < p > returns whether an attribute exists in the element or not <END>
<BEG> < p > returns the first child of type { link element } <END>
<BEG> < p > adds a new child to the node <SEG> position just after another child node that be also specify <END>
<BEG> < p > performs a null-safe < tt > tostring < tt > operation on each element of the list <END>
<BEG> < p > copy a part of target start beginindex to the end of target for all the element in the target list <END>
<BEG> < p > convert the first letter into uppercase title-case <SEG> in fact for all the element in the target list <END>
<BEG> < p > convert the first letter into lowercase for all the element in the target list <END>
<BEG> < p > convert the first letter of each word of target to uppercase title-case <SEG> in fact for all the element in the target list <END>
<BEG> < p > xml-escapes all the element in the target list <END>
<BEG> < p > returns the second fragment spec in the chain <END>
<BEG> < p > returns the average of all the number contain in the provided array <END>
<BEG> < p > un-escapes the specify java-escaped target text back to normal form <END>
<BEG> return < code > true < code > for the last iteration <SEG> < code > false < code > otherwise <END>
<BEG> return the value alias or < code > null < code > if not set <END>
<BEG> return the corresponding tag type or < code > null < code > <END>
<BEG> param option return < code > true < code > if the underlie tag represent a section <SEG> < code > false < code > otherwise <END>
<BEG> param value return an escaped value <END>
<BEG> param element return an immutable list of the give element <END>
<BEG> param in param out param buffersize throw ioexception <END>
<BEG> return the pattern to match a long literal in a helper name <END>
<BEG> param character return < code > true < code > if the char be a string literal separator <SEG> < code > false < code > otherwise <END>
<BEG> param text return < code > true < code > if the give text contain a whitespace character <END>
<BEG> formats a date in < code > dateformat long < code > style <END>
<BEG> see org apache velocity context internaleventcontext # geteventcartridge <END>
<BEG> remove the current macro name from stack <END>
<BEG> get the current macro name return string current macro name <END>
<BEG> see org apache velocity context internaleventcontext # attacheventcartridge org apache velocity app event eventcartridge <END>
<BEG> returns the logchute wrap by this log instance <END>
<BEG> returns true if debug level message will be print by the logchute <END>
<BEG> log an info message and accompany throwable <END>
<BEG> return true if stack trace should be show <END>
<BEG> param method since 1 5 <END>
<BEG> see org apache velocity runtime parser node simplenode # value org apache velocity context internalcontextadapter <END>
<BEG> see org apache velocity runtime parser node parservisitor # visit org apache velocity runtime parser node astescapeddirective <SEG> java lang object since 1 5 <END>
<BEG> a method to get a file object <END>
<BEG> move to next element in the array <END>
<BEG> get an iterator from the give object <END>
<BEG> init - generate the introspector <END>
<BEG> return the size of the pool return the pool size <END>
<BEG> returns the string that end the description <END>
<BEG> creates a matcher that match when the examine object be find within the specified array <END>
<BEG> creates a matcher for { link iterable } s that match when a single pas over the examined { link iterable } yield a series of item <SEG> each satisfy the correspond matcher in the specified list of matcher <END>
<BEG> creates a matcher for { link java util map } s match when the examine { link java util map } contain at least one entry whose key equal the specified < code > key < code > < b > and < b > whose value equal the specified < code > value < code > <END>
<BEG> creates a matcher for { link java util map } s match when the examine { link java util map } contain at least one value that satisfy the specify valuematcher <END>
<BEG> creates a matcher that match if the examined object match < b > any < b > of the specified matcher <END>
<BEG> creates a matcher for { link iterable } s that match when consecutive pass over the examined { link iterable } yield at least one item that be equal to the corresponding item from the specify < code > item < code > <END>
<BEG> creates a matcher that match if examine object be < code > null < code > <END>
<BEG> creates a matcher that match if the examine { link string } start with the specify { link string } <END>
<BEG> close all underlying stream <END>
<BEG> creates a matcher of { link comparable } object that match when the examine object be great than the specified value <SEG> a report by the < code > compareto < code > method of the < b > examine < b > object <END>
<BEG> creates a matcher of { link class } that match when the specify basetype be assignable from the examined class <END>
<BEG> gets the base url <END>
<BEG> called when the applet want to be resize <END>
<BEG> defines a cookie to be send to the server on every request <END>
<BEG> specifies whether strict path name match must be follow <END>
<BEG> resets all option to their default value <END>
<BEG> returns the content type to be use for page which do not specify one <END>
<BEG> if true <SEG> httpunit throw an exception when attempt to parse a html a response whose content type be not html <END>
<BEG> returns true if httpunit should automatically follow page redirect request status 3xx <END>
<BEG> sets the delay <SEG> in millisecond <SEG> before a redirect request be issue <END>
<BEG> add an html error listener <END>
<BEG> decodes a url safe string into it original form use the specified character set <END>
<BEG> parse the give inputstream with a new parser param inputstream return the document parse from the input stream <END>
<BEG> returns a string array create by append an object to an exist array <END>
<BEG> return true if the first string equal the second <END>
<BEG> selects the nekohtml parser <SEG> if present <END>
<BEG> return true if the current parser will support force the tag and attribute to lower case return boolean flag <END>
<BEG> returns true if parser warning be enable <END>
<BEG> transmits the body of this request a a sequence of byte <END>
<BEG> specifies the number of server socket that must have be allocate and not return before wait for one to be return <END>
<BEG> returns a resource object a a result of a post request <END>
<BEG> asserts that a condition be true <END>
<BEG> asserts that an object be n't null <END>
<BEG> asserts that an object be null <END>
<BEG> gets the expected string value return the expected string value <END>
<BEG> returns an enumeration for the failure <END>
<BEG> see junit framework testlistener # starttest test <END>
<BEG> see java lang management managementfactory # getthreadmxbean <END>
<BEG> invoked when a test fails <END>
<BEG> invoked when a test method fails <END>
<BEG> create a < code > description < code > name < code > name < code > <END>
<BEG> create a < code > description < code > of a single test name < code > name < code > in the class < code > clazz < code > <END>
<BEG> return < code > true < code > if the receiver be a suite <END>
<BEG> return if this describe a method invocation <SEG> the name of the method or null if not <END>
<BEG> returns test class parse from command line <END>
<BEG> internal use only <END>
<BEG> invoke to tell listener that a test suite be about to finish <END>
<BEG> invoke to tell listener that an atomic test finish <END>
<BEG> adds to { code error } a throwable for each problem detect <END>
<BEG> param target the test case instance return a list of testrules that should be apply when execute this test <END>
<BEG> validates annotation on the give class <END>
<BEG> validates annotation on the give method <END>
<BEG> fuzzify the input value by increase it by a few ulps <SEG> but never past max <END>
<BEG> a random float between < code > min < code > inclusive and < code > max < code > inclusive <END>
<BEG> param r random generator <END>
<BEG> returns the size in byte of the boolean [ ] object <END>
<BEG> returns < code > size < code > in human-readable unit gb <SEG> mb <SEG> kb or byte <END>
<BEG> format a single seed <END>
<BEG> write byte from the specify byte array to the stream <END>
<BEG> configure if rest assured should reject relative redirects param value < code > true < code > if it should reject relative redirects <SEG> < code > false < code > otherwise <END>
<BEG> return < code > true < code > if configure to reject relative redirects <END>
<BEG> returns the samesite attribute of the cookie <END>
<BEG> non-android utility method for compare a point to a well-known value param x x param y y return this x == x & & this y == y <END>
<BEG> returns the exact type of the give field in the give type <END>
<BEG> applies capture conversion to the give type <END>
<BEG> returns list of class and interface that be supertypes of the give type <END>
<BEG> returns the current jvm 's system property <END>
<BEG> tells whether the tag be filterable <END>
<BEG> creates a stub whose type and name be infer from the left-hand side of the enclose variable assignment <END>
<BEG> tells whether the java version be 9 <END>
<BEG> tells whether the java version be compatible with java 9 <END>
<BEG> tells whether the java version be compatible with the give major java version <END>
<BEG> returns the family of the operating system <END>
<BEG> indicates whether this < code > optionalthrowable < code > be empty <SEG> < em > i e < em > <SEG> contain no < code > throwable < code > <END>
<BEG> asserts that two array contain the equal element concern a delta in the same order <END>
<BEG> invoked after an assert be run <END>
<BEG> asserts that a { code tstvalue } be a file of at most { code expect } character or a directory of at most { code expect } entry <END>
<BEG> transform an ifactory annotation <END>
<BEG> invoked before a configuration method be invoke <END>
<BEG> returns the class object correspond to the give name <END>
<BEG> return all configuration method that should be invoke after certain group <END>
<BEG> see org testng iclass # addinstance java lang object <END>
<BEG> see org testng iclass # getrealclass <END>
<BEG> check whether this logger be enable for the trace level <END>
<BEG> log a message object with the debug level include the stack trace of the throwable t pass a parameter <END>
<BEG> invoked each time a test be skip <END>
<BEG> sets the method selector <END>
<BEG> sets parameter <END>
<BEG> sets the xml package <END>
<BEG> return the parameter define in this test tag and the tag above it <END>
<BEG> return the nodedetail from the piece of xml use a the test at the node where this difference be encounter <END>
<BEG> obtain a list of all error in the give instance <END>
<BEG> sets an entityresolver to be add to all new control parser <END>
<BEG> overide the documentbuilder to use to parser test document <END>
<BEG> get the < code > documentbuilder < code > instance use to parse the test xml in an xmltestcase <END>
<BEG> get the < code > documentbuilderfactory < code > instance use to instantiate parser for the test xml in an xmltestcase <END>
<BEG> override the < code > documentbuilderfactory < code > use to instantiate parser for the test xml in an xmltestcase <END>
<BEG> whether to ignore whitespace when compare node value <END>
<BEG> utility method to build a document use the test documentbuilder to parse the specified string <END>
<BEG> utility method to build a document use the test documentbuilder and the specify inputsource param fromsource return document representation of the string content throw saxexception throw ioexception <END>
<BEG> compare xml document provide by two reader class param control control document param test document to test return diff object describe difference in document throws saxexception throw ioexception <END>
<BEG> set the namespacecontext to use in xpath test <END>
<BEG> whether text node should be normalize <END>
<BEG> whether whitespace character inside text node or attribute should be normalize <END>
<BEG> gets the class to use a xpathfactory when use jaxp 1 3 <END>
<BEG> whether the parser shall be instruct to expand entity reference <END>
<BEG> get a human-readable string representation of the xid <END>
<BEG> set the property that should be set on the underlying implementation <END>
<BEG> define the amount of second and idle connection can stay in the pool before get close <END>
<BEG> define the amount of connection to be create at once when the pool need to grow <END>
<BEG> define the amount of time in second a call to get a connection from the pool will wait when the pool be empty <END>
<BEG> set the position at which this resource should stand during 2pc commit <END>
<BEG> returns the stack trace of the specify { link throwable } <END>
<BEG> get a direct or indirect property dot property : prop1 prop2 prop3 on the target object <END>
<BEG> gets the character use for zero <END>
<BEG> sets the character use for percent sign <END>
<BEG> sets the character use for a digit in a pattern <END>
<BEG> sets the character use to separate positive and negative subpatterns in a pattern <END>
<BEG> sets the string use to represent infinity <END>
<BEG> sets the currency symbol for the currency of these decimalformatsymbols in their locale <END>
<BEG> sets the monetary decimal separator <END>
<BEG> get the group be validate <END>
<BEG> get the owning class return <END>
<BEG> configure the well-known jsr303 group element <END>
<BEG> < p > checks if the field be a valid date <END>
<BEG> returns true if the user component of an email address be valid <END>
<BEG> < p > format an object use the specified pattern and or < code > locale < code > <END>
<BEG> < p > parse the value with the specify < code > format < code > < p > param value the value to be parse <END>
<BEG> < p > validate convert a < code > bigdecimal < code > use the specified < i > pattern < i > <END>
<BEG> check if the value be less than or equal to a maximum <END>
<BEG> convert the parsed value to a < code > bigdecimal < code > <END>
<BEG> return a singleton instance of this validator <END>
<BEG> calculates the < i > weight < i > value of a charcter in the code at a specified position <END>
<BEG> validate a modulus check digit for a code <END>
<BEG> calculate the modulus for an sedol code <END>
<BEG> calculate a verhoeff < i > check digit < i > for a code <END>
<BEG> return the maximum length of the code <END>
<BEG> < p > checks if a field have a valid e-mail address < p > param email the value validation be be perform on <END>
<BEG> installs a validator <END>
<BEG> validates an ipv4 address <END>
<BEG> < p > validate convert a time use the specified < i > pattern < i > and default < code > timezone < code > <END>
<BEG> < p > validate convert a time use the specified < i > pattern < i > and < code > timezone < code > <END>
<BEG> tests whether the give flag be off <END>
<BEG> turns off the give flag <END>
<BEG> sets the javascript type of the variable <END>
<BEG> removes any stale entry whose key have be finalize <END>
<BEG> assert that this parameter be not empty <END>
<BEG> configure method return value and parameter check <END>
<BEG> specifies if a connection to the url should be attempt to verify it validity <END>
<BEG> specifies the allow url scheme <END>
<BEG> param simplecheck the simplecheck to set throw illegalargumentexception if < code > simplecheck == null < code > <END>
<BEG> return returns the context where the constraint violation occur <END>
<BEG> registers constraint check for the give method parameter throw illegalargumentexception if < code > method == null < code > or < code > exclusion == null < code > or exclusion be empty throw invalidconfigurationexception if the declare class be not guard or the parameterindex be out of range <END>
<BEG> registers pre condition check to a method 's return value throw illegalargumentexception if < code > method == null < code > or < code > check == null < code > or check be empty throw invalidconfigurationexception if the declare class be not guard <END>
<BEG> this method be provide for use by guard aspect <END>
<BEG> determines if invariant be check prior and after every call to a non-private method or constructor <END>
<BEG> removes constraint check exclusion from the give method parameter throw invalidconfigurationexception if the declare class be not guard or the parameterindex be out of range <END>
<BEG> specifies if invariant be check prior and after call to non-private method and constructor <END>
<BEG> intentionally the following code be not synchronize <END>
<BEG> returns all annotation present on this method <END>
<BEG> determines if a method be a javabean style setter method <END>
<BEG> removes the message bundle return true if the bundle be register and false if it be n't register <END>
<BEG> performs an inline low cholesky decomposition on an inner row-major matrix <END>
<BEG> computes the decomposition of the provide matrix <END>
<BEG> returns the bidiagonal matrix <END>
<BEG> returns the orthogonal v matrix <END>
<BEG> < p > performs choleksy decomposition on the provide matrix <END>
<BEG> the raw qh matrix that be store internally <END>
<BEG> an orthogonal matrix that have the following property : t = q < sup > t < sup > aq param q if not null then the result will be store here <END>
<BEG> extracts the tridiagonal matrix find in the decomposition <END>
<BEG> decomposes the provided symmetric matrix <END>
<BEG> performs the householder operation on left and right and side of the matrix <END>
<BEG> if need declares and set up internal data structure <END>
<BEG> computes the q matrix from the imformation store in the qr matrix <END>
<BEG> < p > to decompose the matrix ' a ' it must have full rank <END>
<BEG> < p > computes the householder vector u for the first column of submatrix j <END>
<BEG> returns an upper triangular matrix which be the r in the qr decomposition <END>
<BEG> < p > adjusts the value of the q and r matrix to take in account the effect of remove a row from the ' a ' matrix at the specify location <END>
<BEG> < p > using the decomposition <SEG> find the value of ' x ' in the linear equation below : < br > a x = b < br > where a have dimension of n by n <SEG> x and b be n by m dimension <END>
<BEG> sets the matrix 'inv ' equal to the inverse of the matrix that be decompose <END>
<BEG> performs qr decomposition on a param a not modify <END>
<BEG> solves for x use the qr decomposition <END>
<BEG> an alternative implementation of { link # multaddtransa_small } that performs well on large matrix <END>
<BEG> < p > returns the value of the element in the matrix that have the minimum value < br > < br > min { a < sub > ij < sub > } for all i and j < br > < p > param a a matrix <END>
<BEG> < p > returns the absolute value of the element in the matrix that have the small absolute value < br > < br > min { |a < sub > ij < sub > | } for all i and j < br > < p > param a a matrix <END>
<BEG> < p > performs the an element by element multiplication operation : < br > < br > c < sub > ij < sub > = a < sub > ij < sub > b < sub > ij < sub > < br > < p > param a the left matrix in the multiplication operation <END>
<BEG> < p > performs an element by element scalar division < br > < br > b < sub > ij < sub > = a < sub > ij < sub > & alpha ; < p > param alpha the amount each element be divide by <END>
<BEG> < p > sets every element in the matrix to the specify value < br > < br > a < sub > ij < sub > = value < p > param a a matrix whose element be about to be set <END>
<BEG> < p > performs the following operation : < br > < br > c = a + b < br > c < sub > ij < sub > = a < sub > ij < sub > + b < sub > ij < sub > < br > < p > < p > matrix c can be the same instance a matrix a and or b <END>
<BEG> < p > performs the following operation : < br > < br > a = a + b < br > a < sub > ij < sub > = a < sub > ij < sub > + b < sub > ij < sub > < br > < p > param a a matrix <END>
<BEG> < p > transposes matrix ' a ' and store the result in ' b ' : < br > < br > b < sub > ij < sub > = a < sub > ji < sub > < br > where ' b ' be the transpose of ' a ' <END>
<BEG> < p > performs the following operation : < br > < br > c = a b < br > < br > c < sub > ij < sub > = & sum ; < sub > k=1 : n < sub > { a < sub > ik < sub > b < sub > kj < sub > } < p > param a the left matrix in the multiplication operation <END>
<BEG> < p > performs the following operation : < br > < br > c = a < sup > t < sup > b < br > < br > c < sub > ij < sub > = & sum ; < sub > k=1 : n < sub > { a < sub > ki < sub > b < sub > kj < sub > } < p > param a the left matrix in the multiplication operation <END>
<BEG> < p > performs the following operation : < br > < br > c = a < sup > t < sup > b < sup > t < sup > < br > c < sub > ij < sub > = & sum ; < sub > k=1 : n < sub > { a < sub > ki < sub > b < sub > jk < sub > } < p > param a the left matrix in the multiplication operation <END>
<BEG> < p > performs the following operation : < br > < br > c = a b < sup > t < sup > < br > c < sub > ij < sub > = & sum ; < sub > k=1 : n < sub > { a < sub > ik < sub > b < sub > jk < sub > } < p > param a the left matrix in the multiplication operation <END>
<BEG> < p > performs the vector dot product : < br > < br > c = a b < br > < br > c > = & sum ; < sub > k=1 : n < sub > { b < sub > k < sub > a < sub > k < sub > } < p > param a the left vector in the multiplication operation <END>
<BEG> sets all the diagonal element equal to one and everything else equal to zero <END>
<BEG> inverts matrix ' a ' use minor matrix and store the result in 'inv ' <END>
<BEG> computes the determinant use minor matrix <END>
<BEG> < p > this compute the trace of the matrix : < br > < br > trace = & sum ; < sub > i=1 : n < sub > { a < sub > ii < sub > } < p > < p > the trace be only define for square matrix <END>
<BEG> < p > extracts all diagonal element from 'input ' and place them inside the 'out ' vector <END>
<BEG> < p > performs an in-place element by element scalar multiplication < br > < br > a < sub > ij < sub > = & alpha ; a < sub > ij < sub > < p > param a the matrix that be to be scale <END>
<BEG> < p > returns a { link org ejml interface decomposition qrdecomposition } that have be optimize for the specified matrix size <END>
<BEG> < p > computes the matrix multiplication out product : < br > < br > c = a a < sup > t < sup > < br > < br > c < sub > ij < sub > = & sum ; < sub > k=1 : m < sub > { a < sub > ik < sub > a < sub > jk < sub > } < p > < p > is faster than use a generic matrix multiplication by take advantage of symmetry <END>
<BEG> converts { link densematrix64f } into { link fixedmatrix3x3_64f } param input input matrix <END>
<BEG> computes the p=2 norm <END>
<BEG> extracts the word from a string <END>
<BEG> extracts the nullity of a matrix use a preexisting decomposition <END>
<BEG> < p > returns the result of matrix subtraction : < br > < br > c = a - b < br > < br > where c be the returned matrix <SEG> a be this matrix <SEG> and b be the pass in matrix <END>
<BEG> creates a new iterator for traverse through a submatrix inside this matrix <END>
<BEG> returns the index of the eigenvalue which have the small magnitude <END>
<BEG> < p > returns the orthogonal ' v ' matrix <END>
<BEG> returns the specified singular value <END>
<BEG> checks the row and column index <SEG> and return the linear data index <END>
<BEG> checks the argument to < code > mult < code > and < code > multadd < code > <END>
<BEG> checks that a vector rank2 update be legal with the give vector <END>
<BEG> checks that a rank2 update be legal for the give argument <END>
<BEG> returns < code > true < code > if the matrix store real number <SEG> else < code > false < code > <END>
<BEG> returns < code > true < code > if the matrix store integer <SEG> else < code > false < code > <END>
<BEG> reads the vector info for the matrix market exchange format <END>
<BEG> reads in the size of a coordinate matrix <END>
<BEG> reads in the size of a vector <END>
<BEG> reads the array data <END>
<BEG> reads a coordinate vector <END>
<BEG> prints the vector info <END>
<BEG> prints the vector size <END>
<BEG> prints an array to the underlying stream <END>
<BEG> returns < code > true < code > if the vector do not store any number <SEG> else < code > false < code > <END>
<BEG> return the netlib character version of this designation <SEG> for use with f2j <END>
<BEG> returns the number of non-zero entry in the give vector <END>
<BEG> populates a matrix with random number draw from a uniform distribution between 0 and 1 param a matrix to populate <END>
<BEG> returns a synchronize matrix which wrap the give matrix <END>
<BEG> returns a view into the give vector <END>
<BEG> finds the number of diagonal above the main diagonal <END>
<BEG> sets the select column of < code > a < code > equal zero <SEG> and put < code > diagonal < code > on the diagonal of those column <END>
<BEG> searches for a key in a sorted array <SEG> and return an index to an element which be small than or equal key <END>
<BEG> sets the divergence tolerance param dtol relative divergence tolerance to initial residual <END>
<BEG> sets the give row equal the pass vector <END>
<BEG> tries to store the matrix as compactly a possible <END>
<BEG> determines whether a folder should be traverse <END>
<BEG> gets the root uri of the file system <END>
<BEG> gets name parameter <END>
<BEG> throws a filesystemexception when the give object be null <END>
<BEG> returns true if file of this type may have data content <END>
<BEG> returns the content of a file <SEG> a a byte array <END>
<BEG> checks to see if the last modification of the file match cutoff favorably <END>
<BEG> checks to see if the file can be write to <END>
<BEG> checks to see if the size of the file be favorable <END>
<BEG> checks to see if the file name end with the suffix <END>
<BEG> adds a mime type mapping <END>
<BEG> adds a file name extension mapping <END>
<BEG> returns the folder for the package contain the resource <END>
<BEG> determines if another file name be a descendent of this file name <END>
<BEG> returns the root file of this file system <END>
<BEG> returns an input stream for read the content <END>
<BEG> returns an output stream for write the content <END>
<BEG> returns an output stream for write the content in append mode <END>
<BEG> writes this content to an outputstream <END>
<BEG> builds the root uri for this file name <END>
<BEG> append the user credential <END>
<BEG> returns the uri of the outer file <END>
<BEG> returns the root file for this file <END>
<BEG> factory method for create name instance <END>
<BEG> pops the root prefix off a uri <SEG> which have have the scheme remove <END>
<BEG> return returns the size of the buffer <END>
<BEG> non-javadoc see org apache common vfs2 randomaccesscontent # length <END>
<BEG> non-javadoc see java io datainput # skipbytes int <END>
<BEG> writes the content of a file to an outputstream <END>
<BEG> writes the content from a source file to a destination file <END>
<BEG> reads bytes from this input stream <END>
<BEG> throw ioexception if an error occurs <END>
<BEG> param b the byte array <END>
<BEG> check if uri param be already vfs uri <END>
<BEG> clear the list of suffix <END>
<BEG> set the recurse filter <END>
<BEG> whether to include hidden file < p > default : false return the includehidden <END>
<BEG> read a single byte <END>
<BEG> return the reason phrase of this status code <END>
<BEG> read from a char array <END>
<BEG> parse the name <END>
<BEG> create and return a new name use the suffix argument append to this name <END>
<BEG> append a segment to the path <END>
<BEG> tells if a scope be active or not <END>
<BEG> encapsulate application descriptor load from an application name <END>
<BEG> return the parameter annotation <END>
<BEG> returns the value at specified index <END>
<BEG> a http content type should contain a character set like application json ; charset=utf-8 <END>
<BEG> encodes the specified cookie into a cookie header value <END>
<BEG> batch encode cooky into set-cookie header value <END>
<BEG> checks if one { code class } can be assign to a variable of another { code class } <END>
<BEG> returns whether a give set of modifier implies package access <END>
<BEG> return the value part of this entry <END>
<BEG> associates the give string with the give string value <END>
<BEG> set the generic type param generictype <END>
<BEG> returns whether this attribute should appear in the result set return the showattributeinresultset <END>
<BEG> sets whether this attribute should appear in the result set param showattributeinresultset the showattributeinresultset to set <END>
<BEG> this overridden method see org kuali rice krad datadictionary validation constraint validdatapatternconstraint # getvalidationmessageparams <END>
<BEG> check whether an attribute value reader be present return true if reader be present <SEG> false otherwise <END>
<BEG> sets the path to the property that be serializable <SEG> relative to the { link workflowpropertygroup } that contain this object param path <END>
<BEG> see org kuali rice krad uif component componentsecurity # isviewauthz <END>
<BEG> setter for { link # isviewauthz } param viewauthz property value <END>
<BEG> indicates whether the component have view authorization and kim should be consult return true if the component have view authorization <SEG> false if not <END>
<BEG> setter for the view authorization flag param viewauthz <END>
<BEG> setter for the component code to use for detail param componentattribute <END>
<BEG> map of key value pair that should be add a role qualifier when do kim permission check for this component < p > any qualifier give here that will override qualifier with the same key that be derive by the system < p > return map < string <SEG> string > <END>
<BEG> setter for the map of additional role qualifier param additionalrolequalifiers <END>
<BEG> indicates whether the collection group line have view authorization and kim should be consult return true if the line have view authorization <SEG> false if not <END>
<BEG> setter for the view line authorization flag param viewlineauthz <END>
<BEG> removes all dialog from the list of dialog use in this vew <END>
<BEG> customize the give { link httpurlconnection } <SEG> obtain in the course of an { link # exists } <SEG> { link # contentlength } or { link # lastmodified } call <END>
<BEG> this implementation always return { code true } <END>
<BEG> this implementation throw a filenotfoundexception <SEG> assume that relative resource can not be create for this resource <END>
<BEG> map the route for http post request param path the path param route the route <END>
<BEG> maps a filter to be execute after any matching route param path the path param filter the filter <END>
<BEG> map the route for http post request param path the path param accepttype the accept type param route the route <END>
<BEG> maps a filter to be execute after any matching route param path the path param accepttype the accept type param filter the filter <END>
<BEG> maps an array of filter to be execute after any matching route param path the path param filter the filter <END>
<BEG> maps one or many filter to be execute after any matching route param filter the filter <END>
<BEG> assert a boolean expression <SEG> throw { code illegalstateexception } if the test result be { code false } <END>
<BEG> resolve the give class name a primitive class <SEG> if appropriate <SEG> accord to the jvm 's naming rule for primitive class <END>
<BEG> return { code true } if the supplied collection be not { code null } and not empty <END>
<BEG> resolve the give resource url to a { code java io file } <SEG> i e <END>
<BEG> replace all occurrence of a substring within a string with another string <END>
<BEG> take a string which be a delimited list and convert it to a string array <END>
<BEG> convenience method to return a collection a a delimited e g <END>
<BEG> returns the conversation id that be not find <END>
<BEG> merge two list <END>
<BEG> return the on exit action <END>
<BEG> param onexitactions the on exit action to set <END>
<BEG> gets the format type to be use to render date a strings <END>
<BEG> gets the name format string or date pattern to use to format the date <END>
<BEG> sets the date format that will format the date <END>
<BEG> sets the value at the index specify by the current node to the supply value <END>
<BEG> < p > sets the value of the expression evaluate against the bean <END>
<BEG> returns a new set instance contain the supplied element <END>
<BEG> url-decodes { code value } use the utf-8 charset <END>
<BEG> method responsible for use the information supply to the error object to find a message template <END>
<BEG> generated equal method that check all field and super equal <END>
<BEG> sets the maximum acceptable length for property value <END>
<BEG> sets the maximum acceptable < b > value < b > for numeric property value <END>
<BEG> gets the context map <END>
<BEG> gets the ognl value stack <END>
<BEG> returns a < code > collection < code > of interceptormapping object <END>
<BEG> return the pattern that be match <END>
<BEG> get a text from the resource bundle associate with this action <END>
<BEG> gets a message base on a key use the supplied args <SEG> a define in { link java text messageformat } <SEG> or <SEG> if the message be not find <SEG> a supply default value be return <END>
<BEG> returns the column number of an element sax flavor param attrs the element 's attribute that hold the location information return the element 's column number or < code > -1 < code > if < code > attrs < code > have no location information <END>
<BEG> returns the { link location } of an element dom flavor <END>
<BEG> returns the column number of an element dom flavor param elem the element that hold the location information return the element 's column number or < code > -1 < code > if < code > elem < code > have no location information <END>
<BEG> checks if a location be know <SEG> i e <END>
<BEG> return returns the messagekey for the validator <END>
<BEG> gets a property from the property file <END>
<BEG> removes all attribute from the session as well a clear entry in this map <END>
<BEG> returns a set of attribute from the http session <END>
<BEG> returns the session attribute associate with the give key or < tt > null < tt > if it do n't exist <END>
<BEG> saves an attribute in the session <END>
<BEG> returns the status of the background process <END>
<BEG> returns the low case equivalent of the specify ascii character <END>
<BEG> convenience for define a module <END>
<BEG> used by the framework at runtime <SEG> you should not need to invoke this method directly <END>
<BEG> match a pattern against a string and isolate wildcard replacement into a < code > map < code > <END>
<BEG> return gets the variation relate to the iterator state <END>
<BEG> sets https port param httpsport <END>
<BEG> return http port <END>
<BEG> enables or disables ajax debug mode <END>
<BEG> returns a < code > result < code > which pass <END>
<BEG> build a message proxy support { link message } <SEG> { link notmessage } and { link messagecontext } <END>
<BEG> builds a filter that match when selection start with to a give value <END>
<BEG> create a filter builder for the attribute by name return filter builder object <END>
<BEG> check if the current value start with the patternvalue or the referencevalue param patternvalue pattern param referencevalue reference value param currentvalue current value return boolean value for startswith check <END>
<BEG> create a matcher for not contain the pattern param pattern string pattern return matcher object <END>
<BEG> create a matcher filtering by a string that end with the matcher param matcher string matcher return matcher <END>
<BEG> create a matcher filtering by a string that not end with the string params param matcher string matcher return matcher <END>
<BEG> create a matcher filtering by a string that not end with the pattern params param pattern pattern return matcher <END>
<BEG> checks if the { link hookoptions } annotation be present on the type of the argument annotation <END>
<BEG> returns the { link chronounit } represent the argument { link timeunit } <END>
<BEG> retrieve the constructor of a class for give argument type <END>
<BEG> sets the job id <END>
<BEG> sets the target execution time of the job <END>
<BEG> returns the input stream - in this case the content of the url <END>
<BEG> sets the proxy host use to perform http request <END>
<BEG> sets whether socks proxy or not <END>
<BEG> refreshes the specified page use the specify url after the specified number of second <END>
<BEG> returns whether or not redirections will be follow automatically on receipt of a redirect status code from the server <END>
<BEG> gets the cipher suit enable for use on ssl connection <END>
<BEG> enables disables javascript support <END>
<BEG> returns the client 's current homepage <END>
<BEG> sets the proxy configuration for this client <END>
<BEG> sets the maximum byte to have in memory <SEG> after which the content be save to a file <END>
<BEG> sets the maximum number of { link page page } to cache in history <END>
<BEG> returns whether to automatically download image by default <SEG> or not <END>
<BEG> returns the screen width <END>
<BEG> sets the websocket maxtextmessagesize <END>
<BEG> sets the websocket maxbinarymessagesize <END>
<BEG> a web window have be close <END>
<BEG> returns the wrapped exception <END>
<BEG> implementation of a hashing method for variable length strings <END>
<BEG> method call to temporarily link this instance to a pool <SEG> to allow reusing of instance with the same reader <END>
<BEG> called to set state of 7-bit char in attribute value <END>
<BEG> this method be not support a this source be always a { linkdocument } instance <END>
<BEG> sets the character use to quote attribute value <END>
<BEG> sets the output to write the modified xml document to <END>
<BEG> adds the { link jaxbobjectmodifier } to be call when the specify xml path be encounted while parse the source <END>
<BEG> removes the { link jaxbobjectmodifier } from the event base processor <SEG> for the specified element path <END>
<BEG> removes all register { link jaxbobjectmodifier } instance from the event base processor <END>
<BEG> writes the opening tag of the specify { link org dom4j element } to the document <END>
<BEG> performs an xslt processing model match for the rule which match the give node the best <END>
<BEG> processes the result of the xpath expression in the give mode <END>
<BEG> maps the specify < code > key < code > to the specify < code > value < code > in this table <END>
<BEG> find the entry <SEG> then 1 <END>
<BEG> sets the system id of the document type param systemid document me ! <END>
<BEG> access a field of the class <END>
<BEG> sets the header string <END>
<BEG> deprecate always return null at this level <END>
<BEG> author kohsuke kawaguchi <END>
<BEG> records the new { code element < - > outer } peer association <END>
<BEG> creates a { link qname } from this <END>
<BEG> returns the prefix index of the specify uri <END>
<BEG> adds a new item to this pack scope <END>
<BEG> copies all of the mapping from the specify map to this map these mapping will replace any mapping that this map have for any of the key currently in the specified map <END>
<BEG> integer index = new integer requiredbindings size ; switch elemindex size { case 0 : elemindex = collections singletonmap qname <SEG> index ; break ; case 1 : elemindex = new hashmap elemindex ; default : elemindex put qname <SEG> index ; } addbinding bind ; initializedstate += math ab qname hashcode ; <END>
<BEG> object value ; integer index = integer elemindex get qname ; if index == null { value = valuelist getnonrequiredvalue qname ; } else { value = valuelist getrequiredvalue index intvalue ; } return value ; <END>
<BEG> evicts classinfo for a specific class <END>
<BEG> returns all prefix for the give uri <END>
<BEG> this will set the value of the < code > attribute < code > <END>
<BEG> detach this attribute from it parent <END>
<BEG> clear the current list <END>
<BEG> remove the < code > attribute < code > at < i > index < i > <END>
<BEG> this return a < code > string < code > representation of the < code > comment < code > <SEG> suitable for debug <END>
<BEG> package internal method to support building from source that be 100 % trust <END>
<BEG> increases the capacity of this < code > contentlist < code > instance <SEG> if necessary <SEG> to ensure that it can hold at least the number of item specify by the minimum capacity argument <END>
<BEG> return the index of the doctype element in the list <END>
<BEG> remove the object at the specified offset <END>
<BEG> set filter to match only jdom object that be legal element content <END>
<BEG> set visiblity of < code > cdata < code > object <END>
<BEG> return a filter that match any { link attribute } data <END>
<BEG> return a filter that match any { link element } data with the specify name and namespace <END>
<BEG> return a filter that match any string data <END>
<BEG> this will build a jdom text from an exist dom text param text < code > org w3c dom text < code > object return < code > text < code > - jdom text object since jdom2 <END>
<BEG> returns the system identifier of the entity where the parse error occur <END>
<BEG> returns the column number of the end of the text where the parse error occur <END>
<BEG> non-javadoc see org jdom2 input sax saxengine # isvalidating <END>
<BEG> returns the current { link org jdom2 jdomfactory } in use <END>
<BEG> returns the { link entityresolver } assign <SEG> or null if none <END>
<BEG> this set custom dtdhandler for the < code > builder < code > <END>
<BEG> this set a property on the sax parser <END>
<BEG> this build a document from the supply xmlstreamreader <END>
<BEG> arrays copyof be a java6 thing <END>
<BEG> set the domadapter currently set for this domoutputter <END>
<BEG> this convert the jdom < code > doctype < code > parameter to a dom documenttype <SEG> return the dom version <END>
<BEG> this convert the jdom < code > cdata < code > parameter to a dom cdatasection node <SEG> return the dom version <END>
<BEG> return the target contenthandler <END>
<BEG> return whether to declare namespaces <END>
<BEG> check and add < i > attribute < i > to the end of the list or replace an exist < code > attribute < code > with the same name and < code > namespace < code > <END>
<BEG> set the < code > attribute < code > at < i > index < i > to be < i > attribute < i > <END>
<BEG> sort the attribute use the supplied comparator <END>
<BEG> extract all value for key <END>
<BEG> get number of value <END>
<BEG> set the stack to the empty state <END>
<BEG> get namespace uri associate with this file <END>
<BEG> get list of value in order add <END>
<BEG> non-javadoc see java util abstractlist # add int <SEG> java lang object <END>
<BEG> get array of key in map <END>
<BEG> build iterator <END>
<BEG> find an entry in the table <END>
<BEG> constructs and return a simple array contain the same data a held in this stack <END>
<BEG> duplicates the object with the generic call <END>
<BEG> handle end element <END>
<BEG> clear <END>
<BEG> return return data <END>
<BEG> this function return true if some character data be load <END>
<BEG> is not support in this version of the implementation <END>
<BEG> creates a character object see org w3c dom text and append it to the current element in the dom tree <END>
<BEG> create a dom element and append it to the current element in the tree <END>
<BEG> is not support in this implementation <END>
<BEG> will set version on the document object when the dom node pass to this implementation support dom level3 api 's <END>
<BEG> param localname throw xmlstreamexception <END>
<BEG> read character into a portion of an array <END>
<BEG> warning <END>
<BEG> returns the iana encoding name for the specified java encoding name <END>
<BEG> removes a java to iana encode name mapping <END>
<BEG> return an appropriate instance of this class <SEG> depend on whether we 're on a jdk 1 1 or j2se 1 2 or later system <END>
<BEG> adds the specified symbol to the symbol table and return a reference to the unique symbol <END>
<BEG> sets the type of the attribute at the specified index <END>
<BEG> returns the non-normalized value of the attribute at the specified index <END>
<BEG> look up an attribute 's namespace uri by index <END>
<BEG> look up an attribute 's value by namespace name <END>
<BEG> look up an augmentation by attribute index <END>
<BEG> returns true if the symbol table already contain the specified symbol <END>
<BEG> determine whether a scheme conform to the rule for a scheme name <END>
<BEG> sets the field in the give qname structure with the value of the attribute name at the specified index <END>
<BEG> returns true if the attribute be specify in the instance document <END>
<BEG> return the name of an attribute in this list by position <END>
<BEG> look up the index of an attribute by xml 1 0 qualify name <END>
<BEG> look up the index of an attribute by namespace name <END>
<BEG> look up an attribute 's xml 1 0 qualify name by index <END>
<BEG> checks for duplicate expand names local part and namespace name pair in the attribute specification <END>
<BEG> returns the position in the table view where the give attribute name would be hash <END>
<BEG> sets the base system identifier <END>
<BEG> append param s <END>
<BEG> returns true if the content of this xmlstring structure and the specify string be equal <END>
<BEG> starts the dtd entity <END>
<BEG> return the current entity be scan <END>
<BEG> returns the iana encoding name that be auto-detected from the byte specify <SEG> with the endian-ness of that encode where appropriate <END>
<BEG> return the literal system identifier for the current document event <END>
<BEG> adds an internal entity declaration <END>
<BEG> checks whether an entity give by name be unparsed <END>
<BEG> a comment <END>
<BEG> a processing instruction <END>
<BEG> character content <END>
<BEG> retrieves an item from the item array <END>
<BEG> sets a specific attribute in the list <END>
<BEG> sets the comment text <END>
<BEG> returns the element a an array of item <END>
<BEG> retrieves an item from the container <END>
<BEG> gets an attribute for this element <END>
<BEG> sets the content type of this element <END>
<BEG> returns the external id for the entity <END>
<BEG> removes a value from the list of value <END>
<BEG> this method return true if it would be ok to call { link org codehaus staxmate in sminputcursor # getlocalname } of the iterator object <SEG> when it be position over this event <END>
<BEG> simplest factory method <SEG> which get call when a 1-argument element output method be call <END>
<BEG> can we create a simple validator ? <END>
<BEG> method that have to create a deep copy of the model <SEG> without share any of existing objects <END>
<BEG> method be override for two main reason : first <SEG> default method do not display public system id information <SEG> even if it exist <SEG> and second <SEG> default implementation can not handle nested location information <END>
<BEG> overridden standard method : <END>
<BEG> method call to reuse a pooled instance <END>
<BEG> finding a valid binding for the give uri be tricky <SEG> since mapping can be mask by others so <SEG> we need to first find most recent binding <SEG> from the fresh one <SEG> and then verify it 's still unmask ; if not <SEG> continue with the first loop <SEG> and so on <END>
<BEG> debugging : <END>
<BEG> ok <SEG> do it look like a full url ? <END>
<BEG> gets the year component <END>
<BEG> intended to be apply to an uppercase-starting identifier that may collide with a java lang <END>
<BEG> returns the link output stream <END>
<BEG> returns true if the specified character be a space character a amdended in the xml 1 1 specification <END>
<BEG> returns the intersection of this nameset with the 'with ' nameset <END>
<BEG> returns the field descriptor for the give name <SEG> e g <END>
<BEG> param tok ignore whether it be nrange or not <END>
<BEG> returns a option string <END>
<BEG> return the number of regular expression group <END>
<BEG> returns a qnameset of attribute that may exist in wildcard buchets and be not explicitly define in this schema type <END>
<BEG> sets the mime header content-location with the give value <END>
<BEG> returns all of the value for the specified header a an array of < code > string < code > object <END>
<BEG> returns all the < code > mimeheader < code > object whose name match a name in the give array of name <END>
<BEG> returns all of the < code > mimeheader < code > object whose name do not match a name in the give array of name <END>
<BEG> create a < code > soapelement < code > object initialize with the give local name <END>
<BEG> can one use the _nextsibling pointer to retrieve the next dom sibling return <END>
<BEG> decodes base64 data into octects param base64data byte array contain base64 data return array containind decode data <END>
<BEG> decodes hex data into octects param binarydata string contain hex data return string contain decode data <END>
<BEG> note <SEG> this be carefully align with hash code for all xsd : decimal primitive <END>
<BEG> sets a xml the id attribute <END>
<BEG> gets the code element <END>
<BEG> true if have code element <END>
<BEG> sets the code element <END>
<BEG> unsets the tsdir attribute <END>
<BEG> appends and return a new empty file element <END>
<BEG> sets ith interface element <END>
<BEG> appends and return a new empty value as xml a the last interface element <END>
<BEG> sets a xml the package element <END>
<BEG> unsets the name attribute <END>
<BEG> gets array of all schemalocation element <END>
<BEG> appends the value a the last schemalocation element <END>
<BEG> sets array of all attribute element warning : this method be not atomicaly synchronize <END>
<BEG> sets ith attribute element <END>
<BEG> the set of qnames include in the set even though they be within a namespace that be otherwise fully include in the set <END>
<BEG> true if this modeltransitionset contain all qnames <END>
<BEG> returns a new qnameset that be the inverse of this one <END>
<BEG> clears this qnamesetbuilder <END>
<BEG> sets the default year to be use when no year be specify <END>
<BEG> tests this qname for equality with another object <END>
<BEG> parse input stream to create xml fragment <END>
<BEG> parse input stream to create xml fragment use specify encode <END>
<BEG> parse reader to create xml fragment <END>
<BEG> retrieve a number-value interpretation of this xpath expression when evaluate against a give context <END>
<BEG> select only the first node that be selectable by this xpath expression <END>
<BEG> return true if the pattern match the give node <END>
<BEG> adds a pattern for an ancestor of the current context node use in this pattern <END>
<BEG> gets whether this property can be set <END>
<BEG> sets the value of this property for the specified object <END>
<BEG> since 1 4 10 deprecate as of 1 4 11 use { link # isversion int } <END>
<BEG> create the best matching reflectionprovider <END>
<BEG> get the xmloutputfactory implementation use normally by the current java runtime a standard <END>
<BEG> checks if the jvm support swing <END>
<BEG> checks if treemap putall be optimize for sortedmap argument <END>
<BEG> called when a node end <END>
<BEG> looks up the value of a property <END>
<BEG> allows an application to register a content event handler <END>
<BEG> deprecate as of 1 3 <SEG> use { link # getconverterfromattribute class <SEG> string <SEG> class } <END>
<BEG> deprecate as of 1 3 <SEG> use combination of { link # realmember class <SEG> string } and { link # getconverterfromitemtype string <SEG> class <SEG> class } <END>
<BEG> deprecate as of 1 3 1 <SEG> use { link # getconverterfromattribute class <SEG> string <SEG> class } <END>
<BEG> deprecate as of 1 4 9 use { link elementignoringmapper # omitfield class <SEG> string } <END>
<BEG> given a filename <SEG> the unescape method return the key which originate it <END>
<BEG> returns an unmodifiable collection of all chat listener currently register with this manager <END>
<BEG> returns a chat manager instance for this connection <END>
<BEG> registers a packet listener with this connection <END>
<BEG> removes a packet listener for send packet from this connection <END>
<BEG> get a map of all packet listener for send packet of this connection <END>
<BEG> retuns the path to the trust store file <END>
<BEG> sets the password to use to access the trust store file <END>
<BEG> sets the path to the keystore file <END>
<BEG> returns true if certificate present by the server be go to be check for their domain <END>
<BEG> sets if certificate present by the server be go to be check for their domain <END>
<BEG> returns if the reconnection mechanism be allow to be use <END>
<BEG> sets a callbackhandler to obtain information <SEG> such a the password or principal information during the sasl authentication <END>
<BEG> returns the socket factory use to create new xmppconnection socket <END>
<BEG> adds a filter to the filter list for the or operation <END>
<BEG> returns the subject correspond to the language <END>
<BEG> returns a set of all body in this message <SEG> include the default message body accessible from { link # getbody } <END>
<BEG> adds a body with a corresponding language <END>
<BEG> removes the body with the give language from the message <END>
<BEG> removes the body from the message and return true if the body be remove <END>
<BEG> returns all the language be use for the body <SEG> not include the default body <END>
<BEG> sets the xml : lang of this message <END>
<BEG> sets who the packet be be send from <END>
<BEG> removes a packet extension from the packet <END>
<BEG> sets the name associate with the active list set for the session <END>
<BEG> sets the name of the default list that apply to the user a a whole <END>
<BEG> sets whether the receiver allow or decline the use of an active list <END>
<BEG> sets whether the receiver allow or deny incoming iq stanza or not <END>
<BEG> returns the element identifier to apply the action <END>
<BEG> returns the first patcket extension that match the specified element name and namespace <SEG> or < tt > null < tt > if it do n't exist <END>
<BEG> initializes the writer in order to be use <END>
<BEG> cleans up all resource use by the packet writer <END>
<BEG> answer the default privacy list <END>
<BEG> removes an extension provider with the specified element name and namespace <END>
<BEG> returns an unmodifiable collection of all packetextensionprovider instance <END>
<BEG> sets the default subscription process mode to use when a new roster be create <END>
<BEG> returns the number of the group in the roster <END>
<BEG> cleans up all resource use by the roster <END>
<BEG> returns the roster subscription status of the entry <END>
<BEG> returns the roster entry associate with the give xmpp address or < tt > null < tt > if the user be not an entry in the group <END>
<BEG> builds and send the < tt > auth < tt > stanza to the server <END>
<BEG> sets the number of millisecond to wait for a response from the server <END>
<BEG> sets the number of milleseconds delay between send keep-alive request to the server <END>
<BEG> sets the default max size of a packet collector before it will delete the old packet <END>
<BEG> remove a sasl mechanism from the list to be use <END>
<BEG> sets the port of the local socks5 proxy <END>
<BEG> checks whether the map contain the specified value <END>
<BEG> calculates the new capacity of the map <END>
<BEG> gets the keyset view of the map <END>
<BEG> creates a key set iterator <END>
<BEG> writes the map data to the stream <END>
<BEG> checks whether the map be currently empty <END>
<BEG> returns a set view of this map 's key <END>
<BEG> purges stale mapping from this map before write operation <END>
<BEG> creates an value iterator <END>
<BEG> replaces the superclassm method to read the state of this class <END>
<BEG> returns the host name and port that the specify xmpp server can be reach at for server-to-server communication <END>
<BEG> removes a reader listener from this reader <END>
<BEG> adds a writer listener to this writer that will be notify when new string be send <END>
<BEG> parses a presence packet <END>
<BEG> parse the available compression method report from the server <END>
<BEG> removes a packet interceptor <END>
<BEG> returns the xmpperror asscociated with this exception <SEG> or < tt > null < tt > if there be n't one <END>
<BEG> get the descriptive test of this saslfailure <END>
<BEG> shutdown the queue <END>
<BEG> escape < code > input < code > for xml <END>
<BEG> returns true if the give charsequence be null or empty <END>
<BEG> returns true if all give charsequences be either null or empty <END>
<BEG> adds a default value to the question if the question be part of a form to fill out <END>
<BEG> returns the current nickname of the affiliate user if the user be currently in the room <END>
<BEG> returns the total number of message to receive in the history <END>
<BEG> sets the number of second to use to filter the message receive during that time <END>
<BEG> non-javadoc see org jivesoftware smack packet packetextension # getnamespace <END>
<BEG> sets a value give the name <END>
<BEG> returns the xml element name of the extension sub-packet root element <END>
<BEG> returns the xml namespace of the extension sub-packet root element <END>
<BEG> returns the xml representation of a personal event publish accord the specification <END>
<BEG> returns the xml representation of a xhtml extension accord the specification <END>
<BEG> get the subscription this event be associate with <END>
<BEG> sets the agent 's current status with the workgroup <END>
<BEG> this be a utility method that compare two booleans when one or both of the object might be < code > null < code > the result of this method be determine a follow : < ol > < li > if < code > b1 < code > and < code > b2 < code > be both true or neither < code > b1 < code > nor < code > b2 < code > be true <SEG> return < code > false < code > <END>
