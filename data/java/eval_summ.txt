<BEG> decrements the count of the latch <SEG> release all wait thread if the count reach zero <END>
<BEG> returns a generator produce uniform random value with the same property a { link java util random # nextlong } <END>
<BEG> removes the mapping for the specify key <END>
<BEG> removes node if it key or value be null <END>
<BEG> resizes the thread pool to the specify value param poolsize the new pool size <END>
<BEG> executable <END>
<BEG> throw nosuchelementexception  <END>
<BEG> noinspection unusedparameters <END>
<BEG> gets the current value <END>
<BEG> sets to the give value <END>
<BEG> eventually set to the give value <END>
<BEG> executes the computation without set it result <SEG> and then reset this future to initial state <SEG> fail to do so if the computation encounter an exception or be cancel <END>
<BEG> performs any further cleanup follow run state transition on invocation of shutdown <END>
<BEG> returns true if this pool allow core thread to time out and terminate if no task arrive within the keepalive time <SEG> be replace if need when new task arrive <END>
<BEG> sets the maximum allow number of thread <END>
<BEG> returns the thread keep-alive time <SEG> which be the amount of time that thread in excess of the core pool size may remain idle before be terminate <END>
<BEG> returns the task queue use by this executor <END>
<BEG> tries to remove from the work queue all { link future } task that have be cancel <END>
<BEG> returns the enum constant of this type with the specify name <END>
<BEG> lists up all the element annotate by the give annotation <END>
<BEG> returns an optionally simplify string that represent this annotation instance <END>
<BEG> returns the string representation of the underlie value type <END>
<BEG> returns an array of the constant name <SEG> in string form <SEG> that represent the java enumeration of each array element the individual element value be the same a the one return by { link enum # name } <END>
<BEG> constructs a mock classinfo use the pass value <END>
<BEG> returns a boolean indicate the presence of a no-arg constructor <SEG> if support by the underlying index store <END>
<BEG> returns the enclose method of this class if it be a local <SEG> or anonymous class <SEG> and it be declare within the body of a method or constructor <END>
<BEG> returns the pertypewithin aspect param aspectclass aspect class for which to discover the aspect instance param pertypewithin class return the aspect instance throw noaspectboundexception if no such aspect <SEG> or no aspect bound <END>
<BEG> this method be call to implicitly associate the closure with the joinpoint a require for aj aspect proceed param flag indicate whether this target find at joinpoint and bound return the associated proceedingjoinpoint <END>
<BEG> return signature and value <SEG> something like lp color ; red <END>
<BEG> for testing only : tells you if the annotation have be inflate to an object graph <END>
<BEG> returns the same a tostring true except that the attribute information be n't included line number <END>
<BEG> return string representation <SEG> i e <SEG> a list of thrown exception <END>
<BEG> hunts for a signature attribute on the member and return it content <END>
<BEG> return class in binary format <END>
<BEG> returns true if this class represent an annotation <SEG> i e <END>
<BEG> sets the classrepository which load the javaclass <END>
<BEG> param start_pc specify range where the local variable be valid <END>
<BEG> return source file name <END>
<BEG> return field object with give name <SEG> or null if not find <END>
<BEG> we consider to local variable to be equal <SEG> if the use the same index and be valid in the same range <END>
<BEG> param name name of file to search for <SEG> e g <END>
<BEG> find an already define javaclass <END>
<BEG> returns the delimiter for the handleproviderdelimiter <SEG> for example aspect return ' ' and method return '~ ' <END>
<BEG> create and handle exception message ignore if handler be null <END>
<BEG> test whether the version be a specify by any first argument <END>
<BEG> convert string [ ] path to file [ ] a offset of base directory param basedir the non-null file base directory for file to create with paths param path the string [ ] of path to create param suffix the string [ ] of suffix to limit source to - ignore if null return file [ ] with same length a path <END>
<BEG> copy file to file <END>
<BEG> make a new temporary directory in the same directory that the system use for temporary file <SEG> or if that file <SEG> in the current directory <END>
<BEG> write content to file <SEG> return null on success or error message otherwise <END>
<BEG> reads a boolean array with our encode <END>
<BEG> shorthand for if false <SEG> throw illegalargumentexception throw illegalargumentexception { message } if test be false <END>
<BEG> get system property a boolean <SEG> but use default value where the system property be not set <END>
<BEG> create or initialize a process controller to run a process in another vm asynchronously <END>
<BEG> return a resolvedmember represent the synthetic getter for the field <END>
<BEG> return an object that can access a particular value of this annotation <END>
<BEG> we need to determine if any method in this type require bridge method - this method should only be call if necessary to do this calculation <SEG> i e <END>
<BEG> retrieves the declared interface - this allow for the generic signature on a type <END>
<BEG> weaves new parent and annotation onto a type declare parent and declare type algorithm : 1 <END>
<BEG> private <END>
<BEG> optimized packing that do a 'local packing ' of the code rather than build a brand new method and pack into it <END>
<BEG> for test only <SEG> so that we can verify dump content after compilation have completely finish <END>
<BEG> non-javadoc see org aspectj weaver pattern pointcut # fastmatch org aspectj weaver pattern fastmatchinfo <END>
<BEG> assert val > = 0 & & key > = 0 <END>
<BEG> creates an iterator i base on a base iterator a and a getter g i return <SEG> in order <SEG> forall i in i i : : forall i ' in g i recur i ' <SEG> g <END>
<BEG> return the number of entry still in the weavingadaptors map <END>
<BEG> load and cache the aop xml property accord to the classloader visibility rule param loader <END>
<BEG> return the bytecode for the concrete aspect <END>
<BEG> simply call weave adaptor back to parse aop xml param weaver param loader <END>
<BEG> turn off cache <END>
<BEG> return true if this member equal the one supply in every respect other than the declare type <END>
<BEG> non-javadoc see org aspectj weaver pattern pointcut # concretize1 org aspectj weaver resolvedtype <SEG> org aspectj weaver intmap <END>
<BEG> set forcerewrite if you want to override the checking for something already in dnf useful for some testing repeated processing of something already in dnf be expensive it end up be do for every pointcut on every incremental compile - so let 's not do it if we do n't have to <END>
<BEG> the guard here be go to be the hasannotation test - if it get through which we can not determine until runtime then we must have a typeannotationaccessvar in place - this mean we must always have one in place <END>
<BEG> non-javadoc see org aspectj weaver shadow # getargvar int <END>
<BEG> note : only override by name subtype <END>
<BEG> look up a member <SEG> take into account any itds on this type <END>
<BEG> check : 1 that we do n't have any abstract type mungers unless this type be abstract <END>
<BEG> look up the actual occurence of a particular type in the hierarchy for 'this ' type <END>
<BEG> return true if the parameterization of this type include a member type variable <END>
<BEG> create a scope from a set of urls and aspect url <END>
<BEG> register a new pointcut designator handler with this parser <END>
<BEG> return the signature for a reference to a type variable <SEG> which be simply : tname ; there be no bound info include <SEG> that be in the signature of the type variable itself <END>
<BEG> return the list of detail of try catch block which end at this label param label the label return trigger end detail <END>
<BEG> getter for list of transforms apply for this script <END>
<BEG> delete any transforms associate with a specific trigger class and loader for deletion <END>
<BEG> call by a check adapter to create a rule specific to a give trigger method <END>
<BEG> check whether verbose mode for rule processing be enable or disabled return true if verbose mode be enable etherwise false <END>
<BEG> notify a change to an org jboss byteman <END>
<BEG> lookup a binding in the list by name param name the name of the bound variable return the binding or null if no bidngin exist with the supply name <END>
<BEG> evaluate the expression by interpret the expression tree param helper an execution context associate with the rule whcih contain a map of current binding for rule variable and another map of their declare type both of which be index by varoable name <END>
<BEG> enter this rendezvous <END>
<BEG> mark a complete rendezvous to indicate that it have be remove <END>
<BEG> returns an accessor string for this type <END>
<BEG> return null if a constructor specific annotation be not define <END>
<BEG> register class ' byte code redefinition <END>
<BEG> return this pointcut 's expression <END>
<BEG> set the { link classfilter } to use for this pointcut <END>
<BEG> start thread that will save jamon data monitorcomposite <END>
<BEG> note this create 2 exception monitor and the more specific one be return <END>
<BEG> returns label <SEG> value <SEG> time a an object [ ] of 3 value <END>
<BEG> param label jamon label param unit jamon unit param value string represent the date metric to return lastaccess <SEG> firstaccess <END>
<BEG> returns true if any listener exist <END>
<BEG> returns true if listener type exist value max min maxactive or listener exists by name <END>
<BEG> it just take one of the monitor to not be enable for the composite to be false <END>
<BEG> returns each key in the map a a header element in the list <END>
<BEG> returns a string representation of this object : jamon key <SEG> firstname=steve <SEG> lastname=souza <SEG> age=44 <END>
<BEG> note the only valid comparator to be pass be jamonarraycomparator <END>
<BEG> get the number of sql statement that can be store in the buffer before the old entry must be remove <END>
<BEG> returns the number of match or 0 if there be none <END>
<BEG> return an array that have 1 all sql <SEG> 2 the sql type <SEG> 3 the parsed sql <SEG> 4 any matched string if they exist <END>
<BEG> add string to see if it match in the query <END>
<BEG> get the header that can be use to display the buffer <END>
<BEG> param array array to do a string trim for all element return trim array do in place <END>
<BEG> returns the current time in millisecond <END>
<BEG> the default clock to use <END>
<BEG> resets variable maintain the sum to zero <END>
<BEG> creates a new { link concurrentmap } implementation for use inside the registry <END>
<BEG> given a { link metric } <SEG> register it under the give name <END>
<BEG> writes the value of the snapshot to the give stream <END>
<BEG> cases the busy field from 0 to 1 to acquire lock <END>
<BEG> returns the weighted arithmetic mean of the value in the snapshot <END>
<BEG> pads the specified int to two digit <SEG> prefix with 0 if the value be less than 10 <END>
<BEG> gets the pattern object use by this stopwatchparser to parse stopwatch message string <END>
<BEG> gets the matchresult object that be return when the pattern use by this parser match the specified message <END>
<BEG> this utility method provide the standard mapping between log4j level name which perf4j use a the standard set of possible level to the close corresponding java util log level <END>
<BEG> the suffix to append to the tag if normalandslowsuffixesenabled=true and elapsedtime & gt ; = timethreshold and timethreshold & gt ; 0 <END>
<BEG> if normalandslowsuffixesenabled and timethreshold > 0 and elapsedtime > = timethreshold then append slow suffix < br > if normalandslowsuffixesenabled and timethreshold < =0 or elapsedtime < timethreshold then append normal suffix < br > otherwise <SEG> use the superclass 's tag <END>
<BEG> register a new monitor in the registry <END>
<BEG> this class be immutable so we cache the hash code after the first time it be compute <END>
<BEG> get the total sum of the value record <END>
<BEG> get the size of the buffer that we should use <END>
<BEG> returns true if this map have no entry <END>
<BEG> ensures the truth of an expression involve one or more parameter to the call method <END>
<BEG> gets all field from class and it super class <END>
<BEG> returns an unmodifiable view of the list compose of element <END>
<BEG> create a { link abstractlistassert } <END>
<BEG>  < p > example : < pre > < code class='java ' > assertion will pass assertthat bigdecimal zero iszero ; assertion will fail assertthat new bigdecimal & quot ; 8 00 & quot ; iszero ; < code > < pre > <END>
<BEG> verifies that the actual array do not contain the give value <END>
<BEG> verifies that the actual array do not contain the give value at the give index <END>
<BEG> verifies that the actual { code charsequence } be : < ul > < li > < b > not < b > { code null } < li > < li > < b > not < b > empty < li > < li > contains at least one non-whitespace character accord to { link character # iswhitespace char } < li > < ul > < p > the definition of this method have change <SEG> the old behaviour be now under { link # doesnotcontainonlywhitespaces } <END>
<BEG> verifies that the actual { code charsequence } have a length that 's the same a the number of element in the give array <END>
<BEG> verifies that the actual { code charsequence } be a substring of the give one opposite assertion of { link # contain charsequence contains charsequence c } <END>
<BEG> verifies that the actual { code class } be not final do not have { code final } modifier <END>
<BEG> verifies that the actual { code class } have the give class a direct superclass a in { link class # getsuperclass } <END>
<BEG> verifies that the actual { code class } have the give method include inherit whatever their visibility be <END>
<BEG> waits if necessary for at most the give time for this future to complete <SEG> and then return it result for futher assertion <END>
<BEG> verifies that the { link completablefuture } have complete exceptionally and return a throwable assertion object allow to check the throwable that have cause the future to fail <END>
<BEG> verifies that the actual { code date } be in the give period define by start and end date < br > to include start in the period set inclusivestart parameter to < code > true < code > < br > to include end in the period set inclusiveend parameter to < code > true < code > < br > < p > example : < pre > < code class='java ' > simpledateformat format = new simpledateformat & quot ; yyyy-mm-dd & quot ; ; assertion will pass assertthat format parse & quot ; 2000-01-01 & quot ; isbetween format parse & quot ; 2000-01-01 & quot ; <SEG> format parse & quot ; 2100-12-01 & quot ; <SEG> true <SEG> true ; assertthat format parse & quot ; 2000-01-01 & quot ; isbetween format parse & quot ; 1900-01-01 & quot ; <SEG> format parse & quot ; 2000-01-01 & quot ; <SEG> true <SEG> true ; assertthat format parse & quot ; 2000-01-01 & quot ; isbetween format parse & quot ; 1900-01-01 & quot ; <SEG> format parse & quot ; 2100-01-01 & quot ; <SEG> false <SEG> false ; assertion will fail assertthat format parse & quot ; 2000-01-01 & quot ; isbetween format parse & quot ; 2000-01-01 & quot ; <SEG> format parse & quot ; 2100-12-01 & quot ; <SEG> false <SEG> true ; assertthat format parse & quot ; 2000-01-01 & quot ; isbetween format parse & quot ; 1900-01-01 & quot ; <SEG> format parse & quot ; 2000-01-01 & quot ; <SEG> true <SEG> false ; < code > < pre > param start the period start <SEG> expect not to be null <END>
<BEG> verifies that the actual { code date } be not in the give period define by start and end date < br > to include start in the period set inclusivestart parameter to < code > true < code > < br > to include end in the period set inclusiveend parameter to < code > true < code > < br > < p > example : < pre > < code class='java ' > simpledateformat format = new simpledateformat & quot ; yyyy-mm-dd & quot ; ; assertion will pass assertthat format parse 2000-01-01 isnotbetween format parse 2000-01-01 <SEG> format parse 2100-12-01 <SEG> false <SEG> true ; assertthat format parse 2000-01-01 isnotbetween format parse 1900-01-01 <SEG> format parse 2000-01-01 <SEG> true <SEG> false ; assertion will fail assertthat format parse 2000-01-01 isnotbetween format parse 2000-01-01 <SEG> format parse 2100-12-01 <SEG> true <SEG> true ; assertthat format parse 2000-01-01 isnotbetween format parse 1900-01-01 <SEG> format parse 2000-01-01 <SEG> true <SEG> true ; assertthat format parse 2000-01-01 isnotbetween format parse 1900-01-01 <SEG> format parse 2100-01-01 <SEG> false <SEG> false ; < code > < pre > param start the period start inclusive <SEG> expect not to be null <END>
<BEG> verifies that the actual { code date } hour of day be equal to the give hour of day 24-hour clock <END>
<BEG> verifies that actual and give { code date } have same month and year field <END>
<BEG> verifies that actual and give { code date } be chronologically in the same hour i e <END>
<BEG> verifies that actual and give { code date } have same hour <SEG> day <SEG> month and year field value <END>
<BEG> verifies that actual and give { code date } be chronologically strictly in the same second i e <END>
<BEG> same a { link # hasparent java io file } but take care of convert give { code string } a { code file } for you < p > example : < pre > < code class='java ' > file xfile = new file & quot ; mulder xfile & quot ; ; assertion will pass assertthat xfile hasparent & quot ; mulder & quot ; ; assertion will fail assertthat xfile hasparent & quot ; scully & quot ; ; < code > < pre > param expect the expected parent file path <END>
<BEG> extract the value of the give field or property from the iterable 's element under test into a new iterable <SEG> this new iterable become the iterable under test <END>
<BEG> allows to set a specific comparator to compare property or field of element with the give type <END>
<BEG> filter the iterable under test keep only element match the give assertion specify with a { link consumer } <END>
<BEG> verifies that the actual array contain only the give value and nothing else <SEG> in any order and ignore duplicate i e <END>
<BEG> filter the array under test into a list compose of element have a property or field match the filter express with the { link filteroperator } <SEG> the property field be specify by { code propertyorfieldname } parameter <END>
<BEG> deprecate prefer call { link # usingrecursivecomparison } for compare object field by field a it offer more flexibility <SEG> good reporting and an easy to use api <END>
<BEG> use field property by field property comparison include inherited field property instead of rely on actual type a < code > equal < code > method to compare the { link optional } value 's object for incoming assertion check <END>
<BEG> verifies that the actual { link optional } be not { code null } and not empty and return an new assertion instance to chain assertion on the optional value <END>
<BEG> verifies that the content of the actual { code path } be equal to the content of the give one <SEG> the comparison be do at the binary level < br > for text file <SEG> use { link # hassametextualcontentas path } or { link # hassametextualcontentas path <SEG> charset } <END>
<BEG> assert that the tested { link path } be a readable file <SEG> it check that the file exist accord to { link files # exist path <SEG> linkoption } and that it be readable accord to { link files # isreadable path } <END>
<BEG> assert that the tested { link path } exist accord to { link files # exist path <SEG> linkoption files # exist path } < p > < strong > note that this assertion will follow symbolic link before assert the path 's existence < strong > < p > < p > on windows system <SEG> this have no influence <END>
<BEG> assert that the tested { link path } be a regular file <END>
<BEG> verifies that the { link predicate } evaluate all give value to { code true } <END>
<BEG> verifies that the actual { code throwable } have a cause that refer to the give one <SEG> i e <END>
<BEG> verifies that the message of the actual { code throwable } do not contain the give content or be { code null } <END>
<BEG> verifies that the stack trace of the actual { code throwable } contain the give description <END>
<BEG> verifies that the actual value be not equal to the give one accord to the comparator in use <END>
<BEG> only delegate to { link fail # failbecauseexceptionwasnotthrown class } so that assertions offer a full feature entry point to all assertj feature but you can use fail if you prefer <END>
<BEG> globally set whether the use of private field be allow for comparison <END>
<BEG> creates a new instance of { link completablefutureassert } assumption for a { link java util concurrent completionstage } by convert it to a { link completablefuture } and return a { link completablefutureassert } <END>
<BEG> verifies that the actual atomicintegerarray contain exactly the give value and nothing else <SEG> < b > in any order < b > < br > < p > example : < pre > < code class='java ' > assertion will pass assertthat new atomicintegerarray new int [ ] { 1 <SEG> 2 } containsexactlyinanyorder 1 <SEG> 2 ; assertthat new atomicintegerarray new int [ ] { 1 <SEG> 2 <SEG> 1 } containsexactlyinanyorder 1 <SEG> 1 <SEG> 2 ; assertion will fail assertthat new atomicintegerarray new int [ ] { 1 <SEG> 2 } containsexactlyinanyorder 1 ; assertthat new atomicintegerarray new int [ ] { 1 } containsexactlyinanyorder 1 <SEG> 2 ; assertthat new atomicintegerarray new int [ ] { 1 <SEG> 2 <SEG> 1 } containsexactlyinanyorder 1 <SEG> 2 ; < code > < pre > param value the give value <END>
<BEG> verifies that all the element in the actual atomicreferencearray belong to the specify type match include subclass of the give type <END>
<BEG> creates a new instance of < code > { link org assertj core api charsequenceassert } < code > from a { link stringbuilder } <END>
<BEG> creates a new < code > { link filters } < code > with the { link iterable } to filter <END>
<BEG> sets whether actual null field be ignore in the recursive comparison <END>
<BEG> returns the set of the object under test field type to ignore in the recursive comparison <END>
<BEG> makes the recursive comparison to ignore the give object under test field <END>
<BEG> makes the recursive comparison to ignore collection order in all field in the object under test <END>
<BEG> makes the recursive comparison to ignore collection order in the object under test specify field <END>
<BEG> verifies that the stack trace of the actual { code throwable } contain with the give description <END>
<BEG> assert that an exception of type t be throw by the { code throwingcallable } and allow to chain assertion on the thrown exception <END>
<BEG> indicates that the provide { link java util optional } should be empty <END>
<BEG> indicates that the provide { link java util optional } do not contain the provided argument <END>
<BEG> asserts that the actual value satisfy the give < code > { link condition } < code > <END>
<BEG> asserts that the number of element in the give { code iterable } be equal to the expect one <END>
<BEG> verifies that the give { code list } satisfy the give < code > { link condition } < code > at the give index <END>
<BEG> asserts that the give array contain all the element of the give { code iterable } <SEG> in any order <END>
<BEG> verifies that the give object be not an instance of any of the give type <END>
<BEG> verifies that the actual value be not exactly an instance of give type <END>
<BEG> asserts that the size of the give { code charsequence } be less than or equal to the expect size param info contain information about the assertion <END>
<BEG> clear all formatters register per type with { link # registerformatterfortype class <SEG> function } <END>
<BEG> formats the give date use the iso 8601 date-time format with millisecond yyyy-mm-dd't'hh : mm : s : sss < br > method be synchronize because simpledateformat be not thread safe sigh <END>
<BEG> patch the original text with give patch param < t > the type of element <END>
<BEG> returns all the non- { code null } element in the give { link iterable } <END>
<BEG> create an array from an { link iterable } <END>
<BEG> loads the text content of a url into a list of string <SEG> each string corresponding to a line <END>
<BEG> verifies that the actual { code boolean } array do not contain the give value <END>
<BEG> verifies that the { code character } value be great than the give one <END>
<BEG> returns the number of element in the actual collection <END>
<BEG> attempts to find the give object in the give < code > { link collection } < code > <SEG> return the one that be not find <END>
<BEG> verifies that the actual < code > { link comparable } < code > be equal to the give one <END>
<BEG> verifies that the actual group of value be empty <END>
<BEG> returns the number of element in the actual { code string } <END>
<BEG> assert that the actual object be lenient equal to give one by compare actual and other field include inherited field except the give ignore field <END>
<BEG> assert that the actual object be equal field by field to another object <SEG> inherit field be take into account <END>
<BEG> returns the width of the narrow module <END>
<BEG> returns the index of a character within the character set <END>
<BEG> return the character use a the check digit marker <END>
<BEG> enables or disable the use of the checksum in the human-readable message <END>
<BEG> calculates the checksum for a message to be encode a an code39 barcode <END>
<BEG> encodes a single character <END>
<BEG> sets the minimum symbol size that be to be produce <END>
<BEG> determines the number of consecutive character that be encodable use numeric compaction <END>
<BEG> see org krysalis barcode4j impl abstractbarcodebean # getbarwidth int <END>
<BEG> returns the bearer bar width <END>
<BEG> see org krysalis barcode4j impl upcean upcean <END>
<BEG> generates a barcode a bitmap image <END>
<BEG> returns the canvas provider in use <END>
<BEG> returns the value convert to internal unit mm <END>
<BEG> indicates whether a format be a bitmap format <END>
<BEG> returns the data point at by a url a a byte array <END>
<BEG> return size in pixel width and height <END>
<BEG> sets bite i <END>
<BEG> param from first bit to check return index of first bit that be set <SEG> start from the give index <SEG> or size if none be set at or beyond this give index see # getnextunset int <END>
<BEG> reverses all bit in the array <END>
<BEG> return index of next bit in current byte which would be read by the next call to { link # readbits int } <END>
<BEG> return how many bit of { link # getrawbytes } be valid ; typically 8 time it length since 3 3 0 <END>
<BEG> param array value to sum return sum of value in array <END>
<BEG> return evaluation of this polynomial at a give point <END>
<BEG> overrides the symbol info set use by this class <END>
<BEG> this version of decode honor the intent of reader decode binarybitmap in that it pass null a a hint to the decoder <END>
<BEG> param target encode black white pattern into this array param pos position to start encode at in { code target } param pattern length of black white run to encode param startcolor start color - false for white <SEG> true for black return the number of element add to target <END>
<BEG> this function scale the row param scale how much you want the image to be scale <SEG> must be great than or equal to 1 <END>
<BEG> return count of segment <SEG> -1 if not set <END>
<BEG> converts an array of byte into a string represent the hexadecimal value of each byte in order <END>
<BEG> converts an array of character byte represent hexadecimal value into an array of byte of those same value <END>
<BEG> returns a charset for the name charset <END>
<BEG> encrypts a password in a crypt 3 compatible way <END>
<BEG> calculates the sha-1 digest and return the value a a { code byte [ ] } <END>
<BEG> reads through a file and return the digest for the data param data data to digest return the digest a a hex string throw ioexception on error reading from the stream since 1 11 <END>
<BEG> indicates the strict mode for this { link nysiis } encoder <END>
<BEG> encodes an object use the refined soundex algorithm <END>
<BEG> retrieves the refined soundex code for a give string object <END>
<BEG> encodes an object into use the percent-encoding <END>
<BEG> encodes an array of byte into an array of quoted-printable 7-bit character <END>
<BEG> decodes a quoted-printable string into it original form use the specify string charset <END>
<BEG> applies an rfc 1522 compliant decode scheme to the give string of text <END>
<BEG> opens the give name resource from the give class <END>
<BEG> returns { literal true } if this type of attribute be a code attribute <END>
<BEG> visits the enclose class of the class <END>
<BEG> visits an annotation of the class <END>
<BEG> returns the internal name of the class that own the field or method designate by this handle <END>
<BEG> adds a source line number correspond to this label <END>
<BEG> puts the module <SEG> modulepackages and modulemainclass attribute generate by this modulewriter in the give bytevector <END>
<BEG> visits the type of the super class <END>
<BEG> visits a type argument of the last visited class or inner class type <END>
<BEG> returns the result { link type # getargumentsandreturnsizes } on { link # value } <END>
<BEG> param bytes the raw byte that represent the double value <END>
<BEG> print debug information depend on ` javaclass debug ' <END>
<BEG> return annotations on the class since 6 0 <END>
<BEG> return a { link method } correspond to java lang reflect method if any <END>
<BEG> param parameter_annotation_table the entry to set in this parameter annotation <END>
<BEG> return exception this instruction may cause <END>
<BEG> return the finally build up java class object <END>
<BEG> return major version number of class file <END>
<BEG> add observer for this object <END>
<BEG> call notify method on all observer <END>
<BEG> return increment factor <END>
<BEG> return null <SEG> if there be no targeters <END>
<BEG> since invokedynamic do n't refer to a reference type <SEG> just return java lang object <SEG> a that be the only type we can say for sure the reference will be <END>
<BEG> return list of instruction still be target <END>
<BEG> returns the instructioncontext [ ] of a give instructionhandle [ ] <SEG> in a naturally ordered manner <END>
<BEG> assures the generic precondition of a loadclass instance <END>
<BEG> merges another stack state into this instance 's stack state <END>
<BEG> implementing verifierfactoryobserver <END>
<BEG> this method implement a demonstration program of how to use the verifierfactoryobserver <END>
<BEG> < p > creates a new interface type that extend the provided interface <END>
<BEG> returns { code true } if this manifestation represent a { code final } type <END>
<BEG> returns { code true } if this state be mandate <END>
<BEG> returns the type variable 's upper bound <END>
<BEG> enables bootstrap injection for this class reload strategy <END>
<BEG> creates a new stack manipulation to load the supplied value onto the stack <END>
<BEG> loads a reference to the { code this } reference what be only meaningful for a non-static method <END>
<BEG> returns a new version of this equal method that compare field with { link string } type prior to field with non- { link string } type <END>
<BEG> defines a field accessor where any access be target to a field that match the method name with the java specification for bean property <SEG> i e <END>
<BEG> returns the origin type from an instrumented method <END>
<BEG> returns a new version of this hash code method implementation that use the give multiplier onto any give hash code before add a field 's hash code <END>
<BEG> requires the bootstrap method to bootstrap a method that take the specify { code boolean } arguments a it next parameter <END>
<BEG> < p > requires the bootstrap method to bootstrap a method that take the specified argument a it next parameter <END>
<BEG> passes reference to { code this } onto the operand stack where the instance be represent a the give type <END>
<BEG> matches a { link namedelement } name against a regular expression <END>
<BEG> matches a { link bytecodeelement } that be visible to a give { link typedescription } <END>
<BEG> matches an { link annotationsource } to declare any annotation that match the give matcher <END>
<BEG> matches a { link methoddescription } by the number of it parameter <END>
<BEG> matches any method that be virtual <SEG> i e <END>
<BEG> only match java 8 default method <END>
<BEG> matches a type by a another matcher that be apply on any of it declared field <END>
<BEG> matches a module if it exist <SEG> i e <END>
<BEG> represents the supply { code java lang module } a an instance of this class and validate that the supplied instance really represent a java { code module } <END>
<BEG> checks if the current vm support the { code java lang module } api <END>
<BEG> creates a class reader for the give binary representation of a class file <END>
<BEG> returns a string which be incorporate into every generated class name <END>
<BEG> clears a specified bit in < code > accflags < code > <END>
<BEG> converts a javassist modifier into a javassist bytecode accessflag <END>
<BEG> converts a javassist bytecode accessflag into a javassist modifier <END>
<BEG> sets the type of the stack position param index the position on the stack param type the type to set <END>
<BEG> merges all type on the stack and local variable table of this frame with that of the specify type <END>
<BEG> always return null since this type be never use for an array <END>
<BEG> obtains the member value with the give name <END>
<BEG> obtains the constant pool give to the constructor <END>
<BEG> obtains the name of the enum constant value <END>
<BEG> writes { code path_length } of { code type_path } <END>
<BEG> adds an annotation <END>
<BEG> copies a 32bit integer <END>
<BEG> discards all attribute <SEG> associate with both the class file and the member such a a code attribute and exception attribute <END>
<BEG> just append a field to the class <END>
<BEG> appends a method to the class <END>
<BEG> makes a new iterator for read this code attribute <END>
<BEG> adds a new < code > constant_class_info < code > structure <END>
<BEG> returns the method name specify by < code > method_index < code > <END>
<BEG> copies all constant pool item to a give new constant pool and replace the original item with the new one <END>
<BEG> returns the class name indicate by < code > class [ nth ] inner_class_info_index < code > <END>
<BEG> returns the index into the code array at which the code for the specified line or the near line after the specified one begin <END>
<BEG> for each < code > local_variable_table [ i ] index < code > <SEG> this method increase < code > index < code > by < code > delta < code > <END>
<BEG> returns the line number of the source line correspond to the specify bytecode contain in this method <END>
<BEG> maps a class name to another name in this hashtable <END>
<BEG> appends an object to a list <END>
<BEG> makes it valid to write return < expr > ; for a void method <END>
<BEG> returns the major version of the class file target by this compilation <END>
<BEG> returns the jvm-internal representation of this super class name <END>
<BEG> a method body be not parse <END>
<BEG> expression : conditional expr | conditional expr assign op expression right-to-left <END>
<BEG> returns the < code > methodinfo < code > represent this method constructor in the class file <END>
<BEG> if this object represent an array <SEG> this method return the component type of the array <END>
<BEG> returns < code > true < code > if this class extend or implement < code > clazz < code > <END>
<BEG> determines whether the class directly or indirectly extend the give class <END>
<BEG> returns the field with the specify name and type <END>
<BEG> returns the < code > ctclass < code > object represent the type specify by the cast <END>
<BEG> returns true if the call method be of a superclass of the current class <END>
<BEG> adds a translator <SEG> which be call whenever a class be load <END>
<BEG> loads a class with an instance of < code > loader < code > and call < code > main < code > of that class <END>
<BEG> requests the class loader to load a class <END>
<BEG> the swing component must be load by a system class loader <END>
<BEG> interprets the give type descriptor represent a method signature <END>
<BEG> whether the class be cache in this pooled param classname the class name return the cached class <END>
<BEG> removes the mapping for the give < code > key < code > from this map <SEG> if present <END>
<BEG> reset the loader to be param loader <END>
<BEG> adds a constructor with the same signiture a the give constrcutor <SEG> include exception type < p > todo : annotation and signiture attribute <END>
<BEG> remote the top two operand and replace them with an different operand <END>
<BEG> mark the value in potition initializedvaluestackposition a initialized <END>
<BEG> param method return the jvm method signature <END>
<BEG> read the attribute bytecode from the give stream <SEG> up to length byte <SEG> exclude the name index <END>
<BEG> remove the give attribute <END>
<BEG> initialize from the bytecode of the definition of the give class <END>
<BEG> return the bytecode of this class a a byte array <SEG> possibly for use in a custom { link classloader } <END>
<BEG> manipulate the class access flag <END>
<BEG> return the declared field with the give name <SEG> or null if none <END>
<BEG> return all method declare by this class <END>
<BEG> return all declare method with the give name and parameter type <END>
<BEG> return source file information for the class <END>
<BEG> remove the source file attribute for the class <END>
<BEG> set the maximum number of local variable include params in this method <END>
<BEG> return the parameter index for the give local index <SEG> or -1 if the give local do not reference a param <END>
<BEG> load some constant onto the stack <END>
<BEG> the < code > jsr < code > opcode use in implement < code > finally < code > clause <END>
<BEG> test if a stack object be an instance of a class ; the < code > instanceof < code > opcode <END>
<BEG> create a new multidimensional array ; the < code > multianewarray < code > opcode <END>
<BEG> return all the instructions of this method <END>
<BEG> invalidate all byteindexes when the code block change <END>
<BEG> return the value of this constant a an object of the appropriate type string <SEG> integer <SEG> double <SEG> etc <SEG> or null if not set <END>
<BEG> set the { link instruction } mark the beginning of the try block <END>
<BEG> set the class of the exception type <SEG> or null for catch-all clause use with finally block <END>
<BEG> return the index in the class { link constantpool } of the { link classentry } s for the exception type throw by this method <SEG> or an empty array if none <END>
<BEG> set the checked exception throw by this method <END>
<BEG> remove an exception throw by this method <END>
<BEG> set the field this instruction operate on <END>
<BEG> set the inner class reference for this class <END>
<BEG> return source line number <END>
<BEG> clear the line number <END>
<BEG> notifies the application that the operation complete successfully <END>
<BEG> notifies the application that the operation fail <END>
<BEG> constructs a cache name out of the class name and field name <END>
<BEG> sets a cache name from the fully qualified class name <END>
<BEG> if no separate executor be set via { link # loaderexecutor executor } the cache will create a separate thread pool use exclusively by it <END>
<BEG> ensure that the cache value be store via direct object reference and that no serialization take place <END>
<BEG> retrieve a single section from the container <END>
<BEG> wraps a loaded value to add the refreshed value <END>
<BEG> close a closeable <END>
<BEG> log a message at trace level <END>
<BEG> set to true if timeout be reach <END>
<BEG> get the default transcoder that 's in use <END>
<BEG> asychronous increment <END>
<BEG> increase the timeout counter for the give handling node <END>
<BEG> returns whether the connection be shut down or not <END>
<BEG> number of millisecond since the last read of this node complete <END>
<BEG> sets a name for this tap stream <END>
<BEG> gets the value of the engine private field <END>
<BEG> returns the parent buffer that this buffer wrap <END>
<BEG> set the result value and notify about operation completion <END>
<BEG> 查看bytebuffer数组是否还有剩余 param buffer bytebuffers return have remain <END>
<BEG> increase value by one return throw memcachedexception throw interruptedexception throw timeoutexception <END>
<BEG> this be a read access on the lock state for data visibility <END>
<BEG> provide tune object with initialized information from the property file <END>
<BEG> unlinks the non-null first element <END>
<BEG> returns if the future have successfully complete <END>
<BEG> sets the minimum total size for the internal data structure <END>
<BEG> increments the popularity of the element if it do not exceed the maximum 15 <END>
<BEG> opens the cache in { code directory } <SEG> create a cache if none exist there <END>
<BEG> returns the maximum number of byte that this cache should use to store it data <END>
<BEG> closes this cache <END>
<BEG> converts the { code writemode } string argument to uppercase and look up enum constant in writemode <END>
<BEG> sets whether to notify listener when an exception occur on a writer operation <END>
<BEG> sets the maximum number of write operation to allow per second when { link # writebatching } be enabled <END>
<BEG> return this configuration instance see # setratelimitpersecond int ratelimitpersecond <END>
<BEG> param writebehindmaxqueuesize maximum amount of operation allow on the wait queue return this configuration instance see # setwritebehindmaxqueuesize int <END>
<BEG> make copy of this configuration return a copy of this configuration <END>
<BEG> enables one particular { link outputbehavior } param behavior <END>
<BEG> returns true if the output behavior be enable param behavior the output behavior to inspect return true if enable <SEG> otherwise false <END>
<BEG> returns the sample search interval in second to be apply to the { link sampledratecounterconfig } for sampled statistic return the sample search interval in second <END>
<BEG> parses the string for it content <SEG> return the represent value in byte param value the string representation of an amount of memory return the amount of byte represent by the string throw numberformatexception if not a number with potential unit char strip throw illegalargumentexception if no match memoryunit match the char <END>
<BEG> sets the persistence strategy param strategy the persistence strategy <END>
<BEG> toggle searchable value param b <END>
<BEG> get actual attribute type return <END>
<BEG> set the attribute extractor class name param classname attribute extractor class return this <END>
<BEG> set the extractor property param prop <END>
<BEG> set the property separator param value return this instance <END>
<BEG> return a property version of this configuration object <END>
<BEG> get the dispatcher be use for this queue <END>
<BEG> implements the object hashcode method <END>
<BEG> return the jvm-level configure { code rmisocketfactory } <END>
<BEG> gets a set of the listener register to this class return a set of type < code > cachemanagereventlistener < code > <END>
<BEG> see javax management notificationbroadcaster # removenotificationlistener javax management notificationlistener <END>
<BEG> is this type comparable ? <END>
<BEG> interpret this query param query <END>
<BEG> checks if be order ascend <END>
<BEG> non-javadoc see net sf ehcache statistic extend extendedstatistics operation # setwindow long <SEG> java util concurrent timeunit <END>
<BEG> non-javadoc see net sf ehcache statistic extend extendedstatistics operation # sethistory int <SEG> long <SEG> java util concurrent timeunit <END>
<BEG> creates a query selecting cache <END>
<BEG> statistic value type <END>
<BEG> statistic value when absent <END>
<BEG> release resource share by all xarequestprocessors <END>
<BEG> adds a new item param newval <END>
<BEG> does not support list method { link unsupportedoperationexception } <END>
<BEG> updates the maximum to be at least the give value <END>
<BEG> sets the sender 's { link address } <END>
<BEG> returns true if the write that cause the invalidation be perform on this node <END>
<BEG> return true if this entry can expire via max idle <SEG> false otherwise <END>
<BEG> mark that this entry be load from the cache a oppose to generate by the application use write-only command <SEG> mostly for purpose of the write skew check <END>
<BEG> whether or not the cache will do something due to the strategy return <END>
<BEG> the cache will throw exception to prevent memory growth return <END>
<BEG> gets the number of byte to which the internal buffer should be resize <END>
<BEG> acquires the read lock <END>
<BEG> see { link # timeout long <SEG> java util concurrent timeunit } return the timeout in { link timeunit } <END>
<BEG> sets the { link responsemode } for the remote invocation <END>
<BEG> method invoke for each entry add to the stream pass only the key param key key of entry add to stream <END>
<BEG> check if current fqn be child of parentfqn param parentfqn return <END>
<BEG> retrieves the name object <END>
<BEG> creates and bind a new context <END>
<BEG> returns the singleton cachemanager <END>
<BEG> updates the state to < code > update_cancelled < code > <END>
<BEG> gets the current usage counter value return a positive number <END>
<BEG> retrieve the date time that the cache flush be schedule for <END>
<BEG> resets the cron expression to the value supply <END>
<BEG> recreates the original human-readable cron expression base on the internal datastructure value <END>
<BEG> splits a string into substring base on the supplied delimiter character <END>
<BEG> get the raw array type signature string <SEG> e g <END>
<BEG> get the type signature of the array element <END>
<BEG> get a { code class < ? > } reference for the array element type <END>
<BEG> disables the scanning of jarfiles <END>
<BEG> override the automatically-detected classpath with a custom path <SEG> with path element separate by file pathseparatorchar <END>
<BEG> filter this { link classinfolist } to include only standard class class that be not interface or annotation <END>
<BEG> filter this { link classinfolist } to include only interface that be not annotation <END>
<BEG> get the name of the class <SEG> form from the base name and any suffixes suffix be for inner class nesting <SEG> and be separate by ' $ ' <SEG> but without any type argument <END>
<BEG> returns a list of all method match a give name <END>
<BEG> get a string representation of the resource 's location a a url string <END>
<BEG> read each { link resource } in this { link resourcelist } a a { link bytebuffer } <SEG> pass the { link bytebuffer } to the give { link inputstreamconsumer } <SEG> then release the { link bytebuffer } after the { link bytebufferconsumer } return <SEG> by call { link resource # close } <END>
<BEG> determine the unique ordered classpath element <SEG> and run a scan look for file or classfile match if necessary <END>
<BEG> get { link moduleref } reference for all visible module <END>
<BEG> get the reverse class dependency map <SEG> i e <END>
<BEG> get superclass of the name subclass <END>
<BEG> get all annotation class find during the scan <END>
<BEG> deserialize a scanresult from previously-serialized json <END>
<BEG> get the type parameter class bound <END>
<BEG> add a { link classloader } to the { link classloader } order at the current position <END>
<BEG> create a temporary file <SEG> and mark it for deletion on exit <END>
<BEG> get the path for this physicalzipfile <SEG> which be the file path <SEG> if it be file-backed <SEG> or a compound nest jar path <SEG> if it be memory-backed <END>
<BEG> get the name of the slice either the entry name path within the parent zipfile slice <SEG> or the path of the physical zipfile if this slice be a toplevel slice i e <END>
<BEG> get the physical { link file } that this zipfileslice be a slice of <END>
<BEG> completely override and ignore the visible modulelayers <SEG> and instead scan the requested modulelayers <END>
<BEG> check if the whitelist be empty <END>
<BEG> get a set of path element a a string <SEG> from an array of object e g <END>
<BEG> if loginrealtime be true <SEG> log entry be output in realtime <SEG> as well a add to the lognode tree <END>
<BEG> invoke the name method in the give object or it superclass <END>
<BEG> switches fastclasspathscanner to strict mode <SEG> which disallow search match base on blacklisted class <SEG> and remove external class from result list return by scanspec # get method <END>
<BEG> return the sorted list of name of all subclass of the name class <END>
<BEG> return the sorted list of name of all standard class or non-annotation interface with the name class annotation or meta-annotation <END>
<BEG> returns true if the path be an http s : url <END>
<BEG> get the file object for the resolve path <END>
<BEG> free any temporary file create by extract jar from within jar <END>
<BEG> ensure that there be no work unit still uncompleted <END>
<BEG> indicates who be responsible for this exception caller <SEG> service <SEG> or unknown <END>
<BEG> return http relate metadata like header and status code <END>
<BEG> sets the condition associate with this policy statement <SEG> and return this updated statement object so that additional method call can be chain together <END>
<BEG> returns the value of a specific property that be include in this profile instance <END>
<BEG> returns a non-null signer for the specified service and region accord to the internal configuration which provide a basic default algorithm use for signer determination <END>
<BEG> deprecate by { link requesthandler2 } <END>
<BEG> returns the corresponding tls protocol name a per the < a href= http : doc oracle com javase 7 doc technotes guide security standardnames html # jssenames > jsse standard names < a > <END>
<BEG> allows pass additional header to the request <END>
<BEG> adds an entry to the cache <SEG> evict the early entry if necessary <END>
<BEG> repositions this stream to the position at the time the < code > mark < code > method be last call on this input stream <END>
<BEG> param bytesdelta the number of byte to increment param starttimenano the start time in nano second <END>
<BEG> return the fully-qualified domain name of the endpoint that the request attempt be submit to <END>
<BEG> return the value of x-amzn-requestid in response header <END>
<BEG> return marshaller registry to obtain marshaller implementation for nested type i e <END>
<BEG> return identifer for the operation api be invoke <END>
<BEG> returns the value of the specified marker ; or null if there be no such value <END>
<BEG> sets the optional mark-and-reset read limit use for signing and retry purpose <END>
<BEG> returns the default retry policy for dynamodb client with the specify max retry count <END>
<BEG> returns the text content of the current element be parse <END>
<BEG> returns the next xml event for the document be parse <END>
<BEG> converts byte data to a base64-encoded string <END>
<BEG> returns the currently consume capacity <END>
<BEG> returns a string represent the give byte array <SEG> treat each byte a a single octet character <END>
<BEG> does a safe comparison of two { link comparable } object account for null param d1 first object param d2 second object return a positive number if the object double be large <SEG> a negative number if the second object be large <SEG> or 0 if they be equal <END>
<BEG> see java io inputstream # read byte [ ] <SEG> int <SEG> int <END>
<BEG> return true if the give value be either null or the empty string <END>
<BEG> returns a { link timinginfofullsupport } base on the give start and end time in nanosecond <SEG> ignore the wall clock time <END>
<BEG> starts a new element with the specify name at the current position in the in-progress xml document <END>
<BEG> closes the last opened element at the current position in the in-progress xml document <END>
<BEG> adds the specified date a text to the current position of the in-progress xml document <END>
<BEG> default method definition that match the response state with the expected state define by the acceptor <END>
<BEG> use this in place of valueof <END>
<BEG> < p > the availability zone in which to allocate the dedicated host <END>
<BEG> < p > an ipv4 cidr block to associate with the vpc <END>
<BEG> < p > the id of the capacity reservation to be cancel <END>
<BEG> < p > a user-defined comment about the disk upload <END>
<BEG> < p > the time that the disk upload end <END>
<BEG> < p > the id of the subnet through which traffic be rout <END>
<BEG> < p > the name of the cloudwatch logs log stream to which the connection data be publish <END>
<BEG> < p > describes the configuration of spot instances in an ec2 fleet <END>
<BEG> < p > the type of resource : < code > bundle < code > | < code > conversion-task < code > | < code > customer-gateway < code > | < code > dhcp-options < code > | < code > elastic-ip-allocation < code > | < code > elastic-ip-association < code > | < code > export-task < code > | < code > flow-log < code > | < code > image < code > | < code > import-task < code > | < code > instance < code > | < code > internet-gateway < code > | < code > network-acl < code > | < code > network-acl-association < code > | < code > network-interface < code > | < code > network-interface-attachment < code > | < code > prefix-list < code > | < code > reservation < code > | < code > route-table < code > | < code > route-table-association < code > | < code > security-group < code > | < code > snapshot < code > | < code > subnet < code > | < code > subnet-cidr-block-association < code > | < code > volume < code > | < code > vpc < code > | < code > vpc-cidr-block-association < code > | < code > vpc-endpoint < code > | < code > vpc-peering-connection < code > | < code > vpn-connection < code > | < code > vpn-gateway < code > < p > return the type of resource : < code > bundle < code > | < code > conversion-task < code > | < code > customer-gateway < code > | < code > dhcp-options < code > | < code > elastic-ip-allocation < code > | < code > elastic-ip-association < code > | < code > export-task < code > | < code > flow-log < code > | < code > image < code > | < code > import-task < code > | < code > instance < code > | < code > internet-gateway < code > | < code > network-acl < code > | < code > network-acl-association < code > | < code > network-interface < code > | < code > network-interface-attachment < code > | < code > prefix-list < code > | < code > reservation < code > | < code > route-table < code > | < code > route-table-association < code > | < code > security-group < code > | < code > snapshot < code > | < code > subnet < code > | < code > subnet-cidr-block-association < code > | < code > volume < code > | < code > vpc < code > | < code > vpc-cidr-block-association < code > | < code > vpc-endpoint < code > | < code > vpc-peering-connection < code > | < code > vpn-connection < code > | < code > vpn-gateway < code > <END>
<BEG> < p > the ids of the security group in your account <END>
<BEG> < p > the state of the association between the instance and the elastic graphics accelerator <END>
<BEG> < p > the number of unit provide by the specified instance type <END>
<BEG> < p > indicates whether monitoring be enable <END>
<BEG> < p > indicates whether enhanced networking with ena be enable <END>
<BEG> < p > the desired http put response hop limit for instance metadata request <END>
<BEG> < p > an unencrypted pem encode rsa private key <END>
<BEG> < p > the affinity set for the instance on the dedicated host <END>
<BEG> < p > the number of on-demand instances in the fleet <END>
<BEG> < p > the minimum target capacity for on-demand instances in the fleet <END>
<BEG> < p > the first port in the range <END>
<BEG> < p > the current price schedule <SEG> a determine by the term remain for the reserved instance in the listing <END>
<BEG> < p > principalidformatarn description < p > param arn principalidformatarn description return returns a reference to this object so that method call can be chain together <END>
<BEG> < p > the first ip address in the range <END>
<BEG> < p > the id of the new network acl to associate with the subnet <END>
<BEG> < p > the maximum price per hour that you be willing to pay for a spot instance <END>
<BEG> < p > the total value of the convertible reserved instance that you be exchange <END>
<BEG> < p > the early date and time <SEG> in utc <SEG> for the scheduled instance to start <END>
<BEG> gets the localized message <END>
<BEG> creates a new fullident start from the specify node <END>
<BEG> creates a new fullident start from the child of the specified node <END>
<BEG> gets the zero-based column number <END>
<BEG> scope factory method <END>
<BEG> indicates if this tag be a close end tag <END>
<BEG> getter for line field <END>
<BEG> extract inline javadoc tag from the give comment <END>
<BEG> node be on type definition <END>
<BEG> returns whether a node be directly contain within an interface or annotation block <END>
<BEG> returns whether a node be contain in the outer most type block <END>
<BEG> set the exception message <END>
<BEG> get the top value on the catch and finally block nest stack <END>
<BEG> make this the special top dataflow value <END>
<BEG> enter a catch block <END>
<BEG> get an inputstream on data start at give offset <END>
<BEG> set the short description of the category <END>
<BEG> set a search tree callback <END>
<BEG> perform the depth first search <END>
<BEG> return whether or not the graph contain a cycle : i e <SEG> whether it contain any back edge <END>
<BEG> get an iterator over the vertex in topological sort order <END>
<BEG> predicate to determine which vertex should be visit a the search progress <END>
<BEG> specify a vertexchooser object to restrict which vertex be consider <END>
<BEG> transpose a graph <END>
<BEG> localise the give abstractbutton <SEG> set the text and optionally mnemonic note that abstractbutton include menu and menu item <END>
<BEG> helps above method <SEG> run through all component recursively <END>
<BEG> instantiate all of the detector2s in this pas and return them in a correctly-ordered array <END>
<BEG> set the detectororderingconstraint that create this edge <END>
<BEG> find the self call <END>
<BEG> try to find a codebase with the give name in the give class path string <END>
<BEG> add a collection of xmlwriteable object to the tree <END>
<BEG> returns true if the give object be an instance of the classdata class <SEG> and it contain the same data a this class <END>
<BEG> return the branch coverage rate for a particular method <END>
<BEG> return the name of the package that this source file be in <END>
<BEG> return it 's the canonical path of sfilename_ <END>
<BEG> closes an input stream <END>
<BEG> checks whether any probe have be hit <END>
<BEG> subtracts the probe in the give { link executiondata } object from the store <END>
<BEG> sets the name of the corresponding source file for this class <END>
<BEG> increments all counter by the value of the give child <END>
<BEG> reads all byte from an input stream into a byte array <END>
<BEG> packs a buffer in jar zip format into a stream in pack200 format <END>
<BEG> returns whether the output should be append to an exist file <END>
<BEG> returns the wildcard expression for class to include <END>
<BEG> gets the hostname or ip address to listen to when output be < code > tcpserver < code > or connect to when output be < code > tcpclient < code > return hostname or ip address <END>
<BEG> < p > do not perform any conversion to produce d value see { link argument # getdest } from positional argument name <END>
<BEG> returns { code true } if flag string { code str } match prefixchars and it be short flag <SEG> that be <SEG> it matched prefix length must be 1 <END>
<BEG> < p > removes prefixchars from give flag string <END>
<BEG> returns prefixchars with this object construct <END>
<BEG> writes the help message for this and descendant <END>
<BEG> prints a single-line usage to the screen <END>
<BEG> sets the width of a usage line <END>
<BEG> prints the default value by introspect the current setter a { link getter } <END>
<BEG> this method be similar to { code objects requirenonnull } <END>
<BEG> sets the 'width ' <END>
<BEG> the next option create will be require if < code > require < code > be true <END>
<BEG> the next option create will have a value that will be an instance of < code > type < code > <END>
<BEG> create an option use the current setting return the option instance throw illegalargumentexception if < code > longopt < code > have not be set <END>
<BEG> retrieve a read-only list of option in this set return read-only collection of { link option } object in this descriptor <END>
<BEG> returns the < code > object < code > of type < code > clazz < code > with the value of < code > str < code > <END>
<BEG> the name of the command or the alias in the form it be pass to the command line <END>
<BEG> produces help for option and their description <END>
<BEG> gives a string consisting of the string representation of the element of a give array of object <SEG> each separate by a give separator string <END>
<BEG> < p > specifies a type to which the non-option argument be to be convert < p > < p > jopt simple accept type that have either : < p > < ol > < li > a public static method call { code valueof } which accept a single argument of type { link string } and whose return type be the same a the class on which the method be declare <END>
<BEG> < p > specifies a converter to use to translate non-option argument into java object <END>
<BEG> informs an option parser that this builder 's option require an argument <END>
<BEG> converts a byte array to a long <END>
<BEG> set the last mountpoint <END>
<BEG> get the device name <SEG> e g <SEG> dev sda3 or dev mapper vg0-home <END>
<BEG> does this volume cotain extend attribute <END>
<BEG>  < p > read the full give length unless eof be reach < p > param len length to read <SEG> must be a multiple of the stream 's record size <END>
<BEG> expands { code archive } into { code targetdirectory } <END>
<BEG> return configuration option that have be use to create the give inputstream from the give coder <END>
<BEG> return a stream that write to out use the give configuration <END>
<BEG> sets whether there be any content associate with this entry <END>
<BEG> returns whether this entry have get a crc <END>
<BEG> records an archive entry to add <END>
<BEG> get if this entry be a sparse file with 1 x pax format or not return true if this entry be a sparse file with 1 x pax format since 1 20 <END>
<BEG> check if this be a pax header <END>
<BEG> get the next entry in this tar archive a longname data <END>
<BEG> decodes the packed binary tree from the specify stream <END>
<BEG> submit a callable for compression <END>
<BEG> set the extra field data in central directory <END>
<BEG> the number of millisecond elapse in merge the result of the parallel compression <SEG> the io phase return the number of millisecond elapse <END>
<BEG> write the content of this scatter stream to a target archive <END>
<BEG> the number of byte write to the output for the last entry return the number of byte <SEG> never negative <END>
<BEG> length of the complete extra field in the central directory <END>
<BEG> returns the modify time a a java util date of this zip entry <SEG> or null if no such timestamp exists in the zip entry <END>
<BEG> sets alignment for this entry <END>
<BEG> replaces all currently attach extra field with the new array <END>
<BEG> retrieves the extra data for the central directory <END>
<BEG> put the value a four byte in big endian byte order <END>
<BEG> whether this library be able to read or write the give entry <END>
<BEG> adds a new archive entry to the archive <END>
<BEG> chooses a blocksize base on the give length of the data to compress <END>
<BEG> the compression level <END>
<BEG> returns the number of bit that can be read from this input stream without read from the underlie input stream at all <END>
<BEG> inserts the give value into the array a a little endian sequence of the give length start at the give offset <END>
<BEG> method to use for get decoder instance that use the most optimal available method for underlie data access <END>
<BEG> same a { link # close } except that it do n't close the underlying stream <END>
<BEG> returns a { link lz4factory } instance that return compressor and decompressors that be write with java 's official api <END>
<BEG> clean up a temporary file native lib generate by snappy-java <END>
<BEG> get the native library version of the snappy return native library version <END>
<BEG> adds input source file to the zip file with provided zip parameter <END>
<BEG> removes the file provide in the input parameter from the zip file <END>
<BEG> removes all file from the zip file that match the name in the input list <END>
<BEG> compresses buffer 'src ' into buffer 'dst ' with dictionary <END>
<BEG> decompress data param src the source buffer param dict dictionary to use param originalsize the maximum size of the uncompressed data return byte array with the decompress data <END>
<BEG> returns < tt > true < tt > if this deque contain no element <END>
<BEG>  return the previous value associate with the specify key <SEG> or < tt > null < tt > if there be no mapping for the key throw nullpointerexception if the specify key or value be null <END>
<BEG> associates the specified value with the specify key in this map <END>
<BEG>  throw classcastexception if the specify key can not be compare with the key currently in the map throw nullpointerexception if the specify key be null <END>
<BEG> retrieves <SEG> but do not remove <SEG> the head of this queue <SEG> or return < tt > null < tt > if this queue be empty <END>
<BEG> waits for another thread to arrive at this exchange point unless it be { link thread # interrupt interrupt } <SEG> and then transfer the give object to it <SEG> receive it object in return <END>
<BEG> returns an iterator over the element in this deque in reverse sequential order <END>
<BEG> return color of node p <SEG> or black if p be null in the clr version <SEG> they use a special dummy ` nil ' node for such purpose <SEG> but that do n't work well here <SEG> since it could lead to create one such special node per real node <END>
<BEG> calls { link com lmax disruptor eventprocessor # halt } on all of the event processor create via this disruptor <END>
<BEG> returns a { link set } view of the key contain in this map ; with care the key may be iterate over < strong > without auto-boxing < strong > <END>
<BEG> a wait free alternative to offer which fail on cas failure <END>
<BEG>  < br > < p > implementation notes : < br > poll be allow from a single thread < br > poll be potentially block here a the { link queue # poll } do not allow return { code null } if the queue be not empty <END>
<BEG> equivalent to { link # trycomplete } but do not invoke { link # oncompletion countedcompleter } along the completion path : if the pending count be nonzero <SEG> decrements the count ; otherwise <SEG> similarly try to complete this task 's completer <SEG> if one exist <SEG> else mark this task a complete <END>
<BEG> submits a forkjointask for execution <END>
<BEG> possibly initiate an orderly shutdown in which previously submit task be execute <SEG> but no new task will be accept <END>
<BEG> blocks until all task have complete execution after a shutdown request <SEG> or the timeout occur <SEG> or the current thread be interrupt <SEG> whichever happen first <END>
<BEG> cancels <SEG> ignore any exception throw by cancel <END>
<BEG> a version of sneaky throw to relay exception <END>
<BEG> unschedules and return <SEG> without execute <SEG> the next task queue by the current thread but not yet execute <SEG> if the current thread be operate in a forkjoinpool <END>
<BEG> top-level loop for worker thread : on each step : if the previous step sweep through all queue and find no task <SEG> or there be excess thread <SEG> then possibly block <END>
<BEG> possibly block the give worker wait for joinme to complete or timeout param joinme the task param millis the wait time for underlie object wait <END>
<BEG> increment or decrement quiescercount <END>
<BEG> unschedules and return <SEG> without execute <SEG> the next task queue by the current thread but not yet execute <SEG> if one be available <SEG> or if not available <SEG> a task that be fork by some other thread <SEG> if available <END>
<BEG> returns next task <SEG> or null if empty or contend <END>
<BEG> runs the give task <SEG> plus any local task until queue be empty <END>
<BEG> returns the successor of p <SEG> or the head node if p next have be link to self <SEG> which will only be true if traverse with a stale pointer that be now off the list <END>
<BEG> transfers the element to a consumer <SEG> wait if necessary to do so <END>
<BEG> arrives at this phaser and await others <END>
<BEG> overridable method to perform an action upon impend phase advance <SEG> and to control termination <END>
<BEG> returns a string identify this phaser <SEG> as well a it state <END>
<BEG> get the observableproperty for a specific property name <END>
<BEG> sets the configuration to be process <END>
<BEG> creates a new instance of { code constructorarg } for the specified simple value and set the type name explicitly <END>
<BEG> returns the { code beandeclaration } reference by this constructor argument <END>
<BEG> get a list of boolean object associate with the give configuration key <END>
<BEG> copies all event listener registration maintain by this object to the specify { code baseeventsource } object <END>
<BEG> returns the listener this registration be about <END>
<BEG> returns a set with all event type that be super type of the specify type <END>
<BEG> returns the { code reloadingcontroller } which cause this event <END>
<BEG> returns a new { code immutablenode } instance which be a copy of this object <SEG> but with the child replace by the one in the pass in collection <END>
<BEG> returns a new { code immutablenode } instance which be a copy of this object <SEG> but with the specify attribute remove <END>
<BEG> print out the data in the configuration <END>
<BEG> param bindingclass return true if the specify element have not yet be mark <END>
<BEG> should < code > methodutils invokeexactmethod < code > be use for the reflection <END>
<BEG> sets the xml attribute which the input xml use to indicate to a plugincreaterule which plugin declaration be be reference <END>
<BEG> replace any occurrence within the string of the form marker { key } with the value from source [ key ] <END>
<BEG> parses a reader into a config instance <END>
<BEG> set a description for the thing be parse <END>
<BEG> this be package-private <SEG> not public api <END>
<BEG> returns option with allow unresolved set to the give value <END>
<BEG> returns whether the option allow unresolved substitution <END>
<BEG> this be use when include one file in another ; the included file be relativize to the path it 's include into in the parent file <END>
<BEG> parses a string which should be valid hocon or json <END>
<BEG> provide access to underlay { link org ini4j ini } implementation <END>
<BEG> implements the < code > getspi < code > method a per the specification in { link java util prefs abstractpreferences # getspi string } <END>
<BEG> implements the < code > childrennamesspi < code > method a per the specification in { link java util prefs abstractpreferences # childrennamesspi } <END>
<BEG> please note that path should not have a leading slash <END>
<BEG> this should only happen on a cloned mixindefnode <SEG> since it change the node itself <END>
<BEG> returns whether to flush on close <END>
<BEG> returns whether escape be be process <END>
<BEG> returns a new { code csvformat } use the first record a header <END>
<BEG> returns the number of this record in the parsed csv file <END>
<BEG> obtain a handle with just a jdbc url param url jdbc url return newly open handle <END>
<BEG> allows customization of how prepared statement be create <END>
<BEG> submit this part of the batch and open a fresh one return a fresh preparedbatchpart on the same batch <END>
<BEG> used to execute the query and traverse the result set with a accumulator <END>
<BEG> execute this script a a set of separate statement <END>
<BEG> gets the object that would have cause a constraint violation <END>
<BEG>  throw supercsvconstraintviolationexception if value be n't equal to the constant value or previously encounter value if a constant be n't supply <END>
<BEG>  throw supercsvcellprocessorexception if value be null throw supercsvconstraintviolationexception if value do n't match the regular expression <END>
<BEG> fetch the outermost hashmap a a twodhashmap <END>
<BEG> converts an object array to a string array null-safe <SEG> by call tostring on each element <END>
<BEG> returns all method available from a give class that have a specific annotation <END>
<BEG> allows the parser implementation to handle any value that be be consume when the end of the input be reach return a flag indicate whether the parser be process a value when the end of the input be reach <END>
<BEG> updates the selection of field to exclude when write <END>
<BEG> writes an empty line to the output <SEG> unless this be a { link com univocity parser fix fixedwidthwriter } whose { link fixedwidthwritersettings # getwritelineseparatorafterrecord } evaluate to { code false } <END>
<BEG> writes a comment row to the output <END>
<BEG> writes a sequence of value to a row in memory <END>
<BEG> writes the value of a give map into new output record < b > note < b > this method will not use the { link rowwriterprocessor } <END>
<BEG> returns the position of a header 0 base <END>
<BEG> defines whether or not the first valid record parse from the input should be consider a the row contain the name of each column param headerextractionenabled a flag indicate whether the first valid record parse from the input should be consider a the row contain the name of each column <END>
<BEG> the number of valid record to be parse before the process be stop <END>
<BEG> returns an instance of charappender with the configured limit of maximum character per column and the default value use to represent a null value when the string parse from the input be empty return an instance of charappender with the configured limit of maximum character per column and the default value use to represent a null value when the string parse from the input be empty <END>
<BEG> returns the number of row to skip from the input before the parser can begin to execute <END>
<BEG> configures the parser base on the annotation provide in a give class param beanclass the class whose annotation will be process to derive configuration for parse <END>
<BEG> returns the string representation of a null value default to null < p > when reading <SEG> if the parser do not read any character from the input <SEG> the nullvalue be use instead of an empty string < p > when writing <SEG> if the writer have a null object to write to the output <SEG> the nullvalue be use instead of an empty string return the string representation of a null value <END>
<BEG> indicates whether this setting object can automatically derive configuration option <END>
<BEG> returns a flag indicate whether this error be fatal and the process must stop a it be impossible to proceed <END>
<BEG> marks the error a handle so it do n't trigger a { link processorerrorhandler } again <END>
<BEG> handles an error that occur when apply conversion over a value <END>
<BEG> maps a attribute or method to a column name param key attribute method name or specific method definition with parameter and return type param columnindex number represent the position of the column associate with the give key <END>
<BEG> prepares the conversion register in this object to be execute against a give sequence of field param writing flag indicate whether a writing process be be initialize <END>
<BEG> applies a sequence of conversion associate with an object value at a give index in a record <END>
<BEG> applies a sequence of conversion associate with a string value parse from a give index <END>
<BEG> validates and set multiple field reference <END>
<BEG> starts an input read thread to load character from the give reader into bucket of character <END>
<BEG> updates the internal whitespace count of this appender to trim trailing whitespaces <END>
<BEG> appends the give character and mark it a ignore if it be a whitespace { code ch < = ' ' } < p > if the give character be equal to { link format # getnormalizednewline } <SEG> then the character sequence return by { link format # getlineseparator } be go to be append <END>
<BEG> appends the newline character sequence specify in { link format # getlineseparator } <END>
<BEG> converts a { code normalizedstring } back to it original { code string } representation param string the normalized string return the original string use to create the give normalized representation <END>
<BEG> adds a value process externally to the output and prepare the next position in the record to receive more value param value the value to be add to the current record position <END>
<BEG> resets the parser output and prepares for a new parsing process <END>
<BEG> configures this processor to persist the { link context } object that be send to the wrap { link processor } give in the constructor of this class <SEG> so all method of { link context } reflect the parser state at the time each row be parse <END>
<BEG> stores the row extract by the parser into a list <END>
<BEG> invoked by the parser after all value of a valid record have be process and any conversion have be execute <END>
<BEG> returns the column index whose value will be use to switch from a row processor to another <END>
<BEG> associates a value to a string param input the string to be associate with a give value param value the value associate with the give string <END>
<BEG> returns the maximum length a { code string } key can have to be use a a key in this cache <END>
<BEG> converts calendar to a formatted date string <END>
<BEG> configures the decimal format instance create by the parent class to parse bigdecimals <END>
<BEG> converts the give instance of type < b > i < b > to an instance of < b > o < b > param input the input value of type < b > i < b > to be convert to an object of type < b > o < b > return the conversion result <SEG> or the value of { link nullconversion # valueonnullinput } if the input object be null <END>
<BEG> defines the default value of type < b > i < b > which should be return when { link nullconversion # revert object } be invoked with a null < b > o < b > <END>
<BEG> converts number to a format numeric string <END>
<BEG> configures the parser to replace line separator <SEG> specify in { link format # getlineseparator } by the normalized line separator character specify in { link format # getnormalizednewline } <SEG> even on quote value <END>
<BEG> returns the current selection of quote field if any return the current selection of quote field <END>
<BEG> selects field whose value should always be write within quote param columns a selection of column that will always be quote return the modifiable set of select field to be quote <END>
<BEG> returns a copy of the sequence of alignment setting to apply over each field in the fixed-width record <END>
<BEG> returns the lookup wildcard character to accept any character in look-ahead or look-behind pattern define use { link fixedwidthparsersettings # addformatforlookahead string <SEG> fixedwidthfields } or { link fixedwidthparsersettings # addformatforlookbehind string <SEG> fixedwidthfields } <END>
<BEG> get this duration a an immutable < code > duration < code > object <END>
<BEG> gets an array of the value of each of the field that this partial support <END>
<BEG> gets the index of the first field to have the specify duration <SEG> or -1 if the field be unsupported <END>
<BEG> gets the start of this time interval which be inclusive <END>
<BEG> sets this interval from two millisecond instant and a chronology <END>
<BEG> compares this period to another object of the same class <END>
<BEG> gets the value of a partial from an instant <END>
<BEG> sets the partial into the instant <END>
<BEG> get the millisecond for the start of a year <END>
<BEG> gets the maximum number of day in any month <END>
<BEG> sets the give readwritableduration to zero millisecond <END>
<BEG> returns a copy of this date with the value of the specified field increase <END>
<BEG> get the am 0 pm 1 field type <END>
<BEG> get the year of a week base year within a century field type <END>
<BEG> creates a date-time from a julian day <END>
<BEG> gets the datetime zone a a string <SEG> which be simply it id <END>
<BEG> gets the minimum value for the field ignore the current time <END>
<BEG> add to the scaled component of the specified time instant <SEG> wrap around within that component if necessary <END>
<BEG> this method assume that this field be properly round on 1970-01-01t00:00:00 <END>
<BEG> called by the set method to get the maximum allow value <END>
<BEG> does a bound check before set the value <END>
<BEG> checks whether the offset from the string be use a the zone of the parsed datetime <END>
<BEG> returns a generic iso date parser for parse date with a possible zone <END>
<BEG> returns a formatter for a full ordinal date and time without millis <SEG> use a four digit year and three digit dayofyear yyyyddd't'hhmmssz <END>
<BEG> returns a basic formatter for a full date a four digit weekyear <SEG> two digit week of weekyear <SEG> and one digit day of week xxxx ' w'wwe <END>
<BEG> returns a formatter for a four digit year <SEG> two digit month of year <SEG> and two digit day of month <END>
<BEG> set the minimum digit print for the next and follow append field <END>
<BEG> instruct the printer to emit an integer year field <SEG> if support <END>
<BEG> sets this interval to be the same a another <END>
<BEG> sets this interval from two instant <SEG> replace the chronology with that from the start instant <END>
<BEG> gets a type that define all standard time field <END>
<BEG> compares this type to another object <END>
<BEG> returns the datetimezone be wrap <END>
<BEG> return the actual type represent by this object <END>
<BEG> returns a key for { code type } annotate with { code annotation } <SEG> wrap by { code set } <SEG> report failure against { code subject } <END>
<BEG> returns a key for the underlie binding of a lazy < t > value <END>
<BEG>  see org picocontainer componentadapter # getcomponentkey <END>
<BEG> returns the monitor currently use return the componentmonitor currently use <END>
<BEG> invokes delegate start method if the delegate be a behavior  <END>
<BEG> propagates the monitor change down the delegate chain if a delegate that implement componentmonitorstrategy exists <END>
<BEG> constructed picocontainer will use { linkplain org picocontainer lifecycle reflectionlifecyclestrategy reflectionlifecycle } <END>
<BEG> allows you to specify your own lifecycle strategy class <END>
<BEG> retrieve the list of exception that cause this one <END>
<BEG> sets the role-hint of the require component <END>
<BEG> looks up the ejb in the container and execute the method on it param self the proxy instance <END>
<BEG> whether the container be available for use return <END>
<BEG> tests whether or not a give path match a give pattern <END>
<BEG> combine the iterables into a single one <END>
<BEG> this be a replacement for guava 's sets # union set <SEG> set <END>
<BEG> returns the supplied collection a a multi-row string with every tostring of every element of the collection in it own row <END>
<BEG> determines whether the specified permission be permit <END>
<BEG> return an immutable empty multimap <END>
<BEG> compares this object to the other for equality <END>
<BEG> returns an array of the long common subsequence <END>
<BEG> returns a new { link eventcount } with the specified number of success and failure <END>
<BEG> returns the { link responseheaders } which trigger this exception <END>
<BEG> creates a new http request with empty content <END>
<BEG> enables or disable the { code no-cache } directive <END>
<BEG> returns a newly create { link clientcachecontrolbuilder } which have the same initial directive with this { link clientcachecontrol } <END>
<BEG> lower-cases and convert the specified header name into an { link asciistring } <END>
<BEG> returns the { link scheme } of the specify { link serializationformat } and { link sessionprotocol } <END>
<BEG> a ticker that read the current time use { link system # nanotime } <END>
<BEG> returns an access log writer with a common format <END>
<BEG> reads an xml node encode in utf-8 < p > < pre > x b16 b8 non-final xml chunk x b16 b8 final xml chunk < pre > <END>
<BEG> readable version of the remote <END>
<BEG> deletes the entry <END>
<BEG> return default extension <SEG> return < code > null < code > if it 's not configure <END>
<BEG> parse url string param url url string return url instance see url <END>
<BEG> insert default extension into extension list <END>
<BEG> be not empty string <END>
<BEG> param e return string <END>
<BEG> return method model for the give method on consumer side param method method object return method model <END>
<BEG> close all create registry <END>
<BEG> performs single argument substitution for the 'messagepattern ' pass a parameter <END>
<BEG> be provider side <END>
<BEG> get local host name <END>
<BEG> one way async call <SEG> send request only <SEG> and result be not require param runnable <END>
<BEG> add one property into the store <SEG> the previous value will be replace if the key exists <END>
<BEG> get the priority return the default be { link # min_priority minimum one } <END>
<BEG> get registered class return class serializer <END>
<BEG> format : interface : version : group return <END>
<BEG> see { link applicationmodel } and { link extensionloader } for why dubbobootstrap be design to be singleton <END>
<BEG> set the { link applicationconfig } param applicationconfig the { link applicationconfig } return current { link dubbobootstrap } instance <END>
<BEG> add an instance of { link registryconfig } with the specify id param id the { link registryconfig # getid id } of { link registryconfig } param consumerbuilder the { link consumer } of { link registrybuilder } return current { link dubbobootstrap } instance <END>
<BEG> add one or more { link eventlistener dubbo event listener } param listener a { link eventlistener dubbo event listener } param others an optional { link eventlistener dubbo event listener } throw nullpointerexception if one of argument be < code > null < code > throw illegalargumentexception if one of argument argument be not concrete instance <END>
<BEG> remove a { link eventlistener dubbo event listener } param listener the { link eventlistener dubbo event listener } return if remove successfully <SEG> return < code > true < code > <END>
<BEG> assets the listener be valid or not param listener the instance of { link eventlistener } throw nullpointerexception <END>
<BEG> only log body in debugger mode for size & security consideration <END>
<BEG> the reference count of current exchangeclient <SEG> connection will be close if all invokers destroy <END>
<BEG> flushes and close the framer and release any buffer <END>
<BEG> runs the give runnable strictly after all runnables that be submit before it <SEG> and use the { code executor } pass to the constructor <END>
<BEG> returns true if overload method be allow use mangle <END>
<BEG> returns a call 's method <END>
<BEG> returns the status code <END>
<BEG> creates a field value class <END>
<BEG> param data guaranteed to be non null param offset param length <END>
<BEG> removes element mark a removable param force if set to true <SEG> all element mark a 'removable ' will get remove <SEG> regardless of expiration <END>
<BEG> whether update across the cluster should be asynchronous default or synchronous param blocking_updates <END>
<BEG> return the previous value associate with the specify key <SEG> or < tt > null < tt > if there be no mapping for the key throw nullpointerexception if the specify key or value be null <END>
<BEG> returns an xmlconfigurator base on the provided property string if possible <END>
<BEG> wrap jchannel with dynamicmbean interface <END>
<BEG> unregisters object_name and everything under it param object_name <END>
<BEG> called when a change in membership have occur <END>
<BEG> same a { link # setflag flag } except that transient flag be not marshal param flag the flag <END>
<BEG> writes the message to the output stream <SEG> but exclude the dest and src address unless the src address give a argument be different from the message 's src address param excluded_headers do n't marshal header that be part of excluded_headers <END>
<BEG> looks at all buffer in range [ position limit-1 ] and nulls buffer that have no remain data <END>
<BEG> checks the sent table : if some credit be in queue mode and credit leave be less than min_credits : send a credit request <END>
<BEG> needs to return a map of all subview coordinator and their view a a collection of member <END>
<BEG> return an unmodifiable collection with the current cluster member <END>
<BEG> add a propose from a member in destination set param messageid the message id param from the originator of the propose param sequencenumber the propose sequence number return not_ready if the final sequence number be not know <SEG> or the final sequence number <END>
<BEG> computes the size of a variable-length encode long <END>
<BEG> reads a a float from a buffer <END>
<BEG> measures the number of byte require to encode a string <SEG> take multibyte character into account <END>
<BEG> encodes the number of byte need into a single byte <END>
<BEG> returns the header associate with an id param id the id return <END>
<BEG> removes the current message find by indentity == by nulling it in the message array param msg return <END>
<BEG> iterator which iterate only over non-null message <SEG> skip null message <END>
<BEG> removes a number of message and add them to c same semantics a { link java util concurrent blockingqueue # drainto collection <SEG> int } <END>
<BEG> removes the next element at hd +1 <END>
<BEG> removes and return the first element or null if the queue be empty <END>
<BEG> adds a new key to the hashmap <SEG> or update the value associate with the exist key if present <END>
<BEG> method copy from http : www jboss com index html ? module=bb & op=viewtopic & t=77231 <END>
<BEG> an utility class for store any information that need to exist a a pair <END>
<BEG> cancels the lease by update the eviction time <END>
<BEG> return the stat quota path associate with this prefix <END>
<BEG> get the configured default realm <END>
<BEG> set the static configuration to get the rule <END>
<BEG> get the translation of the principal name into an operating system user name <END>
<BEG> prepend some byte that have already be read back to the socket 's input stream <END>
<BEG> gets the session ids of session that have set watch on the give path <END>
<BEG> this will be invoke when the server transition to a new server state <END>
<BEG> for debug purpose return <END>
<BEG> the estimate be correct within 'epsilon ' total item count <SEG> with probability 'confidence ' <END>
<BEG> param key -- value whose hash be use to fill the filter_ <END>
<BEG> sets up so that all centroid will record all data assign to them <END>
<BEG> returns an upper bound on the number of byte that will be require to represent this histogram in the tighter representation <END>
<BEG> this method might be well describe a byte array to int array or data input to int array <END>
<BEG> param in to read byte from return decode value throw ioexception if { link datainput } throw { link ioexception } throw illegalargumentexception if variable-length value do not terminate after 9 byte have be read see # writesignedvarlong long <SEG> dataoutput <END>
<BEG> same behaviour a { link brave spancustomizer # annotate string } <END>
<BEG> same behaviour a { link brave spancustomizer # tag string <SEG> string } <END>
<BEG> when { code noop } <SEG> this drop input span by return false <END>
<BEG> see brave span # abandon <END>
<BEG> unique 8-byte identifier for a trace <SEG> set on all span within it <END>
<BEG> only include mandatory field { link # traceidhigh } and { link # traceid } <END>
<BEG> since 4 19 deprecate since 5 8 <SEG> use { link tracer # startscopedspan string <SEG> samplerfunction <SEG> object } <END>
<BEG> returns the current value for the gauge with the give metric name <END>
<BEG> convert a string contain an ip address to an array of 4 or 16 integer <END>
<BEG> adds a compression entry map a name to a position in a message <END>
<BEG> converts a numeric dclass into a string return the canonical string representation of the class throw invaliddclassexception the class be out of range <END>
<BEG> reads a byte array consisting of the remainder of the stream or the active region <SEG> if one be set <END>
<BEG> sets the maximum numeric value <END>
<BEG> sets whether numeric value store in string be acceptable <END>
<BEG> returns the nsap address <END>
<BEG> converts a numeric opcode into a string <END>
<BEG> sets an option to true <END>
<BEG> converts a numeric tsig extend rcode into a string <END>
<BEG> converts a numeric section into an abbreviation string <END>
<BEG> gets the next token from a tokenizer and convert it to an ip address <END>
<BEG> get a matching dns entry from the table <END>
<BEG> check that 2 entry be of the same class <END>
<BEG> check if the message be empty return true be the message be empty <END>
<BEG> non-javadoc see javax jmdns impl task state dnsstatetask # buildoutgoingfordns javax jmdns impl dnsoutgoing <END>
<BEG> the image tag <SEG> or null if not set <END>
<BEG> accessor that may be call after verify via { link # mayserializeasobject } whether give name param name name of property to check param parser parser that point to property name <SEG> in case generator need further verification note : untyped <SEG> because < code > jsonparser < code > be define in ` jackson-core ` <SEG> and this package do not depend on it <END>
<BEG> method that return the < b > start < b > location of the current token ; that be <SEG> position of the first character from input that start the current token <END>
<BEG> call make to verify whether leaf-level raw pre-encoded <SEG> not quote by generator value should be include in output or not <END>
<BEG> method to use for access input for which format detection have be do <END>
<BEG> method for construct json parser instance to parse the content access via specify input stream <END>
<BEG> public api <SEG> generic accessors : <END>
<BEG> method call to clear out any content text buffer may have <SEG> and initialize buffer to use non-shared data <END>
<BEG> releases the buffer retain in threadlocals <END>
<BEG> finds the enum value that should be consider the default value <SEG> if possible <END>
<BEG> accessor for immutable empty instance that have no configuration override define <END>
<BEG> bulk access method for check that all feature specify by mask be enable <END>
<BEG> accessor for check whether default setting for property handling indicate that property should be alphabetically order or not <END>
<BEG> helper method use to skip processing for type that we know can not be i e <END>
<BEG> method that can be use to determine how many deserializers this provider be cache currently if it do cache : default implementation do exact count depend on what kind of deserializers get cache ; default implementation cache only dynamically construct deserializers <SEG> but not eagerly construct standard deserializers which be different from how serializer provider work <END>
<BEG> accessors <END>
<BEG> need to define this to verify that we retain actual method reference <END>
<BEG> helper method that can be use to check whether method return a value or not ; if return type declare a < code > void < code > <SEG> return false <SEG> otherwise true since 2 4 <END>
<BEG> method call to far get rid of unwanted individual accessors <SEG> base on read write setting and rule for pull in accessors or not <END>
<BEG> accessor that allow determine whether { link # getcontenttype } should return a non-null value that be <SEG> there be a content type or not <END>
<BEG> helper method use to ensure that intend type id be output a something that be valid : currently only use to ensure that ` null ` output be convert to an empty string <END>
<BEG> method for add specified node at the end of this array <END>
<BEG> method for add specify string value at the end of this array <END>
<BEG> convenience method that be same a call : < code > withrootname < code > which will forcibly prevent use of root name wrap when write value with this { link objectreader } <END>
<BEG> static helper method that can be call to figure out type-erased call for give jdk type <END>
<BEG> helper method that will check if argument be an { link error } <SEG> and if so <SEG> re throw it ; otherwise just return since 2 9 <END>
<BEG> method that can be use to find the root cause <SEG> innermost of chain wrapped exception <END>
<BEG> type-safe alternative to { link # completeandclearbuffer object [ ] <SEG> int } <SEG> to allow for construct explicitly type result array <END>
<BEG> need to override to reproduce cache object via constructor <SEG> instead of serialize deserialize since we do not want to retain cached data <END>
<BEG> returns a converter that convert between string and { code enum } value of type { code enumclass } use { link enum # valueof class <SEG> string } and { link enum # name } <END>
<BEG> repeatedly dequeues reference from the queue and invokes { link finalizablereference # finalizereferent } on them until the queue be empty <END>
<BEG> looks up finalizer startfinalizer <END>
<BEG> returns a string representation of the current elapsed time <END>
<BEG> returns the cause for which the entry be remove <END>
<BEG> used during deserialization only <END>
<BEG> creates a new <SEG> empty { code arraylist } to hold the collection of value for an arbitrary key <END>
<BEG> an implementation of { link collection # tostring } <END>
<BEG> creates a new <SEG> empty { code concurrenthashmultiset } use { code countmap } a the internal backing map <END>
<BEG> creates and return a new evict queue that will hold up to { code maxsize } element <END>
<BEG> returns an { link optional } contain the first element in this fluent iterable <END>
<BEG> a sensible <SEG> albeit inefficient <SEG> definition of { link # equal } in term of { code entryset size } and { link # count } <END>
<BEG> a sensible default implementation of { link # submap object <SEG> object } in term of { link # headmap object } and { link # tailmap object } <END>
<BEG> returns the whole range relative to the specify comparator <END>
<BEG> returns a new builder for an immutable range map <END>
<BEG> returns an immutable range set contain the single range { link range # all } <END>
<BEG> this method return a { code immutablesortedmap } <SEG> consist of the entry whose key be less than or equal to <SEG> if { code inclusive } { code tokey } <END>
<BEG> returns the number of element in { code iterable } <END>
<BEG> returns the number of element remain in { code iterator } <END>
<BEG> returns { code true } if { code iterator } contain { code element } <END>
<BEG> advances { code iterator } { code position + 1 } time <SEG> return the element at the { code position } th position or { code defaultvalue } otherwise <END>
<BEG> returns a live { link map } view whose key be the content of { code set } and whose value be compute on demand use { code function } <END>
<BEG> returns a new { code mutableclasstoinstancemap } instance back by a give empty { code backingmap } <END>
<BEG>  < p > the return set have an iterator that do not support { code remove } <END>
<BEG> returns a { code topkselector } that collect the low { code k } elements added to it <SEG> relative to the specify comparator <SEG> and return them via { link # topk } in ascend order <END>
<BEG> returns the comparator that order the row <END>
<BEG>  < p > because a { code treebasedtable } have unique sort value for a give row <SEG> this method return a { link sortedmap } <SEG> instead of the { link map } specify in the { link table } interface <END>
<BEG> return the { link eventbus } that handle the event and the subscriber <END>
<BEG> similar to load64 <SEG> but allow offset + 8 > input length <SEG> pad the result with zero <END>
<BEG> returns an { link escaper } instance that escape html metacharacters a specify by < a href= http : www w3 org tr html4 > html 4 01 < a > <END>
<BEG> the base32hex encode specify by < a href= http : tool ietf org html rfc4648 # section-7 > rfc 4648 section 7 < a > <SEG> base 32 encoding with extended hex alphabet <END>
<BEG> closes the give { link inputstream } <SEG> log any { code ioexception } that 's thrown rather than propagate it <END>
<BEG> closes all { code closeable } instance that have be add to this { code closer } <END>
<BEG> returns the portion of this domain name that be one level beneath the public suffix <END>
<BEG> creates and return a new { code internetdomainname } by prepending the argument and a dot to the current name <END>
<BEG> compares the two specify { code boolean } value in the standard way { code false } be consider less than { code true } <END>
<BEG> returns a string contain the supply { code double } value <SEG> convert to string a specify by { link double # tostring double } <SEG> and separate by { code separator } <END>
<BEG> returns an immutable set of all nine primitive type include { code void } <END>
<BEG> compares this unsigned integer to another unsigned integer <END>
<BEG> ensures that the give class be initialize <SEG> a describe in < a href= http : java sun com doc book jls third_edition html execution html # 12 4 2 > jls section 12 4 2 < a > <END>
<BEG> return c true if operand be any register or memory <END>
<BEG> interrupt 3 � trap to debugger <END>
<BEG> high level procedure exit <END>
<BEG> pop stack into eflags register 32 bit or 64 bit <END>
<BEG> store ah into flags <END>
<BEG> compute 2^x - 1 fpu <END>
<BEG> compare st 0 with a reg fpu <END>
<BEG> compare st 0 with 4 byte or 8 byte fp at a src fpu <END>
<BEG> reverse divide st 0 by 32 bit or 64 bit fp value fpu <END>
<BEG> compare st 0 with 16 bit or 32 bit integer fpu <END>
<BEG> compare st 0 with 16 bit or 32 bit integer and pop the stack fpu <END>
<BEG> reverse divide st 0 by 32 bit or 16 bit integer a src fpu <END>
<BEG> empty mmx state <END>
<BEG> spin loop hint sse2 <END>
<BEG> create a { value javax w r core mediatype # text_plain } entity <END>
<BEG> get entity { link variant variant } information <END>
<BEG> finds the implementation { code class } object for the give factory name <SEG> or if that fail <SEG> find the { code class } object for the give fallback class name <END>
<BEG> creates a new instance of cachecontrol by parse the supplied string <END>
<BEG> get the cookie expiry date <END>
<BEG> adds a custom search path for a library deprecated see { link libraryloader } for the preferred interface to load library <END>
<BEG> gets the custom search path for a library <END>
<BEG> gets a hash code for this { code nativelong } <END>
<BEG> returns a human readable { link java lang string } representation of the structure <END>
<BEG> get a pure-java posix instance <END>
<BEG> gets the maximum length of this address include len family header return the maximum size of the address in byte <END>
<BEG> gets the actual length of this address include len family header return the actual size of this address <SEG> in byte <END>
<BEG> binds this unixdatagramsocket to a specific af_unix address <END>
<BEG> unordered compare st 0 with st 1 and pop register stack twice <END>
<BEG> tells that this entity be not repeatable <END>
<BEG> creates a builder contain the default registry entry <SEG> use the provide public suffix matcher <END>
<BEG> obtains the pool entry <END>
<BEG> force-closes this connection <END>
<BEG> < p > does not close the underlie socket output < p > throw ioexception if an i o problem occurs <END>
<BEG> is the parameter set in this object ? <END>
<BEG> removes register object <SEG> if exists <SEG> for the give pattern <END>
<BEG> converts the byte array of http content character to a string <END>
<BEG> converts the byte array of ascii character to a string <END>
<BEG> adds an error to an exist exception param error the exception to add <END>
<BEG> non-javadoc see org glassfish hk2 api immediatecontroller # setexecutor java util concurrent executor <END>
<BEG> adds an advertised contract to the set of contract advertise by this descriptor param addme the contract to add <END>
<BEG> sets the locator and serviceid for the factory <END>
<BEG> returns the { link servicehandle } root associate with this contextual creation return the possibly null root associate with this creation <END>
<BEG> sets the descriptor type param descriptortype the descriptor type <END>
<BEG> sets the loader to use with this descriptor param loader the loader to use with this descriptor <END>
<BEG> this write this object to the data output stream in a human-readable format <SEG> excellent for write out data file param out the output stream to write this object out to throw ioexception on failure <END>
<BEG> sets whether or not this injectee should be consider optional param optional true if this injectee be optional <SEG> false if require <END>
<BEG> prints a pretty parameterized type param ptype the parameterized type to print <END>
<BEG> make a nice pretty string out of the constructor and all it parameter param constructor the constructor to make pretty return a nice pretty string <END>
<BEG> set message encode <END>
<BEG> get the raw class of the { link # type type } <END>
<BEG> removes the mapping for this key from this map if present <END>
<BEG> returns an estimate of the number of byte that can be read or skip over from this input stream without block by the next invocation of a method for this input stream <END>
<BEG> check that the entity input stream have not be close yet <END>
<BEG> get a list of language that be acceptable for the message <END>
<BEG> get the list of language tag from the accept-charset of an http request <END>
<BEG> create an unmodifiable list of medium type from a string array of medium type <END>
<BEG> get the entity output stream <END>
<BEG> commits the { link # getentitystream entity stream } if it be n't already commit <END>
<BEG> get the thread pool executor <END>
<BEG> set the password of the key in the < em > key < em > store <END>
<BEG> set the < em > trust < em > store payload a byte array <END>
<BEG> parses the input string uri <END>
<BEG> get the regular expression <END>
<BEG> resolve a relative uri reference against a base uri a define in < a href= http : tool ietf org html rfc3986 # section-5 4 > rfc 3986 < a > <END>
<BEG> get the list of template variable for the template <END>
<BEG> replaces all the exist value associate with the key by the give single value <END>
<BEG> checks if the map contain the give key s <SEG> also extend the search to include the sub collection <END>
<BEG> used when bulk remove a contract that have be remove from the system param name the name of the contract that have be remove from the system return true if this cachekey be associate with the name contract <SEG> and should thus be remove <END>
<BEG> called by a systemdescriptor when it ranking have change <END>
<BEG> add a sub handle to this for proper destruction param subhandle a handle to add for proper destruction <END>
<BEG>  < p > because the value for a give key may have duplicate and follow the insertion ordering <SEG> this method return a { link list } <SEG> instead of the { link collection } specify in the { link multimap } interface <END>
<BEG> creates a < i > mutable < i > { code arraylist } instance contain the give element ; a very thin shortcut for create an empty list then call { link iterables # addall } <END>
<BEG> a condition that must be satisfy in order for a conditional deleteitem to succeed <END>
<BEG> a string that identify one or more attribute to retrieve from the table <END>
<BEG> returns the attribute a a string <SEG> substitute if necessary with token use the give substitution context <END>
<BEG> turns the give potentially non-unique rank into a unique id by append a counter <END>
<BEG> get all type argument from a generic type <SEG> for example { code [ foo <SEG> bar ] } from { code map < foo <SEG> bar > } <END>
<BEG> writes the current index a a series of table <END>
<BEG> puts the content of this field into the give byte vector <END>
<BEG> returns the index of the try catch block use the order in which they be visit with visittrycatchblock <SEG> whose 'catch ' type be reference by this type reference <END>
<BEG> returns the int encode value of this type reference <SEG> suitable for use in visit method relate to type annotation <SEG> like visittypeannotation <END>
<BEG> returns true iff the adjacency matrix be empty <END>
<BEG> return great element without remove it <SEG> or null if empty <END>
<BEG> returns the human-readable name for the current value <SEG> if any <END>
<BEG> returns a string that be equivalent to the specify string with it first character convert to uppercase as by { link string # touppercase } <END>
<BEG> closes the string by clear the underlie char array <END>
<BEG> forces add an element to the queue <SEG> without do size check <END>
<BEG> legacy implementation of { link # base64uuid } <SEG> for pre 6 0 index <END>
<BEG> return the unique processor type <END>
<BEG> heuristic use to determine the size of shard-side priorityqueues when select the top n term from a distributed index <END>
<BEG> the correction term <END>
<BEG> gets a cryptorandom instance for specified prop <END>
<BEG> overrides the { link org apache common crypto stream input input # skip long } <END>
<BEG> retrieve the name of the jvm system property which value have be load a the salt size in byte <END>
<BEG> retrieve the name of the environment variable which value have be load a the provider class name <END>
<BEG> retrieve the name of the environment variable which value have be load a a value for the unicode normalization ignore parameter <END>
<BEG> < p > sets the size of the salt to be use to compute the digest <END>
<BEG> < p > set the number of time the hash function will be apply recursively <END>
<BEG> < p > sets the salt generator to be use <END>
<BEG> sets the charset to be apply to the salt for conversion into byte <END>
<BEG> gets the jca provider to be use for all operation <END>
<BEG> do n't load a share library <END>
<BEG> accesses the excel format string which be apply to the cell note that this be the string that excel us <SEG> and not the java equivalent return the cell format string <END>
<BEG> equals method return true if the two build in format be equal <SEG> false otherwise <END>
<BEG> finds a cell within a give range of cell param content the string to match return the cell whose content match the parameter <SEG> null if not find <END>
<BEG> creates an arbitrary country code with the specify value <END>
<BEG> removes row param row the row to be remove <END>
<BEG> sets the number of drawing in this container param count the number of blip <END>
<BEG> accessor for the number of blip return the number of blip <END>
<BEG> called when the comment text be change during the sheet copy process param t the new text <END>
<BEG> writes any record that need to be write after all the draw group object have be write writes out all the note record param outputfile the output file exception ioexception <END>
<BEG> accessor for the number of shape save return the number of shape save <END>
<BEG> adds a drawing to the draw group param d the draw to add <END>
<BEG> accessor for the number of blip in the draw group return the number of blip <END>
<BEG> adds a property into the option param id the property id param blip the blip id param complex whether it 's a complex property param val the value <END>
<BEG> adds a property into the option param id the property id param blip the blip id param complex whether it 's a complex property param val the value param s the value string <END>
<BEG> accessor for the property param id the property id return the property <END>
<BEG> accessor which indicate whether this validation apply across multiple cels <END>
<BEG> dummy override param flag the hidden flag <END>
<BEG> accessor to see whether this object be initialize or not <END>
<BEG> gets the bold weight for this font return the bold weight for this font <END>
<BEG> sets the script style eg <END>
<BEG> gets the symbol for string display return the symbol <END>
<BEG> queries whether this attribute be an if return true if this be an if <SEG> false otherwise <END>
<BEG> gets the token representation of this item in rpn <END>
<BEG> gets the string version of this binary operator param buf a the string buffer <END>
<BEG> abstract method implementation to get the string equivalent of this token param buf the string to append to <END>
<BEG> gets the string version of this cell reference param buf the buffer to append to <END>
<BEG> the double value return the value <END>
<BEG> called by this class to initialize the parent <END>
<BEG> accessor for the volatile function return true if the formula be volatile <SEG> false otherwise <END>
<BEG> gets the type object from it integer value <END>
<BEG> gets a two byte array from an integer param i the integer return the two byte <END>
<BEG> gets the index of the first sheet in the range return the index of the first sheet in the range <END>
<BEG> standard hash code method return the hash code <END>
<BEG> used when write out record <END>
<BEG> accessor for the locked flag return true if this xf record lock cell <SEG> false otherwise <END>
<BEG> gets whether or not the content of this cell be wrap return true if this cell 's content be wrap <SEG> false otherwise <END>
<BEG> accessor to see if this format be read in <END>
<BEG> gets the format use by this format return the format <END>
<BEG> throws an assertionfailed exception if the specified condition be false param condition the assertion condition which must be true <END>
<BEG> log a debug message <END>
<BEG> log a debug message and exception <END>
<BEG> interrogates this object to see if it be a biff8 substream return true if this substream be biff8 <SEG> false otherwise <END>
<BEG> returns the cell type return the cell type <END>
<BEG> gets the cellformat object for this cell <END>
<BEG> sets the cell feature during the reading process param cf the cell feature <END>
<BEG> accessor for the regional setting code return the regional setting code <END>
<BEG> gets the cell content a a string <END>
<BEG> gets the range of cell which activate this hyperlink the get sheet index method will all return -1 <SEG> because the cell will all be present on the same sheet return the range of cell which activate the hyperlink <END>
<BEG> gets the cell which have be merge on this sheet return an array of range object <END>
<BEG> used when copy sheet in order to determine the type of this sheet return the bof record <END>
<BEG> accessor for the button property set <SEG> use during copy return the button property set <END>
<BEG> accessor for the image param i the 0 base image number return the image at the specified position <END>
<BEG> adds a local name to this shate param nr the local name to add <END>
<BEG> does the hard work of build up the object graph from the excel bytes exception biffexception exception passwordexception if the workbook be password protect <END>
<BEG> gets the sheet index in this workbook <END>
<BEG> sets the number of page widthwise which this sheet should be print into param fw the number of page <END>
<BEG> gets the default margin width return the default margin width <END>
<BEG> sets the password for this sheet param s the password <END>
<BEG> gets the row at which the pane be frozen horizontally return the row at which the pane be horizontally frozen <SEG> or 0 if there be no freeze <END>
<BEG> sets the row at which the pane be frozen horizontally param row the row number to freeze at <END>
<BEG> retrieves the automatic formula calculation flag return true if formula be calculate automatically <SEG> false if they be calculate manually <END>
<BEG> retrieves the recalculate formula before save flag return true if formula be calculate before the sheet be save <SEG> false otherwise <END>
<BEG> sets whether or not to rationalize the cell format before write out the sheet <END>
<BEG> accessor to retrieve the property set disabled flag return true if property set be disable <SEG> false otherwise <END>
<BEG> has this file be write by excel 2000 ? <END>
<BEG> the hideobj record store option select in the options dialog <SEG> view tab possible value be : hideobj_hide_all <SEG> hideobj_show_all and hideobj_show_placeholders param hideobj the hideobj to set <END>
<BEG> sets the indentation of the cell text param i the indentation <END>
<BEG> gets the index for the string pass in <END>
<BEG> copies a sheet from a read-only version to the writable version <END>
<BEG> sets the colour for this font <SEG> if the font have n't be initialize param colour the colour exception writeexception <SEG> if this font be already in use elsewhere <END>
<BEG> gets the row record at the specified row number <SEG> grow the array a need dictate param row the row number we be interested in return the row record at the specified row exception rowsexceededexception <END>
<BEG> sets the height of the specified row <SEG> as well a it collapse status param row the row to be format param height the row height in 1 20ths of a point exception rowsexceededexception deprecate use the override which take a cellview object <END>
<BEG> sets the page setup detail param p the page orientation param hm the header margin <SEG> in inch param fm the footer margin <SEG> in inch deprecate use the sheetsettings bean <END>
<BEG> sets the font name param typeface the full name of the font <SEG> when { code null } remove the font definition - removal be implementation specific <END>
<BEG> sets the charset param charset the charset <END>
<BEG> sets the font family class param family the font family class <END>
<BEG> the list of property store by this record <END>
<BEG> records should be sort by property number before be store <END>
<BEG> serializes the complex part of this property param data the data array to serialize to param pos the offset within data to start serialize to <END>
<BEG> replaces the internal child list with the content of the supplied < tt > childrecords < tt > <END>
<BEG> the top-left coordinate of child record <END>
<BEG> return the underlying poidocument return the underlying poidocument <END>
<BEG> see java util abstractset # hashcode <END>
<BEG> gets the content type of the file or { code null } <END>
<BEG> write out <SEG> with any property change <SEG> but nothing else <END>
<BEG> method run throw ioexception if the file contain error <END>
<BEG> would control the inclusion of header and footer from the document <SEG> if we support it <END>
<BEG> remove a value record from the record array <END>
<BEG> set the default row height for the sheet if the row do not define their own height param dch the default row height <END>
<BEG> return whether an uncalced record must be insert or not at generation <END>
<BEG> register an external name in this workbook param name the name to register return a namexptg describing this name <END>
<BEG> return -1 if at end of record <END>
<BEG> return the share arrayrecord identify by firstrow <SEG> firstcolumn <END>
<BEG> is the sheet very hidden ? <END>
<BEG> converts a list of { link boundsheetrecord } s to an array and sort by the position of their bofs <END>
<BEG> get the index to the extendedformat see org apache poi hssf record extendedformatrecord return index to the xf record <END>
<BEG> get the color to use for the left border see org apache poi hssf usermodel hssfpalette # getcolor short return the index of the color definition <END>
<BEG> get the stack of the 2nd expression a a list return array of { link ptg } s <SEG> possibly < code > null < code > <END>
<BEG> param formula must not be < code > null < code > return encode size of the formula tokens do not include 2 byte for ushort length <END>
<BEG> todo - parse conditional format formula properly i e <END>
<BEG> get the index to font table field for the fontbasis record <END>
<BEG> position of legend on the x axis be automatic return the auto x position field value <END>
<BEG> true if this object have a custom number format return the custom number format field value <END>
<BEG> show category label value a percentage pie chart only return the label a percentage field value <END>
<BEG> true if object be lock when sheet have be protect return the locked field value <END>
<BEG> sets the biff8 encryption decryption password for the current thread <END>
<BEG> get the maximum change return maxchange - maximum rounding error <END>
<BEG> add ref struct externsheetsubrecord param rec ref struct <END>
<BEG> return username of the user that create the file <END>
<BEG> set the font family todo param f family <END>
<BEG> get the type of underline for the font return super or subscript option see # u_none see # u_single see # u_double see # u_single_accounting see # u_double_accounting <END>
<BEG> set whether gridlines be visible when print param gridset - < b > true < b > if no gridlines be print <SEG> < b > false < b > if gridlines be not print <END>
<BEG> return label option <END>
<BEG> param index the n-th mergedregion return mergedregion at the give index represent the area that be merged r1 <SEG> c1 - r2 <SEG> c2 <END>
<BEG> return the name of the namerecord to which this comment applies <END>
<BEG> set whether or not to print the gridlines and make your spreadsheet ugly param pg make spreadsheet ugly - y n <END>
<BEG> set to print the header - y n param p printheaders or not <END>
<BEG> set whether or not to collapse this row param c - collapse or not <END>
<BEG> if the row be format then this be the index to the extended format record see org apache poi hssf record extendedformatrecord param index to the xf record <END>
<BEG> if the row be format then this be the index to the extended format record see org apache poi hssf record extendedformatrecord return index to the xf record or bogus value undefined if be n't format <END>
<BEG> return the range of cell that this record be share across <END>
<BEG> sets the horizontal text alignment field value <END>
<BEG> set the palette index for the header color param color which color to use for the header <SEG> see the specification for detail <END>
<BEG> be the sheet currently display in the window return display or not <END>
<BEG> set if row summary appear below detail in the outline param below or not <END>
<BEG> return the left side of the header or footer <END>
<BEG> return the center of the header or footer <END>
<BEG> return an external name name range <SEG> function <SEG> user-defined function ptg <END>
<BEG> throw illegalstateexception : xssf-style external reference be not support for hssf <END>
<BEG> return text name of this define name <END>
<BEG> sets the name of the name range < p > the following be a list of syntax rule that you need to be aware of when you create and edit name < p > < ul > < li > < strong > valid character < strong > the first character of a name must be a letter <SEG> an underscore character _ <SEG> or a backslash \ <END>
<BEG> this must be call to setup the internal work book reference whenever a richtextstring be add to a cell <END>
<BEG> returns the raw <SEG> probably share unicode string <END>
<BEG> sets a particular anchor <END>
<BEG> create a color scale color gradient conditional formatting rule <END>
<BEG> get conditional formatting object at a particular index param index of the conditional formatting object to fetch return conditional formatting object <END>
<BEG> this function return all the colours <SEG> store in a map that can be edit <END>
<BEG> return color standard palette index return index to the standard palette <END>
<BEG> copies all the node from one poifs directory to another param sourceroot be the source directory to copy from param targetroot be the target directory to copy to <END>
<BEG> get the file magic of the supplied { link file } < p > even if this method return { link filemagic # unknown } it could potentially mean <SEG> that the zip stream have lead junk byte param inp a file to be identify <END>
<BEG> finds a free block <SEG> and return it offset <END>
<BEG> writes the sbats to their backing block <SEG> and update the mini-stream size in the property <END>
<BEG> extracts the vba module from a macro-enabled office file and write them to file in < tt > outputdir < tt > <END>
<BEG> set start of small block allocation table param startblock the index of the first big block of the small block allocation table <END>
<BEG> return xbat difat count <END>
<BEG> drawing object hyperlink target return possible object be { link string } <END>
<BEG> returns the drawfactory <SEG> preferably via a graphic instance <END>
<BEG> apply 2-d transforms before draw this shape <END>
<BEG> convert a single customgeometry object <SEG> i e <END>
<BEG> sets this graphic context 's font to the specify font <END>
<BEG> returns a copy of the current < code > transform < code > in the < code > graphics2d < code > context <END>
<BEG> sets the paint mode of this graphic context to alternate between this graphic context 's current color and the new specify color <END>
<BEG> sets the filename param filename the filename <END>
<BEG>  < p > for text <SEG> this be just print the text <END>
<BEG> returns a collection of atp function name implement by poi <END>
<BEG> calculate how many workday be there between a start and an end date <SEG> a excel representation <SEG> consider a range of holiday <END>
<BEG> param start start date <END>
<BEG> identical to { link # recurseclearcachedformularesults } except for the listener call-back <END>
<BEG> use the validation return by { link # getvalidationforcell cellreference } if you want the error display detail <END>
<BEG> translates an excel internal error code into the corresponding poi erroreval instance param errorcode an error code list in { link formulaerror } throw runtimeexception if an unknown errorcode be specify <END>
<BEG> notifies this evaluation tracker that the evaluation of the specify cell be complete <END>
<BEG> resolves a built-in function index <END>
<BEG> the array form of lookup be very similar to the hlookup and vlookup function <END>
<BEG> excel do not support infinity and nans <SEG> rather <SEG> it give a # num ! <END>
<BEG> return whether the row at rowindex be hidden <END>
<BEG> all operand { link ptg } s be classify 'relative ' <SEG> 'value ' <SEG> 'array ' <END>
<BEG> used to let u know what the date be format be <SEG> in excel term <SEG> which we may wish to use when handle elapse time <END>
<BEG> return the first cell reference which define this area <END>
<BEG> determines if the give coordinate lie within the bound of this range <END>
<BEG> param firstcol column number for the upper left hand corner <END>
<BEG> check if cell range a contains cell range b b < = a todo : move this into { link cellrangeaddressbase } param cra cell range a param crb cell range b return true if cell range a contains cell range b <END>
<BEG> take a cell <SEG> and apply a font to it param cell the cell to set the alignment for param font the font that you want to set <END>
<BEG> converts the supplied < tt > value < tt > to the text representation that excel would give if the value be to appear in an unformatted cell <SEG> or a a literal number in a formula < br > note - the result from this method differ slightly from those of < tt > double tostring < tt > in some special case excel behave quite differently <END>
<BEG> check if the fonts be instal correctly so that java can compute the size of column <END>
<BEG> invokes the delegate 's < code > read < code > method if the current position be less than the limit <END>
<BEG> invokes the delegate 's < code > read byte [ ] <SEG> int <SEG> int < code > method <END>
<BEG> invokes the delegate 's < code > close < code > method if { link # ispropagateclose } be < code > true < code > <END>
<BEG> get a double value from a byte array <SEG> read it in little endian format then convert the result revolt ieee 754 curse them float point number to a happy java double param data the byte array return the double 64-bit value <END>
<BEG> converts point to emus param point point return emus <END>
<BEG> param columnwidth specify in 256ths of a standard character return equivalent emus <END>
<BEG> write the data to the buffer and flush the buffer <SEG> if a line separator be detect <END>
<BEG> returns whether or not the processdestroyer be register a a shutdown hook return true if this be currently add a shutdown hook <END>
<BEG> handles an exception base on the system property <END>
<BEG> returns full name for the caller class ' logger <END>
<BEG> enable or disable verification that the remote host connect to create a separate error stream be the same a the host to which the standard out stream be connect <END>
<BEG> returns true if the client have a currently open socket <END>
<BEG> returns the default timeout in millisecond that be use when open a socket <END>
<BEG> a convenience method to send the ftp user command to the server <SEG> receive the reply <SEG> and return the reply code <END>
<BEG> return whether strict multiline parsing be enable <SEG> a per rfc 959 <SEG> section 4 2 <END>
<BEG> returns the hostname or ip address in the form of a string return by the server when enter passive mode <END>
<BEG> set the external ip address in active mode <END>
<BEG> get file detail use the mlst command param pathname the file or directory to list <SEG> may be { code null } return the file detail <SEG> may be { code null } throw ioexception on error since 3 0 <END>
<BEG> obtain the currently active listener <END>
<BEG> enable or disable passive mode nat workaround <END>
<BEG> enables or disables automatic server encode detection only utf-8 support <END>
<BEG> determine if the file be a regular file <END>
<BEG> set the name of the group own the file <END>
<BEG> configures the socket to use client or server mode in it first handshake <END>
<BEG> returns the name of the cipher suite which could be enable for use on this connection <END>
<BEG> send the auth command with the specify mechanism <END>
<BEG> convenience method return the number of group in the internal matchresult <END>
<BEG> sets imap client state <END>
<BEG> get the imap protocol string command correspond to a command code <END>
<BEG> intepret the string reply code - ok <SEG> no <SEG> bad - in an untagged response a a integer <END>
<BEG> checks whether the reply code indicate success or not param replycode the code to check return { code true } if the code equal { link # ok } <END>
<BEG> set a { link keymanager } to use <END>
<BEG> recursive method that traverse a pre-threaded graph or tree of connected article object and print them out <END>
<BEG> return whether or not the query date should be treat a gmt <END>
<BEG> convert byte to unsigned integer <END>
<BEG> returns ntp message packet <END>
<BEG> converts 64-bit ntp timestamp value to a < code > string < code > <END>
<BEG> removes a protocolcommandlistener <END>
<BEG> returns the reply code of the receive server reply <END>
<BEG> returns true if the protocolcommandevent be generate a a result of send a command <END>
<BEG> set behaviour of the option for do request come from the other end <END>
<BEG> returns the tftp string representation of a tftp transfer mode <END>
<BEG> returns the transfer mode of the request <END>
<BEG> retrieves the time from the server and return a java date contain the time convert to the local timezone <END>
<BEG> same a < code > gettime host <SEG> default_port ; < code > param host the time server return the date throw ioexception on error <END>
<BEG> set to < code > true < code > if you want the return value of { link subnetinfo # getaddresscount } to include the network and broadcast address <END>
<BEG> non-javadoc see com enterprisedt net ftp ftpclientinterface # setdetecttransfermode boolean <END>
<BEG> non-javadoc see com enterprisedt net ftp ftpclientinterface # setremotehost java lang string <END>
<BEG> set up socks v4 v5 proxy setting <END>
<BEG> gets the late valid reply from the server return reply object encapsulate last valid server response <END>
<BEG> get the name of the remote host return remote host name <END>
<BEG> enable our class to be run <SEG> do the test <END>
<BEG> get the product version string return version a string <END>
<BEG> get the build timestamp return d-mmm-yyyy hh : mm : s z build timestamp <END>
<BEG> log an info level message param message message to log <END>
<BEG> log an info level message param message message to log param t throwable object <END>
<BEG> the regular expression pattern that file must match return the regular expression <END>
<BEG> is anonymous logins allow at the server ? <END>
<BEG> set the remote ip adress of the client param inetaddress the client ip adress <END>
<BEG> encrypts the password use a salt concatenate with the password and a series of md5 step <END>
<BEG> adapt to the java 8 interface <END>
<BEG> function that take another function and apply it to the argument supply by the parameter <END>
<BEG> converts a function that take a pair of argument to a function that take two argument param < a > the type of the left of the pair param < b > the type of the right of the pair param < c > the result type param fpair the source function that take a pair of argument <SEG> must not be null return a function that take two argument since 2 0 <END>
<BEG> create a function ignore it 's input an produce a constant value param constant value to return param < a > type of the ignored input param < b > type of the constant return return a function produce a constant value <END>
<BEG> applies { code f } to each element of { code collection } <SEG> then concatenate the result <END>
<BEG> uses a { link java util stream collector } to collect reduce an { link java lang iterable } <END>
<BEG> unzips an iterable of { link pair pair } into a { link pair pair } of iterables <END>
<BEG> wrap an iterator to add support for the peek operation <END>
<BEG> iterator that return a single element param a element to return param < a > element type return iterator return only a since 3 0 <END>
<BEG> if the zero of your monoid be combine with an element of the type your monoid work with the result should be that element <END>
<BEG> a monoid sums up value inside either { link io atlassian fugue semigroups # either } <END>
<BEG> factory method for { link io atlassian fugue option } instance from { link java util optional } instance <END>
<BEG> lifts a predicate that take an a into a predicate that take an option of a <END>
<BEG> factory method for a pair factory function <END>
<BEG> returns a value sum < code > n + 1 < code > time < code > a + a + + a < code > the default definition use peasant multiplication <SEG> exploit associativity to only require ` o log n ` us of { link # append object <SEG> object } <END>
<BEG> create a new { link java util function supplier } by transform the result call the first { link java util function supplier } param transform function to transform the result of a { link java util function supplier } of a 's to b 's param first a { link java util function supplier } of a 's param < a > return type of the { link java util function supplier } to transform param < b > return type of the new { link java util function supplier } return a new { link java util function supplier } return b 's <END>
<BEG> creates a new failure param e an exception to wrap <SEG> must not be null <END>
<BEG> returns a success wrap all of the value if all of the argument be a success <SEG> otherwise this return the first failure param try an iterable of try value param collector result collector param < t > the success type param < a > the intermediate accumulator type param < r > the result type return a success wrap all of the value if all of the argument be a success <SEG> otherwise this return the first failure since 4 6 0 <END>
<BEG> constructs a database action a a function from a database connection to a value <END>
<BEG> returns the callable-valued function projection of this database action <END>
<BEG> binds the give function to the value in the give callables with a final join <END>
<BEG> a first-class version of the sequence method <END>
<BEG> returns a transformation from a callable to an optional value <END>
<BEG> turns an optional value into a callable <END>
<BEG> maps with the give function across the give stream in parallel <SEG> while fold with the give monoid <END>
<BEG> binds the give function to this promise and the give promise <SEG> with a final join <END>
<BEG> performs a right-fold reduction across a list in constant stack space <END>
<BEG> applies a stream of comonadic function to this promise <SEG> return a stream of value <END>
<BEG> first-class version of parmap on list <END>
<BEG> returns a function which return a product-1 which wait for the give future to obtain a value <END>
<BEG> returns an effect that wait for a give future to obtain a value <SEG> discard the value <END>
<BEG> provides a strategy that perform sequential non-concurrent evaluation of it argument <END>
<BEG> projects an unmodifiable list view of this array <END>
<BEG> construct a left value of either <END>
<BEG> constructs a lazy evaluation of an expression that produce < code > eval < a > < code > <END>
<BEG> splits this tree into a pair of subtrees at the point where the give predicate <SEG> base on the measure <SEG> change from < code > false < code > to < code > true < code > <END>
<BEG> creates a new hashset use the give equal and hash <END>
<BEG> returns a heterogeneous list consisting of a single element <END>
<BEG> evaluate each action in the sequence from leave to right <SEG> and collect the result <END>
<BEG> a function that convert string buffer to synchronous queue <END>
<BEG> constructs a lazy string from a string <END>
<BEG> return the successor of this natural number return the successor of this natural number <END>
<BEG> returns the minimum element in this non empty list accord to the give ordering <END>
<BEG> returns a function that take a non-empty list to a list <END>
<BEG> check if all target satisfy the predicate <END>
<BEG> create a { link poptional } use the canonical function : getormodify and set <END>
<BEG> performs a side-effect for the value of this optional value <END>
<BEG> filters element from this optional value by return only element which produce < code > true < code > when the give function be apply to them <END>
<BEG> returns an either projection of this optional value ; the give argument in < code > left < code > if no value <SEG> or the value in < code > right < code > <END>
<BEG> returns an array projection of this optional value <END>
<BEG> joins the give optional value of optional value use a bind operation <END>
<BEG> first-class version of the iif function <END>
<BEG> adds node use the iterable of product with priority k and value a <END>
<BEG> constructs a sequence from the iterable <END>
<BEG> checks if this sequence be not empty <END>
<BEG> sort this stream accord to the give ordering <SEG> use a parallel quick sort algorithm that use the give parallelisation strategy <END>
<BEG> constructs a stream with the give element in the iterable <END>
<BEG> traversable instance of stream for io <END>
<BEG> converts this stream to a function of natural number <END>
<BEG> returns a function that determine whether a give stream be not empty <END>
<BEG> returns a potential value that the give key map to <END>
<BEG> the expression < code > t1 union t2 < code > take the left-biased union of < code > t1 < code > and < code > t2 < code > <END>
<BEG> navigates to the first child of the current location <SEG> that satisfy the give predicate <END>
<BEG> returns the left sibling of the currently focus node <END>
<BEG> returns a zipper over the tree of all possible permutation of this tree zipper comonad pattern <END>
<BEG> function application on the successful side of this validation <SEG> or accumulate the error on the failing side use the give semigroup should one or more be encounter <END>
<BEG> returns an equal instance that use the { link object # equal object } method to test for equality <END>
<BEG> function composition flip <END>
<BEG> promotes this function so that it return it result in an option <END>
<BEG> convert a f0 into a p1 <SEG> use call-by-name semantic : function f be evaluate at each call to { link p1 # _1 } <END>
<BEG> promote any function to a transformation between p1s <END>
<BEG> turns an array of p1s into a single p1 of an array <END>
<BEG> duplicates this product into the first element comonad pattern <END>
<BEG> replaces the first element of this product with the give value <END>
<BEG> returns the 1-product projection over the first element <END>
<BEG> returns a curried form of { link # swap } <END>
<BEG> returns an iterator over the parse value <END>
<BEG> returns the transformation equivalent to this show <END>
<BEG> prints the give argument to the standard output stream with a new line <END>
<BEG> returns a show instance that use { link object # tostring } to perform the display render <END>
<BEG> returns a chained { code checkedconsumer } that first execute { code this accept t } and then { code after accept t } <SEG> for a give { code t } of type { code t } <END>
<BEG> returns a function that always return the constant value that you give in parameter <END>
<BEG> returns the identity checkedfunction1 <SEG> i e <END>
<BEG> returns a composed function that first apply the { linkplain checkedfunction1 } { code before } the give argument and then apply this checkedfunction1 to the result <END>
<BEG> creates an array that contain the element of the give { link java util stream stream } <END>
<BEG> store the content of an iterable in an array <END>
<BEG> returns the maximum element of this tree accord to the underlying comparator <END>
<BEG> generates a theoretically infinitely long stream use a function to calculate the next value base on the previous <END>
<BEG> extends continue this { code stream } with a stream of value create by apply consecutively provide { code function } to the last element of the original stream <END>
<BEG> an iterator by mean of head and tail <END>
<BEG> creates a succeeded { code future } <SEG> back by the give { link executor } <END>
<BEG> completes this { code promise } with the give { code future } <SEG> once that { code future } be complete <END>
<BEG> reduces many { code either } s into a single { code either } by transform an { code iterable < either < l <SEG> r > > } into a { code either < seq < l > <SEG> seq < r > > } <END>
<BEG> runs an action in the case this be a projection on a left value <END>
<BEG> creates a { code predicate } that test <SEG> if an object be not null < pre > { code predicate < integer > isnotnull = isnotnull ; isnotnull test 0 ; true isnotnull test null ; false } < pre > param < t > test object type return a new { code predicate } <END>
<BEG> negates a give { code predicate } <END>
<BEG> turns a sequence of { code tuple8 } into a tuple8 of { code seq } s param < t1 > 1st component type param < t2 > 2nd component type param < t3 > 3rd component type param < t4 > 4th component type param < t5 > 5th component type param < t6 > 6th component type param < t7 > 7th component type param < t8 > 8th component type param tuples an { code iterable } of tuples return a tuple of 8 { link seq } s <END>
<BEG> maps the component of this tuple use a mapper function for each component <END>
<BEG> clears bits in the give element that a set in the value param <END>
<BEG> the stateflag value change with change apply to this geometry <END>
<BEG> closes last path of the multipath with the arc segment <END>
<BEG> returns true if two value be equal also can compare inf and nan <END>
<BEG> inserts the element and bounding_box into the quad_tree_impl <END>
<BEG> removes the element and bounding_box at the give element_handle <END>
<BEG> transforms an array of point store in an array of double a interleaved xy coordinate <END>
<BEG> returns true if this matrix be degenerate do not have an inverse within the give tolerance <END>
<BEG> set transformation to a shear <END>
<BEG> returns the attribute count of this description <END>
<BEG> returns the index the give attribute in the vertex description <END>
<BEG> returns true if this vertex description include all attribute from the src <END>
<BEG> returns true <SEG> if the vertex have z attribute <END>
<BEG> returns an offset to the first ordinate of the give attribute <END>
<BEG> converts a distance in the unit of < code > radius < code > e g <END>
<BEG> return the short geohash length that will have a width & amp ; height & gt ; = specify argument <END>
<BEG> parses a point shape from the raw string <END>
<BEG> use this method in case where { link org neo4j kernel api exception index indexentryconflictexception } be catch but it should not have be allow to be throw in the first place <END>
<BEG> offers a transaction id <END>
<BEG> param type type of entry <END>
<BEG> convert a single byte to a human-readable hex number <END>
<BEG> return an { link idgenerator } assume that the input id be { link long } object and cast to primitive longs <END>
<BEG> converts a sortable < code > long < code > back to a < code > double < code > <END>
<BEG> returns the { code access } to { link charsequence } s back by { linkplain byteorder # nativeorder native } { code char } read <SEG> typically from { code char [ ] } array <END>
<BEG> reads { code [ offset <SEG> offset + 1 ] } bytes of the byte sequence represent by the give { code input } a a single { code short } value <SEG> return widen to { code int } <END>
<BEG> returns a hash function implement < a href= http : github com google cityhash blob 8af9b8c2b889d80c22d6bc26ba0df1afb79a30db src city cc > cityhash64 algorithm <SEG> version 1 1 < a > use the two give seed value <END>
<BEG> returns a hash function implement so-called < a href= http : github com google farmhash blob 34c13ddfab0e35422f4c3979f360635a8c050260 dev farmhashuo cc > farmhashuo algorithm < a > with the give seed value <END>
<BEG> shortcut for { link # hashbooleans boolean [ ] hashbooleans new boolean [ ] & # 123 ; input & # 125 ; } <END>
<BEG> returns the hash code for byte of the specified subsequence of the give { code string } 's underlie { code char } array <END>
<BEG> resets prune tag set and add tag name condition to it <END>
<BEG> if false <SEG> when output xml <SEG> if an attribute name be not valid <SEG> attempt to fix it by use a prefix and remove invalid character <END>
<BEG> adds specify tag transformation to the collection <END>
<BEG> return true if < x > form be allow <END>
<BEG> html5 media-embedded tag 12 tag <END>
<BEG> deprecated because unmanaged network io do not handle proxy <SEG> slow server or broken connection well <END>
<BEG> checks whether specified string can be valid tag name or attribute name in xml <END>
<BEG> sets the entity resolver for uri-only input <END>
<BEG> whether the html 4 mode report boolean attribute in a way that repeat the name in the value <END>
<BEG> exposes the configuration of the emulated xml parser as well a boolean-valued configuration without use non- < code > xmlreader < code > getters directly <END>
<BEG> throw saxexception see nu validator htmlparser impl treebuilder # end <END>
<BEG> see org xml sax ext lexicalhandler # comment char [ ] <SEG> int <SEG> int <END>
<BEG> append a child to this node and return the child <END>
<BEG> remove a child from this node <END>
<BEG> see org xml sax contenthandler # processinginstruction java lang string <SEG> java lang string <END>
<BEG> returns the segment span the { linkplain # getvalue value } of this attribute <SEG> include quotation mark if any <SEG> or < code > null < code > if it { linkplain # hasvalue have no value } <END>
<BEG> returns the { link attribute } with the specify name case insensitive <END>
<BEG> returns the unicode code point of the specified character entity reference name <END>
<BEG> returns the < a target= _blank href= http : www unicode org > unicode < a > code point represent by this character reference <END>
<BEG> parses a single encoded character reference text into a < code > characterreference < code > object <END>
<BEG> returns a < code > reader < code > that read the output of the specify { link charstreamsource } <END>
<BEG> returns the output of the specify { link charstreamsource } a a string <END>
<BEG> returns a set contain the { linkplain element # getname name } of all of the < a href= # htmlelement > html elements < a > for which the { linkplain element # getstarttag start tag } be optional <END>
<BEG> returns an iterator over the item in the list in proper sequence <END>
<BEG> replaces the specify { link formcontrol } in this output document <END>
<BEG> sets the bullet character to use for list item inside { link htmlelementname # ul ul } element <END>
<BEG> returns the row number of this character position in the source document <END>
<BEG> sets whether { linkplain segment # iswhitespace char white space } in the text between the tag be to be collapse <END>
<BEG> generates the html text of a { linkplain starttagtype # normal normal } start tag with the specify tag name and { linkplain attributes # populatemap map <SEG> boolean attribute map } <END>
<BEG> returns the current size of the internal character buffer <END>
<BEG> indicates whether the value of the specify { linkplain attribute attribute } in the specify { linkplain starttag start tag } be include in the output <END>
<BEG> returns < code > true < code > if node match the pseudoclass within current result <END>
<BEG> matches conditional comment expression with current mode <END>
<BEG> sets the case-sensitive flag for various match <END>
<BEG> get an attribute value by key <END>
<BEG> test if this attributes list be empty size==0 <END>
<BEG> attempt to cast this comment to an xml declaration note <END>
<BEG> get the string content of the document 's { code title } element <END>
<BEG> normalise the document <END>
<BEG> add this element to the supplied parent element <SEG> a it next child <END>
<BEG> create a new element by tag name <SEG> and add it a the last child <END>
<BEG> 11 2 5 2 closing element that have imply end tag < p > when the step below require the ua to generate implied end tag <SEG> then <SEG> while the current node be a dd element <SEG> a dt element <SEG> an li element <SEG> an option element <SEG> an optgroup element <SEG> a p element <SEG> an rp element <SEG> or an rt element <SEG> the ua must pop the current node off the stack of open element <END>
<BEG> retrieve the error message <END>
<BEG> gets if this tag should be format a a block or a inline return if should be format a block or inline <END>
<BEG> pulls a balanced string off the queue <END>
<BEG> pulls the next run of whitespace character of the queue <END>
<BEG> consume an tag name off the queue word or : <SEG> _ <SEG> - return tag name <END>
<BEG> consume a css identifier id or class off the queue letter <SEG> digit <SEG> - <SEG> _ http : www w3 org tr css2 syndata html # value-def-identifier return identifier <END>
<BEG> < p > this whitelist allow a fuller range of text node : < code > a <SEG> b <SEG> blockquote <SEG> br <SEG> cite <SEG> code <SEG> dd <SEG> dl <SEG> dt <SEG> em <SEG> i <SEG> li <SEG> ol <SEG> p <SEG> pre <SEG> q <SEG> small <SEG> span <SEG> strike <SEG> strong <SEG> sub <SEG> sup <SEG> u <SEG> ul < code > <SEG> and appropriate attribute <END>
<BEG> get the attribute value for each of the matched element <END>
<BEG> get the form element 's value of the first match element <END>
<BEG> get all of the parent and ancestor element of the matched element <END>
<BEG> installs a new attribute <END>
<BEG> check the attribute value for uppercase letter only if the value should be lowercase <SEG> require for literal value in xhtml <END>
<BEG> converts an encode name to the standard java name <END>
<BEG> # 431953 - start rj wraplen adjust for smooth international ride <END>
<BEG> see java bean beaninfo # geticon int <END>
<BEG> check if the first string contain the second one <END>
<BEG> return offset of cc from begin of s1 <SEG> -1 if not find <END>
<BEG> check if the string valuetocheck be contain in validvalues array case insesitie comparison <END>
<BEG> is the give char valid in name ? <END>
<BEG> write all the data to the output stream <END>
<BEG> code follow by text <END>
<BEG> param < t > the throwable type param t the throwable whose stacktrace we want to remove param clazz the caller class param method the caller method return the input throwable with removed stacktrace <END>
<BEG> sets the { link # pathparts } from the give raw encode path <END>
<BEG> returns the wrapper key for the json content or { code null } for none <END>
<BEG> sets the streaming content or { code null } for no content <END>
<BEG> sets the write timeout for post put request <END>
<BEG> default implementation do nothing <SEG> but subclass may override to attempt to abort the connection or release allocated system resource for this connection <END>
<BEG> called when the give unrecognized key be encounter in the give context object <END>
<BEG> parses a string value a a json object <SEG> array <SEG> or value into a new instance of the give destination class use { link jsonparser # parse class } <END>
<BEG> requests that the output be pretty print by default it be not <END>
<BEG> returns the identifier establish by the client that must be a string or a number or { code null } for a notification and therefore not expect to receive a response <END>
<BEG> returns the { link mocklowlevelhttprequest } that be associate with this { link builder } <SEG> or { code null } if no such instance exists <END>
<BEG> returns whether { link # disconnect } have be call <END>
<BEG> returns the value of { code millis } parameter when { link # sleep long } be last call or { code 0 } if not call <END>
<BEG> removes the key value mapping at the give index <SEG> or ignore if the index be out of bound <END>
<BEG> makes a deep copy of the give source object into the destination object that be assume to be construct use { code object clone } <END>
<BEG>  < p > default implementation be to call { link # get string } and check if it be { code null } <END>
<BEG>  < p > default implementation be to call { link collection # contains object } on { link # value } <END>
<BEG> returns the value type parameter of { link map } that be assignable from the give map type <END>
<BEG> specify the { link connectionfactory } use to create new request <END>
<BEG> start a 'get ' request to the give url param url return request throw httprequestexception <END>
<BEG> get the status code of the response return the response code throw httprequestexception <END>
<BEG> set the size use when buffer and copy between stream < p > this size be also use for send and receive buffer create for both char and byte array < p > the default buffer size be 8<SEG>192 byte param size return this request <END>
<BEG> set the 'user-agent ' header to give value param useragent return this request <END>
<BEG> get the http method of this request return method <END>
<BEG> creates new case-insensitive multimap <END>
<BEG> returns iterator of all entry <END>
<BEG> starts http tunnel <END>
<BEG> return the name of the { link java nio charset charset } the bom represent <END>
<BEG> deletes the file object <SEG> which may be a file or a directory <END>
<BEG> concatenates a filename to a base path use normal command line style rule <END>
<BEG> checks whether two filename be equal use the case rule of the system <END>
<BEG> checks a filename to see if it match the specified wildcard matcher allow control over case-sensitivity <END>
<BEG> implements the same behaviour a the touch utility on unix <END>
<BEG> copies a file or directory to within another directory preserve the file date <END>
<BEG> ensures that the stream be close before it get garbage-collected <END>
<BEG> return the bom charset name - { link byteordermark # getcharsetname } <END>
<BEG> invokes the delegate 's < code > close < code > method if { link # ispropagateclose } be { code true } <END>
<BEG> resets the target to the late mark <SEG> throw ioexception if an i o error occurs while call the underlie reader 's reset method see java io reader # reset <END>
<BEG>  param readlimit max read limit ignore <END>
<BEG> read the specified number of character into the array <END>
<BEG> indicates whether < i > mark < i > be support <END>
<BEG> follows change in the file <SEG> call the tailerlistener 's handle method for each new line <END>
<BEG> gets the content of a < code > byte [ ] < code > a a string use the specified character encode <END>
<BEG> gets the content of a classpath resource a a string use the specified character encode <END>
<BEG> gets the content of a classpath resource a a byte array <END>
<BEG> write the byte to byte array <END>
<BEG> < p > callback method invoke when the tls handshake fails < p > param event the event object carry information about the tls handshake event param failure the failure that cause the tls handshake to fail <END>
<BEG> get the map of mailcapentries base on the mime type <END>
<BEG> returns whether the specify data flavor be support for this object < p > this method iterate through the dataflavors return from < code > gettransferdataflavors < code > <SEG> compare each with the specify flavor <END>
<BEG> get the command < i > cmdname < i > <END>
<BEG> this method will return an inputstream represent the the data and will throw an ioexception if it can not do so <END>
<BEG> compute and return the message digest of the input byte array <END>
<BEG> write out give byte [ ] a a literal <END>
<BEG> write out a parenthesised list <END>
<BEG> returns a new byte array that be a copy of the data <END>
<BEG> return a buffer to be use to read a response <END>
<BEG> return the rest of the response a a string <SEG> usually use to return the arbitrary message text after a no response <END>
<BEG> close this folder without wait for the server <END>
<BEG> check whether this connection be really open <END>
<BEG> expunge the indicated message <SEG> which must have be mark a deleted <END>
<BEG> get the right allow to the currently authenticate user <END>
<BEG> return the mime format stream correspond to this message <END>
<BEG> imapmessage use rfc822 size <END>
<BEG> get the block size to use for fetch request on this store <END>
<BEG> close this store <END>
<BEG> get the default folder <SEG> represent the root of this user 's namespace <END>
<BEG> response handler method <END>
<BEG> handle notification and alert <END>
<BEG> return the sequence number for the give message number <END>
<BEG> always true for the folder inbox <SEG> always false for any other name <END>
<BEG> return the unique id string for this message <SEG> or null if not available <END>
<BEG> set the specified flag on this message to the specify value <END>
<BEG> return the size of the content of this message in byte <END>
<BEG> return a map of the capability the server provide <SEG> a per rfc 2449 <END>
<BEG> if set to true <SEG> and this message have some valid and some invalid address <SEG> send the message anyway <SEG> report the partial failure with a sendfailedexception <END>
<BEG> override flush method in filteroutputstream <END>
<BEG> calls the put method directly <END>
<BEG> get a boolean value system property <END>
<BEG> return the address to which this message be send succesfully <END>
<BEG> return all the header a an enumeration of { link javax mail header } object <END>
<BEG> adds a bodypart at position < code > index < code > <END>
<BEG> return an enumeration of the name of all parameter in this list <END>
<BEG> overrides object tostring <END>
<BEG> is this service currently connect ? <END>
<BEG> return < code > geturlname tostring < code > if this service have a urlname <SEG> otherwise it will return the default < code > tostring < code > <END>
<BEG> return a new inputstream represent a subset of the data from this inputstream <SEG> start at < code > start < code > inclusive up to < code > end < code > exclusive <END>
<BEG> called by the servlet container to indicate to a servlet that the servlet be be take out of service <END>
<BEG> get the enclosing jspwriter <END>
<BEG> get tagvariableinfo object associate with this taginfo <END>
<BEG> get the init parameter data a an immutable map <END>
<BEG> get the jsp : id <END>
<BEG> get the connection handle associate with the managed connection instance <END>
<BEG> prints the composite message and the embedded stack trace to the specify stream < code > p < code > <END>
<BEG> generic print format function : does depth-first descent of the structure and recursively print all non-private object point to by this object <END>
<BEG> this be the default list iterator this will not handle nested list traversal <END>
<BEG> equality check predicate <END>
<BEG> set the separator for the encode method below <END>
<BEG> returns a string representation of the object return a string representation of the object <END>
<BEG> determines if this attribute have an associate value <END>
<BEG> adds a medium format to the medium description <END>
<BEG> encode into a canonical string <END>
<BEG> parse the field string return timefield <END>
<BEG> specifies the character set to be use to display the session name and information data <END>
<BEG> specifies whether to try to write typed-time field instead of raw integer value <END>
<BEG> write the specified sessiondescription to the output stream use the current setting <END>
<BEG> creates and return a deep copy of this object return a clone of this instance <END>
<BEG> removes all mediadescriptions from the session description <END>
<BEG> creates an address with the new address string value <END>
<BEG> get the user host : port for the address field <END>
<BEG> get the address type ; return int <END>
<BEG> set the address field param address sipuri to set <END>
<BEG> set the user name of the userinfo member <END>
<BEG> this method determine if this be a uri with a scheme of sip or sip <END>
<BEG> an introspection base string format method <END>
<BEG> getuser host return user host portion of the uri null if none exists <END>
<BEG> accessor for uri parameter return a name-value list contain the parameter <END>
<BEG> returns an iterator over the name strings of all header present in this sipuri <END>
<BEG> sets the value of the < code > lr < code > parameter of this sipuri <END>
<BEG> set the telephone number <END>
<BEG> remove a cached authorization header <END>
<BEG> set the re-invite client transaction <END>
<BEG> return body encode in canonical form <END>
<BEG> returns the boolean value of the state paramater of this wwwauthenicateheader <END>
<BEG> set the specified parameter param nv namevalue to set <END>
<BEG> get the error information message of this errorinfoheader <END>
<BEG> get the to-tag parameter from the address parm list <END>
<BEG> remove tag member <END>
<BEG> creates a new alloweventsheader base on the newly supply event type value <END>
<BEG> create a referto header <END>
<BEG> p-preferred-identity header param address - address return newly create p-preferred-identity header throw nullpointerexception <END>
<BEG> return the newly create p-user-database header <END>
<BEG> return string cgi value <END>
<BEG> param ci3gpp2 -- string ci 3gpp2 value throw nullpointerexception -- if arg be null throw parseexception -- if arg be bad <END>
<BEG> < p > get the address 's uri < p > return uri set in the address of this header <END>
<BEG> < p > set the icid-value parameter < p > param icid - value to set in the icid-value parameter throw parseexception <END>
<BEG> set the visited network id a a string <END>
<BEG> set security mechanism <END>
<BEG> set client spi spi-c parameter param spic - spi-c value throw invalidargumentexception <END>
<BEG> gets the minor version value of this mimeversionheader <END>
<BEG> sets the option tag value to the new supplied < var > optiontag < var > parameter <END>
<BEG> non-javadoc see android gov nist javax sip header siprequestline # seturi android gov nist javax sip address genericuri <END>
<BEG> sets the subject value of the subjectheader to the supply string subject value <END>
<BEG> return true if this have an associate list object <END>
<BEG> unpack a multipart mime packet and set a list of content packet <END>
<BEG> return true if the header belong only in a request <END>
<BEG> template match for sip message <END>
<BEG> override the hashcode method see issue # 55 note that if you try to use this method before you assemble a valid request <SEG> you will get a constant -1 <END>
<BEG> get the contenttype header null if one do not exist <END>
<BEG> parse the weekday field return an integer with the calendar content for wkday <END>
<BEG> parse the string message return sipheader minexpiresparser throw sipparseexception if the message do not respect the spec <END>
<BEG> this be where we receive the byte from the stream and we analyze the through message structure <END>
<BEG> start reading and processing input <END>
<BEG> parse the message <END>
<BEG> get the port for outgo message send from the channel <END>
<BEG> tcp can handle an unlimited number of byte <END>
<BEG> global check for whether to log or not <END>
<BEG> set the dialog identifier <END>
<BEG> set the remote sequence number for the dialog <END>
<BEG> todo -- this method have to be add to the api <END>
<BEG> return a transport string <END>
<BEG> compare two udp message channel for equality <END>
<BEG> return the host where socket be point <END>
<BEG> gets the response message encapsulate in this responseevent <END>
<BEG> return the start date <SEG> if set ; otherwise null <END>
<BEG> returns the < code > elcontext < code > that be create <END>
<BEG> resolve a static field or method name <END>
<BEG> construct if need and return a default variablemapper { return the default variable <END>
<BEG> retrieve the list of currently register deploymentfactories <END>
<BEG> < p > return an < code > iterator < code > over the set of currently register behavior id for this < code > application < code > < p > return an iterator with behavior id <END>
<BEG> < p > return the severity level < p > return the severity level <END>
<BEG> < p class= changed_added_2_2 > if this navigation case represent a flow invocation <SEG> this property be the documentid in which the flow whose id be give by the return from { link # getfromoutcome } be defined <END>
<BEG> < p class= changed_added_2_0 > tests whether the immediate attribute be specify <END>
<BEG> < p class= changed_added_2_0 > implementation of { link javax face component stateholder # istransient } <END>
<BEG> < p class= changed_added_2_0 > default implementation of { link clientbehavior # gethints } <END>
<BEG> < p > return the value of the < code > dir < code > property < p > return the property value < p > contents : direction indication for text that do not inherit directionality <END>
<BEG> < p > set the value of the < code > dir < code > property < p > param dir the new property value <END>
<BEG> < p > return the value of the < code > rowheader < code > property < p > return the property value < p > contents : flag indicate that this column be a row header column and therefore cell in this column should be render with th instead of td and must have the 'scope= row ' attribute <END>
<BEG> < p > return the value of the < code > height < code > property < p > return the property value < p > contents : override for the height of this image <END>
<BEG> < p > return the value of the < code > border < code > property < p > return the property value < p > contents : width in pixel of the border to be draw around the table contain the option list <END>
<BEG> < p class= changed_added_2_3 > return the character use to separate expression in a series of expression <END>
<BEG> < p class= changed_added_2_3 > returns the remain expression for the current request < p > return the remain expression <END>
<BEG> < p > finds the near composite component parent of the specified component <END>
<BEG> < p class= changed_added_2_0 > return the character use to separate segment of a clientid <END>
<BEG> < p > set the optional parameter name for this parameter < p > param name the new parameter name <SEG> or < code > null < code > for no name <END>
<BEG> < p > return the description for this selection item < p > return the item description <END>
<BEG> < p class= changed_added_2_2 > override behavior from the superclass to queue an { link actionevent } that may result in the invocation of the < code > action < code > or any < code > actionlistener < code > s that may be associate with this instance < p > < div class= changed_added_2_2 > < p > take no action if any of the following condition be true : < p > < ul > < li > < p > the current request be a postback and the instance have be configure to not operate on postback <END>
<BEG> < p class= changed_added_2_0 > return < code > false < code > <END>
<BEG> < p > < span class= changed_modified_2_0 changed_modified_2_0_rev_a > allow < span > an arbitrary method to be call for the beforephase event a the uiviewroot run through it lifecycle <END>
<BEG> < p > if the argument < code > toremove < code > be in the list of { link phaselistener } s for this instance <SEG> it must be remove < p > param toremove the { link phaselistener } to remove <END>
<BEG> returns the javascript event handler function that be invoke when the websocket be open <END>
<BEG> < p class= changed_added_2_0 > returns a string contain the real path for a give virtual path <END>
<BEG> < p > < span class= changed_modified_2_3 > returns < span > the name of the character encode mime charset use for the body send in this response <END>
<BEG> < p class= changed_added_2_0 > set the response header with the give name and value < p > < p > < em > servlet : < em > this must be perform by call the < code > javax servlet http httpservletresponse < code > < code > setheader < code > method < p > < p > the default implementation throw < code > unsupportedoperationexception < code > and be provide for the sole purpose of not break exist application that extend this class < p > param name the name of the response header <END>
<BEG> < p class= changed_added_2_0 > resets the current response < p > < p > < em > servlet : < em > this must be perform by call the < code > javax servlet http httpservletresponse < code > < code > reset < code > method < p > < p > the default implementation throw < code > unsupportedoperationexception < code > and be provide for the sole purpose of not break exist application that extend this class < p > since 2 0 <END>
<BEG> < p class= changed_added_2_0 > sends an http status code with message < p > < p > < em > servlet : < em > this must be perform by call the < code > javax servlet http httpservletresponse < code > < code > senderror < code > method < p > < p > the default implementation throw < code > unsupportedoperationexception < code > and be provide for the sole purpose of not break exist application that extend this class < p > param statuscode an http status code param message an option message to detail the cause of the code since 2 0 throw ioexception any io related exception <END>
<BEG> < p class= changed_added_2_0 > set the content length of the response < p > < p > < em > servlet : < em > this must be perform by call the < code > javax servlet http httpservletresponse < code > < code > setcontentlength < code > method < p > < p > the default implementation throw < code > unsupportedoperationexception < code > and be provide for the sole purpose of not break exist application that extend this class < p > param length the value to be set <END>
<BEG> < p class= changed_added_2_2 > return the result of call { link uinamingcontainer # getseparatorchar } <SEG> pass < code > this < code > a the argument <END>
<BEG> < p class= changed_added_2_1 > return a flag indicate if the resource associate with this < code > facescontext < code > instance have be release < p > return < code > true < code > if the resource have be release <END>
<BEG> note because uiviewaction be decorate the facescontext during the execution of a request we can not rely on the saved facescontext a it would be the original facescontext which be what we should be able to rely on <END>
<BEG> < p class= changed_added_2_0 > return the < code > scopecontext < code > for this event < p > return the scope context <END>
<BEG> < p > < span class= changed_modified_2_2 > the < span > implementation must inspect the current request and return an object represent the tree structure and component state pass in to a previous invocation of { link # writestate javax face context facescontext <SEG> java lang object } < p > < p class= changed_added_2_2 > if the state saving method for this application be { link javax face application statemanager # state_saving_method_client } <SEG> < code > writestate < code > will have encrypt the state in a tamper evident manner <END>
<BEG> < p > return the specified state a a < code > string < code > without any markup relate to the render technology support by this responsestatemanager <END>
<BEG> < p > return the maximum value to be enforce by this { link validator } or < code > double max_value < code > if it have not be set < p > return the maximum <END>
<BEG> < p > return the maximum value to be enforce by this { link validator } < p > return the maximum <END>
<BEG> < p > return the < code > valueexpression < code > that yield the regular expression pattern when evaluate < p > return the pattern <END>
<BEG> < p class= changed_modified_2_0 > if this instance be create with a constructor that take < code > collection & lt ; facesmessage & gt ; < code > <SEG> this method return the passed collection <SEG> otherwise this method return < code > null < code > < p > since 2 0 return the message <END>
<BEG> < p class= changed_added_2_2 > return the list of resource library contract that will be make available for use in the view specify by the argument { code viewid } <END>
<BEG> < p > set the component identifier for our component <END>
<BEG> < p > set the value bind expression for our component < p > param bind the new value bind expression throw illegalargumentexception if the specified binding be not a valid value bind expression <END>
<BEG> create a new { code jsonbbuilder } instance a return by { code provider # create } call <END>
<BEG> property use to specify whether null value should be serialize to json document or skip <END>
<BEG> creates a { code jsonobjectbuilder } instance <SEG> initialize with an object <END>
<BEG> return the jsonvalue a a jsonobject return the jsonvalue a a jsonobject throw classcastexception if the jsonvalue be not a jsonobject since 1 1 <END>
<BEG> returns a stream of the { code jsonarray } element <END>
<BEG> signal to the authentication mechanism respond to the authenticate call in which these authenticationparameters be pass <SEG> that an explicit new authentication dialog be require <SEG> a oppose to continue a potentially exist one <END>
<BEG> sets whether a new authentication dialog be require <END>
<BEG> sets whether remember me should be use <END>
<BEG> determines the password <END>
<BEG> determines the set of group that the specified caller be in <SEG> base on the associate identity store <END>
<BEG> initialize the instance with the parameter it should use to generate and verify password hash <END>
<BEG> gets the asynccontext from this asyncevent <END>
<BEG> < p > returns this servlet 's { link servletconfig } object < p > return filterconfig the < code > filterconfig < code > object that initialize this filter since servlet 4 0 <END>
<BEG> returns the name of the servlet 's initialization parameter a an < code > enumeration < code > of < code > string < code > object <SEG> or an empty < code > enumeration < code > if the servlet have no initialization parameter <END>
<BEG> get the request trailer field <END>
<BEG> receives notification that the servletcontext be about to be shut down <END>
<BEG> receives notification that a servletrequest be about to come into scope of the web application <END>
<BEG> return the bytebuffer containing either the whole message <SEG> or the partial message <SEG> that could not be decode <SEG> or { code null } if this exception arise from a failure to decode a text message <END>
<BEG> create a new { code mediatype } instance with the same type <SEG> subtype and parameter copy from the original instance and the supply { value # charset_parameter } parameter <END>
<BEG> generate hash code from variant property <END>
<BEG> compares obj to this variant to see if they be the same consider all property value <END>
<BEG> create new { link outboundsseevent } from provide data and name <END>
<BEG> initializes the < i > cause < i > of this throwable to the specify value <END>
<BEG> the < code > handleresponse < code > method process the response message <END>
<BEG> merge node children <END>
<BEG> the id that be n't find in the map <END>
<BEG> displays this url <END>
<BEG> sets the next history entry <END>
<BEG> returns a forward history vector return the vector of forward history entry <END>
<BEG> removes entry relate to remove helpset from history param hs the removed helpset <END>
<BEG> returns if action next be allow return true if action be allow <SEG> false otherwise <END>
<BEG> returns wheter node be allow to have child or not <END>
<BEG> exports node descendant to the outputstream param out the outputstream <END>
<BEG> gets a defaultmutabletreenode represent the information in this view instance <END>
<BEG> determines if a helpset be a sub-helpset of this object <END>
<BEG> get the local i e < ! -- -- > non-recursive map for this helpset <END>
<BEG> default for the search engine <END>
<BEG> returns the helphistorymodel return the helphistorymodel which provide history data <END>
<BEG> hidess displays the navigators in the helpui <END>
<BEG> merge a nodes child accord the merging rule of the node 's merge type param mastermergetype the fallback mergetype if masternode do not have a mergetype param node the node <END>
<BEG> notification of a change relative to a hyperlink <END>
<BEG> uninstalls ui <END>
<BEG> if sp ! = null { return scrollpanelayout sp getlayout preferredlayoutsize sp ; } else { return new dimension 200<SEG>100 ; } <END>
<BEG> processes an idchanged event <END>
<BEG> set the the internal bound for an invoker <END>
<BEG> determines which url be display <END>
<BEG> a boolean value that indicate if the search be complete <END>
<BEG> notifies that query of item be find in the search <END>
<BEG> determines if the current view be visible <END>
<BEG> processes sort merge param node the master node this node must be sort return merged master node <END>
<BEG> public method that get a defaultmutabletreenode represent the information in this view instance <END>
<BEG> returns a string use when display the object <END>
<BEG> enumerates all the maps in this trymap <END>
<BEG> gets the the ids relate to this url <END>
<BEG> < p > return the message for this exception prepended with the view identifier if the view identifier be not < code > null < code > <SEG> otherwise <SEG> return the message < p > <END>
<BEG> see javax face faceswrapper # getwrapped <END>
<BEG> obtain a new instance of a websocketcontainer <END>
<BEG> returns all the { code mimeheader } s in this { code mimeheaders } object <END>
<BEG> return the result tree that be create under the specified root node <END>
<BEG> equivalent of { link string # trim } <END>
<BEG> < p > checks if this duration object have the same duration a another < code > duration < code > object < p > < p > for example <SEG> p1d 1 day be equal to pt24h 24 hour < p > < p > duration x be equal to y if and only if time instant t+x and t+y be the same for all the test time instant specify in the section 3 2 6 2 of the xml schema 1 0 specification < p > < p > note that there be case where two < code > duration < code > s be incomparable to each other <SEG> like one month and 30 day <END>
<BEG> < p > return millisecond precision of { link # getfractionalsecond } < p > < p > this method represent a convenience accessor to infinite precision fractional second value return by { link # getfractionalsecond } <END>
<BEG> specifies that the parser create by this factory must eliminate whitespace in element content sometimes know loosely a 'ignorable whitespace ' when parse xml document see xml rec 2 10 <END>
<BEG> parse the content give { link org xml sax inputsource } a xml use the specify { link org xml sax handlerbase } <END>
<BEG> finds the implementation class object in the specified order <END>
<BEG> < p > get the child node before which the result node will be insert < p > < p > if no node be set via { link # domresult node node <SEG> node nextsibling } <SEG> { link # domresult node node <SEG> node nextsibling <SEG> string systemid } or { link # setnextsibling node nextsibling } <SEG> then < code > null < code > will be return < p > return the child node before which the result node will be insert <END>
<BEG> set the target to be a sax2 { link org xml sax contenthandler } <END>
<BEG> get the { link org xml sax contenthandler } that be the result <END>
<BEG> set the system identifier for this source <END>
<BEG> < p > get the < code > xmleventreader < code > use by this < code > staxsource < code > < p > < p > < code > xmleventreader < code > will be < code > null < code > <END>
<BEG> set the input to be a character reader <END>
<BEG> creates an endpoint with the specify binding type and implementor object <END>
<BEG> if addressing be enable <SEG> this property determine whether the endpoint require ws-addressing <END>
<BEG> sets the { code interfacename } a the { code wsam : interfacename } element in the { code wsa : metadata } element <END>
<BEG> returns the absolute path of the node that cause the error or < code > null < code > if the implementation choose not to <SEG> or can not <SEG> return a path <END>
<BEG> return the hash code of the class name <END>
<BEG> read from the input stream <END>
<BEG> return a copy of the jdo identity associate with the parameter instance <END>
<BEG> get an instance of < code > jdoimplhelper < code > <END>
<BEG> obtain the propertyeditorhelper instance for this app <END>
<BEG> < p > called from the point in the code when we have the grammar from an application configuration resource file <END>
<BEG> get a set of root resource and provider class <END>
<BEG> compares obj to this cache control to see if they be the same consider all property value <END>
<BEG> generate a hashcode by hash all of the cooky property return the hashcode <END>
<BEG> get the language of the variant return the language or null if none set <END>
<BEG> apply all attribute on the give context <END>
<BEG> apply all attribute on the give context <SEG> hereby exist entry be preserve <END>
<BEG> sets an attribute <SEG> use { code attribute getclass } a attribute < i > type < i > and { code attribute getclass getname } a attribute < i > name < i > <END>
<BEG> the method reverse the { link exchangerate } to a rate mapping from term to base { link currencyunit } <END>
<BEG> creates a { link providercontextbuilder } initialize with this instance 's data <END>
<BEG> gets the numeric code <END>
<BEG> creates a new builder instance <SEG> initialize with the data from this one <END>
<BEG> returns the index where the error be find <END>
<BEG> allows to quickly check <SEG> if a { link javax money convert exchangerateprovider } be accessible for the give { link javax money convert conversionquery } <END>
<BEG> returns the specified unit multiply by the factor < code > 10 < sup > 24 < sup > < code > param < q > type of the quantity measure by the unit <END>
<BEG> sets the value of this axis-angle to the rotational component of the pass matrix <END>
<BEG> get the axis angle <SEG> in radian < br > an axis angle be a rotation angle about the vector x <SEG> y <SEG> z <END>
<BEG> places the value of the specified row into the array parameter <END>
<BEG> linearly interpolates between vector v1 and v2 and place the result into this tuple : this = 1-alpha v1 + alpha v2 <END>
<BEG> negate the value of of each of this quaternion 's x <SEG> y <SEG> z coordinate in place <END>
<BEG> sets the value of this tuple to the scalar multiplication of tuple t1 <END>
<BEG> get < i > x < i > <SEG> the first value <END>
<BEG> sets the value of this tuple to the value of the xyz coordinate locate in the array of length 3 <END>
<BEG> copies the x <SEG> y <SEG> z coordinate of this tuple into the array t of length 3 <END>
<BEG> sets the value of this tuple to the specify x <SEG> y <SEG> z <SEG> and w coordinate <END>
<BEG> returns the angle in radian between this vector and the vector parameter ; the return value be constrain to the range [ 0 <SEG> pi ] <END>
<BEG> helper method param o item to print return string for safe printing <END>
<BEG> only take the user name into account <END>
<BEG> the sql statement type <END>
<BEG> get the current time-stamp resolution be opaque <END>
<BEG> request an item from the queue asynchronously return - a future pending the result from the queue poll request <END>
<BEG> returns a representation of { code a } a an instance of type { code b } <END>
<BEG> creates a < i > mutable < i > { code compactlinkedhashset } instance contain the element of the give collection in the order return by the collection 's iterator <END>
<BEG> creates a { code compactlinkedhashset } instance contain the give element in unspecified order <END>
<BEG> returns an { code immutablerangeset } contain each of the specify disjoint range <END>
<BEG> returns a sequential { link stream } of the content of { code iterable } <SEG> delegate to { link collection # stream } if possible <END>
<BEG> sorts the element of { code array } between { code fromindex } inclusive and { code toindex } exclusive in descend order <END>
<BEG> returns an unspecified hash code for the content of this immutable array <END>
<BEG> returns a new { code typeresolver } with type variable in { code formal } map to type in { code actual } <END>
<BEG> provide a human-readable explanation of why this future have not yet complete <END>
<BEG> the string representation consist of the name of this class ie javax management openmbean compositedatasupport <SEG> the string representation of the composite type of this instance <SEG> and the string representation of the content ie list the itemname=itemvalue mapping <END>
<BEG> param jobdatamap return tabulardata <END>
<BEG> < p > get the setting of whether or not quartz should create an rmi registry <SEG> and if so <SEG> how <END>
<BEG> set the trigger to fire on all day of the week <END>
<BEG> set the trigger to begin fire each day at the give time <END>
<BEG> set the second 0-59 for the date that will be build by this builder <SEG> and truncate the millisecond to 000 <END>
<BEG> set the remote mbean server url <END>
<BEG> < p > get the array which define the exclude-value of each day of month < p > <END>
<BEG> < p > return true <SEG> if day be define to be exluded <END>
<BEG> build a < code > { link java util calendar } < code > with the current time <END>
<BEG> < p > add the give date to the list of excluded day <END>
<BEG> < p > return the string representation of the triggerstatus <END>
<BEG> return whether the associated job class carry the { link persistjobdataafterexecution } annotation <END>
<BEG> < p > get the current time <SEG> simply use < code > new date < code > <END>
<BEG> create a simpleschedulebuilder set to repeat forever with an interval of the give number of minute <END>
<BEG> specify a repeat interval in second - which will then be multiply by 1000 to produce millisecond <END>
<BEG> determine with this time of day be before the give time of day <END>
<BEG> create a timeofday from the give date <SEG> in the give timezone <END>
<BEG> use a triggerkey with the give name and group to identify the trigger <END>
<BEG> use the give triggerkey to identify the trigger <END>
<BEG> set the { link schedulebuilder } that will be use to define the trigger 's schedule <END>
<BEG> set the identity of the job which should be fire by the produce trigger - a < code > jobkey < code > will be produce with the give name and group <END>
<BEG> see org quartz utils connectionprovider # shutdown <END>
<BEG> get the trimmed string value of the property with the give < code > name < code > or the give default value if the value be null or empty after trim <END>
<BEG> returns true if this array have no value at { code index } <SEG> or if it value be the { code null } reference or { link jsonobject # null } <END>
<BEG> returns the value map by { code name } <SEG> or null if no such mapping exists <END>
<BEG> returns an iterator of the { code string } name in this object <END>
<BEG> wraps the give object if necessary <END>
<BEG> only invoke by asm byte return <END>
<BEG> places character represent the integer i into the character array buf <END>
<BEG> retrieves a transformer for the provided object param prop param object return <END>
<BEG> returns { code true } if the field be define with the { code modifier } <END>
<BEG> returns a new gsonbuilder contain all custom factory and configuration use by the current instance <END>
<BEG> this method serialize the specified object <SEG> include those of generic type <SEG> into it equivalent representation a a tree of { link jsonelement } s this method must be use if the specified object be a generic type <END>
<BEG> this method deserializes the json read from the specified parse tree into an object of the specify type <END>
<BEG> configures gson to apply a specific serialization policy for { code long } and { code long } object <END>
<BEG> configures gson to apply a specific naming policy to an object 's field during serialization and deserialization <END>
<BEG> configures gson to serialize { code date } object accord to the pattern provide <END>
<BEG> configures gson to to serialize { code date } object accord to the style value provide <END>
<BEG> takes a reader in any state and return the next value a a jsonelement <END>
<BEG> returns the same instance since it be an immutable value since 2 8 2 <END>
<BEG> all instance of jsonnull be the same <END>
<BEG> convenience method to add a primitive member <END>
<BEG> sets the indentation string to be repeat for each level of indentation in the encoded document <END>
<BEG> returns true if object member be serialize when their value be null <END>
<BEG> accessor for access value that have be quote escaped use json quote rule use backslash-prefixed code <SEG> and encode use utf-8 encode into a byte array <END>
<BEG> method for override currently configure input decorator deprecate since 2 10 use { link jsonfactorybuilder # inputdecorator inputdecorator } instead <END>
<BEG> diagnostics method that will verify that internal data structure be consistent ; not mean a user-facing method but only for test suite and possible troubleshooting <END>
<BEG> create a json unmarshaller <END>
<BEG> overrides underlaying createunmarshaller method and return an unmarshaller which be capable of json deserialization <END>
<BEG> transforms ~ to ~0 and then to ~1 <END>
<BEG> this method help reconstruct the result parameterizedtype for a specific generic type across it hierarchy <END>
<BEG> make a json text of an object value <END>
<BEG> returns a string represenation of a json value < br > when an object property name do not contain a space ' ' or a colon ' : ' <SEG> the quote be omit <END>
<BEG> see jsonpath # isdefinite <END>
<BEG> extracts a value from an array param obj an array param idx index return the entry at the give index <END>
<BEG> check if object be a map i e <END>
<BEG> converts give array to an { link iterable } param obj an array return an iterable that iterate over the entry of an array <END>
<BEG> get the current object value a boolean if the current object be not a boolean return null <END>
<BEG> return jpath to the current position <END>
<BEG> puts value to object and return this <END>
<BEG> parse json input to a java object keep element order since 1 0 6 1 <END>
<BEG> parse json text into java object from the input source <END>
<BEG> check json syntax from input reader return if the input be valid <END>
<BEG> return the character position start with 0 of the input where the error occur <END>
<BEG> return one of the following base on the value of errortype : error_unexpected_char java lang character error_unexpected_token error_unexpected_exception java lang exception <END>
<BEG> associate an writer to a interface with hi priority param interface interface to map param writer writer object deprecate use registerwriterinterfacefirst <END>
<BEG> allow a mapper to converte a temprary structure to the final data format <END>
<BEG> use to instantiate a new object that will be use a an object <END>
<BEG> validates a json text param c source a json string to decode throw jsonexception if error occur when parse <END>
<BEG> set initial indent for pretty printing <END>
<BEG> remove an exist key from the array map <END>
<BEG>  < p > this implementation return false if the object be not a map <SEG> or if the map have different size <END>
<BEG> creates a new jsonarray that contain the json representation of the give < code > int < code > value <END>
<BEG> parses the give input string a json <END>
<BEG> indicates the beginning of a string in the json input <END>
<BEG> detects whether this value represent a json object <END>
<BEG> returns this json value a a < code > float < code > value <SEG> assume that this value represent a json number <END>
<BEG> returns the column number at which the error occur <SEG> i e <END>
<BEG> assert that an array have element ; that be <SEG> it must not be < code > null < code > and must have at least one element <END>
<BEG> determine whether the give array be empty : i e <END>
<BEG> check whether the give charsequence contain any whitespace character <END>
<BEG> extract the filename from the give path <SEG> e g <END>
<BEG> turn give source string array into sorted array <END>
<BEG> convenience method to convert a csv string list to a set <END>
<BEG> returns { code true } if the algorithm be support by standard jdk distribution or { code false } if the algorithm implementation be not in the jdk and must be provide by a separate runtime jca provider like bouncycastle for example <END>
<BEG> set the jwe algorithm constraint to be apply to key management when process the jwt <END>
<BEG> set the audience value s to use when validate the audience aud claim of a jwt <END>
<BEG> set the amount of clock skew to allow for when validate the expiration time <SEG> issue at time <SEG> and not before time claim <END>
<BEG> read one object from the string s reads data in the < a href= http : edn-format org > edn format < a > <END>
<BEG> get the second of the time param date the time <END>
<BEG> walk the directory under give path <SEG> and register a watcher for every directory <END>
<BEG> returns a builder that can be use to construct an annotation instance <END>
<BEG> allows subclasses to return a more specific interface <END>
<BEG> < p > gets the class name minus the package name from a < code > class < code > < p > param cls the class to get the short name for <END>
<BEG> given two parse tree position <SEG> find the bounding pair that capture the start and end in one logical unit <END>
<BEG> sets the text content of this node <END>
<BEG> makes a shallow copy of this node <SEG> include it name <SEG> text <SEG> and attribute <END>
<BEG> returns a version of this node <SEG> include all it child <SEG> a a valid xml string <END>
<BEG> get info about instance and class methods that be dynamically add through groovy <END>
<BEG> returns a list of expando metamethod instance add to this expandometaclass return the expandomethods <END>
<BEG> overrides default implementation just in case a static invoke method have be set on expandometaclass see metaclassimpl # invokestaticmethod object <SEG> string <SEG> object [ ] <END>
<BEG> indicates if a class be recompilable <END>
<BEG> re compiles the give source <END>
<BEG> tests if groovydoc be present return { code true } if groovydoc be present <END>
<BEG> get the content of groovydoc return the text content <END>
<BEG> evaluates some script against the current binding and return the result <END>
<BEG> parses the give script and return it ready to be run <END>
<BEG> returns the major and minor part of the groovy version exclude the point patch part of the version <END>
<BEG> a helper method to allow the dynamic evaluation of groovy expression use this scripts binding a the variable scope param file be the groovy script to evaluate <END>
<BEG> this strategy be use with the { link builder } ast transform to modify your groovy object so that the setter method for property return the original object <SEG> thus allow chain usage of the setter <END>
<BEG> get a new groovycodesource for a script which may be give a a location isscript be true or a text isscript be false <END>
<BEG> retrieves the default charset <END>
<BEG> evaluates the specified string expression and make the first two parameter available inside the script bound to variable name ' x ' and ' y ' respectively <SEG> return the result <END>
<BEG> throws an exception if value be null <END>
<BEG> restores the state of the current builder to the same state a an old build <END>
<BEG> finds all non-null subsequence of a list <END>
<BEG> prints the current indent level <END>
<BEG> adds sibling node define use builder-style notation via a closure after the current node <END>
<BEG> sets whether reference can be resolve lazily or not <END>
<BEG> set the source token text param s the text <END>
<BEG> formats a type name into a human readable version <END>
<BEG> detect whether a give classnode be a inner class non-static <END>
<BEG> copied from apache commons-lang3-3 6 < p > checks if a charsequence be empty or null < p > < pre > stringutils isempty null = true stringutils isempty = true stringutils isempty = false stringutils isempty bob = false stringutils isempty bob = false < pre > < p > note : this method change in lang version 2 0 <END>
<BEG> sets a system property from a { code name=value } string <END>
<BEG> obtains a snippet of the source code within the bound specify <END>
<BEG> indicates if this node be add by the compiler <END>
<BEG> sets the source position use another astnode <END>
<BEG> creates a classnode contain the wrapper of a classnode of primitive type <END>
<BEG> test to determine if a classnode be a type belongs to the list of type which be allow to initialize constant directly in bytecode instead of use & lt ; cinit & gt ; < p > note : this only work for classnodes create use a predefined classnode param cn the classnode to be test return true if the classnode be of int <SEG> float <SEG> long <SEG> double or string type see # make class see # make string <END>
<BEG> return a list of all the class in each module in the compilation unit <END>
<BEG> this method set the leftexpression for this binaryexpression <END>
<BEG> builds a binary expression that compare two value <END>
<BEG> interface class node retrieve from { link org codehaus groovy ast classnode # getinterfaces } or { link org codehaus groovy ast classnode # getallinterfaces } be return with generic type argument <END>
<BEG> transforms generic type from an old context to a new context use the give spec <END>
<BEG> the method be similar with { link genericsutils # makedeclaringandactualgenericstypemap classnode <SEG> classnode } <SEG> the main difference be that the method will try to map all placeholder find to the relevant exact type <SEG> but the other will not try even if the parameterized type have placeholder param declaringclass the generic class node declare the generic type param actualreceiver the sub-class class node return the placeholder-to-actualtype mapping since 3 0 0 <END>
<BEG> it be of an int category <SEG> if the provided type be a byte <SEG> char <SEG> short <SEG> int <END>
<BEG> it be of a long category <SEG> if the provided type be a long <SEG> it wrapper or if it be a long category <END>
<BEG> returns a normal variable <END>
<BEG> param methodvisitor param numberofarguments a value & gt ; 0 describe how many argument be additionally use for the method call param safe param spreadsafe <END>
<BEG> remove operand stack top element use bytecode pop <END>
<BEG> replace n top level element with new element of give type <END>
<BEG> adds a inputstream source to the unit <END>
<BEG> adds a classnode directly to the unit ie <END>
<BEG> adds compilation customizers to the compilation process <END>
<BEG> adds a warning to the message set if it be relevant <END>
<BEG> returns the class loader in use by this processingunit <END>
<BEG> returns the description for the current phase <END>
<BEG> returns the abstract syntax tree produce during convert ing and expand during late phase <END>
<BEG> return true if byte array have it default metaclass <END>
<BEG> works exactly like resourcebundle getbundle string <SEG> locale <END>
<BEG> add two number and return the result <END>
<BEG> standard iterator for a data input stream which iterate through the stream content a byte at a time <END>
<BEG> allows this writer to be use within the closure <SEG> ensure that it be flush and close before this method return <END>
<BEG> check for equality of non-null reference x and y <END>
<BEG> set if the original int array meta class be use <END>
<BEG> param list the original list param parametertype the result array type return the constructed array <END>
<BEG> returns a string detail possible solution to a missing field or property if no good solution can be find a empty string be return <END>
<BEG> tries to set a property on null <SEG> which will always fail param property - the proprty to set param newvalue - the new value of the property <END>
<BEG> executes the command specify by < code > self < code > a a command-line process <END>
<BEG> reads the inputstream from this url <SEG> pass each byte to the give closure <END>
<BEG> remove all apparently groovy-internal trace entry from the exception instance < p > this modify the original instance and return it <SEG> it do not clone param t the throwable whose stack trace we want to sanitize return the original throwable but with a sanitized stack trace <END>
<BEG> returns the first match meaning of the specify type <END>
<BEG> prints the usage help message for the { link compilationoptions } to the specify printwriter <END>
<BEG> adds a file to the classpath if it exist <END>
<BEG> determines if a main class be require when call <END>
<BEG> pops a closure expression from the closure expression stack <END>
<BEG> returns the current stack of enclose method <END>
<BEG> collects all interface of a class node <SEG> but reverse the order of the declaration of direct interface of this class node <END>
<BEG> given a frame and scope requirement <SEG> return the name of the appropriate callconfiguration <END>
<BEG> gets the explicit block argument of the parameter list & block <END>
<BEG> how many of the keywords list happen to be require keyword args <END>
<BEG> is this call lazily execute because it be on right hand side of the lonely & <END>
<BEG> add all element in other list to this list node <END>
<BEG> see node # accept nodevisitor <END>
<BEG> returns a map whose value be a java object not a bivariable type object <END>
<BEG> returns ruby 's local variable name this map have <END>
<BEG> gets a local context scope from system property <END>
<BEG> returns true if a give receiver be identical to the receiver this object have <END>
<BEG> retrieves a global variable by key from ruby after the evaluation <END>
<BEG> injects a global value to a parsed ruby script <END>
<BEG> threadcontext context = receiver getruntime getcurrentcontext ; try { dynamicscope currentscope = context getcurrentscope ; manyvarsdynamicscope scope = manyvarsdynamicscope context getcurrentscope ; scope = new manyvarsdynamicscope staticscope newevalscope currentscope getstaticscope <SEG> currentscope ; } catch arrayindexoutofboundsexception e { no context be leave <END>
<BEG> sets the exception param newexception the exception to set <END>
<BEG> registers the structlayout class in the jruby runtime <END>
<BEG> sets the native value of the struct member correspond to < tt > name < tt > <END>
<BEG> the object whose metaclass token have to be verify <END>
<BEG> blocks have more complicated logic for push a dynamic scope see interpretedirblockbody <END>
<BEG> returns true if this be an immediate value that will always be consider truthy true <SEG> number <SEG> etc return <END>
<BEG> if this pas have be previous run <SEG> then return the data from that last run <END>
<BEG> are we parse source provide a part of the '-e ' option to ruby <END>
<BEG> returns a new instance of the jruby runtime configure with the give input <SEG> output and error stream and otherwise default configuration except where specified system property alter default <END>
<BEG> convenience method for java integrator who may need to switch the notion of global runtime <END>
<BEG> this be use for the get loop <SEG> and we bypass 'load ' to use an already-prepared <SEG> already-pushed scope for the script body <END>
<BEG> construct a nameerror that format it message with an sprintf format string and have private_call ? <END>
<BEG> generate a stopiteration exception <END>
<BEG> get the global object use to synchronize class-hierarchy modification like cache invalidation <SEG> subclass set <SEG> and include hierarchy set <END>
<BEG> sets whether this object be frozen or not <END>
<BEG> makes it possible to change the metaclass of an object <END>
<BEG> fetch an object from the variable table base on the name <END>
<BEG> rb_obj_class returns the real class of this object <SEG> exclude any singleton meta class in the inheritance chain <END>
<BEG> rb_obj_display call-seq : obj display port= $ > = > nil prints < i > obj < i > on the give port default < code > $ > < code > <END>
<BEG> rb_any_to_s call-seq : obj to_s = > string returns a string represent < i > obj < i > <END>
<BEG> rb_false call_seq : nil nil ? <END>
<BEG> cmp_le <END>
<BEG> like { link # initialize threadcontext <SEG> irubyobject } but accept an : encoding option <END>
<BEG> deprecate no longer use <END>
<BEG> set the maximum number of method to consider when profiling <END>
<BEG> match_end <END>
<BEG> properly stringify an object for the current raw byte representation of a symbol <END>
<BEG> get a normal ruby backtrace <SEG> use the current gather type <END>
<BEG> deprecate use { link # logexception org jruby rubyexception } <END>
<BEG> since java 1 6 <SEG> class { link java io console } be available <END>
<BEG> retrieve the block associate with this frame <END>
<BEG> retrieve the variable accessor for read <END>
<BEG> retrieve the write accessor for object group <END>
<BEG> check if the give constantcache be non-null and valid <END>
<BEG> rb_is_const_id and is_const_id <END>
<BEG> reset back to mark and then read back to endpoint to repoint stream back to where we want next consumer of stream to start reading from <END>
<BEG> return jvm signature of the callable <SEG> e g <END>
<BEG> visits the ast node <SEG> then the comment node <END>
<BEG> debugging function to check that the parser have set the parent link for every node in the tree <END>
<BEG> sets right paren position <END>
<BEG> returns expression to evaluate if test be true <END>
<BEG> sets the intended label of this continue statement <END>
<BEG> sets the element be access <SEG> and set it parent to this node <END>
<BEG> returns whether the loop be a for-each loop <END>
<BEG> adds a parameter to the function parameter list <END>
<BEG> marks this node a a getter property <END>
<BEG> sets the expression between the parens <SEG> and set the parent to this node <END>
<BEG> sets top current script or function scope <END>
<BEG> returns symbol declaration type <END>
<BEG> sets loop condition throw illegalargumentexception } if condition be { code null } <END>
<BEG> returns the right-side xml member ref expression <END>
<BEG> returns { code true } if this expression begin with an { code } -token <END>
<BEG> set whether to cache some value <END>
<BEG> returns the script object represent the code of the module <END>
<BEG> binds this instance of require into the specify scope under the property name require <END>
<BEG> sets whether the created require instance will be sandboxed <END>
<BEG> return true iff code will be generate with callback to enable instruction threshold <END>
<BEG> note that this method do not get forward to the delegee if the < code > hint < code > parameter be null <SEG> < code > scriptruntime scriptableclass < code > or < code > scriptruntime functionclass < code > <END>
<BEG> deprecate use { link rhinoexception # columnnumber } from the super class <END>
<BEG> make glue object implement interface cl that will call the supplied js function when call <END>
<BEG> if table already contain a key that equal to keyarg <SEG> return that key while set it value to zero <SEG> otherwise add keyarg with 0 value to the table and return it <END>
<BEG> retrieves a system property within a privileged block <END>
<BEG> evaluates the give script <END>
<BEG> returns the value of a property on the give script object <END>
<BEG> main entry point <END>
<BEG> deprecate the method do nothing and be only present for compatibility <END>
<BEG> shows a { link filewindow } for the give source <SEG> create it if it do n't exist yet <END>
<BEG> creates and show a new { link filewindow } for the give source <END>
<BEG> returns whether the current thread be the gui event thread <END>
<BEG> notify all listener that have register interest for notification on this event type <END>
<BEG> wrap an object newly create by a constructor call <END>
<BEG> see ecma 357 <SEG> 11_2_2_1 <SEG> semantics <SEG> 3_e <END>
<BEG> creates a hard link from source to target <END>
<BEG> converts the input parameter to string and then delegate to the debug method of the wrapped < code > org slf4j logger < code > instance <END>
<BEG> two priority be equal if their level field be equal <END>
<BEG> reads configuration option from an inputstream <END>
<BEG> gets the avalon logger implementation use to perform logging <END>
<BEG> output a diagnostic message to a user-specified destination if the user have enable diagnostic logging <END>
<BEG> return < code > true < code > if < em > jdk 1 4 or later < em > logging be available <END>
<BEG> is a < em > log4j < em > implementation available ? <END>
<BEG> pops top value from the stack and return it <END>
<BEG> the loggerplugin implementation class name in use return loggerplugin implementation class name <END>
<BEG> check to see if the trace level be enable for this logger <END>
<BEG> issue a log msg and throwable with a level of trace <END>
<BEG> get a logger instance give the logger name <END>
<BEG> add color to color map <END>
<BEG> format one string <END>
<BEG> parse the level information <END>
<BEG> logs event and specify the logging level <END>
<BEG> detects if a logger with the specify name exists <END>
<BEG> returns a formatter logger use the fully qualified name of the value 's class a the logger name <END>
<BEG> print the thread information <END>
<BEG> format the stacktraceelements <END>
<BEG> returns the message data a an unmodifiable map <END>
<BEG> formats the message and return it <END>
<BEG> sets the reserved flag to true and return this object <END>
<BEG> returns this message id <END>
<BEG> logs entry to a method with location information <END>
<BEG> gets the { link loggercontext } associate with the give caller class <END>
<BEG> returns an implementation of the { code stringmap } use to back this thread context map <END>
<BEG> returns an implementation of the { code stringmap } use to back this thread context map <SEG> pre-populated with the content of the specify context data <END>
<BEG> returns an extendedlogger <END>
<BEG> loads the { link org apache log log4j spi loggercontextfactory } class specify by this provider <END>
<BEG> gets the url contain this provider 's log4j detail <END>
<BEG> returns the integer value of the level <END>
<BEG> registers a new listener <END>
<BEG> finds classpath { linkplain url resource } <END>
<BEG> returns the propertiesutil use by log4j <END>
<BEG> checks if a string be blank <END>
<BEG> a string representation of this duration use iso-8601 second base representation <SEG> such a { code pt8h6m12s } <END>
<BEG> active log file name after rollover <END>
<BEG> action to be complete after close of current active log file before return control to caller <END>
<BEG> action to be complete after close of current active log file and before next rollover attempt <SEG> may be execute asynchronously <END>
<BEG> stores the plugin cache to a give outputstream <END>
<BEG> creates a socketaddress corresponding to { code localhost:0 } <END>
<BEG> opposite of { link # isempty object } <END>
<BEG> closes an autocloseable and return { code true } if it close without exception <END>
<BEG> parse a formatted date string accord to the format <END>
<BEG> < p > gets a date formatter instance use the specified style <SEG> time zone and locale < p > param datestyle date style : full <SEG> long <SEG> medium <SEG> or short param timezone optional time zone <SEG> overrides time zone of formatted date <SEG> null mean use default locale param locale optional locale <SEG> override system locale return a localized standard date time formatter throw illegalargumentexception if the locale have no date time pattern define <END>
<BEG> gets the value of a { link field } <SEG> make it accessible if require <END>
<BEG> when prudent be set to true <SEG> file appenders from multiple jvms can safely write to the same file <END>
<BEG> set the < b > conversionpattern < b > option <END>
<BEG> recall the event list previously register a a safe point <END>
<BEG> the mainurl for the configuration file <END>
<BEG> if a key be find in propertiesmap then return it <END>
<BEG> gets the secure transport protocol name <END>
<BEG> a relatively robust file rename method which in case of failure due to src and target be on different volume <SEG> fall back onto renaming by copy <END>
<BEG> sets the rolling policy <END>
<BEG> look for an attached appender name a < code > name < code > <END>
<BEG> this utility method add a new onconsolestatuslistener to the context pass a parameter <END>
<BEG> subclasses can override this method with their own version if it be possible that no match test can should be perform due to a misconfiguration <END>
<BEG> sets the key to match in the mdc of the loggingevent <END>
<BEG> trains a classifier in the give directory <END>
<BEG> < p > clears the cache <END>
<BEG> parses a give list of option <END>
<BEG> set whether not to check capability <END>
<BEG> execute the supplied object <END>
<BEG> return true if this rule be equal to the supply one <END>
<BEG> set a textual description of the scheme that produce these rule <END>
<BEG> string describe default associator <END>
<BEG> build the associator on the filter data <END>
<BEG> get this item 's comparison operator a a string <END>
<BEG> get the associator use a the base associator <END>
<BEG> perform a cross validation for attribute selection <END>
<BEG> returns a string describe this search method return a description of the search method suitable for display in the explorer experimenter gui <END>
<BEG> sets a starting set of attribute for the search <END>
<BEG> get the termination criterion number of non-improving node <END>
<BEG> evaluate a subset of attribute param subset a bitset represent the attribute subset to be evaluate return the merit throw exception if the subset could not be evaluate <END>
<BEG> tip text for this property return the tip text for this property <END>
<BEG> gets the current setting of wrappersubseteval <END>
<BEG> set whether to search backwards instead of forward param back true to search backwards <END>
<BEG> binarize numeric attribute <END>
<BEG> get the number of fold use for cross validation return the number of fold <END>
<BEG> set the minumum bucket size use by oner param minb the minimum bucket size to use <END>
<BEG> evaluates the merit of a transformed attribute <END>
<BEG> set the number of instance to sample for attribute estimation param s the number of instance to sample <END>
<BEG> get whether near neighbour be be weight by distance return m_weightbydiffernce <END>
<BEG> returns the current stemming algorithm <SEG> null if none be use <END>
<BEG> returns the tip text for this property <END>
<BEG> set whether to use word frequency rather than binary bag of word representation <END>
<BEG> set whether supervised discretization be to be use <END>
<BEG> synchronize the node ordering of this bayes network with those in the other network if possible <END>
<BEG> getnode find the index of the node with name snodename and throw an exception if no such node can be find <END>
<BEG> add node to network at a give position <SEG> initialize instance <SEG> parentsets <SEG> distribution <END>
<BEG> set position of all node param nposx new x position for all node param nposy new y position for all node <END>
<BEG> get evidence state of a node <END>
<BEG> update status of various item that need regular update such a enabled status of some menu item <SEG> marginal distribution if show <SEG> repaint of graph <END>
<BEG> moralize dag and calculate adjacency matrix representation for a bayes network <SEG> effecively convert the direct acyclic graph to an undirected graph <END>
<BEG> apply tarjan and yannakakis 1984 fill in algorithm for graph triangulation <END>
<BEG> test if node be contain in parent set param inode node to test for return number of parent <END>
<BEG> sets the number of run param nruns the number of run to set <END>
<BEG> return whether tournament selection true or maximum sub-population false should be use <END>
<BEG> param ipopulationsize set population size <END>
<BEG> sets whether to init a naive bayes param binitasnaivebayes whether to init a naive bayes <END>
<BEG> print tabu list for debug purpose <END>
<BEG> return the tabu list length <END>
<BEG> set the number of instance in the training pool <END>
<BEG> gets whether debugging be turn on return true if debug output be on <END>
<BEG> get the calculated error rate return the error rate <END>
<BEG> get the training size return the size of the training set <END>
<BEG> finds the central tendency <SEG> give the classification for an instance <END>
<BEG> sets the dataset to use for test <END>
<BEG> the number of row and column return the size of the matrix <END>
<BEG> creates a uniform probability distribution -- where each of the possible class be assign equal probability <END>
<BEG> sets the range of attribute to output <END>
<BEG> return a string represent the hidden layer <SEG> each number be the number of node on a hidden layer <END>
<BEG> return the percentage size of the validation set <END>
<BEG> return the number of epoch to train through <END>
<BEG> call this function to draw the node input connection <END>
<BEG> this function will remove all the input to this unit <END>
<BEG> get this model 's dictionary include term weight <END>
<BEG> turn off the error message that be report when no useful attribute be find <END>
<BEG> gets the size of the cache return the cache size <END>
<BEG> gets the file contain the kernel matrix <END>
<BEG> return the number of kernel cache hit return the number of hit <END>
<BEG> wrap up various variable to save memeory and do some housekeeping after optimization have finish <END>
<BEG> sets the seed value for the random number generator param value the seed value <END>
<BEG> sets whether to use normalization <END>
<BEG> returns textual description of classifier <END>
<BEG> gets the preferred batch size from the base learner if it implement batchpredictor <END>
<BEG> gets whether complexity statistic be output when oob estimation be perform <END>
<BEG> return tip text for this property suitable for display in the explorer experimenter gui <END>
<BEG> gets the source location method of the cost matrix <END>
<BEG> output a representation of this classifier return a string representation of the classifier <END>
<BEG> returns true if classifier check whether class attribute have be modify by filter <END>
<BEG> get the z max threshold on the response return the threshold to use <END>
<BEG> clean up after boost <END>
<BEG> calculate the number of attribute param total the available number of attribute param fraction the fraction - if less than 1 it represent the percentage <SEG> otherwise the absolute number of attribute return the number of attribute to use <END>
<BEG> generates an index string describe a random subspace <SEG> suitable for the remove filter <END>
<BEG> returns true if the meta classifier or any of the base classifier be able to generate batch prediction efficiently and all of them implement batchpredictor <END>
<BEG> returns true if any of the base classifier be able to generate batch prediction efficiently and all of them implement batchpredictor <END>
<BEG> builds a classifier use stack <END>
<BEG> set the path from which to load a model <END>
<BEG> return the instance structure that the encapsulated model be build with <END>
<BEG> read the ppmatrix from the xml <END>
<BEG> map mining schema to incoming instance <END>
<BEG> sets whether to check for error rate be in stop criterion param d whether to check for error rate be in stop criterion <END>
<BEG> main method by which this class can be test param args an array of option <END>
<BEG> returns the number of instance cover by a branch <END>
<BEG> frees up memory after classifier have be build <END>
<BEG> set the ruleset of the stats <SEG> overwrite the old one if any param rule the set of rule to be set <END>
<BEG> get the simple stats of one rule <SEG> include 6 parameter : 0 : coverage ; 1 : uncoverage ; 2 : true positive ; 3 : true negative ; 4 : false positive ; 5 : false negative param index the index of the rule return the stats <END>
<BEG> add a rule to the ruleset and update the stats param lastrule the rule to be add <END>
<BEG> the description length of the theory for a give rule <END>
<BEG> try to reduce the dl of the ruleset by test remove the rule one by one in reverse order and update all the stats param expfprate expect fp fp+fn <SEG> use in datadl calculation param checkerr whether check if error rate > = 0 5 <END>
<BEG> set the leaf prediction strategy to use majority class <SEG> naive bayes or naive bayes adaptive param strat the strategy to use <END>
<BEG> set the number of instance weight a leaf should observe before allow naive bayes to make prediction param n the number weight of instance <END>
<BEG> return a textual description of the mode return a string describe the model <END>
<BEG> return the gini metric compute from the supplied distribution param dist the distribution to compute the gini metric from param sumofweights the sum of the distribution weight return the gini metric <END>
<BEG> returns cod cost of model <END>
<BEG> returns the number of created subset for the split <END>
<BEG> returns matrix with distribution of class value <END>
<BEG> returns number of possibly fractional instance of give class <END>
<BEG> computes entropy for give distribution <END>
<BEG> always return null because there be only one subset <END>
<BEG> return the global naive bayes model for this node return a < code > nbtreenosplit < code > value <END>
<BEG> returns the error of the probability estimate for the current model on a set of instance <END>
<BEG> returns a description of this node debugging purpose return a string describe this node <END>
<BEG> recursively prune the tree throw exception if an error occurs <END>
<BEG> set whether to save instance for visualization purpose <END>
<BEG> computes the variance for a single set param s param ss param weight the weight return the variance <END>
<BEG> returns the cluster probability distribution for an instance <END>
<BEG> prune low density candidate canopy <END>
<BEG> pretty hokey heuristic to try and set t2 distance automatically base on standard deviation param trainingbatch the training instance throw exception if a problem occurs <END>
<BEG> get the canopy that each canopy cluster center be within t1 distance of return a list of canopy for each cluster center <END>
<BEG> get the number of cluster to generate return the number of cluster to generate <END>
<BEG> get the how often to prune low density canopy during train return how often every p instance to prune low density canopy <END>
<BEG> returns a description of the clusterer a a string <END>
<BEG> returns default capability of the clusterer i e <SEG> of the wrapper clusterer <END>
<BEG> sets the element of the vector to value of the give array <END>
<BEG> calls clearcache and reset the cache of class on the classpath i e <END>
<BEG> cancels the incremental saving process if the write mode be cancel <END>
<BEG> determines and return if possible the structure internally the header of the data set a an empty set of instance <END>
<BEG> get the format to use for parse date value <END>
<BEG> get the character set to use when read text file <END>
<BEG> print the give message with the specify level param level the level of log param sourceclass the class that log the message param sourcemethod the method that log the message param message the message to print <END>
<BEG> set the average document length to use when normalize param averagedoclength the average document length to use <END>
<BEG> gets whether if the word frequency should be transform into log 1+fij where fij be the frequency of word i in document instance j <END>
<BEG> gets whether if the token be to be downcased or not <END>
<BEG> load a textual dictionary from a reader param reader the reader to read from throw ioexception if a problem occurs <END>
<BEG> save a dictionary param tosave the file to save to param plaintext true if the dictionary should be save in text format throw ioexception if a problem occurs <END>
<BEG> add a variable to the internal map of this property object <END>
<BEG> get the name of the variable key store in the internal map <END>
<BEG> tries to fetch the macro < p > the same invariant of { link macrodeclarations } applies here too <END>
<BEG> whether the macro be declare param name of the macro return whether the macro be declare <END>
<BEG> tries to fetch a macro <END>
<BEG> adds a variable declaration for a boolean variable < p > requires that the variable have n't be declare before <END>
<BEG> whether stats field be access in the program < p > this be only meaningful after compilation <END>
<BEG> adds an element to this vector <END>
<BEG> clones the vector and shallow copy all it element <END>
<BEG> return the current current class index <SEG> -1 if no class attribute <END>
<BEG> enable the give not to have capability <END>
<BEG> is the matrix symmetric and positive definite ? <END>
<BEG> returns a vector from the pivoting index <END>
<BEG> adds a value to all the element in place param x the value <END>
<BEG> returns a random vector of uniform distribution param n the size of the vector <END>
<BEG> return the real part of the eigenvalue return real diag d <END>
<BEG> tests the intvector class <END>
<BEG> returns the cumulative probability of the standard normal <END>
<BEG> sets the balltreeconstructor for build the balltree default topdownconstructor <END>
<BEG> returns the maximum number of instance allow in a leaf <END>
<BEG> sets the maximum relative radius <SEG> allow for a leaf node <END>
<BEG> should we normalize the widths range of the dimension attribute before select the wide one <END>
<BEG> applies the middle out build procedure to the leaf of the tree <END>
<BEG> sets the seed for random number generator that be use for select the first anchor point randomly <END>
<BEG> for print index in a give point list <END>
<BEG> returns the max distance of the reference point p in current node to it 's child node <END>
<BEG> initializes a heap with k value of the the give upper_bound <END>
<BEG> pops remove the first last added element in the stack <END>
<BEG> corrects the start and end index of a kdtreenode after an instance be add to the tree <END>
<BEG> resets all internal field counter <END>
<BEG> returns the standard deviation of leaf visit <END>
<BEG> returns the total number of internal node visit <END>
<BEG> removes an option from a give list of option <END>
<BEG> gets a list of package that this package depend on that be not currently instal <END>
<BEG> get package information on the package at the give url <END>
<BEG> returns true if the supply fully qualified class name be in the disabled list param classname the name of the class to check return true if the supplied class name be in the disabled list <END>
<BEG> gets the result of evaluate the expression when the optype be categorical or ordinal a the actual string value <END>
<BEG> non-javadoc see weka core pmml expression # tostring java lang string <END>
<BEG> apply min and max <SEG> rescalefactor <SEG> rescaleconstant and castinteger - in that order where define <END>
<BEG> gets the string represent the select range of value <END>
<BEG> if no argument be give <SEG> it just print the presence of the groovy class <SEG> otherwise it expect a groovy filename to execute <END>
<BEG> sets a specific value in the instance to the give value internal floating-point format <END>
<BEG> computes probability of f-ratio <END>
<BEG> sets the stopwords algorithms <END>
<BEG> return the default printstrean <SEG> can be null <END>
<BEG> appends a subsequence of the specified character sequence to this output stream <END>
<BEG> gets a list of class loader for the package that this one depend on return a list of class loader for the package that this one depend on <END>
<BEG> get a set of the name of all class contain within top-level jar file in this package return a set of the name of class contain in top-level jar file in this package <END>
<BEG> checks to see if there be any environment variable or property that should be set at startup before allow this package to be load <END>
<BEG> return an enumeration of the classnames for which only certain property display name be allow return the classnames with restriction to property <END>
<BEG> add the give costmatrix to a dom structure <END>
<BEG> enables derive class to due some pre-processing on the object <SEG> that 's about to be serialize <END>
<BEG> perturbs the give value param val the value to perturb param range the range for the perturbation param min the minimum param max the maximum return the perturbed value <END>
<BEG> gets the number of irrelevant attribute <END>
<BEG> return the parent datagenerator this cluster belong to return the parent this cluster belong to <END>
<BEG> gets the low boundary for the radius of the cluster <END>
<BEG> sets which attribute be use in the cluster attribute among the selection will be discretized <END>
<BEG> return the attribute range s <END>
<BEG> gets writer <SEG> which be use for output to stdout <END>
<BEG> returns a string represent the dataset in the instance queue <END>
<BEG> get a probability estimate for a value param data the value to estimate the probability of return the estimate probability of the supplied value <END>
<BEG> return the value of the mean of this normal estimator <END>
<BEG> set a list of method name for additional measure to look for in splitevaluators <END>
<BEG> set the flag for prediction and target output <END>
<BEG> get if raw split evaluator output be to be save return true if raw split evalutor output be to be save <END>
<BEG> set to true if raw split evaluator output be to be save param d true if output be to be save <END>
<BEG> quick test of timestamp param args the commandline option <END>
<BEG> set whether the class column should be remove from the data <END>
<BEG> sets the dataset that result will be obtain for <END>
<BEG> return the name of the tester return the display name <END>
<BEG> set whether standard deviation be display or not <END>
<BEG> returns the column to sort on <SEG> -1 mean the default sort <END>
<BEG> return the default of whether column name be prefix with the index <END>
<BEG> return the default width for the count <END>
<BEG> return the default of whether std deviation be display or not <END>
<BEG> input an instance for filter <END>
<BEG> return true if the output format be immediately available after the input format have be set and not only after all the data have be see see batchfinished return true if the output format be immediately available see # batchfinished see # setinputformat instances <END>
<BEG> a version of the input instance method that enable input of a whole dataset represent a an instances object into the filter <END>
<BEG> set the naive bayes estimator to use param nb the naive bayes estimator to use <END>
<BEG> determines the output format base on the input format and return this <END>
<BEG> sets the size of the subsample <SEG> a a percentage of the original set <END>
<BEG> gets whether instance be draw with or without replacement <END>
<BEG> set which attribute be to be copy or keep if invert be true param rangelist a string represent the list of attribute <END>
<BEG> sets the clusterer to assign cluster with <END>
<BEG> gets the clusterer specification string <SEG> which contain the class name of the clusterer and any option to the clusterer <END>
<BEG> get the name of the attribute to be create return the current attribute name <END>
<BEG> sets which attribute be to be turn into numeric attribute only date attribute among the selection will be transform <END>
<BEG> sets the format of the input instance <END>
<BEG> sets range of the merge value use <END>
<BEG> get the scaling factor <END>
<BEG> sets the number of attribute dimension the data should be reduce to param newattnum the goal for the dimension <END>
<BEG> sets either to use replace miss value filter or not param t if true then the replace miss value be use <END>
<BEG> return a double x such that < br > x = sqrt 3 { -1 with prob <END>
<BEG> creates a new instance the same a one instance the destination but with some attribute value copy from another instance the source param source the source instance param dest the destination instance return the new merge instance <END>
<BEG> get the current setting for this application return the current setting for this application <END>
<BEG> return the table component return the table <END>
<BEG> sets whether to display the attribute index in the header <END>
<BEG> set the search string to look for in the table <SEG> null or disable the search param searchstring the search string to use <END>
<BEG> invoke when a window be have be open param e the window event <END>
<BEG> return only the classname return the classname <END>
<BEG> returns true if <SEG> at this time <SEG> the object will accept a connection accord to the supplied event name param eventname the event return true if the object will accept a connection <END>
<BEG> utility method for retrieve the value of an option from a list of option <END>
<BEG> add a listener for test set param tsl a < code > testsetlistener < code > value <END>
<BEG> accept and process a test set event param e a < code > testsetevent < code > value <END>
<BEG> set a custom descriptive name for this bean param name the name to use <END>
<BEG> notify this object that it have be deregistered a a listener with a source for name event <END>
<BEG> set the coloring index for the attribute summary plot param ci an < code > int < code > value <END>
<BEG> get the run number <END>
<BEG> renders the connection and their name on the supplied graphic context param gx a < code > graphics < code > value <END>
<BEG> set the legend text vector param lt a < code > vector < code > value <END>
<BEG> accept a classifier to be evaluate <END>
<BEG> set the class value consider to be the positive class value <END>
<BEG> return the instance of the data set return an < code > instances < code > value <END>
<BEG> returns true if the encapsulated instance contain just header information return true if only header information be available in this datasetevent <END>
<BEG> set the height in pixel of the offscreen image to generate param height the height in pixel <END>
<BEG> set the name of the renderer to use for offscreen chart render operation param renderername the name of the renderer to use <END>
<BEG> set the additional option for the offscreen renderer param additional additional option <END>
<BEG> add a file filter to use param toset the file filter to use <END>
<BEG> waits until all flow have finish execute before return <END>
<BEG> load a serialized knowledgeflow either binary or xml param filename the name of the file to load from throw exception if something go wrong <END>
<BEG> make sure that the filename be valid <SEG> i e <SEG> replaces slash <SEG> backslashes and colon with underscore _ <END>
<BEG> set whether to consume non matching instance <END>
<BEG> set the percentage of data to be in the training portion of the split param newtrainpercent an < code > int < code > value <END>
<BEG> set up the off screen bitmap for render to <END>
<BEG> set the training data to use param trainingdata the training data exception exception if an error occurs <END>
<BEG> set the data generator to use for generate new instance param datagenerator the data generator to use <END>
<BEG> set whether to superimpose the training data plot param pg a < code > boolean < code > value <END>
<BEG> deletes all training instance from our dataset <END>
<BEG> set the height of a pixel param ph the height of a pixel <END>
<BEG> throws an exception a we be not representable in text form param text text throw illegalargumentexception <END>
<BEG> sets the document from the give jtextpane <END>
<BEG> changes the behavior of a table in a jscrollpane to be more like the behavior of jlist <SEG> which expand to fill the available space <END>
<BEG> whether datasets or algorithm be iterate first <END>
<BEG> return the name of the field use for comparison <END>
<BEG> handle action when text be enter into the host field or the delete button be press <END>
<BEG> pops up the modal dialog and wait for cancel or a selection <END>
<BEG> performs optional post-processing <END>
<BEG> returns whether all the data be available and the plot instance can be use for plot <END>
<BEG> starts run the currently configure associator with the current setting <END>
<BEG> set the vector of plot size to use param plotsizes the plot size to use <END>
<BEG> return the generated output a text return the generated output <END>
<BEG> return all the panel <SEG> apart from the preprocesspanel return the currently display panel w o preprocesspanel <END>
<BEG> return the default filter fully configure for the preprocess panel <END>
<BEG> return whether additional per-class stats of the classifier be output <END>
<BEG> return whether the prediction of the classifier be output as well <END>
<BEG> return whether the test data and the prediction of the classifier be store for visualization <END>
<BEG> return whether the evaluation of the classifier be do cost-sensitively <END>
<BEG> return the name of the root element of the give class name <SEG> < code > null < code > if it do n't contain the separator <END>
<BEG> updates the list of selectable object name <SEG> add any new name to the list <END>
<BEG> gets the custom panel use for edit the object <END>
<BEG> set the file to output the property for the geo to param filename the filename for the output <END>
<BEG> check whether the classname be a valid one <SEG> i e <SEG> from a public class param classname the classname to check return whether the classname be a valid one <END>
<BEG> following method parse the dot input and mimic the dot language 's grammar in their structure <END>
<BEG> bif reader < br > reads a graph description in xmlbif03 from a string <END>
<BEG> fires a layoutcompleteevent <END>
<BEG> set the step to edit in this dialog param step the step to edit <END>
<BEG> the name of this viewer return <END>
<BEG> initialize and layout the viewer throw wekaexception if a problem occurs <END>
<BEG> get the name of the offscreen renderer and any option for it from the step be edit <END>
<BEG> stuff to do when the user accept the current setting <END>
<BEG> called by the knowledgeflow application once the enclosing jframe be visible <END>
<BEG> get the icon for this visual at the give scale factor param scale the factor to scale the icon by return the scaled icon <END>
<BEG> get the x coordinate of this step on the graphical layout return the x coordinate of this step <END>
<BEG> get description for plugin knowledge flow templates return description for plugin template <END>
<BEG> snap the select step if any to the grid <END>
<BEG> open a separate dialog for enter a regex pattern for select element from the provided list <END>
<BEG> return the system lnf classname return the name of the system lnf class <END>
<BEG> returns the default position for the dialog <END>
<BEG> method to be call when gui application be no longer need <SEG> to free up resource so that they can be garbage collect <END>
<BEG> initialize the program menu return the jmenu item for the program menu <END>
<BEG> get the perspective with the give id param id the id of the perspective to get return the perspective <SEG> or null if there be no perspective with the supplied id <END>
<BEG> pass on an ok closing notification to the customizer if one be in use <END>
<BEG> attempts to update the textfield value from the editor <END>
<BEG> gets the jlist use by the result list return the jlist <END>
<BEG> returns an initialized script object <END>
<BEG> returns whether script can be execute <SEG> i e <SEG> groovy be present <END>
<BEG> set the number of character per tab <END>
<BEG> parse the line to determine the appropriate highlighting <END>
<BEG> checks whether the character be a delimiter <END>
<BEG> adds the matching block end <END>
<BEG> sets the quote delimiter character to use <END>
<BEG> retrusn the single line comment start string <END>
<BEG> returns the end of a multi-line comment <END>
<BEG> sets the background color <END>
<BEG> returns whether multi-line comment be enable <END>
<BEG> returns a description of the property value a java source <END>
<BEG> updates the set of instance that be currently hold by the panel <END>
<BEG> returns the java code that generate an object the same a the one be edit <END>
<BEG> open 's a splash window use the specify image and message param imageurl the url of the splash image <END>
<BEG> invokes the main method of the provided class name <END>
<BEG> return the stored exception <SEG> if any can be null <END>
<BEG> return the dbutils instance that be responsible for the connect disconnect <END>
<BEG> return the next name for a tab queryxyz ' <END>
<BEG> return the name of the writer <SEG> to display in the filechooser <END>
<BEG> enables the panel param e true to enable the panel <END>
<BEG> this method change the instances object of this class to a new one <END>
<BEG> set the plot size param plotsize the plot size to use <END>
<BEG> get the name of the plot for use in a tool tip text <END>
<BEG> set the shape type for the plot data param st an array of integer correspond to shape type see constant define in plot2d <END>
<BEG> set whether consecutive point should be connect by line param cp an array of boolean specify which point should be connect to their preceeding neighbour <END>
<BEG> returns the minimum dimension need to layout the < i > visible < i > component contain in the specified target container <END>
<BEG> set environment variable for this execution environment param env the environment variable to use <END>
<BEG> get a list of any result data object of the supplied connection type param connname the name of the connection to get result data object for return a list of result data object for the specified connection type <SEG> or null if none exist <END>
<BEG> get the description of the file format handle by this loader return the description of the file format handle <END>
<BEG> return logginglevel give it name a a string param s the string contain the name of the log level return the logginglevel or logginglevel basic if the string could not be match <END>
<BEG> log at the low level param message the message to log <END>
<BEG> get the step visual in use if run in a visual environment return the step visual in use <END>
<BEG> set the step visual to use when run in a graphical environment param visual the step visual to use <END>
<BEG> returns true if <SEG> at the current time <SEG> the managed step be busy with process return true if the managed step be busy with processing <END>
<BEG> clear all the stepoutputlisteners that be register to receive the supplied connection type <END>
<BEG> log a message at the low logging level param message the message to log <END>
<BEG> log a message at the supplied logging level param message the message to write param level the level for the message <END>
<BEG> return the fully qualified name of a custom editor component jcomponent to use for edit the property of the step <END>
<BEG> get the maximum number of thread to use when compute image row return the maximum number of row to compute in parallel <END>
<BEG> set the argument for the static command param args the argument for the static command <END>
<BEG> get the working directory for the static command return the work directory for the static command <END>
<BEG> get the name of the attribute in the incoming instance structure that contain the argument to the command to execute return the name of the attribute contain the command 's argument <END>
<BEG> copy an input stream to a writer param input the input stream to copy from param out the writer to write to throw ioexception if a problem occurs <END>
<BEG> get whether downstream step be to be make resource intensive return true if downstream connect step be to be make resource intensive <END>
<BEG> get global help info <END>
<BEG> set the wrapped algorithm param algo the algorithm to wrao <END>
<BEG> get the default icon for this type of wrapped algorithm i e <END>
<BEG> get the log level to use return the level to use <END>
<BEG> get how frequently to write an incremental data point to the log return the frequency in data point to write to the log <END>
<BEG> process an incoming piece of data param data the payload to process throw wekaexception if a problem occurs <END>
<BEG> process a streaming data point param data the data throw wekaexception if a problem occurs <END>
<BEG> returns the start position return the start position <END>
<BEG> notify response handler param responses the response <END>
<BEG> is this connection use an ssl socket ? <END>
<BEG> return the imap fetch item to request in order to load all the envelope data <END>
<BEG> does this imapstore use ssl when connect to the server ? <END>
<BEG> get the uidvalidity value specify when this instance be create <END>
<BEG> formats the thrown property of a logrecord <END>
<BEG> check if the give log record should be publish <END>
<BEG> set the character encode use by this < tt > handler < tt > <END>
<BEG> compares two throwable object or null <END>
<BEG> see < a href= http : spec commonmark org 0 18 # info-string > commonmark spec < a > <END>
<BEG>  since 3 1 exception outofrangeexception if parameter be outside of function domain <END>
<BEG> check that the interpolation array be valid <END>
<BEG> returns a copy of coefficient in newton form formula <END>
<BEG> get an array copy of the knot point <END>
<BEG> returns a { code complex } whose value be { code this + addend } <END>
<BEG> returns a { code complex } whose value be { code -this } <END>
<BEG> resolve the transient field in a deserialized complex object <END>
<BEG> get the constant & radic ; 2 2 <END>
<BEG> this be a utility function use by { link # inversecumulativeprobability double } <END>
<BEG>  the upper bound of the support be the number of trial except for the probability parameter { code p = 0 } <END>
<BEG>  for { code k } degree of freedom <SEG> the mean be { code k } <END>
<BEG>  the implementation of this method be base on : < ul > < li > < a href= http : mathworld wolfram com exponentialdistribution html > exponential distribution < a > <SEG> equation 1 < li > < ul > <END>
<BEG> returns the shape parameter of { code this } distribution <END>
<BEG>  for population size { code n } <SEG> number of success { code m } <SEG> and sample size { code n } <SEG> the mean be { code n m n } <END>
<BEG> returns the shape parameter of this distribution <END>
<BEG> compute the error of stirling 's series at the give value <END>
<BEG>  for low limit { code a } <SEG> upper limit { code b } and mode { code c } <SEG> the pdf be give by < ul > < li > { code 2 x - a [ b - a c - a ] } if { code a < = x < c } <SEG> < li > < li > { code 2 b - a } if { code x = c } <SEG> < li > < li > { code 2 b - x [ b - a b - c ] } if { code c < x < = b } <SEG> < li > < li > { code 0 } otherwise <END>
<BEG> fits a gaussian function to the observed point <END>
<BEG> configure the observe data <END>
<BEG> configure whether evaluation will be lazy or not <END>
<BEG> modifies the give parameter <END>
<BEG> < p > returns the < code > string < code > represent this fraction <SEG> ie num dem or just num if the denominator be one <END>
<BEG> sets the elitism rate <SEG> i e <END>
<BEG> generates a representation correspond to a random permutation of length l which can be pass to the randomkey constructor <END>
<BEG> build an ordered list of interval represent the instance <END>
<BEG> revert a rotation <END>
<BEG> get the normalized axis of the rotation <END>
<BEG> convert to a constant vector without derivative <END>
<BEG> convert a hessian with respect to spherical coordinate into a hessian with respect to cartesian coordinate <END>
<BEG> get the line segment of the convex hull <SEG> order <END>
<BEG> get the remain region of the hyperplane <END>
<BEG> get all the part of the cut sub-hyperplane know to touch outside cell <END>
<BEG> add a node if not already know <END>
<BEG> insert an element in the tree <END>
<BEG> get the hyperplane location on the circle <END>
<BEG> bind a circle consider to contain this vertex <END>
<BEG> get a string representation for this matrix <END>
<BEG> returns true iff < code > object < code > be a < code > fieldmatrix < code > instance with the same dimension a this and all corresponding matrix entry be equal <END>
<BEG> check if any coordinate of this vector be { code nan } <END>
<BEG> compute { code this - m } <END>
<BEG> gets a copy of the real part of the eigenvalue of the original matrix <END>
<BEG> gets a copy of the i < sup > th < sup > eigenvector of the original matrix <END>
<BEG> returns a { link fieldmatrix } whose entry be the the value in the the input array <END>
<BEG> returns the { link clusterevaluator } use to determine the best clustering <END>
<BEG> gets the size of the neuron ' feature set <END>
<BEG> retrieves the underlying network <END>
<BEG> set current step start <END>
<BEG> get the index of the first equation element in complete state array <END>
<BEG> acknowledge the fact the step have be accept by the integrator <END>
<BEG> get the primary set of differential equation <END>
<BEG> shift one step forward <END>
<BEG> returns whether the problem be at an optimal state <END>
<BEG> build an initial simplex <END>
<BEG> get the simplex point store at the request { code index } <END>
<BEG> create the tableau by itself <END>
<BEG> factorization by trial division <END>
<BEG>  < p > algorithm description : < ol > < li > find the bin b that x belong to < li > < li > compute p b = the mass of b and p b- = the combined mass of the bin below b < li > < li > compute k b = the probability mass of b with respect to the within-bin kernel and k b- = the kernel distribution evaluate at the low endpoint of b < li > < li > return p b- + p b [ k x - k b- ] k b where k x be the within-bin kernel distribution function evaluate at x < li > < ol > if k be a constant distribution <SEG> we return p b- + p b count the full mass of b < p > since 3 1 <END>
<BEG>  < p > algorithm description : < ol > < li > find the small i such that the sum of the mass of the bin through i be at least p < li > < li > let k be the within-bin kernel distribution for bin i < br > let k b be the mass of b under k < br > let k b- be k evaluate at the low endpoint of b the combined mass of the bin below b under k < br > let p b be the probability of bin i < br > let p b- be the sum of the bin mass below bin i <END>
<BEG> generate a random scalar with null mean and unit standard deviation <END>
<BEG> returns the randomgenerator use to generate non-secure random data <END>
<BEG> < p > computes the digamma function of x < p > < p > this be an independently write implementation of the algorithm describe in jose bernardo <SEG> algorithm as 103 : psi digamma function <SEG> applied statistics <SEG> 1976 < p > < p > some of the constant have be change to increase accuracy at the moderate expense of run-time <END>
<BEG> returns a matrix of standard error associate with the estimate in the correlation matrix < br > < code > getcorrelationstandarderrors getentry i <SEG> j < code > be the standard error associate with < code > getcorrelationmatrix getentry i <SEG> j < code > < p > the formula use to compute the standard error be < br > < code > se < sub > r < sub > = 1 - r < sup > 2 < sup > n - 2 < sup > 1 2 < sup > < code > where < code > r < code > be the estimated correlation coefficient and < code > n < code > be the number of observation in the source dataset < p > < p > to use this method <SEG> one of the constructor that supply an input matrix must have be use to create this instance < p > return matrix of correlation standard error throw nullpointerexception if this instance be create with no data <END>
<BEG> adds the value to the dataset <END>
<BEG> removes the most recent value from the dataset <END>
<BEG> returns the maximum of the available value return the max or double nan if no value have be add <END>
<BEG> returns the current set of value in an array of double primitive <END>
<BEG> returns the currently configure sum of square implementation <END>
<BEG>  < p > note that when { link # kurtosis fourthmoment } be use to create a variance <SEG> this method do nothing <END>
<BEG> returns true iff biascorrected property be set to true <END>
<BEG> returns an array whose i < sup > th < sup > entry be the sum of square of the i < sup > th < sup > entry of the array that have be add use { link # addvalue double [ ] } return the array of component sum of square <END>
<BEG> returns the quantile estimate by this statistic in the range [ 0 0-1 0 ] return quantile estimate by { link # getresult } <END>
<BEG> generates a text report display value of statistic <END>
<BEG> < p > returns the weighted product of the entry in the specified portion of the input array <SEG> or < code > double nan < code > if the designated subarray be empty < p > < p > throws < code > mathillegalargumentexception < code > if any of the following be true : < ul > < li > the value array be null < li > < li > the weight array be null < li > < li > the weight array do not have the same length a the value array < li > < li > the weight array contain one or more infinite value < li > < li > the weight array contain one or more nan value < li > < li > the weight array contain negative value < li > < li > the start and length argument do not determine a valid array < li > < ul > < p > < p > uses the formula <SEG> < pre > weight product = & prod ; value [ i ] < sup > weight [ i ] < sup > < pre > that be <SEG> the weight be apply a exponent when compute the weighted product < p > param value the input array param weight the weight array param begin index of the first array element to include param length the number of element to include return the product of the value or 1 if length = 0 throw mathillegalargumentexception if the parameter be not valid since 2 1 <END>
<BEG> computes the < i > p-value < i > <SEG> or < i > observe significance level < i > <SEG> of a two-sample < a href= http : en wikipedia org wiki kolmogorov-smirnov_test > kolmogorov-smirnov test < a > evaluate the null hypothesis that { code x } and { code y } be sample draw from the same probability distribution <END>
<BEG> computes \ 1 + 2 \sum_ { i=1 } ^\infty -1 ^i e^ { -2 i^2 t^2 } \ stop when successive partial sum be within { code tolerance } of one another <SEG> or when { code maxiterations } partial sum have be compute <END>
<BEG> return true if the model have no intercept term ; false otherwise since 2 2 <END>
<BEG> < p > calculates the variance-covariance matrix of the regression parameter <END>
<BEG> < p > returns the number of parameter estimate in the model < p > < p > this be the maximum number of regressors <SEG> some technique may drop redundant parameter < p > return number of regressors <SEG> -1 if not estimate <END>
<BEG> < p > returns the sum of squared deviation of the predicted y value about their mean which equal the mean of y < p > < p > this be usually abbreviate ssr or ssm <END>
<BEG> < p > returns the < a href= http : www xycoon com coefficient1 htm > coefficient of multiple determination < a > <SEG> usually denote r-square < p > < p > < strong > preconditions < strong > : < ul > < li > at least numberofparameters observation with at least numberofparameters different x value must have be add before invoke this method <END>
<BEG> clears all data from the model <END>
<BEG> returns the predicted < code > y < code > value associate with the supplied < code > x < code > value <SEG> base on the data that have be add to the model when this method be activate <END>
<BEG> returns true if the model include an intercept term <END>
<BEG> returns the < a href= http : www xycoon com standerrorb 1 htm > standard error of the slope estimate < a > <SEG> usually denote s b1 <END>
<BEG> performs a regression on data present in buffer and output a regressionresults object <END>
<BEG> returns the sum of the value in the input array <SEG> or < code > double nan < code > if the array be empty <END>
<BEG>  the first element of the specify data set be require to be { code 0 } <END>
<BEG> multiply every component in the give real array by the give real number <END>
<BEG> multiply two long integer <SEG> check for overflow <END>
<BEG> raise an int to a long power <END>
<BEG> returns true if the argument be a power of two <END>
<BEG> returns an exact representation of the < a href= http : mathworld wolfram com binomialcoefficient html > binomial coefficient < a > <SEG> { code n choose k } <SEG> the number of { code k } -element subset that can be select from an { code n } -element set <END>
<BEG> returns a { code double } representation of the < a href= http : mathworld wolfram com binomialcoefficient html > binomial coefficient < a > <SEG> { code n choose k } <SEG> the number of { code k } -element subset that can be select from an { code n } -element set <END>
<BEG> for x between 0 and pi 4 compute sine use taylor expansion : sin x = x - x^3 3 ! <END>
<BEG> increments the iteration count by one <SEG> and throw an exception if the maximum number of iteration be reach <END>
<BEG> convert to multidimensional counter <END>
<BEG> comparing two complexdouble value <END>
<BEG> creates a new matrix in which all value be equal 0 <END>
<BEG> compute complex conjugate in-place <END>
<BEG> elementwise division <END>
<BEG> reads in a matrix from the give data stream <END>
<BEG> compute lu decomposition of a general matrix <END>
<BEG> exchange two vector <END>
<BEG> compute a singular-value decomposition of a sparse variant <END>
<BEG> solves the linear equation a x = b <END>
<BEG> return a string representation of this { link axisangle4d } <END>
<BEG> translate < code > this < code > by the vector < code > x <SEG> y < code > and store the result in < code > d < code > <END>
<BEG> test whether the give point < code > px <SEG> py < code > lie inside the axis-aligned rectangle with the minimum corner < code > minx <SEG> miny < code > and maximum corner < code > maxx <SEG> maxy < code > <END>
<BEG> test whether the point < code > px <SEG> py < code > lie inside the circle with center < code > centerx <SEG> centery < code > and square radius < code > radiussquared < code > <END>
<BEG> store this matrix a an equivalent 3x3 matrix in column-major order into the supplied { link doublebuffer } start at the specified absolute buffer position index <END>
<BEG> apply a rotation transformation to this matrix that rotate the give normalized < code > fromdir < code > direction vector to point along the normalized < code > todir < code > <SEG> and store the result in < code > d < code > <END>
<BEG> unproject the give window coordinate < code > winx <SEG> winy < code > by < code > this < code > matrix use the specify viewport <END>
<BEG> set this quaternion to be a copy of q <END>
<BEG> adds the area define by an array of coordinate <END>
<BEG> adds the linear component of by a geometry to the centroid total <END>
<BEG> return true if both number be positive or if both number be negative <END>
<BEG> creates a deep copy of the argument { link coordinate } array <END>
<BEG> computes the coordinate of the centre of this envelope as long a it be non-null return the centre coordinate of this envelope < code > null < code > if the envelope be null <END>
<BEG> computes the intersection of two { link envelope } s param env the envelope to intersect with return a new envelope represent the intersection of the envelope this will be the null envelope if either argument be null <SEG> or they do not intersect <END>
<BEG> returns an element { link geometry } from a { link geometrycollection } or < code > this < code > <SEG> if the geometry be not a collection <END>
<BEG> todo : md - add optimization for p-a case use point-in-polygon <END>
<BEG> returns whether the two < code > geometry < code > s be equal <SEG> from the point of view of the < code > equalsexact < code > method <END>
<BEG> determine some fact about the geometry in the list <END>
<BEG> returns < code > dimension false < code > <SEG> since by definition linearrings do not have a boundary <END>
<BEG> computes the length of the line segment <END>
<BEG> puts the line segment into a normalized form <END>
<BEG> computes the close point on this line segment to another point <END>
<BEG> returns < code > true < code > if < code > other < code > have the same value for it point <END>
<BEG> returns < code > true < code > if < code > other < code > be topologically equal to this linesegment e g <END>
<BEG> creates a { link linestring } whose coordinate be in the reverse order of this object return a { link linestring } with coordinate in the reverse order <END>
<BEG> compares this { link precisionmodel } object with the specified object for order <END>
<BEG> md - another option would be to use a simple scan for segment test for small geometry <END>
<BEG> computes the intersects predicate between a { link preparedlinestring } and a { link geometry } <END>
<BEG> computes the full topological < tt > cover < tt > predicate <END>
<BEG> computes the centroid centre of mass of a triangle <END>
<BEG> uses the formula 1 2 | u x v | where u <SEG> v be the side vector of the triangle x be the vector cross-product for 2d vector <SEG> this formual simplifies to the expression below <END>
<BEG> computes the z-value elevation of an xy point on a three-dimensional plane define by this triangle whose vertex must have z-values <END>
<BEG> updates the value of this transformation to that of a rotation around the origin compose with the current value <SEG> with the sin and co of the rotation angle specify directly <END>
<BEG> tests if this transformation be the identity transformation <END>
<BEG> combines a collection of geometry <END>
<BEG> computes the combination of the input geometry to produce the most appropriate { link geometry } or { link geometrycollection } return a geometry which be the combination of the input <END>
<BEG> convenience method which provide standard way of create a { link coordinatesequence } param coords the coordinate array to copy return a coordinate sequence for the array <END>
<BEG> transforms a { link linestring } geometry <END>
<BEG> this edge be a line edge if < ul > < li > at least one of the label be a line label < li > any label which be not line label have all locations = exterior < ul > <END>
<BEG> return -1 this edgeintersection be locate before the argument location return 0 this edgeintersection be at the argument location return 1 this edgeintersection be locate after the argument location <END>
<BEG> tests if the give point be an edge intersection param pt the point to test return true if the point be an intersection <END>
<BEG> if there be an edge equal to e already in the list <SEG> return it <END>
<BEG> the basic node constructor do not allow for incident edge <END>
<BEG> returns the edgeend which have edge e a it base edge md 18 feb 2002 - this should return a pair of edge return the edge <SEG> if find < code > null < code > if the edge be not find <END>
<BEG> returns the edge which start at p0 and whose first segment be parallel to p1 return the edge <SEG> if find < code > null < code > if the edge be not find <END>
<BEG> adds item in the tree which potentially overlap the query interval to the give collection <END>
<BEG> returns the index of the subnode that wholely contain the give interval <END>
<BEG> insert an item into the tree this be the root of <END>
<BEG> returns the location of this node return p location of this node <END>
<BEG> returns 0 if this node be a leaf <SEG> 1 if a parent of a leaf <SEG> and so on ; the root node will have the high level <END>
<BEG> reads up to < tt > buf length < tt > bytes from the stream into the give byte buffer <END>
<BEG> specifies the namespace prefix to write on each gml tag <END>
<BEG> sets the number of geometry to skip before store <END>
<BEG> find the near location along a linear { link geometry } to a give point <END>
<BEG> allows invalid line to be ignore rather than cause exceptions <END>
<BEG> sets the value of this location to refer to the end of a linear geometry <END>
<BEG> clamps a < tt > double < tt > value to a give range <END>
<BEG> computes the oriented distance from a point to the plane <END>
<BEG> checks for an intersection and throw a topologyexception if one be find <END>
<BEG> computes the buffer of a geometry for a give buffer distance <END>
<BEG> computes the envelope of the edge in the subgraph <END>
<BEG> gets the rightmost coordinate in the edge of the subgraph <END>
<BEG> buffersubgraphs be compare on the x-value of their rightmost coordinate <END>
<BEG> returns a list contain a point from each polygon <SEG> linestring <SEG> and point find inside the specified geometry <END>
<BEG> report the distance between the near point on the input geometry <END>
<BEG> return a pair of { link coordinate } s of the near point deprecate rename to nearestpoints <END>
<BEG> this be just a no-op <SEG> but return a wrapper to allow good test <END>
<BEG> a multipoint be simple iff it have no repeat point deprecate use issimple <END>
<BEG> adds an edge <SEG> directededges <SEG> and nodes for the give linestring representation of an edge <END>
<BEG> for all node in this edgering <SEG> link the directededges at the node to form minimaledgerings <END>
<BEG> computes the point geometry which will appear in the result <SEG> give the specified overlay operation <END>
<BEG> add a set of edge and node <SEG> which form a graph <END>
<BEG> snaps the vertex and segment of the source linestring to the give set of snap vertex <END>
<BEG> add a { link linestring } form an edge of the polygon graph <END>
<BEG> update the im with the contribution for the edgeends incident on this node <END>
<BEG> sets whether polygon use < b > self-touching rings < b > to form hole be report a valid <END>
<BEG> adds the common coordinate bit back into a geometry <END>
<BEG> gets a linestring contain two point which be at the minimum clearance distance <END>
<BEG> sets whether generate point be constrain to lie within a circle contain within each grid cell <END>
<BEG> simplify a collection of taggedlinestrings param taggedlines the collection of line to simplify <END>
<BEG> gets the convex hull of all the site in the triangulation <SEG> include constraint vertex <END>
<BEG> gets the edge around the right face ccw follow this edge <END>
<BEG> gets the collection of base { link quadedge } s one for every pair of vertex which be connect <END>
<BEG> deletes a quadedge from the subdivision <END>
<BEG> tests whether a quadedge be an edge incident on a frame triangle vertex <END>
<BEG> tests whether a { link vertex } be the start or end vertex of a { link quadedge } <SEG> up to the subdivision tolerance distance <END>
<BEG> gets a list of the triangle in the subdivision <SEG> specify a an array of the triangle { link vertex } e <END>
<BEG> gets the index for the edge that start at vertex v param v the vertex to find the edge for return the index of the edge start at the vertex or -1 if the vertex be not in the triangle <END>
<BEG> input be assume to be a multigeometry in which every component have it userdata set to be a coordinate which be the key to the output data <END>
<BEG> sets the envelope to clip the diagram to <END>
<BEG> efficiently return the binomial coefficient <SEG> often also refer to a n over k or n choose k <END>
<BEG> returns < tt > log < sub > 10 < sub > value < tt > <END>
<BEG> instantly return the factorial < tt > k ! < tt > <END>
<BEG> return a view into part of a matrix <END>
<BEG> return true iff f x <SEG> 0 = x for any x <END>
<BEG> constructs a function that return < tt > a & gt ; b ? <END>
<BEG> returns the result of the function evaluation <END>
<BEG> each single bit include the sign bit will be random <END>
<BEG> doing the thing turn out to be more tricky than expect <END>
<BEG> returns the integral from zero to < tt > x < tt > of the gamma probability density function <END>
<BEG> sets the specified range of element in the specified array to the specify value <END>
<BEG> sorts the receiver accord to the order induce by the specified comparator <END>
<BEG> returns a new list of the part of the receiver between < code > from < code > <SEG> inclusive <SEG> and < code > to < code > <SEG> inclusive <END>
<BEG> returns a deep copy of the receiver ; use < code > clone < code > and cast the result <END>
<BEG> replaces the element at the specified position in the receiver with the specified element ; < b > warning : < b > does not check precondition <END>
<BEG> return the column at the give index param column an int column index return a vector at the index throw org apache mahout math indexexception if the index be out of bound <END>
<BEG> apply the function to the argument and return the result param ignore ignored argument return a sample from this distribution <END>
<BEG> this be sort of constant <SEG> but really it might resize the array <END>
<BEG> note : this implementation reuse the vector element instance for each call of next <END>
<BEG> get set the id of this assembly <END>
<BEG> get set the destination filename in the outputdirectory <END>
<BEG> return true if plugin us relative path <SEG> else false <END>
<BEG> method getdepth return { link # level } <END>
<BEG> get the artifactid to which this rule applies <END>
<BEG> gets the initial delay value use before a reconnection attempt be make <END>
<BEG> gets whether the policy use the set back-off multiplier to grow the time between connection attempt <END>
<BEG> removes this node out of the link list it be chain in <END>
<BEG> the url to use when upload blobs to the broker or some other external file http server openwire : property version=3 <END>
<BEG> transports may wish to associate additional data with the connection <END>
<BEG> returns a list of all the value from this node down the tree <END>
<BEG> un lock the control file <END>
<BEG> get the value from it 's location param item return the value associate with the store entry <END>
<BEG> return a pretty print <END>
<BEG> return print of 'this ' <END>
<BEG> return true if a message command <END>
<BEG> param size return true if the limit be reach see org apache activemq usage usagecapacity # islimit long <END>
<BEG> reset all the bit value to false <END>
<BEG> test if in order param index return true if next message be in order <END>
<BEG> return the underlie byte [ ] buffer <END>
<BEG> stops the stop watch return the time take in millis <END>
<BEG> creates a uri with the give query <SEG> remove an previous query value from the give uri <END>
<BEG> given a string and a position in that string of an open parend <SEG> find the match close parend <END>
<BEG> strip a uri of it scheme element <END>
<BEG> returns the objectname use by the single hornetqservercontrol <END>
<BEG> returns whether this role can send management message to the address <END>
<BEG> concatenates 2 simplestring 's param toadd the simplestring to concatenate with <END>
<BEG> return the size of a simplestring which could be null param str the simplestring to check return the size <END>
<BEG> this method perform a similar function to { link string # getchars int <SEG> int <SEG> char [ ] <SEG> int } <END>
<BEG> it will send the member to it listener param nodeid param member <END>
<BEG> the owner exist mainly for debug purpose <END>
<BEG> non-javadoc see org hornetq core paging cursor livepagecache # addlivemessage org hornetq core server servermessage <END>
<BEG> this method will install the prepared txs param tx param recordid param add <END>
<BEG> use on test only <END>
<BEG> theres no need to synchronize this method a it 's only call from journal load on startup <END>
<BEG> non-javadoc see org hornetq core persistence storagemanager # deletecursoracknowledgetransactional long <SEG> long <END>
<BEG> remove a match from the repository param match the match to remove <END>
<BEG> utility method to verify consistency of match param match the match to validate throw illegalargumentexception if a match isnt valid <END>
<BEG> param close the new value to assign the close state flag <END>
<BEG> reset the < code > storebytearrayinputstream < code > to use an new byte array param newbuff <END>
<BEG> indicates whether the give reason can override the current reason <END>
<BEG> compares this with another extendedsequencenumber use these rule <END>
<BEG> provides the list of lease to be take <END>
<BEG> enable server hostname verification for tls connection <END>
<BEG> stop execute all consumer work <END>
<BEG> public api - retrieve a fresh dataoutputstream stream into the accumulator <END>
<BEG> converts a binary block to a longstring <END>
<BEG> tells whether there 's something to read in the application buffer or not <END>
<BEG> sets the timeout for queue outbound frame <END>
<BEG> the client 's amqp specification version <END>
<BEG> as get <SEG> but catch and ignores interruptedexception <SEG> retry until a value appear <END>
<BEG> allow whitelist a single ip address <END>
<BEG> check if a z85-based public key be in the certificate store <END>
<BEG> internal method to call org zeromq socket send method <END>
<BEG> return string version number in the form major minor patch <END>
<BEG> load append a zmsg from an open datainputstream param file datainputstream connect to file return zmsg object <END>
<BEG> tells if a channel be readable from this poller <END>
<BEG> the { link class } which be use to create { link channel } instance from <END>
<BEG> return the number of thread local cache use by this { link pooledbytebufallocator } <END>
<BEG> add { link poolchunk } and { code handle } to the cache if there be enough room <END>
<BEG> deregister the { link channel } from it { link eventloop } <END>
<BEG> invoked when a new message be add to a { link channeloutboundbuffer } of this { link abstractchannel } <SEG> so that the { link channel } implementation convert the message to another <END>
<BEG> sets a user-defined writability flag at the specified index <END>
<BEG> explicitly open the underlying file-descriptor if not do yet <END>
<BEG> process the write iov entry <END>
<BEG> returns { code true } if and only if the specified message can be encode by this codec <END>
<BEG> throws { link illegalstateexception } if { link channelhandleradapter # issharable } return { code true } <END>
<BEG> returns the { link httpmethod } represent by the specify name <END>
<BEG> find the end of string return the rank of the end of string <END>
<BEG> this getmethod return a list of all httpdatas from body < br > if chunk <SEG> all chunk must have be offer use offer getmethod <END>
<BEG> true if at current getstatus <SEG> there be an available decoded interfacehttpdata from the body <END>
<BEG> returns the reason text a per < a href= http : tool ietf org html rfc6455 # section-7 4 > rfc 6455 < a > if a reason text be not supply <SEG> an empty string be return <END>
<BEG> returns the text data in this frame <END>
<BEG> flag to indicate if the opening handshake be complete <END>
<BEG> creates an arbitrary number of random byte param size the number of random byte to create return an array of random byte <END>
<BEG> returns the protocol if { link # state } return { link protocoldetectionstate # detected } <SEG> otherwise { code null } <END>
<BEG> reads a big-endian unsigned short integer from the buffer <END>
<BEG> get which application level protocol negotiation to use <END>
<BEG> clears the cache for test purpose <END>
<BEG> converts the specify java cipher suite to the colon-separated openssl cipher suite specification <END>
<BEG> returns a { link future } that will get notify once the current tls handshake completes <END>
<BEG> returns the offset in the file where the transfer be happen currently <END>
<BEG> returns the idle state <END>
<BEG> return the maxwritesize default be { value # default_max_size } byte <END>
<BEG> helper method call by { link # tostring } in order to convert a single map key into a string <END>
<BEG> log an exception throwable at the info level with an accompanying message <END>
<BEG> return { code true } if { code sun misc unsafe } be find on the classpath and can be use for acclerated direct memory access <END>
<BEG> returns { code true } if any element where add or set <END>
<BEG> returns { code true } if and only if the system property with the specify { code key } exists <END>
<BEG> returns the value of the java system property with the specify { code key } <SEG> while fall back to the specify default value if the property access fails <END>
<BEG> check if the give { link signal } be the same a this instance <END>
<BEG> answers the thread group index <END>
<BEG> answers the number of distinct workload subgroup in the current group <END>
<BEG> answers the number of thread in the current group <END>
<BEG> execute system gc if we the system gc option be set <END>
<BEG> checks whether an expected argument match an actual argument ; the method be use by { link abstractmatcher # match object [ ] <SEG> object [ ] } <END>
<BEG> expects any boolean argument <END>
<BEG> expects a string that contain the give substring <END>
<BEG> return argument to be pass to the constructor <END>
<BEG> switches the give mock object more exactly : the control of the mock object to replay mode <END>
<BEG> creates a mock object that implement the give interface <END>
<BEG> returns the current jvm specification version 1 5 <SEG> 1 4 <SEG> 1 3 return current jvm specification version <END>
<BEG> get some default instance of provided class param methodtypes classes to instantiate return instances of methodtypes in order throw instantiationexception thrown if the class instantiation fails <END>
<BEG> add a value reference by the provide key <END>
<BEG> get the field name qualifier for this injection <END>
<BEG> sets this string item value <END>
<BEG> prints the give string tree <END>
<BEG> initializes mock spy dependency for object annotate with & # 064 ; injectmocks for give testclassinstance <END>
<BEG> actually inject mockcandidates on field <END>
<BEG> enable serialization serialization that will work across classloaders and jvm <END>
<BEG> < p > adds the result of < code > super equal < code > to this builder < p > param superequals the result of call < code > super equal < code > return equalsbuilder - use to chain call <END>
<BEG> < p > test if two < code > double < code > s be equal by test that the pattern of bit return by < code > doubletolong < code > be equal < p > < p > this handle nans <SEG> infinities <SEG> and < code > -0 0 < code > < p > < p > it be compatible with the hash code generate by < code > hashcodebuilder < code > < p > param lhs the left hand < code > double < code > param rhs the right hand < code > double < code > return equalsbuilder - use to chain call <END>
<BEG> < p > deep comparison of array of < code > long < code > <END>
<BEG> non-javadoc see org mockito internal progress argumentmatcherstorage # reportmatcher org hamcrest matcher <END>
<BEG> resolve current method generic return type to a { link genericmetadatasupport } <END>
<BEG> check if the field be annotate by the give annotation <END>
<BEG> verify the give ongoing verification data <SEG> and confirm that it satisfy the delegate verification mode before the full duration have pass <END>
<BEG> creates an answer from a functional interface - allow for a strongly type answer to be create ideally in java 8 param answer interface to the answer - a void method param < a > input parameter type 1 return the answer object to use since 2 1 0 <END>
<BEG> matches < strong > anything < strong > <SEG> include null and varargs <END>
<BEG> argument that be either < code > null < code > or of the give type <END>
<BEG> gets the generic type of give matcher <END>
<BEG> gets unused stubbings per location <END>
<BEG> construct an answer from a six parameter answer interface param answer answer interface param < t > return type param < a > input parameter 1 type param < b > input parameter 2 type param < c > input parameter 3 type param < d > input parameter 4 type param < e > input parameter 5 type param < f > input parameter 6 type return a new answer object <END>
<BEG> checks each the list for each key to verify that all no object remain in the list for that key <END>
<BEG> set simulate network speed <SEG> in byte per second <END>
<BEG> returns a cookie domain for this server <END>
<BEG> returns the body of this post request decode a a utf-8 string <END>
<BEG> we fail to verify the new substitution mock <END>
<BEG> add a fully qualified class name for a class that should have it static initializers suppress <END>
<BEG> the purpose of the method be to demonstrate that a test case can mock the new instance call and throw an exception upon instantiation <END>
<BEG> the amount of time spend handle the stub request <END>
<BEG> throw illegalstateexception if the condition if false <END>
<BEG> gets whether auto-encryption should be bypass <END>
<BEG> if this object be retrieve with only some field use a field filter this method will be call to mark it a such <END>
<BEG> gets if the index should be unique <END>
<BEG> gets the weighting object for use with a text index < p > a document that represent field and weight pair <END>
<BEG> returns the legacy dropdups set < p > prior to mongodb 3 0 dropdups could be use with unique index allow document with duplicate value to be drop when build the index <END>
<BEG> execute the bulk write operation with the give write concern <END>
<BEG> the { link objectid } for this file <END>
<BEG> gets a field name for a $ group operation represent all unique value that result from apply the give expression to each document in a group of document that share the same group by key <END>
<BEG> creates a $ count pipeline stage use the name field to store the result param field the field in which to store the count return the $ count pipeline stage mongodb driver manual reference operator aggregation count $ count mongodb server release 3 4 since 3 4 <END>
<BEG> creates a $ match pipeline stage for the specified filter param filter the filter to match return the $ match pipeline stage see filters mongodb driver manual reference operator aggregation match $ match <END>
<BEG> creates a $ limit pipeline stage for the specified filter param limit the limit return the $ limit pipeline stage mongodb driver manual reference operator aggregation limit $ limit <END>
<BEG> returns the transaction number return the transaction number <SEG> or null if not part of a multi-document transaction since 3 11 mongodb server release 4 0 <END>
<BEG> convenience method to create a from an exist { code collation } <END>
<BEG> gets this collation option a a document <END>
<BEG> gets the maximum execution time on the server for this operation <END>
<BEG> gets the maximum size of in byte of a capped collection <END>
<BEG> sets the readpreference param readpreference the readpreference return this <END>
<BEG> returns the exclusive upper bound for a specific index <END>
<BEG> returns true if a new document should be insert if there be no match to the query filter <END>
<BEG> sets the collation option < p > a null value represent the server default < p > param collation the collation option to use return this mongodb server release 3 4 <END>
<BEG> creates a filter that match all document where the value of the give field be great than or equal to the specify value <END>
<BEG> creates a filter that match all document where all of the bit position be clear in the field <END>
<BEG> return the filter expression since 3 6 <END>
<BEG> creates a projection of a field whose value be compute from the give expression <END>
<BEG> creates an update that rename a field <END>
<BEG> sets the key identifier param keyid the key identifier return this see # getkeyid <END>
<BEG> utility method to create an exception from a failed command <END>
<BEG> return whether all server in the cluster be compatible with the driver <END>
<BEG> gets any exception encounter while resolve the srv record for the initial host <END>
<BEG> while it may seem counter-intuitive that a mongodb cluster can have more than one primary <SEG> it can in the case where the client 's view of the cluster be a set of mongos server <SEG> any of which can serve a the primary <END>
<BEG> gets the list of added { code connectionpoollistener } <END>
<BEG> get the default minimum wire version return the default minimum wire version <END>
<BEG> gets whether this server be a replica set member <END>
<BEG> gets the passive member of the replica set <END>
<BEG> returns true if the connection string require srv protocol to resolve the host list from the configure host <END>
<BEG> gets the list of host return the host list <END>
<BEG> gets the maximum wait time of a thread waiting for a connection specify in the connection string <END>
<BEG> calls { link db # doeval java lang string <SEG> java lang object [ ] } <END>
<BEG> returns the object the cursor be at and move the cursor ahead by one <END>
<BEG> sets the query option - see bytes queryoption_ for list <END>
<BEG> gets the list of file store in this gridfs <SEG> sort by filename <END>
<BEG> gets the { link dbcollection } in which the binary chunk be store <END>
<BEG> sets if the cursor timeout should be turn off <END>
<BEG> sets if partial result from a mongo if some shard be down be allow param partial allow partial result from a mongo if some shard be down return this mongodb driver manual meta-driver late legacy mongodb-wire-protocol # op-query op_query <END>
<BEG> write the query prologue to the give bson output <END>
<BEG> removes the first element { code e } such that { code o equal e } <SEG> if such an element exists in this deque <END>
<BEG> returns the current number of active read operation <END>
<BEG> < p > the maximum wait time in millisecond that a thread may wait for a connection to become available < p > < p > default be 120<SEG>000 millisecond <END>
<BEG> creates a mongocredential instance for the mongodb x 509 protocol <END>
<BEG> gets an operation whose execution explain this operation <END>
<BEG> returns the logical starting point for the new change stream <END>
<BEG> set the change stream operation option for a resumeable operation <END>
<BEG> sets the filter to apply to the query <END>
<BEG> gets whether usepowerof2sizes should be use foe the allocation strategy <END>
<BEG> sets the index option default document for the collection <END>
<BEG> sets the validation rule for insert or updating document param validator the validation rule for insert or updating document return this since 3 2 mongodb server release 3 2 <END>
<BEG> gets the document contain the field or field to group <END>
<BEG> will return a cursor of documents contain the result of the group operation <END>
<BEG> sets if the output database be sharded param sharded if the output database be sharded return this mongodb driver manual reference command mapreduce # output-to-a-collection-with-an-action output with an action <END>
<BEG> rename the collection with { code oldcollectionname } in database { code databasename } to the { code newcollectionname } <END>
<BEG> adds a new key to the query if not present yet <END>
<BEG> gets the _id return the _id of this document <END>
<BEG> gets all underlie socket address return array of socket address since 3 9 <END>
<BEG> returns an { code objectserializer } that mostly conform to the strict json format define in < a href= http : doc mongodb org manual reference mongodb-extended-json > extend json < a > <SEG> but with a few difference to keep compatibility with previous version of the driver <END>
<BEG> returns whether this be the top level or not return true if there 's nothing on the stack <SEG> and this be the top level of the document <END>
<BEG> special value be not encode into document <END>
<BEG> converts a sequence of regular expression modifier from the database into java regular expression flag <END>
<BEG> converts java regular expression flag into regular expression modifier from the database <END>
<BEG> return the bsonbinarywritersettings since 3 6 <END>
<BEG> return a new instancecreator instance for the classmodel <END>
<BEG> gets a { link propertymodel } by the property name <END>
<BEG> returns all the property on this model return the list of property <END>
<BEG> sets the convention to apply to the model param convention a list of convention return this <END>
<BEG> creates a new classmodel instance base on the mapping data provide <END>
<BEG> the indentation mode <END>
<BEG> the maximum length of the json string <END>
<BEG> parses a string in mongodb extended json format to a { code rawbsondocument } param json the json string return a corresponding { code rawbsondocument } object see org bson json jsonreader mongodb driver manual reference mongodb-extended-json mongodb extended json since 3 3 <END>
<BEG> return int representation of the help context <END>
<BEG> getter to the inner storage so that cmpareto can work return the embed long value <END>
<BEG> return true if there be an underlying window dispatch object <END>
<BEG> param dispatchtarget param name return variant return by underlie calln <END>
<BEG> param dispatchtarget param dispid param val <END>
<BEG> implements java util enumeration return next element in the enumeration <END>
<BEG> return true if the parsed file be detect to be an elf file <END>
<BEG> return true if file be detect to specify <SEG> that fp parameter result pass conforms to aapcs <SEG> vfp variant hardfloat <END>
<BEG> retrieve the method handle <SEG> that can be use to invoke the provided method <END>
<BEG> invokes a default method reflectively <END>
<BEG> returns an instance of nativelibrary for the specify name <END>
<BEG> add a path to search for the specified library <SEG> ahead of any system path <END>
<BEG> close the native library we 're map to <END>
<BEG> convenience constant <SEG> equivalent to < code > void constant < code > <END>
<BEG> returns an array of { link pointer } of the requested size <END>
<BEG> return all field in this structure order <END>
<BEG> return the type mapper in effect for this structure <END>
<BEG> sort the structure field accord to the give array of name <END>
<BEG> cache native type information for use in native code <END>
<BEG> set whether the structure be automatically synchronize to native memory before and after a native function call <END>
<BEG> set whether this handler and thus it drop target will accept any drop <END>
<BEG> indicate whether the give drop action be acceptable at the give location <END>
<BEG> param set the set to convert return the flag combine into an integer <END>
<BEG> wraps an exist bytebuffer in a { link pointer } implementation so it can be use a a parameter to native function <END>
<BEG> this method return first label for the document <END>
<BEG> this method should be call from iterator 's reset method <SEG> to keep label in sync with iterator <END>
<BEG> this method reset labelawareiterator by create new iterator from iterable internally <END>
<BEG> returns the normalized text pass in via constructor return the normalized text pass in via constructor <END>
<BEG> takes an instance with data of type string or string [ ] [ ] and create an instance of type stringtokenization <END>
<BEG> return a random boolean <SEG> with probability p of be true <END>
<BEG> gets the phrase a an array of span <END>
<BEG> outputs the argument a a data structure so it can be use to create documentation <END>
<BEG> return a read only map with tool name and instance <END>
<BEG> returns the index of the parameter in the argument <SEG> or -1 if the parameter be not find <END>
<BEG> gets a property from the prop file <END>
<BEG> predict short edit script automatically induce lemma class <END>
<BEG> inverse l2-norm <END>
<BEG> builds up the list of contextual predicate give a string <END>
<BEG> returns the log probability associate with a label return the log probability associate with the label <END>
<BEG> enables skip average <SEG> this flag change the standard average to special average instead <END>
<BEG> generated previous decision feature for each token base on content of the specify map <END>
<BEG> new <END>
<BEG> adds ngrams up to the specify length to the current instance <END>
<BEG> advances the parse by assign it pos tag and return multiple tag sequence <END>
<BEG> returns the set of punctuation par that occur immediately before this parse <END>
<BEG> displays this parse use penn treebank-style formatting <END>
<BEG> returns the probability associate with the pos-tag sequence assign to this parse <END>
<BEG> returns the child constituent of this constituent <END>
<BEG> deprecate this will be reduce in visibility and later remove <END>
<BEG> stem a word contain in a portion of a char [ ] array <END>
<BEG> gets the context generator return a new instance of the context generator <END>
<BEG> retrieves the f-measure score <END>
<BEG> calculates the precision score for the give reference and predict span <END>
<BEG> serializes the model to the give { link outputstream } <END>
<BEG> creates an { link objectstream } form a collection <END>
<BEG> create a new documentbuilder which process xml securely <END>
<BEG> takes a { link reference } to a { link collection } of { link datum } object and give you back a { link classifier } train on them param ref { link reference } to a { link collection } of { link datum } object to train the classifier on return a classifier train on a collection of datum <END>
<BEG> entry point for take a string format a a line of a tsv file and translate it into a datum of feature <END>
<BEG> confidence weight accuracy assume the score be probability and use 5 a treshold <END>
<BEG> prints a sparse feature-value output of the dataset <END>
<BEG> returns whether this mention possibly multi-word be the adjectival form of a demonym <SEG> like african or iraqi <END>
<BEG> extract gold coref link information <END>
<BEG> class for train coreference model author kevin clark <END>
<BEG> can only be one because automaton be deterministic <END>
<BEG> remove a vertex and it edge from the graph <END>
<BEG> deletes all duplicate edge <END>
<BEG> load auxiliary data to be use in construct feature and label intended to be override by subclass <END>
<BEG> approximately check if two entity be equivalent <END>
<BEG> loads all save dictionary entry from disk <END>
<BEG> loads all proximity class from the hard disk the words map must be create before ! <END>
<BEG> zero or one <END>
<BEG> classify a { link list } of { link corelabel } s param document a { link list } of { link corelabel } s to be classify <END>
<BEG> extracts all the feature from the input data at a certain index <END>
<BEG> set the value of this triple miss an ungrounded of in the relation string <END>
<BEG> if true <SEG> this relation express a tmod temporal modifier relation that be not ground in the sentence <END>
<BEG> an optional method <SEG> return the dependency tree this triple be extract from <END>
<BEG> a fast <SEG> rule-based tokenizer for modern standard french <END>
<BEG> build a pos tag consisting of a base category plus inflectional feature <END>
<BEG> split the give tree base on a split point such that the terminal lead up to the split point be in the left return tree and those follow the split point be in the left return tree <END>
<BEG> return an iterator over file in the collection <END>
<BEG> sets the title of this document to the give title <END>
<BEG> returns list of coremaps that match the specified rule <END>
<BEG> keeps the temporary tag on the sentence after extraction have finish <END>
<BEG> segment a sequence into sequence of sub-sequences by attempt to find the non-overlapping sub-sequences that come early use the comparefunc <END>
<BEG> increases the value in this array by b <END>
<BEG> raise each entry in array a by power c <END>
<BEG> divide the first array by the second elementwise <SEG> and store result in place <END>
<BEG> computes inf-norm of vector <END>
<BEG> takes a pair of array <SEG> a and b <SEG> which represent correspond outcome of a pair of random variable : say <SEG> result for two different classifier on a sequence of input <END>
<BEG> tests to see if an integer be a decimal integer <SEG> perhaps start with + - <END>
<BEG> round a double to the near integer <SEG> via conventional rule 5 round up <SEG> 49 round down <SEG> and return the result <SEG> still a a double <END>
<BEG> when we want a pre-given number of class <END>
<BEG> this be rarely use because it be slow and require inithashvals to be call beforehand to initialize the hashvalues <END>
<BEG> finds the root of an equation by newton 's method <END>
<BEG> check whether the constraint be satisfy <SEG> the probability sum to one <SEG> etc <END>
<BEG> print out p y|x for all pair to the standard output <END>
<BEG> assume we have the probconds [ x ] [ y ] <SEG> compute the derivative for the expectedvalue function return the derivative of the expect <END>
<BEG> todo gabor javadoc param token param span return <END>
<BEG> checks to see if a specific port be available <END>
<BEG> write the word vector to a file <END>
<BEG> returns a factory that vend lineiterators that read the content of the give reader <SEG> split on newlines <END>
<BEG> only work on english <SEG> a it be hard cod for use the morphology class <SEG> which be english-only <END>
<BEG> an example of a command line be < br > java -mx1g edu stanford nlp parser dvparser cacheparsehypotheses -model scr horatio dvparser wsjpcfg nocompact simple ser gz -output cached9 simple ser gz -treebank afs ir data linguistic-data treebank 3 parse mrg wsj 200-202 < br > java -mx4g edu stanford nlp parser dvparser cacheparsehypotheses -model ~ scr dvparser wsjpcfg nocompact simple ser gz -output cache train simple ser gz -treebank afs ir data linguistic-data treebank 3 parse mrg wsj 200-2199 -numthreads 6 < br > java -mx4g edu stanford nlp parser dvparser cacheparsehypotheses -model ~ scr dvparser chinese xinhuapcfg ser gz -output cache xinhua train ser gz -treebank afs ir data linguistic-data chinese-treebank 6 data utf8 bracket 026-270<SEG>301-499<SEG>600-999 <END>
<BEG> you can often return the same thing for testmemorytreebank a for memorytreebank <END>
<BEG> the collinizer eliminate punctuation <END>
<BEG> stand-in collinizer do nothing to the tree <END>
<BEG> print some statistic about this lexicon <END>
<BEG> intdependency dependency = new intdependency ; for int head = 0 ; head < word length ; head++ { for int htag = 0 ; htag < tagindex size ; htag++ { for int arg = 0 ; arg < word length ; arg++ { for int atag = 0 ; atag < tagindex size ; atag++ { arrays fill depscore [ head ] [ htag ] [ arg ] [ atag ] <SEG> float negative_infinity ; } } } } for int head = 0 ; head < word length ; head++ { for int arg = 0 ; arg < word length ; arg++ { if head == arg continue ; for iterator < inttaggedword > headtwi=taggedwordlist [ head ] iterator ; headtwi hasnext ; { inttaggedword headtw = headtwi next ; for iterator < inttaggedword > argtwi=taggedwordlist [ arg ] iterator ; argtwi hasnext ; { inttaggedword argtw = argtwi next ; dependency head = headtw ; dependency arg = argtw ; dependency leftheaded = head < arg ; dependency distance = math ab head-arg ; depscore [ head ] [ headtw tag ] [ arg ] [ argtw tag ] = dg score dependency ; if false & & depscore [ head ] [ headtw tag ] [ arg ] [ argtw tag ] > -100 log info wordindex get headtw word + +tagindex get headtw tag + - > +wordindex get argtw word + +tagindex get argtw tag + score +depscore [ head ] [ headtw tag ] [ arg ] [ argtw tag ] ; } } } } <END>
<BEG> determine which daughter of the current parse tree be the head <END>
<BEG> probability of most likely parse have word at head with give pos tag a marker on tree over start inclusive end exclusive <END>
<BEG> these array be use by the factor parser only during edge combination <END>
<BEG> return a negraheadfinder <END>
<BEG> calculate parent annotation statistic suitable for do selective parent splitting in the pcfgparser inside factoredparser <END>
<BEG> recalculates the beta for all know transition <END>
<BEG> determines method for print tree on output <END>
<BEG> changes the root label <SEG> and add a lexicon boundary daughter to it <END>
<BEG> if this be set to true <SEG> then the binarizer will choose selectively whether or not to split state base on how many count the state have in a previous run <END>
<BEG> get taggedword and total tag count <SEG> and get set of all word attest in training <END>
<BEG> return the evalb f1 % from the last call to { link # evaluate } <END>
<BEG> param h word index of governor zero = root node ; actual word indexing begin at 1 param t word index of dependent zero = root node ; actual word indexing begin at 1 param l arc label <END>
<BEG> todo : return more if this use a beam <END>
<BEG> returns a 0-based index of the left leaf of the tree <END>
<BEG> annotate for name entity -- note that this combine multiple ner tag set <SEG> and some auxiliary thing like temporal tagging <END>
<BEG> annotate for gender of token <END>
<BEG> annotate operator e g <SEG> quantifier and polarity of token in a sentence <END>
<BEG> register an annotator that can be create by the pool <END>
<BEG> annotates a coremap represent a chunk with text information textannotation - string represent token in this chunk token text separate by space param chunk - coremap to be annotate param tokentextkey - key to use to find the token text <END>
<BEG> create a new chunk annotation with basic chunk information characteroffsetbeginannotation - set to characteroffsetbeginannotation of first token in chunk characteroffsetendannotation - set to characteroffsetendannotation of last token in chunk tokensannotation - list of token in this chunk tokenbeginannotation - index of first token in chunk index in original list of token tokenstartindex + annotation 's tokenbeginannotation tokenendannotation - index of last token in chunk index in original list of token tokenendindex + annotation 's tokenbeginannotation textannotation - string extract from the origannotation use character offset information for this chunk param annotation - annotation from which to extract the text for this chunk param tokenstartindex - index relative to current list of token at which this chunk start param tokenendindex - index relative to current list of token at which this chunk end not inclusive return annotation represent new chunk <END>
<BEG> the list of sentence in this document <END>
<BEG> return the entity this entity mention be link to <END>
<BEG> try to normalize timex value to the form they would appear in the knowledge base <END>
<BEG> link the give mention <SEG> if possible <END>
<BEG> lemmatize return a { code wordlemmatag } <END>
<BEG> get a tokenizerfactory that do penn treebank tokenization <END>
<BEG> read xml from the specify file and write xml to specify file <SEG> while transform text appear inside the specified xml tag by apply the specify { link function < code > function < code > } <END>
<BEG> -- -- sets the source of this tokenizer to be the reader r private void setsource reader r { lexer = new whitespacelexer r ; } -- -- <END>
<BEG> given a set of node from a semanticgraph <SEG> return the set of edge that be span between these node <END>
<BEG> resets the index for the vertex in the graph <SEG> use the current ordering return by vertexlist presumably in order <END>
<BEG> given an iterable set of distinct vertex <SEG> create a new mapping that map the original vertex to a set of generic version <END>
<BEG> used to assign generic label to the node in the blanket for a set of vertex in a graph <END>
<BEG> given a { code semanticgraph } <SEG> set the lemma on it label object base on their word and tag <END>
<BEG> find the next match of the pattern in the graph <END>
<BEG> informs this sequence model that the value of the element at position po have change <END>
<BEG> print the property specify by this object <END>
<BEG> finds and return the key in this counter with the small count <END>
<BEG> for all key u <SEG> v in arg <SEG> set target [ u <SEG> v ] to be target [ u <SEG> v ] + scale arg [ u <SEG> v ] <END>
<BEG> sets each value of target to be target [ k ] + value num-of-times-it-occurs-in-collection if the key be present in the arg collection <END>
<BEG> sets each value of target to be target [ k ] + num-of-times-it-occurs-in-collection if the key be present in the arg collection <END>
<BEG> removes all entry with key first key set in the give collection param < e > param counter param removekeyscollection <END>
<BEG> returns the set of key whose count be at or above the give threshold <END>
<BEG> returns a { link edu stanford nlp util priorityqueue } whose element be the key of counter c <SEG> and the score of each key in c become it priority <END>
<BEG> returns a counter that be the union of the two counters pass in count be add <END>
<BEG> return the sum of square square l2 norm <END>
<BEG> for counter with large # of entry <SEG> this scale down each entry in the sum <SEG> to prevent an extremely large sum from build up and overwhelm the max double <END>
<BEG> returns a new counter which be scale by the give scale factor <END>
<BEG> returns a counter whose key be the element in this priority queue <SEG> and whose count be the priority in this queue <END>
<BEG> insures that object be in keyset with possibly zero value param o object to put in keyset <END>
<BEG> adds the count in the give counter to the count in this counter <END>
<BEG> returns a string summarize overall accuracy that will print nicely <END>
<BEG> prints out the pair of { code extractors } object find in the file that be the first and only argument <END>
<BEG> -- - unused : double pcondcalc int y <SEG> int x { double zlambdax ; zlambdax = 0 0 ; for int y1 = 0 ; y1 < p data ysize ; y1++ { double s = 0 0 ; for int i = 0 ; i < p fsize ; i++ { s = s + lambda [ i ] p function get i getval x <SEG> y1 ; } zlambdax = zlambdax + math exp s ; } double s = 0 0 ; for int i = 0 ; i < p fsize ; i++ { s = s + lambda [ i ] p function get i getval x <SEG> y ; } return 1 zlambdax math exp s ; } double fnumcalc int x <SEG> int y { double s = 0 0 ; for int i = 0 ; i < p fsize ; i++ { this be slow s = s + p function get i getval x <SEG> y ; } return s ; } -- - <END>
<BEG> returns the number of token in the data read <SEG> which be the number of word plus one end sentence token per sentence <END>
<BEG> a hashcode for constituents do by shift and or'ing for speed <END>
<BEG> returns an englishgrammaticalrelation base on the argument <END>
<BEG> called by determinehead and may be override in subclass if special treatment be necessary for particular category <END>
<BEG> return the maximal projection of < code > head < code > in < code > root < code > give a { link headfinder } <END>
<BEG> returns the index of < code > daughter < code > in < code > parent < code > by == <END>
<BEG> return list of tree node to root from t includes root and t returns null if tree not find dominate by root <END>
<BEG> same a gettokenizer <END>
<BEG> returns true if the root have no child ; false otherwise <END>
<BEG> updates the number of unique tree match and the number of total tree match by the last pattern that be search for <END>
<BEG> load and apply application preference <END>
<BEG> assumes the give reader have only tsurgeon operation not a tregex pattern <SEG> and return them a a string <SEG> mirror the way the string appear in the file <END>
<BEG> converts a constituency tree to the english basic <SEG> enhance <SEG> or enhanced++ universal dependency representation <SEG> or an english basic universal dependency tree to the enhance or enhanced++ representation <END>
<BEG> return a set of key such that the value of that key be not null <END>
<BEG> reduces memory consumption to the minimum for represent the value currently store store in this object <END>
<BEG> this give a very short string representation of a coremap by leave it to the content to reveal what field be be print <END>
<BEG> finds the object with the minimum key and return it <SEG> without modify the heap <END>
<BEG> returns all object in list1 that be not in list2 <END>
<BEG> combines all the list in a collection to a single list <END>
<BEG> shuts down the thread pool <SEG> return when finish <END>
<BEG> prints the current confusion in table form to a string <SEG> with contingency <END>
<BEG> adds a key to the queue with the give priority <END>
<BEG> return rank of 1 gram in google ngeams if it be less than 20k <END>
<BEG> create a lazy value from the give provider <END>
<BEG> ensure that we do n't print duplicate channel when adapt to another logging framework <END>
<BEG> inverts a map x- & gt ; y to a map y- & gt ; x assume unique preimages <END>
<BEG> adds all of the key in < code > from < code > to < code > to < code > <SEG> apply < code > function < code > to the value to transform them from < code > v2 < code > to < code > v1 < code > <END>
<BEG> returns the powerset the set of all subset of set s <END>
<BEG> convenience method : a case-insensitive variant of collection contains <END>
<BEG> split on a give character <SEG> fill out the field in the output array <END>
<BEG> pad or trim so a to produce a string of exactly a certain length <END>
<BEG> given a string the method use regex to check if the string only contain alphabet character param s a string to check use regex return true if the string be valid <END>
<BEG> i shamefully steal this from : http : rosettacode org wiki levenshtein_distance # java -- gabor <END>
<BEG> format with one decimal place elapse millisecond in second <END>
<BEG> indicates when the layer be select or not <END>
<BEG> create a md5 checksum for a file param filename return md5sum throw exception <END>
<BEG> set color for the highlighted value text <SEG> or null to draw no text <END>
<BEG> returns current color for the highlight value <END>
<BEG> checks if the area under the line be enable <END>
<BEG> get the minimum value of an array of number element a a bigdecimal <END>
<BEG> creates a time interval graphic representation with the indicate fill and border color or null to use default color <END>
<BEG> finish the progress task <END>
<BEG> verify that the required parameter name be contain in the actual collection <END>
<BEG> add some of the parameter need to request access to a protect resource <SEG> if they be n't already in the message <END>
<BEG> parse the parameter from an oauth authorization or www-authenticate header <END>
<BEG> removes the entry for the specify key and return it first value <END>
<BEG> returns { code true } if the specify char sequence be not all blank <SEG> not empty and not { code null } <END>
<BEG> convenience method to add a single value for the parameter specify by 'key ' <END>
<BEG> ensures that the instance be safe to be return by the pool <END>
<BEG> not support in this base implementation <END>
<BEG> < p > flag to remove abandon object if they exceed the removeabandonedtimeout when borrowobject be invoke < p > < p > the default value be false < p > < p > if set to true <SEG> abandoned object be remove by borrowobject if there be few than 2 idle object available in the pool and < code > getnumactive & gt ; getmaxtotal - 3 < code > < p > return true if abandon object be to be remove by borrowobject <END>
<BEG> < p > flag to remove abandon object if they exceed the removeabandonedtimeout when pool maintenance the evictor run < p > < p > the default value be false < p > < p > if set to true <SEG> abandoned object be remove by the pool maintenance thread when it run <END>
<BEG> < p > flag to remove abandon object if they exceed the removeabandonedtimeout when pool maintenance run < p > param removeabandonedonmaintenance true mean abandon object will be remove by pool maintenance see # getremoveabandonedonmaintenance <END>
<BEG> flag to log stack trace for application code which abandon an object <END>
<BEG> returns the maximum amount of time in milliseconds the < code > borrowobject < code > method should block before throw an exception when the pool be exhaust and { link # getblockwhenexhausted } be true <END>
<BEG> returns whether object create for the pool will be validate before be return from the < code > borrowobject < code > method <END>
<BEG> gets the timeout that will be use when wait for the evictor to shutdown if this pool be close and it be the only pool still use the the value for the evictor <END>
<BEG> provides the name under which the pool have be register with the platform mbean server or < code > null < code > if the pool have not be register <END>
<BEG> the maximum time a thread have wait to borrow object from the pool <END>
<BEG> returns an estimate of the last time this object be use <END>
<BEG> obtain the { code idleevicttime } for this eviction configuration instance <END>
<BEG> links the provided element a the first in the queue <SEG> wait until there be space to do so if the queue be full <END>
<BEG> unlinks the first element in the queue <SEG> wait until there be an element to unlink if the queue be empty <END>
<BEG> returns an approximation not less than the of the number of idle instance in the pool <END>
<BEG> should the supply throwable be re-thrown eg if it be an instance of one of the throwables that should never be swallow <END>
<BEG> returns true if the current binarydecoder be at the end of it source data and can not read any far without throw an eofexception or other ioexception <END>
<BEG> returns an { link java io inputstream } that be aware of any buffering that may occur in this binarydecoder <END>
<BEG> pops and return the top symbol from the stack <END>
<BEG> write an i16 a a zigzag varint <END>
<BEG> write a string to the wire with a varint size precede <END>
<BEG> read an i16 from the wire a a zigzag varint <END>
<BEG> deserialize the thrift object from a java string <SEG> use the default jvm charset encode <END>
<BEG> return length of the buffer <SEG> include any front reserve <END>
<BEG> open if both input output open unless readonly return true <END>
<BEG> access the protocol 's underlying buffer directly <END>
<BEG> consume len byte from the underlie buffer <END>
<BEG> deserializes byte array to { link org msgpack type value } object <END>
<BEG> deserializes buffer to object accord to template <END>
<BEG> < p > gets the bean 's { link class } <END>
<BEG> this base implementation throw { code unsupportedoperationexception } always <END>
<BEG> copies the give byte into a { code bytestring } <END>
<BEG> encodes { code text } into a sequence of byte use the name charset and return the result a a { code bytestring } <END>
<BEG> concatenate the give { code bytestring } to this one <END>
<BEG> constructs a new { code bytestring } builder <SEG> which allow you to efficiently construct a { code bytestring } by write to a { link codedoutputstream } <END>
<BEG> parse a message of the give type from the give input stream <END>
<BEG> add a non-message-type extension to the registry by descriptor <END>
<BEG> < pre > the index of the field type in ` type oneofs ` <SEG> for message or enumeration type <END>
<BEG> sets this field with byte to delay-parse <END>
<BEG> creates a new mutable empty mapfield <END>
<BEG> returns the content of this mapfield a a read-only map <END>
<BEG> makes this list immutable <END>
<BEG> makes a deep copy of a { link map } <END>
<BEG> create a new ropebytestring for test only while bypass all the defense of { link # concatenate bytestring <SEG> bytestring } <END>
<BEG> returns the minimum length for which a tree of the give depth be consider balanced accord to bap95 <SEG> which mean the tree be flat-enough with respect to the bound <END>
<BEG> determines whether to issue tableswitch or lookupswitch for the mergefrom method <END>
<BEG> < pre > the path-qualified name of the proto file that contain the associate protobuf element <END>
<BEG> get the location in the source of a field 's value <END>
<BEG> find a type by it full name <END>
<BEG> return -1 or the next byte unsigned value <END>
<BEG> collect all change and rebases <END>
<BEG> this will be avaiable for top level struct array only <SEG> embed structarrays will return null ; return <END>
<BEG> accessor to element param i param val <END>
<BEG> gets the substring start at { code codepointstart } and extend for { code codepointlength } code point <END>
<BEG> sets the utf-8 sequence for code point at the { code position } <END>
<BEG> reset the reader to these start of the buffered event <END>
<BEG> if reading from the buffer after a { link # reset } call an { link illegalstateexception } will be throw <END>
<BEG> easy hook to build an identifier use the keyword safe identifierhelper <END>
<BEG> access to the parent part return the parent part <END>
<BEG> get the wrapped java class reference return the class reference <END>
<BEG> some dialect-specific limit clause require the maximum last row number aka <SEG> first_row_number + total_row_count <SEG> while others require the maximum returned row count the total maximum number of row to return <END>
<BEG> should limit be apply ? <END>
<BEG> retrieve the list of { code sequenceinformation } object which describe the underlying database sequence <END>
<BEG> execute the discrete work encapsulate by a { link returningwork } instance use the supplied connection <SEG> return the result of { link returningwork # execute java sql connection } param work the link returningwork } instance encapsulate the discrete work param connection the connection on which to perform the work <END>
<BEG> convert the give value into the specified target type <END>
<BEG> determine if { code this } mode be less than the provided mode <END>
<BEG> from http : www jroller com comment kenlars99 weblog cloudscape_soon_to_be_derby < p > the problem we have <SEG> be when hibernate do a select with a case statement <SEG> for joined subclass <END>
<BEG> add the condition string to the join fragment <END>
<BEG> retrieve the extracted increment-size define for the sequence <END>
<BEG> will return { code null } if no match be find <END>
<BEG> accessor for the current metadata component <END>
<BEG> accessor for the filename return the filename of this metadata file <END>
<BEG> accessor for the property for this persistence unit <END>
<BEG> put a new attribute to this element param name the attribute 's name param value the attribute 's value <END>
<BEG> acessor for all configurationelements declare in the extension return array of configurationelement <END>
<BEG> accessor for the object graph depth currently return the graph depth <END>
<BEG> accessor for the current depth for the specified field name param fieldname the name of the field return the depth for this field name <END>
<BEG> accessor for the next poid <SEG> or null if block id exhaust return the next poid <END>
<BEG> ascii code <END>
<BEG> return string like useage <END>
<BEG> accessor for whether the jre be 1 4 or above <END>
<BEG> accessor for the major version number of the jre <END>
<BEG> message formatter with a series of argument pass in that will be embed in an internationalised message <END>
<BEG> method to get a value for a key <END>
<BEG> formats a timestamp in jdbc timestamp escape format use the timezone of the pass calendar <END>
<BEG> allows compare this connection to another <END>
<BEG> verifies that the provided object reference be null <END>
<BEG> set the limit variable string e g <END>
<BEG> clear out all of internal cache <END>
<BEG> clear out our dao cache <END>
<BEG> internal method that find the matching enum for a configured field that have the name argument <END>
<BEG> load a configuration in from a text file <END>
<BEG> return the generated-id-sequence associate with the field or null if { link # isgeneratedidsequence } be false <END>
<BEG> assign to the data object the val correspond to the fieldtype <END>
<BEG> return the value from the field in the object that be define by this fieldtype <END>
<BEG> return whether or not the field value pass in be the default value for the type of the field <END>
<BEG> log a message with a throwable at the provided level <END>
<BEG> set the { link dao } on the object <END>
<BEG> if you be use the spring type wiring <SEG> this should be call after all of the set method <END>
<BEG> build and return a prepared delete that can be use by { link dao # delete prepareddelete } method <END>
<BEG> return a field object convert from an id <END>
<BEG> this be use by the internal call structure to note when a query builder be be use a an inner query <END>
<BEG> build and return a prepared query that can be use by { link dao # query preparedquery } or { link dao # iterator preparedquery } method <END>
<BEG> add columns to be return by the select query <END>
<BEG> start the output at this row number <END>
<BEG> return a list of all of the data in the table <END>
<BEG> create a new entry in the database from an object <END>
<BEG> call batch task inside of a connection which may <SEG> or may not <SEG> have be save <END>
<BEG> add a column to be set to a value for update statement <END>
<BEG> add a in clause so the column must be equal-to one of the object from the list pass in <END>
<BEG> add a 'is null ' clause so the column must be null <END>
<BEG> add a raw statement a part of the where that can be anything that the database support <END>
<BEG> returns the connection that have be save or null if none <END>
<BEG> clear the connection that be previously save <END>
<BEG> optional setting <END>
<BEG> return the { link fieldtype } associate with the columnname <END>
<BEG> non-javadoc see aqute bnd service repositoryplugin downloadlistener # success java io file <END>
<BEG> non-javadoc see aqute bnd service repositoryplugin downloadlistener # failure java io file <SEG> java lang string <END>
<BEG> return the bndrun file that need to be export throw exception <END>
<BEG> this static method find the workspace and create a project or return an exist project param projectdir return <END>
<BEG> return the workspace repo <END>
<BEG> get the bnddriver <SEG> can be null if not set <END>
<BEG> param cd param provide <END>
<BEG> download a resource from the give repo <END>
<BEG> this method be a pas thru for the property of the analyzer <END>
<BEG> find out if a package be contract <END>
<BEG> indicates that this run should ignore error and succeed anyway return true if this processor should return error <END>
<BEG> see org eclipse jface text itextstore # set java lang string <END>
<BEG> see org eclipse jface text itextstore # get int <END>
<BEG> return a collection with all value return <END>
<BEG> get a list of file that match the glob expression param root the directory to get the file from param recursive to traverse the dirs recursive return <END>
<BEG> returns a node name that be valid for the tree operation method <SEG> base on the give node name <END>
<BEG> checks whether the specify uri be an absolute uri <END>
<BEG> remove a bundle from this { code bundletracker } <END>
<BEG> return if this { code bundletracker } be empty <END>
<BEG> wait for at least one service to be track by this { code servicetracker } <END>
<BEG> create an output stream for the generated jack code <END>
<BEG> normalise all character class expression in regexp and lookahead rule <END>
<BEG> retuns a copy of a single char class partition by code <END>
<BEG> returns a set of character interval represent all character that be case-insensitively equivalent to the give character <SEG> include the give character itself <END>
<BEG> emit newline <END>
<BEG> println <END>
<BEG> showoptions <END>
<BEG> returns the path of { code file } relative to { code rootdirectory } <END>
<BEG> print warn message with location information param file the file the warning be issue for param message the code of the message to print param line the line number of the position param column the column of the position <END>
<BEG>  < p > write a portion of an array of character <END>
<BEG> starts the generation process with the file in { code argv } or pop up a window to choose a file <SEG> when { code argv } do n't have any file entry <END>
<BEG> retrieves this reference value field and clear it <END>
<BEG> gets the list of path to the single character matcher that fail at the error location of this error <END>
<BEG> retrieves the innermost matcher that be not a memomismatchesmatcher <END>
<BEG> attaches the give filter to this tracingparserunner instance <END>
<BEG> determines whether this range contain no character <END>
<BEG> creates a string representation of the graph reachable from the give node use the give formatter <END>
<BEG> maps an alias to a name <END>
<BEG> a = x2 - x1 <SEG> y2 - y1 p = px - x1 <SEG> py - y1 <END>
<BEG> calculates position and or stroke thickness depend on the font size param d value to be convert param i font size return position and or stroke thickness depend on the font size <END>
<BEG> this routine go through the attribute and set the font before call the actual string draw routine param iter <END>
<BEG> see graphics # drawimage image <SEG> int <SEG> int <SEG> int <SEG> int <SEG> int <SEG> int <SEG> int <SEG> int <SEG> color <SEG> imageobserver <END>
<BEG> make this basecolor brighter <END>
<BEG> sets an horizontal line that can be an underline or a strikethrough <END>
<BEG> bugfix by 'taqua ' thomas <END>
<BEG> checks if the stream be to be close on document close return true if the stream be close on document close <END>
<BEG> and allow the user of exceptionconverter to get a handle to it <END>
<BEG> creates a pdfpcell element base on a tag and it property <END>
<BEG> since 5 0 1 <END>
<BEG> adds a tag and it corresponding property to the chain <END>
<BEG> gets a hyphenationevent base on the hyphenation entry in the hierarchy chain <END>
<BEG> pushes the value of pendingtr and pendingtd to a state stack <END>
<BEG> gets the provider deprecate use getproviders instead <END>
<BEG> reuses an exist image <END>
<BEG> scale the width and height of an image to a certain percentage <END>
<BEG> gets the dots-per-inch in the x direction <END>
<BEG> sets invert true or false param invert true or false <END>
<BEG> gets the explicit masking <END>
<BEG> set the global logger to process log statement with <END>
<BEG> creates a < code > section < code > <SEG> add it to this < code > section < code > and return it <END>
<BEG> this method return a rectangle base on a string <END>
<BEG> indicates whether the font be use for verticl writing or not <END>
<BEG> gets the descent of a < code > string < code > in point <END>
<BEG> sets the font parameter identify by < code > key < code > <END>
<BEG> gets the small box enclose the character contour <END>
<BEG> return reorder array breaking line at offset in linebreaks <END>
<BEG> since 2 1 5 override to allow special handle for font that do n't specify width of space character see com itextpdf text pdf documentfont # getwidth int <END>
<BEG> return an image represent the give page <END>
<BEG> returns the offset of the next ifd after the ifd corresponding to this < code > tiffdirectory < code > <END>
<BEG> defines the sort order of the field ascend or descend <END>
<BEG> return the pre-break text <SEG> not include the hyphen character <END>
<BEG> param key return a hyphenation tree <END>
<BEG> recursively insert the median first and then the median of the low and upper half <SEG> and so on in order to get a balanced tree <END>
<BEG> gets the hyphen symbol <END>
<BEG> < p > tests if this hashtable map no key to value < p > return < code > true < code > if this hashtable map no key to value ; < code > false < code > otherwise <END>
<BEG> < p > tests if some key map into the specify value in this hashtable <END>
<BEG> < p > increases the capacity of and internally reorganize this hashtable <SEG> in order to accommodate and access it entry more efficiently < p > < p > this method be call automatically when the number of key in the hashtable exceeds this hashtable 's capacity and load factor < p > <END>
<BEG> < p > removes the key and it correspond value from this hashtable < p > < p > this method do nothing if the key be not present in the hashtable < p > param key the key that need to be remove <END>
<BEG> see java io randomaccessfile # getfilepointer return long <END>
<BEG> begins handle of current pdf stream decompression <END>
<BEG> getter for the word space return the word space since itext 5 0 1 <END>
<BEG> gets an object contain the image dictionary and byte <END>
<BEG> calculates and return the next element which be either gap or dash <END>
<BEG> processes content from the specify page number use the specified listener <END>
<BEG> return < code > true < code > if this subpath contain only one point and it be not close <SEG> < code > false < code > otherwise <END>
<BEG> checks if the acroform be valid return true if the acroform be valid <END>
<BEG> param name param value param status param llx param lly param urx param ury return a pdfformfield <END>
<BEG> writes the pdf representation of this < code > pdfarray < code > a an array of < code > byte < code > to the specify < code > outputstream < code > <END>
<BEG> gets the indirect reference to this file specification <END>
<BEG> sets the flag whether to apply overprint for non stroke painting operation <END>
<BEG> writes efficiently to a stream param o the stream to write to throw ioexception on write error <END>
<BEG> sets the transformation matrix for the pattern <END>
<BEG> returns the default color of the pattern <END>
<BEG> see com itextpdf text pdf pdfcontentbyte # setgrayfill float <END>
<BEG> see com itextpdf text pdf pdfcontentbyte # setcmykcolorfillf float <SEG> float <SEG> float <SEG> float <END>
<BEG> gets the height which be calculate on last call of getmaxheight <END>
<BEG> block change to the underlie pdfarray param object ignored <END>
<BEG> an optional < code > string < code > map to add or change value in the info dictionary <END>
<BEG> gets the xml signing instance <END>
<BEG> flatten annotation with an appearance stream on close <END>
<BEG> determining the initial backdrop against which it stack be composited <END>
<BEG> read <SEG> and comprehend the acroform param root the document root <END>
<BEG> param a param b return product of a and b in gf 256 <END>
<BEG> gets the digest name for a certain id param oid an id for instance 1 2 840 113549 2 5 return a digest name for instance md5 <END>
<BEG> verifies certificate against a list of crls and ocsp response <END>
<BEG> finds the complete field name contain in the classic form from a partial name <END>
<BEG> sets the xfa form flag signal that this be a valid xfa form <END>
<BEG> checks if this xfa form be change <END>
<BEG> sets the changed status of this xfa instance <END>
<BEG> looks for the corresponding symbol in the font symbol <END>
<BEG> replaces the content of an attribute in the description tag <END>
<BEG> return returns whether the qname have a prefix <END>
<BEG> removes a child at the requested index <END>
<BEG> param hasaliases set the flag that the node contain alias <END>
<BEG> see xmpschemaregistry # getnamespaces <END>
<BEG> return returns the singleton instance of the < code > xmpschemaregistry < code > <END>
<BEG> serializes an < code > xmpmeta < code > -object a rdf into a string <END>
<BEG> returns the stack use by this execution context <END>
<BEG> executes the instruction sequence <END>
<BEG> tells if structure element use user property <END>
<BEG> set if the structure elements contain user property <END>
<BEG> set the value of the suspect property <END>
<BEG> adds a user property <END>
<BEG> returns the revision number at the specified position <END>
<BEG> get the rgb color to be use for the guideline <END>
<BEG> gets the checked state <END>
<BEG> this will tell if the user can add or modify text annotation and fill in interactive form field and <SEG> if { link # canmodify canmodify } return true <SEG> create or modify interactive form field include signature field <END>
<BEG> locks the access permission read only ie <SEG> the setter will have no effect <END>
<BEG> indicates if any revision 3 access permission be set or not <END>
<BEG> this will set the number of bit to use for the crypt filter algorithm <END>
<BEG> this will set the crypt filter method <END>
<BEG> this will set the permission bite mask <END>
<BEG> returns the password give by the user and that will be use to open the private key <END>
<BEG> this will encrypt and write the data <END>
<BEG> returns the access permission return the access permission <END>
<BEG> returns the owner password <END>
<BEG> this will set frational space to allocate <END>
<BEG> a flag tell if the field import from the template may be rename if there be conflict <END>
<BEG> returns the linear interpretation matrix <SEG> which be an array of nine number <END>
<BEG> sets the linear interpretation matrix <END>
<BEG> set optional content group a a list <END>
<BEG> returns the collection of all optional content group <END>
<BEG> lists all optional content group name <END>
<BEG> this will get the next action <SEG> or sequence of action <SEG> to be perform after this one <END>
<BEG> this will get an action to be perform when the mouse button be press inside the annotation 's active area <END>
<BEG> this will get an action to be perform when the annotation receive the input focus <END>
<BEG> this will get an action to be perform when the page contain the annotation be open <END>
<BEG> this will get an action to be perform when the page contain the annotation be no longer visible in the viewer application 's user interface <END>
<BEG> this will get a javascript action to be perform before close a document <END>
<BEG> get the operation to perform on the file <END>
<BEG> this will set the rollover appearance when there be rollover appearance to be show <END>
<BEG> a build data dictionary for the view application software module that be use to create the parent signature <END>
<BEG> optional an array of text string that specify possible reason for sign a document <END>
<BEG> set a subfilter that specify the signature that should be use <END>
<BEG> adds the give node to the bottom of the child list <END>
<BEG> get the number of open node or a negative number if this node be close <END>
<BEG> this will return the value for the manner to display a fractional value <END>
<BEG> this will return the precision or denominator of a fractional amount <END>
<BEG> get the toolbar preference <END>
<BEG> fast variant to format a float point value to a ascii-string <END>
<BEG> adapt this quad to a triple <END>
<BEG>  < p > { link w3crdfsyntax } always defines medium type in low case <SEG> so { link string # tolowercase locale } need not be call <END>
<BEG> display format <END>
<BEG> append the fraction time part of a date time vector to a string buffer <END>
<BEG> return the time component of the duration - i e <END>
<BEG> return the list of error argument return error argument <END>
<BEG> get a built-in simple type of the give name revisit : it still not decide within the schema wg how to define the ur-types and if all simple type should be derive from a complex type <SEG> so a of now we ignore the fact that anysimpletype be derive from anytype <SEG> and pass 'null ' a the base of anysimpletype <END>
<BEG> print out the version information <END>
<BEG> computes a new duration whose value be < code > factor < code > times longer than the value of this duration <END>
<BEG> pops a value off of the stack <END>
<BEG> adds the key value mapping to the key table <END>
<BEG> add all value to the give array <END>
<BEG> increases the capacity of and internally reorganize this symboltable <SEG> in order to accommodate and access it entry more efficiently <END>
<BEG> returns true if the specified character be valid and permit outside of a character reference <END>
<BEG> returns true if the specified character be a valid name start character a define by production [ 4 ] in the xml 1 1 specification <END>
<BEG> returns true if the specified character be a valid ncname character a define by production [ 5 ] in namespaces in xml recommendation <END>
<BEG> add a triple to the difference : add it to the left operand <SEG> and remove it from the right operand <END>
<BEG> < p > add the give graph to this union <END>
<BEG> a fluid triple relevant to the event <SEG> or null if not applicable <END>
<BEG> answer a new graph which be the reachable subgraph from < code > node < code > in < code > graph < code > with the terminate condition give by the tripleboundary pass to the constructor <END>
<BEG> answer a human-consumable representation of < code > that < code > <END>
<BEG> return true iff we have a graph with the give name <END>
<BEG> make a blank node with the specify label deprecate use { link # createblanknode blanknodeid } <END>
<BEG> make a literal node with the specify literal value <END>
<BEG> answer the transformed hash code <SEG> intend to be an improvement on the object own hashcode <END>
<BEG> remove the object < code > key < code > from this hash 's key if it be present if it 's absent <SEG> do nothing <END>
<BEG> answer the low common ancestor of two class <SEG> assume that the give class be the root concept to start search from <END>
<BEG> < p > answer the singleton instance < p > return the singleton registry <END>
<BEG> return true iff there 's { literal > } 0 mapping to this triple <END>
<BEG> answer a string xsd : string literal <END>
<BEG> answer the supplied-to-constructor tripleboundary <END>
<BEG> answer a model of the [ remain ] statements of this iterator <SEG> consume this iterator <END>
<BEG> non-javadoc see org xml sax ext lexicalhandler # endcdata <END>
<BEG> a convenience version of getglobalproperty which can only return a boolean result <END>
<BEG> checks whether the graph be prepared and call { link # prepare } if it be not <END>
<BEG> instantiate the forward rule engine to use <END>
<BEG> return the jena graph capabilities that the inference graph generate by this reasoner be expect to conform to <END>
<BEG> return the expected number of argument for this functor or 0 if the number be flexible <END>
<BEG> returns false if this builtin be non-monotonic <END>
<BEG> return the n'th argument node after dereferencing by what ever type of rule engine binding environment be appropriate <END>
<BEG> answer the list of rule load from the give filename <END>
<BEG> constructor method that build an instance of the associated reasoner param configuration a set of arbitrary configuration information to be pass the reasoner encode within an rdf graph <END>
<BEG> full dump for debug <END>
<BEG> clear the option cache of the closure triple <END>
<BEG> propagate the result of create a new scc with this node a lead <END>
<BEG> given a set of scc node make this the lead member of the scc and reroute all incoming and outgo link accordingly <END>
<BEG> set the node serializer replacement function <END>
<BEG> return the current node serializer replacement function <END>
<BEG> gives the canonical name for this charset <END>
<BEG> answer a new map which use hash for lookup and have initial size < code > size < code > <END>
<BEG> answer a list of the element in order <SEG> consume this iterator <END>
<BEG> load build in prefix <END>
<BEG> remove a registered prefix from the table of know short form <END>
<BEG> return the wrapped propertypathexpression if it be a propertypathexpression <SEG> null otherwise <END>
<BEG> calls { link valuefactory # createliteral string <SEG> iri } with the string-value of the supplied number and the supplied datatype a parameter <END>
<BEG> this command be very similar to del : it remove the specified key <END>
<BEG> expireat work exactly like { link # expire byte [ ] <SEG> int expire } but instead to get the number of second represent the time to live of the key a a second argument that be a relative way of specify the ttl <SEG> it take an absolute one in the form of a unix timestamp number of second elapse since 1 gen 1970 <END>
<BEG> select the db with have the specify zero-based numeric index <END>
<BEG> return the specified element of the list store at the specified key <END>
<BEG> if member already exist in the sorted set add the increment to it score and update the position of the element in the sorted set accordingly <END>
<BEG> create a crc16 checksum from the byte <END>
<BEG> returns a new { link clientoptions builder } to construct { link clientoptions } <END>
<BEG> retrieve a { link redisclusternode } by it hostname port consider node alias <END>
<BEG> aggregate sum result of the { link redisfuture } s param execution mapping of a key to the future return future produce an aggregation result <END>
<BEG> create a new client that connect to the supply uri with share { link clientresources } you need to shut down the { link clientresources } upon shut down your application <END>
<BEG> return a set of { link redisuri } for which { link connections } have a connection <END>
<BEG> create a { link rediscommandexecutionexception } with a detail message and optionally a { link throwable cause } <END>
<BEG> assert that an object be not { code null } <END>
<BEG> return list of monitored master name <END>
<BEG> create a bytebuffer from a string use ascii encode <END>
<BEG> replaces exist key if the target key already exist <END>
<BEG> sequentially iterate over scored value in a sorted set identify by { code key } <END>
<BEG> return the default { link channel } for socket network tcp transport <END>
<BEG> return the failed command <END>
<BEG> increase this parameter 's nesting level <END>
<BEG> set a contain class to resolve the parameter type against <END>
<BEG> return a { link resolvabletype } array represent the direct interface implement by this type <END>
<BEG> return a { link resolvabletype } for the specify { link class } <SEG> use the full generic type information for assignability check <END>
<BEG> return a { link resolvabletype } for the specify { link class } <SEG> do assignability check against the raw class only analogous to { link class # isassignablefrom } <SEG> which this serve a a wrapper for <END>
<BEG> retrieve a value produce by a { link supplier } guard by an exclusive lock <END>
<BEG> returns the cap on the number of idle instance in the pool <END>
<BEG> defines ack timeout param acktimeout - timeout param timeunit - timeout unit return remoteinvocationoptions object <END>
<BEG> this method return the root element and mainly be for sub map to override <END>
<BEG> throws the give throwable even if it be a checked exception <END>
<BEG> gets the cause which be one of the give expected cause <END>
<BEG> returns the field object find for the give field name in the give class <END>
<BEG> returns the method object for method which be annotate with the give annotation of the give class <END>
<BEG> accessor for get subset of type hierarchy which only contain main type and possible override mix-ins it have <SEG> but not supertypes or their override <END>
<BEG> to avoid infinite loop <SEG> will return null ; <END>
<BEG> indicate whether the decorate { link dynabean } have any property <END>
<BEG> remove any exist value for the specified key on the specify map property <END>
<BEG> two < code > beancomparator < code > 's be equal if and only if the wrapped comparators and the property name to be compare be equal <END>
<BEG> unsets the value associate with the give classloader param classloader the classloader to < i > unset < i > for <END>
<BEG> indicate whether the expression be for an indexed property or not <END>
<BEG> indicates if there be a property with the specify name <END>
<BEG> < p > return a property descriptor for the specified property < p > < p > if the property be not find and the < code > returnnull < code > indicator be < code > true < code > <SEG> this method always return < code > null < code > < p > < p > if the property be not find and the < code > returnnull < code > indicator be < code > false < code > a new property descriptor be create and return although it not actually add to the dynaclass 's property <END>
<BEG> < p > copy the column value for each row in the specified < code > resultset < code > into a newly create { link dynabean } <SEG> and add this bean to the list of { link dynabean } s that will later by return by a call to < code > getrows < code > < p > param resultset the < code > resultset < code > whose data be to be copy throws sqlexception if an error be encounter copy the data <END>
<BEG> returns a unmodifiable set with the name of the property which be suppress by this { code beanintrospector } <END>
<BEG>  this implementation remove all property from the give context it be configure for <END>
<BEG> return the value to which this map map the specified key <END>
<BEG> return < code > true < code > if this map contain no mapping <END>
<BEG> sets the < code > accessible < code > flag of the give < code > { link accessibleobject } < code > to < code > true < code > <END>
<BEG> returns the exact type of the give field in the give type <END>
<BEG> returns the supplied argument that be not within the bound <END>
<BEG> get an attachment from the type param name the name return the attachment <END>
<BEG> returns the first non-serializable superclass of a give class <END>
<BEG> for op_repeat_inc <SEG> op_repeat_inc_ng <END>
<BEG> supplies a text to search in match with through a stream <END>
<BEG> replaces all occurences of a matcher 's pattern in a matcher 's target by a give substitution append the result to a buffer < br > the substitution start from current matcher 's position <SEG> current match not include <END>
<BEG> < p > configures the client to disable chunked encode for all request < p > < p > the default behavior be to enable chunked encode automatically for putobjectrequest and uploadpartrequest <END>
<BEG> return the s3 uri be parse <END>
<BEG> convience method that allow the dns rule to be alter for different sdks <END>
<BEG> returns true if the specify key wrap algorithm be { value # key_protection_mechanism } ; false otherwise <END>
<BEG> gets the name of the exist bucket where this request will upload a new object to <END>
<BEG> revokes the permission of a grantee by remove the grantee from the access control list acl <END>
<BEG> sets the override value for the owner of the replica object <END>
<BEG> sets the file format use when export data to amazon s3 <END>
<BEG> < p > gets the first { link tagset } object contain in this object <END>
<BEG> sets the status of multi-factor authentication mfa delete for a bucket <END>
<BEG> returns the entity tag identify the new object <END>
<BEG> sets the expiration time for the object <END>
<BEG> sets the { link bucketlifecycleconfiguration } rule id for this object 's expiration param expirationtimeruleid the rule id for this object 's expiration <END>
<BEG> convenience array style method for { link # setallowedmethods list } <END>
<BEG> sets the max age in second of the rule <END>
<BEG> sets the max age in second of this rule and return a reference to this object for method chaining <END>
<BEG> sets the name of the bucket from which an analytics configuration be delete and return this object for method chaining <END>
<BEG> sets the key of the version to delete returns this { link deleteversionrequest } <SEG> enable additional method call to be chain together <END>
<BEG> set the e-mail address a the grantee 's id <END>
<BEG> sets the name for this { link filterrule } and return this object for method chaining <END>
<BEG> the s3 bucket <END>
<BEG> sets the optional maximum number of uploads to return <END>
<BEG> returns the optional key marker indicate where in the result to begin list <END>
<BEG> gets the list of object summary describe the object store in the s3 bucket <END>
<BEG> return a container specify the time threshold for emit the < code > s3 : replication : operationmissedthreshold < code > event <END>
<BEG> gets the < code > maxkeys < code > parameter originally use to request this object listing <SEG> or the default < code > maxkeys < code > value provide by amazon s3 if the requester do n't specify a value <END>
<BEG> sets the part number of the associated part <END>
<BEG> sets the base64-encoded md5 hash of the object content that be calculate on the client-side <END>
<BEG> current number of object byte scan <END>
<BEG> returns a { link replicationfilter } that be use to identify object that a crr rule applies to <END>
<BEG> specifies whether periodic { link selectobjectcontentevent progressevent } s should be send <END>
<BEG> sets the content language response header override see responseheaderoverrides # response_header_content_language <END>
<BEG> sets the expires response header override <END>
<BEG> set the object key name prefix when the redirect be apply and return a reference to this object routingrulecondition for method chaining <END>
<BEG> sets the server-side encryption param encryption the new encryption value <END>
<BEG> returns whether or not this version be the late version for the associated object <END>
<BEG> invoked when a { link recordsevent } be encountered <END>
<BEG> sets the name of the bucket whose cross origin configuration be be set <SEG> and return this object so that additional method call may be chain together <END>
<BEG> < lifecycleconfiguration > < rule > < id > logs-rule < id > < status > enabled < status > < transition > < days > 30 < days > < storageclass > glacier < storageclass > < transition > < expiration > < days > 365 < days > < expiration > < noncurrentversiontransition > < noncurrentdays > 7 < noncurrentdays > < storageclass > glacier < storageclass > < noncurrentversiontransition > < noncurrentversionexpiration > < noncurrentdays > 14 < noncurrentdays > < noncurrentversionexpiration > < filter > < ! -- a filter can have only one of prefix <SEG> tag or and <END>
<BEG> sets the name of the bucket contain the exist <SEG> initiated multipart upload <SEG> with which this new part will be associate <SEG> and return this updated object so that additional method call can be chain together <END>
<BEG> < p > returns whether the client be configure to use dualstack mode for access s3 <END>
<BEG> < p > returns whether the client have enable resolve us-east-1 to a regional endpoint <END>
<BEG> return the number of byte that be remain to be transfer <END>
<BEG> return the first of multiple possible origin retain for compatibility with application write before 2012-05-05 api update deprecate a of 2012-05-05 api update <END>
<BEG> return the requester pays status of this bucket <SEG> if it be know <END>
<BEG> return an estimate of the how many < b > second < b > until the data transfer complete <SEG> base on the overall byte rate of the transmission <END>
<BEG> return the s3versions that be not delete before the operation be cancel <END>
<BEG> gets the facebook api error code <END>
<BEG> return the facebook graph api video endpoint url return the facebook graph api video endpoint url <END>
<BEG> return the id of a facebook event <END>
<BEG> return description of the link show in the attachment <END>
<BEG> return if there be recommendation for this campaign <SEG> this field include them <END>
<BEG> return id of the pixel which be collect event for this website custom audience <END>
<BEG> return an iso 3166-1 alpha 2 country code <END>
<BEG> the url of this app 's icon <END>
<BEG> whether to support the ios integrate login dialog <END>
<BEG> main contact email for this app where people can receive support <END>
<BEG> url show in the canvas footer that people can visit to get support for the app <END>
<BEG> app associate with the request <END>
<BEG> specifies whether you can reply to this comment return can_comment since 1 6 13 <END>
<BEG> whether the viewer can like this comment return can_like <END>
<BEG> the reply to this comment return reply <END>
<BEG> the title of a message in the conversation return the title of a message in the conversation <END>
<BEG> whether the page can reply to the conversation return whether the page can reply to the conversation <END>
<BEG> can guest invite friend <END>
<BEG> can see guest list <END>
<BEG> whether the event be create by page or not <END>
<BEG> return the complete overview <SEG> with the day a key and a map a value return the complete overview <END>
<BEG> data for this insight a a list of < tt > { link jsonobject } < tt > because it structure can vary depend on which type of insight you 're look at <END>
<BEG> recommendation field for change on august 17 <SEG> 2018 for more information check here : http : www facebook com business recommendation return the recommendation type <END>
<BEG> the award information of the film <END>
<BEG> features of the vehicle <END>
<BEG> have whatsapp number return have whatsapp number <END>
<BEG> indicates whether whatsapp number connect to this page be a whatsapp business number return whatsapp business number <END>
<BEG> for place <SEG> the category of the place <END>
<BEG> record label of the band <END>
<BEG> the number of people who have like the page <SEG> since the last login <END>
<BEG> members of this org <END>
<BEG> the writer of the tv show <END>
<BEG> the company mission <END>
<BEG> indicates whether the current session user can post on this page <END>
<BEG> indicates whether the page be publish and visible to non-admins <END>
<BEG> the user that this note be attach to <END>
<BEG> destination deeplink for the call-to-action on iphone <END>
<BEG> whether the post be currently popular <END>
<BEG> the number of checkins at this place <END>
<BEG> return if the page be like or a post <END>
<BEG> finds method on the give { code type } and all of it superclass annotate with annotation of type { code annotationtype } <END>
<BEG> is { code string } blank null or only whitespace ? <END>
<BEG> converts { code string } to a byte array <END>
<BEG> converts { code data } to a string in { link # encoding_charset } format <END>
<BEG> returns the response stream < br > this method can not be call after call asstring or asdcoument < br > it be suggest to call disconnect after consume the stream <END>
<BEG> returns the value map by { code name } if it exist and be a boolean or can be coerce to a boolean <SEG> or throw otherwise <END>
<BEG> param file medium file return this instance since twitter4j 2 2 5 <END>
<BEG> param attachmenturl attachment url since twitter4j 4 0 7 <END>
<BEG> returns int value of retry-after response header search api or seconds_until_reset rest api <END>
<BEG> initialise a blowfish cipher <END>
<BEG> convert a ssh2 key-blob into a human readable hex fingerprint <END>
<BEG> get the description of the error code a give in the sftp spec <END>
<BEG> have the server canonicalize any give path name to an absolute path <END>
<BEG> deprecate this method should not be invoke <END>
<BEG> instantiates the < code > session < code > object with give < code > username < code > <SEG> < code > host < code > and < code > port < code > <END>
<BEG> sets the instance of < code > knownhosts < code > generate with < code > stream < code > <END>
<BEG> it seem jce include in oracle 's java7u6 and later have suddenly change it behavior <END>
<BEG> return the language code for the prompt - may be { code null } empty <END>
<BEG> get the hexadecimal representation of a byte array start at < code > offset < code > index for < code > len < code > byte <END>
<BEG> writes a byte indicate the ssh message identifier param msg the identifier a a { link message } type return this <END>
<BEG> this method can be use to perform end-to-end session i e <SEG> ssh channel test <END>
<BEG> encode a give string <END>
<BEG> adds the { link stringlookupfactory default lookup } <END>
<BEG> returns the base64decoderstringlookup singleton instance to decode base64 string <END>
<BEG> returns the base64encoderstringlookup singleton instance to encode string to base64 <END>
<BEG> returns a new interpolatorstringlookup use the { link stringlookupfactory default lookup } <END>
<BEG> matches the same character a stringtokenizer <SEG> namely space <SEG> tab <SEG> newline and form feed <END>
<BEG> computes the jaro winkler similarity between two character sequence <END>
<BEG> computes the long common subsequence between the two < code > charsequence < code > 's pass a input <END>
<BEG> appends a separator if the builder be currently non-empty <END>
<BEG> append one of both separator to the builder if the builder be currently empty it will append the defaultifempty-separator otherwise it will append the standard-separator the separator be append use { link # append char } <END>
<BEG> appends a separator to the builder if the loop index be great than zero <END>
<BEG> inserts the string into this builder <END>
<BEG> deletes all part of the builder that the matcher match <END>
<BEG> replaces the first instance of the search character with the replace character in the builder <END>
<BEG> extracts a portion of this string builder a a string <END>
<BEG> gets a suitable hash code for this builder <END>
<BEG> implement the { link builder } interface <END>
<BEG> gets a new tokenizer instance which parse comma separated value string initialize it with the give input <END>
<BEG> gets a new tokenizer instance which parse tab separated value string <END>
<BEG> gets the index of the next token to return <END>
<BEG> checks whether there be any previous token that can be iterate to <END>
<BEG> gets the ignored character matcher <END>
<BEG> gets the string content that the tokenizer be parse <END>
<BEG> used to invert an escape map into an unescape map <END>
<BEG> implementation of translate that throw out unpaired surrogate <END>
<BEG> gets the map of rename type <END>
<BEG> lookup a type from a name <SEG> handle renames <END>
<BEG> register the fact that an enum constant be rename <END>
<BEG> registers a converter for a specific type <END>
<BEG> updates locale-dependent state <END>
<BEG> callback method from listen to searchfield <END>
<BEG> configure and bind component to from patternmodel <END>
<BEG> creates a button base on the attribute of the action <END>
<BEG> retrieves the action correspond to an action id <END>
<BEG> convenience method to register a callback method on a < code > boundaction < code > see boundaction # registercallback param id value of the action id - which be the value of the action_command_key param handler the object which will be perform the action param method the name of the method on the handler which will be call <END>
<BEG> adds a name value pair which represent a url parameter in an http post request <END>
<BEG> executes the command on the current targetable component <END>
<BEG> returns the < code > subject < code > represent the authenticated individual <SEG> or < code > null < code > if the user have not yet be successfully authenticate <END>
<BEG> enables automatic completion for the give jtextcomponent base on the item contain in the give < tt > list < tt > <END>
<BEG> returns if only item from the adaptor 's list should be allow to be enter <END>
<BEG> only call by paintborder <END>
<BEG> returns whether or not this < code > datespan < code > contain the specified date span <END>
<BEG> returns the last millisecond of the specified date <END>
<BEG> returns the previous month <END>
<BEG> returns the alignment which be apply <END>
<BEG> returns the filtered value of the cell identify by the row in view coordinate and the column in model coordinate <END>
<BEG> creates and return a highlighter which highlight every second row background with the give color <END>
<BEG>  < p > overridden to set reset the flag indicate whether or not painter 's property change should be pass on to the highlighter 's listener <END>
<BEG>  < p > overridden to return false if the painter be null or the component be not of type painteraware <END>
<BEG> returns a boolean indicating whether the event source be in adjust state <END>
<BEG> return a list of all the listener of the give type <END>
<BEG> sets the clip on a graphic object by merge a supply clip with the exist one <END>
<BEG> < p > gets the opacity use by the factory to generate reflection < p > < p > the opacity be comprise between 0 0f and 1 0f ; 0 0f be fully transparent and 1 0f fully opaque < p > return this factory 's shadow opacity see # getopacity see # createreflection java awt image bufferedimage see # appendreflection java awt image bufferedimage <END>
<BEG> hook for subclass to update internal state after a new target have be set <END>
<BEG> this action delegate to the visitingdelegate if both delegate and target be ! = null <SEG> do nothing otherwise <END>
<BEG> replaces the currently instal formatter and factory use by the editor <END>
<BEG> returns the formatted text field use to edit the date selection <END>
<BEG> note : this be call from super 's constructor a one of the first method prior to set the rootpane ! <END>
<BEG> report that suitable match be find <END>
<BEG> < p > gets the major grid line color of this component < p > return this component 's major grid line color see # setmajorgridcolor color see # setgridpainted boolean <END>
<BEG> < p > this method be call by the component prior to any draw operation to configure the drawing surface <END>
<BEG> gets title font <END>
<BEG> convenience method to create and install a hyperlinkaction for the give uri <END>
<BEG> get an action which will rotate the currently select image clockwise <END>
<BEG> creates and return the rolloverproducer to use with this tree <END>
<BEG> returns { code true } if whenever the model change <SEG> a new { code rowsorter } should be create and instal a the table 's sorter ; otherwise <SEG> return { code false } <END>
<BEG> specifies whether a { code rowsorter } should be create for the list whenever it model change <END>
<BEG> if true <SEG> specifies that a sort should happen when the underlying model be update < code > rowsupdated < code > be invoke <END>
<BEG> returns true if a sort should happen when the underlying model be update ; otherwise <SEG> return false <END>
<BEG> sets the sortorder cycle use when toggle sorting this table 's column <END>
<BEG> updates the sortcontroller 's comparator <SEG> if available <END>
<BEG> return the underlying model <SEG> same a getmodel <END>
<BEG>  < p > overridden to return the delegating renderer which be wrap around the original to support highlight <END>
<BEG> sets the look and feel l & f object that render this component <END>
<BEG> gets the < strong > loginservice < strong > for this panel <END>
<BEG> sets the < strong > user name < strong > for this panel <END>
<BEG> puts the password into the password store <END>
<BEG> set the first displayed date <END>
<BEG> set whether or not this < code > jxmonthview < code > will display week number or not <END>
<BEG> returns the padding use between day in the calendar <END>
<BEG> returns a copy of the inset use to paint the month string background <END>
<BEG> sets the preferred number of column of calendar <END>
<BEG> sets the component input map enablement property < p > if enable <SEG> the keybinding for when_in_focused_window be instal <SEG> otherwise not <END>
<BEG> creates and fire an actionevent with the give action command to all listener <END>
<BEG> unlike other property <SEG> alpha can be set on a component <SEG> or on one of it parent <END>
<BEG> retrieve the child button by index <END>
<BEG> gets the currently instal status bar <END>
<BEG> returns the cancel button <END>
<BEG> resizes the lead column to fit it content <END>
<BEG> initialize the width related property of all contain tablecolumns <SEG> both visible and hidden <END>
<BEG>  < p > overridden to prevent spurious focus loss to outside of table while remove the editor <END>
<BEG> returns the tablecellrenderer to use for the column with the give index <END>
<BEG> gets the ui object which implement the l & f for this component <END>
<BEG> set the painter to use for paint the title section of the jxtitledpanel <END>
<BEG> < p > sets the alignment of the title along the x axis <END>
<BEG> sets the icon to use for the handle of a collapsed node <END>
<BEG> get the component associate with a multisplitlayout node param n the layout node return the component handle by the layout or null if not find <END>
<BEG> indicates if the paint will be snap <END>
<BEG> indicates if the painter content be stretch horizontally return the current horizontalalignment stretch value <END>
<BEG> < p > called to allow < code > painter < code > subclasses a chance to see if any state in the give object have change from the last paint operation <END>
<BEG> < p > returns true if the painter should use cache <END>
<BEG> initializes painter to provide shape and default color <END>
<BEG> sets length of the trail in point <END>
<BEG> < p > clears the cache of this < code > painter < code > <SEG> and all child < code > painters < code > <END>
<BEG> creates <SEG> configures <SEG> add contain component <END>
<BEG> uninstalls component default <END>
<BEG> c & p'ed from basicgraphicsutils getpreferredbuttonsize <END>
<BEG> installs the component a appropriate for the current lf <END>
<BEG> returns the < code > calendarrenderinghandler < code > to use <END>
<BEG> returns the date represent the start of the month which contain the give location < p > mapping pixel to calendar day <END>
<BEG> returns the date represent the start of the month at the give logical position in the grid of month <END>
<BEG> returns the size of a day include the padding <END>
<BEG> paints a day which be of the current month with the give state < p > pending jw : mis-nomer - this be in fact call for render any day-related state include weekofyear <SEG> dayofweek header and for render the month header as well <SEG> that be from everywhere <END>
<BEG> creates and return a calendar header handler which provide and configure a component for use in a zoomable monthview <END>
<BEG> installs the default color <SEG> border <SEG> and painter of the task pane container <END>
<BEG> gets current title height <END>
<BEG> fetch the data in a text html format <END>
<BEG> return the jlist relative y coordinate of the origin of the specified row or -1 if row be n't valid <END>
<BEG> param crosscolor the color to paint the cross with <END>
<BEG> reinitializes the inset parameter with this border 's current insets <END>
<BEG>  < p > returns a context for the component 's current state <END>
<BEG> sets the horizontal alignment property to configure the component with <END>
<BEG>  < p > this implementation delegate to the contain iconvalue if available or return null <SEG> if not <END>
<BEG> returns a boolean indicating whether this provider try to unwrap a userobject from a tree table node type value before delegate the context <END>
<BEG> returns a boolean indicating whether the hint can be use in horizontal orientation <END>
<BEG> returns a boolean indicating if it can be trivially decide to not match <END>
<BEG> factory method to create a searchresult from the give parameter <END>
<BEG> checks if index be in range : 0 < = index < getsize <END>
<BEG> set the strategy to use for compile a pattern from rawtext <END>
<BEG> returns all recent search in this list <END>
<BEG> shows an appropriate find widget target at the searchable <END>
<BEG> convenience method to remove a component from it parent and revalidate the parent <END>
<BEG> configures the share findbar <END>
<BEG>  < p > implemented to search for an extension in the cell give by row and foundcolumn <END>
<BEG>  < p > overridden to loop through all column in a row <END>
<BEG>  < p > overridden to return the model row count if no filter instal <SEG> otherwise return super <END>
<BEG> creates and return a list of additional actions to add to the popup <END>
<BEG> implement uidependent <END>
<BEG> notifies register treemodellisteners that the child have be remove from the node identify by the give parent path from the give position <END>
<BEG> returns this node 's user object <END>
<BEG> gets the path from the root to the specify node <END>
<BEG> tests the input parameter against null <END>
<BEG> < p > returns the < code > point < code > at which a window should be place to center that window on the screen <END>
<BEG> inherit < p > implemented to lookup the value 's localized string representation <SEG> if contain in the lookup map <END>
<BEG> installs this controller on the give table <END>
<BEG> removes the template with the specify name if it be add earlier <END>
<BEG> returns the base directory in which the template be search <END>
<BEG> gets the delay in millisecond between check for new version of a template source <END>
<BEG> sets the locale use for number and date formatting among others <SEG> also the locale use for search localized template variation when no locale be explicitly request <END>
<BEG> sets the format use to convert { link java util date } -s that be time no date part value to string-s <SEG> also the format that { code somestring ? time } will use to parse string <END>
<BEG> specifies how exception handle and hence suppress by an { code # attempt } block will be log or otherwise report <END>
<BEG> removes all auto-imports <SEG> then call { link # addautoimport string <SEG> string } for each { link map } -entry the entry key be the { code namespacevarname } <END>
<BEG> gets the value of a { link template } -scope attribute from the give { link template } <END>
<BEG> same a { link # set object <SEG> template } <SEG> but applicable to a { link templateconfiguration } <END>
<BEG> call the function define by the lambda expression ; overload specialize for 1 argument <SEG> the most common case <END>
<BEG> set all setting in this { link templateconfiguration } that be set in the parameter { link templateconfiguration } <SEG> possibly overwrite the early value in this object <END>
<BEG> tells if the element should show up in error stack trace <END>
<BEG> controls whether java 8 default method that be n't override in a class will be recognize a bean property accessors and or bean action <SEG> and thus will be visible from template <END>
<BEG> attempts to unwrap a model into an object of the desired class <END>
<BEG> param array must be an array of either a reference or primitive type <END>
<BEG> returns a hash model that represent the so-called class static model <END>
<BEG> returns the { link memberaccesspolicy } to actually use <SEG> which be not just { link beanswrapper # getmemberaccesspolicy } if { link beanswrapper # getexposurelevel } be more allow than { link beanswrapper # expose_safe } <END>
<BEG> calls underlie { link enumeration # nextelement } <END>
<BEG> implementation of experimental interface ; do n't use it <SEG> no backward compatibility guarantee ! <END>
<BEG> return whether the qname match the combination of nodename <SEG> nsuri <SEG> and environment prefix setting <END>
<BEG> called for an object that be n't consider to be of a basic java type <SEG> like for an application specific type <SEG> or for a w3c dom node <END>
<BEG> retrieves a template model iterator that be use to iterate over the element in this collection <END>
<BEG> builds a deep-copy of the underlying list <SEG> unwrap any value that be already convert to { link templatemodel } -s when call for the second time or later <SEG> it just reuse the first result <SEG> unless the sequence be modify since then <END>
<BEG> returns the { link parserconfiguration } that be use for parse this template <END>
<BEG> returns the output format see { link configuration # setoutputformat outputformat } use for this template <END>
<BEG> return an array of the { link templateelement } s contain the give column and line number <END>
<BEG> same a { link # unwrap templatemodel } <SEG> but it do n't throw exception if it do n't know how to unwrap the model <SEG> but rather return it as-is <END>
<BEG> deprecate the name of this method be mistyped <END>
<BEG> read the attribute from the data storage <END>
<BEG> return true <SEG> if this context be a block param context <END>
<BEG> the template 's body <END>
<BEG> resolve the uri to an absolute location <END>
<BEG> true for inline tag <END>
<BEG> eval locale from language string param language return new locale construct from the language <END>
<BEG> eval locale from language <SEG> region and variant param language param region param variant return the new locale construct <END>
<BEG> a hash table that map a key to a list of element not just a single <END>
<BEG> < p > removes from the map all the context variable currently set <END>
<BEG> < p > returns the template name <END>
<BEG> < p > returns whether this element have any attribute or not <END>
<BEG> < p > returns the original name of an attribute from it normalize name <END>
<BEG> < p > adds a new child to the node <SEG> position just before another child node that be also specify <END>
<BEG> < p > returns the reference checker implementation of { link org thymeleaf dom domselector inodereferencechecker } be use for execute the contain dom selector <END>
<BEG> token char : a-za-z0-9 [ ] _ and '- ' in some context additionally <SEG> also <SEG> a series of internationalized character : accent <SEG> other alphabet <SEG> etc <END>
<BEG> < p > this method will never be call <SEG> because template use this validity implementation be always consider to be non-cacheable <END>
<BEG> < p > returns the ttl in millisecond to be apply to template validity <END>
<BEG> < p > returns whether the template resolution can still be consider valid <END>
<BEG> when override this method <SEG> always call < code > super init config < code > <END>
<BEG> returns a decorator converter builder with the specified predicate use to test a context object <END>
<BEG> useful to extract start and end delimiters from set delimiters tag content <SEG> e g <END>
<BEG> param word return the uncapitalized input <END>
<BEG> returns a default value if the object pass be null <END>
<BEG> get all the key for the value in the context return object [ ] of key in the context <END>
<BEG> put method also store value in local scope param key name of item to set param value object to set to key return old store object <END>
<BEG> see org apache velocity context internalhousekeepingcontext # setmacrolibraries list <END>
<BEG> see extendedparseexception # getcolumnnumber since 1 5 <END>
<BEG> logs message and error <END>
<BEG> see org apache velocity runtime log log # trace java lang object <END>
<BEG> see stringresourcerepository # putstringresource java lang string <SEG> java lang string <END>
<BEG> creates a class map for specific class and register it in the cache <END>
<BEG> clones this context object <END>
<BEG> returns the nested exception or < code > null < code > if none <END>
<BEG> creates a matcher for { link java util collection } s that match when the < code > size < code > method return a value equal to the specify < code > size < code > <END>
<BEG> creates a matcher that wrap an exist matcher <SEG> but invert the logic by which it will match <END>
<BEG> creates a matcher that match only when the examine object be the same instance a the specified target object <END>
<BEG> original class this factory method come from <END>
<BEG> creates a matcher of { link comparable } object that match when the examine object be equal to the specify value <SEG> a report by the < code > compareto < code > method of the < b > examine < b > object <END>
<BEG> returns an < code > image < code > object that can then be paint on the screen <END>
<BEG> returns the current default for newly create web client <END>
<BEG> specifies whether the client should automatically follow page refresh request <END>
<BEG> returns the value of the cookie header to be send to the specify url <END>
<BEG> remove the attribute with the give name - by delegate to nodeutils param name - the name of the attribute to remove <END>
<BEG> get the message for the http exception return - the message of the exception <END>
<BEG> determines whether a normal post request will include the character set in the content-type header <END>
<BEG> return true if the first string contain the second <END>
<BEG> returns the value of the specified applet parameter <SEG> or null if not define <END>
<BEG> runs the bare test sequence <END>
<BEG> sets the load behaviour of the test runner <END>
<BEG> return a new request <SEG> which contain all of the same test <SEG> but in a new order <END>
<BEG> checks that the give value be not { code null } <SEG> use the give message a the exception message if an exception be throw <END>
<BEG>  < p > always return false <END>
<BEG> a base class for rules like temporaryfolder that set up an external resource before a test a file <SEG> socket <SEG> server <SEG> database connection <SEG> etc <END>
<BEG> create a new { code rulechain } <SEG> which enclose the give { link testrule } with the rule of the current { code rulechain } <END>
<BEG> invoked when a test method finish whether pass or fail <END>
<BEG> create a < code > description < code > of a single test name < code > name < code > in the class < code > clazz < code > <END>
<BEG> return the annotation of type annotationtype that be attach to this description node <SEG> or null if none exists <END>
<BEG> orders the description <END>
<BEG> adds to { code error } if the test class have more than one constructor <SEG> or if the constructor take parameter <END>
<BEG> returns the name that describe { code method } for { link description } s default implementation be the method 's name <END>
<BEG> returns a { link statement } that invoke { code method } on { code test } <END>
<BEG> returns the result of invoke this method on { code target } with parameter { code params } <END>
<BEG> returns true if this be a no-arg method that return a value assignable to { code type } deprecate this be use only by the theories runner <SEG> and do not use all the generic type info that it ought to <END>
<BEG> gets the time pass before the test be interrupt <END>
<BEG> returns rule instance in the order how they should be apply <SEG> i e <END>
<BEG> pratt 's parser <END>
<BEG> fuzzify the input value by decrease it by a few ulps <SEG> but never past min <END>
<BEG> invalidate the underling randomness <END>
<BEG> starting seed <SEG> read-only for test <END>
<BEG> returns < code > size < code > in human-readable unit gb <SEG> mb <SEG> kb or byte <END>
<BEG> < p > convenience method to perform an http get <END>
<BEG> constructor param c the cursor from which to get the data <END>
<BEG> non-android accessor that discard the most recent { code powermanager wakelock } s <END>
<BEG> returns the current jvm 's environment variable <END>
<BEG> return this iteration 's data value for the ongoing execution of the owning feature method <END>
<BEG> combines status1 and status2 by individually maximize action and scope <END>
<BEG> finds a public method with the give name declare in the give class interface or one of it super class interface <END>
<BEG> returns the number of whitespace character at the end of the give line <END>
<BEG> tells whether the java version be compatible with java 8 <END>
<BEG> invoked before an assert be run <END>
<BEG> invoked before the testng run start <END>
<BEG>  default value for successpercentage <END>
<BEG> clones the current < code > testngmethod < code > and it beforemethod and aftermethod method <END>
<BEG> set the xml version and encode for this document <END>
<BEG> add a required element to the current tag <END>
<BEG> add a cdata tag <END>
<BEG> subclasses may use this method to reduce the printed stack trace <END>
<BEG> create an itestngmethod for code { method } base on code { existingmethod } <SEG> which need to belong to the same class <END>
<BEG> return the parameter define in this test tag and the tag above it <END>
<BEG> returns the method selector <END>
<BEG> now that differences can be construct from prototype we need to be able to compare them to those in differenceconstants <END>
<BEG> return a basic representation of the object state and identity and if < code > nodedetail < code > instance be populate append their detail also <END>
<BEG> determine whether the text nod contain similar value param control param test return true if text node be similar <SEG> false otherwise <END>
<BEG> return the node pass to constructor <SEG> or null if no node be pass <END>
<BEG> represents the qualifiedname a { ns-uri } local-name <END>
<BEG> utility method to build a document use the control documentbuilder and the specify inputsource param fromsource return document representation of the string content throw saxexception throw ioexception <END>
<BEG> sets the xslt version to set on stylesheets use internally <END>
<BEG> whether unmatched control node should be compare to unmatched test node <END>
<BEG> compare two xids for equality <END>
<BEG> specify if the xa resource wrapper should enlist delist this resource automatically in global transaction <END>
<BEG> return the position at which this resource should stand during 2pc commit <END>
<BEG> increment a transient counter <END>
<BEG> a log sink that do n't actually do anything <END>
<BEG> gets the character use for thousand separator <END>
<BEG> sets the character use for decimal sign <END>
<BEG> clears out the digit <END>
<BEG> sets whether or not the key be a resource <END>
<BEG> checks for a valid credit card number <END>
<BEG> recursively remove comment <SEG> and replace with a single space <END>
<BEG> if the isbn be format with space or dash separator it format be validate <END>
<BEG> check if the value be great than or equal to a minimum <END>
<BEG> calculates the < i > weight < i > value of a character in the code at a specified position <END>
<BEG> convert a character at a specified position to an integer value <END>
<BEG> validate the code return either the valid code or < code > null < code > if invalid <END>
<BEG> return a singleton instance of the iban validator use the default format return a singleton instance of the isbn validator <END>
<BEG> validate scheme <END>
<BEG> indicate whether a specified validation pass <END>
<BEG> returns a list of constraint validator descriptor for the constraint type of this instance <END>
<BEG> assert that this parameter be mark a valid by the condition pass a parameter <END>
<BEG> if the value be generate annotated with generatedvalue it be allow to be null before the entity have be persist <SEG> same be true in case of optimistic locking when a field be annotate with version <END>
<BEG> return the fully qualified class name of the corresponding check <END>
<BEG> registers constraint check for the give method 's return value throw illegalargumentexception if < code > getter == null < code > or < code > check == null < code > or check be empty throw invalidconfigurationexception if method do not declare a return type void <SEG> or the declaring class be not guard <END>
<BEG> registers the give listener for all thrown constraintviolationexceptions on object of the give class param listener the listener to register param guardedclass guard class or interface return < code > true < code > if the listener be not yet register throw illegalargumentexception if < code > listener == null < code > or < code > guardedclass == null < code > <END>
<BEG> return < code > true < code > if the listener be register throw illegalargumentexception if < code > listener == null < code > <END>
<BEG> removes the give listener param guardedclass guard class or interface return < code > true < code > if the listener be register throw illegalargumentexception if < code > listener == null < code > or < code > guardedclass == null < code > <END>
<BEG> return the object that be be in probe mode <END>
<BEG> adds a message bundle return true if the bundle be register and false if it be already register <END>
<BEG> transposes a block matrix <END>
<BEG> decomposes the provided matrix and store the result in the same matrix <END>
<BEG> specialized version of applyq that allow the zero in an identity matrix to be take advantage of depend on if isidentity be true or not <END>
<BEG> returns l matrix from the decomposition < br > l l < sup > t < sup > =a return a low triangular matrix <END>
<BEG> diagonal element of the diagonal d matrix <END>
<BEG> sets the size of the matrix be decompose <SEG> declare new memory if need <SEG> and set all helper function to their initial value <END>
<BEG> rotator to remove the bulge <END>
<BEG> an upper hessenberg matrix from the decompostion <END>
<BEG> inner matrix that store the decomposition <END>
<BEG> this function perform sanity check on the input for decompose and set up the qr matrix <END>
<BEG> multiplied a transpose orthogonal matrix q by the specified rotator <END>
<BEG> this attempt to improve upon the solution generate by account for numerical imprecision <END>
<BEG> solves for x use the qr decomposition <END>
<BEG> < p > performs a matrix vector multiply < br > < br > c = a < sup > t < sup > b < br > where b be a column vector < br > or < br > c = a < sup > t < sup > b < sup > t < sup > < br > where b be a row vector <END>
<BEG> < p > performs the following operation : < br > < br > c = a b < sup > t < sup > < br > c < sub > ij < sub > = & sum ; < sub > k=1 : n < sub > { a < sub > ik < sub > b < sub > jk < sub > } < p > param a the left matrix in the multiplication operation <END>
<BEG> < p > returns a { link choleskydecomposition } that have be optimize for the specified matrix size <END>
<BEG> < p > returns a { link org ejml interface decomposition ludecomposition } that have be optimize for the specified matrix size <END>
<BEG> < p > performs the following operation : < br > < br > c = c + a < sup > t < sup > b < sup > t < sup > < br > c < sub > ij < sub > = c < sub > ij < sub > + & sum ; < sub > k=1 : n < sub > { a < sub > ki < sub > b < sub > jk < sub > } < p > param a the left matrix in the multiplication operation <END>
<BEG> < p > performs a matrix inversion operation that do not modify the original and store the result in another matrix <END>
<BEG> < p > creates a new rectangular matrix whose diagonal element be specify by diagel and all the other element be zero < br > < br > a < sub > ij < sub > = 0 if i & le ; j < br > a < sub > ij < sub > = diag [ i ] if i = j < br > < p > see # diag param numrows number of row in the matrix <END>
<BEG> < p > extracts the diagonal element 'src ' write it to the 'dst ' vector <END>
<BEG> < p > computes the sum of each row in the input matrix and return the result in a vector : < br > < br > b < sub > j < sub > = sum i=1 : n ; |a < sub > ji < sub > | < p > param input input matrix whose row be sum <END>
<BEG> performs a matrix inversion operation that take advantage of the special property of a covariance matrix <END>
<BEG> checks to see if every element in a be countable <END>
<BEG> < p > checks to see if each element in the matrix be within tolerance of each other : < p > < p > the two matrix be identical with in tolerance if : < br > |a < sub > ij < sub > - b < sub > ij < sub > | & le ; tol < p > < p > in addition if an element be nan or infinite in one matrix it must be the same in the other <END>
<BEG> < p > checks to see if each element in the upper or low triangular portion of the two matrix be within tolerance of each other : tol & ge ; |a < sub > ij < sub > - b < sub > ij < sub > | <END>
<BEG> checks to see if all the diagonal element in the matrix be positive <END>
<BEG> normalizes the matrix such that the frobenius norm be equal to one <END>
<BEG> creates a random matrix where all element be zero but diagonal element <END>
<BEG> creates a random symmetric matrix whose value be select from an uniform distribution from min to max <SEG> inclusive <END>
<BEG> < p > returns a reference to the matrix that it use internally <END>
<BEG> < p > returns the transpose of this matrix < br > a < sup > t < sup > < p > see org ejml ops commonops # transpose densematrix64f <SEG> densematrix64f return a matrix that be n by m <END>
<BEG> < p > creates a new matrix that be a combination of this matrix and matrix b <END>
<BEG> creates a new simplematrix with the specify densematrix64f use a it internal matrix <END>
<BEG> checks the row and column index <SEG> and return the linear data index <END>
<BEG> set this matrix equal to the give matrix <END>
<BEG> checks that a vector rank1 update be possible for the give vector <END>
<BEG> checks that a transposed rank2 update be leagal with the give argument <END>
<BEG> checks the index <END>
<BEG> applies the givens rotation to two element of a vector param x vector to apply to param i1 index of first element param i2 index of second element <END>
<BEG> reads a coordinate vector <END>
<BEG> prints all the comment <END>
<BEG> < code > max 1 <SEG> max m <SEG> n < code > provide a a convenience for 'leading dimension ' calculation <END>
<BEG> returns a synchronized vector which wrap the give vector <END>
<BEG> finds the number of repeated entry param num maximum index value param ind indices to check for repetition return array of length < code > num < code > with the number of repeated index of < code > ind < code > <END>
<BEG> sets the overrelaxation parameter param omegaf overrelaxation parameter for the forward sweep <END>
<BEG> sets name parameter <END>
<BEG> create the temporary file <END>
<BEG> returns the code source a an url <END>
<BEG> returns the decoded path <END>
<BEG> returns the uri without a password <END>
<BEG> returns the file that this be the content of <END>
<BEG> param newsize throw ioexception if the new size exceed the limit <END>
<BEG> encodes a set of reserved character in a stringbuilder <SEG> use the uri % nn encode <END>
<BEG> extract the query string from the uri <END>
<BEG> returns the os family that this family belong to <END>
<BEG> sets the jar suffixes param suffix the suffix throw illegalargumentexception for a null suffix <END>
<BEG> undeploy <END>
<BEG> parse the run mode param s the string to parse return the corresponding run mode or null if none can be match throws nullpointerexception if the string argument be null <END>
<BEG> compute the element reference to this template <END>
<BEG> param map the map to decode data into <END>
<BEG> returns an array where each element be a line from the argument <END>
<BEG> set the value type param valuetype <END>
<BEG> gets the type of the generic on the attribute 's value type only matter for list return the generictype <END>
<BEG> escapes every special character i could think of <SEG> to limit potential misuse of this pattern <END>
<BEG> setter for workflow property list param workflowproperties - the list of workflow property <END>
<BEG> indicates whether the component be detach from the view not in the view 's structure <SEG> but an external component <SEG> for example a dialog <END>
<BEG> convenience setter for set the href full url of the location object param href url for location option <END>
<BEG> indicates whether the name dialog have already be present to the user param dialogid the key identify the specific dialog return true if dialog have be display <SEG> false if not <END>
<BEG> gets the answer previously enter by the user when respond to this dialog < p > returns the key value of the option choose by the user <END>
<BEG> interpolates a message base on value contain in the data map <SEG> assume message be format use a $ { key } syntax <END>
<BEG> creates a ` redirect ` instance <END>
<BEG> this implementation return a file reference for the underlying class path resource <SEG> provide that it refer to a file in the file system <END>
<BEG> maps a filter to be execute before any matching route param filter the filter <END>
<BEG> sets default response transformer param transformer <END>
<BEG> maps an array of filter to be execute before any matching route param path the path param filter the filter <END>
<BEG> renders the object param object the object return the render model and view <END>
<BEG> replacement for { code class forname } that also return class instance for primitive e g <END>
<BEG> returns the max number of snapshot allow per flow execution by this repository <END>
<BEG> gets a reader to read character from the uploaded file <END>
<BEG> method responsible for use the information supply to the message object to find a message template <END>
<BEG> checks equality by ensure that the current instance and the 'other ' instance be instance of the same class though not necessarily simplemessage ! <END>
<BEG> returns true if the name have indexing or mapping component <SEG> otherwise false <END>
<BEG> stores a reference to the configuration and configure the default formatters <END>
<BEG> instantiates the numberformat base on the information provide through setter method <END>
<BEG> gets the index specify by the current node from the target array <END>
<BEG> fetches the expression of which this be an evaluation <END>
<BEG> combines a bunch of object into a single string <END>
<BEG> used by stripes to set the input locale <END>
<BEG> parse the input use a numberformatter <END>
<BEG> sets the action invocation the execution state <END>
<BEG> sets the container for this request return the container <END>
<BEG> if call first time it will create { link com opensymphony xwork2 textproviderfactory } <SEG> inject dependency if { link com opensymphony xwork2 inject container } be accesible into in <SEG> then will create new { link com opensymphony xwork2 textprovider } and store it in a field for future reference and at the return reference to that field return reference to field with textprovider <END>
<BEG> return the variable contain the matched value <END>
<BEG> given a node in the graph <SEG> return an immutable view of the edge leave that node a a set of endpoint <END>
<BEG> decide if the parameter should be remove from the parameter map base on < code > paramnames < code > and < code > paramvalues < code > <END>
<BEG> param bundle the resource bundle <END>
<BEG> this be a convenience method to load a resource a a stream <END>
<BEG> return returns wether the shortcircuit flag should be set on the validator <END>
<BEG> returns a short description of this throwable object <SEG> include the location <END>
<BEG> removes the specified servlet context attribute <END>
<BEG> removes all attribute from the request as well a clear entry in this map <END>
<BEG> returns the request attribute associate with the give key or < tt > null < tt > if it do n't exist <END>
<BEG> called before the background thread determine the result code from the actioninvocation <END>
<BEG> retrieves the action invocation <END>
<BEG> returns the upper case equivalent of the specify ascii character <END>
<BEG> resets the message buff to an uninitialized state <END>
<BEG> sets the message bytes to the specify subarray of byte <END>
<BEG> compares the message bytes to the specify string object <END>
<BEG> set the cookie 's secure mode <END>
<BEG> param assetpath default asset path return assetpath unchanged <END>
<BEG> the activation context for the < em > active page < em > <SEG> possibly empty but not null <END>
<BEG> sets http port param httpport <END>
<BEG> sets whether or not a new session be create before redirect from { code http } to { code http } < p > be very careful when setting this value to { code false } <END>
<BEG> checks if two scheme be compatible <END>
<BEG> enable disable the request logger <END>
<BEG> builds a filter that match when selection contain to a give value <END>
<BEG> create a matcher for a contain string param matcher string matcher return matcher object <END>
<BEG> create a matcher filtering by a string that end with the pattern param pattern pattern return matcher <END>
<BEG> retrieve the first generic type of the field type <END>
<BEG> returns the amount of time to wait between execution of this job may be { code null } <END>
<BEG> returns { code true } if an exception will be throw in the event of a failing response code <END>
<BEG> the content of a web window have be change <END>
<BEG> gets the class base on the key of the class <END>
<BEG> get the protocol path consider the capability provide which may define a new path via the property { link registrationrequest # path } param capability map of capability to consider return the protocol path define by the capability or the value of { link # getpath } <END>
<BEG> same problem mask apply here <SEG> as well a with findprefixbyuri <END>
<BEG> method to add a new prefix-to-uri mapping for the current scope <END>
<BEG> since the actual type have no effect a this iterator never return any value object <SEG> we can just cast away here : bit unclean <SEG> but safe <END>
<BEG> document me ! <END>
<BEG> adds the < code > elementhandler < code > to be call when the specify path be encounted <END>
<BEG> get the registered { link elementhandler } for the specified path <END>
<BEG> < p > this will set whether or not to use the xhtml standard : like html but pass an xml parser with real <SEG> close tag <END>
<BEG> sets the < code > xmlreader < code > use to parse sax event param reader be the < code > xmlreader < code > to parse sax event <END>
<BEG> validates the give < code > document < code > by write it to a validate sax parser <END>
<BEG> defines to write the result output to the specify { link java io outputstream } param outputstream outputstream to write to <END>
<BEG> defines to write the result output to the specify { link writer } <END>
<BEG> < p > parses the raw data of pi a a < code > map < code > <END>
<BEG> set whether the writer should print out the xml declaration { code < ? xml version= ' 1 0 ' ? > } <END>
<BEG> parses a subtree start from the element e and report sax2 event to the specify handler <END>
<BEG> returns a nice string representation for good debug experience <END>
<BEG> creates all the { link builtinleafinfoimpl } s a specify in the spec <END>
<BEG> returns a { code type } object represent the component type of this array <END>
<BEG> returns the { link type } object that represent { code clazz < t1 <SEG> t2 <SEG> t3 > } <END>
<BEG> returns the prefix of the specify uri <SEG> or null if none exists <END>
<BEG> called at the very end <END>
<BEG> starts the pack scope <SEG> without add any item <END>
<BEG> integer index = new integer requiredbindings size ; switch attrindex size { case 0 : attrindex = collections singletonmap qname <SEG> index ; break ; case 1 : attrindex = new hashmap attrindex ; default : attrindex put qname <SEG> index ; } addbinding bind ; initializedstate += math ab qname hashcode ; <END>
<BEG> object value ; integer index = integer attrindex get qname ; if index == null { value = valuelist getnonrequiredvalue qname ; } else { value = valuelist getrequiredvalue index intvalue ; } return value ; <END>
<BEG> register the give nsuri prefix combination <END>
<BEG> param xopunmarshaller schema default xop unmarshaller <END>
<BEG> set this attribute 's parent <END>
<BEG> check and add < i > attribute < i > to the end of the list or replace an exist < code > attribute < code > with the same name and < code > namespace < code > <END>
<BEG> return a filter that match any boolean data <END>
<BEG> returns the line number of the end of the text where the parse error occur <END>
<BEG> returns the { link xmlfilter } use during parsing <SEG> or null if none <END>
<BEG> get the current domoutputprocessor return the current domoutputprocessor since jdom2 <END>
<BEG> returns whether doms will be construct with namespaces even when the source document have element all in the empty namespace <END>
<BEG> get < code > integer < code > for value <END>
<BEG> get iterator over only the multiple-valued key present in the map <END>
<BEG> duplicates the object with the generic call <END>
<BEG> check if a url string represent a resource from the classpath <END>
<BEG> remove range of value <END>
<BEG> get number of entry in map <END>
<BEG> get iterator for key in map <END>
<BEG> check for iteration element available <END>
<BEG> return the string data of the comment <SEG> return empty string if it do not exist return string <END>
<BEG> fatal error <END>
<BEG> todo : namespace do n't give information give multiple prefix for the same namespaceuri <END>
<BEG> this method support all function in the namespacecontext utility class <END>
<BEG> see com sun xml stream xerces xni namespacecontext # getdeclaredprefixat int <END>
<BEG> sets whether an attribute be specify in the instance document or not <END>
<BEG> returns true if the attribute be specify in the instance document <END>
<BEG> look up an attribute 's type by index <END>
<BEG> look up an augmentation by namespace name <END>
<BEG> determine whether a string be syntactically capable of represent a valid ipv4 address or the domain name of a network host <END>
<BEG> return the entity responsible for read the entity <END>
<BEG> return the expanded system identifier for the current document event <END>
<BEG> returns the base system identifier of the currently scan entity <SEG> or null if none be available <END>
<BEG> checks whether an entity give by name be external <END>
<BEG> sets whether the namespace binder only pass the prefix map event to the registered document handler or pass all document event <END>
<BEG> resets the field of this scanner <END>
<BEG> stores an item in the item array <END>
<BEG> returns a specific attribute from the list <END>
<BEG> public api <SEG> efficient access to share constant value : <END>
<BEG> since the link list be prune to always start with the first in doc order undefined id <SEG> we can just return head : <END>
<BEG> adds to this duration <END>
<BEG> subtracts from this duration <END>
<BEG> returns a upper-case-and-underbar string use the jaxb rule <END>
<BEG> < p > returns an untyped view of the annotation 's value <END>
<BEG> scans the root directory with the pattern that have be include and exclude and return the name of the result file set relative to the root dir <END>
<BEG> return true if pattern be the same and the option be equivalent <END>
<BEG> only use for asserts <END>
<BEG> these two method <SEG> createelementtype and getelementtype have to stay synchronize <SEG> because they create an xmlobject and return the type for that object <SEG> respectively <END>
<BEG> return an array consisting of a single type <END>
<BEG> returns the handle for the give type within this loader <END>
<BEG> note <SEG> this be carefully align with hash code for all xsd : decimal primitive <END>
<BEG> gets a xml the id attribute <END>
<BEG> returns a qnameset base on the give set of excluded uris <SEG> include uris <SEG> exclude qnames in included namespaces <SEG> and include qnames in excluded namespaces <END>
<BEG> returns a qnameset base on the give array of include qnames param includedqnames the array of include qnames <END>
<BEG> true if the give set be disjoint from this one <END>
<BEG> restricts the content of this qnamesetbuilder to be a subset of the give qnameset <END>
<BEG> returns the array of rank for inner nest array <END>
<BEG> constructs a soaparraytype reflect the dimension of the next nested array <END>
<BEG> when write a document <SEG> this set the character encode to use <END>
<BEG> if this option be set <SEG> the schema compiler will skip annotation when process schema component <END>
<BEG> performs additional validation check that be disable by default for good compatibility <END>
<BEG> returns a space-separated list of the string representation of all the item in the list <END>
<BEG> make sure that in attribute temporary array be enough space <END>
<BEG> simple utility method -- good for debug <END>
<BEG> an unordered set of notation information item <SEG> one for each notation declare in the dtd <END>
<BEG> parse input stream to create xml document <END>
<BEG> parse input stream to create xml document use specify encode <END>
<BEG> parse reader to create xml document <END>
<BEG> returns an specific field of some class <END>
<BEG> deprecate as of 1 4 4 <SEG> minimal jdk version be 1 4 already <END>
<BEG> checks if the jvm support awt <END>
<BEG> resolves an object a native serialization do by call readresolve <SEG> if available <END>
<BEG> looks up the value of a feature <END>
<BEG> sets the list of object to marshal <END>
<BEG> declare a type a immutable <END>
<BEG> changes the password of the currently logged-in account <END>
<BEG> returns the saslauthentication manager that be responsible for authenticate with the server <END>
<BEG> creates a new packet collector for this connection <END>
<BEG> get the collection of all packet collector for this connection <END>
<BEG> registers a packet listener with this connection <END>
<BEG> returns the trust store type <SEG> or < tt > null < tt > if it 's not set <END>
<BEG> returns the password to use to access the trust store file <END>
<BEG> returns true if the whole chain of certificate present by the server be go to be check <END>
<BEG> sets whether the client will use sasl authentication when log into the server <END>
<BEG> returns all the language be use for the subject <SEG> not include the default subject <END>
<BEG> returns the thread id of the message <SEG> which be a unique identifier for a sequence of chat message <END>
<BEG> returns the xml : lang of this message <END>
<BEG> returns an unmodifiable collection of all the property name that be set <END>
<BEG> returns the active privacy list or < tt > null < tt > if none be find <END>
<BEG> sends out a notification that there be an error with the connection and close the connection <END>
<BEG> answer the active privacy list <END>
<BEG> returns an unmodifiable collection of all iqprovider instance <END>
<BEG> returns the presence info for a particular user <END>
<BEG> returns the presence info for a particular user 's resource <SEG> or unavailable presence if the user be offline or if no presence information be available <SEG> such a when you be not subscribe to the user 's presence update <END>
<BEG> returns the list of sasl mechanism to be use <END>
<BEG> clears all entry out of cache where the entry be old than the maximum defined age <END>
<BEG> gets the entryset view of the map <END>
<BEG> notifies the xmpp connection that stream compression be deny so that the connection process can proceed <END>
<BEG> set the used flush method when compress data <END>
<BEG> get the descriptive text of this saslfailure <END>
<BEG> returns true if the queue be currently shut down <END>
<BEG> checks if the give long be within the range of an unsigned 32-bit integer <SEG> the xml type x : unsignedint <END>
<BEG> returns an iterator for the default value of the question if the question be part of a form to fill out <END>
<BEG> returns the stamp that uniquely identify the offline message <END>
<BEG> returns an iterator for the group name a strings that the roster entry belongs to <END>
<BEG> return the map of metadata contain by this instance <END>
<BEG> notifies about failed binderror operation param olderror the already bound throwable param failederror the error attempt to be bind <END>
<BEG> notifies all listener about failed binderror operation param olderror the already bound throwable param failederror the error attempt to be bind <END>
<BEG> returns { code true } if this map contain no key-value mapping <END>
<BEG> throw unsupportedoperationexception  throw classcastexception  throw nullpointerexception  throw illegalargumentexception  <END>
<BEG> returns the thread factory use to create new thread <END>
<BEG> returns the maximum allowed number of thread <END>
<BEG> read header <END>
<BEG> return localvariabletable of code <SEG> if it have one <END>
<BEG> dump instruction a byte code to stream out <END>
<BEG> if this do n't reference an interface <SEG> it reference a class or a non-existant entity <END>
<BEG> param name fully qualify file name <SEG> e g <END>
<BEG> return the direction of the relationship <END>
<BEG> return null == collection || 0 == collection size <END>
<BEG> this method go on the declare aspect of the inter-type method <END>
<BEG> see resolvedtypemunger parameterizedfor resolvedtype <END>
<BEG> see org aspectj weaver pattern typepattern # matchesinstanceof itype <END>
<BEG> non-javadoc see org aspectj weaver pattern pointcut # findresidue org aspectj weaver shadow <SEG> org aspectj weaver pattern exposedstate <END>
<BEG> test if a label mark the end of a try catch block param label the label to be test return true if the label mark the start of a try catch block otherwise false <END>
<BEG> increment the local count and return this to allow chain param increment the amount ot add to localcount can be negative return this throw compileexception if the local count go negative <END>
<BEG> return the operand with the give index or null if the index be out of range param index the index return the operand with the give index <END>
<BEG> starts the reporter <END>
<BEG> returns a map of all the counter in the registry and their name which match the give filter <END>
<BEG> mark the passage of time and decay the current rate accordingly <END>
<BEG> gets the height of the chart that will be display return the height of the chart in pixel <SEG> default to 400 <END>
<BEG> sets a threshold level <SEG> in millisecond <SEG> below which log call will not be make <END>
<BEG> create assertion for { link java util optionaldouble } <END>
<BEG> verifies that the actual value be equal to one <END>
<BEG> verifies that the actual array contain the give subsequence possibly with other value between them <END>
<BEG> verifies that the actual { code charsequence } have a length that 's the same a the number of element in the give iterable <END>
<BEG> verifies that the actual { code class } be an annotation <END>
<BEG> verifies that the { link completablefuture } be not complete exceptionally <END>
<BEG> verify that the actual { code file } be empty i e <END>
<BEG> verifies that the number of value in the actual iterable be between the give boundary inclusive <END>
<BEG> verifies that actual and give { link localtime } have same hour and minute field second and nanosecond field be ignore in comparison <END>
<BEG> verifies that the number of value in the { link map } be between the give boundary inclusive <END>
<BEG> asserts that the actual object have only null field or property < b > except for the give one < b > inherit one be take into account <END>
<BEG> call { link optional # map function map } on the { code optional } under test <SEG> assertion chain afterwards be perform on the { code optional } result from the map call <END>
<BEG> verifies that the binary content of the actual { code path } be < b > exactly < b > equal to the give one <END>
<BEG> assert that the tested { link path } be a symbolic link <END>
<BEG> verify that the actual { code path } be a non empty directory <END>
<BEG> verifies that the { link predicate } evaluate all give value to { code false } <END>
<BEG> verifies that the message of the actual { code throwable } end with the give description <SEG> after be format use the { link string # format } method <END>
<BEG> verifies that the actual { link zoneddatetime } be equal to the give one accord to the comparator in use <END>
<BEG> creates a new instance of < code > { link charsequenceassert } < code > from a { link stringbuffer } <END>
<BEG> verifies that the actual atomic have a value strictly less than the give one <END>
<BEG> verifies that the actual atomic have a non negative value positive or equal zero <END>
<BEG> verifies that the actual atomic array do not contain duplicate <END>
<BEG> verifies that the actual atomic have a value in [ start <SEG> end ] range start include <SEG> end include <END>
<BEG> verifies that the actual atomicreferencearray contain the give object at the give index <END>
<BEG> filter the array under test keep only elements have a property or field equal to { code expectedvalue } <SEG> the property field be specify by { code propertyorfieldname } parameter <END>
<BEG> filter the array under test keep only elements have a property or field match the filter express with the { link filteroperator } <SEG> the property field be specify by { code propertyorfieldname } parameter <END>
<BEG> creates a new instance of { link pathassert } param actual the path to test return the create assertion object <END>
<BEG> creates a new instance of < code > { link objectassert } < code > for any object <END>
<BEG> verifies that the cause of the actual { code throwable } be an instance of the give type <END>
<BEG> indicates that an { link java util optional } be empty so it do n't contain the expected value <END>
<BEG> asserts that the number of entry in the give { code map } be equal to the expect one <END>
<BEG> asserts that the size of the give { code charsequence } be great than the expected size param info contain information about the assertion <END>
<BEG> asserts that the actual { code throwable } have a root cause similar to the give one <END>
<BEG> verifies that the { code character } value be less than the give one <END>
<BEG> throws an { link assertionerror } with the give message and with the { link throwable } that cause the failure <END>
<BEG> see org krysalis barcode4j impl upcean upceanlogicimpl <END>
<BEG> converts millimeter mm to inch in param mm the value in mm return the value in inch <END>
<BEG> creates the ecc200 error correction for an encoded message <END>
<BEG> performs base64 encode on the < code > raw < code > bytebuffer <SEG> write it to the < code > encode < code > charbuffer <END>
<BEG> returns an sha-256 digest <END>
<BEG> encodes a string use the refined soundex algorithm <END>
<BEG> gets the default charset name use for string decoding and encode <END>
<BEG> return 0 <SEG> if the handler catch any exception <SEG> otherwise it point to the exception class which be to be catch <END>
<BEG> dump constant field reference to file stream in binary format <END>
<BEG> map byte code position to source code line <END>
<BEG> return string representation <SEG> i e <SEG> a list of class <END>
<BEG> param index return the method handle name since 6 0 <END>
<BEG> call correspond visitor method s <END>
<BEG> param old_ih old target param new_ih new target <END>
<BEG> param comparator comparison strategy object <END>
<BEG> get field object after have set up all necessary value <END>
<BEG> return return address type <END>
<BEG> ensures the general precondition of a stackconsumer instance <END>
<BEG> returns a string representation of this object <END>
<BEG> returns a string representation of this operandstack instance <END>
<BEG> returns { code true } if a type represent an annotation type <END>
<BEG> creates a value-storing stack manipulation <END>
<BEG> matches exactly the system { link java lang classloader } <END>
<BEG> matches any class loader that be either the give class loader or a parent of the give class loader <END>
<BEG> visits an variable instruction <END>
<BEG> writes < code > num_annotations < code > in < code > runtime in visibleannotations_attribute < code > <END>
<BEG> set the major version <END>
<BEG> returns < code > class [ nth ] outer_class_info_index < code > <END>
<BEG> returns all the package names record by < code > importpackage < code > <END>
<BEG> adds a constant_string_info to the const pool <END>
<BEG> position the iterator just after the give instruction <END>
<BEG> set the type of this declare class <END>
<BEG> set the index of the local variable that this instruction operate on <END>
<BEG> return all local with the give name <SEG> or empty array if none <END>
<BEG> read a utf-8 string value at the give offset into the give bytecode <END>
<BEG> get the default cache manager for the specified class loader <END>
<BEG> construct a config instance set the type parameter and return a proper generic type <END>
<BEG> see cache2kbuilder # expireafterwrite <END>
<BEG> always return false <SEG> debug be not enable on the defaultlogger <END>
<BEG> decrement the give counter <SEG> return the new value <END>
<BEG> asynchronous decrement <END>
<BEG> return this configuration instance see # setnotifylistenersonexception boolean <END>
<BEG> non-javadoc see net sf ehcache util counter sample sampledcounter # getallsamplevalues <END>
<BEG> returns an objectname for the passed cachemanagername param cachemanagername return an { link objectname } use the input name of cache manager throw malformedobjectnameexception <END>
<BEG> checks if be value <END>
<BEG> non-javadoc see net sf ehcache statistic extend extendedstatistics operation # isalwayson <END>
<BEG> start <END>
<BEG> sets base and all cell to the give value <END>
<BEG> check be this entry a load from the cache a oppose to generate by the application use write-only command <SEG> mostly for purpose of the write skew check <END>
<BEG> gets the flushed counter return the flushed counter <END>
<BEG> event fire when an entry be flush from the cache <END>
<BEG> enables the saving of field info during the scan <END>
<BEG> static factory method to stop ides from auto-completing classgraphexception after new classgraph <END>
<BEG> generate a dot file which can be feed into graphviz for layout and visualization of the class graph <END>
<BEG> returns true if this method be a varargs method <END>
<BEG> load the class this method be associate with <SEG> and get the { link method } reference for this method <END>
<BEG> get the result type for the method <END>
<BEG> check if a { link file } exist <SEG> be a regular file <SEG> and can be read <END>
<BEG> a replacement for java 8 's string join <END>
<BEG> deserialize json to a new object graph <SEG> with the root object of the specify expect type <END>
<BEG> return the sorted list of name of all superclass of the name class <END>
<BEG> get a list of annotation on this field <SEG> along with any annotation parameter value <SEG> wrap in { link annotationinfo } object <END>
<BEG> use class name and field name for equal <END>
<BEG> returns the module layer type modulelayer <END>
<BEG> get the number of dimension of the array <END>
<BEG> adds the number of byte to be expect in the response <END>
<BEG> return a new builder for a handlerbeforeattemptcontext instance <END>
<BEG>  < p > this be when the request be first see by the service client <END>
<BEG> < p > the name of the location from which the ip address be advertised <END>
<BEG> < p > the address range <SEG> in cidr notation <END>
<BEG> < p > an ipv6 cidr block from the ipv6 address pool <END>
<BEG> < p > indicates whether the authorization rule grant access to all client <END>
<BEG> < p > parameters use to automatically set up ebs volume when the instance be launch <END>
<BEG> < p > the bucket in which to store the ami <END>
<BEG> < p > the id of the capacity reservation to be cancel <END>
<BEG> < p > indicates whether classiclink dns support be enable for the vpc <END>
<BEG> < p > the current date and time <END>
<BEG> < p > the number of byte send by the client <END>
<BEG> < p > the aws account id of the instance owner <END>
<BEG> < p > indicates if the instance that could not be launch be a spot instance or on-demand instance <END>
<BEG> < p > the time at which fast snapshot restores enter the < code > enable < code > state <END>
<BEG> < p > the size of the disk image <SEG> in gib <END>
<BEG> < p > the container format use to combine disk image with metadata such a ovf <END>
<BEG> < p > the maximum price per unit hour that you be willing to pay for a spot instance <END>
<BEG> < p > describes the memory for the fpga accelerator for the instance type <END>
<BEG> < p > the payment option select for this reservation <END>
<BEG> < p > indicates whether monitoring be enable <END>
<BEG> < p > indicates whether this ipv4 address be the primary private ip address of the network interface <END>
<BEG> < p > excludes the root volume from be snapshotted <END>
<BEG> < p > an unencrypted pem encode rsa private key <END>
<BEG> < p > reserved for future use <END>
<BEG> < p > the maximum number of ipv4 address per network interface <END>
<BEG> < p > the current price schedule <SEG> a determine by the term remain for the reserved instance in the listing <END>
<BEG> < p > the hourly price of the reservation per hour <END>
<BEG> < p > whether the reserved instance be apply to instance in a region or instance in a specific availability zone <END>
<BEG> < p > the early date and time <SEG> in utc <SEG> for the scheduled instance to start <END>
<BEG> < p > the subnet associate with the transit gateway multicast domain <END>
<BEG> < p > the maximum iops support by the attached instance <END>
<BEG> gets the translated message <END>
<BEG> returns the id of a token for a give name <END>
<BEG> non-javadoc see java lang comparable # compareto t <END>
<BEG> return the average line coverage rate for all child in this container <END>
<BEG> sets the session identifier <END>
<BEG> return whether this option can have an optional argument <END>
<BEG> returns the specified value of this option or < code > null < code > if there be no value <END>
<BEG> breaks < code > token < code > into it constituent part use the following algorithm <END>
<BEG> sets whether this be an anti-item use in differential backup <SEG> mean it should delete the same file from a previous backup <END>
<BEG> convenience method to set this entry 's group and user name <END>
<BEG> read a record from the input stream and return the data <END>
<BEG> set the big number mode <END>
<BEG> length of the extra field in the local file data - without header-id or length specifier <END>
<BEG> adds an extra field - replace an already present extra field of the same type <END>
<BEG> writes byte to zip entry <END>
<BEG> helper method to get the value a a java biginteger from eight byte start at give array offset param bytes the array of byte param offset the offset to start return the corresponding java biginteger value <END>
<BEG> returns this channel 's position <END>
<BEG> returns the fast available { link xxhashfactory } instance which do not rely on jni binding <END>
<BEG> inserts the specified element at the end of this deque <END>
<BEG> returns the number of additional element that this queue can ideally in the absence of memory or resource constraint accept without block <END>
<BEG> atomically set the element at position { code i } to the give value and return the old value <END>
<BEG> returns the string representation of the current value of array <END>
<BEG>  throw nullpointerexception if any of the argument be null <END>
<BEG> specialized variant of findnode to get first valid node <END>
<BEG> throw classcastexception  throw nullpointerexception if the specify key be null <END>
<BEG> removes a single instance of the specified element from this queue <SEG> if it be present <SEG> whether or not it have expire <END>
<BEG> returns an iterator over all the element both expire and unexpired in this queue <END>
<BEG> returns current nanosecond time <END>
<BEG> retrieves and remove the head of this queue <END>
<BEG> a plain store no order fence of an element to a give offset param buffer this buffer param offset compute via { link unsaferefarrayaccess # calcrefelementoffset long } param e an orderly kitty <END>
<BEG> returns an estimate of the total number of task currently hold in queue by worker thread but not include task submit to the pool that have not begin execute <END>
<BEG> performs the give task <SEG> return it result upon completion <END>
<BEG> returns { code true } if the process of termination have commence but not yet complete <END>
<BEG> returns the { code reloadingdetectorfactory } <END>
<BEG> resets this visitor <END>
<BEG> set the list of rulefinder object <END>
<BEG> gets the current origin description <SEG> which may be null for automatic <END>
<BEG> add an validator to the aggregator <END>
<BEG> runs all rowvalidator isvalid command against the line <END>
<BEG> returns the setter method associate with the object 's field <END>
<BEG> writes the content accumulate in an internal in-memory row use { link # addvalues object or # addvalue } to a new record in the output <END>
<BEG> configures the writer base on the annotation provide in a give class param beanclass the class whose annotation will be process to derive configuration for write <END>
<BEG> defines a default { link processor } implementation to use when no match value be find in the input row <END>
<BEG> invoked by the parser after all value of a valid record have be process <END>
<BEG> returns the default value to be assign to the problematic column that raise the current { link dataprocessingexception } <END>
<BEG> returns a new instance of { link dateconversion } param dateifnull default date value to be return when the input string be null <END>
<BEG> returns a new instance of { link validatedconversion } to validate value of a record param nullable flag to indicate whether value can be null param allowblanks flag to indicate whether value can be blank param oneof list of accepted value <END>
<BEG> converts a formatted date string to an instance of date <END>
<BEG> defines the character use for escape quote inside an already quote value <END>
<BEG> returns whether or not leading whitespaces from quote value should be skip default to false note : if { link # keepquotes } evaluate to { code true } <SEG> value wo n't be trim <END>
<BEG> converts the duration of the interval to a < code > period < code > use the specified period type <END>
<BEG> sets the length of this duration in millisecond <END>
<BEG> gets the end of this time interval which be exclusive <END>
<BEG> get the textual value of the specified time instant <END>
<BEG> create a strictchronology for any chronology <END>
<BEG> selects a suitable period type for the give object <END>
<BEG> returns a copy of this date plus the specified number of month <END>
<BEG> converts this object to a < code > localdate < code > with the same date and chronology <END>
<BEG> saves a datetime field value <END>
<BEG> converts an integer to a string <SEG> prepended with a variable amount of ' 0 ' pad character <SEG> and append it to the give buffer <END>
<BEG> returns a formatter for a four digit weekyear <END>
<BEG> instruct the printer to emit a combined second and millis field <SEG> if support <END>
<BEG> sets the period of this time interval <SEG> preserve the end instant and use the isochronology in the default zone for calculation <END>
<BEG> returns an immutable view of a give map <END>
<BEG> param iterables return an iterator over iterators from the give iterable of iterables <END>
<BEG> computes the minimum diffpath that express de difference between the original and revised sequence <SEG> accord to gene myers differencing algorithm <END>
<BEG> returns a new { link cookiebuilder } create from this { link cookie } <END>
<BEG> returns the logger name from the specify { code pathish } <END>
<BEG> returns the writereplace method <END>
<BEG> get local address <END>
<BEG> 1 <END>
<BEG> append thread name with url address return new url with updated thread name <END>
<BEG> param transport see # transporter string deprecate <END>
<BEG> puts a new value in the property table with the appropriate flag <END>
<BEG> wrap protocol with dynamicmbean interface <END>
<BEG> sets the buffer < p > note that the byte [ ] buffer pass a argument must not be modify <END>
<BEG> writes the message to the output stream <END>
<BEG> checks the sent table : if some credit be in queue mode and credit leave be less than min_credits : send a credit request <END>
<BEG> adds a new element to the buffer param seqno the seqno of the element param element the element param block if true <SEG> add will block when the buffer be full until there be space <END>
<BEG> nulls element between low and seqno and forward low <END>
<BEG> return all field of the class if annotate param clazz the class <END>
<BEG> maximum session timeout in millisecond <SEG> -1 if unset <END>
<BEG> loop over the pre-canned decision <SEG> reset to zero when it get to the end <END>
<BEG> since 5 8 <END>
<BEG> parses a 1 to 32 character lower-hex string with no prefix into an unsigned long <SEG> toss any bit high than 64 <END>
<BEG> writes an unsigned 16 bit value to the stream <END>
<BEG> check that 2 entry be of the same type <END>
<BEG> check if the message be a response <END>
<BEG> non-javadoc see javax jmdns impl dnsentry # isstale long <END>
<BEG> non-javadoc see javax jmdns jmmdns # gethostnames <END>
<BEG> method call to indicate that output of non-filtered array one that may have be include either completely <SEG> or in part be complete <SEG> in case where filter other that { link # include_all } be return <END>
<BEG> method for construct json parser instance to parse content of specify file <END>
<BEG> method for construct json parser instance to parse content of resource reference by give url <END>
<BEG> specialized convenience method that will decode a 64-bit int <SEG> of at most 18 digit and possible lead minus sign <END>
<BEG> method call to expand size of the current segment <SEG> to accommodate for more contiguous content <END>
<BEG> accessor that can be use to determine if this serializer use another serializer for actual serialization <SEG> by delegate call <END>
<BEG> factory method for construct { link objectreader } that will pass specific schema object to { link jsonparser } use for reading content <END>
<BEG> helper method use to skip processing for type that we know can not be i e <END>
<BEG> helper method use to construct appropriate description when pass either type class or an instance ; in latter case <SEG> class of instance be to be use <END>
<BEG> returns a copy of the input string in which all { linkplain # islowercase char lowercase ascii character } have be convert to uppercase <END>
<BEG> returns a predicate that always evaluate to { code false } <END>
<BEG> returns { code true } if the provided row key be among the row key provide when the table be construct <END>
<BEG> a sensible <SEG> albeit inefficient <SEG> definition of { link # containskey } in term of the { code iterator } method of { link # entryset } <END>
<BEG> a sensible definition of { link # tostring } in term of { link # getkey } and { link # getvalue } <END>
<BEG> a sensible definition of { link # tostring } a { code entryset tostring } <END>
<BEG> a sensible definition of { link # floorkey } in term of { code floorentry } <END>
<BEG> a sensible definition of { link # polllast } in term of the { code descendingiterator } method <END>
<BEG> constructs an empty { code hashmultimap } with enough capacity to hold the specified number of key and value without rehash <END>
<BEG> constructs a { code hashmultimap } with the same mapping a the specify multimap <END>
<BEG> returns the corresponding primitive type of { code type } if it be a wrapper type ; otherwise return { code type } itself <END>
<BEG> one 's complement negation <END>
<BEG> returns an { code float } representation of this < tt > nativelong < tt > <END>
<BEG> rotate bits right <END>
<BEG> unconditionally close a response <END>
<BEG> return the time in millis the task be start <END>
<BEG> determines the end position of the current token <END>
<BEG> returns true if the parameter be null or contain only whitespace <END>
<BEG> non-javadoc see org glassfish hk2 api descriptor # setranking int <END>
<BEG> get the configured debug level <END>
<BEG> get a message header a a single string value <END>
<BEG> get the medium type of the entity <END>
<BEG> get the link attach to the message a header <END>
<BEG> match a uri against the template <END>
<BEG> visits the enclose class of the class <END>
<BEG> prepares member injector for all injected instance <END>
<BEG> returns the injected constructor <SEG> field <SEG> or method <END>
<BEG> compute the maximum of the give current maximum sequence number and the specify sequence number <SEG> account for the fact that the current maximum sequence number could be { link sequencenumbers # no_ops_performed } or { link sequencenumbers # unassigned_seq_no } <END>
<BEG> retrieve the name of the environment variable which value have be load a the password <END>
<BEG> gets the specific jca provider for the mac computation where require by the jwe encryption method <END>
<BEG> returns a portion of the specify byte array <END>
<BEG> returns the byte length of the specify byte array <END>
<BEG> sets the data validation base upon a numerical condition <END>
<BEG> retrieves the data for output to binary file return the data to be write <END>
<BEG> accessor for the last column return the last column <END>
<BEG> gets the data for write return the data <END>
<BEG> reads the ptg data from the array start at the specified position param data the rpn array param po the current position in the array <SEG> exclude the ptg identifier return the number of byte read <END>
<BEG> gets the token representation of this item in rpn return the byte applicable to this formula <END>
<BEG> default behaviour be to do nothing param coladjust the amount to add on to each relative cell reference param rowadjust the amount to add on to each relative row reference <END>
<BEG> gets the token representation of this item in rpn <END>
<BEG> gets the index of the last sheet in the range return the index of the last sheet in the range <END>
<BEG> accessor for the hidden flag return true if this be a hidden sheet <SEG> false otherwise <END>
<BEG> gets the data validation <END>
<BEG> gets the name range from this workbook <END>
<BEG> used in conjunction with the usetemporaryfileduringwrite setting to set the target directory for the temporary file <END>
<BEG> error formula specific exception handling <END>
<BEG> the number of shape in this drawing group <END>
<BEG> get the default row height for the sheet if the row do not define their own height return default row height <END>
<BEG> set the margin field for the bottommargin record <END>
<BEG> set the label color rgb field for the tick record <END>
<BEG> whether to use the mac shado font style thing mac only - some mac person should comment this instead of me do it since i have no idea return mac - whether to do that mac font shadow thing or not see # getattributes <END>
<BEG> get the font 's color palette index return cpi - font color index <END>
<BEG> get whether or not to horizonatally center this sheet <END>
<BEG> based on the link option <SEG> be this a file ? <END>
<BEG> return the rk number for column coffset = column - field_2_first_col param coffset the coffset = column - field_2_first_col return the value decode into a double <END>
<BEG> for unit test only ! <END>
<BEG> a bit that specify whether the phonetic guide feature be enable for any cell in this row <END>
<BEG> get the option bitmask or just use the bit setter <END>
<BEG> get if col summary appear right of the detail in the outline return right or not <END>
<BEG> param newright the string to set a the right side <END>
<BEG> return the mark-up tag for end bold <END>
<BEG> hssf do n't support table border <SEG> so always { link borderstyle # none } see org apache poi s usermodel borderformatting # getborderhorizontal <END>
<BEG> get an array of object <SEG> some of which may implement poifsviewable return an array of object ; may not be null <SEG> but may be empty <END>
<BEG> frees all block in the stream <END>
<BEG> return the kth small element in the array <END>
<BEG> return the maximum number of usable column in each spreadsheet <END>
<BEG> peeks at the first n byte of the stream <END>
<BEG> return the started process <END>
<BEG> returns the pathname of the current working directory <END>
<BEG> returns true if new ssl session may be establish by this socket <END>
<BEG> checks if the reply line be a continuation <SEG> i e <END>
<BEG> sends an nntp command to the server <SEG> wait for a reply and return the numerical response code <END>
<BEG> convert byte to unsigned long <END>
<BEG> since 3 6 <END>
<BEG> looks for the state of the option <END>
<BEG> returns the option code for this option <END>
<BEG> if active mode <SEG> accept the ftp server 's connection - in pasv <SEG> we be already connect <END>
<BEG> we can force port to send a fixed ip address <SEG> which can be useful with certain nat configuration <END>
<BEG> no exception < code > java io writer < code > close method <END>
<BEG> performs function application within an homogeneous pair applicative functor pattern <END>
<BEG> a first-class function that traverse a stream inside a promise <END>
<BEG> return the first-class version of { code suspend } <END>
<BEG> create a hashset from the iterator <END>
<BEG> a function that convert copy on write array set to list <END>
<BEG> returns true if the give lazy string be a suffix of this lazy string <END>
<BEG> joins the give stream of lazy string into one <SEG> separate by space <END>
<BEG> set polymorphically the target of a { link piso } with a value <END>
<BEG> constructs a sequence from the iterator <END>
<BEG> converts this sequence to a list <END>
<BEG> performs a bind across each stream element <SEG> but ignore the element value each time <END>
<BEG> zips this stream with the index of it element a a pair <END>
<BEG> applies a stream of comonadic function to this stream <SEG> return a stream of value <END>
<BEG> helper method to implement { link object # equal object } correctly <END>
<BEG> promotes this function so that it return it result in a list <END>
<BEG> promotes this function to map over a hash a a contravariant functor <END>
<BEG> returns true if all the element of the give stream be true <END>
<BEG> returns a composed predicate of give stream of predicate param l a stream of predicate function return compose predicate function <END>
<BEG> an order instance for a product-3 <SEG> with the first factor consider most significant <END>
<BEG> returns a function that always return the constant value that you give in parameter <END>
<BEG> returns a singleton { code charseq } <SEG> i e <END>
<BEG> transforms this { code charseq } <END>
<BEG> returns the index of the last occurrence of the give element a an { code option } <SEG> start the search at the specified index <END>
<BEG> decodes this { code charseq } into an { code integer } by call { link integer # decode string } <END>
<BEG> searches this sequence for a specific element use a linear search <END>
<BEG> returns the head element without modify the list <END>
<BEG> returns the last element of this which satisfy the give predicate <END>
<BEG> creates a { code promise } from a { link try } <SEG> back by the give { link executor } <END>
<BEG> reduces many { code option } s into a single { code option } by transform an { code iterable < option < ? <END>
<BEG> maps the value of an iterable to a sequence of mapped value into a single { code option } by transform an { code iterable < ? <END>
<BEG> creates a new { code some } of a give value <END>
<BEG> creates a { code validation } of an { code try } <END>
<BEG> creates a tuple of two element <END>
<BEG> append a value to this tuple <END>
<BEG> maps the component of this tuple use a mapper function <END>
<BEG> reads a value from the buffer at give offset <END>
<BEG> given a string contain < i > dimension < i > value encode in it <SEG> separate by comma <SEG> return a double array of length < i > dimension < i > contain the value <END>
<BEG> shortcut for { link # hashbytes byte [ ] <SEG> int <SEG> int hashbytes input <SEG> 0 <SEG> input length } <END>
<BEG> non-javadoc see org htmlcleaner contentnode # tostring <END>
<BEG> this will retrieve the system id of an externally referenced dtd <SEG> or an empty string if none be reference <END>
<BEG> encodes the specified text <SEG> escape special character into < a href= # hexadecimalcharacterreference > hexadecimal character reference < a > <END>
<BEG> indicates whether hyperlink urls be include in the output <END>
<BEG> returns the default top margin of an html block element with the specify name <END>
<BEG> returns the column number of this character position in the source document <END>
<BEG> validates that the value be false param val object to test param msg message to output if validation fails <END>
<BEG> find element that have attribute that end with the value suffix <END>
<BEG> get each of the previous element sibling of each element in this list <SEG> that match the query <END>
<BEG> find the first element that match the query <END>
<BEG> return true if this element have be preclosed <END>
<BEG> returns k compareto x if x match kc k 's screen comparable class <SEG> else 0 <END>
<BEG> checks whether proxy should be use accord to nonproxyhosts setting of it <SEG> or we want to go directly to target host <END>
<BEG> returns the http status code or { code 0 } for none <END>
<BEG> sets the list of header name of http response <END>
<BEG> escapes the string value so it can be safely include in uri path segment <END>
<BEG> start a 'post ' request to the give url param url return request throw httprequestexception <END>
<BEG> set the 'if-none-match ' request header to the give value param ifnonematch return this request <END>
<BEG> creates a new instance of { link contenttype } with the give parameter <END>
<BEG> tests if the give request path match the give pattern <END>
<BEG> creates default factory base on the standard jsse trust material { code cacerts } file in the security property directory <END>
<BEG> builds a get request <END>
<BEG> encodes a byte array into base64 format <END>
<BEG> sort an array of file <END>
<BEG> string representation of this file comparator <END>
<BEG> compare the path of two file the specified case sensitivity <END>
<BEG> internal method that walk the directory hierarchy in a depth-first manner <END>
<BEG> checks to see if the filename start with the prefix <END>
<BEG> checks to see if the filename match one of the wildcards <END>
<BEG> read the specified number of byte into an array <END>
<BEG> closes a < code > socket < code > unconditionally <END>
<BEG> gets the content of an < code > inputstream < code > a a < code > byte [ ] < code > <END>
<BEG> skips the requested number of byte or fail if there be not enough leave <END>
<BEG> directory change event <END>
<BEG> accept class name where the supply classnamematcher match for deserialization <SEG> unless they be otherwise reject <END>
<BEG> search the folder for message match the give term <END>
<BEG> get the messages specify by the give array <END>
<BEG> forces any buffered output byte to be encode out to the stream and close this output stream <END>
<BEG> save the content of this part in the specify file <END>
<BEG> returns the version of the protocol this cookie comply with <END>
<BEG> writes a < code > long < code > value to the client <SEG> follow by a carriage return-line feed crlf <END>
<BEG> translation-time validation of the attribute <END>
<BEG> get the transaction timeout value for a imported transaction <END>
<BEG> equality comparison predicate <END>
<BEG> returns the list of repeat time r= field specify in the sessiondescription <END>
<BEG> return true if this header allow all contentsubtypes <SEG> false otherwise <END>
<BEG> remove the q value <END>
<BEG> sets the method support define by this allowheader <END>
<BEG> remove the pub-gruu value from the parameter list if it exist <END>
<BEG> set the conentencoding field <END>
<BEG> for backwards compatibility <END>
<BEG> encode into canonical form <END>
<BEG> creates a new toheader base on the newly supply address and tag value <END>
<BEG> create a referredby header <END>
<BEG> non-javadoc see android javax sip header headerfactory # createsipetagheader java lang string <END>
<BEG> p-visited-network-id header return newly create p-visited-network-id header <END>
<BEG> create a new statusline from a string <END>
<BEG> < p > set the event charging function ecf address < p > param ecfaddress - the address to set in the ecf parameter throw parseexception <END>
<BEG> < p > set the term-ioi parameter < p > param termioi - value to set in the term-ioi parameter <END>
<BEG> sets the duration value of the retryafterheader <END>
<BEG> deprecate see android javax sip header rseqheader # setsequencenumber int <END>
<BEG> gets the branch paramater of the viaheader <END>
<BEG> get the authorization header null if one do not exist <END>
<BEG> set the from tag <END>
<BEG> get the transport string <END>
<BEG> stop the dialog timer <END>
<BEG> send message to whoever be connect to u <END>
<BEG> stop the message processor <END>
<BEG> return the file extension string for this enumeration <END>
<BEG> < p > set the value of the < code > lang < code > property < p > param lang the new property value <END>
<BEG> < p > return the value of the < code > onunload < code > property < p > return the property value <END>
<BEG> < p > set the image url for this { link uigraphic } <END>
<BEG> < p > return the flag indicate whether the < code > summary < code > property of the associated message s should be display <END>
<BEG> sets the javascript event handler function that be invoke when a push message be receive from the server <END>
<BEG> < p > return the maximum number of digit < code > getasstring < code > should render in the integer portion of the result < p > return the max integer digit <END>
<BEG> < p > set the maximum number of digit < code > getasstring < code > should render in the integer portion of the result <END>
<BEG> < p class= changed_added_2_0 > return the xml qualify name for this tag <END>
<BEG> < p > return the flag value that should be return from the < code > doend < code > method when it be call <END>
<BEG> used by the truststore user to obtain the truststore set within the callback <END>
<BEG> determines the password <END>
<BEG> checks two webresourcepermission object for equality <END>
<BEG> removes a propertychangelistener from the listener list <END>
<BEG> invoked when the mouse enter a component <END>
<BEG> changes the helpset for this broker <END>
<BEG> sets the previous histroy entry <END>
<BEG> returns a backward history vector return the vector of backward history entry <END>
<BEG> adds a listener for the helpmodelevent post after the model have change <END>
<BEG> returns the total number of listener for this listenerlist <END>
<BEG> tells the listener that the history have change <END>
<BEG> returns the helpui that be provide the current look and feel <END>
<BEG> return the current navigator in the helpui <END>
<BEG> replaces the ui with the late version from the default uifactory <END>
<BEG> merged a navigatorview into this instance <END>
<BEG> processes no merge param node the master node return the master node <END>
<BEG> returns the color the text be draw with when the node be select <END>
<BEG> returns the color to use for the background if the node be select <END>
<BEG> subclassed to only accept the color if it be not a coloruiresource <END>
<BEG> determines if the current view be visible <END>
<BEG> retrieves value of the specified property <END>
<BEG> removes lead and trail whitespaces of the string give a the parameter <SEG> then truncate any sequnce of tab <SEG> cr <SEG> lf <SEG> and sp by a single whitespace character ' ' <END>
<BEG> sets the { code servicename } a the { code wsam : servicename } element in the { code wsa : metadata } element <END>
<BEG> tests whether the parameter instance be transactional <END>
<BEG> sets an integer attribute <END>
<BEG> get the terminating currency <END>
<BEG> access an instance of { link currencyconversion } for the give provider <END>
<BEG> get the name of the currently load provider <END>
<BEG> returns a hash code value base on the data value in this object <END>
<BEG> multiplies this quaternion by the inverse of quaternion q1 and place the value into this quaternion <END>
<BEG> sets the value of this tuple to the scalar multiplication of itself <END>
<BEG> sets the value of this tuple to the scalar multiplication of tuple t1 and then add tuple t2 this = s t1 + t2 <END>
<BEG> clamps this tuple to the range [ low <SEG> high ] <END>
<BEG> get the difference in nanosecond between two opaque time-stamps return by currenttime <END>
<BEG> returns a function which perform a map lookup with a default value <END>
<BEG> returns an iterator across all key-value map entry <SEG> use by { code entry iterator } and { code value iterator } <END>
<BEG>  < p > this implementation return { code true } if { code object } be a multiset of the same size and if <SEG> for each element <SEG> the two multisets have the same count <END>
<BEG> returns { code true } if { code iterator } contain { code element } <END>
<BEG> returns a stream consisting of the result of apply the give function to the element of { code stream } and their index in the stream <END>
<BEG> creates a { code treebasedtable } with the same mapping and sort order a the specify { code treebasedtable } <END>
<BEG> returns the file name without it < a href= http : en wikipedia org wiki filename_extension > file extension < a > or path <END>
<BEG> sorts the element of { code array } in descend order <END>
<BEG> returns a resolver that resolve type invariantly <END>
<BEG> specify an interval in the intervalunit minute that the produce trigger will repeat at <END>
<BEG> if the trigger misfire <SEG> use the { link calendarintervaltrigger # misfire_instruction_do_nothing } instruction <END>
<BEG> the < code > timezone < code > in which to base the schedule <END>
<BEG> whether the scheduler have be start <END>
<BEG> finds a resource with a give name <END>
<BEG> create a simpleschedulebuilder set to repeat the give number of time - 1 with an interval of the give number of second <END>
<BEG> returns the value at { code index } if it exist <SEG> coerce it if necessary <END>
<BEG> since 1 2 51 param json param path return <END>
<BEG> provide check for verify if this element be a primitive or not <END>
<BEG> convenience method to get the specified member a a jsonobject <END>
<BEG> method that calculate bit set flag of all feature that be enable by default <END>
<BEG> create a json marshaller <END>
<BEG> append a key <END>
<BEG> append an object value <END>
<BEG> returns the option use by this configuration return <END>
<BEG> associate an writer to a interface with hi priority param interface interface to map param writer writer object <END>
<BEG> decodes a json string into a typed object <END>
<BEG> returns this json value a { link jsonarray } <SEG> assume that this value represent a json array <END>
<BEG> creates a new algorithm instance use sha256withrsa <END>
<BEG> check whether the give enumeration contain the give element <END>
<BEG> trim trail whitespace from the give string <END>
<BEG> uncapitalize a < code > string < code > <SEG> change the first letter to lower case a per { link character # tolowercase char } <END>
<BEG> copy the give enumeration into a string array <END>
<BEG> set the jwe algorithm constraint to be apply to content encryption when process the jwt <END>
<BEG> custom errorcodevalidator implementation <SEG> which will be invoke when the { code jwtconsumer } be validate the jwt claim <END>
<BEG> visit the module correspond to the class <END>
<BEG> get the hour of the time <SEG> base on a 24-hour clock <END>
<BEG> returns a writer for the specify output stream <SEG> use utf-8 encoding <END>
<BEG> iterates over all value and return true if one value match <END>
<BEG> construct a tuple of degree 1 <END>
<BEG> push operand on stack <END>
<BEG> return true if short have it default metaclass <END>
<BEG> a helper method to return the string representation of a list with bracket boundary [ and ] <END>
<BEG> try to get the value from cache <END>
<BEG> get ref to table ; the reference and the cell it access will be at least as fresh a from last use of barrierlock <END>
<BEG> create an object input stream for this file <END>
<BEG> return the line on which the error occur <END>
<BEG> return the end column on which the error occur <END>
<BEG> pops a class from the enclosing class stack <END>
<BEG> this method be call by the -- operator for enums <END>
<BEG> modulenode create a new scope and self <SEG> so do not search for ivars <END>
<BEG> marks the current position in this input stream <END>
<BEG> writes an 32 bit unsigned integer value to the memory address <END>
<BEG> param exceptionclass param message return <END>
<BEG> increment the count of backtraces generate by code in this runtime <END>
<BEG> retrieve the invalidator for float reopen <END>
<BEG> deprecate internal api <SEG> to be remove <END>
<BEG> get whether to use the self-first jruby classloader <END>
<BEG> sets filter expression <SEG> and set it parent to this node <END>
<BEG> sets expression to evaluate if test be false <SEG> and set it parent to this node <END>
<BEG> sets the node type <END>
<BEG> sets the case expression <SEG> { code null } for default case <END>
<BEG> breaks execution of the script <END>
<BEG> read configuration option from url < code > configurl < code > <END>
<BEG> convenience method to return a name logger <SEG> without the application have to care about factory <END>
<BEG> issue a format log message with a level of trace <END>
<BEG> returns the formatted message <END>
<BEG> returns the object format use it tostring method <END>
<BEG> formats the message and return it <END>
<BEG> loads the { link org apache log log4j spi threadcontextmap } class specify by this provider <END>
<BEG> sets the underlying writer where exception be print to <END>
<BEG> gets the content of a < code > reader < code > a a string <END>
<BEG> get the user for this connection source <END>
<BEG> removes all value in the subject collection that be match by at least one of a collection of regular expression <END>
<BEG> returns an enumeration describe the available option <END>
<BEG> gets the current setting of the classifier <END>
<BEG> return a string to describe the option <END>
<BEG> return a description of the search <END>
<BEG> count nr of exta arc from other network compare to current network note that an arc be not 'extra ' if it be reverse <END>
<BEG> return distribution of a node in matrix form with matrix represent distribution with p [ i ] [ j ] = p node = j | parent configuration = i param ntargetnode index of the node to get distribution from <END>
<BEG> align set of node with the right most node in the list param node list of index of node to align <END>
<BEG> space out set of node evenly between top and bottom most node in the list param node list of index of node to space out <END>
<BEG> calculates the performance stats for the desired class and return result a a set of instances <END>
<BEG> returns the number of digit to output after the decimal point <END>
<BEG> return the y coord <END>
<BEG> param y the new value for it 's y po <END>
<BEG> method for build the classifier <END>
<BEG> get whether to output additional statistic such a std <END>
<BEG> returns true if the model be to be finalize or have be finalize after train <END>
<BEG> computes estimate error for tree <END>
<BEG> method just exist to make program easy to read <END>
<BEG> returns class with high frequency for give bag <END>
<BEG> returns number of possibly fractional instance in give bag <END>
<BEG> main method for test this class param argv the commandline option <END>
<BEG> get the minimum number of instance to allow at a leaf node return a < code > double < code > value <END>
<BEG> get the t1 distance <END>
<BEG> get whether to display model output in the old <SEG> original format <END>
<BEG> tool tip text for this property return the tool tip for this property <END>
<BEG> sets the destination output stream <END>
<BEG> return a vector with the classnames of all the file saver <END>
<BEG> set whether there be no header row in the data <END>
<BEG> gets all the file extension use for this type of file <END>
<BEG> gets whether the filename will be store a an extra attribute <END>
<BEG> return the url of the owner return the url <END>
<BEG> set the mintermfreq value <END>
<BEG> access the internal one-dimensional array <END>
<BEG> makes a deep copy of the vector <END>
<BEG> does post processing of the distance if necessary return by distance distance instance first <SEG> instance second <SEG> double cutoffvalue <END>
<BEG> returns the balltreeconstructor currently in use <END>
<BEG> set the distance function to use for near neighbour search <END>
<BEG> returns the standard deviation of coords per point <END>
<BEG> pads a string to a specified length <SEG> insert space on the right a require <END>
<BEG> set the target package constraint <END>
<BEG> set the structure of the parameter that be expect a input by this function <END>
<BEG> get a textual description of them map between mine schema field and incoming data field <END>
<BEG> returns a hashcode for this object <END>
<BEG> print the give long to the stream <END>
<BEG> check whether this version be new than the one from the give version string param o the version-string to compare with return true if this version be new than the give one <END>
<BEG> sets the function for generate the data <END>
<BEG> gets the current setting of the datagenerator rdg1 <END>
<BEG> return the default amplitude return the default amplitude <END>
<BEG> gets the upper boundary for the range of x return the upper boundary for the range of x <END>
<BEG> display a representation of this estimator <END>
<BEG> sets whether the size determination train test classifer be skip <END>
<BEG> set the upper run number for the experiment <END>
<BEG> gets the clusterer use by the filter <END>
<BEG> sets index of the attribute use <END>
<BEG> sets the index of the attribute use <END>
<BEG> get the clusterer use by this filter return the clusterer use <END>
<BEG> parses a list of option for this object <END>
<BEG> sets which attribute be to be act on <END>
<BEG> sets whether miss value be count a a match <END>
<BEG> returns whether to display the attribute index in the header <END>
<BEG> get the legend text vector return a < code > vector < code > value <END>
<BEG> get the evaluation metric to output a a comma-separated list <END>
<BEG> returns the event set descriptor return an < code > eventsetdescriptor [ ] < code > value <END>
<BEG> set the instance structure param structure an < code > instances < code > value <END>
<BEG> get the input structure return the structure of the input instance <END>
<BEG> accept a training set for display a text param e a < code > trainingsetevent < code > value <END>
<BEG> add an object to the list of those interested in recieving update information from the remoteexperiment param r a listener <END>
<BEG> adds the object to the history <END>
<BEG> get the default setting for this perspective return the default setting for this perspective <END>
<BEG> set the active perspective param perspectiveid the id of the perspective to make the active one <END>
<BEG> sets whether to use blank instead of tab <END>
<BEG> set the index of the attribute by which to colour the data <END>
<BEG> renders the legend for a numeric colour attribute param gx the graphic context <END>
<BEG> set the shape type for the plot data param st a fastvector of integer correspond to shape type see constant define in plot2d <END>
<BEG> serializes the supplied flow to json and write it out to the supply file param flow the { code flow } to serialize param file the { code file } to write to throw wekaexception if a problem occurs <END>
<BEG> get the image height in pixel return the height to use <END>
<BEG> when run in a graphical execution environment a step can make one or more popup viewer component available <END>
<BEG> get the map of complete image return the map of complete image <END>
<BEG> start processing throw wekaexception if a problem occurs <END>
<BEG> write out give byte [ ] a a literal <END>
<BEG> write out give string a an atom <END>
<BEG> get the separator character <END>
<BEG> check whether this folder be subscribe <END>
<BEG> remove any access control list entry for the give identifier from the access control list for this folder <END>
<BEG> get the message size <END>
<BEG> simpledateformat object be n't thread safe <SEG> so rather than create a separate such object for each request <SEG> we create one object and synchronize it use here so that only one thread be use it at a time <END>
<BEG> return a map of the capability the server provide <SEG> a per rfc 2449 <END>
<BEG> gets logmanger property for the running jvm <END>
<BEG> determines if the give throwable be a no content exception <END>
<BEG> parses command line argument <END>
<BEG> get the derivation order <END>
<BEG> compute composition of the instance by a univariate function <END>
<BEG> creates a gauss-legendre integrator of the give order <END>
<BEG> create a complex number give only the real part <END>
<BEG> computes the norm of the quaternion <END>
<BEG> get the constant 1 <END>
<BEG>  the upper bound of the support be always 1 no matter the parameter <END>
<BEG> returns a copy of the current error covariance matrix <END>
<BEG> fits a gaussian function to the observed point <END>
<BEG> get the scalar coordinate of the quaternion <END>
<BEG> get the plane second canonical vector <END>
<BEG> get the intersection of the instance and another sub-line <END>
<BEG> get incoming edge <END>
<BEG> get the element type from an array <END>
<BEG> returns the matrix v of the transform <END>
<BEG> convert a { link fieldmatrix } { link bigfraction } matrix to a { link realmatrix } <END>
<BEG> acknowledge the fact the step have be accept by the integrator <END>
<BEG> set the safety factor for stepsize control <END>
<BEG> increment the iteration count <END>
<BEG> gets the function to be optimize <END>
<BEG> return { code true } if the variable be restrict to non-negative value <END>
<BEG> generates a text report display summary statistic from value that have be add <END>
<BEG> raise a biginteger to a biginteger power <END>
<BEG> get the stored value associate with the give key param key key associate with the data return data associate with the key <END>
<BEG> compares two number give some amount of allow error <END>
<BEG> tests if a numbertransformer be present in the transformermap <END>
<BEG> add a real number to a complex number <END>
<BEG> return the absolute value return the result length of the vector in 2d plane <END>
<BEG> elementwise division with a scalar <SEG> with operand switch <END>
<BEG> computes a rank-1-update a = a + alpha x y ' <END>
<BEG> add a row vector to all row of the matrix <END>
<BEG> writes out this matrix to the give data stream <END>
<BEG> computes select eigenvalue of the real generalized symmetric-definite eigenproblem of the form a x = l b x or <SEG> equivalently <SEG> a - l b x = 0 <END>
<BEG> compute the singular value of a matrix <END>
<BEG> set this { link axisangle4d } to be equivalent to the give { link quaterniondc } <END>
<BEG> normalize the axis vector <END>
<BEG> find the point on the give plane which be close to the specify point < code > px <SEG> py <SEG> pz < code > and store the result in < code > result < code > <END>
<BEG> test whether the line with the general line equation < i > a x + b y + c = 0 < i > intersect the circle with center < code > centerx <SEG> centery < code > and < code > radius < code > <END>
<BEG> test whether the one circle with center < code > ax <SEG> ay < code > and square radius < code > radiussquareda < code > intersect the other circle with center < code > bx <SEG> by < code > and square radius < code > radiussquaredb < code > <SEG> and store the center of the line segment of intersection in the < code > x <SEG> y < code > component of the supplied vector and the half-length of that line segment in the z component <END>
<BEG> determine the signed distance of the give point < code > pointx <SEG> pointy < code > to the line define by the two point < code > x0 <SEG> y0 < code > and < code > x1 <SEG> y1 < code > <END>
<BEG> non-javadoc see org joml matrix3x2dc # m01 <END>
<BEG> set the value of this matrix by read 6 double value from the give { link bytebuffer } in column-major order <SEG> start at it current position <END>
<BEG> apply a rotation transformation to this matrix by rotate the give amount of radian about the specified rotation center < code > x <SEG> y < code > and store the result in < code > d < code > <END>
<BEG> interpolate between all of the quaternion give in < code > q < code > via non-spherical linear interpolation use the specified interpolation factor < code > weight < code > <SEG> and store the result in < code > d < code > <END>
<BEG> set this quaternion to be a copy of < code > q < code > <END>
<BEG> set this quaternion to the identity <END>
<BEG> non-javadoc see org joml quaternionfc # lookalong float <SEG> float <SEG> float <SEG> float <SEG> float <SEG> float <SEG> org joml quaternionf <END>
<BEG> determines the { link location } of a point in an areal { link geometry } <END>
<BEG> tests if the give point lie in or on the envelope <END>
<BEG> see com vividsolutions jts geom coordinatesequence # getx int <END>
<BEG> returns the y-offset use to obtain a precise coordinate <END>
<BEG> computes the < tt > cover < tt > predicate between a { link preparedpolygon } and a { link geometry } <END>
<BEG> add a point compute externally <END>
<BEG> merge this label with another one <END>
<BEG> returns the y coordinate of the node return y coordiante of the node <END>
<BEG> gets the octant of the segment start at vertex < code > index < code > <END>
<BEG> returns a list contain a coordinate from each polygon <SEG> linestring <SEG> and point find inside the specified geometry <END>
<BEG> gets the ccw edge around the left face before this edge <END>
<BEG> searches the receiver for the specify value use the binary search algorithm <END>
<BEG> compares the specified object with the receiver <END>
<BEG> replaces the element at the specified position in the receiver with the specified element ; < b > warning : < b > does not check precondition <END>
<BEG> assigns the result of a function to each value ; < tt > v [ i ] = function v [ i ] < tt > <END>
<BEG> ensures that the receiver can hold at least the specified number of element without need to allocate new internal memory <END>
<BEG> set configuration option for the handler <END>
<BEG> set set the output directory relative to the root of the root directory of the assembly <END>
<BEG> set if set to true <SEG> this property will unpack all dependency into the specify output directory <END>
<BEG> set path relative to project basedir where javadoc resource be locate <END>
<BEG> set specify the taglet artifact to be include in the tagletpath option for find taglet class file class <END>
<BEG> set the artifactid to which this rule applies <END>
<BEG> set the comparison method that this rule specifies <END>
<BEG> sets the number of time that { link jmsconnector } will attempt to connect or reconnect before give up <END>
<BEG> is use to specify the last sequence number to be replay openwire : property version=1 <END>
<BEG> return see org apache activemq kaha storelocation # getoffset <END>
<BEG> non-javadoc see org hornetq core config configuration # setsecuritysettings java util map <END>
<BEG> non-javadoc see org hornetq core paging cursor pagecursor # recoverpreparedack org hornetq core paging cursor pageposition <END>
<BEG> non-javadoc see org hornetq core asyncio aiocallback # onerror int <SEG> java lang string <END>
<BEG> non-javadoc see org hornetq core persistence storagemanager # aftercompleteoperations org hornetq core journal iocompletion <END>
<BEG> non-javadoc see org hornetq core persistence storagemanager # storepagecompletetransactional long <SEG> long <SEG> org hornetq core page cursor pageposition <END>
<BEG> return see java util map # isempty <END>
<BEG> used to identify the id of a client connection <END>
<BEG> performs a shutdown only <SEG> by which the thread pool be shutdown by not graceful nor aggressively <END>
<BEG> read a frame from the network <END>
<BEG> enable server hostname verification for tls connection <END>
<BEG> the server 's amqp specification version <END>
<BEG> < p > an error code represent why the action fail on this entry <END>
<BEG> < p > an md5 digest of the non-url-encoded message system attribute string <END>
<BEG> returns the global event handler for all registered socket <END>
<BEG> retrieve the socket type for the current 'socket ' <END>
<BEG> returns the time in millisecond until the next timer <END>
<BEG> returns the number of write byte by this stream so far <END>
<BEG> returns { code true } if a { link channeloption } exist for the give { code name } <END>
<BEG> return the int value of the filedescriptor <END>
<BEG> returns a string which contain all detail to log the { link object } <END>
<BEG> tests if the specify key-value pair have be cache in openssl-to-java cache <END>
<BEG> log an exception throwable at the warning level with an accompanying message <END>
<BEG> is this logger instance enable for level error ? <END>
<BEG> expects a double argument great than the give value <END>
<BEG> expects a byte that match both give expectation <END>
<BEG> comparable argument equal to the give value accord to their compareto method <END>
<BEG> use it to capture the argument <END>
<BEG> creates a $ merge pipeline stage that merge into the specified namespace use the specify option <END>
<BEG> sets the collation param collation the collation return this mongodb server release 3 4 <END>
<BEG> sets the array filter option param arrayfilters the array filter <SEG> which may be null return this since 3 6 mongodb server release 3 6 <END>
<BEG> sets the comment to the query <END>
<BEG> creates a filter that match all document where the value of the give field be less than or equal to the specify value <END>
<BEG> creates a filter that match all document contain a field with grid coordinate data that exist entirely within the specified circle <END>
<BEG> set to true if a new document should be insert if there be no match to the query filter <END>
<BEG> gets the value of this position return the value of the position <END>
<BEG> the early version of the wire protocol that this mongodb server be capable of use to communicate with client <END>
<BEG> gets the cluster identifier <END>
<BEG> returns a collection match a give string <END>
<BEG> resets the query option <END>
<BEG> creates a file entry <END>
<BEG> removes the last element { code e } such that { code o equal e } <SEG> if such an element exists in this deque <END>
<BEG> gets the reply header <END>
<BEG> return the total number of write operation that be start <END>
<BEG> gets the name associate with the error code <END>
<BEG> sets whether there be a a finalize method create that clean up instance of dbcursor that the client do not close <END>
<BEG> gets an operation whose execution explain this operation <END>
<BEG> returns true if the user be a readonly user <END>
<BEG> sets the number of document to return per batch <END>
<BEG> sets the maximum number of document or index key to scan when execute the query <END>
<BEG> returns the object id or def if not set <END>
<BEG> gets whether any decode transformer have be register for any class <END>
<BEG> reads and return a single long value from the buffer <END>
<BEG> param dispatchtarget param dispid param a1 return variant return by underlie calln <END>
<BEG> indirect the native pointer to < code > malloc < code > space <SEG> a la < code > pointer read < code > <END>
<BEG> returns the simple name of this library <END>
<BEG> the middle 12 bit of the return value encode the subsystem <END>
<BEG> compares two { code address } instance numerically <END>
<BEG> returns a address instance represent the specify { code int } value <END>
<BEG> bulk put method for multiple { code pointer } value <END>
<BEG> retrieves the arithmetic mean of the recall score calculate for each evaluated sample <END>
<BEG> calculates the recall score for the give reference and predict span <END>
<BEG> extract gold coref cluster information <END>
<BEG> loads a crf classifier from an inputstream <SEG> and return it <END>
<BEG> verifies if this mention appear after the parameter in textual order <END>
<BEG> make a new label with this < code > string < code > a a value component <END>
<BEG> assume we have the lambda in the array and we need only the derivative now <END>
<BEG> get k good par for the sentence <END>
<BEG> fills in the iscore array of each category over each span of length 2 or more <END>
<BEG> does whatever one need to do to a particular parse tree <END>
<BEG> lets you test out the treebinarizer on the command line <END>
<BEG> annotate mention <END>
<BEG> returns the next token from this tokenizer <END>
<BEG> param s a collection of key <END>
<BEG> a simple string representation of this twodimensionalcounter <SEG> which have the string representation of each key pair on a separate line <SEG> follow by the count for that pair <END>
<BEG> returns a string array of punctuation tag that evalb-style evaluation should ignore for this treebank language <END>
<BEG> say whether this character be an annotation introducing character <END>
<BEG> accepts a string that be a punctuation tag name <SEG> and reject everything else <END>
<BEG> returns the positional index of the left edge of a tree < i > t < i > within a give root <SEG> a define by the size of the yield of all material precede < i > t < i > <END>
<BEG> returns the positional index of the right edge of a tree < i > t < i > within a give root <SEG> a define by the size of the yield of all material precede < i > t < i > plus all the material contain in < i > t < i > <END>
<BEG> casts to a double array <END>
<BEG> demotes a key in the queue <SEG> add it if it be n't there already <END>
<BEG> samples with replacement from a collection <SEG> use your own { link random } number generator <END>
<BEG> style the tag for a particular channel this style param channel the channel to style param style the style to use <END>
<BEG> return a mapfactory that return an identityhashmap <END>
<BEG> given a string the method use regex to check if the string only contain numeric character param s a string to check use regex return true if the string be valid <END>
<BEG> defines the default < code > charset < code > use in case the buffer represent an 8-bit < code > charset < code > <END>
<BEG> set color for the maximum value highlight <SEG> or null to draw no highlight <END>
<BEG> the character encoding of the body of this message <END>
<BEG> sets whether to block when the < code > borrowobject < code > method be invoke when the pool be exhaust the maximum number of active object have be reach <END>
<BEG> unlinks the last element in the queue <SEG> wait until there be an element to unlink if the queue be empty <END>
<BEG> sets the indexed setter a the specify method <END>
<BEG> < pre > a version string for this interface <END>
<BEG> create a new { code codedoutputstream } that write to the provide { link byteoutput } <END>
<BEG> gets a view of the builder a a list of builder <END>
<BEG> an unsafe operation that return a { link bytestring } that be back by the provide buffer <END>
<BEG> creates a slice over the specified array range <END>
<BEG> gets the utf-8 sequence length of the code point at { code position } <END>
<BEG> accepts a { link workexecutor } visitor for execute the discrete work encapsulate by this work instance use the supplied connection <END>
<BEG> retrieve the current follow-on-locking setting <END>
<BEG> method to exclude unlisted class <END>
<BEG> method to add a jar file to the persistence unit <END>
<BEG> executes an update statement <END>
<BEG> add an alias for this table <END>
<BEG> add a column to be set to a value for update statement <END>
<BEG> non-javadoc see bndtools editor model ibndmodel # setrunvmargs java lang string <END>
<BEG> see org eclipse jface text ilinetracker # getnumberoflines int <SEG> int <END>
<BEG> see org eclipse jface text ilinetracker # computenumberoflines java lang string <END>
<BEG> determines the equality of two { code configurationpermission } object <END>
<BEG> checks if this deploymentcustomizerpermission would imply the parameter permission <END>
<BEG> returns a new { code unit } that be the subtraction between this { code unit } and the { code unit } specify <END>
<BEG> returns the type of the right endpoint of this version range <END>
<BEG> remove a service from this { code servicetracker } <END>
<BEG> return an array of service object for all service be track by this { code servicetracker } <END>
<BEG> get the list of principal who have any kind of permission on this node <END>
<BEG> encodes a raw byte array into a base64 < code > char [ ] < code > representation i accordance with rfc 2045 <END>
<BEG> returns a predicate that evaluate to { code true } if the object reference be test be null <END>
<BEG> returns a predicate that evaluate to { code true } if the object be test { code equal } the give target or both be null <END>
<BEG> replaces this reference value with the give one <END>
<BEG> gets all the chunk in this element <END>
<BEG> returns the upper right y-value <END>
<BEG> set the hyphenation engine to this < code > chunk < code > <END>
<BEG> signals that an new page have to be start <END>
<BEG> pops the value of pendingtr and pendingtd from a state stack <END>
<BEG> sets the explicit masking <END>
<BEG> gets the direct conversion of < code > char < code > to < code > byte < code > <END>
<BEG> if this dictionary refers to a child that be a file attachment add to a page <SEG> you need to specify the page with setfileattachmentpage or setfileattachmentpagename <SEG> and then specify the index of the attachment add to this page or use setfileattachmentname <END>
<BEG> setter for the interface with the overrule draw method <END>
<BEG> see java io randomaccessfile # close cleans the mapped bytebuffer and close the channel <END>
<BEG> ends handle of current pdf stream decompression <END>
<BEG> see com itextpdf text pdf parser renderlistener # endtextblock <END>
<BEG> writes the data content to an < code > outputstream < code > <END>
<BEG> < p > sets a square region of the bit matrix to true < p > param leave the horizontal position to begin at inclusive param top the vertical position to begin at inclusive param width the width of the region param height the height of the region <END>
<BEG> return base 2 log of a in gf 256 <END>
<BEG> since 2 0 8 <END>
<BEG> non-javadoc see com itextpdf text element # isnestable <END>
<BEG> adds the modification date <END>
<BEG> removes a child node <END>
<BEG> see xmpschemaregistry # getprefixes <END>
<BEG> when decode an image <SEG> the number of row to advance in the source for every pixel decode <END>
<BEG> set if this be a tagged pdf <END>
<BEG> sets the alternate name of the field desc <END>
<BEG> set the access permission grant to the recipient <END>
<BEG> this will get the name of the referenced page <END>
<BEG> this be the template reference <END>
<BEG> param b the destination <END>
<BEG> this will set an action to be perform when the annotation receive the input focus <END>
<BEG> this will set an action to be perform when the page be open <END>
<BEG> this will retrieve the intensity of the applied effect <END>
<BEG> this will retrieve the dash style use for draw the border <END>
<BEG> indicates if a timestamp be require <END>
<BEG> this will set the precision or denominator of a fractional amount <END>
<BEG> set the display doc title preference <END>
<BEG> return the rdfsyntax with the specify file extension <END>
<BEG> get a built-in simple type of the give name revisit : it still not decide within the schema wg how to define the ur-types and if all simple type should be derive from a complex type <SEG> so a of now we ignore the fact that anysimpletype be derive from anytype <SEG> and pass 'null ' a the base of anysimpletype <END>
<BEG> returns true if the encoding name be a valid java encoding <END>
<BEG> < p > delete the give triple from the union model ; the actual component model to be update will be the designated or default { linkplain # getbasegraph updateable } graph <END>
<BEG> remove the triple at element < code > i < code > of < code > content < code > <END>
<BEG> override this to track all the object remove ; each object will be a statement <SEG> a statement [ ] <SEG> a list statement <SEG> an iterator statement <SEG> or a model <END>
<BEG> instantiate the forward rule engine to use <END>
<BEG> constructor method that build an instance of the associated reasoner param configuration a set of arbitrary configuration information to be pass the reasoner encode within an rdf graph <END>
<BEG> hash function override <END>
<BEG> calls { link # createintegerliteral number <SEG> iri } with the supplied value and { link xmlschema # short } a parameter <END>
<BEG> select all slave <END>
<BEG> returns a new { link clusterclientoptions builder } to construct { link clusterclientoptions } <END>
<BEG> create a new { link clustertopologyrefreshoptions } use default setting <END>
<BEG> unit for the { link # getadaptiverefreshtimeout } <END>
<BEG> create a new client that connect to the supply { link redisuri uri } with default { link clientresources } <END>
<BEG> assert that an array have no null element <END>
<BEG> timeout between adaptive cluster topology update <END>
<BEG> apply { link redisuri } setting such a ssl timeout password <END>
<BEG> return { literal true } if the method define a { link timeout } parameter <END>
<BEG> invoke the specify { link method } against the supplied target object with the supplied argument <END>
<BEG> create a { link rediscommandtimeoutexception } with a detail message give the timeout <END>
<BEG> returns the maximum number of object that can be allocate by the pool check out to client <SEG> or idle await checkout at a give time <END>
<BEG> returns and condition for collection of nested < code > condition < code > param condition - nest condition object return condition <END>
<BEG> return codec name in string <END>
<BEG> returns the field object that be declare in the give class or any of it 's super type that have none of the give modifier <END>
<BEG> indicate whether the expression be for a mapped property or not <END>
<BEG> remove any exist value for the specified key on the specify map property <END>
<BEG> sets the optional metadata instruct amazon s3 how to handle the uploaded data e g <END>
<BEG> return the redirect information where all request will be redirect to <END>
<BEG> return the list of rout rule that can be use for configure redirects if certain condition be meet <END>
<BEG> the public access block configuration currently in effect for this amazon s3 bucket <END>
<BEG> sets the optional key marker indicate where in the result to begin list <END>
<BEG> sets the optional < code > encodingtype < code > parameter indicate the encode method to be apply on the response <END>
<BEG> sets the optional prefix parameter restrict the response to key that begin with the specify prefix <END>
<BEG> sets the server-side encryption algorithm when encrypt the object use aws-managed key <END>
<BEG> sets the serialization of csv-encoded select result <END>
<BEG> sets the list of grant that control access to the stag result <END>
<BEG> sets the serialization format of the object <END>
<BEG> fluent method to set the topic arn for this configuration param topicarn arn for the sns topic return this object for method chaining <END>
<BEG> converts the specified accelerate configuration into an xml byte array <END>
<BEG> returns the value of the member with the specify name in this object <END>
<BEG> return file name of the product feed <END>
<BEG> the secure url from which canvas app content be load <END>
<BEG> the plot outline of the film <END>
<BEG> objects tag in the story users <SEG> pages <SEG> etc <END>
<BEG> the privacy network restriction <END>
<BEG> convenience method to check the status of the account link return { code true } if unlinked <SEG> { code false } if link <END>
<BEG> returns a java representation of a facebook month-year { code date } string <END>
<BEG> the consumer or client secret assign to the application by the provider <END>
<BEG> return user id since twitter4j 2 0 4 <END>
<BEG> send open confirmation <END>
<BEG> open a new { link session } on this connection <END>
<BEG> it be assume that the pass handler will not execute for a long time <END>
<BEG> get the size of set b <END>
<BEG> get the number of character substitution need to change one character sequence into another <END>
<BEG> sets the text to be append when a new line be add <END>
<BEG> appends a charsequence to this string builder <END>
<BEG> creates a matcher from a string represent a set of character <END>
<BEG> gets the quote matcher currently in use <END>
<BEG> creates a tokenizer that can tokenize the content of this builder <END>
<BEG> sets the select foreground color of this < code > colorhighlighter < code > and notifies register changelisteners <END>
<BEG> returns true if the cell identify by this adapter display the hierarchical node <END>
<BEG> creates and return a highlighter which highlight with alternate background <SEG> start with the base <END>
<BEG> < p > sets the opacity use by the renderer to generate shadow < p > < p > consecutive call to { link # createshadow } will all use this opacity until it be set again < p > < p > the opacity be comprise between 0 0f and 1 0f ; 0 0f be fully transparent and 1 0f fully opaque <END>
<BEG> < p > gets the distance <SEG> in graph unit <SEG> between two major grid line on the y axis < p > return the space between two major grid line on the y axis see # setmajory double see # getmajorx see # setmajorx double see # getminorcounty see # setminorcounty int <END>
<BEG> set the current image to an image point to by this file <END>
<BEG> gets the current value of the < code > dragenabled < code > property <END>
<BEG> return the comparator use <END>
<BEG> removes the give highlighter <END>
<BEG> returns whether or not this < code > jxmonthview < code > should display week number <END>
<BEG> sets the color use to draw the foreground of the month string <END>
<BEG> sets a painter to use to paint the background of this jxpanel <END>
<BEG> notifies all listener that have register interest for notification on this event type <END>
<BEG> creates and return a rollovercontroller appropriate for this component <END>
<BEG> creates and return the rolloverproducer to use with this component <END>
<BEG> returns the < code > tablecolumnext < code > at view position < code > columnindex < code > <END>
<BEG> sets a new value for the interpolation set <END>
<BEG> creates and return a stringvalue use for render day in a month <END>
<BEG> returns an object which represent the data to be transfer <END>
<BEG> fetch the data in a text plain format <END>
<BEG> < p > sets the prompt background painter on < code > textcomponent < code > and repaint the component to reflect the change <END>
<BEG> returns the unselected background to use for the rendering component <END>
<BEG> returns the shared jxfindpanel <END>
<BEG> creates the listener to table 's property change <END>
<BEG> update internal state after the visibility of the column be change to visible <END>
<BEG> return true if this vm be run on windows 2003 <END>
<BEG> creates a new { code paint } that be a checkered effect use the specify color <END>
<BEG> constructs a menu tree from a list of action or list of list or action <END>
<BEG> sets if the matching will be case insensitive unicode compliant ; default be { code false } <END>
<BEG> the getter pair of { link # settemplateexceptionhandler templateexceptionhandler } <END>
<BEG> returns the default instance of the wrapper <END>
<BEG> sets the { link memberaccesspolicy } ; default be { link defaultmemberaccesspolicy # getinstance version } <SEG> which be not appropriate if template editor be n't trust <END>
<BEG> returns the default object wrapper that be use when a wrapping template model be construct without be pass an explicit object wrapper <END>
<BEG> set the template body <END>
<BEG> 获取一个自定义的函数签名 唯一标示符 <SEG> 也是 cache 的 key <END>
<BEG> return < code > true < code > if the specify char < code > c ! = 0 < code > param c return boolean result <END>
<BEG> print a byte to internal buffer or output o or writer param b return this builder <END>
<BEG> < p > modify the textual content of this node <END>
<BEG> < p > clones this element node <SEG> set it a new name in the process <END>
<BEG> < p > returns the average of all the number contain in the provided iterable e g <END>
<BEG> < p > escapes the specified target text a require for java code <END>
<BEG> get the current macro name stack return object [ ] with the macro name stack content <END>
<BEG> see org apache velocity runtime visitor basevisitor # visit org apache velocity runtime parser node astprocess <SEG> java lang object <END>
<BEG> check to see if there be another element in the array <END>
<BEG> creates an order agnostic matcher for { link iterable } s that match when a single pas over the examined { link iterable } yield a series of item <SEG> each satisfy one matcher anywhere in the specified collection of matcher <END>
<BEG> creates a matcher that match when either of the specified matcher match the examined object <END>
<BEG> returns the name authentication parameter <END>
<BEG> marks that the test run should stop <END>
<BEG> see junit framework testlistener # addfailure test <SEG> assertionfailederror <END>
<BEG> returns the stacktrace of the give throwable a a string <END>
<BEG> override to tear down your specific external resource <END>
<BEG> adds to { code error } if the test class 's single constructor take parameter do not override <END>
<BEG> returns domain attribute of the cookie <END>
<BEG> tells whether the operating system family be windows <END>
<BEG> asserts that two collection contain the same element in the same order <END>
<BEG> asserts that a { code tstvalue } be writeable <END>
<BEG> whether cdata section and text node should be consider the same <END>
<BEG> sets the character use for thousand separator <END>
<BEG> sets the character use to separate the mantissa from the exponent <END>
<BEG> < p > validate convert a < code > biginteger < code > use the specified pattern and or < code > locale < code > <END>
<BEG> check if the value be within a specified range <END>
<BEG> convert a character at a specified position to an integer value <END>
<BEG> < p > performs vector to matrix multiplication : < br > < br > c = a b < br > < br > c < sub > j < sub > = & sum ; < sub > k=1 : n < sub > { b < sub > k < sub > a < sub > kj < sub > } < p > param a the left vector in the multiplication operation <END>
<BEG> < p > changes the sign of every element in the matrix < br > < br > a < sub > ij < sub > = -a < sub > ij < sub > < p > param a a matrix <END>
<BEG> < p > performs the following operation : < br > < br > c = & alpha ; a + b < br > c < sub > ij < sub > = & alpha ; a < sub > ij < sub > + b < sub > ij < sub > < br > < p > < p > matrix c can be the same instance a matrix a and or b <END>
<BEG> converts { link fixedmatrix3x3_64f } into { link densematrix64f } <END>
<BEG> computes the nullity of a matrix use the specify tolerance <END>
<BEG> returns < code > true < code > if the matrix be in array format <SEG> else < code > false < code > <END>
<BEG> prints the coordinate format to the underlying stream <END>
<BEG> solves for < code > b < code > <SEG> overwrite it on return <END>
<BEG> determines if a file or folder should be select <END>
<BEG> gets name option a character <END>
<BEG> implement comparable <END>
<BEG> removes % nn encoding from a string <END>
<BEG> converts a string to a char array null-safe <END>
<BEG> remove a jar suffix param suffix the suffix return true when remove throw illegalargumentexception for a null suffix <END>
<BEG> directly validate simple field <SEG> call completevalidation on definition field <END>
<BEG> this element be use to define a set of workflowpropertygroups <SEG> which be use to specify which document property should be serialize during the document serialization process <END>
<BEG> the viewid of the view return the viewid <END>
<BEG> determine the file to use for timestamp checking <END>
<BEG> map the route for http post request param path the path param route the route param engine the template engine <END>
<BEG> map the route for http post request param path the path param accepttype the accept type param route the route param transformer the response transformer <END>
<BEG> normalize the path by suppress sequence like path and inner simple dot <END>
<BEG> sets the value store in the map under the key specify by the current node <END>
<BEG> simply return the input string un-modified in any way <END>
<BEG> gets the action invocation the execution state <END>
<BEG> returns true if the specify ascii character be low case <END>
<BEG> resets the message bytes to an uninitialized state <END>
<BEG> return the name of the parameter to add to the ajax callback <SEG> or null if no parameter should be add <END>
<BEG> return the window size of the recorded request <END>
<BEG> wrap an object into a message proxy support { link message } <SEG> { link notmessage } and { link messagecontext } <END>
<BEG> checks if the { link page } annotation be present on the argument field <END>
<BEG> peeks at the top element on the stack without change the content of the stack <END>
<BEG> report an internal entity declaration <END>
<BEG> a factory method to create the index for element return document me ! <END>
<BEG> called after the unmarshalling completes <END>
<BEG> this will retrieve the namespace prefix of the < code > attribute < code > <END>
<BEG> this get the value of the attribute <SEG> in < code > long < code > form <SEG> and if no conversion can occur <SEG> throw a < code > { link dataconversionexception } < code > return < code > long < code > value of attribute <END>
<BEG> check to see if the object match a predefined set of rule <END>
<BEG> return a filter that match any { link attribute } data with the specified namespace <END>
<BEG> this set a custom jdomfactory for the builder <END>
<BEG> check if an entry be present in the table <END>
<BEG> returns the symbol table <END>
<BEG> look up an attribute 's value by index <END>
<BEG> get the scheme-specific part for this uri everything follow the scheme and the first colon <END>
<BEG> sets whether an attribute be specify in the instance document or not <END>
<BEG> this be quite simple : just need to locate the last mapping for the prefix <SEG> if any : <END>
<BEG> ! ! ! <END>
<BEG> < schemaglobalattribute ref > <END>
<BEG> remove whitespace from mime contain encode base64 data <END>
<BEG> when use with < code > setsaveprettyprint < code > this set the offset amount to use <END>
<BEG> returns a qname hold the value of the specify string <END>
<BEG> specifies that the parser produce by this factory will provide support for xml namespaces <END>
<BEG> locates a property descriptor <END>
<BEG> returns an specific field of some class <END>
<BEG> get the primitive type for a boxed one <END>
<BEG> get the represent character of a primitive type <END>
<BEG> returns the xmlreader to be use for the source <END>
<BEG> sets the thread id of the message <SEG> which be a unique identifier for a sequence of chat message <END>
<BEG> returns the number of roster item in this roster packet <END>
<BEG> returns the error condition <END>
<BEG> sets the subscription processing mode <SEG> which dictate what action smack will take when subscription request from other user be make <END>
<BEG> removes a roster entry from the roster <END>
<BEG> gets the entry map to the key specify <END>
<BEG> returns the password to use when join this conference room <END>
